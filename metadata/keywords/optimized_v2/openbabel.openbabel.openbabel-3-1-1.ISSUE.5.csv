quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Security,"Thanks for finding this. Fixed in r4959. The commit message is below and may explain why it started to go wrong. Fix #3544142 crash when reading some datafiles for FP3 and FP4 fingerprints.; There was a bug - accessing after the end of a std::string. This was tolerated in VC9 but not VC10. Since the bug has been there for 5 years I guess other compilers have become stricter too. Incidentally, in bug.mol shouldn't the charge on the Cl be negative? . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1195#issuecomment-281802063:209,access,accessing,209,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1195#issuecomment-281802063,1,['access'],['accessing']
Security,"Thanks for the reminder - sorry for the very slow review. It looks okay. My last concern is that with the current implementation, there's nothing guaranteeing that a molecule will have a full set of partial charges. I think I'd prefer that the OBPartialCharge class only accept charges as a full vector<double> and checks to make sure it's equal to the number of atoms before storing. The reader should then push_back() into a temporary vector in the gauss format.cpp code. This way, if there's somehow a corrupted file (e.g., it got killed by the queuing software before the job finished) the partial charges are still safe - it won't store a set of ESP charges that are only half the molecule. I realize that's an unlikely case, but I'm trying to think from the library API perspective - you can access a set of vector<double> but set the charges one-by-one. That's asymmetric.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1752#issuecomment-373527358:798,access,access,798,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1752#issuecomment-373527358,1,['access'],['access']
Security,The 'smi' output format doesn't canonicalize the SMILES.; 'can' should be used instead. echo 'O=C1NC(=O)C2=CC=CC3=C2C1=CC=C3' | babel -ican -ocan; O=c1[nH]c(=O)c2cccc3cccc1c23; 1 molecule converted; 34 audit log messages. echo 'O=c1[nH]c(=O)c2cccc3c2c1ccc3' | babel -ican -ocan; O=c1[nH]c(=O)c2cccc3cccc1c23; 1 molecule converted; 1 info messages 33 audit log messages. Original comment by: georgetu,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/986#issuecomment-281796662:202,audit,audit,202,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/986#issuecomment-281796662,2,['audit'],['audit']
Security,"The InChI string is built in layers. In the present case, remove the auxiliary layer, i.e. submit only. ```; InChI=1S/C25H35N3O2/c1-17-15-18-9-6-4-3-5-7-10-19-12-13-21(27-19)24(18)25(30-17)23(29-2)16-22(28-25)20-11-8-14-26-20/h8,11-14,17-18,23-24,27-28H,3-7,9-10,15-16H2,1-2H3/b22-20-/t17-,18-,23-,24-,25+/m0/s1; ```. prior the keyword `AuxInfo` to openbabel (for instance version 3.1.1 as packaged for Linux Debian 13/trixie) in a file with a command in a pattern like. ```shell; $ obabel -iinchi ./test.inchi -osmi; C[C@H]1C[C@@H]2CCCCCCCc3ccc([C@H]2[C@@]2([C@H](C/C(=C/4\C=CC=N4)/N2)OC)O1)[nH]3	; 1 molecule converted; ```. ----. Note; if there are only a few structure <-> InChI conversions, the [test page](https://iupac-inchi.github.io/InChI-Web-Demo/) can be useful for you:. ![regeneration](https://github.com/user-attachments/assets/90578c2f-94d1-4624-80c5-016f0154f8ba). From there you can save the result (floppy disk icon) for instance as SMILES string, or .mdl/sdf file. (Note however, that the first time accessing this page there can be some delay to load every bits and bolts into the cache of your browser, see [here](https://github.com/IUPAC-InChI/InChI-Web-Demo/issues/6)). Else InChI trusts distributes portable references executables [here](https://github.com/IUPAC-InChI/InChI/releases) for either combination of (32/64 bit) and (Linux/Windows) -- currently version 1.07.1*. A couple of Linuxes provide it by their repositories (e.g., [DebiChem](https://tracker.debian.org/pkg/inchi), else check with [repology](https://repology.org/project/inchi/packages)), too. \* Current planning schedules the release of InChI 1.07.2 close to the end of November / start of December 2024. I lack insight in openbabel's implementation if openbabel uses InChI 1.03 (published 2010, the last distributed under LGPL before adopting a bespoke license), or InChI 1.07.1 (August 2024, now MIT license), or one within this interval.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2730#issuecomment-2447287325:1019,access,accessing,1019,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2730#issuecomment-2447287325,1,['access'],['accessing']
Security,"The SWIG tool used to generate the Python and Perl scripting ; language wrappers can also produce Java code to wrap an ; underlying C++ library. To facilitate access to other open tools like JMol, CDK, Octet, etc., ; a SWIG wrapper in Java might be a good first start to access ; libopenbabel from other tools. Reported by: @ghutchis. Original Ticket: ""openbabel/feature-requests/60"":https://sourceforge.net/p/openbabel/feature-requests/60",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1429:159,access,access,159,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1429,2,['access'],['access']
Security,"The _match member of the OBNode class in; smarts[.h,.cpp] is getting corrupted. On freeing:. if (_match); {; delete _match;; _match = NULL;; }. The delete causes a segfault, presumably from an; already deleted _match object. The only method which; accesses this is the SetMatch() method, which is called; often. For now, the segfault is prevented since the delete is; commented out, but this should be followed up to find; the root of the cause. (After calling delete, _match; should have been set to NULL.). -Geoff. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/396:248,access,accesses,248,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/396,1,['access'],['accesses']
Security,The attached molecule causes SEGV (illegal memory access) when converted to SVG. It does not matter which input format is used (can be converted to various formats with no problem). It does not matter if GUI or command line is used. The bug is reproducible both on Linux and Windows. Contact: kaupo.palo[at]osa.pri.ee. Reported by: *anonymous,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1071:50,access,access,50,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1071,1,['access'],['access']
Security,"The change I referred to was in the columns after the label about arginine/alanine and prior to the atom's coordinates:. ![change](https://user-images.githubusercontent.com/19709084/170869519-af9e2f37-1db0-42e4-a23c-05579a25f1b9.png). Re the `.pdb` file, the most relevant entry to your story I was able to identify dates back 2013 when (apparently) the PDB equally provided access to (maybe a subset of) the data as `.sdf` (which do contain bond order). To quote the [post](https://www.mail-archive.com/openbabel-discuss@lists.sourceforge.net/msg02983.html):. > If your ligand really came from the PDB, you can download the ligand; in SD format. (Just scroll down to ""Ligand"" and click the download; link.) SD files will have the bonding info and should solve your; problem. _Perhaps_ the edit you intend to perform works better out in [RDKit](https://rdkit.readthedocs.io/en/latest/Cookbook.html?highlight=pdb#d-functionality-in-the-rdkit). With a throw-away script like. ```python; #!/bin/usr/env python3. import os. import rdkit; from rdkit import Chem. mol1 = Chem.MolFromPDBFile(""4gq6.pdb""); sdf_content = str(Chem.MolToMolBlock(mol1)). try:; with open(""report.sdf"", mode=""w"",encoding=""utf-8"") as newfile:; newfile.write(sdf_content); except OSError:; print(""Error to deposit the permanent record.""); ```; this warning is not reported, _possibly_ RDKit uses a different approach on [kekulization](https://rdkit.readthedocs.io/en/latest/Cookbook.html?highlight=kekulization#using-a-different-aromaticity-model).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2481#issuecomment-1140448101:375,access,access,375,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2481#issuecomment-1140448101,1,['access'],['access']
Security,The documentation on the website is outdated. I submitted some requests (below) to update it but no response. The main site doesn`t even mention the 2.3.2 release. If you give me access to the wiki I can try to update some issues. ; https://sourceforge.net/p/openbabel/feature-requests/165/; https://sourceforge.net/p/openbabel/feature-requests/164/. Original comment by: witekmo,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1259#issuecomment-281803525:179,access,access,179,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1259#issuecomment-281803525,1,['access'],['access']
Security,"The fingerprint definition file ""patterns.txt"" contains problems. It starts:. [+] 1; [-] 2; [#6][CX3](=O) 3 aldehyde or ketone; [CX3H1](=O)[#6] 4 aldehyde. The first two patterns are missing human-readable text. As a result, the -xs and -xu options to explain why the bit is set/unset do not work. They display nothing, not even a ""\t"" to separate an empty string. Also, the definitions for ""11 semicarbazone"" and ""12 thiosemicarbazone"" are missing the tab before the ""11"" and ""12"". As a result the descriptions look like:. hydrazone 11 semicarbazone 12 thiosemicarbazone oxime. to fix:; - replace the space before those numbers with a tab; - add validation code in the parser to make sure the files are in the correct format. Reported by: dalke",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/770:647,validat,validation,647,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/770,1,['validat'],['validation']
Security,"The following SMILES cause (seemingly) infinite loops in FindLSSR -- these are from TJ O'Donnell on the mailing list. c1ccc(cc1)c1c2ccccc2c2c3c4ccccc4c(c4ccccc4c13)c1c3ccccc3c3c(c4ccccc24)c2ccccc2c2cccc1c32	11433992; c1ccc2c(c1)ccc1cc3c4c(cccc4c4c5c6cc7ccc8ccccc8c7c7cccc(c67)c5c5c(c34)c3cccc4c6c(ccc7ccccc67)cc5c34)c21	11445613; c1ccc2c(c1)sc1cc3sc4ccccc4n4c5ccc(cc5)c5ccc(cc5)n5c6cc7c(sc8ccccc8n7c7ccc(cc7)c7ccc(cc7)n2c1cc34)cc6sc1ccccc51	20793318; c1ccc2c(c1)oc1cc3oc4ccccc4n4c5ccc(cc5)n5c6cc7c(oc8ccccc8n7c7ccc(cc7)n2c1cc34)cc6oc1ccccc51	20793319. Incidentally, the call chain is:. *** Open Babel Audit Log in Kekulize; Ran OpenBabel::Kekulize; ==============================; *** Open Babel Audit Log in FindSSSR; Ran OpenBabel::FindSSSR; ==============================; *** Open Babel Audit Log in FindRingAtomsAndBonds; Ran OpenBabel::FindRingAtomsAndBonds; ==============================; *** Open Babel Audit Log in IsClosure; Ran OpenBabel::PerceiveClosureBonds; ==============================; *** Open Babel Audit Log in FindLSSR; Ran OpenBabel::FindLSSR. We didn't need this in v2.2 or earlier. Do we need LSSR when finding closure bonds?. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1025:601,Audit,Audit,601,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1025,5,['Audit'],['Audit']
Security,"The following aromatic SMILES is not converted corectly into its kekule form:. c12-c3c(cc(N)cc3)Cc1cccc2. Open Babel generated info messages during smi->sdf and smi->smi conversions:. babel ---errorlevel 2 -h -ismi c12-c3c(cc(N)cc3)Cc1cccc2.smi -osmi; c12-c3c(cc(N)cc3)Cc1; cccc2-ob.smi; ==============================; *** Open Babel Information in OpenBabel::OBMol::NewPerceiveKekuleBonds; Kekulize: Huckel rule not satisfied for molecule. ==============================; *** Open Babel Information in OpenBabel::OBMol::start_kekulize; Kekulize Error for molecule. 1 molecule converted; 2 info messages 44 audit log messages. The obtained output is a structure different than the original one, represented in the aromatic smiles c12-c3c(cc(N)cc3)Cc1cccc2:. C12=C3C(=CC(=CC3)N)CC1C=CC=C2. Is Open Babel behaving as expected in this particular case? . Reported by: vedina",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/866:608,audit,audit,608,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/866,1,['audit'],['audit']
Security,The problem here is that GetNewBondVector isn't designed to handle 2D molecules with wedge/hash indications. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/878#issuecomment-281795087:91,hash,hash,91,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/878#issuecomment-281795087,1,['hash'],['hash']
Security,"The problem is that the functions in data_utilities are not exposed from the openbabel DLL. On Linux, by default, everything is exposed, while on Windows you have to specify which ones to expose. More to the point, we tend to avoid extending the OB API unless necessary. I'd suggest you simply move the data_utilities.cpp out of the openbabel core and into the thermo target. Obviously there's no linking problem then. However, if you can make a case for keeping them where they are (e.g. are these functions of general use to OB users?), I'm happy to do the necessary to expose the functions.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/200#issuecomment-124572140:60,expose,exposed,60,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/200#issuecomment-124572140,8,['expose'],"['expose', 'exposed']"
Security,"The simple command ""obabel -i"" causes a segfault. The problem is several cases like this:. for (arg = 1; arg < argc; ++arg); {; ...; case 'i':; iext = argv[arg] + 2;; if(!*iext); iext = argv[++arg];. Note that arg is incremented without checking to see whether it's past argc, so it's accessing past the end of the argv array. By luck, it's getting a NULL pointer, but iext could point to anything. There are a number of instances of this in the command-line parsing section. Reported by: @cjames53. Original Ticket: [openbabel/bugs/902](https://sourceforge.net/p/openbabel/bugs/902)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1282:285,access,accessing,285,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1282,1,['access'],['accessing']
Security,"The structure record is about a sample in solution characterized by solution NMR. Thus, though there is the provision of a .cif by the database, it isn't a .cif like from CCDC's CSD file, because there are only _place holders_ about the unit cell parameters. Instead of a typical unit cell, the parallelepiped is described in `1ner.cif` is with vectors a = b = c = 1 (Angstrom) and \alpha = \beta = \gamma = 90 (degrees), yet stating the triclinic space group P1. Solution NMR does provide other information about protein structures, in _partial_ overlap with what protein crystallography by diffraction on solid samples provides. One may anticipate some quality checks for model data from crystals are not applicable here. Contrasting to this, a .pdb file does not require the provision of lattice constants because the description of a single, individual, isolated molecule is sufficent. So if there are no a, b, c, \alpha, \beta, \gamma in original .pdb accessible to you, openbabel has nothing to add about them when exporting a .cif. On the other hand, the conversion of the (multimodel) .cif provided by the database into individual .pdb (one molecule each) still is possible with other programs than openbabel. From the terminal within [Jmol](http://jmol.sourceforge.net/), for example, you may access the multimodel .cif by. ```; load ""1ner.cif"";; ```; where it will recognize the presence of 30 models. It is possible to access them one by one via the GUI (right mouse button click into the canvas), or from the program's console, e.g. ```; load models ({4}) ""1ner.cif"";; ````. to access only the fifth model in the .cif file. From there, it is possible to export them, for example by either one of the following. ```; write ""model5.pdb"";; write ""model5.sdf"" as v3000;; ```; (the `as v3000` is to access the more modern variant of .sdf allowing e.g., a larger number of atoms). If you anticipate the conversions ahead are multiple, consider to write a [Jmol script](https://chemapps.stolaf.ed",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2472#issuecomment-1123540418:957,access,accessible,957,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2472#issuecomment-1123540418,1,['access'],['accessible']
Security,"There are security issues with that, but some Google searching indicates that Travis and Coverity are trying to integrate them.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/63#issuecomment-32475482:10,secur,security,10,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/63#issuecomment-32475482,1,['secur'],['security']
Security,There are so many sdf molecules in PDBbind dataset could not be correctly sanitized and causes trouble for my project. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: linux / in conda env. `There was a problem with file 2020_refined_lig_sdf/4lps_ligand.sdf: Sanitization error: Can't kekulize mol. Unkekulized atoms: 18 19 20 23 27`. ```; *** Open Babel Warning in ReadMolecule; Failed to kekulize aromatic bonds in MOL file (title is 4loh_ligand); [15:10:24] Can't kekulize mol. Unkekulized atoms: 33 34 35 36 38; ```,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2630:74,sanitiz,sanitized,74,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2630,2,"['Sanitiz', 'sanitiz']","['Sanitization', 'sanitized']"
Security,"There are two issues here: the enum and IsElement. I don't either of these changes should be made to the API. Regarding the function, IsElement(), we should be removing convenience functions, not adding them. This convenience function is trivially implementable in terms of the existing API. The atomic number is get/set via a Get/SetAtomicNum() function. Adding a duplicate function adds nothing to the API, but confuses users. There should only be one way to do it. Furthermore, this function will likely give rise to inefficient code, where a user/developer chooses IsElement() in favor of GetAtomicNum(). Obviously, to begin with, there are two function lookups instead of one. But rather than accessing the atomic number once, storing it and then switching on it, one could image accessing it multiple times via if IsElement(x) ; else IsElement(y); etc. I have seen examples like this in the OB codebase relating to IsCarbon() and friends. Regarding the enum, the Get/SetAtomicNum() do not use an enum, nor is the element number stored internally using an enums. Enums and unsigned ints should not be combined as they are intended to be distinct (for example, at some level of warnings, GCC complains). So getting the atomic number via GetAtomicNum() and then passing it to IsElement() currently compiles, but may also be flagged as a warning by the compiler. Sure, the user can cast it, but at that point why isn't it an unsigned int in the first place? More esoterically, I would argue that atomic number is not an enumerated type conceptually; it's an integer. Enumerated types are typically for assigning integers to non-integer items (e.g. days of the week).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1754#issuecomment-357610951:698,access,accessing,698,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1754#issuecomment-357610951,2,['access'],['accessing']
Security,"There might be some more profound issue here, perhaps obabel does not access all information of a .cdxml file. + I let [ChemDrawJS](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#) generate the structure formula of adenosine. The structure exported (structure -> get cdxml) and processed with obabel 3.1.1 to yield a .png. But hydrogen atoms (furanose alcohols and adenine) seem to be missing:. ![CD_obabel](https://user-images.githubusercontent.com/60490931/190619165-2ef61861-d765-49cd-b3b1-bbd0afbdd5bb.png). + I redrew the phosphorylated adenosine in ChemDraw (for better compatibility with version 12) as a .cdxml file, which works reasonably well on ChemDrawJS (behind the ""customize"" button is a pulldown menu to toogle on/off the red warnings). Still in ChemDrawPro12 for Windows, I exported the drawing as .svg with styles by ACS1996, Helvetica, Synthesis and one used e.g., in the Baran group at Scripps; compiled in the archive attached. (There too, .cdxml exported and processed by obabel 3.1.1 to .png loose hydrogens and add ""dots"".). [adenosineP3.zip](https://github.com/openbabel/openbabel/files/9583249/adenosineP3.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/338#issuecomment-1249209336:70,access,access,70,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/338#issuecomment-1249209336,1,['access'],['access']
Security,There was a problem with file 2020_refined_lig_sdf/1e1v_ligand.sdf: Sanitization error: Can't kekulize mol.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2630:68,Sanitiz,Sanitization,68,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2630,1,['Sanitiz'],['Sanitization']
Security,"This file may or may not be a standard PDB file, but it was generated by a ; previous version of Open Babel (via Ghemical) so it's important we fix the ; bugs it exposes. For one, the code attempts to bond atom 1 to atom 1. OBMol::AddBond() ; must not accept this. For another, the parsing code turns:; CONECT 11 2. into requests to add bonds 1->1, 1->2, etc. the function ParseConectRecord() needs to be carefully debugged ASAP. -Geoff. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/526:162,expose,exposes,162,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/526,1,['expose'],['exposes']
Security,This has been brought up by the Debian security team as well: https://bugs.debian.org/1059277,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2650#issuecomment-1867623491:39,secur,security,39,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2650#issuecomment-1867623491,1,['secur'],['security']
Security,"This is a continuation of Igor's bug report #2412105. In v2.3.0rc1, the 3rd molecule in this SD file seems to have incorrect SMILES stereochemistry -- the wedge/hash notation in the rings appears to be ignored. As a result, the InChI generated by Open Babel and inichi.exe are different. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1036:161,hash,hash,161,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1036,1,['hash'],['hash']
Security,"This is correct, but as the coordinates are accessible via OBAtom.GetVector(), I don't plan to implement access to this. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1367#issuecomment-281805152:44,access,accessible,44,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1367#issuecomment-281805152,2,['access'],"['access', 'accessible']"
Security,"This isn't a problem with trunk, although the file exposes another bug:. #0 0x0000000100195610 in OpenBabel::OBTetrahedralStereo::IsValid (this=0x0) at /Volumes/Home/ghutchis/Devel/openbabel/src/stereo/tetrahedral.cpp:114; #1 0x0000000100195877 in OpenBabel::OBTetrahedralStereo::GetConfig (this=0x0, winding=OpenBabel::OBStereo::Clockwise, view=OpenBabel::OBStereo::ViewFrom) at /Volumes/Home/ghutchis/Devel/openbabel/src/stereo/tetrahedral.cpp:152; #2 0x00000001001a66f4 in OpenBabel::OBStereoFacade::InitMaps (this=0x7fff5fbfb210) at /Volumes/Home/ghutchis/Devel/openbabel/src/stereo/facade.cpp:84; #3 0x00000001001a6c22 in OpenBabel::OBStereoFacade::EnsureInit (this=0x7fff5fbfb210) at stereo.h:404; #4 0x000000010131fa81 in OpenBabel::OBStereoFacade::HasTetrahedralStereo (this=0x7fff5fbfb210, atomId=48) at /Volumes/Home/ghutchis/Devel/openbabel/src/stereo/facade.cpp:44; #5 0x0000000101227130 in OpenBabel::OBGraphSym::BreakChiralTies (this=0x7fff5fbfbd50, atom_sym_classes=@0x7fff5fbfba00) at /Volumes/Home/ghutchis/Devel/openbabel/src/graphsym.cpp:541; #6 0x0000000101228805 in OpenBabel::OBGraphSym::ExtendInvariants (this=0x7fff5fbfbd50, symmetry_classes=@0x7fff5fbfba00) at /Volumes/Home/ghutchis/Devel/openbabel/src/graphsym.cpp:1003; #7 0x0000000101229435 in OpenBabel::OBGraphSym::CalculateSymmetry (this=0x7fff5fbfbd50, atom_sym_classes=@0x7fff5fbfbde0) at /Volumes/Home/ghutchis/Devel/openbabel/src/graphsym.cpp:1058; #8 0x000000010122988c in OpenBabel::OBGraphSym::GetSymmetry (this=0x7fff5fbfbd50, symmetry_classes=@0x7fff5fbfbde0) at /Volumes/Home/ghutchis/Devel/openbabel/src/graphsym.cpp:1094. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/934#issuecomment-281795794:51,expose,exposes,51,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/934#issuecomment-281795794,1,['expose'],['exposes']
Security,This post is in reference to the bug posts 865/866 and just documents a 'workaround'. While for some strange reason indirect access to the begin() and end() member functions leads to segmentation faults as illustrated:; http://openbabel.org/dev-api/classOpenBabel_1_1OBRing.shtml. for (i =rlist->begin();i != rlist->end();++i). Accessing the member functions begin() and end() for the 'ring loop'; using vr.begin() and vr.end() sidesteps the segmentation violation issue and the ring atom perception code works fine with that replacement. Both approaches should work --but I may be missing something (the indirect access should work). vector<OBRing*> vr;; vr = mol.GetSSSR();; vector<OBRing*>::iterator i;; vector<int>::iterator j;. for (i =vr.begin();i != vr.end();++i); { ; for(j = (*i)->_path.begin(); j != (*i)->_path.end(); ++j); cout << *j << ' ';; cout << endl;; }. Reported by: dannil54. Original Ticket: [openbabel/bugs/868](https://sourceforge.net/p/openbabel/bugs/868),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1248:125,access,access,125,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1248,3,"['Access', 'access']","['Accessing', 'access']"
Security,"This problem was originally posted on openbabel-discuss forum by David Rose-9 on Nov. 15, 2007. However, I still have exactly the same problem using version 2.2.3, which is the last one on Feb. 19, 2010, on my x86 64 bit RedHat Linux and it is better to notice the problem here. ; ---------------------------; I have had several instances where I build a fast search index without any apparent trouble but then can't search it without an error. I finally have a small example of this problem that I can post, using a 10 molecule smi file (ten.smi) as input: . $ cat ten.smi ; C12(C(N(C(=O)C)c3c2cccc3)=O)Nc2c(ccc(c2N1)OCCCC)OCCCC ; n1c([nH]c(cc1c1ccccc1)=O)c1ccc(cc1)Br ; n1c(nc2c(c1N(C)C)cccc2)c1c(O)cccc1 ; C1(/[CH]2[CH]3\C(=C4/CC(C)(C)NC(C4)(C)C)C=C[CH]3[CH]1C=C2)=C1/CC(C)(C)NC(C1)(C)C ; n1c(c2ccc(C(=O)O)cc2)ccc(c1)CCCCC ; N1(C(CN(CC1=O)C(=O)C1CCCCC1)=O)CCc1ccccc1 ; S(N1[CH](c2ccccc2C=C1)C#N)(c1ccc(cc1)C)(=O)=O ; c12c(c(OC)c3c(c1OC)occ3)ccc(o2)=O ; c12c(O[CH](C1=O)C(C)C)cc1c(c2)ccc(=O)o1 ; c12[C]3([C@H]4([N@@](CCc1c1ccccc1[nH]2)C[C@H](C=C4CC)C3))C(=O)OC . # file looks OK...build index: . $ babel ten.smi -ofs ; This will prepare an index of ten.smi and may take some time... ; It took 0 seconds ; 10 molecules converted ; 37 audit log messages . $ ls -lt ten.fs ; -rw-r--r-- 1 rose staff 1564 Nov 15 12:51 ten.fs . # looks OK, no errors, fs file exists and has stuff in it. Try a search: . $ babel ten.fs -ifs -s'Nc2nc(c1ccccc1)nc3ccccc23' out.smi ; ============================== ; *** Open Babel Error in ReadChemObject ; Difficulty reading from index ten.fs . 0 molecules converted ; 1 errors 1 audit log messages. From this past post ---Problem using fs index file--- (http://n4.nabble.com/Problem-using-fs-index-file-td958832.html#a958832), problem may be caused by incompatible binary operation on 64 bit machine but I cannot figure out the cause. Reported by: makio323",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966:1235,audit,audit,1235,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966,2,['audit'],['audit']
Security,"This pull request is related to issue #1298 on which I have commented. The segfault was caused by line with symmetry of the mode like this one:; > FREQUENCY: 2.93 1.88 0.55 0.35 0.16; > SYMMETRY: E E E E E; > REDUCED MASS: 6.79503 6.40438 13.42881 10.66293 9.71937; The line was skipped by the program and the following loop did not read atoms correctly. The problem was apparently fixed in master, however fixing it exposes new segfault caused by the fact that `modeCount` variable is defined in line **548** as `unsigned int` and then used to leave the loop in lines **551-591**. At the end of loop there is a line; ```; modeCount = vs.size() - 3;; ```; For an empty vector the result (-3) is incorrectly casted to `unsigned int` and the condition in line **551**; ```; while (modeCount >= 1) {; ```; fails. This has been resolved in lines **554-555** like this:; ```; if (!atom); break; // something is very wrong; ```; My suggestion is to simply declare `modeCount` as `int`.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1772:417,expose,exposes,417,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1772,1,['expose'],['exposes']
Security,"This seems to happen in ConnectTheDots, see below when running with --errorlevel 4, within valgrind. Kekulize is called 126 times, and EndModify complains about being called once too many.. Vincent. valgrind babel ---errorlevel 4 Open_babel_crash.cif Open_babel_crash.xyz . *** Open Babel Audit Log in ReadChemObjectImpl ; OpenBabel::Read molecule Crystallographic Information File ; ============================== ; *** Open Babel Audit Log in ConnectTheDots ; Ran OpenBabel::ConnectTheDots ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize . [SNIP: call to Kekulize a total number of 126 times]. ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in AssignSpinMultiplicity ; Ran OpenBabel::AssignSpinMultiplicity ; ============================== ; *** Open Babel Audit Log in AssignImplicitValence ; Ran OpenBabel::AssignImplicitValence ; ============================== ; *** Open Babel Debugging Message in EndModify ; _mod is negative - EndModify() called too many times ; ============================== ; *** Open Babel Audit Log in WriteChemObjectImpl ; OpenBabel::Write molecule XYZ cartesian coordinates format ; 1 molecule converted . Original comment by: @vincefn",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/957#issuecomment-281796168:289,Audit,Audit,289,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/957#issuecomment-281796168,9,['Audit'],['Audit']
Security,"This wouldn't be (so much) a problem _if_ one could create a user account on openbabel.org. Perhaps by intent, perhaps by accident, this is not possible (anymore?). Speaking for Firefox as provided by Linux Debian 12/bookworm (branch testing), i.e. 91.10.0esr (64-bit), the captcha function is not accepted/dysfunctional (note, the pad lock equally is crossed):. ![no_admission](https://user-images.githubusercontent.com/19709084/172888477-03db8b1c-860b-4f40-96fb-aa64bb27dbf8.png). Visiting the main page's [revision history](http://openbabel.org/w/index.php?title=Main_Page&action=history) suggests only the project's elders (like @ghutchis) might still possess the necessary credentials to improve the situation e.g., to enable the addition of new accounts, or hint if the web site's content may be transferred into a repository on GitHub. (Apparently, the content of openbabel.org [the web site] _is not_ within the current 0.3 GB repository of openbabel [the program].) In case the later were true, the backlog you mention possibly could be resolved:. ![main_history](https://user-images.githubusercontent.com/19709084/172887880-fad0d372-fd10-4197-8e6c-a07ff586cc74.png)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2479#issuecomment-1151323850:274,captcha,captcha,274,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2479#issuecomment-1151323850,1,['captcha'],['captcha']
Security,"ThrowError was taking a total of 1.9% of the time for smi->smi. This was mainly attributed to three log messages, all audits. I've added an 'if' statement to check the logger's output level before throwing the error. I think it would make sense for this to be an idiom throughout the library.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1714:118,audit,audits,118,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1714,1,['audit'],['audits']
Security,"Travis uses 1.5 core per build machine. Most of the time, the build is; slowed by disk access, so setting -j2 to make usually speed up things a lot.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/204:87,access,access,87,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/204,1,['access'],['access']
Security,"Trying out the new ""obmm"" tool, and running a CG step yields a fast crash. The ""logos"" variable is never initialized, so the code attempts to write to a NULL stream. While this can be fixed with modifications to obmm, I worry that there's no guarantee that the stream pointer will be set. (i.e., there's no exposed constructor). So this can occur easily in even well-meaning client code. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/606:307,expose,exposed,307,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/606,1,['expose'],['exposed']
Security,"Using ""babel --fillUC strict test.cif test.pdb"" to transform a structure with a given symmetry group into a P1 structure creates duplicate atoms. Example with a ""P-1"" space group: the atom at (0,0,1/2) is duplicated when symmetry is removed, leading to two identical atoms at the same position. $ cat test.cif ; data_test. _cell_length_a 10.0000(0); _cell_length_b 10.0000(0); _cell_length_c 10.0000(0); _cell_angle_alpha 90.0000(0); _cell_angle_beta 90.0000(0); _cell_angle_gamma 90.0000(0). _symmetry_space_group_name_H-M 'P -1'; _symmetry_Int_Tables_number 2; _symmetry_cell_setting cubic. loop_; _symmetry_equiv_pos_as_xyz; '+x,+y,+z'; '-x,-y,-z'. loop_; _atom_site_label; _atom_site_type_symbol; _atom_site_fract_x; _atom_site_fract_y; _atom_site_fract_z; O1 O 0.0000 0.0000 0.5000; $ babel --fillUC strict test.cif test.pdb; 1 molecule converted; 1 info messages 21 audit log messages ; $ cat test.pdb ; COMPND test.cif ; AUTHOR GENERATED BY OPEN BABEL 2.3.1; CRYST1 10.000 10.000 10.000 90.00 90.00 90.00 P 1 1; HETATM 1 O HOH 1 -0.000 -0.000 5.000 1.00 0.00 O ; HETATM 2 O HOH 2 -0.000 -0.000 5.000 1.00 0.00 O ; MASTER 0 0 0 0 0 0 0 0 2 0 2 0; END. Reported by: coudert",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1151:872,audit,audit,872,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1151,1,['audit'],['audit']
Security,"Using OBMolAtomDFSIter and OBMolAtomBFSIter it's possible to iterate over the atoms in a molecule in a DF or BF manner. It would be great to be able to access the depth at a particular point in the iteration. This would allow the implementation of several algorithms using the API, such as calculation of circular fingerprints and HOSE codes. - Noel. Reported by: @baoilleach. Original Ticket: ""openbabel/feature-requests/126"":https://sourceforge.net/p/openbabel/feature-requests/126",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1495:152,access,access,152,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1495,1,['access'],['access']
Security,"Using the SourceForge Compile farm for testing, I noted; a failure on the matrix algebra test:. bash-2.03$ uname -a; SunOS usf-cf-sparc-solaris-2 5.8 Generic_108528-17; sun4u sparc SUNW,Ultra-60. Reading specs from; /opt/sfw/lib/gcc-lib/sparc-sun-solaris2.8/2.95.2/specs; gcc version 2.95.2 19991024 (release). Testing Matrix Algebra...; Matrix eigenvector test failed, wrong eigenvalues computed.; ERROR: ***MATRIX test failed***. There were no other error messages from this build. Let; me know if you need more information. (Everyone with a; SF.net account can access and use the Compile Farm.). -Geoff. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/409:564,access,access,564,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/409,1,['access'],['access']
Security,"Using this branch to change the runner for automated testing on babel, updating the python version in hopes to resolve the security checks",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2592:123,secur,security,123,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2592,1,['secur'],['security']
Security,Validate Gasteiger Charges,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1371:0,Validat,Validate,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1371,1,['Validat'],['Validate']
Security,"Via Rob Soe on openbabel-discuss. The current parser does not exact the ""V"" fields for per atom data. See page 18 of ctfile.pdf. ----------------------------------------; 3-103; Marvin 06110916162D . 4 3 0 0 0 0 999 V2000; 6.5956 2.0240 0.0000 S 0 0 0 0 0 0 0 0 0 0 0 0; 7.0081 1.3095 0.0000 O 0 0 0 0 0 0 0 0 0 0 0 0; 6.1831 2.7385 0.0000 O 0 0 0 0 0 0 0 0 0 0 0 0; 7.3102 2.4365 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 2 0 0 0 0; 1 3 2 0 0 0 0; 1 4 1 0 0 0 0; V 1 -0.10; V 2 -0.26; V 3 -0.26; V 4 0.03; M END; $$$$. Via Geoff: This could be stored in per-atom custom data like and accessed through:. FOR_ATOMS_OF_MOL(a,mol){; atomData.push_back(a->GetData(""Atom Value""));. cout << ""atomData.size: "" << atomData.size() << endl;. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/902:581,access,accessed,581,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/902,1,['access'],['accessed']
Security,Wedge/Hash Stereo ignored in SD File,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1036:6,Hash,Hash,6,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1036,1,['Hash'],['Hash']
Security,"Well I started writing a blog post, but when I looked into it closely, I thought I'd better trim a few of more obvious ones:. > There's an intial slow period where OB is loading the plugins (or at least, that's my interpretation). Focusing on the plateau, it seems that 63% of the time is spent writing the molecule, while 31% is spent reading. This is both good and bad; I would have expected reading to be slower than writing, due to the associated mallocing; on the other hand, it may indicate that there is potential for optimising.; >; > Stepping down through the functions, there are some obvious small gains. 1.6% of the total time is spent copying the description of the format so that the first portion can be used in an audit message. The fix here is probably to get rid of audit messages altogether, although avoiding the copy would an alternative. 3.4% of the time is spent on writing std::endl to the output buffer. ""\n"" might be a sensible alternative, though one could imagine having the option if you really needed it.; > ; > In the main part of the writer (52.3% of total), 10.2% is spent on CreateCisTrans, while 38.2% is spent on the meat of the writing. That 10.2% is suspicious; when you look into it, almost all the time is spent on FindSmallestRing, which in turn calls GetSSSR(). Rumour has it that SSSR is the root of all evil, and so I'm pretty sure this can be avoided.; > ; > As regards the 38.2%, ToCansmilesString() is 14.4%, BuildCanonTree() is 8.8% and operator << is 10.5% (!). That last one puzzled me, but then I found it. This is the generation of a string containing the canonical atom order. Wow, stringstream is slow. I think we can do something about this, like avoid it altogether unless requested (in which case, avoid stringstream).; > ; > Another optimisation in multiple places would be to cache the values of various options to avoid multiple lookups of the option map (2.3% in total).; > ; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1699#issuecomment-347037180:730,audit,audit,730,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1699#issuecomment-347037180,2,['audit'],['audit']
Security,"What I can't figure out is why it's not working for you, when it's working fine for me...if I can't reproduce the problem at this end, it'll be difficult to sort it out... I have access to a Centos 5.5, 64-bit system. Using CMake 2.8.0, building in a separate directory from the source, and ensuring that there are no other OpenBabel installations on my system, and that ""env | grep -i babel"" yields nothing, ""make test"" passes with flying colours. Can you try doing this also? If we can pinpoint the source of the problem, we can sort it out. BTW, it's instructive to look into $OBBUILDDIR/test/CTestTestfile.cmake and see how the environment for the tests has been set. You could try going in there and setting some more variables and seeing if it affects the outcome of a particular test. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797795:179,access,access,179,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797795,1,['access'],['access']
Security,"When `OBSmartsPattern::Init()` is called more than once in one object, a memory leak occurs. ## Environment Information; Open Babel version: Current master (`699a54e`); Operating system and version: Ubuntu 16.04. ## Steps to Reproduce; 1. Save the following code `leak.cpp`.; ```cpp; #include <openbabel/parsmart.h>. int main() {; OpenBabel::OBSmartsPattern sp;; sp.Init(""CC"");; sp.Init(""CO"");; }; ```; 2. Compile `leak.cpp` with sanitize flags; ```; g++ -g -fsanitize=address -fno-omit-frame-pointer -Wall -I /usr/local/include/openbabel-2.0/ -L /usr/local/lib/openbabel/2.4.90/ leak.cpp -o leak -lopenbabel; ```; 3. Execute the compiled program. The output in my environment was:; ```; $ ./leak . =================================================================; ==11385==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 48 byte(s) in 1 object(s) allocated from:; #0 0x7f57a6778532 in operator new(unsigned long) (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x99532); #1 0x7f57a63ba27d in OpenBabel::OBSmartsPattern::ParseSMARTSPattern() (/usr/local/lib/libopenbabel.so.5+0x17427d). Indirect leak of 104 byte(s) in 1 object(s) allocated from:; #0 0x7f57a67786b2 in operator new[](unsigned long) (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x996b2); #1 0x7f57a63b8fa1 in OpenBabel::CreateAtom(OpenBabel::Pattern*, OpenBabel::_AtomExpr*, int, int) (/usr/local/lib/libopenbabel.so.5+0x172fa1). Indirect leak of 48 byte(s) in 2 object(s) allocated from:; #0 0x7f57a6778532 in operator new(unsigned long) (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x99532); #1 0x7f57a63b7743 in OpenBabel::OBSmartsPattern::ParseSimpleAtomPrimitive() (/usr/local/lib/libopeParseSMARTSPartnbabel.so.5+0x171743). Indirect leak of 24 byte(s) in 1 object(s) allocated from:; #0 0x7f57a6778532 in operator new(unsigned long) (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x99532); #1 0x7f57a63b9965 in OpenBabel::OBSmartsPattern::SMARTSParser(OpenBabel::Pattern*, OpenBabel::ParseState*, int, int) (/usr/local/lib/libopenbabel.so.5+",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1869:430,sanitiz,sanitize,430,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1869,1,['sanitiz'],['sanitize']
Security,"When an index is prepared from the attached smiles file (with CRLF line endings):; babel 4mols.smi -ofs ; and searched; babel 4mols.fs -sC#N -osmi; The correct response, which occurs newlinebuf is disabled by giving SmilesFormat a READBINARY flag, is: . 2 candidates from fingerprint search phase; O=N(=O)c1ccc(c(c1)N(=O)=O)SC#N 540; Clc1ccccc1C=C(C#N)C#N 542; 2 molecules converted; 41 audit log messages. With newlinebuf active for SmilesFormat. 2 candidates from fingerprint search phase; O=N(=O)c1ccc(c(c1)N(=O)=O)SC#N 540; 1 molecule converted; 41 audit log messages. This was on Windows XP. The behaviour is the same if 4mols.smi has just LF endings.; ; Fastsearch uses seek positions in the smiles file and I suspect newlinebuf has interfered with these. I'll look further when I have time later in the week. Reported by: @chrismorl",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/585:387,audit,audit,387,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/585,2,['audit'],['audit']
Security,"When converting a small-molecule CIF file to mmCIF, the resulting mmCIF is missing many mandatory values in the atom_site table. The mandatory items are documented for the atom_site category in the current mmCIF documentation, https://mmcif.wwpdb.org/dictionaries/mmcif_pdbx_v50.dic/Categories/atom_site.html. The mandatory fields are those that are annotated with exclamation point inside a circle: auth_asym_id, label_alt_id, label_asym_id, label_atom_id, label_comp_id, label_entity_id, label_seq_id, and type_symbol. Of those, Open Babel only populates the type_symbol value. In practice, auth_asym_id is not required. Reasonable default values for the other missing values are:; label_alt_id .; label_asym_id A; label_comp_id UNL; label_entity_id ?; label_seq_id . label_atom_id should be unique for every atom -- if it is present, just reuse the atom_site_label value from the small-molecule CIF file (https://www.iucr.org/__data/iucr/cifdic_html/1/cif_core.dic/Iatom_site_label.html). Otherwise, number them, eg., C1, C2, etc. A test file is https://github.com/openbabel/openbabel/blob/master/scripts/python/examples/hashizume.cif",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2545:1124,hash,hashizume,1124,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2545,1,['hash'],['hashizume']
Security,"When evaluating atom coordination number, method; OBForceFieldUFF::ParseParamFile() assumed that it may access a third character; of the atom type string, but in fact that produces undefined behavior if the; string is only one character long. A one-character atom type occurs in; practice with the default parameter file (for deuterium). This change addresses the issue by verifying that the second character of; each atom type string is not a C string terminator as a precondition for; accessing the third. If the second is a string terminator then the same; default behavior is provided as if the type were two characters long. Fixes #2223",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2224:104,access,access,104,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2224,2,['access'],"['access', 'accessing']"
Security,"When from the same program (GChemPaint)I open; successively two cml files using openbabel (either last; version or cvs version), the program crashes. The first; file is correctly loaded.; gdb gives this backtrace:. Program received signal SIGSEGV, Segmentation fault.; [Switching to Thread 16384 (LWP 8932)]; 0x00000000 in ?? (); Current language: auto; currently c; (gdb) bt; #0 0x00000000 in ?? (); #1 0x080cb83e in; OpenBabel::OBMol::AddBond(OpenBabel::OBBond&amp;) (; this=0x84d1908, bond=@0xbfffe280) at mol.h:443; #2 0x0810ecf1 in OpenBabel::endBond() () at cml.cpp:1995; #3 0x081085aa in OpenBabel::endElement(std::string,; std::string, std::string); (localName=Internal: global symbol `_ZNSs4nposE'; found in ../../../../libstdc++-v3/src/string-inst.cc; psymtab but not in symtab.; _ZNSs4nposE may be an inlined function, or may be a; template function; (if a template, try specifying an instantiation:; _ZNSs4nposE&lt;type&gt;).; ) at cml.cpp:1175; #4 0x08108127 in OpenBabel::endElement(std::string); (name=Cannot access memory; at address 0x8; ) at cml.cpp:1156; #5 0x081036ec in OpenBabel::tag(std::string) (s=; {static npos = 4294967295, _M_dataplus =; {&lt;allocator&lt;char&gt;&gt; = {&lt;No data; fields&gt;}, _M_p = 0x84d85ec &quot;&lt;/bond&gt;&quot;}, static; _S_empty_rep_storage = {0, 0, 0, 0}}) at; /usr/include/c++/3.2.2/bits/basic_string.h:883; #6 0x081027ac in OpenBabel::ReadXML(std::istream&amp;); (ifs=@0xbfffe560); at cml.cpp:626; #7 0x08114309 in OpenBabel::ReadCML(std::istream&amp;,; OpenBabel::OBMol&amp;, char const*) (ifs=@0x84d1908,; mol=@0x84d1908,; title=0x84c6770; &quot;/home/Jean/projects/GChemPaint/1.cml&quot;) at cml.cpp:2894; #8 0x080e7d23 in; OpenBabel::OBFileFormat::ReadMolecule(std::istream&amp;,; OpenBabel::OBMol&amp;, char const*) (ifs=@0x84db7e4,; mol=@0xbfffea30,; title=0x84c2f90 &quot;&amp;#565;D\b&quot;) at fileformat.cpp:43. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/420:1024,access,access,1024,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/420,1,['access'],['access']
Security,"When reading an xtc file with multiple frames, only the coordinates of the last conformer are valid. I think it is happening because the destructor of the vector confs is being called whenever a frame is finished being read and the array that stores the atomic coordinates for that frame is freed. Meanwhile the pointer to that (now unallocated) array is stored in vconf and then in the OBMol object. See http://sourceforge.net/p/openbabel/code/HEAD/tree/openbabel/trunk/src/formats/xtcformat.cpp#l187. So whenever I try accessing the conformer coordinates after reading them from an xtc file, I see a partially overwritten array. This may also be related to bug #745, if the OBMol destructor is trying to free the already freed arrays of conformer coordinates. I mention this because I'm getting similar behavior from calling OBMol.Clear() at the end of my test. libopenbabel version: 2.3.2+dfsg-1.1, from Ubuntu 14.04 repository. Reported by: zetadin. Original Ticket: [openbabel/bugs/960](https://sourceforge.net/p/openbabel/bugs/960)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1339:521,access,accessing,521,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1339,1,['access'],['accessing']
Security,"When repeatedly recanonicalizing a partial molecule (i.e. using an OBBitMap to select different parts of the molecule), I get the following report from valgrind(1). The stereo code seems to holding a reference to data that's been deallocated. > canon.cpp line 1722 deallocates it; > canon.cpp line 1739 causes an invalid access; > (via OpenBabel::OBTetrahedralStereo::IsValid() const (tetrahedral.cpp:128). Here is the valgrind output. This code is embedded in a FastCGI framework, so the malloc/dealloc are from that package, but I don't think that contributes. ```~~; ==30812== Invalid read of size 8; ==30812== at 0x4FD8BB5: OpenBabel::OBTetrahedralStereo::IsValid() const (tetrahedral.cpp:128); ==30812== by 0x4FD9C6B: OpenBabel::OBTetrahedralStereo::GetConfig(OpenBabel::OBStereo::Winding, OpenBabel::OBStereo::View) const (tetrahedral.cpp:166); ==30812== by 0x4EBA294: OpenBabel::CanonicalLabelsImpl::CalcCanonicalLabels(OpenBabel::OBMol*, std::vector<unsigned int, std::allocator<unsigned int> > const&, std::vector<unsigned int, std::allocator<unsigned int> >&, std::v\; ector<OpenBabel::OBStereoUnit, std::allocator<OpenBabel::OBStereoUnit> > const&, OpenBabel::OBBitVec const&, OpenBabel::OBStereoFacade*, int, bool) (canon.cpp:1506); ==30812== by 0x4EADFBB: OpenBabel::CanonicalLabels(OpenBabel::OBMol*, std::vector<unsigned int, std::allocator<unsigned int> > const&, std::vector<unsigned int, std::allocator<unsigned int> >&, OpenBabel::OBBitVec const&, int\; , bool) (canon.cpp:1739); ==30812== by 0xB7841A7: OpenBabel::OBMol2Cansmi::CreateFragCansmiString(OpenBabel::OBMol&, OpenBabel::OBBitVec&, bool, char*) (smilesformat.cpp:3989); ==30812== by 0xB785C6E: OpenBabel::CreateCansmiString(OpenBabel::OBMol&, char*, OpenBabel::OBBitVec&, bool, OpenBabel::OBConversion*) (smilesformat.cpp:4186); ==30812== by 0xB789CA7: OpenBabel::SMIBaseFormat::WriteMolecule(OpenBabel::OBBase*, OpenBabel::OBConversion*) (smilesformat.cpp:4292); ==30812== by 0x4F627A4: OpenBabel::OBConversion::Write(Op",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1265:321,access,access,321,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1265,1,['access'],['access']
Security,"When the attached file is processed with babel, e.g. converted to SMILES, the aromaticity of one of the benzene is lost and the ring is converted to a cyclohexane:; babel test.mol2 -osmi; C(=O)(OCc1ccccc1)NC(C(NCP(OC(C(O)O)CC1CCCCC1)(O)O)=O)C 8cpa_ligand_001; 1 molecule converted; 2 info messages 12 audit log messages . The compound contains two benzene rings, one is changed. Paul W. Elsinhorst suggested a workaround:; Just a workaround,. do it like this: babel -imol2 test.mol2 -opdb | babel -ipdb -osmi. Paul. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/759:301,audit,audit,301,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/759,1,['audit'],['audit']
Security,"While replying to issue #2691, I noticed the .pdf version of the manual (edition by Jul 14, 2023) p. 171 / section 18.3.5 only carries the section header `MSI BGF format (bgf)`. The [online documentation](https://open-babel.readthedocs.io/en/latest/FileFormats/MSI_BGF_format.html?highlight=bgf) accessed today equally appears empty. This might be an accidental omission a future edition of the manual can close.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2692:296,access,accessed,296,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2692,1,['access'],['accessed']
Security,"While you're at it, is it possible to expose this function to a python API? I think most of us would like to use it to get a list.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1712#issuecomment-347664466:38,expose,expose,38,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1712#issuecomment-347664466,1,['expose'],['expose']
Security,Wiki pages on scripting cannot be accessed,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2310:34,access,accessed,34,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2310,1,['access'],['accessed']
Security,"With OpenBabel 2.2.3, I get a segmentation fault when converting the attached MOPAC output file to a MOL file (see below). Most other MOPAC files are processed as expected, without error. Also, I tried processing the same file with the OpenBabel 2.2.0 GUI (on a separate system) and the conversion to MOL file seemed to work properly. gmagoon@pharos:~/threeDcheck_testdir$ babel -imoo QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.out -omol QMfiles/PFGQIDLYXOTKNT-UHFFFAOYAN.mol2 ---errorlevel 5; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; Segmentation fault. Reported by: gmagoon",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1133:532,Audit,Audit,532,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1133,5,['Audit'],['Audit']
Security,"With openbabel sources updated today, I've got this; ASAN:DEADLYSIGNAL; '=================================================================; ==8994==ERROR: AddressSanitizer: SEGV on unknown address 0x55a2cecbd435 (pc 0x7fb250916094 bp 0x7fff308992b0 sp 0x7fff30898a28 T0); ==8994==The signal is caused by a WRITE memory access.; #0 0x7fb250916093 (/lib/x86_64-linux-gnu/libc.so.6+0xa1093); #1 0x7fb25188054d (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x7754d); #2 0x7fb2512e6503 in std::char_traits<char>::copy(char*, char const*, unsigned long) /usr/include/c++/7/bits/char_traits.h:350; #3 0x7fb2512f014b in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned long) /usr/include/c++/7/bits/basic_string.h:340; #4 0x7fb251320497 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) /usr/include/c++/7/bits/basic_string.tcc:440; #5 0x7fb25131fe5e in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::assign(char const*) /usr/include/c++/7/bits/basic_string.h:1420; #6 0x7fb25131f7aa in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) /usr/include/c++/7/bits/basic_string.h:694; #7 0x7fb2514f0a6f in OpenBabel::OBSmartsPattern::Init(char const*) /home/julien/projects/openbabel/src/parsmart.cpp:1722; #8 0x55a2cecbd2f5 in main /home/julien/projects/openbabel/testjul/leak.cpp:5; #9 0x7fb250897b16 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x22b16); #10 0x55a2cecbd169 in _start (/home/julien/projects/openbabel/testjul/leak+0x1169). AddressSanitizer can not provide additional info.; SUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0xa1093) ; ==8994==ABORTING; `",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1869#issuecomment-407356434:319,access,access,319,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1869#issuecomment-407356434,1,['access'],['access']
Security,"Works fine on 64-bit Windows. Strangely though, only 2 molecules are converted either with 32-bit or 64-bit:. C:\Tools\openbabel\trunk\windows-vc2008\build64\Release>babel ten.smi -ofs; This will prepare an index of ten.smi and may take some time...; It contains 10 molecules; It took 0 seconds; 2 molecules converted; 31 audit log messages. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796335:322,audit,audit,322,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796335,1,['audit'],['audit']
Security,"Yeah, `obabel` opens a few hundred thousand files / streams with no leaks. The code for `obabel` is online:; int count = Conv.FullConvert(FileList, OutputFileName, OutputFileList);. > does it make sense to load libraries on the fly and each time a Read operation is performed?. No, it doesn't, but you don't need to read the way you wrote the code. The compiler and `openbabel` are just doing exactly what you asked. - Move `OBConversion` out of the loop. First rule of optimization is move things out of loops that aren't *required* to be in loops. A variable inside the loop is created / destroyed every iteration.; - The docs note that `ReadFile` retains the stream object, which is a small leak. If you want to convert a ton of files, use `Convert()` and handle your own streams. The reason for the `ReadFile()` method is that Python and other scripting languages can't directly access the C++ stream objects. http://openbabel.org/api/2.3/classOpenBabel_1_1OBConversion.shtml#acc3cc99e2ff0113c9ca6a64f3de71300. There are plenty of examples in the `tools` directory...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848068607:883,access,access,883,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848068607,1,['access'],['access']
Security,"Yes, it was my typo and it indeed makes an index file without any problem. The substructure search in the original example seems to work fine but it produces a bunch of message as follows. I am using CMake 2.8.0 and recompile OpenBabel today in case there may be some changes in codes. However, I encounter the same error messages during the “make test” process. Once Noel update the wiki, I will set up environments and test it. Makio. ----------------. $ babel ten.fs -ifs -s'Nc2nc(c1ccccc1)nc3ccccc23' out.smi ; 1 candidates from fingerprint search phase. 1 molecule converted. 1 info messages 57 audit log messages . *** glibc detected *** babel: double free or corruption (!prev): 0x000000000755ed10 ***. ======= Backtrace: =========. /lib64/libc.so.6[0x3cd4a722ef]. /lib64/libc.so.6(cfree+0x4b)[0x3cd4a7273b]. /path/to/local/lib/libopenbabel.so.4[0x2b0dae442328]. /path/to/local/lib/libopenbabel.so.4[0x2b0dae5e6164]. /lib64/libc.so.6(__cxa_finalize+0x8e)[0x3cd4a3368e]. /path/to/local/lib/libopenbabel.so.4[0x2b0dae43ee56]. ======= Memory map: ========. 00400000-00405000 r-xp 00000000 fd:00 30900304 /path/to/local/bin/babel. 00605000-00606000 rw-p 00005000 fd:00 30900304 /path/to/local/bin/babel. 07516000-07610000 rw-p 07516000 00:00 0 . 3cd4600000-3cd461c000 r-xp 00000000 fd:00 90997106 /lib64/ld-2.5.so. 3cd481b000-3cd481c000 r--p 0001b000 fd:00 90997106 /lib64/ld-2.5.so. 3cd481c000-3cd481d000 rw-p 0001c000 fd:00 90997106 /lib64/ld-2.5.so. 3cd4a00000-3cd4b4d000 r-xp 00000000 fd:00 90997107 /lib64/libc-2.5.so. 3cd4b4d000-3cd4d4d000 ---p 0014d000 fd:00 90997107 /lib64/libc-2.5.so. 3cd4d4d000-3cd4d51000 r--p 0014d000 fd:00 90997107 /lib64/libc-2.5.so. 3cd4d51000-3cd4d52000 rw-p 00151000 fd:00 90997107 /lib64/libc-2.5.so. 3cd4d52000-3cd4d57000 rw-p 3cd4d52000 00:00 0 . 3cd4e00000-3cd4e82000 r-xp 00000000 fd:00 90997114 /lib64/libm-2.5.so. 3cd4e82000-3cd5081000 ---p 00082000 fd:00 90997114 /lib64/libm-2.5.so. 3cd5081000-3cd5082000 r--p 00081000 fd:00 90997114 /lib64/libm-2.5.so. ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796354:600,audit,audit,600,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796354,1,['audit'],['audit']
Security,"Yes. I tried with a subset of the large SDF file containing only 10 ligands, and processed them as I explained it last comment. ; The files can be accessed in the Google drive link, [https://drive.google.com/drive/folders/19tDdzlWhIfmRpBGNMW1mINjm9RF0LBR3?usp=drive_link]. I have also uploaded docking output from autodock vina of two ligand, emem8 and emem9 respectively.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2720#issuecomment-2312067067:147,access,accessed,147,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2720#issuecomment-2312067067,1,['access'],['accessed']
Security,"Yes. It looks like the problem is on Matplotlib, I just changed; ""from PIL import Image"" to ""import Image"" in matplotlib/backend_bases.py; following the recommendation from this blog post:; http://jaredforsyth.com/blog/2010/apr/28/accessinit-hash-collision-3-both-1-and-1/#the-solution; and I can load pybel and matplotlib together now. It also looks like Matplotlib loads PIL ""the wrong way"" in other modules, should I report it to them?. Original comment by: mathias_laurin",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1238#issuecomment-281803148:231,access,accessinit-hash-collision-,231,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1238#issuecomment-281803148,1,['access'],['accessinit-hash-collision-']
Security,"You mean, instead of the string? Data can only be returned via; obgenericdata. On 28 Nov 2017 21:10, ""Maciej Wójcikowski"" <notifications@github.com> wrote:. > While you're at it, is it possible to expose this function to a python; > API? I think most of us would like to use it to get a list.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/pull/1712#issuecomment-347664466>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGeeQp32g1gUYbD4EHQ22pCjnBf4Vks5s7HazgaJpZM4Qt58A>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1712#issuecomment-347902435:197,expose,expose,197,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1712#issuecomment-347902435,1,['expose'],['expose']
Security,"You need to keep a reference to the molecule if you are accessing its; atoms. Otherwise the atom is destroyed when the molecule goes out of scope. On 19 Jul 2017 2:50 a.m., ""Geoff Hutchison"" <notifications@github.com>; wrote:. > Seriously, I'm not sure why anyone would want to do that. Why would you; > want to re-parse the same string repeatedly?; >; > But what you're doing later is just bad code. You're parsing a molecule; > that Python probably treats as a temporary. Then you grab an atom; > reference. That's still probably a temporary. Then you put that into a list.; >; > Then *after* putting all those atom references in a list, you interrogate; > them? I'm not surprised it leads to weird behavior. Python (and the SWIG; > interface) can't determine whether the temporary can be free, so it; > probably frees some of them. Now you're asking for valence on some; > undefined C++ pointer.; >; > What exactly are you trying to do? Then we can probably come up with a; > safe way to do that.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/1602#issuecomment-316248688>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGelHVyH_Q3jXPmhX3bRQYeEp2NDWks5sPWDQgaJpZM4OXSC1>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1602#issuecomment-316469990:56,access,accessing,56,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1602#issuecomment-316469990,1,['access'],['accessing']
Security,]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be inst,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:4095,secur,security,4095,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security,"`; does not. *However*. I noticed `C[C@H]1CC[N@@]2CCC[C@@H]12` is described with nitrogen as a stereocentre. Thus, when submitted *as such* to either [PubChem Sketcher](https://pubchem.ncbi.nlm.nih.gov/edit3/index.html) or the [ChemDraw JS sample page](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#) visualized with a wedge:. ![initial_state](https://user-images.githubusercontent.com/19709084/123659339-1b185800-d822-11eb-9fc5-2cbd3506ad28.png). Since the conversion SMILES to canonical SMILES ; ```; obabel -:""C[C@H]1CC[N@@]2CCC[C@@H]12"" -ocan; ```; yields `C[C@H]1CC[N@]2[C@H]1CCC2` with the same issue in visualization and format conversion, I passed the canonical SMILES to RDKit (version 2020.09.4, as provided by Debian's repositories) :; ```; >>> import rdkit; >>> from rdkit import Chem; >>> ; >>> # SMILES to mol:; >>> m = Chem.MolFromSmiles(""C[C@H]1CC[N@]2[C@H]1CCC2""); >>> ; >>> # mol to SMILES:; >>> Chem.MolToSmiles(m); 'C[C@H]1CCN2CCC[C@@H]12'; >>> ; ```; *This* newly generated SMILES string is visualized differently now, without the wedge on nitrogen. ![later_state](https://user-images.githubusercontent.com/19709084/123661419-0b017800-d824-11eb-8b9a-e1a5a517ffb5.png). and the attempt to convert this to a 3D `.xyz` by; ```; obabel -:""C[C@H]1CCN2CCC[C@@H]12"" -h --gen3d -oxyz -O output.xyz; ```; does not yield any warning (even if it is not OpenBabel's canonical SMILES string, `C[C@H]1CCN2[C@H]1CCC2`). Perhaps this is a bypass for a few instances when OpenBabel otherwise states ""Open Babel Warning in CorrectStereoAtoms"", but is there a more efficient way to for this in OpenBabel itself? Is there a ""SMILES sanitizer"", other than the options listed in section 18.1.7?. <!-- ## Steps to Reproduce -->; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2393:3825,sanitiz,sanitizer,3825,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2393,1,['sanitiz'],['sanitizer']
Security,"```; $ python3.9 wgtRotorSrch.py hashizume.cif; Traceback (most recent call last):; File ""/disk-samsung/freebsd-ports/science/py-openbabel/work-py39/openbabel-3.1.1.1/examples/wgtRotorSrch.py"", line 32, in <module>; ff.SetLogLevel(openbabel.OBFF_LOGLVL_LOW); AttributeError: 'NoneType' object has no attribute 'SetLogLevel'; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2548:33,hash,hashizume,33,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2548,1,['hash'],['hashizume']
Security,a) The ECFP implementation was expecting the ``std::vector<int>`` to be treated as a list of hashes whilst the callers were expected it to be a bit set. Whilst return the raw hash values is useful it would require a new API point.; b) Resolves #1651. With these changes the fingerprint scores 76.2% on the Briem Lessel benchmark. . Also looks like the ``Fold()`` function is doing the wrong thing elsewhere too. For example if I generate MACCS keys...; ```; 0000000000021000014416cf1be5b083ad2fef7f1f	204; 0004200000000021418004afa160b00910a1e46a1b	205; 8004040000100200000816cf8d69b847856dfefb19	206; 000000002000002141d034e82b61b08b01230d2d1f	207; 00000000204000840194b1091b73b3e781eb2fff1f	208; ```; and then fold them to say 256 bits... one would expect the output to be padded with trailing zeros; ```; 000000000000300001d204de90699425843952fe1f0000000000000000000000	173; 801480800d580b84e5fc9ded3773d16fd6efeb7f1f0000000000000000000000	174; 000000040000000000000006800c2e84290404d6080000000000000000000000	175; 0000000000000000810002401b510165546fc3ff1f0000000000000000000000	176; 000000002000002001d0169e9b61b16340e3cdfb1f0000000000000000000000	177; 0000000000400084015085871013a7e58deff7df1f0000000000000000000000	178; ```; good... but now 512...; ```; 000004000001002001c4301e9b61bd43cce17deb1f00000000000000000000007373000000000000510000000000000000000000000000000900000006000000	17; 0000000000000001038002461a81a18149a1c5391f00000000000000000000007373000000000000510000000000000024000000000000002400000000000000	18; 0000000000002000800230510000016604dcbafa1f00000000000000000000007373000000000000b10000000000000090460828177f00000000000000000000	19; 0000000000000000004434c80960b1e38963afff1f00000000000000000000007373000000000000210000000000000090be6d000000000098be6d0000000000	20; 000000002000102181d41ecf133192635c6feafd1f00000000000000000000007373000000000000f10100000000000058f86d000000000008fc6e0000000000	21; 0000800008108364600cb1703f59ecafdbbb7fff1f00000000000000000000007373000000,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1653:93,hash,hashes,93,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1653,2,['hash'],"['hash', 'hashes']"
Security,access record count by the compiled obabel executable,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2639:0,access,access,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2639,1,['access'],['access']
Security,ain DEP-11 64x64 Icons [98.3 kB]; Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu fo,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:2418,secur,security,2418,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security,al-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be installed:; libopenbabel6 libschroedinger-maeparser1; The following NEW packages will be installed:; libopenbabel6 libschroedinger-maeparser1 ope,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:4254,secur,security,4254,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security,archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-1,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:2937,secur,security,2937,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security,"as atomIdVector ; not being reset.). This is now fixed in the CVS version and is being tested. I'll ; forward a patch shortly.; -Geoff. Program received signal SIGSEGV, Segmentation fault.; [Switching to Thread 16384 (LWP 25081)]; 0x41051f22 in OpenBabel::OBBond::GetEndAtomIdx() const ; (this=0xbfffe350); at mol.h:444; 444 unsigned int GetEndAtomIdx() const ; {return(_end-&gt;GetIdx());}; (gdb) bt; #0 0x41051f22 in OpenBabel::OBBond::GetEndAtomIdx() const ; (this=0xbfffe350); at mol.h:444; #1 0x410a5035 in ; OpenBabel::OBMol::AddBond(OpenBabel::OBBond&amp;) (; this=0xbfffeaf0, bond=@0xbfffe350) at mol.cpp:2149; #2 0x41135a33 in OpenBabel::endBond() () at cml.cpp:1995; #3 0x4112efee in OpenBabel::endElement(std::string, ; std::string, std::string); (localName=Cannot access memory at address 0xb41a718; ) at cml.cpp:1175; #4 0x4112ede4 in OpenBabel::endElement(std::string) ; (name=Cannot access memory; at address 0xb41a718; ) at cml.cpp:1156; #5 0x4112b122 in OpenBabel::tag(std::string) (s=Cannot ; access memory at address 0xb41a718; ) at cml.cpp:702; #6 0x4112a0f2 in OpenBabel::ReadXML(std::istream&amp;) ; (ifs=@0xbfffeb60); at cml.cpp:626; #7 0x4113b186 in OpenBabel::ReadCML(std::istream&amp;, ; OpenBabel::OBMol&amp;, char const*) (ifs=@0xbfffeb60, ; mol=@0xbfffeaf0, title=0x808e2bd &quot;Untitled&quot;); at cml.cpp:2894; #8 0x411079fe in ; OpenBabel::OBFileFormat::ReadMolecule(std::istream&amp;, ; OpenBabel::OBMol&amp;, char const*) (ifs=@0xbfffeb60, ; mol=@0xbfffeaf0,; title=0x808e2bd &quot;Untitled&quot;) at fileformat.cpp:43; #9 0x0805fafb in do_open_with_babel(char const*, char ; const*, gcpDocument*, OpenBabel::io_type) ; (filename=0x84af870 &quot;/home/Jean/projects/GChemPaint/; 2.cml&quot;,; ext=0x84b65f0 &quot;\003&quot;, pDoc=0x0, Type=CML) at file.cc:294; #10 0x0805f1d2 in file_process(char const*, int, bool, ; gcpDocument*) (; filename=0x40e089e0 &quot;/home/Jean/projects/GChemPaint/; 2.cml&quot;, filetype=2,; bSave=false, pDoc=0x0) at file.cc:198. Origin",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/420#issuecomment-281774687:1104,access,access,1104,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/420#issuecomment-281774687,1,['access'],['access']
Security,"babel ""Open Babel 2.2.1 -- Mar 1 2009 -- 19:20:41"" crashes; on ""Darwin 9.7.0 Darwin Kernel Version 9.7.0: Tue Mar 31 22:52:17 PDT 2009; root:xnu-1228.12.14~1/RELEASE_I386 i386""; for ""babel -i cif 2aev.cif -o pdb test2.pdb""; with; ==============================; *** Open Babel Warning in Init; Unable to open data file 'space-groups.txt'; ==============================; *** Open Babel Warning in Init; Cannot initialize database; Segmentation fault. at. Program received signal EXC_BAD_ACCESS, Could not access memory.; Reason: KERN_INVALID_ADDRESS at address: 0xfffffffc; 0x937666e1 in __gnu_cxx::__exchange_and_add (); #1 0x93756070 in std::string::_Rep::_M_dispose (); #2 0x937580a6 in std::string::assign (); #3 0x000ddac5 in OpenBabel::CIFData::ExtractSpacegroup (); #4 0x000e07a7 in OpenBabel::CIFData::ExtractAll (); #5 0x000e2c8f in OpenBabel::CIF::CIF (); #6 0x000e2ddc in OpenBabel::CIFFormat::ReadMolecule (); #7 0x0030eaea in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl (); #8 0x0000f4d8 in OpenBabel::OBMoleculeFormat::ReadChemObject (); #9 0x002f80e8 in OpenBabel::OBConversion::Convert (); #10 0x002f9f44 in OpenBabel::OBConversion::Convert (); #11 0x002fa96d in OpenBabel::OBConversion::FullConvert (); #12 0x00002ea0 in main (). Reported by: knollentroll",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/910:505,access,access,505,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/910,1,['access'],['access']
Security,babel nanotube.xyz -O nanotube.cif; or ; obabel nanotube.xyz -O nanotube.cif . ==============================; *** Open Babel Error in expand_cycle; maximum time exceeded...; ==============================; *** Open Babel Error in expand_cycle; maximum time exceeded...; ==============================; *** Open Babel Error in ... both fail in converting a simple xyz file nanotube.xyz (attached). Using gdb I find the code is hung inside kekulize.cpp . If you change the C's to H's in nanotube.xyz babel runs fine. . babel nanotube_H.xyz -O nanotube_H.cif; 1 molecule converted; 9 audit log messages . I have attached that working version too. I recompiled babel with -g -O0 and that did not help. Ron Cohen; rcohen@gl.ciw.edu. Reported by: recohen. Original Ticket: [openbabel/bugs/870](https://sourceforge.net/p/openbabel/bugs/870),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1250:582,audit,audit,582,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1250,1,['audit'],['audit']
Security,"bel in gdb produces the following output:. (gdb) run; Starting program: /home/cjh/local/bin/babel -ig03 1.gjf -oreport; [Thread debugging using libthread_db enabled]. Program received signal SIGSEGV, Segmentation fault.; __strlen_sse2 () at ../sysdeps/x86_64/multiarch/../strlen.S:31; 31	../sysdeps/x86_64/multiarch/../strlen.S: No such file or directory.; 	in ../sysdeps/x86_64/multiarch/../strlen.S; (gdb) bt; #0 __strlen_sse2 () at ../sysdeps/x86_64/multiarch/../strlen.S:31; #1 0x00007ffff6cfa5cc in std::string::operator+=(char const*) () from /usr/lib/libstdc++.so.6; #2 0x00007fffed87e180 in OpenBabel::GaussianOutputFormat::ReadMolecule (this=0x7fffeda97610, pOb=0x62f040, pConv=0x7fffffffd5a0); at /home/cjh/local/src/openbabel/src/formats/gaussformat.cpp:324; #3 0x00007ffff770ec3c in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl (pConv=0x7fffffffd5a0, pFormat=0x7fffeda97610); at /home/cjh/local/src/openbabel/src/obmolecformat.cpp:105; #4 0x00007ffff6389d97 in OpenBabel::OBMoleculeFormat::ReadChemObject (this=0x7fffeda97610, pConv=0x7fffffffd5a0); at /home/cjh/local/src/openbabel/include/openbabel/obmolecformat.h:114; #5 0x00007ffff76970af in OpenBabel::OBConversion::Convert (this=0x7fffffffd5a0) at /home/cjh/local/src/openbabel/src/obconversion.cpp:485; #6 0x00007ffff7696d99 in OpenBabel::OBConversion::Convert (this=0x7fffffffd5a0, is=0x7fffffffcdf0, os=0x0) at /home/cjh/local/src/openbabel/src/obconversion.cpp:418; #7 0x00007ffff769af11 in OpenBabel::OBConversion::FullConvert (this=0x7fffffffd5a0, FileList=..., OutputFileName=..., OutputFileList=...); at /home/cjh/local/src/openbabel/src/obconversion.cpp:1378; #8 0x000000000040573e in main (argc=4, argv=0x7fffffffd8f8) at /home/cjh/local/src/openbabel/tools/babel.cpp:347. This problem seems specific to the Gaussian file parser; for example, this works fine. $ babel -igamin emptyfile -oreport; 0 molecules converted; 2 audit log messages . This problem occurs as of r4430 on ubuntu-10.04 x86_64. Reported by: @jiahao",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1098:2034,audit,audit,2034,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1098,1,['audit'],['audit']
Security,buntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiver,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:3310,secur,security,3310,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security,cannot access addFragment() function,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2536:7,access,access,7,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2536,1,['access'],['access']
Security,"cccc2CN1; C[C@H]1Cc2ccccc2CN1; FC[C@H]1Cc2ccccc2CN1; N[C@@H]1CCSC1=O; N[C@H]1CCSC1=O; OC(=O)C[C@@H]1CCNC1; OC(=O)C[C@H]1CCNC1; OC[C@H]1Cc2ccccc2CN1. Failed InChI:; C\C=N/OC[C@H]1CCCN1C; CN(C)CC#C[C@H]1CCCN1; CN1CCC[C@H]1c2cccnc2; CP(O)(=O)C[C@H](O)CN; FC[C@@H]1CCCN1; N[C@H]1CCn2cccc2C1; NC[C@@H]1CC(=O)NO1; NC[C@H]1CC(=O)NO1; NC[C@H]1COc2ccccc2O1; OC(=O)[C@@H]1CCCN1. Failed SMILES:; CC(C)[C@H](N)C(O)=O; CC[C@H](O)C([O-])=O; CO[C@@H](CN)c1ccccc1; CO[C@H](CN)c1ccccc1; N[C@@H](CO)C(O)=O; N[C@H](CO)C(O)=O; NCCC[C@H](N)C(O)=O; NCCSC[C@H](N)C(O)=O. Command being used: babel ---errorlevel 2 -ocan -ismi <string>; (or -oinchi for inchi output). Open Babel 2.1.1 -- Sep 28 2007 -- 18:13:29; Altix Itanium; Intel(R) C++ Itanium(R) Compiler for Itanium(R)-based applications; Version 8.0 Build 20031017 Package ID: l_cc_p_8.0.056; Copyright (C) 1985-2003 Intel Corporation. All rights reserved. To be honest, I don't have many independent mechanisms to verify that OpenBabel is the point of failure in all cases; I can't read the SMILES 'by eye', and I don't have access to other internal tools to test the chirality. I detect 'disruption' when the OpenBabel generated key (either 'can' or 'inchi' format) differs depending on if I use the molfile or SMILES string supplied by the vendor; it's possible that the vendor has not done the molfile-to-SMILES mapping properly, and that the chirality differs within the vendor DB. So I am passing judgment on the molecules based on graphical visualization provided by PubChem:. http://pubchem.ncbi.nlm.nih.gov/edit/. ... and whenever I've spot-checked a disruption by this (unwieldy) mechanism, the chirality of the vendor-supplied SMILES matches that of the key generated by OB via the vendor-supplied molfile, but not the OB key made from the vendor-supplied SMILES (I can't be sure that there is not a bug within the PubChem tool, though). In a few cases, converting to InChI seems to demonstrate indisputable lost of stereochemical information. The following",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/683:2037,access,access,2037,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/683,1,['access'],['access']
Security,ckages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:2601,secur,security,2601,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security,"clang-9 found this issue:. ```; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-1/src/fingerprints/finger3.cpp:258:34: warning: unsequenced modification and access to 'div' [-Wunsequenced]; ngrp = (num + div -1)/div--; //rounds up; ~~~ ^; 1 warning generated.; ```. The first use of ""div"" is ambiguous according to the C++ standard: it would use either ""div"" or ""div-1"", depending on the optimization level or code surroundings.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2215:167,access,access,167,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2215,1,['access'],['access']
Security,"conda); Operating system and version: Mac OS 10.12.5 (Sierra); Python version: 3.6.1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I expect pybel library calls to either return or throw a catchable exception. ## Steps to Reproduce and Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I have a python function that reads in a bunch of xyz files into pybel Molecule objects. Later on I iterate over all of the Molecule objects and read variables from some of the pybel Atom objects within each Molecule (to generate features for machine learning). While trying to access the Atom objects and variables within them a segmentation fault occurs that kills the python interpreter (it terminates with exit code 139). I can also kill the python interpreter with a segfault while my code is paused in the debugger (which I access through Eclipse / PyDev) by navigating into and trying to inspect pybel Atoms' variables. The segfault does not always occur when accessing the first Atom and does not consistently happen on the same Atom when running the exact same code multiple times in succession but it does usually happen within the first 5-10 Atoms. ## Notes. Sorry I understand this is probably difficult to debug because of its inconsistency and lack of a small reproducible example but I've already spent a lot of time trying to understand what was going on so hopefully I can give enough information to still be helpful. My current workaround which appears to be working is to have a wrapper python atom class around the pybel atom class with variables to keep a copy of all the data that I use from the pybel atom. I initialize those variables in my wrapper's constructor right after the pybel Atom and OBAtom are constructed before their data becomes corrupted. My speculation would be that somewhere in the (p",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1602:1750,access,access,1750,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1602,1,['access'],['access']
Security,curl: (60) SSL certificate problem: certificate has expired,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2628:15,certificate,certificate,15,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2628,2,['certificate'],['certificate']
Security,"dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/typeobject.c:1024; dict = <optimized out>; dictptr = 0x7ffff6c07760; _tstate = 0x604680; type = <optimized out>; base = 0x7ffff7d76220 <PyBaseObject_Type>; basedealloc = 0x7ffff7a18a70 <object_dealloc>; tstate = 0x604680; #12 0x00007ffff7a0184b in insertdict (mp=mp@entry=0x7ffff6c277a0, key='t', hash=-7895860575028071718, value=value@entry=None); at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/dictobject.c:824; old_value = <optimized out>; value_addr = 0x821cf0; ep = 0x821ce0; #13 0x00007ffff7a0371a in PyDict_SetItem (; op=op@entry={'__package__': None, '__loader__': None, '__doc__': None, '__name__': None, '__builtins__': <module at remote 0x7ffff7fe4440>, 't': N; one, 'ob': <module at remote 0x7ffff68d7908>}, key=<optimized out>, value=value@entry=None); at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/dictobject.c:1208; mp = 0x7ffff6c277a0; hash = <optimized out>; #14 0x00007ffff7a0b3fc in _PyModule_Clear (m=<optimized out>); at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/moduleobject.c:322; pos = 11; key = 't'; value = <OBMol(this=<SwigPyObject at remote 0x7ffff6b8ade0>) at remote 0x7ffff6c07750>; d = {'__package__': None, '__loader__': None, '__doc__': None, '__name__': None, '__builtins__': <module at remote 0x7ffff7fe4440>, 't': None,; 'ob': <module at remote 0x7ffff68d7908>}; #15 0x00007ffff7a88abd in PyImport_Cleanup () at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Python/import.c:347; pos = 140737351971893; ndone = <optimized out>; key = 0x0; value = <module at remote 0x7ffff6beb128>; dict = <optimized out>; interp = 0x6045e0; modules = {'encodings.utf_8': <module at remote 0x7ffff6c45e18>, '_thread': <module at remote 0x7ffff6c3ce18>, '_codecs': <module at remote 0x; 7ffff6c58878>, 'DLFCN': <module at remote 0x7ffff6797680>, '__main__': <module at remote 0x7ffff6beb128>, 'mpl_toolkits': <module at remote 0x7ffff68b; 2b48",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/21#issuecomment-29000592:4540,hash,hash,4540,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/21#issuecomment-29000592,1,['hash'],['hash']
Security,"e problem, I think, will be enough to add an atom label to the hash. The atom label could be easily added to the hash, although I'm not understanding how the cif file is organized. Do you have Si and Al atoms overlapping?. > Optional suggestion. My filling is that FillUnitCell cannot hangs on real structures with all atoms to all atoms distance algorithm. 1000 atoms (1E6 pairs) will be processed in a few second. My issue is that I'm using unit cells with ~10,000 atoms, so 1E8 pairs. I have some cifs that take a few hours on the O(N^2) FillUnitCell :(. > 1) It will be good to control accuracy of the duplicity. For this I can suggest not to use string hash, but make a class with overridden ""<"" operator which can compare vectors with some precision (and also atom labels). And after that use the class in set. The implementation should be significantly faster.; > 2) Use in second part of the function (where you check the duplicity of the transformed structures) not all coordinateSet, but set, with only transformed coordination of the site. You're right that there are better approaches than the hash. In fact, game developers have hyper-optimized 3-dimensional collision detection approaches. The common solution is called an [octree](http://en.wikipedia.org/wiki/Octree), and there are [open-source GPL implementations in C++](http://nomis80.org/code/octree.html). An octree is basically a three-dimensional binary tree (8 = 2^3), and has O(NlogN) performance. Accuracy is controlled by the number of decision steps in tree traversal. In this case, fractional coordinate absolute accuracy should be 0.5^n, where n is the number of steps used. I'll play around with an octree implementation soon, as it's definitely better. Until then, the hash approach proves the point and required only small changes to the source. Thanks for looking into this and giving advice! I'll add a commit for the atom-label hash tonight, and hopefully get an octree running by the end of the week. Cheers,; Pat",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/23#issuecomment-23723081:1379,hash,hash,1379,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/23#issuecomment-23723081,3,['hash'],['hash']
Security,"e set of CIP rules (i.e., even lower than hydrogen). To quote G. P. Moss searchable index of IUPAC's Blue Book:. > [P-93.4.2.1.3 Descriptors ‘E’ and ‘Z’ to denote double bonds linked to heteroatoms](https://iupac.qmul.ac.uk/BlueBook/P9.html#92): ... A lone pair of electrons, when present, is considered to have the atomic number ‘0’ (zero). Which applies e.g., on chiral sulfoxides, chiral amines (e.g., Troeger base), etc. The reason to point of *single lone pair* are suggestions how to deal with (supra)molecular structures with more than one lone pair around an atom (e.g., oxygen) e.g., by José Elguero. ---. Of tangential interest may be a paper by Robert Hanson *et al.* about the algorithmic application of the CIP rules for that the publication includes reference structures (.smi SMILES, 2D and 3D v2000 .sdf) of a cipvalidator ([GitHub repository](https://github.com/CIPValidationSuite/ValidationSuite), [web page](https://cipvalidationsuite.github.io/ValidationSuite/)). This set of 300 models includes four sulfoxides (three of them chiral), too:. ![sulfoxides](https://user-images.githubusercontent.com/19709084/153706252-f719c8ad-d6f6-4e00-97a8-fbc86f9b59da.png). (3D .sdf data of cipvalidator read by [DataWarrior](https://openmolecules.org/index.html) including a motif of DMSO as substructure; in addition to the original data, DataWarrior assigned SMILES strings (last column)). Elguero, J. Is it possible to extend the Cahn-Ingold-Prelog priority rules to supramolecular structures and coordination compounds using lone pairs? *Chem. Int.* **2016**, *38*; [doi 10.1515/ci-2016-0633](https://doi.org/10.1515/ci-2016-0633) (open access). Hanson R. M.; Musacchio, S.; Mayfield, J. W.; Vainio, M. J.; Yerin, A.; Redkin D. Algorithmic Analysis of Cahn–Ingold–Prelog Rules of Stereochemistry: Proposals for Revised Rules and a Guide for Machine Implementation. *J. Chem. Inf. Model.* **2018**, *58*, 1755-1765; [doi 10.1021/acs.jcim.8b00324](https://doi.org/10.1021/acs.jcim.8b00324l).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2451#issuecomment-1037101176:1715,access,access,1715,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2451#issuecomment-1037101176,1,['access'],['access']
Security,"e(OpenBabel::OBBase*, std::string) (in /usr/lib/libopenbabel.so.3.0.3); ==7186== by 0x804D21D: MainWindow::MainWindow(QWidget*) (in /home/carsten/git/Molecules/Molecules); ==7186== by 0x804BCF4: main (main.cpp:7); ==7186== ; ==7186== Invalid read of size 4; ==7186== at 0x4FB79FB: std::locale::~locale() (in /usr/lib/libstdc++.so.6.0.13); ==7186== by 0x4FB49E0: std::ios_base::~ios_base() (in /usr/lib/libstdc++.so.6.0.13); ==7186== by 0x4FCD872: std::basic_istream<char, std::char_traits<char> >::~basic_istream() (in /usr/lib/libstdc++.so.6.0.13); ==7186== by 0x40FC03A: OpenBabel::OBConversion::~OBConversion() (in /usr/lib/libopenbabel.so.3.0.3); ==7186== by 0x723B420: OpenBabel::XMLConversion::~XMLConversion() (in /usr/lib/openbabel/2.2.3/cmlformat.so); ==7186== by 0x40FBE27: OpenBabel::OBConversion::~OBConversion() (in /usr/lib/libopenbabel.so.3.0.3); ==7186== by 0x804D57D: MainWindow::MainWindow(QWidget*) (in /home/carsten/git/Molecules/Molecules); ==7186== by 0x804BCF4: main (main.cpp:7); ==7186== Address 0x0 is not stack'd, malloc'd or (recently) free'd; ==7186== ; ==7186== ; ==7186== Process terminating with default action of signal 11 (SIGSEGV); ==7186== Access not within mapped region at address 0x0; ==7186== at 0x4FB79FB: std::locale::~locale() (in /usr/lib/libstdc++.so.6.0.13); ==7186== by 0x4FB49E0: std::ios_base::~ios_base() (in /usr/lib/libstdc++.so.6.0.13); ==7186== by 0x4FCD872: std::basic_istream<char, std::char_traits<char> >::~basic_istream() (in /usr/lib/libstdc++.so.6.0.13); ==7186== by 0x40FC03A: OpenBabel::OBConversion::~OBConversion() (in /usr/lib/libopenbabel.so.3.0.3); ==7186== by 0x723B420: OpenBabel::XMLConversion::~XMLConversion() (in /usr/lib/openbabel/2.2.3/cmlformat.so); ==7186== by 0x40FBE27: OpenBabel::OBConversion::~OBConversion() (in /usr/lib/libopenbabel.so.3.0.3); ==7186== by 0x804D57D: MainWindow::MainWindow(QWidget*) (in /home/carsten/git/Molecules/Molecules); ==7186== by 0x804BCF4: main (main.cpp:7). Original comment by: @cniehaus",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1060#issuecomment-281797963:2338,Access,Access,2338,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1060#issuecomment-281797963,1,['Access'],['Access']
Security,"e, if converted to a SMILES string, appears to have a saturated 6 membered ring, whereas it actually contains a phenyl ring. To be specific, the problem is that the benzene ring in the ACB_PCA-0004 molecule is not perceived correctly. NewPerceiveKekuleBonds doesn't seem to be doing its job. Actually, I'm not sure why this function is being called...according to the API, this function ""has been specifically designed to handle molecule files without explicit hydrogens"". This molecule does have explicit hydrogens... If you turn on the error messages you will see... ============================START. babel -iMOL2 ACB_PCA-0004.mol2 -oMOL2 tmp.mol2 ---errorlevel 4; ==============================; *** Open Babel Audit Log in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl; OpenBabel::Read molecule Sybyl Mol2 format; ==============================; *** Open Babel Audit Log in OpenBabel::OBMol::Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in OpenBabel::OBMol::Kekulize; Ran OpenBabel::Kekulize; ==============================; *** Open Babel Audit Log in OpenBabel::OBMol::FindRingAtomsAndBonds; Ran OpenBabel::FindRingAtomsAndBonds; ==============================; *** Open Babel Information in OpenBabel::OBMol::NewPerceiveKekuleBonds; Kekulize: Huckel rule not satisfied for molecule ACB_PCA-0004. ==============================; *** Open Babel Information in OpenBabel::OBMol::NewPerceiveKekuleBonds; Kekulize: Huckel rule not satisfied for molecule ACB_PCA-0004; Kekulize: Cannot get an even number of electron for molecule ACB_PCA-0004. ==============================; *** Open Babel Audit Log in OpenBabel::OBMoleculeFormat::WriteChemObjectImpl; OpenBabel::Write molecule Sybyl Mol2 format; ==============================; *** Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignTypes; Ran OpenBabel::AssignTypes; ==============================; *** Open Babel Audit Log in OpenBabel::OBAromaticTyper::AssignAromaticFlags; Ran OpenBabel:",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/671:780,Audit,Audit,780,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/671,4,['Audit'],['Audit']
Security,es/main amd64 DEP-11 Metadata [279 kB]; Get:11 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 48x48 Icons [60.8 kB]; Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 64x64 Icons [98.3 kB]; Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu ,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:2233,secur,security,2233,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security,est_phmodel_1; --; 203: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 203: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 204; Start 204: test_residue_1; --; 204: ../src/residue.cpp:853:13: runtime error: member call on address 0x7fff3b32ed70 which does not point to an object of type 'OpenBabel::OBAtom'; 204: 0x7fff3b32ed70: note: object is of type 'OpenBabel::OBBase'; 204: 00 00 00 00 b0 9e 9e 36 b4 7f 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 204: ^~~~~~~~~~~~~~~~~~~~~~~; 204: vptr for 'OpenBabel::OBBase'; 204: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/residue.cpp:853:13 in ; 204: ../include/openbabel/atom.h:160:45: runtime error: member access within address 0x7fff3b32ed70 which does not point to an object of type 'OpenBabel::OBAtom'; 204: 0x7fff3b32ed70: note: object is of type 'OpenBabel::OBBase'; 204: 00 00 00 00 b0 9e 9e 36 b4 7f 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 204: ^~~~~~~~~~~~~~~~~~~~~~~; 204: vptr for 'OpenBabel::OBBase'; 204: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../include/openbabel/atom.h:160:45 in ; --; test 211; Start 211: inchiSamples.sdf_Test; --; 211: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; 211: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; --; 211: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:19658,access,access,19658,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['access'],['access']
Security,etadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multi,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:2509,secur,security,2509,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,2,['secur'],['security']
Security,"few bugs. This pull request aims to fix some of them:. **Issue 1:** Density calculations overestimate real value. To replicate, use [CoMOF74](https://gist.github.com/patrickfuller/6419438):. ``` python; import pybel; with open(""CoMOF74.cif"") as in_file:; mof = in_file.read(); mol = pybel.readstring(""cif"", mof); mol.unitcell.FillUnitCell(mol.OBMol); # Density in g/cm^3. Should be ~1.2; print sum(atom.atomicmass for atom in mol.atoms) / (mol.unitcell.GetCellVolume() * 0.6022); ```. The problem here is that the duplicate-atom checking in `OBUnitCell::FillUnitCell` assumes the input atoms are already unique. If this isn't the case, the method compounds the error. Fixed by checking the input atoms before expanding the unit cell in `FillUnitCell` (maybe this kind of check belongs somewhere else?). **Issue 2:** `OBUnitCell::FillUnitCell` hangs on large unit cells. This is due to the algorithm used in atom checking. It checks atom-atom distances, which is O(N^2). The new approach uses a hash, which should be amortized O(N). It uses the extra speed to check _every_ atom for uniqueness, rather than just symmetry unique ones. Note that a better approach would use an octree, but the hash was easier to implement and proves the point. **Issue 3:** `OBUnitCell::FillUnitCell` doesn't check all possible duplicates. To replicate, use [FeMOF74](https://gist.github.com/patrickfuller/6419438) and the above script. The underlying issue is that `FillUnitCell` assumes that the listed symmetry operations are logical. However, CIFs are a mess. In the case of the example cif, the file already has more than one unitcell worth of atoms, and additionally has defined symmetry operations. This is solved by the solution of Issue 2; by using the extra speed afforded by the hash to check every atom-atom connection, we can check for more duplicates. **Issue 4:** Some crystallographic programs fail if atom coordinates are not in [0, 1]. It's annoying, but an easy fix. I just added `WrapFractionalCoordi",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/23:1100,hash,hash,1100,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/23,1,['hash'],['hash']
Security,"generate features for machine learning). While trying to access the Atom objects and variables within them a segmentation fault occurs that kills the python interpreter (it terminates with exit code 139). I can also kill the python interpreter with a segfault while my code is paused in the debugger (which I access through Eclipse / PyDev) by navigating into and trying to inspect pybel Atoms' variables. The segfault does not always occur when accessing the first Atom and does not consistently happen on the same Atom when running the exact same code multiple times in succession but it does usually happen within the first 5-10 Atoms. ## Notes. Sorry I understand this is probably difficult to debug because of its inconsistency and lack of a small reproducible example but I've already spent a lot of time trying to understand what was going on so hopefully I can give enough information to still be helpful. My current workaround which appears to be working is to have a wrapper python atom class around the pybel atom class with variables to keep a copy of all the data that I use from the pybel atom. I initialize those variables in my wrapper's constructor right after the pybel Atom and OBAtom are constructed before their data becomes corrupted. My speculation would be that somewhere in the (pybel Atom -> swig OBAtom wrapper -> C++ OBAtom -> variable) chain memory is being deallocated even though I still have a reference to the pybel Atom. This is because using the debugger I was able to determine that I can access an Atom's variable (e.g. ""valence"") right after I initialize it without a failure and then receive a segmentation fault when trying to access the same variable at the same memory location later in the program. P.S. I'm new so I didn't want to change the wiki without communicating with anyone else but maybe the instructions on bug reporting at http://openbabel.org/wiki/Help should point directly to GitHub instead of pointing to SourceForge which then points to here",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1602:2966,access,access,2966,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1602,2,['access'],['access']
Security,"h and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be remo",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2546:3063,secur,security,3063,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2546,1,['secur'],['security']
Security,"hemical Formats ; seems to be to a 256 character limit on the filter string ; and has only come to light when all the formats were ; included. Why this should occur needs tracking down. (5) illustrates a UI dilemma. Should ; a)the type of file requested, or ; b)the extension of the file selected by the user ; have priority on what format OB attempts to convert. I ; chose b), and I provided a Force this Format checkbox to ; cover the case where this was not what was required. You ; prefer a), giving priority to the user's earlier choice ; via the Format dropdown and an opportunity to Force file ; Extension via a checkbox. Both are reasonable, but I ; prefer a) on the principle that it uses a later deliberate ; user choice. (6) I agree that more feedback is needed to help the user ; to know whether local or file input is being used. Making ; it read-only when the file option is selected and ; automatically updating the contents from a file seem to be ; good ways. (8) This is not a bug. SMILES has no coordinate ; information; a straight conversion correctly gives zero ; coordinates. At present OpenBabel doesn't have the ; capability to generate coordinates. I'm not an expert, but ; I suspect that this can be done at many levels of realism, ; with the top ones being big computations. OB needs ; something though, and the user must be given it as an ; option and be made aware somehow of the possible ; deficiencies. The 4mols.smi wasn't really intended as an example; it ; just got left there. I agree that a 3D molecule would be ; better. The GUI really needs to display error/audit messages, and ; I guess this could be a pane at the bottom of the window. ; It also cannot handle some feature of the commandline ; interface - like specifying the target for a fastsearch as ; a file, and setting audit levels. And of course it needs a ; graphical display for molecular structure and some of the ; other nice features of Chris Swain's Mac interface. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810307:2656,audit,audit,2656,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810307,4,['audit'],['audit']
Security,idization ; ============================== ; *** Open Babel Audit Log in FindSSSR ; Ran OpenBabel::FindSSSR ; ============================== ; *** Open Babel Audit Log in IsClosure ; Ran OpenBabel::PerceiveClosureBonds ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ;,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:3072,Audit,Audit,3072,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Audit'],['Audit']
Security,"importing pybel and matplotlib.backends.backend_qt4agg crashes with error; ""AccessInit: hash collision: 3 for both 1 and 1"". On windows XP, I have the latest pythonxy with python 2.7.3 and matplotlib 1.1.1; I have installed openbabel gui 2.3.1 and the python bindings version 1.7. pybel/openbabel work as expected from a python CLI. Matplotlib as well, as long as they are not used together. However,. &gt;&gt;&gt; import pybel; &gt;&gt;&gt; import matplotlib.backends.backend_qt4agg; AccessInit: hash collision: 3 for both 1 and 1. ---python crash and forceful exit---. importing matplotlib.backends.backend_qt4agg first produces the same error. Note that I got the same error with python 2.7.2 from an older pythonxy, I then updated my pythonxy to 2.7.3.1 to make sure the error was still present on the latest version. Reported by: mathias_laurin. Original Ticket: [openbabel/bugs/858](https://sourceforge.net/p/openbabel/bugs/858)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1238:76,Access,AccessInit,76,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1238,4,"['Access', 'hash']","['AccessInit', 'hash']"
Security,in AssignAromaticFlags; Ran OpenBabel::AssignAromaticFlags ; ============================== ; *** Open Babel Audit Log in AssignImplicitValence; Ran OpenBabel::AssignImplicitValence ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in FindSSSR ; Ran OpenBabel::FindSSSR ; ============================== ; *** Open Babel Audit Log in IsClosure ; Ran OpenBabel::PerceiveClosureBonds ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ;,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:2680,Audit,Audit,2680,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Audit'],['Audit']
Security,"k the time to figure out which commit started causing the issue that I've been having. You're probably going to think it's strange, but believe it or not, it's this one:. ac2a135eb8560d5d8246eee2abdb5d266ad9ab17. It's that line of white space that was deleted at the end of the file. I'm really not sure why this has been causing an issue for OpenBabel::SpaceGroup::GetSpaceGroup(), but it has. . The function that is having the problem is ""const SpaceGroup \* SpaceGroup::GetSpaceGroup (const string &name_in)"" src/math/spacegroup.cpp. The match isn't being found when ""_SpaceGroups.sgbn.find(name)!=_SpaceGroups.sgbn.end()"" is being called on line 381. I looped through the map ""sgbn"" that the string is being compared to in the code, and the correct spacegroup ""-I 4bd 2c 3"" is in there. I don't know why it isn't being found. It must be some kind of iterator issue or something. But that's the last one in data/space-groups.txt, so the extra line at the end of the file must have something to do with it. Anyways, adding that extra line of whitespace at the end of data/space-groups.txt fixes the issue for me. In addition, I had another issue come up with some recent commits. ""SpaceGroup::GetSpaceGroup(""-P 1"")"" fails because of the function ""RemoveWhiteSpaceUnderscore(name_in)"" added to line 351 of this recent commit: d5de951d606735b61d1686a0ea2321066956e085. It fails because it ends up trying to compare ""-P 1"" with ""-P1"" (removing the space in the middle), and that doesn't work. Unfortunately, he says that this fixes the issues for him with PDB, so he probably wants to keep it. Maybe if I move it after match line on the next line?. Anyways, do you want me to send a pull request? The reason I need this to work is because avogadro's 'setSpaceGroup()' function crashes every time it's called because of these issues. So I can't set a spacegroup and I can't get access to features like ""fillUnitCell()"" and ""symmetrize()"" (and of course, neither can other people, too). Thanks,; Patrick",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/242#issuecomment-195695904:1892,access,access,1892,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/242#issuecomment-195695904,1,['access'],['access']
Security,"l-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be installed:; libopenbabel6 libschroedinger-maeparser1; The following NEW packages will be installed:; libopenbabel6 libschroedinger-maeparser1 openbabel python3-openbabel; 0 upgraded, 4 newly installed, 0 to remove and 344 not upgraded.; N",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:4347,secur,security,4347,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security,"llelepiped is described in `1ner.cif` is with vectors a = b = c = 1 (Angstrom) and \alpha = \beta = \gamma = 90 (degrees), yet stating the triclinic space group P1. Solution NMR does provide other information about protein structures, in _partial_ overlap with what protein crystallography by diffraction on solid samples provides. One may anticipate some quality checks for model data from crystals are not applicable here. Contrasting to this, a .pdb file does not require the provision of lattice constants because the description of a single, individual, isolated molecule is sufficent. So if there are no a, b, c, \alpha, \beta, \gamma in original .pdb accessible to you, openbabel has nothing to add about them when exporting a .cif. On the other hand, the conversion of the (multimodel) .cif provided by the database into individual .pdb (one molecule each) still is possible with other programs than openbabel. From the terminal within [Jmol](http://jmol.sourceforge.net/), for example, you may access the multimodel .cif by. ```; load ""1ner.cif"";; ```; where it will recognize the presence of 30 models. It is possible to access them one by one via the GUI (right mouse button click into the canvas), or from the program's console, e.g. ```; load models ({4}) ""1ner.cif"";; ````. to access only the fifth model in the .cif file. From there, it is possible to export them, for example by either one of the following. ```; write ""model5.pdb"";; write ""model5.sdf"" as v3000;; ```; (the `as v3000` is to access the more modern variant of .sdf allowing e.g., a larger number of atoms). If you anticipate the conversions ahead are multiple, consider to write a [Jmol script](https://chemapps.stolaf.edu/jmol/docs/) and run Jmol without a GUI:. ```bash; jmol -ions water_script.spt; ```. with . ```; -i,--silent silent startup operation; -n,--nodisplay no display (and also exit when done); -o,--noconsole no console -- all output to sysout; -s,--script <arg> script file to execute; ```. (credit to [",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2472#issuecomment-1123540418:1302,access,access,1302,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2472#issuecomment-1123540418,1,['access'],['access']
Security,"lls as anticipated; no warning, nothing. I just re-run again:; ```; To run a command as administrator (user ""root""), use ""sudo <command>"".; See ""man sudo_root"" for details. xubuntu@xubuntu:~$ lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 20.04.2 LTS; Release:	20.04; Codename:	focal; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ # installation of OpenBabel; both in once; xubuntu@xubuntu:~$ sudo apt-get update; Ign:1 cdrom://Xubuntu 20.04.2.0 LTS _Focal Fossa_ - Release amd64 (20210209.1) focal InRelease; Hit:2 cdrom://Xubuntu 20.04.2.0 LTS _Focal Fossa_ - Release amd64 (20210209.1) focal Release; Hit:3 http://archive.ubuntu.com/ubuntu focal InRelease; Get:5 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB] ; Get:6 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB] ; Get:7 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [1469 kB]; Get:8 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [1135 kB]; Get:9 http://archive.ubuntu.com/ubuntu focal-updates/main Translation-en [291 kB]; Get:10 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 DEP-11 Metadata [279 kB]; Get:11 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 48x48 Icons [60.8 kB]; Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 64x64 Icons [98.3 kB]; Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [3",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:1070,secur,security,1070,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security,"losed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1, 2.3.2; Operating system and version: Ubuntu 16.04 Xenial. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; When using the following command:; `obabel MMFF94_hypervalent.sdf -O MMFF94_hypervalent.smi --energy --ff MMFF94 --append Energy --log`. to compute the energies of molecules from the [validation suite ](http://www.ccl.net/cca/data/MMFF94/), a few molecules show an energy that doesn't match that provided by the reference suite.; [obabel241_reference_calibration.txt](https://github.com/openbabel/openbabel/files/1727000/obabel241_reference_calibration.txt); [MMFF94_hypervalent.smi.txt](https://github.com/openbabel/openbabel/files/1727003/MMFF94_hypervalent.smi.txt); The following molecule show the largest difference (in both v2.3.2 and v2.4.1):. 1. CUGLOF; 2. FORJIF; 3. GIHZEC; 4. JALSOE; 5. SEGWEG; 6. VIGTUA; 7. SO18A; 8. ERULE_03. The base SDF file was taken from the MMFF94 website and modified to account for the formal charges that weren't explicit in the original mol2 file. Is this a mistake from my part or in my open babel distribution?. Many thanks for developing open babel!. Best Regards. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the differe",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1778:1057,validat,validation,1057,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1778,1,['validat'],['validation']
Security,"molecule crystallography -- and your ligand, if crystallized once, may fit into this category -- _typically_ the non-hydrogen atoms are identified first. Completing the structure solution, hydrogens are taken into consideration, too. Depending on the programs used (maybe [ShelX](https://shelx.uni-goettingen.de/) and [Olex2](https://www.olexsys.org/olex2/) are staples for you), and the quality of the experimental data available, this may be easy, because there are templates to start with. E.g., for a methyl group around a (sp^3) carbon, the program knows that three hydrogens in this tetrahedral arrangement at a certain (temperature dependent) distance to C usually is a good _initial_ guess. And hence labels these hydrogens bound to `C1` as `H1A`, `H1B`, `H1C`, too. This automatism to add hydrogens _and_ to label them according to their rooting atom _apparently_ is not / yet (completely) included by OpenBabel; worth a feature request. This suggest of the three hydrogens, as well as their labels is a mere _optional suggestion_ by the program to the user. S/He may decide to attribute experimental data to the hydrogens without this help, s/he may decide to label these as `H1`, `H52`, `H365`, too; the model is not better, or worse because of this, only less accessible to the next user deposit in the .cif format. As shown in the example attached below, even if these labels _initially_ were organized well, the direct conversion `obabel -icif example.cif -opdb -O example.pdb` may render this attribution invisible. A light-weight alternative thus may be, as shown, to read the initial .cif by Jmol, to write by Jmol an intermediate .pdb and to convert this file by OpenBabel into an eventually complete .pdb with header and detailed label information. (Here, there was no explicit ligand attribution, though). Or to try CCDC's Mercury program instead (reads both .cif and .pdb, may export .pdb, too). [test_case.zip](https://github.com/openbabel/openbabel/files/6057253/test_case.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2330#issuecomment-787481988:1496,access,accessible,1496,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2330#issuecomment-787481988,1,['access'],['accessible']
Security,"nds the error. Fixed by checking the input atoms before expanding the unit cell in `FillUnitCell` (maybe this kind of check belongs somewhere else?). **Issue 2:** `OBUnitCell::FillUnitCell` hangs on large unit cells. This is due to the algorithm used in atom checking. It checks atom-atom distances, which is O(N^2). The new approach uses a hash, which should be amortized O(N). It uses the extra speed to check _every_ atom for uniqueness, rather than just symmetry unique ones. Note that a better approach would use an octree, but the hash was easier to implement and proves the point. **Issue 3:** `OBUnitCell::FillUnitCell` doesn't check all possible duplicates. To replicate, use [FeMOF74](https://gist.github.com/patrickfuller/6419438) and the above script. The underlying issue is that `FillUnitCell` assumes that the listed symmetry operations are logical. However, CIFs are a mess. In the case of the example cif, the file already has more than one unitcell worth of atoms, and additionally has defined symmetry operations. This is solved by the solution of Issue 2; by using the extra speed afforded by the hash to check every atom-atom connection, we can check for more duplicates. **Issue 4:** Some crystallographic programs fail if atom coordinates are not in [0, 1]. It's annoying, but an easy fix. I just added `WrapFractionalCoordinate` to cifformat.cpp. **Issue 5:** Centering can segfault. To replicate, use CoMOF74. ``` python; import pybel; with open(""CoMOF74.cif"") as in_file:; mof = in_file.read(); mol = pybel.readstring(""cif"", mof); mol.unitcell.FillUnitCell(mol.OBMol); # Cycling fixes the issue; # mol = pybel.readstring(""cif"", mol.write(""cif"")); mol.OBMol.Center(); mol.write(""cif""); ```. The `Center()` method operates off of a bunch of private variables. I'm guessing something isn't getting updated when `FillUnitCell` is called, but I couldn't figure out what it was. I'll look into this one again, but I'd appreciate any pointers in the mean time! **EDIT** Fixed this.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/23:1876,hash,hash,1876,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/23,1,['hash'],['hash']
Security,"nds while using PDB files and to report all the issues at once. The result of this analysis is in the attachment. As previously, I noticed that OpenBabel 2.3.2 generated a correct output for the molecule I was analyzing, then I also decide to use this version in my tests. In all tests, I used the openbabel 2.4.1 library (python) for creating an OBMol molecule and then I printed the smiles for each one of the inputs (listed below). To check for possible errors of valence, charge, etc, I used the tool Chemicalize from Chemaxon (the figures in the attachment were obtained with this tool). First, I extract the ligand from the PDB file (all ligands and ids were informed in the attached file). Four different inputs were used to create the OBMol object:; 1) A .mol file obtained by converting the extracted file using OpenBabel 2.3.2.; 2) A .mol file obtained by converting the extracted file using OpenBabel 2.4.1. ; 3) The .pdb file. Function used: readfile(""pdb"", file); 4) The .pdb file as a string. Function used: readstring(""pdb"", pdb_block). Besides it, for each ligand I also evaluated the impact of creating the molecule without hydrogens and adding hydrogens according to some pH value. In the excel file, you'll find a column with the ligand information, one to indicate if I had used hydrogens and other to inform at which pH the hydrogens were added. Also, four other columns were added (one for each input). The red cells indicate if there is an incorrect aromatic perception. I believe these results can help you guys to detect what are the possible causes for these errors. I have not uploaded the molecule files because it would be too many files and all of them can be accessed through the PDB site. . If anything is not clear enough please just let me know and I could help you to reproduce the errors. Excel file: ; [Analysis_of_the_best_input_Send_to_OpenBabel.xls.zip](https://github.com/openbabel/openbabel/files/2789808/Analysis_of_the_best_input_Send_to_OpenBabel.xls.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1925:2090,access,accessed,2090,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1925,1,['access'],['accessed']
Security,"ntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be installed:; libopenbabel6 libschroedinger-maeparser1; The following NEW packages will be installed:; libopenbabel6 libschroedinger-maeparser1 openbabel python3-openbabel; 0 upgraded, 4 newly installed, 0 to remove and 344 not upgraded.; Need to get 4340 kB of archives.; After this operation, 21.3 MB of additional disk space will be used.; Do you want to continue? [Y/n] y; Get:1 http://archive.ubuntu.com/ubuntu focal/universe amd64 libschroedinger-maeparser1 amd64 1.2.2-1build1 [89.1 kB]; Ge",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:4571,secur,security,4571,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,2,['secur'],['security']
Security,"ntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be installed:; libopenbabel6 libschroedinger-maeparser1; The following NEW packages will be installed:; libopenbabel6 libschroedinger-maeparser1 openbabel python3-openbabel; 0 upgraded, 4 newly installed, 0 to remove and 344 not upgraded.; Need to get 4340 kB of archives.; After this operation, 21.3 MB of additional disk space will be used.; Do you want to continue? [Y/n] y; Get:1 http://archive.ub",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:4472,secur,security,4472,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,2,['secur'],['security']
Security,ocal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be installed:; libopenbabel6 libschroedinger-maepar,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:4157,secur,security,4157,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security,og in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ;,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:3562,Audit,Audit,3562,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Audit'],['Audit']
Security,"olFile / SMILES columns of the database, but I hand checked a couple that seem to be a problem within OpenBabel. In the first case (attached as OB01_DoubleRing.mol) the SMILES string from the vendor database converted fine, both apparently to canonical SMILES and InChI. The MolFile converted to canonical SMILES ok, but lost the stereochemistry on one of the two chiral centers when converted to InChI. If I read the connection table in the MolFile correctly, the two carbons in question are atom 2 (between the two oxygens, which are atoms 3 and 11) and atom 1 (methyl group); that bond appears to be explicitly specified as ""down"" chirality in the 2-1 bond row ('6'). For reference, the vendor-supplied SMILES string is C[C@@H]1OC[C@]2(CCN(C)C2)O1 while the OpenBabel canonical form is CN1CC[C@]2(CO[C@@H](C)O2)C1. The second problem is with a fused ring (not sure that's the correct terminology), molfile attached as OB02_FusedRing.mol. The molecule techincally has three chiral centers, but two of them may only have one R/L form sterically accessible (?). The molfile specifies chirality for all three. OB export to InChI results in loss of chirality information on all three centers ( InChI=1/C8H15NO/c1-9-6-2-3-7(9)5-8(10)4-6/h6-8,10H,2-5H2,1H3 ). OB export to canonical SMILES losses chirality on the hydroxyl. Working with the vendor supplied SMILES string ( CN1[C@@H]2CC[C@H]1C[C@@H](O)C2 ) as input instead of the molfile results in a chirality flip on the hydroxyl when output as canonical smiles ( O[C@@H]3C[C@H]4CC[C@@H](C3)N4C ), but proper chirality is conserved with InChI output ( InChI=1/C8H15NO/c1-9-6-2-3-7(9)5-8(10)4-6/h6-8,10H,2-5H2,1H3/t6-,7+,8+ ). It's a funky structure; it has a plane of symmetry through the hydroxyl, so I suppose it's a structural stereoisomer rather than specifically chiral, but I'm not sure given that the ring is constrained (? - would it be able to invert back-and-forth?). For that matter, I'm not sure that the stereochemistry describing the bonds",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779559:1482,access,accessible,1482,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779559,1,['access'],['accessible']
Security,"om) and \alpha = \beta = \gamma = 90 (degrees), yet stating the triclinic space group P1. Solution NMR does provide other information about protein structures, in _partial_ overlap with what protein crystallography by diffraction on solid samples provides. One may anticipate some quality checks for model data from crystals are not applicable here. Contrasting to this, a .pdb file does not require the provision of lattice constants because the description of a single, individual, isolated molecule is sufficent. So if there are no a, b, c, \alpha, \beta, \gamma in original .pdb accessible to you, openbabel has nothing to add about them when exporting a .cif. On the other hand, the conversion of the (multimodel) .cif provided by the database into individual .pdb (one molecule each) still is possible with other programs than openbabel. From the terminal within [Jmol](http://jmol.sourceforge.net/), for example, you may access the multimodel .cif by. ```; load ""1ner.cif"";; ```; where it will recognize the presence of 30 models. It is possible to access them one by one via the GUI (right mouse button click into the canvas), or from the program's console, e.g. ```; load models ({4}) ""1ner.cif"";; ````. to access only the fifth model in the .cif file. From there, it is possible to export them, for example by either one of the following. ```; write ""model5.pdb"";; write ""model5.sdf"" as v3000;; ```; (the `as v3000` is to access the more modern variant of .sdf allowing e.g., a larger number of atoms). If you anticipate the conversions ahead are multiple, consider to write a [Jmol script](https://chemapps.stolaf.edu/jmol/docs/) and run Jmol without a GUI:. ```bash; jmol -ions water_script.spt; ```. with . ```; -i,--silent silent startup operation; -n,--nodisplay no display (and also exit when done); -o,--noconsole no console -- all output to sysout; -s,--script <arg> script file to execute; ```. (credit to [Robert Hanson](https://sourceforge.net/p/jmol/mailman/message/37610840/)).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2472#issuecomment-1123540418:1430,access,access,1430,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2472#issuecomment-1123540418,3,['access'],['access']
Security,"ome; location: /var/lib/layman/gnome; sync-type: git; sync-uri: git://github.com/gentoo/gnome.git; masters: gentoo; priority: 50. grub2-themes; location: /var/lib/layman/grub2-themes; sync-type: git; sync-uri: git://github.com/gentoo/grub2-themes-overlay.git; masters: gentoo; priority: 50. mozilla; location: /var/lib/layman/mozilla; sync-type: git; sync-uri: git://anongit.gentoo.org/proj/mozilla.git; masters: gentoo; priority: 50. spring; location: /var/lib/layman/spring-overlay; sync-type: git; sync-uri: git://github.com/springlobby/overlay.git; masters: gentoo; priority: 50. steam-overlay; location: /var/lib/layman/steam-overlay; sync-type: git; sync-uri: git://github.com/anyc/steam-overlay.git; masters: gentoo; priority: 50. ACCEPT_KEYWORDS=""amd64 ~amd64""; ACCEPT_LICENSE=""*""; CBUILD=""x86_64-pc-linux-gnu""; CFLAGS=""-O2 -pipe""; CHOST=""x86_64-pc-linux-gnu""; CONFIG_PROTECT=""/etc /usr/lib64/libreoffice/program/sofficerc /usr/share/config /usr/share/gnupg/qualified.txt""; CONFIG_PROTECT_MASK=""/etc/ca-certificates.conf /etc/dconf /etc/env.d /etc/fonts/fonts.conf /etc/gconf /etc/gentoo-release /etc/revdep-rebuild /etc/sandbox.d /etc/terminfo""; CXXFLAGS=""-O2 -pipe""; DISTDIR=""/usr/portage/distfiles""; FCFLAGS=""-O2 -pipe""; FEATURES=""assume-digests binpkg-logs config-protect-if-modified distlocks ebuild-locks fixlafiles merge-sync news parallel-fetch preserve-libs protect-owned sandbox sfperms strict unknown-features-warn unmerge-logs unmerge-orphans userfetch userpriv usersandbox usersync xattr""; FFLAGS=""-O2 -pipe""; GENTOO_MIRRORS=""http://ftp.swin.edu.au/gentoo""; LANG=""en_AU.UTF-8""; LDFLAGS=""-Wl,-O1 -Wl,--as-needed""; MAKEOPTS=""-j9""; PKGDIR=""/usr/portage/packages""; PORTAGE_CONFIGROOT=""/""; PORTAGE_RSYNC_OPTS=""--recursive --links --safe-links --perms --times --omit-dir-times --compress --force --whole-file --delete --stats --human-readable --timeout=180 --exclude=/distfiles --exclude=/local --exclude=/packages --exclude=/.git""; PORTAGE_TMPDIR=""/var/tmp""; USE=""X a52 aac acl acpi a",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1566:9368,certificate,certificates,9368,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1566,1,['certificate'],['certificates']
Security,"ools>=61"",; ""setuptools_scm[toml]>=6.2"",; ""wheel"",; ""cmake_build_extension"",; ""cmake"",; ""ninja"",; ""swig"",; ]; build-backend = ""setuptools.build_meta""; ```. 3. In the Python module, I have to set the environment `BABEL_LIBDIR` and `BABEL_DATADIR` at the beginning of the module. ```py; import os; base_dir = os.path.abspath(os.path.dirname(__file__)); os.environ[""BABEL_LIBDIR""] = os.path.join(base_dir, ""lib"", ""openbabel"", __version__); os.environ[""BABEL_DATADIR""] = os.path.join(base_dir, ""share"", ""openbabel"", __version__); ```. 4. Finally I defined the configs for cibuildwheel, where I copied some configs from rdkit-pypi to install some dependencies.; ```toml; [tool.cibuildwheel]; test-command = ""python -c 'from openbabel import openbabel'""; build = [""cp37-*"", ""cp38-*"", ""cp39-*"", ""cp310-*"", ""cp311-*""]; skip = [""*-win32"", ""*-manylinux_i686"", ""*-musllinux*""]. [tool.cibuildwheel.linux]; before-all = [; # Has eigen3-devel.aarch64; ""yum install -y epel-release"",; ""yum install -y wget freetype-devel libpng12-devel pixman-devel zlib-devel eigen3-devel libxml2-devel"",; # cairo-devel from the centos repo does not work, build here; ""wget https://www.cairographics.org/snapshots/cairo-1.15.14.tar.xz --no-check-certificate"",; ""tar xvf cairo-*"",; ""cd cairo-*"",; ""./configure"",; ""make -j 20"",; ""make install"",; ""cd .."",; ]; environment-pass = [""CIBW_BUILD""]. [tool.cibuildwheel.macos]. before-all = [; '''if [[ ""$CIBW_BUILD"" == *macosx_arm64* ]]; then; rm /usr/local/lib/libfreetype.dylib; install_arm=( libpng libx11 libxau libxcb libxdmcp libxext libxrender fontconfig glib lzo pixman cairo freetype ); for i in ""${install_arm[@]}""; do; response=$(brew fetch --force --bottle-tag=arm64_big_sur $i | grep Downloaded ); download_path=$(echo $response | xargs -n 1 | tail -1); brew reinstall $download_path; done; else; brew install cairo; fi; brew install gnu-sed eigen; '''; ]; ```. ---; I'd like to contribute it to the main repo, but we need to discuss some details mentioned above like 1 and 3.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288847122:3280,certificate,certificate,3280,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288847122,1,['certificate'],['certificate']
Security,"openbabel provides working functionality to perform substructure searches using SMARTS. This works well on SMILES files. . openbabel xxx.smi -ocan -s a1aaaa1. This SMARTS query retrieves all molecular structures with aromatic 5-membered ring systems from xxx.smi. Further, openbabel provides working functionality to generate fingerprint indexes to speed up substructure searching by candidate preselection. . openbabel xxx.smi -ofs . This generates the index file xxx.fs. Now, the index file can be used to search quickly:. openbabel xxx.fs -ocan -s C1CCCC1. This SMARTS query retrieves all molecular structures containing a cyclopentane moiety correctly. Apparently, this works. But C1CCCC1 does not only denote a valid SMARTS but also a valid SMILES! . Using a SMARTS that does NOT denote a valid SMILES like the first example (""a"" stands for any aromatic atom of N,C,O,S,Se) does not work and produces an error-message:. openbabel xxx.fs -ocan -s a1aaaa1. gives:. ==============================; *** Open Babel Error in ObtainTarget; Filename of pattern molecule in -S option must have an extension; 0 molecules converted; 1 errors 4 audit log messages . src/formats/fastsearchformat.cpp is suspect to me.; The message is produced in line 488 but a few lines before:. txt=p;; stringstream smarts(txt, stringstream::in);		; OBConversion Convsm(&smarts);; if(!Convsm.SetInFormat(""smi"")) return false;; Convsm.Read(&patternMol);. patternMol.Empty() is true for real SMARTS and false for SMILES. Reported by: vitalingo",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/819:1138,audit,audit,1138,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/819,1,['audit'],['audit']
Security,openbabel-2.3.2/src/fingerprint.cpp:161:48: warning: unsequenced modification and access to 'ppat' [-Wunsequenced]. Source code is. if ( (a=((*ppat) & (*p++)) ^ (*ppat++)) ) break;. Suggest code rework. Reported by: dcb314. Original Ticket: [openbabel/bugs/919](https://sourceforge.net/p/openbabel/bugs/919),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1299:82,access,access,82,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1299,1,['access'],['access']
Security,"os; for filename in os.listdir(""mofs""):; with open(os.path.join(""mofs"", filename)) as in_file:; mof = in_file.read(); mol = pybel.readstring(""cif"", mof); mol.unitcell.FillUnitCell(mol.OBMol); print filename, len(mol.write(""cif"")); ```. and ran with. ```; python -m cProfile -s time test.py | grep FillUnitCell; ```. ""mofs"" is a directory with 13 files, all of which are non-P1 cifs and none of which break the old approach. **Test 1:** Old method vs new method in collision detection. Less characters means duplicates removed. Old:. ```; CoMOF74.cif 31809; FeMOF74.cif 530843; HKUST-1.cif 9622; MgMOF74.cif 418092; MIL-101.cif 991528; NiMOF74.cif 35987; NOTT-101.cif 334571; NU-125.cif 71438; SALEM-2.cif 95843; UiO-66.cif 578635; UTSA-20.cif 155004; ZIF-8.cif 7135; ```. New:. ```; CoMOF74.cif 9497; FeMOF74.cif 12043; HKUST-1.cif 8772; MgMOF74.cif 15118; MIL-101.cif 902758; NiMOF74.cif 10771; NOTT-101.cif 28685; NU-125.cif 64088; SALEM-2.cif 21477; UiO-66.cif 29745; UTSA-20.cif 13846; ZIF-8.cif 5908; ```. **Test 2:** Current hash vs 4x length hash, to test how an unoptimized hash performs. Shorter hash:. ``` c; snprintf(hash, 22, ""%03d,%.3f,%.3f,%.3f"", atom->GetAtomicNum(), baseV.x(), baseV.y(), baseV.z());; ```. ```; ncalls tottime percall cumtime percall filename:lineno(function); 13 4.026 0.310 4.026 0.310 {_openbabel.OBUnitCell_FillUnitCell}; ```. Longer hash:. ``` c; snprintf(hash, 88, ""%03d,%.3f,%.3f,%.3f%03d,%.3f,%.3f,%.3f%03d,%.3f,%.3f,%.3f%03d,%.3f,%.3f,%.3f"", atom->GetAtomicNum(), baseV.x(), baseV.y(), baseV.z(), atom->GetAtomicNum(), baseV.x(), baseV.y(), baseV.z(), atom->GetAtomicNum(), baseV.x(), baseV.y(), baseV.z(), atom->GetAtomicNum(), baseV.x(), baseV.y(), baseV.z());; ```. ```; ncalls tottime percall cumtime percall filename:lineno(function); 13 4.042 0.311 4.042 0.311 {_openbabel.OBUnitCell_FillUnitCell}; ```. They're basically the same. I'm guessing that 1. there are only O(N) string comparisons and 2. most of them short-circuit after the first few bytes.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/23#issuecomment-23977778:1105,hash,hash,1105,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/23#issuecomment-23977778,7,['hash'],['hash']
Security,"r bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. <!-- - [ ] I believe this to be a bug with Open Babel -->; - [x] This is a feature request. ## Environment Information; Open Babel version: 3.1.1 -- Jun 10 2021 -- 04:27:50; Operating system and version: Debian GNU/Linux 11 (bullseye). ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Jensen [lists here](https://molecularmodelingbasics.blogspot.com/2016/05/automating-calculations-pka-predictions.html) a few test structures encoded as SMILES which are to be converted by OpenBabel into `.xyz` with 3D information. Cyclic structures should pass smoothly the conversion (yet occasionally they do not and issue warnings). Is there an other way to ""sanitize"" SMILES than passing them to RDKit (*vide infra*), perhaps in OpenBabel itself?. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The conversion of; * `C[C@H]1CC[N@@]2CCC[C@@H]12`; * `C[C@H]1[C@@H]2[C@@H](C(N(C)C2=O)=O)C3[N@]1CCC3`; * `C[C@H]1[C@@H]2[C@@H](C(N(C)C2=O)=O)C3[N@H+]1CCC3`. in line of; ```; obabel -:""C[C@H]1[C@@H]2[C@@H](C(N(C)C2=O)=O)C3[N@H+]1CCC3"" --gen3D -h -oxyz; ```; yield warnings like; ```; *** Open Babel Warning in CorrectStereoAtoms; Could not correct 2 stereocenter(s) in this molecule (); with Atom Ids as follows: 2 3; Warning: Stereochemistry is wrong, using the distance geometry method instead; ```; while e.g.,; ```; obabel -:""C[C@H]1[C@@H]2[C@@H](C(N(C)C2=O)=O)C3[N@@H+]1CCC3"" --gen3D -h -oxyz -O output.xyz; ```; does not. *However*. I noticed `C[C@H]1CC[N@@]2CCC[C@@H]12` is described with nitrogen as a stereocentre. Thus, when submitted",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2393:1274,sanitiz,sanitize,1274,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2393,1,['sanitiz'],['sanitize']
Security,ranslation-en [291 kB]; Get:10 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 DEP-11 Metadata [279 kB]; Get:11 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 48x48 Icons [60.8 kB]; Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 64x64 Icons [98.3 kB]; Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/univer,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:2147,secur,security,2147,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,2,['secur'],['security']
Security,"recognize what type of SMILES string is offered to; you. In this perspective, I perceive OpenBabel as advantageous in; comparison to ChemDraw because with toggles like `-osmi` or `-ocan`; you may explicitly define which «dialect» the SMILES will be (e.g.,; canonical, universal, inchified). Like with any programs, as soon as you interface with other programs,; the lack of convention (or deployment of programs designed to adhere; different conventions), this may be anything in the spectrum of; «below the detection limit», «nuisance», and «incompatible». Say you; successfully load the structure in the JS of ChemDraw mentioned; earlier and request the interface to provide the SMILES string. You; may feed this string into OpenBabel in a pattern like. ```bash; obabel -:""c1ccncc1"" -osmi; ```. to ask OpenBabel for a SMILES representation (here about pyridine,; just substitute the SMILES string from ChemDraw accordingly). Here,; `-osmi` and `-ocan` yield the same SMILES string. With a molecule; more complex, like the cyclic one of yours, however, you are going to; recognize differences how input vs. output may differ, and how; different output options yield different SMILES generated by; OpenBabel, too. I don't know what you intend to do with the SMILES strings in hand.; Given observations like the ones mentioned above, I however notice my; tendency to withdraw from them and to deploy either InChI (for the; description and recreation of the structures), or InChIKey (their; hashes, for a convenient recognition of identity of two entries). For reasons beyond your initial question, I currently use one of the; handy reference implementations available for free (as in free beer); from the InChI trust.[1] These are compiled to run from the get-go; with 32 or 64 bit (either Windows or Linux, no separate Mac version); from the CLI to perform the assignment on (multi-model) .sdf files.; OpenBabel equally offers an interface to these two formats. https://www.inchi-trust.org/downloads/",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2416#issuecomment-941186358:1576,hash,hashes,1576,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2416#issuecomment-941186358,1,['hash'],['hashes']
Security,"red_ptrT_OpenBabel__OBMol_t>; data = 0x779830; destroy = <built-in method delete_OBMol of module object at remote 0x7ffff6759f38>; sobj = 0x7ffff6b8ade0; next = 0x0; #9 0x00007ffff7a0004f in free_keys_object (keys=keys@entry=0x675220); at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/dictobject.c:374; entries = 0x675240; i = 7; n = 8; #10 0x00007ffff7a00b28 in dict_dealloc (mp=0x7ffff6c014d0) at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/dictobject.c:1392; _tstate = 0x604680; values = 0x0; keys = 0x675220; i = <optimized out>; n = <optimized out>; #11 0x00007ffff7a19310 in subtype_dealloc (self=<OBMol(this=<SwigPyObject at remote 0x7ffff6b8ade0>) at remote 0x7ffff6c07750>); at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/typeobject.c:1024; dict = <optimized out>; dictptr = 0x7ffff6c07760; _tstate = 0x604680; type = <optimized out>; base = 0x7ffff7d76220 <PyBaseObject_Type>; basedealloc = 0x7ffff7a18a70 <object_dealloc>; tstate = 0x604680; #12 0x00007ffff7a0184b in insertdict (mp=mp@entry=0x7ffff6c277a0, key='t', hash=-7895860575028071718, value=value@entry=None); at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/dictobject.c:824; old_value = <optimized out>; value_addr = 0x821cf0; ep = 0x821ce0; #13 0x00007ffff7a0371a in PyDict_SetItem (; op=op@entry={'__package__': None, '__loader__': None, '__doc__': None, '__name__': None, '__builtins__': <module at remote 0x7ffff7fe4440>, 't': N; one, 'ob': <module at remote 0x7ffff68d7908>}, key=<optimized out>, value=value@entry=None); at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/dictobject.c:1208; mp = 0x7ffff6c277a0; hash = <optimized out>; #14 0x00007ffff7a0b3fc in _PyModule_Clear (m=<optimized out>); at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/moduleobject.c:322; pos = 11; key = 't'; value = <OBMol(this=<SwigPyObject at remote 0x7ffff6b8ade0>) at remote 0x7ffff6c07750>; d = {'__pac",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/21#issuecomment-29000592:3936,hash,hash,3936,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/21#issuecomment-29000592,1,['hash'],['hash']
Security,refactor: use `std::unordered_map` for hash map,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2500:39,hash,hash,39,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2500,1,['hash'],['hash']
Security,rse amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:2877,secur,security,2877,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security,s happening with SDF as it tries to correctly handle; stereo:. > # obabel tmp.mol -onul ---errorlevel 3; > ; > **\* Open Babel Audit Log in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl; > ; > # OpenBabel::Read molecule MDL MOL format; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::Clear; > ; > # Ran OpenBabel::Clear Molecule; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::AssignSpinMultiplicity; > ; > # Ran OpenBabel::AssignSpinMultiplicity; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::Kekulize; > ; > # Ran OpenBabel::Kekulize; > ; > **\* Open Babel Audit Log in OpenBabel::StereoFrom3D; > ; > # Ran OpenBabel::StereoFrom3D; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::FindSSSR; > ; > # Ran OpenBabel::FindSSSR; > ; > **\* Open Babel Audit Log in OpenBabel::OBAromaticTyper::AssignAromaticFlags; > ; > # Ran OpenBabel::AssignAromaticFlags; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::FindRingAtomsAndBonds; > ; > # Ran OpenBabel::FindRingAtomsAndBonds; > ; > **\* Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignImplicitValence; > ; > # Ran OpenBabel::AssignImplicitValence; > ; > **\* Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignHyb; > ; > # Ran OpenBabel::AssignHybridization; > ; > **\* Open Babel Audit Log in OpenBabel::OBBond::IsClosure; > ; > # Ran OpenBabel::PerceiveClosureBonds; > ; > **\* Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignHyb; > ; > # Ran OpenBabel::AssignHybridization; > ; > **\* Open Babel Audit Log in OpenBabel::TetrahedralFrom3D; > ; > # Ran OpenBabel::TetrahedralFrom3D; > ; > **\* Open Babel Audit Log in OpenBabel::CisTransFrom3D; > ; > # Ran OpenBabel::CisTransFrom3D; > ; > **\* Open Babel Audit Log in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl; > ; > # OpenBabel::Read molecule MDL MOL format; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::Clear; > Ran OpenBabel::Clear Molecule; > 1 molecule converted. At least some of this work is unneccesary. Kekulisation? Assigning implicit; ,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/272#issuecomment-193279524:848,Audit,Audit,848,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/272#issuecomment-193279524,16,['Audit'],['Audit']
Security,"s of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be removed in the next few months as part of the deprecation of LGTM.com ([more info here](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/)). #### Which source code hosting platforms does code scanning support?; GitHub code scanning is deeply integrated within GitHub itself. If you’d like to scan source code that is hosted elsewhere, we suggest that you create a mirror of that code on GitHub. #### How do I know this PR is legitimate?; This PR is filed by the official LGTM.com GitHub App, in line with the [deprecation timeline that was announ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2546:3636,secur,security,3636,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2546,1,['secur'],['security']
Security,"see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Gentoo Linux, 5.6.15-gentoo. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Failed 0/8 test programs. 0/34 subtests failed. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Can't call method ""GetMass"" on an undefined value at t/data.t line 21.; t/data.t ........... Dubious, test returned 255 (wstat 65280, 0xff00) ; Failed 1/2 subtests . t/data.t (Wstat: 65280 Tests: 1 Failed: 0); Non-zero exit status: 255; Parse errors: Bad plan. You planned 2 tests but ran 1.; Files=8, Tests=34, 0 wallclock secs ( 0.03 usr 0.01 sys + 0.39 cusr 0.06 csys = 0.49 CPU); Result: FAIL; Failed 1/8 test programs. 0/34 subtests failed. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```; swig -perl5 -c++ -small -O -templatereduce -naturalvar -I/usr/include/openbabel3 -o scrips/perl/openbabel-perl.cpp -outdir scrips/perl scripts/openbabel-perl.i; cd scrips/perl; perl Makefile.PL PREFIX=/usr INSTALLDIRS=vendor INSTALLMAN3DIR=none DESTDIR=/var/tmp/portage/sci-chemistry/openbabel-perl-3.1.1/image INC=-I/usr/include/openbabel3; make -j17 -l4 'OTHERLDFLAGS=-Wl,-O1 -Wl,--as-needed -Wl,--hash-style=gnu; make -j17 -l4 test; ```. The offending line in `scrips/perl/t/data.t` is:; ```; my $mass = $Chemistry::OpenBabel::etab->GetMass(2);; ```; I don't know much about perl but it likely pertains to the shift from the use of `etab` to the use of `OBElements`.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2247:2253,hash,hash-style,2253,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2247,1,['hash'],['hash-style']
Security,segfault when accessing Atom attributes through pybel,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1602:14,access,accessing,14,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1602,1,['access'],['accessing']
Security,"setting OB_HASH_BOND flag has no effect in the resulting molecular file (SMILES or SDF).; .....; if (bond[i].hash); mol.AddBond(atom[bond[i].a].n,atom[bond[i].b].n,bond[i].type,OB_HASH_BOND);; else; mol.AddBond(atom[bond[i].a].n,atom[bond[i].b].n,bond[i].type);; ....; conv.WriteFile(&mol,""out.sdf"");; ..... Expected result: stereochemistry reflected in the sd output. Igor Filippov; igorf@helix.nih.gov. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/650:109,hash,hash,109,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650,1,['hash'],['hash']
Security,"solute lowest priority in the set of CIP rules (i.e., even lower than hydrogen). To quote G. P. Moss searchable index of IUPAC's Blue Book:. > [P-93.4.2.1.3 Descriptors ‘E’ and ‘Z’ to denote double bonds linked to heteroatoms](https://iupac.qmul.ac.uk/BlueBook/P9.html#92): ... A lone pair of electrons, when present, is considered to have the atomic number ‘0’ (zero). Which applies e.g., on chiral sulfoxides, chiral amines (e.g., Troeger base), etc. The reason to point of *single lone pair* are suggestions how to deal with (supra)molecular structures with more than one lone pair around an atom (e.g., oxygen) e.g., by José Elguero. ---. Of tangential interest may be a paper by Robert Hanson *et al.* about the algorithmic application of the CIP rules for that the publication includes reference structures (.smi SMILES, 2D and 3D v2000 .sdf) of a cipvalidator ([GitHub repository](https://github.com/CIPValidationSuite/ValidationSuite), [web page](https://cipvalidationsuite.github.io/ValidationSuite/)). This set of 300 models includes four sulfoxides (three of them chiral), too:. ![sulfoxides](https://user-images.githubusercontent.com/19709084/153706252-f719c8ad-d6f6-4e00-97a8-fbc86f9b59da.png). (3D .sdf data of cipvalidator read by [DataWarrior](https://openmolecules.org/index.html) including a motif of DMSO as substructure; in addition to the original data, DataWarrior assigned SMILES strings (last column)). Elguero, J. Is it possible to extend the Cahn-Ingold-Prelog priority rules to supramolecular structures and coordination compounds using lone pairs? *Chem. Int.* **2016**, *38*; [doi 10.1515/ci-2016-0633](https://doi.org/10.1515/ci-2016-0633) (open access). Hanson R. M.; Musacchio, S.; Mayfield, J. W.; Vainio, M. J.; Yerin, A.; Redkin D. Algorithmic Analysis of Cahn–Ingold–Prelog Rules of Stereochemistry: Proposals for Revised Rules and a Guide for Machine Implementation. *J. Chem. Inf. Model.* **2018**, *58*, 1755-1765; [doi 10.1021/acs.jcim.8b00324](https://doi.org",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2451#issuecomment-1037101176:1031,Validat,ValidationSuite,1031,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2451#issuecomment-1037101176,1,['Validat'],['ValidationSuite']
Security,"sted it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-s",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2546:2218,Secur,Security,2218,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2546,1,['Secur'],['Security']
Security,"t you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! We tested it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-b",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2546:1547,secur,security,1547,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2546,1,['secur'],['security']
Security,"t:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be installed:; libopenbabel6 libschroedinger-maeparser1; The following NEW packages will be installed:; libopenbabel6 libschroedinger-maeparser1 openbabel python3-openbabel; 0 upgraded, 4 newly inst",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:4287,secur,security,4287,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security,"the Ubuntu Fossa 20.02.2 live USB version, the elder version of OpenBabel 3.0.0 installs as anticipated; no warning, nothing. I just re-run again:; ```; To run a command as administrator (user ""root""), use ""sudo <command>"".; See ""man sudo_root"" for details. xubuntu@xubuntu:~$ lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 20.04.2 LTS; Release:	20.04; Codename:	focal; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ # installation of OpenBabel; both in once; xubuntu@xubuntu:~$ sudo apt-get update; Ign:1 cdrom://Xubuntu 20.04.2.0 LTS _Focal Fossa_ - Release amd64 (20210209.1) focal InRelease; Hit:2 cdrom://Xubuntu 20.04.2.0 LTS _Focal Fossa_ - Release amd64 (20210209.1) focal Release; Hit:3 http://archive.ubuntu.com/ubuntu focal InRelease; Get:5 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB] ; Get:6 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB] ; Get:7 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [1469 kB]; Get:8 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [1135 kB]; Get:9 http://archive.ubuntu.com/ubuntu focal-updates/main Translation-en [291 kB]; Get:10 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 DEP-11 Metadata [279 kB]; Get:11 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 48x48 Icons [60.8 kB]; Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 64x64 Icons [98.3 kB]; Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Ge",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:1037,secur,security,1037,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security,"there is a problem with indicating Z/E isomers in SMILES generated from mol2 files. Eg. for 1,2-dichloroethane. For structures saved in mol files, smiles (smi or can) are generated correctly:; >babel Z.mol -o can; Cl/C=C\Cl Z; 1 molecule converted; 32 audit log messages. >babel E.mol -o can; Cl/C=C/Cl E; 1 molecule converted; 32 audit log messages. while for files saved in mol2 format, we dont get the E/Z isomerism:. >babel Z.mol2 -o can; ClC=CCl Z; 1 molecule converted; 32 audit log messages. >babel E.mol2 -o can; ClC=CCl E; 1 molecule converted; 32 audit log messages. Converting mol2 back to mol fixes the problem. greetings,; F. Reported by: filipspl",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1049:252,audit,audit,252,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1049,4,['audit'],['audit']
Security,"tom Ids as follows: 20; Warning: Stereochemistry is wrong, using the distance geometry method instead; ^C; ```. (intentionally stopped by `Ctrl + C`, hence the `^C`) still displays the obstacle. So your report obabel in iOS would trade better than Debian is worth to note for those with access to both operating systems. Maybe the SMILES was derived from a .sdf already problematic?. Because I'm not aware (yet) of a checker for SMILES in regard of consistency (like for Python [online](https://www.online-ide.com/online_python_syntax_checker), or `pylint` for the CLI; or [checkcif](http://checkcif.iucr.org/) for crystal structure data; or the CIP validator by Hanson et al. ([2018JChemInfModel1755](https://pubs.acs.org/doi/10.1021/acs.jcim.8b00324))), the mentioned cdk-depict sometimes serves me to spot a (potentially) problematic SMILES string: enter e.g., `CC=CC` and the wavy bond indicates the configuration of the double bound is not defined. With the optional display of CIP labels, there equally will be an explicit question mark; this contrasts to `C\C=C\C`, `C\C=C/C`, `C/C=C\C`, and `C/C=C/C`:. ![butene_variations](https://user-images.githubusercontent.com/19709084/203751096-2be1d298-3c71-4a57-acc2-8098cb449534.png). Regarding the second part: thankfully, obabel is equally available as a `.deb` package *prêt-à-porter*/ready to go (Debian's [tracker](https://tracker.debian.org/pkg/openbabel)). There might be a delta in time and functionality between the executables either compiled from the source code here (GitHub), and the one *via* the repositories of DebiChem. With Debian *branch testing* (at present, Debian 12/bookworm) one may consider more like a *rolling release* (comparison to Debian stable, or LTS releases in the Ubuntu family), I do not perceive the delays as problematic. After preparing a package, improvements unrelated to security stay in the purgatory of Debian's branch *unstable* (or sid) for about 5 days; if accepted, they then percolate into *testing*.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1326200644:2683,secur,security,2683,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1326200644,1,['secur'],['security']
Security,ttp://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [692,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:2476,secur,security,2476,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security,tu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel python3-open,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:3967,secur,security,3967,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security,"tu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be installed:; libopenbabel6 libschroedinger-maeparser1; The following NEW packages will be installed:; libopenbabel6 libschroedinger-maeparser1 openbabel python3-openbabel; 0 upgraded, 4 newly installed, 0 to remove and 344 not upgraded.; Need to get 4340 kB of archives.; After this operation, 21.3 MB of additional disk space will be used.; Do you want to continue? [Y/n] y; Get:1 http://archive.ubuntu.com/ubuntu focal/universe amd64 libschroedinger-maeparser1 amd64 1.2.2-1build1 [89.1 kB]; Get:2 http://archive.ubuntu.com/ubuntu focal/universe amd64 libopenbabel6 amd64 3.0.0+dfsg-3ubunt",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:4665,secur,security,4665,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,2,['secur'],['security']
Security,"turn or throw a catchable exception. ## Steps to Reproduce and Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I have a python function that reads in a bunch of xyz files into pybel Molecule objects. Later on I iterate over all of the Molecule objects and read variables from some of the pybel Atom objects within each Molecule (to generate features for machine learning). While trying to access the Atom objects and variables within them a segmentation fault occurs that kills the python interpreter (it terminates with exit code 139). I can also kill the python interpreter with a segfault while my code is paused in the debugger (which I access through Eclipse / PyDev) by navigating into and trying to inspect pybel Atoms' variables. The segfault does not always occur when accessing the first Atom and does not consistently happen on the same Atom when running the exact same code multiple times in succession but it does usually happen within the first 5-10 Atoms. ## Notes. Sorry I understand this is probably difficult to debug because of its inconsistency and lack of a small reproducible example but I've already spent a lot of time trying to understand what was going on so hopefully I can give enough information to still be helpful. My current workaround which appears to be working is to have a wrapper python atom class around the pybel atom class with variables to keep a copy of all the data that I use from the pybel atom. I initialize those variables in my wrapper's constructor right after the pybel Atom and OBAtom are constructed before their data becomes corrupted. My speculation would be that somewhere in the (pybel Atom -> swig OBAtom wrapper -> C++ OBAtom -> variable) chain memory is being deallocated even though I still have a reference to the pybel Atom. This is because using the debugger I was able to determine that I c",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1602:1887,access,accessing,1887,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1602,1,['access'],['accessing']
Security,"ub.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Windows 10 pro. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I am using the NET bindings in my project. I used to use OBBuild class to generate 3d coordinates in mol file (2.4.1 version), which worked prefectly fine in my case. ## Actual Behavior; However, when I upgrade to openbabel-3.0.0, the same code give me an ""System.AccessViolationException"" as below: ; System.AccessViolationException:“Attempted to read or write protected memory. This is often an indication that other memory is corrupt.”. ## Steps to Reproduce; My code was like this, which worked perfectly fine under version 2.4.1. ```; public static string Generate3D(string molString); {; OBConversion conversion = new OBConversion();; OBMol mol = new OBMol();; conversion.SetInFormat(""smi"");; conversion.SetOutFormat(""mol"");; conversion.ReadString(mol, molString);; OBBuilder builder = new OBBuilder();; builder.Build(mol); // Here is where the Exception happen. return conversion.WriteString(mol);; }; ```; Whenever this method is called, the error happens. By the way, I did try to use some code like this to replace the OBBuilder.; ```; OBOp gen3d = OBOp.FindType(""Gen3D""); gen3d.Do(mol); ```; However, this nerver worked for me in both 2.4.1 and 3.0.0 version. The operation just took forever to complete and freeze without any exception information everytime.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2080:1124,Access,AccessViolationException,1124,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2080,2,['Access'],['AccessViolationException']
Security,"ull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deploy",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2546:2326,secur,security,2326,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2546,1,['secur'],['security']
Security,untu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... D,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:4062,secur,security,4062,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security,"updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be installed:; libopenbabel6 libschroedinger-maeparser1; The following NEW packages will be installed:; libopenbabel6 libschroedinger-maeparser1 openbabel python3-openbabel; 0 upgraded, 4 newly installed, 0 to remove and 344 not upgraded.; Need to get 4340 kB of archives.; After this operation, 21.3 MB of additional disk space will be used.; Do you want to continue? [Y/n] y; Get:1 http://archive.ubuntu.com/ubuntu focal/universe amd64 libschroedinger-maeparser1 amd64 1.2.2-1build1 [89.1 kB]; Get:2 http://archive.ubuntu.com/ubuntu focal/universe amd64 libopenbabel6 amd64 3.0.0+dfsg-3ubuntu3 [3568 kB]; Get:3 http://archive.ubuntu.com/ubuntu focal/universe amd64 openbabel amd64 3.0.0+dfsg-3ubuntu3 [127",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:4761,secur,security,4761,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security,"ve.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be installed:; libopenbabel6 libschroedinger-maeparser1; The following NEW packages will be installed:; libopenbabel6 libschroedinger-maeparser1 openbabel python3-openbabel; 0 upgraded, 4 newly installed, 0 to remove and 344 not upgraded.; Need to get 4340 kB of archives.; After this operation, 21.3 MB of",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:4380,secur,security,4380,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,2,['secur'],['security']
Security,"with master sources updated today, no segfault here:; julien@debian:~/projects/openbabel/build/bin$ ./babel ---errorlevel 4 -i mopout ~/projects/openbabel/bugs/methane.out -o xyz ~/projects/openbabel/bugs/methane.xyz; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in ConnectTheDots; Ran OpenBabel::ConnectTheDots; ==============================; *** Open Babel Audit Log in PerceiveBondOrders; Ran OpenBabel::PerceiveBondOrders; ==============================; *** Open Babel Audit Log in FindSSSR; Ran OpenBabel::FindSSSR; ==============================; *** Open Babel Debugging Message in EndModify; _mod is negative - EndModify() called too many times; 1 molecule converted; 8 audit log messages 1 debugging messages",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1334#issuecomment-381322577:265,Audit,Audit,265,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1334#issuecomment-381322577,9,"['Audit', 'audit']","['Audit', 'audit']"
Security,"y seems to be an overkill, but I am probably missing something. What object is actually loaded with `dl_open`, is it because each format has to be treated as plugin, because they are too many?. > ; > * Move `OBConversion` out of the loop. First rule of optimization is move things out of loops that aren't _required_ to be in loops. A variable inside the loop is created / destroyed every iteration. Yes, there is a question of efficiency that one has to take into account and there a question of leaks.; The `for` loop was only to show that there is systematic leak and not a one off (e.g. static) leak. Moving the conversion out of scopes is many times the solution (for efficiency) but it has a design cost. (To the point that eventually one needs to make everything global).; Not to mention that it starts messing with the thread safety of the program. > ; > * The docs note that `ReadFile` retains the stream object, which is a small leak. . Ah, ok, so it is not purely a problem with `dl_open` then?. In any case, I didn't appreciate until that some compromised were made to fit the Python bindings. > If you want to convert a ton of files, use `Convert()` and handle your own streams. The reason for the `ReadFile()` method is that Python and other scripting languages can't directly access the C++ stream objects. `Convert` seems to be to handle complete format round trips, what I am doing now is programmatically reading files into the program. Since I am writing a library this reading could happen in some deep call. ; I can make my classes more ""stateful"" to contain a whole (more) persistent OBConvert. (As you see this can complicate somewhat the design, but it is doable). > ; > ; > http://openbabel.org/api/2.3/classOpenBabel_1_1OBConversion.shtml#acc3cc99e2ff0113c9ca6a64f3de71300; > ; > There are plenty of examples in the `tools` directory... Yes, I am learning how to use the library from the `/tools` directory and from other programs using the library, like Avogadro. Thank you",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848232167:2214,access,access,2214,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848232167,2,['access'],['access']
Testability," (it need not be the the global one). Some cases are more difficult than others; check if the sketcher used offers a native 3D export. Your submitted case is a difficult one, because . ![case2](https://user-images.githubusercontent.com/19709084/173321323-02474993-8bd2-4ef2-85ba-967e7977bc3b.png). is provided as 2D structure by the .mol file with all z-coordinates equal to zero (the third column in the snippet below):. ```; [...]; 0.0000 0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.8660 -0.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.8660 -1.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 -2.0000 0.0000 S 0 0 0 0 0 0 0 0 0 0 0 0; -0.8660 -1.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; -0.8660 -0.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; [...]; ```; The addition of explicit hydrogens around the cycles will add complication; prior to an optimization, some of them would be too close to their opposite ones. This is a more difficult starting condition. Thus, no wonder that all five levels of `--gen3d` (except the distance geometry method, not tested here) struggle. In a bash script,. ```bash; #!/usr/bin/bash. for file in *.mol; do; for i in 1 2 3 4 5; do; echo work on file ""$file"" level ""$i""; new_filename=""$i""_""$file"".xyz. obabel ""$file"" -h --gen3d ""$i"" -oxyz -O ""$new_filename""; done; done; ```; As an example, running `obabel case2.mol --gen3d -O case2_3d.mol` suggests unlikely catenanes . ![cases2_3d](https://user-images.githubusercontent.com/19709084/173328419-ce836929-81f6-49d4-a367-7ef40c618b8a.png). ---. As a bypass to the problem, you might consider [Jmol](http://jmol.sourceforge.net/). Launch the program from the CLI by `jmol case2.mol &`, or start the program by click and load the structure (File -> Open). . The program has its own command line interface (File -> Console), start this as second step. For addition of (idealized) hydrogens and subsequent optimization of the structure by the MMFF force field, enter `minimize addHydrogens;` after the prompt. (To run the optimization aga",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2494#issuecomment-1153718280:1119,test,tested,1119,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2494#issuecomment-1153718280,1,['test'],['tested']
Testability, *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Debugging Message in GetAtom ; Requested Atom Out of Range ; ============================== ; *** Open Babel Audit Log in Clear ; Ran OpenBabel::Clear Molecule ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in WriteChemObjectImpl ; OpenBabel::Write molecule XYZ cartesian coordinates format; 1 molecule converted ; 1 info messages 45 audit log messages 1 debugging messages.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:4842,Log,Log,4842,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,9,"['Log', 'log']","['Log', 'log']"
Testability," -- you see an alternating pattern of single and double bonds. (This is a formalism only, because aromatic bonds are neither single, nor double bonds.) Thus, instead of `c1ccccc1` to describe benzene, you may write `C1=CC=CC=C1`, too. The potential hurdle on the side of chemistry is that by e.g., cyclopentadiene (`C1C=CC=C1`), insaturation _alone_ is a necessary, yet not a sufficient condition to consider a compound as _aromatic_. On the other side, there are multiple SMILES dialects used; OpenBabel provides canonical, universal, and inchified SMILES ([reference](https://open-babel.readthedocs.io/en/latest/FileFormats/SMILES_format.html)). The more complex the molecular structure to describe, the higher the chance you are going to spot a difference in SMILES strings assigned along these rules. Assuming you didn't know about SMILES earlier, there is a brief entry in [wikipedia](https://en.wikipedia.org/wiki/Simplified_molecular-input_line-entry_system), and thanks to Daylight some [tutorial](https://daylight.com/dayhtml_tutorials/languages/smiles/index.html), [theory](https://daylight.com/dayhtml/doc/theory/theory.smiles.html), and [examples](https://www.daylight.com/dayhtml_tutorials/languages/smiles/smiles_examples.html) compiled in one spot to get started. In case you launch your scripts from the CLI, a slight modification of your code offers to test one SMILES string at a time:. ```python; #!/usr/bin/env python3. import argparse. from openbabel import openbabel; from openbabel import pybel. def main():; """"""Collect SMILES and perform the analysis""""""; parser = argparse.ArgumentParser(; description='Check if OpenBabel considers a structure aromatic'); parser.add_argument('smiles', help='structure to test (SMILES string)'); args = parser.parse_args(). # Reading the molecule; mol = pybel.readstring(""smi"", args.smiles). # Checking the aromaticity; print([; int(atom.IsAromatic()) for atom in openbabel.OBMolAtomIter(mol.OBMol); ]). if __name__ == '__main__':; main(); ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2508#issuecomment-1176280159:1818,test,test,1818,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2508#issuecomment-1176280159,2,['test'],['test']
Testability," -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: v2.3.1; Operating system and version: MacOS Mojave v10.14.6. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; When I convert the following xyz file into sdf file with openbabel on Jupyter notebook, the output sdf sees the molecule as a radical instead of the expected structure. **xyz file**; ```; 13. N -0.0622 -0.1867 -0.0074 ; N -3.3957 -0.5192 0.0030 ; C -1.1333 0.8052 -0.0003 ; C 1.1224 0.3173 0.0007 ; C 2.3297 -0.5309 0.0000 ; C 3.5321 0.0493 0.0030 ; C -2.3930 0.0649 0.0010 ; H -1.0764 1.4443 -0.8888 ; H -1.0713 1.4385 0.8921 ; H 1.2902 1.4096 0.0100 ; H 2.2149 -1.6079 -0.0044 ; H 4.4298 -0.5598 0.0018 ; H 3.6559 1.1268 0.0067; ```. **Python code**. ```; import openbabel. obConversion = openbabel.OBConversion(); obConversion.SetInAndOutFormats(""xyz"", ""sdf""). mol = openbabel.OBMol(); obConversion.ReadFile(mol, ""test.xyz""); outSDF = obConversion.WriteString(mol); print(outSDF); ```. **Expected output**. ```; 549110; -OEChem-11191917383D. 13 12 0 0 0 0 0 0 0999 V2000; -0.0622 -0.1867 -0.0074 N 0 0 0 0 0 0 0 0 0 0 0 0; -3.3957 -0.5192 0.0030 N 0 0 0 0 0 0 0 0 0 0 0 0; -1.1333 0.8052 -0.0003 C 0 0 0 0 0 0 0 0 0 0 0 0; 1.1224 0.3173 0.0007 C 0 0 0 0 0 0 0 0 0 0 0 0; 2.3297 -0.5309 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 3.5321 0.0493 0.0030 C 0 0 0 0 0 0 0 0 0 0 0 0; -2.3930 0.0649 0.0010 C 0 0 0 0 0 0 0 0 0 0 0 0; -1.0764 1.4443 -0.8888 H 0 0 0 0 0 0 0 0 0 0 0 0; -1.0713 1.4385 0.8921 H 0 0 0 0 0 0 0 0 0 0 0 0; 1.2902 1.4096 0.0100 H 0 0 0 0 0 0 0 0 0 0 0 0; 2.2149 -1.6079 -0.0044 H 0 0 0 0 0 0 0 0 0 0 0 0; 4.4298 -0.5598 0.0018 H 0 0 0 0 0 0 0 0 0 0 0 0; 3.6559 1.1268 0.0067 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 3 1 0 0 0 0; 1 4 2 0 0 0 0; 2 7 3 0 0 0 0; 3 7 1 0 0 0 0; 3 8 1 0 0 0 0; 3 9 1 0 0 0 0; 4 5 1 0 0 0 0; 4 10 1 0 0 0 0; 5 6 2 0 0 0 0; 5 11 1 0 0 0 0; 6 12 1 0 0 0 0; 6 13 1 0 0 0 0; M END; ```; wh",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2090:1585,test,test,1585,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2090,1,['test'],['test']
Testability," --title <title> Add or replace molecule title; --addtotitle <text> Append to title; --addformula Append formula to title. However the wiki page gives further details (eg -a) and in alphabetical order, would it be worth updating?. -a options; Format-specific input options. See -H format-ID for options allowed by a particular format; --addtotitle; Append text after the current molecule title; --addformula; Append the molecular formula after the current molecule title; -b; Convert dative bonds (e.g., [N+]([O-])=O to N(=O)=O; -c; Center atomic coordinates at (0,0,0); -C; Combine molecules in first file with others having the same name; -d; Delete Hydrogens; -e; Continue to convert molecules after errors; ---errorlevel 2; Filter the level of errors and warnings displayed:; 1 = critical errors only; 2 = include warnings too (default); 3 = include informational messages too; 4 = include ""audit log"" messages of changes to data; 5 = include debugging messages too; -f #; For multiple entry input, start import with molecule # as the first entry; -F; Output the available fingerprint types; -h; Add hydrogens; -H; Output usage information; -H format-ID; Output formatting information and options for format specified; -Hall; Output formatting information and options for all formats; -i<format-ID>; Specifies input format, see below for the available formats; -j; --join; Join all input molecules into a single output molecule entry; -k; Translate computational chemistry modeling keywords (e.g., GAMESS and Gaussian); -m; Produce multiple output files, to allow:; Splitting one input file - put each molecule into consecutively numbered output files; Batch conversion - convert each of multiple input files into a specified output format; -l #; For multiple entry input, stop import with molecule # as the last entry; -o format-ID; Specifies output format, see below for the available formats; -p; Add Hydrogens appropriate for pH (use transforms in phmodel.txt); --property; Add or replace a p",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1484:2813,log,log,2813,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1484,1,['log'],['log']
Testability," -> line contents:oop_ ; ============================== ; *** Open Babel Error in CIFReadValue ; Warning: Trying to read a value but found a new CIF tag ! ; ============================== ; *** Open Babel Warning in Parse ; Warning: one line could not be interpreted while reading a CIF file: ; -> line contents:+2 ; ============================== ; *** Open Babel Warning in Parse ; Warning: one line could not be interpreted while reading a CIF file: ; -> line contents:AlT1 +3 ; ============================== ; *** Open Babel Warning in Parse ; Warning: one line could not be interpreted while reading a CIF file: ; -> line contents:AlT2 +3 ; ============================== ; *** Open Babel Warning in Parse ; Warning: one line could not be interpreted while reading a CIF file: ; -> line contents:SiT2 +4 ; ============================== ; *** Open Babel Warning in Parse ; Warning: one line could not be interpreted while reading a CIF file: ; -> line contents:O1 -2 ; ============================== ; *** Open Babel Warning in Parse ; Warning: one line could not be interpreted while reading a CIF file: ; -> line contents:O2 -2 ; ============================== ; *** Open Babel Warning in Parse ; Warning: one line could not be interpreted while reading a CIF file: ; -> line contents:O3 -2 ; ``` . ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. To reproduce cifformat bug, just run the command . `obabel Ca2Al2SiO7.cif -O Ca2Al2SiO7.xyz`. To reproduce mmcifformat bug, you need to compile supercell first and run it like this. `supercell -d -i Ca2Al2SiO7.cif -m`. https://github.com/orex/supercell/blob/master/data/examples/Ca2Al2SiO7/Ca2Al2SiO7.cif. . More detailed information about the issue can be found here; https://github.com/orex/supercell/issues/7",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1659:3241,test,test,3241,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1659,1,['test'],['test']
Testability," -osf. babel: cannot write output format!. Open Babel 2.2.99 -- Mar 1 2010 -- 15:53:14. Usage: babel [-i<input-type>] <name> [-o<output-type>] <name>. Try -H option for more information. However, it can convert the SMILES file into a SDF file without any problem by “babel -ismi ten.smi -osdf ten.sdf”. Yes, it can write SDF output, but not index.... . Second, during the “make test”, some tests failed as follows:; ; Running tests... Test project path/to/build/openbabel. Start 1: uniqueid_Test. 1/37 Test #1: uniqueid_Test .................... Passed 0.01 sec. Start 2: smiles_Test. 2/37 Test #2: smiles_Test ......................***Exception: SegFault 0.04 sec. Start 3: stereo_Test. 3/37 Test #3: stereo_Test ......................***Exception: SegFault 0.04 sec. Start 4: tetrahedral_Test. 4/37 Test #4: tetrahedral_Test ................. Passed 0.00 sec. Start 5: tetranonplanar_Test. 5/37 Test #5: tetranonplanar_Test .............. Passed 0.00 sec. Start 6: tetraplanar_Test. 6/37 Test #6: tetraplanar_Test ................. Passed 0.00 sec. Start 7: cistrans_Test. 7/37 Test #7: cistrans_Test ....................***Exception: SegFault 0.02 sec. Start 8: stereoperception_Test. 8/37 Test #8: stereoperception_Test ............ Passed 0.03 sec. Start 9: aromatest_Test. 9/37 Test #9: aromatest_Test ...................***Exception: SegFault 0.03 sec. Start 10: atom_Test. 10/37 Test #10: atom_Test ........................ Passed 0.00 sec. Start 11: bond_Test. 11/37 Test #11: bond_Test ........................ Passed 0.00 sec. Start 12: cansmi_Test. 12/37 Test #12: cansmi_Test ...................... Passed 1.27 sec. Start 13: cmlreadfile_Test. 13/37 Test #13: cmlreadfile_Test ................. Passed 0.02 sec. Start 14: conversion_Test. 14/37 Test #14: conversion_Test .................. Passed 0.01 sec. Start 15: datatest_Test. 15/37 Test #15: datatest_Test .................... Passed 0.00 sec. Start 16: ffghemical_Test. 16/37 Test #16: ffghemical_Test ..................***Failed 0",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:1315,Test,Test,1315,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability," ..\..\src\gui\stdwx.h(22) : fatal error C1083: Cannot open include file: 'wx/wxprec.h': No such file or directory; stdwx.cpp; ..\..\src\gui\stdwx.h(22) : fatal error C1083: Cannot open include file: 'wx/wxprec.h': No such file or directory; optswx.cpp; ..\..\src\gui\stdwx.h(22) : fatal error C1083: Cannot open include file: 'wx/wxprec.h': No such file or directory; Generating Code...; Project : warning PRJ0018 : The following environment variables were not found:; $(WXWIN); Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBGUI\release\BuildLog.htm""; OBGUI - 3 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 2 up-to-date, 0 skipped ==========. OBInchi:. ------ Build started: Project: OBInchi, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; inchiformat.cpp; getinchi.cpp; Linking...; Generating code; Finished generating code; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBInchi\Release\BuildLog.htm""; OBInchi - 0 error(s), 0 warning(s); ========== Build: 1 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. OBJava: (skip - requires swig). ------ Build started: Project: OBJava, Configuration: Release Win32 ------; Swigify; 'swig' is not recognized as an internal or external command,; operable program or batch file.; Project : error PRJ0019: A tool returned an error code from ""Swigify""; Project : warning PRJ0018 : The following environment variables were not found:; $(JAVABASE); Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBJava\Release\BuildLog.htm""; OBJava - 1 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 6 up-to-date, 0 skipped ==========. OBMCDL:. ------ Build started: Project: OBMCDL, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; MCDLformat.cpp; Linking...; ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:5051,log,log,5051,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['log'],['log']
Testability," 0 0; 3 9 1 0 0 0 0; M END; $$$$; xubuntu@xubuntu:~/Desktop$ ; xubuntu@xubuntu:~/Desktop$ # check obabel for Python; xubuntu@xubuntu:~/Desktop$ python3; Python 3.8.5 (default, Jul 28 2020, 12:59:40) ; [GCC 9.3.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import openbabel; >>> print(openbabel.__version__); 3.0.0; >>> ; >>> from openbabel import pybel; >>> mol = pybel.readstring(""smi"", ""CO""); >>> mol.make3D(); >>> print(mol.write(""sdf""); ... ). OpenBabel01162216503D. 6 5 0 0 0 0 0 0 0 0999 V2000; 1.0544 0.0300 -0.0867 C 0 0 0 0 0 0 0 0 0 0 0 0; 2.4700 0.0351 -0.0732 O 0 0 0 0 0 0 0 0 0 0 0 0; 0.6942 -0.9889 -0.2489 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.6942 0.6863 -0.8828 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.6886 0.3944 0.8761 H 0 0 0 0 0 0 0 0 0 0 0 0; 2.7654 -0.2927 -0.9396 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0 0 0 0; 1 3 1 0 0 0 0; 1 4 1 0 0 0 0; 1 5 1 0 0 0 0; 2 6 1 0 0 0 0; M END; $$$$. >>> ; ```. Debian 12/bookworm (branch testing) occasionally is ahead of Ubuntu when it comes to programs the DebiChem project repackages. In the case of OpenBabel, this is the case ([tracker](https://tracker.debian.org/pkg/openbabel)) with version 3.1.1 available since June 2021. So I once removed all packages related to OpenBabel, and started from scratch with the combination of `sudo apt-get install openbabel python3-openbabel`. Then again, OpenBabel from the CLI as well from within Python are installed without warning, and work as anticipated:. ```; norwid@carnot2:~$ lsb_release -a; No LSB modules are available.; Distributor ID:	Debian; Description:	Debian GNU/Linux bookworm/sid; Release:	testing; Codename:	bookworm; norwid@carnot2:~$ ; norwid@carnot2:~$ obj; objcopy objdump ; norwid@carnot2:~$ obj; objcopy objdump ; norwid@carnot2:~$ python pip uninstall openbabel; python: can't open file '/home/norwid/pip': [Errno 2] No such file or directory; norwid@carnot2:~$ python3 pip uninstall openbabel; python3: can't open file '/home/norwid/pip': [Errno 2] No su",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:9204,test,testing,9204,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['test'],['testing']
Testability, 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 1 10 2 0 0 0; 1 2 1 0 0 0; 2 3 2 0 0 0; 3 4 1 0 0 0; 4 9 1 0 0 0; 4 5 2 0 0 0; 5 6 1 0 0 0; 6 7 2 0 0 0; 7 8 1 0 0 0; 8 19 1 0 0 0; 8 9 2 0 0 0; 9 10 1 0 0 0; 10 11 1 0 0 0; 11 20 2 0 0 0; 11 12 1 0 0 0; 12 13 2 0 0 0; 13 14 1 0 0 0; 14 15 2 0 0 0; 15 20 1 0 0 0; 15 16 1 0 0 0; 16 17 2 0 0 0; 17 18 1 0 0 0; 18 19 2 0 0 0; 19 20 1 0 0 0; M END. Messages:. babel 1.smi 1.mol ---errorlevel 4; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule SMILES format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in AssignSpinMultiplicity; Ran OpenBabel::AssignSpinMultiplicity; ==============================; *** Open Babel Audit Log in Kekulize; Ran OpenBabel::Kekulize; ==============================; *** Open Babel Audit Log in FindRingAtomsAndBonds; Ran OpenBabel::FindRingAtomsAndBonds; ==============================; *** Open Babel Information in NewPerceiveKekuleBonds; Kekulize: Huckel rule not satisfied for molecule. ==============================; *** Open Babel Audit Log in WriteChemObjectImpl; OpenBabel::Write molecule MDL MOL format; 1 molecule converted; 1 info messages 6 audit log messages. Version Open Babel 2.2.0 -- Jul 7 2008 -- 22:06:15 . OS - gentoo GNU/linux. Reported by: *anonymous,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830:1315,Log,Log,1315,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830,7,"['Log', 'log']","['Log', 'log']"
Testability," 0.01 sec. Start 18: ffuff_Test. 18/37 Test #18: ffuff_Test .......................***Failed 0.01 sec. Start 19: formalcharge_Test. 19/37 Test #19: formalcharge_Test ................ Passed 0.12 sec. Start 20: format_Test. 20/37 Test #20: format_Test ...................... Passed 0.01 sec. Start 21: formula_Test. 21/37 Test #21: formula_Test ..................... Passed 0.21 sec. Start 22: internalcoord_Test. 22/37 Test #22: internalcoord_Test ............... Passed 0.00 sec. Start 23: invalidsmarts_Test. 23/37 Test #23: invalidsmarts_Test ............... Passed 0.00 sec. Start 24: invalidsmiles_Test. 24/37 Test #24: invalidsmiles_Test ............... Passed 0.01 sec. Start 25: iterators_Test. 25/37 Test #25: iterators_Test ................... Passed 0.13 sec. Start 26: logp_psa_Test. 26/37 Test #26: logp_psa_Test ....................***Exception: SegFault 0.02 sec. Start 27: math_Test. 27/37 Test #27: math_Test ........................ Passed 0.13 sec. Start 28: mol_Test. 28/37 Test #28: mol_Test ......................... Passed 0.02 sec. Start 29: phmodel_Test. 29/37 Test #29: phmodel_Test .....................***Exception: SegFault 0.05 sec. Start 30: residue_Test. 30/37 Test #30: residue_Test ..................... Passed 0.03 sec. Start 31: ringtest_Test. 31/37 Test #31: ringtest_Test .................... Passed 0.13 sec. Start 32: smartstest_Test. 32/37 Test #32: smartstest_Test .................. Passed 0.21 sec. Start 33: smilesmatch_Test. 33/37 Test #33: smilesmatch_Test .................***Exception: SegFault 1.44 sec. Start 34: unitcell_Test. 34/37 Test #34: unitcell_Test .................... Passed 0.00 sec. Start 35: pytest_babel. 35/37 Test #35: pytest_babel .....................***Failed 0.03 sec. Start 36: pytest_sym. 36/37 Test #36: pytest_sym ....................... Passed 0.08 sec. Start 37: pytest_fastsearch. 37/37 Test #37: pytest_fastsearch ................***Failed 0.03 sec. 68% tests passed, 12 tests failed out of 37. Total Test time (real) = 4",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:3413,Test,Test,3413,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability, 0.03 sec. Start 9: aromatest_Test. 9/37 Test #9: aromatest_Test ...................***Exception: SegFault 0.03 sec. Start 10: atom_Test. 10/37 Test #10: atom_Test ........................ Passed 0.00 sec. Start 11: bond_Test. 11/37 Test #11: bond_Test ........................ Passed 0.00 sec. Start 12: cansmi_Test. 12/37 Test #12: cansmi_Test ...................... Passed 1.27 sec. Start 13: cmlreadfile_Test. 13/37 Test #13: cmlreadfile_Test ................. Passed 0.02 sec. Start 14: conversion_Test. 14/37 Test #14: conversion_Test .................. Passed 0.01 sec. Start 15: datatest_Test. 15/37 Test #15: datatest_Test .................... Passed 0.00 sec. Start 16: ffghemical_Test. 16/37 Test #16: ffghemical_Test ..................***Failed 0.01 sec. Start 17: ffmmff94_Test. 17/37 Test #17: ffmmff94_Test ....................***Failed 0.01 sec. Start 18: ffuff_Test. 18/37 Test #18: ffuff_Test .......................***Failed 0.01 sec. Start 19: formalcharge_Test. 19/37 Test #19: formalcharge_Test ................ Passed 0.12 sec. Start 20: format_Test. 20/37 Test #20: format_Test ...................... Passed 0.01 sec. Start 21: formula_Test. 21/37 Test #21: formula_Test ..................... Passed 0.21 sec. Start 22: internalcoord_Test. 22/37 Test #22: internalcoord_Test ............... Passed 0.00 sec. Start 23: invalidsmarts_Test. 23/37 Test #23: invalidsmarts_Test ............... Passed 0.00 sec. Start 24: invalidsmiles_Test. 24/37 Test #24: invalidsmiles_Test ............... Passed 0.01 sec. Start 25: iterators_Test. 25/37 Test #25: iterators_Test ................... Passed 0.13 sec. Start 26: logp_psa_Test. 26/37 Test #26: logp_psa_Test ....................***Exception: SegFault 0.02 sec. Start 27: math_Test. 27/37 Test #27: math_Test ........................ Passed 0.13 sec. Start 28: mol_Test. 28/37 Test #28: mol_Test ......................... Passed 0.02 sec. Start 29: phmodel_Test. 29/37 Test #29: phmodel_Test .....................***Exception: SegFa,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:2557,Test,Test,2557,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability," 1 5 1 0 0 0 0; 2 6 1 0 0 0 0; M END; $$$$. >>> ; ```. Debian 12/bookworm (branch testing) occasionally is ahead of Ubuntu when it comes to programs the DebiChem project repackages. In the case of OpenBabel, this is the case ([tracker](https://tracker.debian.org/pkg/openbabel)) with version 3.1.1 available since June 2021. So I once removed all packages related to OpenBabel, and started from scratch with the combination of `sudo apt-get install openbabel python3-openbabel`. Then again, OpenBabel from the CLI as well from within Python are installed without warning, and work as anticipated:. ```; norwid@carnot2:~$ lsb_release -a; No LSB modules are available.; Distributor ID:	Debian; Description:	Debian GNU/Linux bookworm/sid; Release:	testing; Codename:	bookworm; norwid@carnot2:~$ ; norwid@carnot2:~$ obj; objcopy objdump ; norwid@carnot2:~$ obj; objcopy objdump ; norwid@carnot2:~$ python pip uninstall openbabel; python: can't open file '/home/norwid/pip': [Errno 2] No such file or directory; norwid@carnot2:~$ python3 pip uninstall openbabel; python3: can't open file '/home/norwid/pip': [Errno 2] No such file or directory; norwid@carnot2:~$ ; norwid@carnot2:~$ # get OpenBabel; norwid@carnot2:~$ ; norwid@carnot2:~$ sudo apt-get install openbabel python3-openbabel; [sudo] password for norwid: ; Reading package lists... Done; Building dependency tree... Done; Reading state information... Done; The following additional packages will be installed:; libopenbabel7; The following NEW packages will be installed:; libopenbabel7 openbabel python3-openbabel; 0 upgraded, 3 newly installed, 0 to remove and 5 not upgraded.; Need to get 0 B/3,837 kB of archives.; After this operation, 19.8 MB of additional disk space will be used.; Do you want to continue? [Y/n] y; Selecting previously unselected package libopenbabel7.; (Reading database ... 202950 files and directories currently installed.); Preparing to unpack .../libopenbabel7_3.1.1+dfsg-6_amd64.deb ...; Unpacking libopenbabel7 (3",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:9867,test,testing,9867,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['test'],['testing']
Testability, ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule ; ============================== ; *** Open Babel Audit Log in AssignAromaticFlags; Ran OpenBabel::AssignAromaticFlags ; ============================== ; *** Open Babel Audit Log in AssignImplicitValence; Ran OpenBabel::AssignImplicitValence ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ========================,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:1579,Log,Log,1579,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,9,['Log'],['Log']
Testability," > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py; > #WORKING_DIRECTORY; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > Python bindings will be compiled; > Configuring done; > CMake Warning (dev):; > Policy CMP0042 is not set: MACOSX_RPATH is enabled by default. Run ""cmake; > --help-policy CMP0042"" for policy details. Use the cmake_policy command to; > set the policy and suppress this warning.; > ; > MACOSX_RPATH is not specified for the following targets:; > ; > inchi; > openbabel; > ; > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > Generating done; > ; > Need help! Thank you~; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/openbabel/openbabel/issues/131.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:21601,test,test,21601,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['test'],['test']
Testability," > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:18942,test,test,18942,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['test'],['test']
Testability," > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:21854,test,test,21854,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,2,['test'],"['test', 'testexample']"
Testability, AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran ,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:3568,Log,Log,3568,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Log'],['Log']
Testability, Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule ; ============================== ; *** Open Babel Audit Log in AssignAromaticFlags; Ran OpenBabel::AssignAromaticFlags ; ============================== ; *** Open Babel Audit Log in AssignImplicitValence; Ran OpenBabel::AssignImplicitValence ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in FindSSSR ; Ran OpenBabel::FindSSSR ; ============================== ; *** Open Babel Audit Log in IsClosure ; Ran OpenBabel::PerceiveClosureBonds ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audi,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:2564,Log,Log,2564,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Log'],['Log']
Testability," Babel Warning in CreateCisTrans; Error in cis/trans stereochemistry specified for the double bond. COCC(=C(OC(=O)C)CCC[C@H]([C@H](C(=C)CC=C)OC(=C)O)O)OCO 1 molecule converted; ```. The meaning of the formulae provided by CDKDepict[2] did not alter -- e.g., no change in the configuration of the stereogenic centers, and the double bond still can't be assigned to match either the pattern of (E), or (Z):. ![2022-03-30_CDKDepict_entry04](https://user-images.githubusercontent.com/19709084/160856599-8123cc0e-39b3-44b7-a2be-019bf7d5294b.png). Because I'm not aware if OpenBabel can resolve such ambiguities (here: to return one SMILES string with the explicit (E), and an other SMILES string with the explicit (Z) double bond) -- wouldn't be the more strict (pedantic?) remove of this entry an; advantage to address specific configurations?*. Last (but not least), the explicit return of problematic SMILES. The in-silico generation of molecules as SMILES appeared to me as affordable (enough) to skip entries with SMILES OpenBabel/partialsmiles perceive as problematic. Thus my change to focus on SMILES approved by partialsmiles/OpenBabel may process (the complementary set). The above SMILES string yielding a warning because of extended stereochemistry (options for .and. and .or.) equally calls for an adjustment of the parameters how the molecules are generated (outside OpenBabel) to use only SMILES with unambiguous stereochemistry. ---. *) On a tangent, this reminds me a bit to the extended stereochemistry options in .sdf (v3000 format) with logical .and. and .or. as seen e.g., in a presentation[3] by Andrey Yerin's about how to possibly improve InChI:. ![2022-03-30_Yerin_InChI](https://user-images.githubusercontent.com/19709084/160856761-5908e26c-1f6d-4657-b6cb-0d55acbd2c53.png). [1] https://github.com/baoilleach/partialsmiles; [2] https://github.com/cdk/depict; [3] slide 8 of the .pdf https://www.inchi-trust.org/wp/wp-content/uploads/2019/12/19.-InChI-Stereo-Yerin-2019-update.pdf",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1083218256:2515,log,logical,2515,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1083218256,1,['log'],['logical']
Testability," Bond lenght (Cl - XCl = 1.95A ; Angle (X - Cl - XCl) = 180 degrees. For Bromine and EP (XBr):; Bond lenght (Br - XBr = 2.22A ; Angle (X - Br - XBr) = 180 degrees. For iodine and EP (XI):; Bond lenght (CI - XI = 12.35A ; Angle (X - CI - XI) = 180 degrees. I have attached a modified element.txt from Open Babel 2.3.2 (running on Ubuntu 14.04 Linux) that includes the properties XCl, XBr and XI. . I tried to modify the mol.cpp, mol.h, openbabel-python.cpp, openbabel.py and pybel.py files (also attached) to include a new function called AddX (same functionality as AddHydrogens for now, just different name). After sucessfully compiling the modified mol.cpp and mol.h files I then used pycharm and a simple pyhton script to see if it worked. I first tried:; import openbabel, pybel; mol = pybel.readfile(""pdb"", ""~/Documents/test/Chlroroquine.pdb"").next(); print len(mol.atoms), mol.molwt; mol.OBMol.AddHydrogens(); print len(mol.atoms), mol.molwt; pybelmol = pybel.Molecule(mol); pybelmol.write(""pdb"", ""~/Documents/test/Chlroroquine_test.pdb"", overwrite=True). With the following output:; 22 319.87214; 48 319.87214. Then I tried the following::; import openbabel, pybel; mol = pybel.readfile(""pdb"", ""/home/xeonbas/Documents/MGLTools_test/test/Chlrooquine.pdb"").next(); print len(mol.atoms), mol.molwt; mol.OBMol.AddX(); print len(mol.atoms), mol.molwt; pybelmol = pybel.Molecule(mol); pybelmol.write(""pdb"", ""/home/xeonbas/Documents/MGLTools_test/test/Chlrooquine_test.pdb"", overwrite=True). With the following output:; Traceback (most recent call last):; 22 319.87214; File ""~/PycharmProjects/untitled3/test.py"", line 4, in <module>; mol.OBMol.AddX(); AttributeError: 'OBMol' object has no attribute 'AddX'. I am not a programmer so my programming skills are virtually non-existent. Any kind of assistance will be greatly appreaciated. . Thank you; Best regards; Andre. Reported by: bas123. Original Ticket: [openbabel/feature-requests/174](https://sourceforge.net/p/openbabel/feature-requests/174)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1542:1608,test,test,1608,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1542,4,['test'],['test']
Testability, Building CXX object test/CMakeFiles/test_runner.dir/smilestest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/spectrophoretest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/squareplanartest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereotest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereoperceptiontest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tautomertest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/datatest.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffgaff.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffghemical.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffmmff94.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffuff.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formalcharge.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/format.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formula.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/internalcoord.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmarts.o; [ 97%] Buil,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:53788,test,test,53788,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability," C UNL 1 4.666 -0.812 0.925 1.00 0.00 C ; HETATM 5 C UNL 1 5.386 -1.689 1.812 1.00 0.00 C ; HETATM 6 C UNL 1 0.345 0.942 -0.848 1.00 0.00 C ; HETATM 7 H UNL 1 0.550 -0.563 0.674 1.00 0.00 H ; HETATM 8 H UNL 1 3.022 0.694 -0.597 1.00 0.00 H ; HETATM 9 H UNL 1 2.710 -1.441 1.561 1.00 0.00 H ; HETATM 10 H UNL 1 5.182 -0.184 0.290 1.00 0.00 H ; HETATM 11 H UNL 1 6.073 -2.231 2.360 1.00 0.00 H ; HETATM 12 H UNL 1 -0.341 1.484 -1.396 1.00 0.00 H ; CONECT 1 2 6 6 7 ; CONECT 2 1 3 3 8 ; CONECT 3 2 2 4 9 ; CONECT 4 3 5 5 10 ; CONECT 5 4 4 6 11 ; CONECT 6 5 1 1 12 ; CONECT 7 1 ; CONECT 8 2 ; CONECT 9 3 ; CONECT 10 4 ; CONECT 11 5 ; CONECT 12 6 ; MASTER 0 0 0 0 0 0 0 0 12 0 12 0; END; <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2123:2289,test,test,2289,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2123,1,['test'],['test']
Testability," CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > Syntax Warning in cmake code at; > ; > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:14; > ; > Argument not separated from preceding token by whitespace.; > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > Syntax Warning in cmake code at; > ; > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; > ; > Argument not separated from preceding token by whitespace.; > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > Syntax Warning in cmake code at; > ; > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; > ; > Argument not separated from preceding token by whitespace.; > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > Syntax Warning in cmake code at; > ; > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:39; > ; > Argument not separated from preceding token by whitespace.; > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE i",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:1689,test,test,1689,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['test'],['test']
Testability," Hat Enterprise Linux Server release 7.2 (Maipo); Release:	7.2; Codename:	Maipo. On both distribution, I installed the recommended packages on the openbabel website (Cairo, Eigen, SWIG, etc...). ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I'm trying to obtain the xyz cartesian coordinates for a molecule using the following command:. `obabel -:'C(CS(=O)(=O)O)C[As]CCO' -oxyz --gen3D`. or also:. `obabel -:'[Cl-](CCO)Cl' -oxyz --gen3D`. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>; I'm getting either a segmentation fault or a xyz matrix that doesn't seem to make sense. An example of the faulty xyz matrix is shown below:; Segmentation fault. OR. ```; 10. Cl 0.00000 0.00000 0.00000; C 0.00000 0.00000 0.00000; C 0.00000 0.00000 0.00000; O 0.00000 0.00000649287312117657393047806986443088278302852626988880812921024836757525200080858677196085004213270789661630710548391417629778208882688.00000; Cl 0.00000 0.00000 0.00000; H 0.00000 0.00000 0.00000; H 0.00000 0.00000 0.00000; H 67438393914669004032808741091913230354446553902642045508459943150635515907104708336944120215765632178819073994316939571672800821248.000006447925170219654883402226073349776216856797966807962330105572919815896668029776297984.00000 0.00000; H 0.00000 0.00000 0.00000; H -0.00000 0.0000045544753078738184488698682103112836351107744910652563895206573527063273523134970644067921468502526687224977090526353134894444178484259388278495107227085972486288335831653266305581327638186808678002310034240675971481934495744.00000; 1 molecule converted. ```. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1694:2887,test,test,2887,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1694,1,['test'],['test']
Testability," It gets stuck in the tests in 3 of our supercomputers. ```; Test project /dev/shm/strube1/juwels/OpenBabel/3.1.1/gompi-2022a/easybuild_obj; Start 1: test_align_1; 1/229 Test #1: test_align_1 ..................... Passed 0.05 sec; Start 2: test_align_2; 2/229 Test #2: test_align_2 ..................... Passed 0.06 sec; Start 3: test_align_3; 3/229 Test #3: test_align_3 ..................... Passed 0.05 sec; Start 4: test_align_4; 4/229 Test #4: test_align_4 ..................... Passed 0.68 sec; Start 5: test_align_5; 5/229 Test #5: test_align_5 ..................... Passed 0.16 sec; Start 6: test_alias_1; 6/229 Test #6: test_alias_1 ..................... Passed 0.11 sec; Start 7: test_automorphism_1; 7/229 Test #7: test_automorphism_1 .............. Passed 0.08 sec; Start 8: test_automorphism_2; 8/229 Test #8: test_automorphism_2 .............. Passed 0.08 sec; Start 9: test_automorphism_3; 9/229 Test #9: test_automorphism_3 .............. Passed 0.08 sec; Start 10: test_automorphism_4; 10/229 Test #10: test_automorphism_4 .............. Passed 0.08 sec; Start 11: test_automorphism_5; 11/229 Test #11: test_automorphism_5 .............. Passed 0.10 sec; Start 12: test_automorphism_6; 12/229 Test #12: test_automorphism_6 .............. Passed 0.08 sec; Start 13: test_automorphism_7; 13/229 Test #13: test_automorphism_7 .............. Passed 0.08 sec; Start 14: test_automorphism_8; 14/229 Test #14: test_automorphism_8 .............. Passed 0.08 sec; Start 15: test_automorphism_9; 15/229 Test #15: test_automorphism_9 .............. Passed 0.10 sec; Start 16: test_automorphism_10; 16/229 Tes; ```. And it stays there forever. ## Steps to Reproduce; Install it with EasyBuild, with GCC 11.3.0 and OpenMPI 4.1.4. The other dependencies used are:. ```; >> * CMake/3.23.1; >> * SWIG/.4.0.2; >> * Python/3.10.4; >> * zlib/.1.2.12; >> * libxml2/.2.9.13; >> * Eigen/3.4.0; >> * RapidJSON/1.1.0; >> * cairo/.1.17.4; >> * Boost/1.79.0; >> * maeparser/1.3.0; >> * CoordgenLibs/3.0.1; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2557:1181,Test,Test,1181,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2557,6,['Test'],['Test']
Testability," MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:17397,test,test,17397,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,1,['test'],['test']
Testability," NOT find Boost; -- Could NOT find Boost; -- Maestro formats will NOT be supported. Please install Boost to enable Maestro formats.; -- Coordinate generation with Coordgen will NOT be supported. Please install Boost to enable Maestro formats.; -- Could NOT find RapidJSON (missing: RAPIDJSON_INCLUDE_DIRS) (Required is at least version ""1.1.0""); -- JSON formats will be supported. Using RapidJSON 1.1.0 at /home/kk/openbabel-openbabel-3-1-1/external/rapidjson-1.1.0/include; -- Cairo found. PNG output will be supported.; -- Could NOT find Boost; -- Could NOT find Boost; -- Attempting to build the GUI; -- wxWidgets not found => GUI will not be built; -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR); -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR) (Required is at least version ""2.0""); -- SWIG 2.0 NOT found; -- Configuring done; -- Generating done; -- Build files have been written to: /home/kk/build. **make test**; 97% tests passed, 6 tests failed out of 227. Total Test time (real) = 64.56 sec. The following tests FAILED:; 221 - pybindtest_bindings (Failed); 222 - pybindtest__pybel (Failed); 223 - pybindtest_example (Failed); 224 - pybindtest_obconv_writers (Failed); 225 - pybindtest_cdjsonformat (Failed); 226 - pybindtest_pcjsonformat (Failed); Errors while running CTest; Makefile:72: recipe for target 'test' failed; make: *** [test] Error 8. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. 1. download the sourse code(openbabel-openbabel-3-1-1.tar.gz); 2. sudo apt install libboost-dev; 3. sudo apt install gcc g++ make cmake; 4. sudo apt install libxml2-dev zlib1g-dev libcairo2-dev libeigen3-dev libopenbabel-dev; 5. sudo apt install python3-dev; 6. tar -xzvf openbabel-openbabel-3-1-1.tar.gz; 7. mkdir build; 8. cd build; 9. cm",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2234:2500,Test,Test,2500,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2234,1,['Test'],['Test']
Testability, Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran ,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:3666,Log,Log,3666,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,5,['Log'],['Log']
Testability, Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Debugging Message in GetAtom,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:4156,Log,Log,4156,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Log'],['Log']
Testability, Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Debugging Message in GetAtom ; Requested Atom Out of Range ; ============================== ; *** Open Babel Audit Log in Clea,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:4254,Log,Log,4254,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Log'],['Log']
Testability, Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Debugging Message in GetAtom ; Requested Atom Out of Range ; ============================== ; *** Open Babel Audit Log in Clear ; Ran OpenBabel::Clear Molecule ; ============================== ; *** Open Babel Audit Log in A,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:4352,Log,Log,4352,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Log'],['Log']
Testability, Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Debugging Message in GetAtom ; Requested Atom Out of Range ; ============================== ; *** Open Babel Audit Log in Clear ; Ran OpenBabel::Clear Molecule ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Lo,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:4450,Log,Log,4450,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Log'],['Log']
Testability, Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Debugging Message in GetAtom ; Requested Atom Out of Range ; ============================== ; *** Open Babel Audit Log in Clear ; Ran OpenBabel::Clear Molecule ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ;,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:4548,Log,Log,4548,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Log'],['Log']
Testability, Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Debugging Message in GetAtom ; Requested Atom Out of Range ; ============================== ; *** Open Babel Audit Log in Clear ; Ran OpenBabel::Clear Molecule ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ;,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:4646,Log,Log,4646,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Log'],['Log']
Testability, Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Debugging Message in GetAtom ; Requested Atom Out of Range ; ============================== ; *** Open Babel Audit Log in Clear ; Ran OpenBabel::Clear Molecule ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in WriteChemObjectImpl ; OpenBabel::Write molecule XYZ cartesian coordin,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:4744,Log,Log,4744,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Log'],['Log']
Testability," Operating system and version: Ubuntu 18.04. ## Expected Behavior; When calling OBMol.AddHydrogens(), it is expected to generate coordinates for the added hydrogens. The coordinates are generated based on the typical bond lengths and angles of the atoms involved. ## Actual Behavior; There is a check for whether the molecule HasNonZeroCoords() beforehand. If all the present coordinates are zero, then the hydrogen coordinates are left as zero also. This seems reasonable for most molecules, where it may be assumed that if the coordinates are all zero, then they will be set to something else later, so there is no use in generating coordinates for the hydrogens. But it leads to odd behavior if the molecule has a single heavy atom, such as water, ammonia, methane, etc. With these molecules, coordinates are generated for the hydrogens so long as the heavy atom coordinate is not located at the origin. For context, this came up when I was using simple test cases to create a bond adding routine that constructs valid molecules from sets of disconnected atoms produced by a generative model. While the issue was resolved by simply changing the coordinates of the test case molecules, the behavior seemed odd enough (and the proposed solution simple enough) that I would open an issue. ## Steps to Reproduce. ```; from openbabel import openbabel as ob. def test_case(atomic_num, x, y, z):; mol = ob.OBMol(); atom = mol.NewAtom(); atom.SetAtomicNum(atomic_num); atom.SetVector(x, y, z); mol.BeginModify(); ob.OBAtomAssignTypicalImplicitHydrogens(atom); mol.EndModify(); mol.AddHydrogens(); print('with {} at ({:.2f}, {:.2f}, {:.2f}),'.format(; ob.GetSymbol(atomic_num), x, y, z; )); for a in ob.OBMolAtomIter(mol):; if a != atom:; print(' H placed at ({:.2f}, {:.2f}, {:.2f})'.format(; a.GetX(), a.GetY(), a.GetZ(); )). test_case(8, 0, 0, 0); test_case(8, 1, 0, 0); ```; Output:; ```; mtr22@g001:~/gan$ python3 test_ob_problem.py; with O at (0.00, 0.00, 0.00),; H placed at (0.00, 0.00, 0.00); H pla",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2365:1691,test,test,1691,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2365,1,['test'],['test']
Testability," Operating system and version: Ubuntu 20.10. ## Expected Behavior. Be able to read a CIF generated by VESTA. ## Actual Behavior. Getting this error message in the console:. ```; ==============================; *** Open Babel Error in Find; Unknown space group error (H-M symbol:P 1), cannot match the list of transforms, please file a bug report.; ==============================; *** Open Babel Warning in Do; Converting to P 1 cell using available symmetry transformations.; ```. ## Steps to Reproduce. I am trying to read the CIF file with this simple program `read.cpp`:. ```cpp; #include<openbabel/atom.h>; #include<openbabel/mol.h> // OpenBabel::OBMol; #include<openbabel/generic.h> // OpenBabel::OBUnitCell; #include<openbabel/obconversion.h>. int main(int argc, char** argv){. 	OpenBabel::OBMol mol;; 	{; 		OpenBabel::OBConversion obconv; obconv.SetInFormat(""cif"");; 		obconv.ReadFile(&mol, ""VO2-Tetragonal-ICSD_CollCode647613_double_c_triclinic.cif""); ; 		std::cout<< mol.NumAtoms() << std::endl;; 		assert( mol.NumAtoms() == 12 );; 	}; }; ```. This is the complete CIF file `VO2-Tetragonal-ICSD_CollCode647613_double_c_triclinic.cif`. ```; #======================================================================; # CRYSTAL DATA; #----------------------------------------------------------------------; data_VESTA_phase_1. _chemical_name_common 'Vanadium dioxide - HT'; _cell_length_a 4.553490; _cell_length_b 4.553490; _cell_length_c 5.698880; _cell_angle_alpha 90.000000; _cell_angle_beta 90.000000; _cell_angle_gamma 90.000000; _cell_volume 118.162136; _space_group_name_H-M_alt 'P 1'; _space_group_IT_number 1. loop_; _space_group_symop_operation_xyz; 'x, y, z'; 'x, y, z+1/2'. loop_; _atom_site_label; _atom_site_occupancy; _atom_site_fract_x; _atom_site_fract_y; _atom_site_fract_z; _atom_site_adp_type; _atom_site_B_iso_or_equiv; _atom_site_type_symbol; V2 1.0 0.000000 0.000000 0.000000 Biso ? V; V2 1.0 0.500000 0.500000 0.250000 Biso ? V; V2 1.0 0.000000 0.000000 0.500000 Biso ? V;",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2414:1159,assert,assert,1159,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2414,1,['assert'],['assert']
Testability," SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape; > > sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BA",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:9158,test,test,9158,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,2,['test'],"['test', 'testfastsearch']"
Testability, Start 4: tetrahedral_Test. 4/37 Test #4: tetrahedral_Test ................. Passed 0.00 sec. Start 5: tetranonplanar_Test. 5/37 Test #5: tetranonplanar_Test .............. Passed 0.00 sec. Start 6: tetraplanar_Test. 6/37 Test #6: tetraplanar_Test ................. Passed 0.00 sec. Start 7: cistrans_Test. 7/37 Test #7: cistrans_Test ....................***Exception: SegFault 0.02 sec. Start 8: stereoperception_Test. 8/37 Test #8: stereoperception_Test ............ Passed 0.03 sec. Start 9: aromatest_Test. 9/37 Test #9: aromatest_Test ...................***Exception: SegFault 0.03 sec. Start 10: atom_Test. 10/37 Test #10: atom_Test ........................ Passed 0.00 sec. Start 11: bond_Test. 11/37 Test #11: bond_Test ........................ Passed 0.00 sec. Start 12: cansmi_Test. 12/37 Test #12: cansmi_Test ...................... Passed 1.27 sec. Start 13: cmlreadfile_Test. 13/37 Test #13: cmlreadfile_Test ................. Passed 0.02 sec. Start 14: conversion_Test. 14/37 Test #14: conversion_Test .................. Passed 0.01 sec. Start 15: datatest_Test. 15/37 Test #15: datatest_Test .................... Passed 0.00 sec. Start 16: ffghemical_Test. 16/37 Test #16: ffghemical_Test ..................***Failed 0.01 sec. Start 17: ffmmff94_Test. 17/37 Test #17: ffmmff94_Test ....................***Failed 0.01 sec. Start 18: ffuff_Test. 18/37 Test #18: ffuff_Test .......................***Failed 0.01 sec. Start 19: formalcharge_Test. 19/37 Test #19: formalcharge_Test ................ Passed 0.12 sec. Start 20: format_Test. 20/37 Test #20: format_Test ...................... Passed 0.01 sec. Start 21: formula_Test. 21/37 Test #21: formula_Test ..................... Passed 0.21 sec. Start 22: internalcoord_Test. 22/37 Test #22: internalcoord_Test ............... Passed 0.00 sec. Start 23: invalidsmarts_Test. 23/37 Test #23: invalidsmarts_Test ............... Passed 0.00 sec. Start 24: invalidsmiles_Test. 24/37 Test #24: invalidsmiles_Test ............... Passed 0.01 se,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:2083,Test,Test,2083,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability, Start 7: cistrans_Test. 7/37 Test #7: cistrans_Test ....................***Exception: SegFault 0.02 sec. Start 8: stereoperception_Test. 8/37 Test #8: stereoperception_Test ............ Passed 0.03 sec. Start 9: aromatest_Test. 9/37 Test #9: aromatest_Test ...................***Exception: SegFault 0.03 sec. Start 10: atom_Test. 10/37 Test #10: atom_Test ........................ Passed 0.00 sec. Start 11: bond_Test. 11/37 Test #11: bond_Test ........................ Passed 0.00 sec. Start 12: cansmi_Test. 12/37 Test #12: cansmi_Test ...................... Passed 1.27 sec. Start 13: cmlreadfile_Test. 13/37 Test #13: cmlreadfile_Test ................. Passed 0.02 sec. Start 14: conversion_Test. 14/37 Test #14: conversion_Test .................. Passed 0.01 sec. Start 15: datatest_Test. 15/37 Test #15: datatest_Test .................... Passed 0.00 sec. Start 16: ffghemical_Test. 16/37 Test #16: ffghemical_Test ..................***Failed 0.01 sec. Start 17: ffmmff94_Test. 17/37 Test #17: ffmmff94_Test ....................***Failed 0.01 sec. Start 18: ffuff_Test. 18/37 Test #18: ffuff_Test .......................***Failed 0.01 sec. Start 19: formalcharge_Test. 19/37 Test #19: formalcharge_Test ................ Passed 0.12 sec. Start 20: format_Test. 20/37 Test #20: format_Test ...................... Passed 0.01 sec. Start 21: formula_Test. 21/37 Test #21: formula_Test ..................... Passed 0.21 sec. Start 22: internalcoord_Test. 22/37 Test #22: internalcoord_Test ............... Passed 0.00 sec. Start 23: invalidsmarts_Test. 23/37 Test #23: invalidsmarts_Test ............... Passed 0.00 sec. Start 24: invalidsmiles_Test. 24/37 Test #24: invalidsmiles_Test ............... Passed 0.01 sec. Start 25: iterators_Test. 25/37 Test #25: iterators_Test ................... Passed 0.13 sec. Start 26: logp_psa_Test. 26/37 Test #26: logp_psa_Test ....................***Exception: SegFault 0.02 sec. Start 27: math_Test. 27/37 Test #27: math_Test ........................ Passe,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:2366,Test,Test,2366,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability," Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py; > #WORKING_DIRECTORY; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:183 (ADD_PYTHON",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:7775,test,test,7775,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,2,['test'],"['test', 'testfastsearch']"
Testability," V30 END BOND; ```. 1) One observation is on .sdf (v3000) written by openbabel -- though these can not be processed by the InChI reference executable (version 1.07.1, 64bit, Linux variant), openbabel itself is capable to assign an InChI. For instance. ```shell; $ obabel -:""[He]"" -O obabel_Helium.sdf -x3; ==============================; *** Open Babel Warning in WriteMolecule; No 2D or 3D coordinates exist. Stereochemical information will be stored using an Open Babel extension. To generate 2D or 3D coordinates instead use --gen2D or --gen3D.; 1 molecule converted; $ cat obabel_Helium.sdf. OpenBabel09192411482D. 0 0 0 0 0 999 V3000; M V30 BEGIN CTAB; M V30 COUNTS 1 0 0 0 0; M V30 BEGIN ATOM; M V30 1 He 0 0 0 0; M V30 END ATOM; M V30 BEGIN BOND; M V30 END BOND; M V30 END CTAB; M END; $$$$; $ ; $ ./inchi-1 ./obabel_Helium.sdf; InChI version 1, Software v. 1.07 (inchi-1 executable) ; Linux 64-bit Build (gcc 11.4.0) of Aug 10 2024 18:58:34. Opened log file './obabel_Helium.sdf.log'; Opened input file './obabel_Helium.sdf'; Opened output file './obabel_Helium.sdf.txt'; Opened problem file './obabel_Helium.sdf.prb'; The command line used:; ""./inchi-1 ./obabel_Helium.sdf""; Generating standard InChI; Input format: MOLfile; Output format: Plain text; Full Aux. info; Timeout per structure: 60000 msec; Up to 1024 atoms per structure. Error 71 (no InChI; Error: No V3000 CTAB end marker) inp structure #1.; End of file detected after structure #1. ; Finished processing 1 structure: 1 error, processing time 0:00:00.00; $ cat obabel_Helium.sdf.txt ; * Input_File: ""./obabel_Helium.sdf""; $ ; $ obabel obabel_Helium.sdf -oinchi; InChI=1S/He; 1 molecule converted; $ ; ```. 2) On the other hand, [Marvin](https://marvinjs-demo.chemaxon.com/latest/) describes the same structure without the empty atom block:. ```. Mrv2311 09192409232D . 0 0 0 0 0 999 V3000; M V30 BEGIN CTAB; M V30 COUNTS 1 0 0 0 0; M V30 BEGIN ATOM; M V30 1 He -0.875 1.6667 0 0; M V30 END ATOM; M V30 END CTAB; M END; ```. Bo",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2725:1420,log,log,1420,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2725,1,['log'],['log']
Testability," YES. Build from FastSearch. LINK : fatal error LNK1181: cannot open input file 'obcommon.lib'. Another dependency?. Result:. ------ Build started: Project: OBDLL, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; pointgroup.cpp; ..\..\src\pointgroup.cpp(1087) : warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; phmodel.cpp; patty.cpp; parsmart.cpp; obutil.cpp; obiter.cpp; molchrg.cpp; mol.cpp; kekulize.cpp; griddata.cpp; grid.cpp; generic.cpp; data.cpp; chiral.cpp; chains.cpp; canon.cpp; ..\..\src\canon.cpp(188) : warning C4305: '+=' : truncation from 'double' to 'float'; builder.cpp; bondtyper.cpp; bond.cpp; atom.cpp; Generating Code...; Compiling...; alias.cpp; Generating Code...; Compiling...; typer.cpp; transform.cpp; rotor.cpp; rotamer.cpp; ring.cpp; Generating Code...; Linking...; Creating library ../OBDLL.lib and object ../OBDLL.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDLL\Release\BuildLog.htm""; OBDLL - 0 error(s), 2 warning(s); ------ Build started: Project: OBFPRT, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; forcefielduff.cpp; forcefieldmmff94.cpp; forcefieldghemical.cpp; forcefield.cpp; ..\..\src\forcefield.cpp(1828) : warning C4244: 'argument' : conversion from 'time_t' to 'unsigned int', possible loss of data; finger3.cpp; finger2.cpp; Generating Code...; Linking...; Creating library ../OBFPRT.lib and object ../OBFPRT.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFPRT\Release\BuildLog.htm""; OBFPRT - 0 error(s), 1 warning(s); ------ Build started: Project: FastSearch, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; fingerprintformat.cpp; fastsearchformat.cpp; Generating",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781148:1033,log,log,1033,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781148,1,['log'],['log']
Testability, [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/squareplanartest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereotest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereoperceptiontest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tautomertest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/datatest.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffgaff.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffghemical.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffmmff94.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffuff.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formalcharge.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/format.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formula.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/internalcoord.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmarts.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmiles.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/iterators.o; [ 97%] B,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:53933,test,test,53933,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability, [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereoperceptiontest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tautomertest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/datatest.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffgaff.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffghemical.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffmmff94.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffuff.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formalcharge.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/format.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formula.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/internalcoord.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmarts.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmiles.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/iterators.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/logp_psa.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/math.o; [ 97%] Building CXX ob,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:54085,test,test,54085,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability, [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereotest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereoperceptiontest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tautomertest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/datatest.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffgaff.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffghemical.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffmmff94.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffuff.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formalcharge.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/format.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formula.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/internalcoord.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmarts.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmiles.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/iterators.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/logp_psa.o; [ 97%] Building ,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:54012,test,test,54012,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability," a dependency of a Python package, and even though I install it using `conda`, it tries to upgrade the package when I install my package. IMHO, bumping the version to `3.1.2` would be a good idea.; > ; > Also, maybe `/usr/include/openbabel3` should be set as default in `setup.py`? The newer versions of Ubuntu (22.04, for example) and Arch/Manjaro, all of which compromise a fair amount of Linux users, use this path. If I use `--global-option` to use `-L` and `-I` I can install but I get the warnings:; > ; > ```shell; > WARNING: Implying --no-binary=:all: due to the presence of --build-option / --global-option / --install-option. Consider using --config-settings for more flexibility.; > DEPRECATION: --no-binary currently disables reading from the cache of locally built wheels. In the future --no-binary will not influence the wheel cache. pip 23.1 will enforce this behaviour change. A possible replacement is to use the --no-cache-dir option. You can use the flag --use-feature=no-binary-enable-wheel-cache to test the upcoming behaviour. Discussion can be found at https://github.com/pypa/pip/issues/11453; > Collecting openbabel; > Using cached openbabel-3.1.1.1.tar.gz (82 kB); > Preparing metadata (setup.py) ... done; > Installing collected packages: openbabel; > DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because the '--no-binary' option was enabled for it and this currently disables local wheel building for projects that don't have a 'pyproject.toml' file. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/11451; > ```. This is my experience as well. Openbabel is a dependency of my project. Conda installing all dependencies works until the final ""pip install [my_package]"", as the version installed via conda (3.1.1) does not satisfy requirements according to pip (3.1.1.1). The attempt pip makes to install 3.1.1.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265:1141,test,test,1141,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265,1,['test'],['test']
Testability," and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. I am looking to update a molecule with new internal coordinates, but am running into difficulty with the `InternalToCartesian` function when using the Python interface to OpenBabel. It gives me an error about Type mismatch:. ```; TypeError Traceback (most recent call last); <ipython-input-36-435f8694755f> in <module>; 6 ics = mol.OBMol.GetInternalCoord(); 7 mol.OBMol.SetInternalCoord(ics); ----> 8 InternalToCartesian(ics, mol). TypeError: in method 'InternalToCartesian', argument 1 of type 'std::vector< OpenBabel::OBInternalCoord *,std::allocator< OpenBabel::OBInternalCoord * > > &'; ```. Any thoughts on how to correct or get around this error?. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows Subsystem for Linux (Ubuntu 20.04). ## Expected Behavior; Works the same way as from the C++ interface. Molecule's internal coordinates changed based on new input structure. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. `TypeError` shown above. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```python; from openbabel import pybel, InternalToCartesian. mol = pybel.readstring(""smi"", ""CCCC""); mol.make3D(). ics = mol.OBMol.GetInternalCoord(); mol.OBMol.SetInternalCoord(ics); InternalToCartesian(ics, mol.OBMol); ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2329:1991,test,test,1991,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2329,1,['test'],['test']
Testability," babelconfig.h (if out of date); 0 File(s) copied; Compiling...; transform3d.cpp; ..\..\src\math\transform3d.cpp(58) : warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; transform.cpp; spacegroup.cpp; rotor.cpp; rotamer.cpp; ring.cpp; residue.cpp; rand.cpp; pointgroup.cpp; ..\..\src\pointgroup.cpp(1087) : warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; phmodel.cpp; patty.cpp; parsmart.cpp; obutil.cpp; obiter.cpp; molchrg.cpp; mol.cpp; matrix3x3.cpp; kekulize.cpp; griddata.cpp; grid.cpp; Generating Code...; Compiling...; generic.cpp; descriptor.cpp; data.cpp; chiral.cpp; chains.cpp; canon.cpp; ..\..\src\canon.cpp(188) : warning C4305: '+=' : truncation from 'double' to 'float'; builder.cpp; bondtyper.cpp; bond.cpp; base.cpp; atom.cpp; alias.cpp; Generating Code...; Compiling...; vector3.cpp; typer.cpp; Generating Code...; Linking...; Creating library ../OBDLL.lib and object ../OBDLL.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDLL\Release\BuildLog.htm""; OBDLL - 0 error(s), 3 warning(s); ------ Build started: Project: OBConv, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; format.cpp; Compiling...; obconversion.cpp; Linking...; Creating library ../OBConv.lib and object ../OBConv.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBConv\Release\BuildLog.htm""; OBConv - 0 error(s), 0 warning(s); ------ Build started: Project: OBCommonFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; smilesformat.cpp; pdbformat.cpp; opendxformat.cpp; obmolecformat.cpp; mol2format.cpp; mdlformat.cpp; atomrecord.cpp; APIInterface.cpp; Generating Code...; Linking...; Creating library ../obcommon.lib and object ../obcommon.exp; Embedding manifest...; Build log ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781167:1796,log,log,1796,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781167,1,['log'],['log']
Testability," be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1 + commit 7de27f309db5f7ec026ef5c5235e5b33bf7d1a85; Operating system and version:; Ubuntu 20.10 development release. ## Expected Behavior; Test succeed on arm64 and ppc64el. ## Actual Behavior; ```; Running test/testobconv_writers.py ...; ..........................................................................................F..................................................; ======================================================================; FAIL: test_default (__main__.TestPCJSON); ----------------------------------------------------------------------; Traceback (most recent call last):; File ""test/testobconv_writers.py"", line 2761, in test_default; self.assertWriters(self.fmt, """"""\; File ""test/testobconv_writers.py"", line 258, in assertWriters; test_write_string(self, mol, conv, expected_output, normalize); File ""test/testobconv_writers.py"", line 165, in test_write_string; test_case.assertMultiLineEqual(output.replace(""\r\n"", ""\n""), expected_output.replace(""\r\n"", ""\n"")); AssertionError: '{\n [1926 chars]102014\n ],\n ""y"": [[1070 chars]]\n}' != '{\n [1926 chars]102012\n ],\n ""y"": [[1070 chars]]\n}'; {; ""PC_Compounds"": [; {; ""atoms"": {; ""aids"": [; 1,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""element"": [; 6,; 6,; 6,; 6,; 6,; 6,; 8,; 1,; 1,; 1,; 1,; 1,; 1; ]; },; ""bonds"": {; ""aid1"": [; 1,; 1,; 2,; 3,; 4,; 5,; 6,; 1,; 2,; 3,; 4,; 5,; 7; ],; ""aid2"": [; 6,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""order"": [; 2,; 1,; 2,; 1,; 2,; 1,; 1,; 1,; 1,; 1,; 1,; 1,; 1; ]; },; ""coords"": [; {; ""type"": [; 1; ],; ""aids"": [; 1,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""conformers"": [; {; ""x"": [; 1.5846,; 1.5703,; 2.4295,; 3.3031,; 3.3175,; 0.0,; -1.0005,; 2.313816216007316,; 0.669250157347277,; 2.4146659588503769,; 4.189331679349326,; 4.052466878708012,; - -1.4648575597102014; ? ^; + -1.4648575597102012; ? ^; ],; ""y"": [; 1.5846,; 1.5703,; 2.4295,; 3.3031,",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2246:1009,assert,assertMultiLineEqual,1009,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2246,1,['assert'],['assertMultiLineEqual']
Testability," can convert `[ ]` into `[x]` to check boxes.; -->. - [ x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: Ubuntu 19.04. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Importing openbabel and tensorflow (version 1.13.0) in the same script causes import issues, due to the protobuf library. Tensorflow (1.13.0) depends on protobuf library 3.7.1. Obabel looks for 3.6.1, and does not work with 3.7.1. Thus, to simultaneously use obabel and tensorflow, the tensorflow version must be downgraded to 1.12.0. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>; The use of the protobuf library causes import issues that make things order dependent. For example, if I import openbabel, and then tensorflow (1.13.0) then the tensorflow instance does not work. If I import tensorflow, then openbabel, and then tensorflow again, then things work. I think the easiest fix would be if obabel could be flexible to be upgraded to work with protobuf version 3.7.1. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Conda installed openbabel and tensorflow (on ubuntu). Just used a python script where I tried ""import openbabel"" and ""import tensorflow as tf,"" in various orders (i.e. openbabel first, then tf, tf first, then openbabel, etc.). The issue of the protobuf library comes up when the import is done in certain orders. Downgrading tf to 1.12.0 solves the issue, but just wanted to note this here in case upgrading dependency of the protobuf library to 3.7.1 is an easy fix.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1983:1963,test,test,1963,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1983,1,['test'],['test']
Testability," chemdrawcdx.cpp; ../../include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such . file or directory; chem3dformat.cpp; cccformat.cpp; carformat.cpp; cacheformat.cpp; cacaoformat.cpp; boxformat.cpp; bgfformat.cpp; balstformat.cpp; amberformat.cpp; alchemyformat.cpp; adfformat.cpp; acrformat.cpp; Generating Code...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBMoreFormats\Release\BuildLog.htm""; OBMoreFormats - 1 error(s), 10 warning(s); ========== Build: 0 succeeded, 1 failed, 4 up-to-date, 0 skipped ==========. OBPythonOBF: (skip - requires swig). ------ Build started: Project: OBPythonOBF, Configuration: Release Win32 ------; Running SWIG to generate openbabel-python_wrap.cpp; 'swig' is not recognized as an internal or external command,; operable program or batch file.; Project : error PRJ0019: A tool returned an error code from ""Running SWIG to generate openbabel-python_wrap.cpp""; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBPythonOBF\Release\BuildLog.htm""; OBPythonOBF - 1 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 6 up-to-date, 0 skipped ==========. OBUtilFormats:. ------ Build started: Project: OBUtilFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; titleformat.cpp; reportformat.cpp; povrayformat.cpp; pngformat.cpp; molreport.cpp; copyformat.cpp; Generating Code...; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBUtilFormats\Release\BuildLog.htm""; OBUtilFormats - 0 error(s), 0 warning(s); ========== Build: 1 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. OBXMLFormats:. ------ Build started: Project: OBXMLFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; xmlformat.cpp; xml.cpp; th",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:11508,log,log,11508,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['log'],['log']
Testability," community,; I have a pdbqt (after vina docking) of a +vely charged compound which I'm reducing and converting into mol2 format with gasteiger charges.; But the sum of charges in mol2 files is almost zero, not +1 as expected.; I also tried using --gen3D flag and other charge models e.g. qeq, mmff94 during the conversion but in vain. Some methods give -ve charge! Files are attached (txt extension added) and the command is given below. Can you please suggest if there is a method in babel that can reliably estimate net charges on molecules without manual intervention?; I want this to work since I have a workflow for docking and MD that is working except for the fact that there is no reliable method to estimate net-charge without visual inspection of the structure.; I've manually summed the charges in excel, it is zero, not +1.; Is it possible that I missed something trivial?; Looking forward to valuable suggestions from the community.; thank you and best regards; Dr Vaibhav A. Dixit, Asst. Prof., BITS Pilani, Pilani India.; Email: vaibhav.dixit@pilani.bits-pilani.ac.in; vaibhavadixit@gmail.com. [test.mol2.txt](https://github.com/openbabel/openbabel/files/7070493/test.mol2.txt); [new1.pdb.txt](https://github.com/openbabel/openbabel/files/7070494/new1.pdb.txt). babel test.pdbqt -O test.mol2 -h -m --partialcharge gasteiger --gen3D; WARNING: damped steplength 0.0143888 to 0.00575672; WARNING: damped steplength 0.00447914 to 0.00300176; 9 molecules converted; 9 files output. The first is test1.mol2; 3621 audit log messages 99 debugging messages. Command to print netcharge (uses ""st"" from github).; egrep -A1000 ATOM test1.mol2 | grep -v ROOT | grep LIG | sed -e ""1d"" | awk '{print $9}' | st | awk '{print $4}' | tail -1 | xargs printf ""%1.0f"" && echo """"; -0. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Open Babel 2.3.2 -- Apr 23 2014 -- 21:08:30. Operating system and version:; Linux CentOS 7",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2404:1124,test,test,1124,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404,5,"['log', 'test']","['log', 'test']"
Testability," ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:12147,test,test,12147,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,2,['test'],"['test', 'testkekule']"
Testability," ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:9986,test,test,9986,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,2,['test'],"['test', 'testunique']"
Testability, error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 106: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 107; Start 107: test_smiles_3; --; 107: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 107: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 123; Start 123: test_stereo_6; --; 123: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 123: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 124; Start 124: test_stereoperception_1; --; 124: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 124: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 126; Start 126: test_stereoperception_3; --; 126: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 126: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 148; Start 148: test_tautomer_21; --; 148: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 148: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 165; Start 165: test_maereader_1; --; 165: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 165: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 166; Start 166: test_maereader_2; --; 166: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 166: SUMMARY: UndefinedBehaviorSanitizer: un,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:14815,test,test,14815,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability, error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 165: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 166; Start 166: test_maereader_2; --; 166: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 166: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 173; Start 173: test_cansmi_1; --; 173: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 173: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 174; Start 174: test_charge_mmff94_1; --; 174: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 174: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 175; Start 175: test_charge_gasteiger_1; --; 175: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 175: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 177; Start 177: test_ffgaff_1; --; 177: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 177: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 178; Start 178: test_ffghemical_1; --; 178: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 178: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 179; Start 179: test_ffmmff94_1; --; 179: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 179: SUMMARY: UndefinedBehaviorSanitizer: undef,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:16419,test,test,16419,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability, error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 174: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 175; Start 175: test_charge_gasteiger_1; --; 175: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 175: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 177; Start 177: test_ffgaff_1; --; 177: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 177: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 178; Start 178: test_ffghemical_1; --; 178: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 178: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 179; Start 179: test_ffmmff94_1; --; 179: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 179: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 180; Start 180: test_ffmmff94_2; --; 180: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 180: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 181; Start 181: test_ffmmff94_3; --; 181: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 181: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 182; Start 182: test_ffmmff94_4; --; 182: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 182: SUMMARY: UndefinedBehaviorSanitizer: u,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:17222,test,test,17222,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability, error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 179: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 180; Start 180: test_ffmmff94_2; --; 180: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 180: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 181; Start 181: test_ffmmff94_3; --; 181: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 181: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 182; Start 182: test_ffmmff94_4; --; 182: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 182: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 183; Start 183: test_ffmmff94_5; --; 183: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 183: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 185; Start 185: test_ffuff_1; --; 185: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 185: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 203; Start 203: test_phmodel_1; --; 203: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 203: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 204; Start 204: test_residue_1; --; 204: ../src/residue.cpp:853:13: runtime error: member call on address 0x7fff3b32ed70 which does not point to an object of type 'OpenBabel::OBAtom'; 204: 0x7fff3b32ed70: note: object ,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:18290,test,test,18290,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability," found; -- Looking for time.h; -- Looking for time.h - found; -- Looking for strings.h; -- Looking for strings.h - found; -- Looking for rpc/xdr.h; -- Looking for rpc/xdr.h - not found; -- Looking for regex.h; -- Looking for regex.h - found; -- Looking for C++ include sstream; -- Looking for C++ include sstream - found; -- Looking for rint; -- Looking for rint - not found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - not found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Checking available shared pointer...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Success; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::shared_ptr in memory; -- Found Boost: /usr/include (found version ""1.75.0"") found components: program_options iostreams regex ; -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; -- Found Boost: /usr/include (found version ""1.75.0"") found components: filesystem iostreams unit_test_framework regex ; -- maeparser include dir set as 'maeparser_INCLUDE_DIRS-NOTFOUND'; -- maeparser libraries set as 'maeparser_LIBRARIES-NOTFOUND'; -- Downloaded MaeParser 'v1.2.3' to /home/sagitter/rpmbuild/BUILD/openb",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2406:3506,Test,Test,3506,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406,4,['Test'],['Test']
Testability," https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version:3.1.1; Operating system and version: centos7. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Command: obabel -imol2 mol2/fda370.mol2 -opdbqt -O fda370_3d.pdbqt --gen3D 1 -p 7.4; Generate a reasonable conformation. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Regardless of my efforts, output is a flat structure; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; here is the molecular file; @<TRIPOS>MOLECULE; Sirolimus; 65 68 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 C -2.5493 -4.8694 0.0000 C.3 1 UNL1 0.1741; 2 O -2.0142 -4.2415 0.0000 O.3 1 UNL1 -0.3510; 3 C -1.2029 -4.3909 0.0000 C.3 1 UNL1 0.1455; 4 C -0.6677 -3.7630 0.0000 C.3 1 UNL1 0.0322; 5 C 0.1436 -3.9125 0.0000 C.3 1 UNL1 0.0027; 6 C 0.6787 -3.2846 0.0000 C.3 1 UNL1 0.0037; 7 C 0.4025 -2.5072 0.0000 C.3 1 UNL1 0.0406; 8 C -0.4088 -2.3578 0.0000 C.3 1 UNL1 0.0037; 9 C 0.9377 -1.8793 0.0000 C.3 1 UNL1 0.1761; 10 C 0.6170 -1.0354 0.0000 C.3 1 UNL1 0.1083; 11 C -0.0998 -0.6269 0.0000 C.2 1 UNL1 0.1579; 12 O -0.8516 -0.9666 0.0000 O.2 1 UNL1 -0.2956; 13 C 0.0673 0.1810 0.0000 C.3 1 UN",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2638:1271,test,test,1271,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2638,1,['test'],['test']
Testability, https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichicano.c#L1677; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/graphsym.cpp#L389; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/obconversion.cpp#L302; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/residue.cpp#L853. `ctest` output:. ```; test 5; Start 5: test_align_5; --; 5: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 5: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 17; Start 17: test_builder_1; --; 17: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 17: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 18; Start 18: test_builder_2; --; 18: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 18: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 19; Start 19: test_builder_3; --; 19: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 19: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 21; Start 21: test_builder_5; --; 21: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 21: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 23; Start 23: test_canonconsistent_1; --; 23: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 23: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:2653,test,test,2653,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability," is 1, perform an initialization. For the FPS format, the initialization loads the correct fingerprint type. If it is uninitialized then it will deference an unassigned variable, causing the segfault. I have patched WriteString() and WriteFile(). I will submit a pull request shortly to demonstrate one possible solution. ## Related symptoms. ### issue #1783. Note that this is likely related to issue #1783 . With an un-patched system:; ```; >>> import pybel; >>> pybel.readstring(""smi"", ""c1ccccc1"").write(""fpt""); '>\n'; ```. with my patch in place:; ```; >>> import pybel; >>> print(pybel.readstring(""smi"", ""c1ccccc1"").write(""fpt"")); > 6 bits set; 00000000 00000000 00000000 00000200 00000000 00000000; 00000000 00000000 00000000 00000840 00000000 00008000; 00000000 00000000 00000000 00000000 00000000 00000000; 00000000 00000000 00000000 08000000 00000000 00000000; 00000000 00000000 00000000 00000000 00000000 00020000; 00000000 00000000; ```. The proposed solution in that issue was to enable the 'h' option, which worked because the relevant code sets hexoutput using the following.; ```; if(pConv->IsOption(""h"") || (pConv->GetOutputIndex()==1 && pConv->IsLast())); hexoutput=true;; ```. It may also be related to issue #852 . ### CML output. As another example, the CML output differs between an unpatched system:; ```; >>> print(pybel.readstring(""smi"", ""C"").write(""cml"")); <molecule>; <atomArray>; <atom id=""a1"" elementType=""C""/>; </atomArray>; </molecule>; ```; and a patched system:; ```; >>> print(pybel.readstring(""smi"", ""C"").write(""cml"")); <?xml version=""1.0""?>; <molecule xmlns=""http://www.xml-cml.org/schema"">; <atomArray>; <atom id=""a1"" elementType=""C"" hydrogenCount=""4""/>; </atomArray>; </molecule>; ```; Note the leading XML declaration in the patched version. This is because of the following test in format/xml/cmlformat.cpp :; ```; if(!_pxmlConv->IsOption(""MolsNotStandalone"") && _pxmlConv->GetOutputIndex()==1); ...; xmlTextWriterStartDocument(writer(), NULL, NULL, NULL);; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1922:3637,test,test,3637,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1922,1,['test'],['test']
Testability," newly compiled babel program fails making an index output file as follows. $ babel ten.smi -osf. babel: cannot write output format!. Open Babel 2.2.99 -- Mar 1 2010 -- 15:53:14. Usage: babel [-i<input-type>] <name> [-o<output-type>] <name>. Try -H option for more information. However, it can convert the SMILES file into a SDF file without any problem by “babel -ismi ten.smi -osdf ten.sdf”. Yes, it can write SDF output, but not index.... . Second, during the “make test”, some tests failed as follows:; ; Running tests... Test project path/to/build/openbabel. Start 1: uniqueid_Test. 1/37 Test #1: uniqueid_Test .................... Passed 0.01 sec. Start 2: smiles_Test. 2/37 Test #2: smiles_Test ......................***Exception: SegFault 0.04 sec. Start 3: stereo_Test. 3/37 Test #3: stereo_Test ......................***Exception: SegFault 0.04 sec. Start 4: tetrahedral_Test. 4/37 Test #4: tetrahedral_Test ................. Passed 0.00 sec. Start 5: tetranonplanar_Test. 5/37 Test #5: tetranonplanar_Test .............. Passed 0.00 sec. Start 6: tetraplanar_Test. 6/37 Test #6: tetraplanar_Test ................. Passed 0.00 sec. Start 7: cistrans_Test. 7/37 Test #7: cistrans_Test ....................***Exception: SegFault 0.02 sec. Start 8: stereoperception_Test. 8/37 Test #8: stereoperception_Test ............ Passed 0.03 sec. Start 9: aromatest_Test. 9/37 Test #9: aromatest_Test ...................***Exception: SegFault 0.03 sec. Start 10: atom_Test. 10/37 Test #10: atom_Test ........................ Passed 0.00 sec. Start 11: bond_Test. 11/37 Test #11: bond_Test ........................ Passed 0.00 sec. Start 12: cansmi_Test. 12/37 Test #12: cansmi_Test ...................... Passed 1.27 sec. Start 13: cmlreadfile_Test. 13/37 Test #13: cmlreadfile_Test ................. Passed 0.02 sec. Start 14: conversion_Test. 14/37 Test #14: conversion_Test .................. Passed 0.01 sec. Start 15: datatest_Test. 15/37 Test #15: datatest_Test .................... Passed 0.00 s",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:1222,Test,Test,1222,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability," of Open Babel.; - Noel. On 9 March 2015 at 21:16, yujietia notifications@github.com wrote:. > Cmake Config is like following:; > [image: screen shot 2015-03-09 at 5 14 26 pm]; > https://cloud.githubusercontent.com/assets/10948687/6564526/ceb806b4-c67f-11e4-9833-a2e0e3b744ca.png; > [image: screen shot 2015-03-09 at 5 14 38 pm]; > https://cloud.githubusercontent.com/assets/10948687/6564527/ceb96ec8-c67f-11e4-813a-cfdbbf30bc30.png; > ; > And the Cmake Log is like following:; > Using included inchi library.; > checking for module 'cairo'; > package 'cairo' not found; > Could NOT find Cairo. PNG output will NOT be supported.; > GUI will not be built; > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > Syntax Warning in cmake code at; > ; > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:14; > ; > Argument not separated from preceding token by whitespace.; > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > Syntax Warning in cmake code at; > ; > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; > ; > Argument not separated from preceding token by whitespace.; > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > Syntax Warning in cmake code at; > ; > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; > ; > Argument not separated from preceding token by whitespace.; > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > Syntax Warning in cmake code at; > ; > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:39; > ; > Argument not separated from preceding token by whitespace.; > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/mod",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:1033,test,test,1033,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['test'],['test']
Testability," openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Ubuntu 22.04.1 and CentOS-7. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; In previouslly I download openbabel-3.1.1 version by `apt install openbabel`.; But recently I want to download in server, which I was not a sudoer. So I download `openbabel-3.1.1-source.tar.bz2` on **Releases** and using [Local build](https://open-babel.readthedocs.io/en/latest/Installation/install.html#local-build). I expect that will compile a same executor as I download on `apt install openbabel` which the obminimize can do multithread computation. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; But I get the compile version which only can do the single thread computation. And when I check check the obabel version, I found that it's only 3.1.0. So I download the newest github version (530dbfa333189f4f429bd01a411b866ff5e2efe9) and build it again. The obabel version was right. But still can't do multithread computation. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; when I use compiled obminmize, the cpu utilization was only 100%.; ![image](https://user-images.githubusercontent.com/77485425/195272476-2b7d8cb7-38ab-4502-8317-6494a864ff23.png). when I use the version which install from `apt install openbabel`, I can make all thread of cpu compute.; ![image](https://user-images.githubusercontent.com/77485425/195273703-24d41564-6e68-4e08-a04f-b9413c8fd58e.png)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2541:1902,test,test,1902,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2541,1,['test'],['test']
Testability," plain single lines. The entry in IUPAC's Gold Book[2] with the example about the complex of ammonia and borane however uses the arrow; possibly the delta in the electronegativities in this example is larger, than in your example of the carbene complex. However, Gold Book equally features an entry coordination[2b] with the statement. «The synonym 'dative bond' is obsolete. (The origin of the bonding electrons has by itself no bearing on the character of the bond formed. Thus, the formation of methyl chloride from a methyl cation and a chloride ion involves coordination; the resultant bond obviously differs in no way from the C–Cl bond in methyl chloride formed by any other path, e.g. by colligation of a methyl radical and a chlorine atom.)». which is more similar to your argument ""use a plain line"". I don't know why then IUPAC's Gold Book (still) retains an entry about dative bonds. The test site of ChemDraw JS[3] -- which should be the easiest for the owner to update (once CambridgeSoft -- Brecher's affiliation 2008 -- meanwhile acquired by Perkin), uses dative bonds and again the arrow. A query of PubChem for ZnPc[4] yields a 2D model which does not deploy arrows to the more electropositive metal, but instead dotted lines. It seems to be their pattern adopted, based on the 2018 publication «PubChem chemical structure standardization»[5] by authors involved in PubChem's work (figs 13, 20b, 29b, 29c). Et3N -> BH3: Pauling electronegativity N: 3.04, B: 2.04, delta: 1.00; in case of ZnPc with bonds between Zn and N: Zn: 1.65, delta: 1.39; CuPc Cu: 1.90, delta: 1.50; but; imidazole ./. Pt (your carbene complex) C: 2.55, Pt: 2.28, delta: 0.27; (values by https://en.wikipedia.org/wiki/Electronegativity, version 2023-12-07). [1] Graphical representation standards for chemical structure diagrams (IUPAC Recommendations 2008), https://doi.org/10.1351/pac200880020277; [2] https://goldbook.iupac.org/terms/view/D01523, revision February 24, 2014; [2b] https://goldbook.iupac.org",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2656#issuecomment-1859235613:1387,test,test,1387,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2656#issuecomment-1859235613,1,['test'],['test']
Testability," please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 7. ## Expected Behavior. ""`make install`"" works. ## Actual Behavior. ""`make install`"" sometimes fails with:. ```; make[2]: *** No rule to make target `/software/OpenBabel/3.1.1-iimpi-2020a-Python-3.8.2/lib/libmaeparser.so', needed by `lib/libopenbabel.so.7.0.0'. Stop; ```. This issue isn't always reproducible, it's not clear to me yet why it doesn't happen consistently... ## Steps to Reproduce. ```; mkdir /tmp/OpenBabel-3.1.1/build; cd /tmp/OpenBabel-3.1.1/build; cmake -DCMAKE_INSTALL_PREFIX=/software/OpenBabel/3.1.1-iimpi-2020a-Python-3.8.2 -DCMAKE_BUILD_TYPE=Release -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DCMAKE_C_COMPILER='icc' -DCMAKE_C_FLAGS='-O2 -xHost -ftz -fp-speculation=safe -fp-model source -fPIC' -DCMAKE_CXX_COMPILER='icpc' -DCMAKE_CXX_FLAGS='-O2 -xHost -ftz -fp-speculation=safe -fp-model source -fPIC' -DCMAKE_Fortran_COMPILER='ifort' -DCMAKE_Fortran_FLAGS='-O2 -xHost -ftz -fp-speculation=safe -fp-model source -fPIC' -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_FIND_USE_PACKAGE_REGISTRY=FALSE -DBOOST_ROOT=/software/Boost/1.72.0-iimpi-2020a -DBoost_NO_SYSTEM_PATHS=ON -DBoost_INCLUDE_DIR=/software/Boost/1.72.0-iimpi-2020a/include -DBoost_LIBRARY_DIR_RELEASE=/software/Boost/1.72.0-iimpi-2020a/lib -DENABLE_OPENMP=ON -DENABLE_TESTS=ON -DBUILD_GUI=OFF -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON -DPYTHON_INCLUDE_DIR=/software/Python/3.8.2-GCCcore-9.3.0/include/python3.8 -DPYTHON_LIBRARY=/software/Python/3.8.2-GCCcore-9.3.0/lib/libpython3.8.so -DEIGEN3_INCLUDE_DIR='/software/Eigen/3.3.7/include' /tmp/openbabel*. make -j 20; cp lib/_openbabel.so /tmp/openbabel-*/scripts/python/openbabel/; make test; make install; ````",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2443:2364,test,test,2364,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2443,1,['test'],['test']
Testability," post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Gentoo Linux, 5.6.15-gentoo. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Failed 0/8 test programs. 0/34 subtests failed. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Can't call method ""GetMass"" on an undefined value at t/data.t line 21.; t/data.t ........... Dubious, test returned 255 (wstat 65280, 0xff00) ; Failed 1/2 subtests . t/data.t (Wstat: 65280 Tests: 1 Failed: 0); Non-zero exit status: 255; Parse errors: Bad plan. You planned 2 tests but ran 1.; Files=8, Tests=34, 0 wallclock secs ( 0.03 usr 0.01 sys + 0.39 cusr 0.06 csys = 0.49 CPU); Result: FAIL; Failed 1/8 test programs. 0/34 subtests failed. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```; swig -perl5 -c++ -small -O -templatereduce -naturalvar -I/usr/include/openbabel3 -o scrips/perl/openbabel-perl.cpp -outdir scrips/perl scripts/openbabel-perl.i; cd scrips/perl; perl Makefile.PL PREFIX=/usr INSTALLDIRS=vendor INSTALLMAN3DIR=none DESTDIR=/var/tmp/portage/sci-chemistry/openbabel-perl-3.1.1/image INC=-I/usr/include/openbabel3; make -j17 -l4 'OTHERLDFLAGS=-Wl,-O1 -Wl,--as-needed -Wl,--hash-style=gnu; make -j17 -l4 test; ```. The offending line in `scrips/perl/t/data.t` is:; ```; my $mass = $Chemistry::OpenBabel::etab->GetMass",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2247:1395,test,tests,1395,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2247,1,['test'],['tests']
Testability," python xyz2mol_b.py structure.xyz -c -1; The attributed global charge by `-c` is incompatible with bond orders assigned.; ```. Non-integer charges are barred from entry altogether (by `formatter_class=argparse.ArgumentDefaultsHelpFormatter` in line 24, and more importantly, `type=int,` in line 36). ```shell; $ python xyz2mol_b.py structure.xyz -c 0.4; usage: xyz2mol_b.py [-h] [-c int] FILE; xyz2mol_b.py: error: argument -c/--charge: invalid int value: '0.4'; ```. With these elements in place, one can imagine some iterations. A first guess of a shell script for Debian's bash, if one has to check a single .xyz only:. ```shell; for i in {-5..5}; do; echo ""$i""; python ./xyz2mol_b.py ./structure.xyz -c ""$i"" > out_""$i"".sdf; done; ```. which can shortened further as the moderator script contains an adjustable shebang. The analysis could be continued by. ```shell; $ wc -l *.sdf | sort -k 1 -n; 1 out_-1.sdf; 1 out_1.sdf; 1 out_2.sdf; 1 out_-3.sdf; 1 out_3.sdf; 1 out_4.sdf; 1 out_-5.sdf; 1 out_5.sdf; 113 out_0.sdf; 113 out_-2.sdf; 113 out_-4.sdf; 347 total. ```. suggesting the entry of a overall neutral molecule is the fist worth to be inspected closer assuming the structure is about a small molecule with preference for (overall) neutrality, or only small deviations from this state. The approach was not tested to process .xyz of large proteins passing (MALDI) TOF mass spectrometry and the «positives» for the same molecule twice, or even four times negative may be indicative that an automated approach requires supervision and critical inspection. + molecule passing `-c 2`:. ![out_-2](https://github.com/openbabel/openbabel/assets/19709084/a3311e12-0e81-4739-a8c5-03662ea5ea00). + molecule passing `-c 4`. ![out_-4](https://github.com/openbabel/openbabel/assets/19709084/758aa090-2349-4515-8014-6a802d23ab7b). [out_-2.sdf.zip](https://github.com/openbabel/openbabel/files/12467477/out_-2.sdf.zip); [out_-4.sdf.zip](https://github.com/openbabel/openbabel/files/12467478/out_-4.sdf.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697859605:1915,test,tested,1915,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697859605,1,['test'],['tested']
Testability, runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 181: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 182; Start 182: test_ffmmff94_4; --; 182: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 182: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 183; Start 183: test_ffmmff94_5; --; 183: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 183: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 185; Start 185: test_ffuff_1; --; 185: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 185: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 203; Start 203: test_phmodel_1; --; 203: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 203: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 204; Start 204: test_residue_1; --; 204: ../src/residue.cpp:853:13: runtime error: member call on address 0x7fff3b32ed70 which does not point to an object of type 'OpenBabel::OBAtom'; 204: 0x7fff3b32ed70: note: object is of type 'OpenBabel::OBBase'; 204: 00 00 00 00 b0 9e 9e 36 b4 7f 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 204: ^~~~~~~~~~~~~~~~~~~~~~~; 204: vptr for 'OpenBabel::OBBase'; 204: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/residue.cpp:853:13 in ; 204: ../include/openbabel/atom.h:160:45: runtime error: member access within address 0x7fff3b32ed70 which does not point to an object of type 'OpenBabel::OBAtom'; 204: 0x7fff3b32ed70: note: object is of type 'OpenBabel::OBBase'; 204: 00,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:18817,test,test,18817,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability, runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 24: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 25; Start 25: test_canonconsistent_3; --; 25: ../src/graphsym.cpp:389:62: runtime error: signed iteger overflow: 100000000 * 100 cannot be represented in type 'int'; 25: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 27; Start 27: test_canonstable_1; --; 27: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 27: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 43; Start 43: test_cifspacegroup_12; --; 43: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 43: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 55; Start 55: test_graphsym_1; --; 55: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 55: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 57; Start 57: test_graphsym_3; --; 57: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 57: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 59; Start 59: test_graphsym_5; --; 59: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 59: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 60; Start 60: test_gzip_1; --; 60: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/gr,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:4767,test,test,4767,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability," streams which do not appear to translate nicely through; SWIG to Python iterators. Regards,; Noel. [As background, here is the text of an email describing; attempts to get this to work:. Attempt 1 Using Read after ReadFile; =========; from openbabel import *. myfile = ""3d.head.sdf""; obConversion = OBConversion(); obConversion.SetInFormat(""sdf""). mymol = OBMol(); obConversion.ReadFile(mymol,myfile); print mymol.GetMolWt(); print obConversion.Read(mymol); print ""The program segfaults before this line"". Attempt 2 Using Read after ReadString; =========; from openbabel import *. myfilestring = open(""3d.head.sdf"",""r"").read(); obConversion = OBConversion(); obConversion.SetInFormat(""sdf""). mymol = OBMol(); obConversion.ReadString(mymol,myfilestring); print mymol.GetMolWt(); print obConversion.Read(mymol); print ""The program aborts before this line"". >From the python point of view, what is needed is a; function that when; repeatedly called, will return additional molecules.; This doesn't need; to be in the main openbabel library, but can be in the; SWIG wrapper; somewhere. Regards,; Noel. On Wed, 2006-03-15 at 14:18 -0500, Geoffrey Hutchison; wrote:; > On Mar 15, 2006, at 5:18 AM, Noel O'Boyle wrote:; > ; > > It seems that OBConversion.ReadFile(OBMolecule); just reads in the ; > > first; > > molecule, and I cannot see a way of iterating over; the molecules.; > ; > The OBConversion.Read(OBMol) function should continue; to read from ; > the same file. However, since Python and Perl have no; concept of ; > ""streams"", it's not possible to use; OBConversion.Read() to set up the ; > input file or string.; > ; > So something like this (sorry, I haven't written much; Python, so the ; > syntax might be off):; > ; > import openbabel; > ; > mol = openbabel.OBMol(); > conv = openbabel.OBConversion(); > conv.SetInAndOutFormats(""sdf"", ""sdf""); > obConversion.ReadString(mol, ""test.sdf""); > ; > while (obConversion.Read(mol)); > ...; > ; > ; > Cheers,; > -Geoff; ]]. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/525:2181,test,test,2181,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/525,1,['test'],['test']
Testability," supported.; GUI will not be built; CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:14; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:39; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # P",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:1492,test,test,1492,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,1,['test'],['test']
Testability," test 57; Start 57: test_graphsym_3; --; 57: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 57: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 59; Start 59: test_graphsym_5; --; 59: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 59: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 60; Start 60: test_gzip_1; --; 60: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; 60: ../src/obconversion.cpp:302:24: runtime error: load of value 255, which is not a valid value for type 'bool'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 61; Start 61: test_addh_1; --; 61: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 61: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 62; Start 62: test_implicitH_1; --; 62: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 62: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 66; Start 66: test_lssr_4; --; 66: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 66: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 67; Start 67: test_lssr_5; --; 67: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 67: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsy",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:6017,test,test,6017,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability, test/CMakeFiles/test_runner.dir/test_runner.o; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.o; [ 88%] Linking CXX executable ../../bin/obgui; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/buildertest.o; //usr/lib/x86_64-linux-gnu/libharfbuzz.so.0: undefined reference to `FT_Get_Var_Blend_Coordinates'; //usr/lib/x86_64-linux-gnu/libgtk-3.so.0: undefined reference to `g_log_structured_standard'; //usr/lib/x86_64-linux-gnu/libcairo.so.2: undefined reference to `FT_Get_Var_Design_Coordinates'; collect2: error: ld returned 1 exit status; src/GUI/CMakeFiles/obgui.dir/build.make:149: recipe for target 'bin/obgui' failed; make[2]: *** [bin/obgui] Error 1; CMakeFiles/Makefile2:6751: recipe for target 'src/GUI/CMakeFiles/obgui.dir/all' failed; make[1]: *** [src/GUI/CMakeFiles/obgui.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/canonconsistenttest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/canonstabletest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/carspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cifspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cistranstest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/graphsymtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/gziptest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/implicitHtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/lssrtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/isomorphismtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/multicmltest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/regressionstest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/rotortest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/shuffletest.o; [ 91%] Building CXX object test/CMakeFiles/,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:51825,test,test,51825,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability," the CI setup?. ![image](https://user-images.githubusercontent.com/1053245/102149305-682c7200-3e6e-11eb-9010-6b1eb109ab93.png). I started looking into adding this via CI [here](https://github.com/ltalirz/openbabel/tree/add-coverage) but it turns out that when compiling with `-DCMAKE_BUILD_TYPE=Debug` (which I believe is required for accurate coverage results - didn't check, though), the tests take a very long time ([gh actions log](https://github.com/ltalirz/openbabel/runs/1554047342?check_suite_focus=true)).; Even locally on my computer (which is ~4x faster than the github actions runner), there is still a test that exceeds the 1500s limit; ```; 210/222 Test #210: test_cmlreadfile_1 ............... Passed 0.81 sec; Start 211: inchiSamples.sdf_Test; 211/222 Test #211: inchiSamples.sdf_Test ............ Passed 2.17 sec; Start 212: inchiSamplesTechMan.sdf_Test; 212/222 Test #212: inchiSamplesTechMan.sdf_Test ..... Passed 0.99 sec; Start 213: inchiSteffen_PubChem.smi_Test; 213/222 Test #213: inchiSteffen_PubChem.smi_Test .... Passed 0.89 sec; Start 214: pytest_babel; 214/222 Test #214: pytest_babel ..................... Passed 94.96 sec; Start 215: pytest_sym; 215/222 Test #215: pytest_sym ....................... Passed 116.05 sec; Start 216: pytest_smartssym; 216/222 Test #216: pytest_smartssym ................. Passed 35.42 sec; Start 217: pytest_fastsearch; 217/222 Test #217: pytest_fastsearch ................ Passed 2.64 sec; Start 218: pytest_distgeom; 218/222 Test #218: pytest_distgeom ..................***Timeout 1500.09 sec; Start 219: pytest_unique; 219/222 Test #219: pytest_unique .................... Passed 8.13 sec; Start 220: pytest_kekule; 220/222 Test #220: pytest_kekule .................... Passed 19.51 sec; Start 221: pytest_pdbformat; 221/222 Test #221: pytest_pdbformat ................. Passed 1.04 sec; Start 222: pytest_RInChI; 222/222 Test #222: pytest_RInChI .................... Passed 34.85 sec; ```. This would make the coverage job very long-run",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2312:1193,Test,Test,1193,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2312,1,['Test'],['Test']
Testability," to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; command line syntax: ; ```; cmake .. \; 	-DCMAKE_PREFIX_PATH=$BOOST_PATH \; 	-DCMAKE_INSTALL_PREFIX=$OPENBABEL_CMAKE_PREFIX \; 	-DZLIB_ROOT=$ZLIB_PATH \; 	-DBUILD_SHARED=OFF \; make -j4; ```; Errors; ```; ---------------------------------------------------------------; [ 77%] Linking CXX static library libopenbabel.a; [ 77%] Built target openbabel; Scanning dependencies of target obabel; Scanning dependencies of target roundtrip; [ 78%] Building CXX object tools/CMakeFiles/obabel.dir/obabel.cpp.o; [ 78%] Building CXX object test/CMakeFiles/roundtrip.dir/roundtrip.cpp.o; Scanning dependencies of target test_runner; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aligntest.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aliastest.cpp.o; [ 79%] Linking CXX executable ../bin/roundtrip; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/roundtrip.dir/build.make:89: bin/roundtrip] Error 1; make[1]: *** [CMakeFiles/Makefile2:1138: test/CMakeFiles/roundtrip.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 80%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; [ 80%] Linking CXX executable ../bin/obabel; /usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/8/libstdc++.a(eh_globals.o): undefined reference to symbol '__tls_get_addr@@GLIBC_2.3'; /usr/bin/ld: //lib/x86_64-linux-gnu/ld-linux-x86-64.so.2: error adding symbols: DSO missing from command line; collect2: error: ld returned 1 exit status; make[2]: *** [tools/CMakeFiles/obabel.dir/build.make",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2377:2423,test,test,2423,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377,1,['test'],['test']
Testability," to save the streams. By not keeping pointers to the provided streams, the possibility of a use after free error goes away. The constructor, SetInStream/SetOutStream, ReadFile/WriteFile, and Read/Write functions can still be used to set persistent streams. Internally, SetInStream/SetOutStream are used to setup/teardown streams, as opposed to the previous approach which was to duplicate (slightly different) blocks of code everywhere this happened (for instance, to check for gzip, set NeedToFree, etc). OBConversion keeps track of what streams it owns the memory to. SetInStream(NULL) or SetOutStream(NULL) will take care of cleaning up the current stream. The semantics of the copy constructor have been refined and an assignment operator added. Previously the state was just copied resulting in two objects that both thought they owned the same memory and had to delete it. This only worked because of the implicit assumption that OBConversions were only copied to create AuxConv objects for XML parsing (why these need to be subclasses, I know not) and there's special logic to avoid duplicate deletions in this case. Now the semantics are that only the originating OBConversion retains ownership of any memory it allocated. This eliminates the possibility of a free-after-free, but not a use-after-free (the copy constructor just shouldn't be used). ReadFile/WriteFile will now extract the format from the filename if the format is not already set. This includes setting the gzip status of the file. I've also added a convenience constructor to OBConversion that takes filenames. This removes a lot of the boilerplate required for doing simple tasks. For example:. OBMol mol;; OBConversion conv(infile);; while(conv.Read(&mol)) {; //do stuff; }. Gzip support has been improved to work properly on files that are concatenations of gzip files (this is suppose to be a valid thing to do). The XML reader would return true to ReadMolecule even if it hadn't read a molecule in a multi-molecule file ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/191:4048,log,logic,4048,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/191,1,['log'],['logic']
Testability," version: Rocky Linux 8.6. ## Expected Behavior; Those tests should be fast. ## Actual Behavior; It gets stuck in the tests in 3 of our supercomputers. ```; Test project /dev/shm/strube1/juwels/OpenBabel/3.1.1/gompi-2022a/easybuild_obj; Start 1: test_align_1; 1/229 Test #1: test_align_1 ..................... Passed 0.05 sec; Start 2: test_align_2; 2/229 Test #2: test_align_2 ..................... Passed 0.06 sec; Start 3: test_align_3; 3/229 Test #3: test_align_3 ..................... Passed 0.05 sec; Start 4: test_align_4; 4/229 Test #4: test_align_4 ..................... Passed 0.68 sec; Start 5: test_align_5; 5/229 Test #5: test_align_5 ..................... Passed 0.16 sec; Start 6: test_alias_1; 6/229 Test #6: test_alias_1 ..................... Passed 0.11 sec; Start 7: test_automorphism_1; 7/229 Test #7: test_automorphism_1 .............. Passed 0.08 sec; Start 8: test_automorphism_2; 8/229 Test #8: test_automorphism_2 .............. Passed 0.08 sec; Start 9: test_automorphism_3; 9/229 Test #9: test_automorphism_3 .............. Passed 0.08 sec; Start 10: test_automorphism_4; 10/229 Test #10: test_automorphism_4 .............. Passed 0.08 sec; Start 11: test_automorphism_5; 11/229 Test #11: test_automorphism_5 .............. Passed 0.10 sec; Start 12: test_automorphism_6; 12/229 Test #12: test_automorphism_6 .............. Passed 0.08 sec; Start 13: test_automorphism_7; 13/229 Test #13: test_automorphism_7 .............. Passed 0.08 sec; Start 14: test_automorphism_8; 14/229 Test #14: test_automorphism_8 .............. Passed 0.08 sec; Start 15: test_automorphism_9; 15/229 Test #15: test_automorphism_9 .............. Passed 0.10 sec; Start 16: test_automorphism_10; 16/229 Tes; ```. And it stays there forever. ## Steps to Reproduce; Install it with EasyBuild, with GCC 11.3.0 and OpenMPI 4.1.4. The other dependencies used are:. ```; >> * CMake/3.23.1; >> * SWIG/.4.0.2; >> * Python/3.10.4; >> * zlib/.1.2.12; >> * libxml2/.2.9.13; >> * Eigen/3.4.0; >> * RapidJSON/",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2557:1082,Test,Test,1082,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2557,1,['Test'],['Test']
Testability," warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:8437,test,test,8437,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,2,['test'],"['test', 'testfastsearch']"
Testability,"""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > ; > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > ; > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_r",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:16141,test,test,16141,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,2,['test'],"['test', 'testbindings']"
Testability,"""int charge = 0;"" perhaps? Is there some reason the BIG_ENDIAN test was removed?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/330#issuecomment-234736238:63,test,test,63,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/330#issuecomment-234736238,1,['test'],['test']
Testability,"# Context; I need to convert thousands of SMILES into SDF file using pybel via python scripts (several code lines below).; ```; for ind, row in df.iterrows():; df.loc[ind, 'ROMol'] = pybel.readstring(""smi"", row[args.smi_column]); df.loc[ind, 'ROMol'].make3D(steps=args.pybel_steps); ```. During the progress, I observe a lot of warning/errors messages directly shown on my terminal although pybel returns a full list of converted molecules. For examples,; ```; *** Open Babel Warning in CorrectStereoAtoms; Could not correct 3 stereocenter(s) in this molecule (); with Atom Ids as follows: 9 12 16; ==============================; *** Open Babel Warning in CorrectStereoAtoms; Could not correct 3 stereocenter(s) in this molecule (); with Atom Ids as follows: 2 3 14; ```. # Problem; I would like to further investigate pybel warnings/errors in order to fix my converted molecules if needed. In the initial stages, I have to capture or redirect them with inputted SMILES into a log file. However, I have not found any approaches to overcome the issue. . Please help me to solve this. Thank you very much. **Additional context**; I have conducted a research, however I have not reach solutions. Please help me to do this.; There are some links:; [redirect-logs-to-file-in-pybel](https://stackoverflow.com/questions/50978464/redirect-logs-to-file-in-pybel); [can-i-capture-warning-messages-during-format-conversion-in-pybel](https://stackoverflow.com/questions/54047085/can-i-capture-warning-messages-during-format-conversion-in-pybel); [how-to-disable-logged-warnings-in-pybel](https://stackoverflow.com/questions/50419371/how-to-disable-logged-warnings-in-pybel)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2728:978,log,log,978,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2728,5,['log'],"['log', 'logged-warnings-in-pybel', 'logs-to-file-in-pybel']"
Testability,## Beep boop. Your images are optimized!. Your image file size has been reduced by **16%** 🎉. <details>; <summary>; Details; </summary>. | File | Before | After | Percent reduction |; |:--|:--|:--|:--|; | /data/splash.png | 52.43kb | 40.58kb | 22.60% |; | /doc/splash.png | 52.43kb | 40.58kb | 22.60% |; | /test/files/aromatics.png | 276.60kb | 217.29kb | 21.44% |; | /test/files/alias.png | 13.95kb | 11.22kb | 19.56% |; | /doc/images/rmsdconformerscore.png | 44.32kb | 38.06kb | 14.13% |; | /doc/images/spectrophore_cage.png | 36.35kb | 32.53kb | 10.52% |; | /doc/images/tetraplanar.png | 24.58kb | 22.22kb | 9.59% |; | /doc/images/tetrahedral.png | 14.24kb | 12.91kb | 9.34% |; | /doc/images/cistrans.png | 7.30kb | 6.71kb | 8.12% |; | /doc/images/squareplanar.png | 8.55kb | 7.89kb | 7.71% |; | /doc/images/tetranonplanar.png | 47.94kb | 44.66kb | 6.84% |; | /doc/images/SPshapes.png | 57.16kb | 53.47kb | 6.45% |; | /doc/images/energyconformerscore.png | 31.76kb | 30.00kb | 5.54% |; | /doc/images/gettransref.png | 1.30kb | 1.23kb | 5.54% |; | /doc/images/getcisref.png | 1.27kb | 1.22kb | 3.78% |; | | | | |; | **Total :** | **670.15kb** | **560.54kb** | **16.36%** |; </details>. ---. **Black Lives Matter** | [💰 donate](https://blm-bookmarks.carrd.co/#donate) | [🎓 learn](https://blm-bookmarks.carrd.co/#learn) | [✍🏾 sign](https://blm-bookmarks.carrd.co/#sign). [📝 docs](https://imgbot.net/docs) | [:octocat: repo](https://github.com/dabutvin/ImgBot) | [🙋🏾 issues](https://github.com/dabutvin/ImgBot/issues) | [🏅 swag](https://goo.gl/forms/1GX7wlhGEX8nkhGO2) | [🏪 marketplace](https://github.com/marketplace/imgbot),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2345:307,test,test,307,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2345,2,['test'],['test']
Testability,"## Environment Information. Open Babel version: 3.1.1, though possibly irrelevant here; Operating system and version: Linux Debian 12/bookworm (branch testing), though possibly irrelevant here. ## Expected Behavior. While correcting the documentation (completion of an output option, see https://github.com/openbabel/openbabel/pull/2565) outside fenced code was anticipated to pass the subsequent rebuild and automated tests. ## Actual Behavior. Both `Build SWIG bindings / Linux SWIG All Bindings (pull_request)` as well as test `lint_python / lint_python (pull_request)` fail. What is puzzling to me, the file altered is not even a .py, but a .cpp. For the an untrained eye (no working knowledge in any of the (C/C++/C#) family), I do not identify my error which now suddenly breaks Python's action here. ## Steps to Reproduce. In file `src/formats/povrayformat.cpp`, the string . ```; obabel -:\""CC(=O)Cl acid chloride\"" --gen3d -O chloride.pov -xc -xf -xs -m SPF\n\n""; ```. was substituted by . ```; obabel -:\""CC(=O)Cl acid chloride\"" --gen3d -O chloride.pov -xc -xf -xs -xm SPF\n\n""; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2566:151,test,testing,151,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2566,3,['test'],"['test', 'testing', 'tests']"
Testability,"## Environment Information. Open Babel version: ; [latest master commit](https://github.com/openbabel/openbabel/tree/32cf131444c1555c749b356dab44fb9fe275271f). Operating system and version:; Distributor ID: Ubuntu; Description: Ubuntu 22.04.3 LTS; Release: 22.04; Codename: jammy. ## Expected Behavior. All tests should pass on a clean build. ## Actual Behavior. pytest_babel fails. ## Steps to Reproduce. Build a clean project; ```sh; mkdir build; cd build; cmake ..; make -j2; ```; ## Suspected Problem. Looks like the issue is a obrms is missing on line 54 in [tools/CMakeLists.txt](https://github.com/openbabel/openbabel/blob/32cf131444c1555c749b356dab44fb9fe275271f/tools/CMakeLists.txt#L54). When I add obrms to that line all my tests pass. ## Errors from failing tests. ```sh; Test project /home/jfkonecn/repos/openbabel/build; Start 212: pytest_babel; 1/1 Test #212: pytest_babel .....................***Failed Error regular expression found in output. Regex=[ERROR] 1.16 sec; /home/jfkonecn/repos/openbabel/scripts/python:/home/jfkonecn/repos/openbabel/build/lib; .......E/usr/lib/python3.10/subprocess.py:955: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used; self.stdin = io.open(p2cwrite, 'wb', bufsize); /usr/lib/python3.10/subprocess.py:961: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used; self.stdout = io.open(c2pread, 'rb', bufsize); /usr/lib/python3.10/subprocess.py:966: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used; self.stderr = io.open(errread, 'rb', bufsize); ........; ======================================================================; ERROR: testOBRMS (__main__.TestOBabel); Sanity checks for obrms; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/home/jfkonecn/repos/openbabel/test/testbabel.py"", line ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2662:307,test,tests,307,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2662,5,"['Test', 'test']","['Test', 'tests']"
Testability,"## Environment Information; Open Babel 3.1.0; Linux, Ubuntu 20.04.4 LTS. ## Expected Behavior; I wanted to perform forcefield calculations using partial charges from a file. ## Actual Behavior. 1.When I try to use a specific model for the partial charges, they are printed out but not used in the calculation as it still states that it used the default partial charges and obtained the same energy as a calculation without the --partialcharge option; I tried this command:; ```; obabel struc.xyz -otxt --energy --ff gaff --partialcharge eem --print --log ; ```; In the file ""output"" you can see what is printed on my console after this command.; I also attached a neutral example structure called ""struc.xyz"" on which I performed the calculations. 2. I want to use partial charges that I obtained from an xtb calculation. I wrote these charges in the file ""pc"", I tried to use the format as stated by obabel. I tried this command:; ``` ; obabel struc.xyz -otxt --energy --ff gaff --partialcharge fromfile:./pc --print --log; ``` ; The following error occurs:. "" ... *** Open Babel Error in ComputeCharges; Charge mapping for atom # 1 (OXT) not found ... "" . The whole printout can be found in the file ""error"". ## Steps to Reproduce; The above-mentioned files can be found in example.tar . Thank you very much in advance!; Benedikt; [example.zip](https://github.com/openbabel/openbabel/files/8893033/example.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2496:551,log,log,551,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2496,2,['log'],['log']
Testability,"## Environment Information; Open Babel version: 2.4.1 with Python 3.7.9; Operating system and version: Ubuntu 20.04.4 LTS. ## Expected Behavior; Peptide structure prediction. ## Actual Behavior; SystematicRotorSearch briefly allocates more and more RAM until overflow (tested on a machine with 32 GB RAM).; RandomRotorSearch works fine alike the other methods, too. Maybe SystematicRotorSearch needs a lot of memory, but comparing to all other methods this looked odd for me. ## Steps to Reproduce; An arbitrary PDB file is needed. ; `ob_ff = openbabel.OBForceField.FindForceField(""gaff""). ob_conv = openbabel.OBConversion() # conversion object; ob_mol = openbabel.OBMol() # molecule; ob_conv.ReadFile(ob_mol, pdb_path). ob_ff.Setup(ob_mol); ob_ff.SystematicRotorSearch(10)`",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2498:269,test,tested,269,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2498,1,['test'],['tested']
Testability,"## Environment Information; Open Babel version: 3.1.0. ## Expected Behavior; I have a selection of conformers of the same molecule. I want to collect all of the torsions in one file for comparison purposes. This should be easily done using the report file type. ## Actual Behavior; However, the list of torsions that are generated in this format vary from conformer to conformer, which makes it quite a bit more difficult. . I have attached the reports for three of the conformers for a small molecule to illustrate that the torsion list is different.; [CCB-CH2CN_1.txt](https://github.com/openbabel/openbabel/files/13367470/CCB-CH2CN_1.txt); [CCB-CH2CN_2.txt](https://github.com/openbabel/openbabel/files/13367471/CCB-CH2CN_2.txt); [CCB-CH2CN_3.txt](https://github.com/openbabel/openbabel/files/13367472/CCB-CH2CN_3.txt). ## Steps to Reproduce. I am simply using the basic convert feature to convert Gaussian job log files to report files. Input log files are attached below.; [CCB-CH2CN_1.log](https://github.com/openbabel/openbabel/files/13367504/CCB-CH2CN_1.log); [CCB-CH2CN_2.log](https://github.com/openbabel/openbabel/files/13367505/CCB-CH2CN_2.log); [CCB-CH2CN_3.log](https://github.com/openbabel/openbabel/files/13367506/CCB-CH2CN_3.log)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2644:914,log,log,914,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2644,8,['log'],['log']
Testability,"## Environment Information; Open Babel version: 3.1.0; Operating system and version: Win11, Python 3.12.4, Autodock4. ## Expected Behavior; I am trying to do Covalent Docking with Autodock4, I downloaded the script from the Scripps site and I'm testing the program with the examples provided by them. The output should be a file containing the protein with the covalent ligand docked. ## Actual Behavior; After initial difficulties in installing Openbabel and PythonBindings, the first errors appeared to be in the syntax of the files prepareCovalent.py, CopyMol.py and ResidueProfiler.py. After editing them I managed to make the script working (corrected files attached), but this messages appeared:. first:. > C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent> python prepareCovalent.py --ligand ligand1.mol2 --ligindices 24,25 --receptor 3upo_protein.pdb --residue B:SER222 --outputfile ligcovalent.pdb; > ; > --- Open Babel Warning in OpenBabel::OBGlobalDataBase::Init; > Unable to open data file 'space-groups.txt'; > ; > --- Open Babel Warning in OpenBabel::OBGlobalDataBase::Init; > Cannot initialize database 'space-groups.txt' which may cause further errors.; > Processing residue B:SER222; > [start] output filename is: ligcovalent.pdb; > Traceback (most recent call last):; > File ""C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\prepareCovalent.py"", line 1319, in <module>; > x = CovalentDockingMaster(); > ^^^^^^^^^^^^^^^^^^^^^^^; > File ""C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\prepareCovalent.py"", line 871, in __init__; > self.start(); > File ""C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\prepareCovalent.py"", line 1262, in start; > self.processResidues(); > File ""C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\prepareCovalent.py"", line 1298, in processResidues; > aligner = self.x = CovalentDockingMaker(**self.alignerArgs); > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; > File ""C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2714:245,test,testing,245,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2714,1,['test'],['testing']
Testability,"## Environment Information; Open Babel version: 3.1.1; Operating system and version: Rocky Linux 8.5. ## Expected Behavior; No failed Testcases. ## Actual Behavior; 1 failed testcase. ctest --rerun-failed --output-on-failure; Test project /$PATH/openbabel-3.1.1/build; Start 211: pytest_distgeom; 1/1 Test #211: pytest_distgeom ..................***Failed 0.15 sec; /$PATH/openbabel-3.1.1/scripts/python:/$PATH/openbabel-3.1.1/build/lib; File ""/$PATH/openbabel-3.1.1/test/testdistgeom.py"", line 45; 'Clc1cccc(Cl)c1\C=N\NC(=O)c1cccs1',; ^; SyntaxError: (unicode error) 'unicodeescape' codec can't decode bytes in position 18-19: malformed \N character escape. CMake Error at pytest_distgeom.cmake:20 (MESSAGE):; 1. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 0.58 sec. The following tests FAILED:; 	211 - pytest_distgeom (Failed); Errors while running CTest. ## Steps to Reproduce; mkdir build; cd build; cmake ..; make -j8; make test; ctest --rerun-failed --output-on-failure",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2578:134,Test,Testcases,134,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2578,11,"['Test', 'test']","['Test', 'Testcases', 'test', 'testcase', 'testdistgeom', 'tests']"
Testability,"## Environment Information; Open Babel version: 3.1.1; Operating system and version: Rocky Linux 8.6. ## Expected Behavior; Those tests should be fast. ## Actual Behavior; It gets stuck in the tests in 3 of our supercomputers. ```; Test project /dev/shm/strube1/juwels/OpenBabel/3.1.1/gompi-2022a/easybuild_obj; Start 1: test_align_1; 1/229 Test #1: test_align_1 ..................... Passed 0.05 sec; Start 2: test_align_2; 2/229 Test #2: test_align_2 ..................... Passed 0.06 sec; Start 3: test_align_3; 3/229 Test #3: test_align_3 ..................... Passed 0.05 sec; Start 4: test_align_4; 4/229 Test #4: test_align_4 ..................... Passed 0.68 sec; Start 5: test_align_5; 5/229 Test #5: test_align_5 ..................... Passed 0.16 sec; Start 6: test_alias_1; 6/229 Test #6: test_alias_1 ..................... Passed 0.11 sec; Start 7: test_automorphism_1; 7/229 Test #7: test_automorphism_1 .............. Passed 0.08 sec; Start 8: test_automorphism_2; 8/229 Test #8: test_automorphism_2 .............. Passed 0.08 sec; Start 9: test_automorphism_3; 9/229 Test #9: test_automorphism_3 .............. Passed 0.08 sec; Start 10: test_automorphism_4; 10/229 Test #10: test_automorphism_4 .............. Passed 0.08 sec; Start 11: test_automorphism_5; 11/229 Test #11: test_automorphism_5 .............. Passed 0.10 sec; Start 12: test_automorphism_6; 12/229 Test #12: test_automorphism_6 .............. Passed 0.08 sec; Start 13: test_automorphism_7; 13/229 Test #13: test_automorphism_7 .............. Passed 0.08 sec; Start 14: test_automorphism_8; 14/229 Test #14: test_automorphism_8 .............. Passed 0.08 sec; Start 15: test_automorphism_9; 15/229 Test #15: test_automorphism_9 .............. Passed 0.10 sec; Start 16: test_automorphism_10; 16/229 Tes; ```. And it stays there forever. ## Steps to Reproduce; Install it with EasyBuild, with GCC 11.3.0 and OpenMPI 4.1.4. The other dependencies used are:. ```; >> * CMake/3.23.1; >> * SWIG/.4.0.2; >> * Python/3.10.4; ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2557:130,test,tests,130,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2557,11,"['Test', 'test']","['Test', 'tests']"
Testability,"## Environment Information; Open Babel version: 3.1.1; Operating system and version: WSL & Conda, Python 3.9. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Molecule with correct PDB output. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->The PDB is outputting amino acids instead for the Methotrexate canonical smile that I tested. I have come across a similar problem too in docking. When using a ""BEN"" in the name column of the ligand pdb the docking software turned it into a benzene. Here it's similarly assigning amino acids to atoms where it should not. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior. -->; First (canonical) SMILE is methothrexate, taken from PUBCHEM. Does not work. Second one Ivermectin, also does not work. Third one is Ibuprofen, seems to work fine. So it's either on my end or on obabel's.; ```; from openbabel import openbabel as ob; from openbabel import pybel. smiles =""CN(CC1=CN=C2C(=N1)C(=NC(=N2)N)N)C3=CC=C(C=C3)C(=O)NC(CCC(=O)O)C(=O)O""; smiles=""CCC(C)C1C(CCC2(O1)CC3CC(O2)CC=C(C(C(C=CC=C4COC5C4(C(C=C(C5O)C)C(=O)O3)O)C)OC6CC(C(C(O6)C)OC7CC(C(C(O7)C)O)OC)OC)C)C""; smiles=""CC(C)CC1=CC=C(C=C1)C(C)C(=O)O""; mol = pybel.readstring(""can"", smiles); mol.addh(); mol.make3D(); mol = mol.OBMol. cs_obj = ob.OBConformerSearch(); cs_obj.Setup(mol, 5, 5, 5, 25) ; score = ob.OBMinimizingEnergyConformerScore() ; cs_obj.SetScore(score); cs_obj.Search(); mol.DeleteNonPolarHydrogens(). molecule = pybel.Molecule(mol); print(pybel.informats); molecule.write(""pdb"", ""x.pdb"", overwrite=True); ```. ![image](https://user-images.githubusercontent.com/20364007/105250",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2318:516,test,tested,516,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2318,2,['test'],"['test', 'tested']"
Testability,"## Environment Information; Open Babel version: 7acf50c9d73f8016e15eb2a45ce74c8909152883; Operating system and version: EndeavourOS. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. No build failure. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. Intel classic compilers, icc and icpc, are deprecated and removed, and now LLVM compilers, icx and icpx, are provided. Their compiler ID is IntelLLVM and thus matches Intel. https://github.com/openbabel/openbabel/blob/7acf50c9d73f8016e15eb2a45ce74c8909152883/CMakeLists.txt#L325; https://github.com/openbabel/openbabel/blob/7acf50c9d73f8016e15eb2a45ce74c8909152883/CMakeLists.txt#L350-L351. However, `-ipo` of IntelLLVM compilers accepts no parameter, resulting in compilation error: `icpx: error: unknown argument: '-ipo1'`. Also, `-Wl,-s` should be set for `CMAKE_EXE_LINKER_FLAGS_RELEASE` instead. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```shellsession; $ CC=icx CXX=icpx cmake -D CMAKE_BUILD_TYPE=Release -S . -B build; $ cmake --build build; [ 1%] Built target data_headers; [ 1%] Building CXX object src/CMakeFiles/openbabel.dir/alias.cpp.o; icpx: error: unknown argument: '-ipo1'; icpx: warning: -Wl,-s: 'linker' input unused [-Wunused-command-line-argument]; make[2]: *** [src/CMakeFiles/openbabel.dir/build.make:76: src/CMakeFiles/openbabel.dir/alias.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:1361: src/CMakeFiles/openbabel.dir/all] Error 2; make: *** [Makefile:146: all] Error 2; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2715:1218,test,test,1218,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2715,1,['test'],['test']
Testability,"## Environment Information; Open Babel version:3.1.1; Operating system and version: 5.15.0-121-generic Ubuntu ; I have compiled . ## Expected Behavior; The problem is related to the option ""-ag"" in writing cif mentioned in [here](https://openbabel.org/docs/FileFormats/Crystallographic_Information_File.html). `obabel -ag -i xyz test.xyz -ocif -O test.cif `. The command should add the bonds to the ciff file. I tested the GUI, and it works, but in the command line, it doesn't work. ## Actual Behavior; Supposed: return the CIF file with bonds; Actual: CIF file without bonds. ## Steps to Reproduce; I test to convert files in different formats such as XYZ, POSCAR, CML, etc. The CIF is created, but the Bonds are not in it.; 1- Create a molecule as test.xyz. > 3; > ; > O 0.901246 0.031077 -0.000001; > H 1.611523 -0.189440 0.591081; > H 1.187665 0.709689 -0.599959. 2-Use the command above or :. `obabel -i xyz test.xyz -ocif -ag -O test.cif `. 3- Check the test.cif file and it should be like the following :. > # CIF file generated by openbabel 3.1.1, see https://openbabel.org; > data_I; > _chemical_name_common 'XYZ file generated by Avogadro.'; > loop_; > _atom_site_label; > _atom_site_type_symbol; > _atom_site_fract_x; > _atom_site_fract_y; > _atom_site_fract_z; > _atom_site_occupancy; > O0 O 0.90125 0.03108 -0.00000 1.000; > H1 H 1.61152 -0.18944 0.59108 1.000; > H2 H 1.18767 0.70969 -0.59996 1.000; > loop_; > _geom_bond_atom_site_label_1; > _geom_bond_atom_site_label_2; > _geom_bond_distance; > _geom_bond_site_symmetry_2; > _ccdc_geom_bond_type; > H2 O0 0.95000 . S; > O0 H1 0.94999 . S",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2726:329,test,test,329,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2726,8,['test'],"['test', 'tested']"
Testability,"## Environment Information; Open Babel version:3.1.1; Operating system and version:; CentOS Linux 7.0. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I expected that all bond types are same between SDF and MOL2. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I attached the PNG file below. ; In SDF, highlighted carbon has 4 connectivities, whereas it has 5 connectivities in MOL2. . ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; First of all, I downloaded MYU from RCSB through command ""wget https://files.rcsb.org/ligands/view/MYU_ideal.sdf"".; Secondly, I transformed it into MOL2 through command ""obabel -isdf MYU_ideal.sdf -omol2 -O test.mol2"". . ![sdf_mol2](https://user-images.githubusercontent.com/19364283/136455885-f556c99e-bab0-4cd7-a6c9-e67625521f0e.png)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2415:756,test,test,756,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2415,2,['test'],['test']
Testability,"## Environment Information; Operating system and version: Ubuntu 20.04. I am trying to build openbabel from source.; I installed swig, eigen and zlib.; I am running CMake 3.20.5; I cloned the repo, configured with:; `cmake .. -DRUN_SWIG=ON -DPYTHON_BINDINGS=ON`; built, and installed. It passed most tests. ; The problem arises when importing the package with cmake (if you're reading this because you're building gnina, use `make -DWITH_MAEPARSER=OFF -DWITH_COORDGEN=OFF -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON ..` to bypass this issue):; `find_package(OpenBabel3 REQUIRED)`. This results in the following message:; `; CMake Error at CMakeLists.txt:68 (find_package):; Found package configuration file:. /usr/local/lib/cmake/openbabel3/OpenBabel3Config.cmake. but it set OpenBabel3_FOUND to FALSE so package ""OpenBabel3"" is considered; to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing: maeparser; coordgen; `. in /usr/local/lib, I can see libmaeparser.so and libcoordgen.so. Possibly relevant lines from cmake output:; `; -- Found Boost: /usr/lib/x86_64-linux-gnu/cmake/Boost-1.71.0/BoostConfig.cmake (found version ""1.71.0"") found components: program_options iostreams ; -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; -- Found Boost: /usr/lib/x86_64-linux-gnu/cmake/Boost-1.71.0/BoostConfig.cmake (found version ""1.71.0"") found components: filesystem iostreams unit_test_framework ; -- maeparser include dir set as 'maeparser_INCLUDE_DIRS-NOTFOUND'; -- maeparser libraries set as 'maeparser_LIBRARIES-NOTFOUND'; -- Building existing MaeParser 'v1.2.3' source at /media/chedat/exchg/ligands/gnina/from_source/openbabel/external/maeparser-v1.2.3.; -- Found Boost: /usr/lib/x86_64-linux-gnu/cmake/Boost-1.71.0/BoostConfig.cmake (found version ""1.71.0"") found components: iostreams ; -- Using zlib library for iostreams dependency.; -- Maestro formats will be supported. Using MaeParser 'v1.2.3' at /media/chedat/exchg/",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2568:300,test,tests,300,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2568,1,['test'],['tests']
Testability,"### Hi tpfto,. - Have you looked at the error messages? The identical error message I assume you receive when running this command is also below. - Have you tried to generate canonical smiles also? I was having issues with my allenes when converting smiles->to canonical smiles, so that's how I got here. test:; ==============================; obabel -ismi -:""C(Cl)=[C@]=CF"" -ocan. output:; ==============================; *** Open Babel Warning in ParseSmiles; Ignoring stereochemistry. Not enough connections to this atom.; FC=C=CCl; 1 molecule converted. also: always good to check the documentation; https://open-babel.readthedocs.io/en/latest/FileFormats/SMILES_format_using_Smiley_parser.html or here; https://github.com/openbabel/openbabel/blob/master/src/formats/smiley.h. So, it is a smiles parser error. If I am not mistaken, the allene or cumulene stereochemistry is not well implemented in the obabel smiles parser/system, which means that when smiles are parsed, the allene stereochemistry label is lost before the coordinate generation and thus the result is not useful... This is based on these examples, not the documentation, because when reading the documentation and testing the example from the documentation... It also fails, even though there are as many differing substituents as there can be. test:; ==============================. obabel -ismi -:""NC(Br)=[C@@]=C(F)I"" -ocan. output:; ==============================; *** Open Babel Warning in ParseSmiles; Ignoring stereochemistry. Not enough connections to this atom.; NC(=C=C(I)F)Br; 1 molecule converted. I think this needs to be fixed, or the implementation reconsidered. I'm not sure if I get it but I would like that allene stereochemistry is recognized also if the determining centers are further away from the central atom, even though I am aware that this becomes computationally exhaustive rather quickly, but I think it this needs to be implemented, as allenic groups are not that rare and the resulting downstream ar",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1891#issuecomment-447419567:305,test,test,305,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1891#issuecomment-447419567,1,['test'],['test']
Testability,#step:12:728); 1603 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/4isk_1jy.sdf; [728](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:729); pdbmol not equal: Could only match 0 of 80 atoms (80); [729](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:730); 2461 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1kmn_hso.sdf; [730](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:731); pdbmol not equal: Could only match 0 of 22 atoms (22); [731](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:732); 3216 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/5ot9_aoz.sdf; [732](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:733); pdbmol not equal: Could only match 0 of 29 atoms (29); [733](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:734); 3334 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/3hxb_bd5.sdf; [734](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:735); pdbmol not equal: Could only match 0 of 81 atoms (81); [735](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:736); 3516 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1fmb_hyb.sdf; [736](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:737); pdbmol not equal: Could only match 0 of 82 atoms (82); [737](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:738); 3944 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/3fr3_gds.sdf; [738](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:739); pdbmol not equal: Could only match 0 of 72 atoms (72); [739](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:740); 4408 /home/,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256:1433,test,test,1433,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256,1,['test'],['test']
Testability,#step:12:730); 2461 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1kmn_hso.sdf; [730](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:731); pdbmol not equal: Could only match 0 of 22 atoms (22); [731](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:732); 3216 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/5ot9_aoz.sdf; [732](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:733); pdbmol not equal: Could only match 0 of 29 atoms (29); [733](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:734); 3334 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/3hxb_bd5.sdf; [734](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:735); pdbmol not equal: Could only match 0 of 81 atoms (81); [735](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:736); 3516 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1fmb_hyb.sdf; [736](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:737); pdbmol not equal: Could only match 0 of 82 atoms (82); [737](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:738); 3944 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/3fr3_gds.sdf; [738](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:739); pdbmol not equal: Could only match 0 of 72 atoms (72); [739](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:740); 4408 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/4pox_2w2.sdf; [740](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:741); pdbmol not equal: Could only match 0 of 41 atoms (41); [741](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:742); 6406 /home/,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256:1762,test,test,1762,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256,1,['test'],['test']
Testability,#step:12:732); 3216 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/5ot9_aoz.sdf; [732](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:733); pdbmol not equal: Could only match 0 of 29 atoms (29); [733](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:734); 3334 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/3hxb_bd5.sdf; [734](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:735); pdbmol not equal: Could only match 0 of 81 atoms (81); [735](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:736); 3516 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1fmb_hyb.sdf; [736](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:737); pdbmol not equal: Could only match 0 of 82 atoms (82); [737](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:738); 3944 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/3fr3_gds.sdf; [738](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:739); pdbmol not equal: Could only match 0 of 72 atoms (72); [739](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:740); 4408 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/4pox_2w2.sdf; [740](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:741); pdbmol not equal: Could only match 0 of 41 atoms (41); [741](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:742); 6406 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/4old_2uz.sdf; [742](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:743); pdbmol not equal: Could only match 0 of 24 atoms (24); [743](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:744); 6497 /home/,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256:2091,test,test,2091,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256,1,['test'],['test']
Testability,"#step:12:734); 3334 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/3hxb_bd5.sdf; [734](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:735); pdbmol not equal: Could only match 0 of 81 atoms (81); [735](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:736); 3516 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1fmb_hyb.sdf; [736](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:737); pdbmol not equal: Could only match 0 of 82 atoms (82); [737](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:738); 3944 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/3fr3_gds.sdf; [738](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:739); pdbmol not equal: Could only match 0 of 72 atoms (72); [739](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:740); 4408 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/4pox_2w2.sdf; [740](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:741); pdbmol not equal: Could only match 0 of 41 atoms (41); [741](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:742); 6406 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/4old_2uz.sdf; [742](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:743); pdbmol not equal: Could only match 0 of 24 atoms (24); [743](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:744); 6497 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1gs5_nlg.sdf; [744](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:745); pdbmol not equal: Mismatched ExplicitValence, 3 != 4; [745](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:746); 6827 /home/r",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256:2420,test,test,2420,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256,1,['test'],['test']
Testability,"#step:12:736); 3516 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1fmb_hyb.sdf; [736](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:737); pdbmol not equal: Could only match 0 of 82 atoms (82); [737](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:738); 3944 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/3fr3_gds.sdf; [738](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:739); pdbmol not equal: Could only match 0 of 72 atoms (72); [739](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:740); 4408 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/4pox_2w2.sdf; [740](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:741); pdbmol not equal: Could only match 0 of 41 atoms (41); [741](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:742); 6406 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/4old_2uz.sdf; [742](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:743); pdbmol not equal: Could only match 0 of 24 atoms (24); [743](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:744); 6497 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1gs5_nlg.sdf; [744](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:745); pdbmol not equal: Mismatched ExplicitValence, 3 != 4; [745](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:746); 6827 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/2y2b_mhi.sdf; [746](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:747); pdbmol not equal: Could only match 0 of 53 atoms (53); [747](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:748); 8336 /home/r",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256:2749,test,test,2749,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256,1,['test'],['test']
Testability,"#step:12:738); 3944 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/3fr3_gds.sdf; [738](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:739); pdbmol not equal: Could only match 0 of 72 atoms (72); [739](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:740); 4408 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/4pox_2w2.sdf; [740](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:741); pdbmol not equal: Could only match 0 of 41 atoms (41); [741](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:742); 6406 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/4old_2uz.sdf; [742](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:743); pdbmol not equal: Could only match 0 of 24 atoms (24); [743](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:744); 6497 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1gs5_nlg.sdf; [744](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:745); pdbmol not equal: Mismatched ExplicitValence, 3 != 4; [745](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:746); 6827 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/2y2b_mhi.sdf; [746](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:747); pdbmol not equal: Could only match 0 of 53 atoms (53); [747](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:748); 8336 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/2j5v_pca.sdf; [748](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:749); pdbmol not equal: Could only match 0 of 15 atoms (15); [749](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:750); 10070 /home/",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256:3078,test,test,3078,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256,1,['test'],['test']
Testability,"$ svn update; At revision 3364.; $ babel -i mol2 123-pentatriene.mol2 -o inchi; InChI=1S/C5H8/c1-3-5-4-2/h3H2,1-2H3; 1 molecule converted; 4 audit log messages . According to vega it should be:; $ ./vega.sh 123-pentatriene.mol2; InChI=1/C5H6/c1-3-5-4-2/h4H,1H2,2H3. Reported by: maaren",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/925:147,log,log,147,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/925,1,['log'],['log']
Testability,$ wget http://www.pdb.org/pdb/files/2BOH.pdb && wget http://www.pdb.org/pdb/files/2HOC.pdb; $ babel --partialcharge gasteiger 2HOC.pdb 2HOC.mol2; 0 molecules converted; 20 audit log messages ; $ babel --partialcharge gasteiger 2BOH.pdb 2BOH.mol2; 0 molecules converted; 20 audit log messages ; etc. Reported by: prozacr. Original Ticket: [openbabel/bugs/881](https://sourceforge.net/p/openbabel/bugs/881),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1261:178,log,log,178,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1261,2,['log'],['log']
Testability,%] Building CXX object test/CMakeFiles/test_runner.dir/carspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cifspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cistranstest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/graphsymtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/gziptest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/implicitHtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/lssrtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/isomorphismtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/multicmltest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/regressionstest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/rotortest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/shuffletest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/smilestest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/spectrophoretest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/squareplanartest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereotest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereoperceptiontest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tautomertest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_ru,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:52881,test,test,52881,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,"& Starowicz, P. (2016). BIOPEP database of sensory peptides and amino acids. Food Research International, 85, 155-161. doi: 10.1016/j.foodres.2016.04.031). ## Actual Behavior; As also reported by shahik and fredrikw in issue ""smiles to fasta conversion"" #2359, the peptide sequence is converted to a nonsense open SMILES. For example the following input:. `>Test ARFF`; `ARFF`. produces the following SMILES output (either in the output pane or the GUI or in a file) :. `[H].[N].[C].[C].[O].[C].[H].[H].[H].[H].[H].[N].[C].[C].[O].[C].[C].[C].[N].[C].[N].[N].[H].[H].[H].[H].[H].[H].[H].[H].[H].[H].[H].[H].[H].[N].[C].[C].[O].[C].[C].[C].[C].[C].[C].[C].[H].[H].[H].[H].[H].[H].[H].[H].[H].[N].[C].[C].[O].[C].[C].[C].[C].[C].[C].[C].[H].[H].[H].[H].[H].[H].[H].[H].[H].[O].[H]`. However, **IF** the 'Display in firefox' option is enabled before doing the conversion, then the output is instead:. `N[C@H](C(=O)N[C@H](C(=O)N[C@H](C(=O)N[C@H](C(=O)O)Cc1ccccc1)Cc1ccccc1)CCCNC(=[NH2])N)C`. which creates the correct peptide structure when pasted into Marvin Sketch. Also, by default OpenBabel expects the FASTA to contain nucleotide sequences not amino acid sequences, so the input:. `>Test AR`; `AR`. produces the output:. `O[P@@](=O)([O])OC[C@H]1O[C@H](C[C@@H]1O[P@@](=O)([O])OC[C@H]1O[C]([C][C]1O)N1[C]=NC2=[C]N=C([N])N=C12)n1cnc2c(N)ncnc12.O[P@@](=O)([O])OC[C@H]1O[C@H](C[C@@H]1O[P@@](=O)([O])OC[C@H]1O[C@H](C[C@@H]1O)n1c(=O)[nH]c(=O)c(C)c1)N1C(=O)N=[C][C]=C1`. which does not represent the required peptide. I couldn't see any way to make OpenBabel treat the input FASTA as a peptide sequence, although it may exist. I guess providing a way to specify that an input FASTA is a peptide may be a feature request :). ## Steps to Reproduce. In the OB GUI enable the ""Input below (ignore input file)"" option. In the left hand input pane enter:. `>Test ARFF`; `ARFF`. Enable the ""Output below only (no output file)"" and make sure the ""Display in firefox"" option is NOT enabled. Click the CONVERT button.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2367:1551,Test,Test,1551,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2367,2,['Test'],['Test']
Testability,"() * 0.6022); ```. The problem here is that the duplicate-atom checking in `OBUnitCell::FillUnitCell` assumes the input atoms are already unique. If this isn't the case, the method compounds the error. Fixed by checking the input atoms before expanding the unit cell in `FillUnitCell` (maybe this kind of check belongs somewhere else?). **Issue 2:** `OBUnitCell::FillUnitCell` hangs on large unit cells. This is due to the algorithm used in atom checking. It checks atom-atom distances, which is O(N^2). The new approach uses a hash, which should be amortized O(N). It uses the extra speed to check _every_ atom for uniqueness, rather than just symmetry unique ones. Note that a better approach would use an octree, but the hash was easier to implement and proves the point. **Issue 3:** `OBUnitCell::FillUnitCell` doesn't check all possible duplicates. To replicate, use [FeMOF74](https://gist.github.com/patrickfuller/6419438) and the above script. The underlying issue is that `FillUnitCell` assumes that the listed symmetry operations are logical. However, CIFs are a mess. In the case of the example cif, the file already has more than one unitcell worth of atoms, and additionally has defined symmetry operations. This is solved by the solution of Issue 2; by using the extra speed afforded by the hash to check every atom-atom connection, we can check for more duplicates. **Issue 4:** Some crystallographic programs fail if atom coordinates are not in [0, 1]. It's annoying, but an easy fix. I just added `WrapFractionalCoordinate` to cifformat.cpp. **Issue 5:** Centering can segfault. To replicate, use CoMOF74. ``` python; import pybel; with open(""CoMOF74.cif"") as in_file:; mof = in_file.read(); mol = pybel.readstring(""cif"", mof); mol.unitcell.FillUnitCell(mol.OBMol); # Cycling fixes the issue; # mol = pybel.readstring(""cif"", mol.write(""cif"")); mol.OBMol.Center(); mol.write(""cif""); ```. The `Center()` method operates off of a bunch of private variables. I'm guessing something isn't g",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/23:1615,log,logical,1615,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/23,1,['log'],['logical']
Testability,"(1) Don't cache inchi when generating inchifield smiles; (2) Don't use cached inchi if the user specifies one of several InChI output options; (3) Add a new test file for caching (and debugging) regressions: regressionstest.cpp; (4) Drive-by fix for typo in docstrings for 'unique' op and inchiformat (""/sp3"" -> ""/nosp3""); (5) Add test for regression to regressionstest.cpp",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/142:157,test,test,157,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/142,2,['test'],['test']
Testability,"(From openbabel-devel). Ok, it builds, but it segfaults in the CML tests. I've extracted one of the; failing tests and ran it under gdb:. [rathann@ryvius ~/build/BUILD/openbabel-2.2.0b3-20080215-r2249/test/cmltest]$ gdb ../../tools/.libs/lt-babel ; GNU gdb Red Hat Linux (6.6-16.fc7rh); Copyright (C) 2006 Free Software Foundation, Inc.; GDB is free software, covered by the GNU General Public License, and you are; welcome to change it and/or distribute copies of it under certain conditions.; Type ""show copying"" to see the conditions.; There is absolutely no warranty for GDB. Type ""show warranty"" for details.; This GDB was configured as ""x86_64-redhat-linux-gnu""...; Using host libthread_db library ""/lib64/libthread_db.so.1"".; (gdb) run -isdf 3d.head.sdf -ocml 3d.head.2.cml; Starting program: /home/rathann/build/BUILD/openbabel-2.2.0b3-20080215-r2249/tools/.libs/lt-babel -isdf 3d.head.sdf -ocml 3d.head.2.cml; warning: no loadable sections found in added symbol-file system-supplied DSO at 0x7fffdbbfd000; 70 molecules converted; 785 audit log messages . Program received signal SIGSEGV, Segmentation fault.; 0x00000030eba8f501 in std::ostream::sentry::sentry () from /usr/lib64/libstdc++.so.6; Current language: auto; currently c; (gdb) bt full; #0 0x00000030eba8f501 in std::ostream::sentry::sentry () from /usr/lib64/libstdc++.so.6; No symbol table info available.; #1 0x00000030eba8fd57 in std::ostream::write () from /usr/lib64/libstdc++.so.6; No symbol table info available.; #2 0x00002aaab3fc225f in OpenBabel::XMLConversion::WriteStream (context=<value optimized out>, ; buffer=0x7fffdbace810 ""���\227"", len=-609425392) at xml.cpp:337; ofs = (ostream *) 0x7fffdbace810. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/728:67,test,tests,67,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/728,4,"['log', 'test']","['log', 'test', 'tests']"
Testability,(Mostly) fixed version of logp.txt. Original comment by: bentsm,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1115#issuecomment-281800669:26,log,logp,26,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1115#issuecomment-281800669,1,['log'],['logp']
Testability,"(Note to self) As I've seen elsewhere in the library, the lazy perception for chains follows incorrect logic of checking whether residue information is available before checking the OBMol flag for whether chains is perceived. As a result, unsetting this value currently has no effect. Also, calling ChainsParser::PerceiveChains(mol) should set this flag on the molecule, but currently doesn't.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1821:103,log,logic,103,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1821,1,['log'],['logic']
Testability,"(Note to self: add to docs). # Add a small number of tests; 1. For each test you want to add, add a new switch statement target (the ""test ID"") at the bottom of regressions.cpp. To avoid merge problems it may be a good idea to choose test IDs in a particular unique range, e.g. values starting at 6200, rather than the next available integer.; 2. The switch statement should call a function that actually carries out the test. Appropriate code is described below.; 3. Edit the line starting with ""set (regression_parts"" in :file:`tests/CMakeLists.txt` to include your new test target integers.; 4. Rebuild the project. Now it should be possible to run your test directly with ""testrunner regression NN"" where NN is the test ID. It should also be run automatically by ""make test"". # Test code. Need to write this up. For the moment, check out existing tests. You can use OB_ASSERT, or printf(""Fail\n""), to fail a test. The best tests fail without the patch, and pass afterwards. Even better tests will cover a larger range of behaviour to ensure that it keeps working.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/165#issuecomment-97709473:53,test,tests,53,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/165#issuecomment-97709473,16,"['Test', 'test']","['Test', 'test', 'testrunner', 'tests']"
Testability,"(That is so cool. It would be great if there was some way to run this on our own servers for every commit and so can immediately see when someone breaks ABI. We find it almost impossible to manage this otherwise.). As well as testing the SVN trunk, can you test against the 2.3.1 branch. It's at http://openbabel.svn.sourceforge.net/svnroot/openbabel/openbabel/branches/openbabel-2-3-x/. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1131#issuecomment-281800978:226,test,testing,226,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1131#issuecomment-281800978,2,['test'],"['test', 'testing']"
Testability,"(https://github.com/ltalirz/openbabel/tree/add-coverage) but it turns out that when compiling with `-DCMAKE_BUILD_TYPE=Debug` (which I believe is required for accurate coverage results - didn't check, though), the tests take a very long time ([gh actions log](https://github.com/ltalirz/openbabel/runs/1554047342?check_suite_focus=true)).; Even locally on my computer (which is ~4x faster than the github actions runner), there is still a test that exceeds the 1500s limit; ```; 210/222 Test #210: test_cmlreadfile_1 ............... Passed 0.81 sec; Start 211: inchiSamples.sdf_Test; 211/222 Test #211: inchiSamples.sdf_Test ............ Passed 2.17 sec; Start 212: inchiSamplesTechMan.sdf_Test; 212/222 Test #212: inchiSamplesTechMan.sdf_Test ..... Passed 0.99 sec; Start 213: inchiSteffen_PubChem.smi_Test; 213/222 Test #213: inchiSteffen_PubChem.smi_Test .... Passed 0.89 sec; Start 214: pytest_babel; 214/222 Test #214: pytest_babel ..................... Passed 94.96 sec; Start 215: pytest_sym; 215/222 Test #215: pytest_sym ....................... Passed 116.05 sec; Start 216: pytest_smartssym; 216/222 Test #216: pytest_smartssym ................. Passed 35.42 sec; Start 217: pytest_fastsearch; 217/222 Test #217: pytest_fastsearch ................ Passed 2.64 sec; Start 218: pytest_distgeom; 218/222 Test #218: pytest_distgeom ..................***Timeout 1500.09 sec; Start 219: pytest_unique; 219/222 Test #219: pytest_unique .................... Passed 8.13 sec; Start 220: pytest_kekule; 220/222 Test #220: pytest_kekule .................... Passed 19.51 sec; Start 221: pytest_pdbformat; 221/222 Test #221: pytest_pdbformat ................. Passed 1.04 sec; Start 222: pytest_RInChI; 222/222 Test #222: pytest_RInChI .................... Passed 34.85 sec; ```. This would make the coverage job very long-running on CI. There are different approaches one could take - ; live with the very long run time;; skip very long-running tests; ; try to see whether the ""worst offenders"" really",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2312:1384,Test,Test,1384,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2312,1,['Test'],['Test']
Testability,"(https://github.com/openbabel/openbabel/files/9179914/error-deps.log). ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; - Build maeparser and install it on ../libmaeparser-1.2.4-220427; - Build coordgenlibs and install it on ../coordgenlibs-3.0.0-220427; - Run following command to try the build process:; `; mkdir build-openbabel; cd build-openbabel; cmake \; -DCMAKE_INSTALL_PREFIX=../openbabel-3.1.1-220621 \; -DBUILD_SHARED=OFF \; -DBUILD_MIXED=ON \; -DWITH_STATIC_INCHI=ON \; -DWITH_STATIC_LIBXML=ON \; -DWITH_COORDGEN=ON \; -DENABLE_OPENMP=ON \; -Dmaeparser_DIR=../libmaeparser-1.2.4-220427 \; -Dcoordgen_DIR=../coordgenlibs-3.0.0-220427 \; ../openbabel; `; `; cmake --build . --config Release -j; `; ## How to fix; - Apply following patch. It does not tested on any other linux distribution or OS than Ubuntu 18.04.; [adjust-dependencies.patch.txt](https://github.com/openbabel/openbabel/files/9179786/adjust-dependencies.patch.txt). ## Note; - There's an another static build issue(https://github.com/openbabel/openbabel/issues/2377), but this issue does not identical to it.; - libxml2 relies on libicu for processing character set related functionality. I think it's libxml2 bug that its dependency is not explicitly set, but for workaround we can try to find and use it.; - libxml2 relies on liblzma for processing LZMA-compressed files. Yes, it has similar issues mentioned above.; - It seems that the command binaries are reference dynamic loading functions(libdl) even static build. It causes error without removing BUILD_SHARED condition like following log. And it moved to the end of libs variable, because it should be located on last position of library chain.; [error-libdl.log](https://github.com/openbabel/openbabel/files/9179932/error-libdl.log)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2513:2071,test,tested,2071,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2513,4,"['log', 'test']","['log', 'tested']"
Testability,"(import_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > S",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:16091,test,test,16091,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['test'],['test']
Testability,"). From http://openbabel.org/wiki/Install_(MSVC) Basic build; ""build all the projects except OBPythonOBF, OBJava, OBCSharp and OBGUI..."". LINK : fatal error LNK1181: cannot open input file 'odbccp32.libi'. Result when starting with Build by right click on FastSearch:. ------ Build started: Project: OBError, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; cl : Command line warning D9035 : option 'Wp64' has been deprecated and will be removed in a future release; tokenst.cpp; plugin.cpp; oberror.cpp; loader.cpp; dlhandler_win32.cpp; ..\..\src\dlhandler_win32.cpp(79) : warning C4267: 'return' : conversion from 'size_t' to 'int', possible loss of data; bitvec.cpp; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/bitvec.h(121) : warning C4267: 'return' : conversion from 'size_t' to 'unsigned int', possible loss of data; Linking...; LINK : fatal error LNK1181: cannot open input file 'odbccp32.libi'; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBError\Release\BuildLog.htm""; OBError - 1 error(s), 3 warning(s); ------ Build started: Project: OBDLL, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; transform3d.cpp; ..\..\src\math\transform3d.cpp(58) : warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; transform.cpp; spacegroup.cpp; rotor.cpp; rotamer.cpp; ring.cpp; residue.cpp; rand.cpp; pointgroup.cpp; ..\..\src\pointgroup.cpp(1087) : warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; phmodel.cpp; patty.cpp; parsmart.cpp; obutil.cpp; obiter.cpp; molchrg.cpp; mol.cpp; ..\..\src\mol.cpp(1908) : error C3861: '_finite': identifier not found; ..\..\src\mol.cpp(1908) : error C3861: '_finite': identifier not found; ..\..\src\mol.cpp(1908) : error C3861: '_finite': identifier not found; matrix3x3.cpp; matrix.cpp; kekulize.cpp; griddata.cpp; Gene",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781141:1152,log,log,1152,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781141,1,['log'],['log']
Testability,"). My jar file library contains openbabel.jar and other jar files required for the application to run in the lib directory. . I complied java bindings for openbabel using the command ; ```; sudo cmake /home/vin/openbabel2.4 ; -DCMAKE_INSTALL_PREFIX=~/Tools ; -DCMAKE_BUILD_TYPE=DEBUG ; -DJAVA_BINDINGS=ON ; -DEIGEN3_INCLUDE_DIR=/home/vin/Eigen3 ; -DSWIG_EXECUTABLE=/usr/bin/swig ; -DRUN_SWIG=ON; sudo make; ```. The compilation went well and took the libopenbabel_java.so and libopenbabel.so from the build directory and packed it along with my application in the directory (app/rescources) and specified the path to the app/resources directory in the source code (system.load(""/home/vin/app/resources/libopenbabel_java.so"")) of my application for performing an openbabel task. When I run my application jar file (app.jar) and perform an openbabel task (generate conformers) I am getting the below error . Exception in thread ""AWT-EventQueue-0"" java.lang.UnsatisfiedLinkError: /home/praktikant/OPAS_ALPHA_1.0/resources/libopenbabel_java.so: **/home/praktikant/OPAS_ALPHA_1.0/resources/libopenbabel_java.so: undefined symbol: _ZTVN9OpenBabel30OBMinimizingRMSDConformerScoreE**. I am not sure that it is a bug in openbabel or am I missing something in the java bindings compilation? I have attached the CMakeCache.txt; [CMakeCache.txt](https://github.com/openbabel/openbabel/files/2192825/CMakeCache.txt). I also looked into the Java bindings trouble #1102 in the issues, it is some what close but not exactly the same. Thank you for your time. <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1868:2791,test,test,2791,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1868,1,['test'],['test']
Testability,"); ![screen shot 2015-03-09 at 5 14 38 pm](https://cloud.githubusercontent.com/assets/10948687/6564527/ceb96ec8-c67f-11e4-813a-cfdbbf30bc30.png). And the Cmake Log is like following:; Using included inchi library.; checking for module 'cairo'; package 'cairo' not found; Could NOT find Cairo. PNG output will NOT be supported.; GUI will not be built; CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:14; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:39; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_P",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:1177,test,test,1177,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,1,['test'],['test']
Testability,"); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape; > > sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABE",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:14092,test,test,14092,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,2,['test'],"['test', 'testkekule']"
Testability,"); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape; > > sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABE",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:11627,test,test,11627,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,2,['test'],"['test', 'testunique']"
Testability,"* [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: `3.0.0` (installed using `conda` and the `conda-forge` channel); Operating system and version: macOS 10.15. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. I expect `pybel.readfile` to work with multi-model PDB files as it does for SDF and MOL2 files. For the following test PDD; ```text; MODEL 1; HETATM 1 C UNL 1 5.100 4.809 -9.314 1.00 0.00 C; HETATM 2 C UNL 1 4.758 6.074 -9.583 1.00 0.00 C; ENDMDL; MODEL 2; HETATM 1 C UNL 1 5.125 4.901 -9.530 1.00 0.00 C; HETATM 2 C UNL 1 4.570 6.075 -9.852 1.00 0.00 C; ENDMDL; END; ```. I expect the following code to work:; ```python; from openbabel import pybel. obmols = [obmol for obmol in pybel.readfile(""pdb"", ""test.pdb"")]. asseret len(obmols) == 2; ```. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. The previous code snippet fails with an `AssertionError`:; ```python; AssertionError Traceback (most recent call last); <ipython-input-3-119b3d6fa691> in <module>; ----> 1 assert len(obmols) == 2. AssertionError:. ```. The reason is that `len(obmols)` is equal to `3` and the last molecule is empty. The following code; ```python; from openbabel import pybel. obmols = [obmol for obmol in pybel.readfile(""pdb"", ""test.pdb"")]; for obmol in obmols:; print(obmol, obmol.OBMol.NumAtoms(), obmol.OBMol.NumBonds()); ```. produces the following output:. ```text; C#C	test.pdb; 2 1; C#C	test.pdb; 2 1; 	test.pdb; 0 0. ```. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. See above. ## Comments. The code failing above works as expected",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2097:410,test,test,410,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2097,2,['test'],['test']
Testability,**Description:**; When converting this file (regardless of end-of-line style and encoding) there is an infinite loop:; https://pastebin.com/6W56gJ9r; Changing the format of the penultimate line (222) of the file solves the problem:; https://pastebin.com/NUBUSLkd. **Steps to reproduce:** obabel -ipdb bug.pdb -ocml -O bug.cml (or any other format).; [source_files.zip](https://github.com/openbabel/openbabel/files/3848593/source_files.zip). I think there is some problem with parsing the file when reading. This problem always occurs on >=222 lines of the file in the original formatting (the first file). If there are less than 222 lines in the file then the problem does not occur. **OpenBabel verison:** 3.0.0 (2.4.1 – works fine).; **OS:** Linux x86_64 (others not tested),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2083:769,test,tested,769,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2083,1,['test'],['tested']
Testability,"**Is your feature request related to a problem? Please describe.**; Can OpenBabel reassign a carbon atom to be radical and list it in the `.mol` file with `RAD`?. **Describe the solution you'd like**; As mentioned in an earlier thread [here](https://github.com/openbabel/openbabel/issues/2526), `. mol` and `.sdf` files may include information about atom's charges and state as a radical, the indicated with the keyword `RAD` and `CHG`. . With [ChemDrawJS](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#), I created `.mol` files about the methyl cation, methyl radical, and methyl carbanion. Because ChemDraw's export is implicit about the hydrogen atoms, I run . ```shell; $ obabel input.mol -h --gen3d -O output.mol; ```. to yield files with explicit hydrogen atoms instead. Then however I wonder. For one, to process . ```bash; $ obabel *.mol -ocan; [CH3-]	methyl carbanion; [CH3+]	methyl cation; [CH3]	methyl radical; 3 molecules converted; ```. yields the SMILES strings in the anticipated pattern. Submitting such a list by. ```bash; $ obabel smiles_list.smi -omol; ```. however regenerates an entry about the methyl radical where `M RAD 1 1 2` *is missing* while `M CHG 1 1 -1` about the carbanion and `M CHG 1 1 1` about the carbcation are rewritten. **Describe alternatives you've considered**; So far, I did not identify an alternative. **Additional context**; The test data processed are attached in the .zip archive below. The observations refer to openbabel 3.1.1 -- Mar 29 2022 as provided by the repositories of Linux Debian 12/bookworm (branch testing). [2022-08-18_methyl_series.zip](https://github.com/openbabel/openbabel/files/9375696/2022-08-18_methyl_series.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2528:1391,test,test,1391,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2528,2,['test'],"['test', 'testing']"
Testability,"**Is your feature request related to a problem? Please describe.**; Drawing inspiration from [datawarrior](https://openmolecules.org/datawarrior/index.html) I wonder if processing .sdf with atomic flexibility, i.e. a particular atom could be either a carbon, or a nitrogen, were in future scope of openbabel e.g. to generate .png and .svg if one surveys a library of molecules. The very same .sdf (attached below) read by datawarrior:. ![example_dw](https://github.com/openbabel/openbabel/assets/19709084/0f41cb4b-a3c2-47d9-b18e-55b3e2bf80f2). and in openbabel (Open Babel 3.1.1 -- Jan 4 2023 -- 09:58:24, packaged by DebiChem for Linux Debian 13/trixie, branch testing):. ![obabel](https://github.com/openbabel/openbabel/assets/19709084/47ccc6c9-eb5d-4589-b644-e18fbbf9b8a5). **Describe the solution you'd like**; If useful to implement into openbabel, a similar extension of the site into `[C, N]`, or (if there is too little space to display all atomic symbols) a place holder which (similar as a figure caption) expands similar like a list, at the bottom of the illustration. **Describe alternatives you've considered**; So far, I worked with files of said flexibility with DataWarrior (cross platform), or Symyx Draw (Windows). **Additional context**. An example structure: . [compound_50.sdf.txt](https://github.com/openbabel/openbabel/files/12428083/compound_50.sdf.txt)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2621:662,test,testing,662,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2621,1,['test'],['testing']
Testability,"**Is your feature request related to a problem? Please describe.**; Our code uses on Openbabel for 3D and 2D processing of crystal molecular structures. For effective unit testing, we need a way to directly compare Molecule objects. A pertinent example is the `Atoms` object in the `ase` Python package, which implements an equality operator via [`__eq__`](https://wiki.fysik.dtu.dk/ase/_modules/ase/atoms.html). **Describe the solution you'd like**; I propose that the OBMol class includes a `.compare` member function for comparing two OBMol objects, assessing positions, atom types, unit cells, and periodic boundary conditions. Additionally, for Pybel, implementing an overloaded equality operator would be beneficial. **Describe alternatives you've considered**; I am happy to assist with this implementation and contribute a PR. In fact I thought of implementing this feature internally within our project, but I believe integrating it into Openbabel would be more beneficial for the community and ensure better long-term maintenance.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2713:172,test,testing,172,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2713,1,['test'],['testing']
Testability,**When merged this pull request will:**; - Prevent parser from matching ` Dipole orientation:` if no input orientation was printed.; - `obabel H2O_freq.log -O H2O.cml` work with [H2O_freq.log](https://github.com/openbabel/openbabel/files/8307662/H2O_freq.log),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2456:152,log,log,152,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2456,3,['log'],['log']
Testability,"*bump* - can you see if this solves John's problems. It looks okay to me, but I don't have his test file.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1658#issuecomment-335490099:95,test,test,95,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1658#issuecomment-335490099,1,['test'],['test']
Testability,"+ x86_640"":; syntax error, unexpected exp_NUMBER, expecting $end (8); Call Stack (most recent call first):; cmake/modules/MacroEnsureVersion.cmake:95 (NORMALIZE_VERSION); CMakeLists.txt:248 (macro_ensure_version). CMake Error at cmake/modules/MacroEnsureVersion.cmake:76 (MATH):; math cannot parse the expression: ""x86_646*10000 + x86_644*100 + x86_640"":; syntax error, unexpected exp_NUMBER, expecting $end (8); Call Stack (most recent call first):; cmake/modules/MacroEnsureVersion.cmake:95 (NORMALIZE_VERSION); CMakeLists.txt:249 (macro_ensure_version). CMake Error at cmake/modules/MacroEnsureVersion.cmake:76 (MATH):; math cannot parse the expression: ""x86_646*10000 + x86_644*100 + x86_640"":; syntax error, unexpected exp_NUMBER, expecting $end (8); Call Stack (most recent call first):; cmake/modules/MacroEnsureVersion.cmake:95 (NORMALIZE_VERSION); CMakeLists.txt:250 (macro_ensure_version). -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Checking available shared pointer...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Success; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::shared_ptr in memory; -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; -- Found PkgConfig: /usr/bin/pkg-config (found version ""0.29.2"") ; -- Checking for module 'cairo'; -- Found cairo, version 1.14.10; -- Found Cairo: /usr/lib/libcairo.so ; -- Cairo found. PNG output will be supported.; -- Looking for getopt; -- Looking for getopt - found; -- Attempting to build the GUI; -- wxWidgets found => GUI will be built; -- Found PythonInterp: /usr/bin/python (found version ""2.7.13"") ; -- Configuring incomplete, errors occurred!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1624:4110,Test,Test,4110,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1624,10,['Test'],['Test']
Testability,", this approach aims to be portable for other platforms (maybe others may check on this). Reporting only the (processed) canonical SMILES passing the filter successfully equally should be helpful when running OpenBabel with the optional `--errorlevel <N>` (default 2 out of 5, cf. [section 3.2](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html)). ```awk; #!/usr/bin/awk -f. # name: filter.awk; # author: nbehrnd@yahoo.com; # license: GPL v2, 2022; # date: <2022-03-23 Wed>; # edit: <2022-03-28 Mon>. # Retain ""reasonable"" SMILES strings OpenBabel may process gently.; #; # For a successful application of this filter, this AWK script depends; # on a running installation of OpenBabel and AWK. (Tests suggest you may; # use GNU AWK/gawk and nawk instead of AWK as well.); #; # Write a list of SMILES into the same directory as this AWK script, e.g.,; # as file check01.smi. Then deploy this filter e.g., by; #; # awk -f filter.awk check01.smi; #; # to process the content of the list of SMILES. The output is a list of; # canonical SMILES which OpenBabel has no difficulty to process. Entries; # which cause a warning by OpenBabel (i.e., a five-line output during the; # test conversion) are not reported back. {test_convert = ""obabel -:\"""" $1 ""\"" -ocan > shuttle.txt 2>&1"";; system(test_convert);. filter = ""awk 'END{if (NR==2) {print $0;}}' shuttle.txt""; system(filter);; }; ```; Test input data (`check01.smi`):; ```; CO[C@@H]([C@@H](C[C@H]([C@@H]1OC)O)O)C1OC; COC(Cc(c(O)c(cc1OC)C(OC(c(cc(c(O)c2)OC)c2OC)=O)=O)c1O)=O; CC(OC(CCC(OC(c(ccc(O[C@@H](C(C(C=CC1)=C1O)=O)C(O)=O)c1)c1O)=O)=O)=O)=O; CC(O/C(\CCC[C@H]([C@H](C(CC=C)=C)OC(O)=C)O)=C(\COC)/OCO)=O; c1ccncc1; C1CCCC5; CC; CCC; ```; Reported SMILES passing the filter successfully:. ```bash; $ awk -f filter.awk check01.smi ; COC1[C@@H](OC)[C@H](O)C[C@H]([C@@H]1OC)O	; COC(=O)Cc1c(O)c(cc(c1O)OC)C(=O)OC(=O)c1cc(OC)c(cc1OC)O	; O=C(OC(=O)c1ccc(cc1O)O[C@@H](C(=O)C1=C(O)CC=C1)C(=O)O)CCC(=O)OC(=O)C	; c1cccnc1	; CC	; CCC	; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081101737:2418,test,test,2418,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081101737,2,"['Test', 'test']","['Test', 'test']"
Testability,"- 01:08:00 up 49 days, 6:12, 1 user, load average: 4,45, 1,46, 1,11; Tasks: 362 total, 3 running, 357 sleeping, 1 stopped, 1 zombie; %Cpu(s): 98,8 us, 1,2 sy, 0,0 ni, 0,0 id, 0,0 wa, 0,0 hi, 0,0 si, 0,0 st; MiB Mem : 31656,0 total, 1710,4 free, 8584,8 used, 21360,8 buff/cache; MiB Swap: 2048,0 total, 264,9 free, 1783,1 used. 20925,8 avail Mem . PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND ; 2326554 merzky 20 0 127428 28980 16392 R 378,7 0,1 0:47.11 obabel ; 2326556 merzky 20 0 127428 28960 16372 R 367,1 0,1 0:46.73 obabel ; [...]; ```; (the node has 4 cores / 8 threads). ## Steps to Reproduce; Either use the commands above, or open two terminals and run two openbabel instances in quick succession. Since the command runtime itself is very short, getting the timing right can be tricky, but the hangup happens every time if the second command is started within about 0.3 seconds after the first command. The problem does not depend on the input SMILES - but I did not test any other parameter configuration, and thus do not know if other usage modes are affected. If I run the obabel instances under `strace`, I see both looping over `FUTEX_WAIT/FUTEX_WAKE` right after cloning the threads:; ```; [...]; mmap(NULL, 8392704, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7fe909629000; mprotect(0x7fe90962a000, 8388608, PROT_READ|PROT_WRITE) = 0; clone(child_stack=0x7fe909e28cb0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tid=[2343280], tls=0x7fe909e29700, child_tidptr=0x7fe909e299d0) = 2343280; mmap(NULL, 8392704, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7fe908e28000; mprotect(0x7fe908e29000, 8388608, PROT_READ|PROT_WRITE) = 0; clone(child_stack=0x7fe909627cb0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tid=[2343281], tls=0x7fe909628700, child_tidptr=0x",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2262:2042,test,test,2042,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2262,1,['test'],['test']
Testability,"- 1 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 6 up-to-date, 0 skipped ==========. OBUtilFormats:. ------ Build started: Project: OBUtilFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; titleformat.cpp; reportformat.cpp; povrayformat.cpp; pngformat.cpp; molreport.cpp; copyformat.cpp; Generating Code...; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBUtilFormats\Release\BuildLog.htm""; OBUtilFormats - 0 error(s), 0 warning(s); ========== Build: 1 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. OBXMLFormats:. ------ Build started: Project: OBXMLFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; xmlformat.cpp; xml.cpp; thermoformat.cpp; rxnformat.cpp; ../../include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such . file or directory; rsmiformat.cpp; ../../include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such . file or directory; pubchem.cpp; cmlreactformat.cpp; ../../include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such . file or directory; cmlformat.cpp; ../../include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such . file or directory; chemkinformat.cpp; ../../include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such . file or directory; cdxmlformat.cpp; Generating Code...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBXMLFormats\Release\BuildLog.htm""; OBXMLFormats - 5 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 4 up-to-date, 0 skipped ==========. Original comment by: peterennis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:13370,log,log,13370,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['log'],['log']
Testability,"- 22:40:34; $ pip show openbabel; Name: openbabel; Version: 2.4.1; Summary: Python interface to the Open Babel chemistry library; Home-page: http://openbabel.org/; Author: Noel O'Boyle; Author-email: openbabel-discuss@lists.sourceforge.net; License: GPL; Location: [edited]; Requires: ; ```. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; When I compute fingerprints using ECFP4, If I compute the same fingerprint for a compound many times, the result should always be identical, and the resulting tanimoto similarity = 1 for the same structure. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; If too many fingerprints are computed, the results become arbitrary: the same smile returns many different values. ; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; 1) create the following script, which computes the fingerprint for ""CCCCCCCCCC"" 300 times:; ```python3; import openbabel as ob; from pybel import Fingerprint. fingerprinter = ob.OBFingerprint.FindFingerprint(""ECFP4""); #fingerprinter = ob.OBFingerprint.FindFingerprint(""FP4""); smiles_parser = ob.OBConversion(); smiles_parser.SetInFormat(""smi""). def fp(smiles):; """"""; compute and return the fingerprint from a SMILES; """"""; mol = ob.OBMol(); smiles_parser.ReadString(mol, smiles); fp = ob.vectorUnsignedInt(); fingerprinter.GetFingerprint(mol, fp); return fp. for entry in [""C""*10] *300:; print(Fingerprint(fp(entry)).bits); ```; 2) run it to count the number of different results:; ```shell; python test_ob_ecfp4.py | sort | uniq | wc -l; # result for me is 18; ```. Please note that:; - if we use e.g. FP4 (or others",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1886:1936,test,test,1936,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1886,1,['test'],['test']
Testability,"- Gert Thijs <gert.thijs@silicos.com>; - openbabel 2.1.1; - Mac OS X 10.5 on x86_64. I have encountered a problem when using the phmodel that is linked to the type of the input file. I have a simple molecule in both a smiles (test.smi) and a sd file (test.sdf). When I convert them using obabel with the -p option for protonation I get two different results. This is illustrated in the steps below. macbook1:~ gert$ cat test.smi ; C[N+]1=CC=CC=C1	1. macbook1:~ gert$ cat test.sdf; 1; -OEChem-07030811492D. 7 7 0 0 0 0 0 0 0999 V2000; 0.0000 0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 N 0 3 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0 0 0 0; 2 7 1 0 0 0 0; 2 3 2 0 0 0 0; 3 4 1 0 0 0 0; 4 5 2 0 0 0 0; 5 6 1 0 0 0 0; 6 7 2 0 0 0 0; M CHG 1 2 1; M END; $$$$. When using the phmodel to convert the molecule, the positive charge on the nitrogen will be lost when starting from the SD file as an input ; while this is not the case with the smiles input file. . macbook1:~ gert$ obabel -h -p -isdf test.sdf -osmi 2> /dev/null; [CH3][n]1[cH][cH][cH][cH][cH]1	1; macbook1:~ gert$ obabel -h -p -ismi test.smi -osmi 2> /dev/null; [CH3][n+]1[cH][cH][cH][cH][cH]1	1. When only adding hydrogens, there is no difference between the two generated smiles and the nitrogen still has a positive charge. Any idea where this difference might come from? . Many thanks,; Gert Thijs. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/785:226,test,test,226,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/785,6,['test'],['test']
Testability,"- Support Hermann-Mauguin notation space groups with spaces and also; the unspecified default space group.; - HM space group is enclosed within parentheses and can contain space; between them as per the given format details in -; http://hincklab.uthscsa.edu/html/soft_packs/msi_docs/insight980/formats980/ClassicFiles.html.; ; The previous code didn't recognize such a spacegroup as it strictly; looked for 8 fields after tokenizing them using default delimiters as; space, tab, newline.; - It is legal to have .car files with PBC=ON and no space group defined; in the fifth line and just have PBC and a,b,c,alpha,beta,gamma; parameters. Such structure is considered to have lowest symmetry; space-group as P1. This means there are no symmetry operations in play; and all atoms are explicit within the unit cell. The .car files for; H2O and polymers fall under this category since they are amorphous but; are periodic.; - Added tests in new format to ensure this is working.; - I found following tests in openbabel:master already fail. So this has nothing to do with this change when you address my request.; ; ```; 11 - test_builder_1 (Failed); 12 - test_builder_2 (Failed); 96 - test_charge_mmff94_1 (Failed); 100 - test_ffgaff_1 (Failed); 101 - test_ffghemical_1 (Failed); 104 - test_ffuff_1 (Failed); 112 - test_logp_psa_1 (Failed); 126 - inchiSamples.sdf_Test (Failed); 127 - inchiSamplesTechMan.sdf_Test (Failed); ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/26:928,test,tests,928,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/26,2,['test'],['tests']
Testability,"- Support Hermann-Mauguin notation space groups with spaces and also; the unspecified default space group.; - HM space group is enclosed within parentheses and can contain space; between them as per the given format details in -; http://hincklab.uthscsa.edu/html/soft_packs/msi_docs/insight980/formats980/ClassicFiles.html.; ; The previous code didn't recognize such a spacegroup as it strictly; looked for 8 fields after tokenizing them using default delimiters as; space, tab, newline.; - It is legal to have .car files with PBC=ON and no space group defined; in the fifth line and just have PBC and a,b,c,alpha,beta,gamma; parameters. Such structure is considered to have lowest symmetry; space-group as P1. This means there are no symmetry operations in play; and all atoms are explicit within the unit cell. The .car files for; H2O and polymers fall under this category since they are amorphous but; are periodic.; - Added tests to ensure this is working.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/25:928,test,tests,928,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/25,1,['test'],['tests']
Testability,"- Use rapidjson instead of json-cpp.; - Better method for including the JSON library: Instead of including the full source in the Open Babel repository, CMake looks for rapidjson on the system. If it doesn't find it, it downloads the latest version on demand and uses that. This is also a possible model for how the InChI code could work.; - Better detection of supported native CPU optimizations at compile time (used by rapidjson).; - Convert the existing PubChem and ChemDoodle JSON formats to use rapidjson.; - Fix a few minor bugs and add proper tests for the existing JSON formats. Should hopefully be faster:. ```; (jsoncpp) $ python -m timeit -n 1000 -v 'import pybel;list(pybel.readfile(""pcjson"",""CID_6857552_2D.json""))'; raw times: 2.15 1.45 1.45; 1000 loops, best of 3: 1.45 msec per loop; ```. ```; (rapidjson) $ python -m timeit -n 1000 -v 'import pybel;list(pybel.readfile(""pcjson"",""CID_6857552_2D.json""))'; raw times: 1.55 0.818 0.818; 1000 loops, best of 3: 818 usec per loop; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1776:551,test,tests,551,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1776,1,['test'],['tests']
Testability,"- [ X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: master; Operating system and version: macos and linux. ## Expected Behavior; Aromatic ring should be detected for 1,2,3-trimethyl-imidazolium from coordinates. . ## Actual Behavior; The aromatic ring is detected if a correct SD file is presented, but not a Gaussian log file. ## Steps to Reproduce; % obenergy -ff GAFF 123-trimethyl-imidazolium.log.gz; ==============================; *** Open Babel Warning in PerceiveBondOrders; Failed to kekulize aromatic bonds in OBMol::PerceiveBondOrders. A T O M T Y P E S. IDX	TYPE	RING; 1	c2	AL; 2	c2	AL; 3	n3	AL; 4	cc	AL; 5	n3	AL; <snip>. whereas ; % unzip 123-trimethyl-imidazolium.zip; % obenergy -ff GAFF 123-trimethyl-imidazolium.sdf . A T O M T Y P E S. IDX	TYPE	RING; 1	cd	AR; 2	cc	AR; 3	na	AR; 4	cc	AR; 5	na	AR; <snip>. [123-trimethyl-imidazolium.log.gz](https://github.com/openbabel/openbabel/files/6411257/123-trimethyl-imidazolium.log.gz). [123-trimethyl-imidazolium.zip](https://github.com/openbabel/openbabel/files/6411259/123-trimethyl-imidazolium.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2366:398,log,log,398,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2366,4,['log'],['log']
Testability,"- [ ] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.0; Operating system and version: macOS Catalina 10.15.7. ## Expected Behavior; I expect my code to generate a pdb file with xyz coordinates included. When I try the same operation with the OpenBabel CLI, I have no issue. This is only a problem with the python interface. ## Actual Behavior; A PDB file is generated but there are no coordinates. ## Steps to Reproduce. I am running the following code. I have tried several different valid SMILES. ``` python; obConversion = openbabel.OBConversion(); obConversion.SetInAndOutFormats(""smi"", ""pdb""). mol = openbabel.OBMol(); obConversion.ReadString(mol, 'C'); mol.AddHydrogens(); obConversion.AddOption('gen3d', obConversion.OUTOPTIONS) # I have also tried INOPTIONS and GENOPTIONS; obConversion.WriteFile(mol, f""TEST.pdb""); ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2419:861,TEST,TEST,861,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2419,1,['TEST'],['TEST']
Testability,"- [ ] I believe this to be a bug with Open Babel; - [X] I believe this to be a bug with Open Babel's CI framework; - [ ] This is a feature request. ## Environment Information; GitHub. ## Expected Behavior; Automated appveyor tests should evaluate the code under test. ## Actual Behavior; Automated appveyor tests of new PRs are failing over an issue with the test environment, independently of the code under test. Example diagnostic message:. > LINK : fatal error LNK1104: cannot open file 'C:\msvc-dependencies-master\libs-common\i386\zlib1.lib' [C:\openbabel\build\src\openbabel.vcxproj]. ## Steps to Reproduce; Submit a pull request.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2222:225,test,tests,225,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2222,5,['test'],"['test', 'tests']"
Testability,"- [ ] I believe this to be a bug with Open Babel; - [x ] This is a feature request. ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Would it be possible to add support for a common extension to the '.xyz' file format, the (sometimes called 'xyz+vec' ) format, e.g:. 2; Comment line; H 1.0 0.0 0.0 1.0 0.0 0.0; H -1.0 0.0 0.0 -1.0 0.0 0.0. Where the last 3 numbers in each atom record are the Cartesian components of a vector attached to the atom in question. The idea would then be to provide this per-atom vector information via the API. A useful generalization of this might be might be per-atom scalars (1 extra column), per-atom vectors (3 extra columns) and per-atom (3x3) tensors (9 extra columns). . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1703:1204,test,test,1204,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1703,1,['test'],['test']
Testability,"- [ x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: all versions since migration to git, including git HEAD; Operating system and version: Linux, various flavors and versions. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ```; perl Makefile.PL; make; ```; expect success. ## Actual Behavior. g++ gives the message. error: openbabel/babelconfig.h: No such file or directory. The problem is that Makefile.PL depends on the environment variables @ENV{""SRC_DIR""} and @ENV{""OBJ_DIR""} being set, but there is nothing which causes them to be set, and no instructions that you should set them manually. This causes the Include path to be set incorrectly. Empirically, setting them like this leads to a successful build:. ```SRC_DIR=../../build OBJ_DIR=../../build perl Makefile.PL```. Although I don't know if that is the best way to do it. ## Steps to Reproduce. ```; rm build -r; mkdir build; cmake .. -DPERL_BINDINGS=ON -DRUN_SWIG=ON -DCMAKE_INSTALL_PREFIX=/home/jjanes/openbabel_1711fbe82cf4c3b7b; make -j8; make test; cd ../scripts/perl; perl Makefile.PL; make; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1688:1133,test,test,1133,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1688,1,['test'],['test']
Testability,"- [* ] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: macOS Big sur. ## Expected Behavior; $ obabel -ixyz 039863424.b3lyp@pm6.xyz -ocan; CCCCC[NH]1C(=C/C(=C\2/C(=O)NC(=O)[N]C2=O)/C=C1C)C PUBCHEM 039863424 B3LYP 6-31G(d) at PM6 optimized geometry. ## Actual Behavior; $ obabel -ixyz 039863424.b3lyp@pm6.xyz -ocan; CCCCC[NH]1C(=C/C(=C/2/C(=O)NC(=O)[N]C2=O)/C=C1C)C PUBCHEM 039863424 B3LYP 6-31G(d) at PM6 optimized geometry. $ python3 ./test.py --target 039863424.b3lyp@pm6.xyz | sort | uniq; CCCCC[NH]1C(=C/C(=C/2\C(=O)NC(=O)[N]C2=O)/C=C1C)C; CCCCC[NH]1C(=C/C(=C\2/C(=O)NC(=O)[N]C2=O)/C=C1C)C. ## Steps to Reproduce; I attached a script ""test.py"" and ""039863424.b3lyp@pm6.xyz "". then type ; $ python3 ./test.py --target 039863424.b3lyp@pm6.xyz | sort | uniq",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2381:517,test,test,517,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2381,3,['test'],['test']
Testability,"- [X ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: Windows 10 1803. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. --> Conversion from .mol2 file to .pdb file should produce a ""normal"" structure. If the conversion is performed on a Linux environment, the so-produced structure is perfectly fine. However, on a Windows environment, the structure is completely messed up. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior --> ; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; --> The initial .mol2 file is PLA_DP8.mol2. On a Windows and Linux environement, the following commands were performed:. > obabel -i mol2 PLA_DP8.mol2 -o pdb -O PLA_DP8.pdb. The conversion has also been performed using Open Babel GUI on Windows and the result was the same as for the command line. The ouput from the Linux conversion (OK structure) is DP8.pdb and the ouput of the Windows conversion is Messed_Up.pdb. Is there something we are doing wrong? Is it a bug with Openbabel?. Thank you!; [Bug_OpenBabel.zip](https://github.com/openbabel/openbabel/files/2615051/Bug_OpenBabel.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1911:902,test,test,902,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1911,1,['test'],['test']
Testability,"- [X ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: master, broken as of eeca1427135316c22dee3733a4da44ea19d0a052; Operating system and version: tested on Ubuntu 18.10 and CentOS 6. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; when I convert a SMILES file to a MOL, the generated layout is wrong. For instance, if I have a Benzene molecule:. ```; C1=CC=CC=C1; ```. If I convert it to the MOL format with the `--gen2D` option:. ```; obabel -i ""smi"" ""/tmp/ippidb-web/toto.smi"" -o ""sdf"" --gen2d; ```. I expect the coordinates to form a perfect hexagon:. ```. OpenBabel01151911112D. 6 6 0 0 0 0 0 0 0 0999 V2000; -0.8660 -0.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; -1.7321 -0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; -1.7321 1.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; -0.8660 1.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; -0.0000 1.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 1 6 1 0 0 0 0; 1 2 2 0 0 0 0; 2 3 1 0 0 0 0; 3 4 2 0 0 0 0; 4 5 1 0 0 0 0; 5 6 2 0 0 0 0; M END; $$$$; ```; ## Actual Behavior; As of eeca1427135316c22dee3733a4da44ea19d0a052, the generated coordinates are wrong:. ```. OpenBabel01151911162D. 6 6 0 0 0 0 0 0 0 0999 V2000; -0.9710 0.3495 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; -0.9710 -0.6309 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; -1.8201 -1.1212 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; -2.6692 -0.6309 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; -2.6692 0.3495 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 -0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 1 6 1 0 0 0 0; 1 2 2 0 0 0 0; 2 3 1 0 0 0 0; 3 4 2 0 0 0 0; 4 5 1 0 0 0 0; 5 6 2 0 0 0 0; M END; $$$$; ```; If you draw it, it's easier to spot:. ```; bin/obabel -i ""smi"" ""/tmp/ippidb-web/toto.smi"" -o ""ascii"" --gen2d; ```. ```; ______ __ ; | \___________ | \___ ; | \___________ | \___ ; | \___________ | \____ ; | ______ | \___________ \___ ; | \_________ | | \_____________ ; | \_________ | | \_____ ;",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1921:225,test,tested,225,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1921,1,['test'],['tested']
Testability,"- [X] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1 (3.1.1+dfsg-6+b1); Operating system and version: Linux Debian 12/bookworm (branch testing). ## Expected Behavior; When submitting a list of SMILES for conversion, I prefer OpenBabel's warnings sent to the CLI to appear directly after the entry to be revised. E.g. with `check01.smi`. ```bash; $ awk '{print}' check01.smi; CO[C@@H]([C@@H](C[C@H]([C@@H]1OC)O)O)C1OC; COC(Cc(c(O)c(cc1OC)C(OC(c(cc(c(O)c2)OC)c2OC)=O)=O)c1O)=O; CC(OC(CCC(OC(c(ccc(O[C@@H](C(C(C=CC1)=C1O)=O)C(O)=O)c1)c1O)=O)=O)=O)=O; CC(O/C(\CCC[C@H]([C@H](C(CC=C)=C)OC(O)=C)O)=C(\COC)/OCO)=O; ```. to yield a log like. ```bash; $ awk '{print}' check01.smi | obabel -ismi -ocan --addinindex; COC1[C@@H](OC)[C@H](O)C[C@H]([C@@H]1OC)O	1; COC(=O)Cc1c(O)c(cc(c1O)OC)C(=O)OC(=O)c1cc(OC)c(cc1OC)O	2; O=C(OC(=O)c1ccc(cc1O)O[C@@H](C(=O)C1=C(O)CC=C1)C(=O)O)CCC(=O)OC(=O)C	3; COCC(=C(OC(=O)C)CCC[C@H]([C@H](C(=C)CC=C)OC(=C)O)O)OCO	4; ==============================; *** Open Babel Warning in CreateCisTrans; Error in cis/trans stereochemistry specified for the double bond; 4 molecules converted; ```; ## Actual Behavior; Instead, above `check01.smi` is processed with a report as if the second entry would require a revision, i.e. ```bash; $ awk '{print}' check01.smi | obabel -ismi -ocan --addinindex; COC1[C@@H](OC)[C@H](O)C[C@H]([C@@H]1OC)O	1; COC(=O)Cc1c(O)c(cc(c1O)OC)C(=O)OC(=O)c1cc(OC)c(cc1OC)O	2; ==============================; *** Open Babel Warning in CreateCisTrans; Error in cis/trans stereochemistry specified for the double bond. O=C(OC(=O)c1ccc(cc1O)O[C@@H](C(=O)C1=C(O)CC=C1)C(=O)O)CCC(=O)OC(=O)C	3; COCC(=C(OC(=O)C)CCC[C@H]([C@H](C(=C)CC=C)OC(=C)O)O)OCO	4; 4 molecules converted; ```. ## Steps to Reproduce; Processing `check01.smi` line by line, it actually is entry 4 (i.e., n + 2) OpenBabel's warning refers to:. ```bash; $ awk 'NR == 4' check01.smi | obabel -ismi -ocan; ==============================; *** Open Babel Warni",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2455:186,test,testing,186,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455,2,"['log', 'test']","['log', 'testing']"
Testability,"- [X] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1 + commit 7de27f309db5f7ec026ef5c5235e5b33bf7d1a85; Operating system and version:; Ubuntu 20.10 development release. ## Expected Behavior; Test succeed on arm64 and ppc64el. ## Actual Behavior; ```; Running test/testobconv_writers.py ...; ..........................................................................................F..................................................; ======================================================================; FAIL: test_default (__main__.TestPCJSON); ----------------------------------------------------------------------; Traceback (most recent call last):; File ""test/testobconv_writers.py"", line 2761, in test_default; self.assertWriters(self.fmt, """"""\; File ""test/testobconv_writers.py"", line 258, in assertWriters; test_write_string(self, mol, conv, expected_output, normalize); File ""test/testobconv_writers.py"", line 165, in test_write_string; test_case.assertMultiLineEqual(output.replace(""\r\n"", ""\n""), expected_output.replace(""\r\n"", ""\n"")); AssertionError: '{\n [1926 chars]102014\n ],\n ""y"": [[1070 chars]]\n}' != '{\n [1926 chars]102012\n ],\n ""y"": [[1070 chars]]\n}'; {; ""PC_Compounds"": [; {; ""atoms"": {; ""aids"": [; 1,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""element"": [; 6,; 6,; 6,; 6,; 6,; 6,; 8,; 1,; 1,; 1,; 1,; 1,; 1; ]; },; ""bonds"": {; ""aid1"": [; 1,; 1,; 2,; 3,; 4,; 5,; 6,; 1,; 2,; 3,; 4,; 5,; 7; ],; ""aid2"": [; 6,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""order"": [; 2,; 1,; 2,; 1,; 2,; 1,; 1,; 1,; 1,; 1,; 1,; 1,; 1; ]; },; ""coords"": [; {; ""type"": [; 1; ],; ""aids"": [; 1,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""conformers"": [; {; ""x"": [; 1.5846,; 1.5703,; 2.4295,; 3.3031,; 3.3175,; 0.0,; -1.0005,; 2.313816216007316,; 0.669250157347277,; 2.4146659588503769,; 4.189331679349326,; 4.052466878708012,; - -1.4648575597102014; ? ^; + -1.4648575597102012; ? ^; ],; ""y"": [; 1.5846,; 1.5",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2246:242,Test,Test,242,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2246,8,"['Test', 'assert', 'test']","['Test', 'TestPCJSON', 'assertWriters', 'test']"
Testability,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: macOS Sierra 10.12.6 (Also possibly Ubuntu). ## Expected Behavior; I expect use of the -p option to produce valid output structures (e.g., SMILES strings). ## Actual Behavior. Some input molecules give nonsensical output molecules. Like this (three bonds to oxygen atom):. ![image](https://user-images.githubusercontent.com/18405649/29100505-f1858bbe-7c79-11e7-8329-ddc5932da22d.png). ## Steps to Reproduce. Contents of `test.smi`:. ```O1C(=O)/C(=C/2\OCC(C2)C)/C(C1)C	134784_375```. Reasonable input structure:. ![image](https://user-images.githubusercontent.com/18405649/29100514-0039e9de-7c7a-11e7-871e-a34fe4b4e74b.png). Command:. ```; > obabel -d -p 7 -ismi test.smi -ocan; CC1C[O]=C(C1)C1=C([O-])OCC1C	134784_375; 1 molecule converted; ```. Unreasonable structure (three bonds to oxygen atom):. ![image](https://user-images.githubusercontent.com/18405649/29100505-f1858bbe-7c79-11e7-8329-ddc5932da22d.png). Ok at very acidic pH:. ```; (! 518)-> obabel -d -p 1 -ismi test.smi -ocan; CC1CO/C(=C\2/C(C)COC2=O)/C1	134784_375; 1 molecule converted; ```. ![image](https://user-images.githubusercontent.com/18405649/29100562-3baabbd8-7c7a-11e7-9a31-2dc472b318dc.png). Thanks!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1611:589,test,test,589,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1611,3,['test'],['test']
Testability,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0 to 3.1.1; Operating system and version: Ubuntu Server 20.04. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Proper conversion of G16 file to xyz. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; > obabel -ig16 1.log -oxyz -O1.xyz; 0 molecules converted. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; An example g16 output file is attached. obabel does (consistently) not convert frequency calculation files such as this one. Other g16 files do convert properly.; [1.log](https://github.com/openbabel/openbabel/files/5146293/1.log)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2277:541,log,log,541,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2277,4,"['log', 'test']","['log', 'test']"
Testability,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 8.1. ## Expected Behavior; 1. OpenBabel should not attempt out-of-bounds array accesses.; 2. OpenBabel's tests should pass when compiled with GCC 8 and the `-Wp,-D__GLIBCXXX_ASSERTIONS` option. ## Actual Behavior; While parsing ""param"" lines, `OBForceFieldUFF::ParseParamFile()` attempts to access a third byte of each atom type string, even when there are only two (including C string terminator). The deuterium parameters in the default UFF.prm file provided by OpenBabel trigger this misbehavior in practice. If symbol `__GLIBCXX_ASSERTIONS` is defined when building OpenBabel with GCC 8 then tests `test_regressions_1794` and `test_ffuff_1` fail. ## Steps to Reproduce; The access attempt is visible by inspection at [forcefields/forcefielduff.cpp:1650](https://github.com/openbabel/openbabel/blob/master/src/forcefields/forcefielduff.cpp#L1650) (it's even commented), and the single-character deuterium atom type can be seen at [data/UFF.prm:152](https://github.com/openbabel/openbabel/blob/master/data/UFF.prm#L152). The test failures can be reproduced by building with g++ of GCC 8.3, and providing hardening options via the environment, then running the tests. For example,. ```; mkdir build; cd build; export CXXFLAGS=""-O2 -Wp,-D_GLIBCXX_ASSERTIONS""; cmake ..; make; make test; ```. ## Additional Comments; I discovered this while packaging OpenBabel into an RPM. By default, RedHat's rpm macros supply hardening options to software builds, including defining the `__GLIBCXX_ASSERTIONS` macro.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2223:280,test,tests,280,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2223,5,['test'],"['test', 'tests']"
Testability,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 8.1. ## Expected Behavior; After a successful build, all tests should pass. ## Actual Behavior. > 99% tests passed, 1 tests failed out of 229; > ; > Total Test time (real) = 137.16 sec; > ; > The following tests FAILED:; > 218 - pytest_distgeom (Failed); > . ## Steps to Reproduce; 1. Perform an ordinary `cmake` / `make` build.; 2. in the build directory, run `make test`. ## Additional Comments; On CentOS 8, the test runner apparently recognizes that the platform Python is Python 3.6, and uses that to run this test. Running the failing test directly with Python 3 also fails, and this shows that the issue arises from incorrect (for Python 3) character escaping. The same test passes in the same environment when run with Python 2.7.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2217:232,test,tests,232,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2217,10,"['Test', 'test']","['Test', 'test', 'tests']"
Testability,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: HEAD (since 8940c9af51650b188185b05652d334d6a52827ca ); Operating system and version: Ubuntu 18.04. ## Expected Behavior; In 124d99c191493c376fa71daee0395d7a4b81be36 , we would see the atom names and chain for a pdb file when iterating over atoms, for my example below, you would see atom name and then chain. ```; N19; A; C10; A; C6 ; A; C5 ; A; C32; A; N33; A; C4 ; A; C3 ; A; C2 ; A; CL1 ; A; C7 ; A; HN19; A; H10; A; H10A; A; H32; A; H32A; A; HN33; A; HN3A; A; H4 ; A; H3 ; A; H7 ; A; H2 ; A; ```. ## Actual Behavior; We have a blank chain and elements as atom names. ```; N ; ; C ; ; C ; ; C ; ; C ; ; N ; ; C ; ; C ; ; C ; ; CL ; ; C ; ; H ; ; H ; ; H ; ; H ; ; H ; ; H ; ; H ; ; H ; ; H ; ; H ; ; H ; ; ```. ## Steps to Reproduce; We use the file test/files/00T_ideal_het.pdb in the openbabel for the example. ```; import pybel. mol = next(pybel.readfile('pdb', 'src/openbabel/test/files/00T_ideal_het.pdb')); for atom in mol:; print(atom.residue.OBResidue.GetAtomID(atom.OBAtom)); print(atom.residue.OBResidue.GetChain()); ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1912:885,test,test,885,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1912,2,['test'],['test']
Testability,"- [X] Reaching Out; - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Oracle Enterprise Linux 8.1.4; SWIG Version: 4.0.2; PHP Version: 8.1.4. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Using SWIG Development version 4.1 to build PHP wrapper. Worked perfectly with SWIG 4.0.2 and PHP 7.4.x. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; No PHP wrapper being generated. Not sure if this is a SWIG issue or an OpenBabel issue; We had posted and issue on [SWIG 2270](https://github.com/swig/swig/issues/2270) . ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2469:1002,test,test,1002,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2469,1,['test'],['test']
Testability,"- [X] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: macOS El Capitan 10.11.6. I have been trying to perform a conformer search using confab in openbabel. However, I am getting some duplicates (390 conformers in total). I would like to know if I can somehow select the lower energy conformers (maybe the 30 lowest in energy) and save them in a separate sdf file. Also, is it possible to eliminate the duplicates or sort the conformers by energy?. my commands:. To generate the conformers:; obabel input.sdf -O confs.sdf --confab --conf 100000 --verbose. ..Input format = sdf; ..Output format = sdf; ..RMSD cutoff = 0.5; ..Energy cutoff = 50; ..Conformer cutoff = 100000; ..Write input conformation? False; ..Verbose? True. **Molecule 1; ..title = try; ..number of rotatable bonds = 6; ....rotor 1 from 5 to 6 has 3 values; ....rotor 2 from 6 to 7 has 3 values; ....rotor 3 from 2 to 5 has 3 values; ....rotor 4 from 7 to 8 has 3 values; ....rotor 5 from 1 to 2 has 3 values; ....rotor 6 from 8 to 9 has 3 values; ..tot conformations = 729; ..tot confs tested = 729; ..below energy threshold = 390; ....tree size = 483 confs = 390; ....new tree size = 821 confs = 390; ..generated 390 conformers. To minimize the obtained conformers:; obabel confs.sdf -O confs_min.sdf --minimize --steps 1500 --sd --log. Thank you!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2274:1117,test,tested,1117,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2274,2,"['log', 'test']","['log', 'tested']"
Testability,"- [x ] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows 10 (20H2). ## Expected Behavior; Expect that a peptide sequence provided in FASTA format will be converted to SMILES, as reported in the supplement to the paper by Iwaniak, A., Minkiewicz, P., Darewicz, M., Sieniawski, K., & Starowicz, P. (2016). BIOPEP database of sensory peptides and amino acids. Food Research International, 85, 155-161. doi: 10.1016/j.foodres.2016.04.031). ## Actual Behavior; As also reported by shahik and fredrikw in issue ""smiles to fasta conversion"" #2359, the peptide sequence is converted to a nonsense open SMILES. For example the following input:. `>Test ARFF`; `ARFF`. produces the following SMILES output (either in the output pane or the GUI or in a file) :. `[H].[N].[C].[C].[O].[C].[H].[H].[H].[H].[H].[N].[C].[C].[O].[C].[C].[C].[N].[C].[N].[N].[H].[H].[H].[H].[H].[H].[H].[H].[H].[H].[H].[H].[H].[N].[C].[C].[O].[C].[C].[C].[C].[C].[C].[C].[H].[H].[H].[H].[H].[H].[H].[H].[H].[N].[C].[C].[O].[C].[C].[C].[C].[C].[C].[C].[H].[H].[H].[H].[H].[H].[H].[H].[H].[O].[H]`. However, **IF** the 'Display in firefox' option is enabled before doing the conversion, then the output is instead:. `N[C@H](C(=O)N[C@H](C(=O)N[C@H](C(=O)N[C@H](C(=O)O)Cc1ccccc1)Cc1ccccc1)CCCNC(=[NH2])N)C`. which creates the correct peptide structure when pasted into Marvin Sketch. Also, by default OpenBabel expects the FASTA to contain nucleotide sequences not amino acid sequences, so the input:. `>Test AR`; `AR`. produces the output:. `O[P@@](=O)([O])OC[C@H]1O[C@H](C[C@@H]1O[P@@](=O)([O])OC[C@H]1O[C]([C][C]1O)N1[C]=NC2=[C]N=C([N])N=C12)n1cnc2c(N)ncnc12.O[P@@](=O)([O])OC[C@H]1O[C@H](C[C@@H]1O[P@@](=O)([O])OC[C@H]1O[C@H](C[C@@H]1O)n1c(=O)[nH]c(=O)c(C)c1)N1C(=O)N=[C][C]=C1`. which does not represent the required peptide. I couldn't see any way to make OpenBabel treat the input FASTA as a peptide sequence, although it may exist. I guess provid",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2367:725,Test,Test,725,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2367,1,['Test'],['Test']
Testability,"- [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 2.4.1 and 3.1.1; Operating system and version: ubuntu 20.4 LTS; Hardware Architecture: ARM64. ## Expected Behavior; I expect to convert the following `test.inchi` file which has the following content:; ```; InChI=1S/C24H27NO5S/c1-13-14(2)21-18(15(3)20(13)26)9-10-24(4,30-21)12-29-17-7-5-16(6-8-17)11-19-22(27)25-23(28)31-19/h5-8,19,26H,9-12H2,1-4H3,(H,25,27,28); ```; to its smiles format, using the following command:; ```; obabel -iinchi test.inchi -osmi; ```. ## Actual Behavior; Obabel freezes on `ARM64`. Though, it's working fine on `x86_x64` architecture",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2314:249,test,test,249,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2314,2,['test'],['test']
Testability,"- [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1 (`master`); Operating system and version: Ubuntu 20.04. ## Expected Behavior; Calling the `.formula` attribute in Pybel should reflect the *current* state of the molecule. ## Actual Behavior; In Pybel, if you have called `.formula` once and then try to alter the molecule (adding/removing hydrogens), it will not update the `.formula` attribute. This happens because if the `""Formula""` attribute is already set, then `GetFormula()` just returns that attribute. One method of solving this would be to clear the `""Formula""` attribute when changes are made to the molecule. In my testing cases, this was only with `.addh()` and `.removeh()` (Discovered while testing for #2363.), but perhaps there are other modifying functions that would need to clear the `""Formula""` attribute?. ## Steps to Reproduce. ```python; >>> from openbabel import pybel; >>> mol = pybel.readstring(""smi"", ""C.[Ru]""); >>> mol.formula; 'CRu'; >>> mol.addh() # adding H after getting .formula; >>> mol.formula # attr(""Formula"") is already set, so not created; 'CRu'; >>> ; >>> mol = pybel.readstring(""smi"", ""C.[Ru]""); >>> mol.addh(); >>> mol.formula; 'CH4Ru'; >>> mol.removeh(); >>> mol.formula; 'CH4Ru'. ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2364:681,test,testing,681,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2364,2,['test'],['testing']
Testability,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1 ; Operating system and version: CentOS release 6.4 (Final). ## Expected Behavior; Extraction of coordinates from formatted checkpoint file of Gaussian 09:; ```; obabel -ifck b97d3tzvpp.optfreq.fchk -oxyz -O b97d3tzvpp.optfreq.xyz; ```. ## Actual Behavior; Produces the following error:; ```; ==============================; *** Open Babel Error in FCHKFormat::ReadMolecule(); Could not read the dipole moment from line #2524.; 0 molecules converted; ```. ## Steps to Reproduce. The issue seems to arise from the multiplicity 2 and the `freq` keyword. A normal optimisation has no issue in the conversion. The example is for the methyl radical, but can be reproduced for other radicals. (I'll test higher multiplicities if I have a chance.). The corresponding log file also has no problem. The corresponding files are attached:. - [b97d3tzvpp.optfreq.log](https://github.com/openbabel/openbabel/files/1577802/b97d3tzvpp.optfreq.log); - [b97d3tzvpp.optfreq.fchk.zip](https://github.com/openbabel/openbabel/files/1577811/b97d3tzvpp.optfreq.fchk.zip); - [b97d3tzvpp.optfreq.gjf.zip](https://github.com/openbabel/openbabel/files/1577812/b97d3tzvpp.optfreq.gjf.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1730:829,test,test,829,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1730,4,"['log', 'test']","['log', 'test']"
Testability,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: OS X 10.10.5. ## Expected Behavior; I expect that computing the ECFP2 fingerprint of a molecule should return the same list of values no matter how many times it is called. . ## Actual Behavior; On my machine the following reports a greater than 50% chance of getting a different list. (Both lists are sorted, and the same length, but there 2 values in the first list which aren't in the second, and vice versa.) ECFP4 and ECFP6 are also affected. With ECFP0 the lists are always identical. ## Steps to Reproduce; Run the following and notice a non-zero number of failures. ```; from __future__ import print_function; import openbabel as ob; import pybel. # PubChem 30000494 (but not limited to this case); mol = pybel.readstring(""smi"", ""CC1=C(C(=CC=C1)C)NC(=O)CN2CCN(CC2)CC(=O)N3CCC4=C(C3)C=CS4""); obmol = mol.OBMol. ob_fingerprint = ob.OBFingerprint.FindFingerprint(""ECFP2""). fp = ob.vectorUnsignedInt(); ob_fingerprint.GetFingerprint(obmol, fp); values1 = list(fp). num_tests = num_failed = 0; for i in range(10000):; fp = ob.vectorUnsignedInt(); ob_fingerprint.GetFingerprint(obmol, fp); values2 = list(fp); num_tests += 1. if values1 != values2:; num_failed += 1. print(""Failed"", num_failed, ""tests out of"", num_tests); ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1557:1366,test,tests,1366,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1557,1,['test'],['tests']
Testability,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: Ubuntu 18.04 - 4.15.0-43-generic. I previously reported a possible bug related to the aromatic ring perception algorithm (issue 1920). But, as it was not the only case I found, I decided to perform a broader evaluation of other ligands while using PDB files and to report all the issues at once. The result of this analysis is in the attachment. As previously, I noticed that OpenBabel 2.3.2 generated a correct output for the molecule I was analyzing, then I also decide to use this version in my tests. In all tests, I used the openbabel 2.4.1 library (python) for creating an OBMol molecule and then I printed the smiles for each one of the inputs (listed below). To check for possible errors of valence, charge, etc, I used the tool Chemicalize from Chemaxon (the figures in the attachment were obtained with this tool). First, I extract the ligand from the PDB file (all ligands and ids were informed in the attached file). Four different inputs were used to create the OBMol object:; 1) A .mol file obtained by converting the extracted file using OpenBabel 2.3.2.; 2) A .mol file obtained by converting the extracted file using OpenBabel 2.4.1. ; 3) The .pdb file. Function used: readfile(""pdb"", file); 4) The .pdb file as a string. Function used: readstring(""pdb"", pdb_block). Besides it, for each ligand I also evaluated the impact of creating the molecule without hydrogens and adding hydrogens according to some pH value. In the excel file, you'll find a column with the ligand information, one to indicate if I had used hydrogens and other to inform at which pH the hydrogens were added. Also, four other columns were added (one for each input). The red cells indicate if there is an incorrect aromatic perception. I believe these results can help you guys to detect what are the possible causes for these errors. I have n",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1925:666,test,tests,666,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1925,2,['test'],['tests']
Testability,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: Ubuntu 18.04 - 4.15.0-43-generic. I tried to generate a SMILE string departing from the PDB file in attachment, but the program is generating an invalid output. I believe the problem is in the algorithm for aromatic ring perception as I also identified the same problem in other aromatic rings. In the attached example, the program does not identify one of the aromatic rings in the molecule X01 and generates an output containing a simple ring (not aromatic) and a Nitrogen (N04) with two double bonds. I also tested the same procedure in an older Open Babel version (2.3.2) and surprisingly the output generated was correct. Thus, I believe the bug was introduced in some of the newest versions. Outputs:; Version 2.4.1 (error): [N]1=C(N=C(NC=1)N)c1c(ccc(c1)C#N)O; Version 2.3.2 (ok): n1c(nc(nc1)N)c1c(ccc(c1)C#N)O. [error.txt](https://github.com/openbabel/openbabel/files/2757278/error.txt)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1920:679,test,tested,679,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1920,1,['test'],['tested']
Testability,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0 - 3.1.1 installed via conda (channel: conda-forge); Operating system and version: Linux, Macos, and Windows, all run via GitHub Actions. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; - I read a pdb structure from the PDB file and use SMARTS pattern to find matching atoms; - In macos and linux the atoms look good and are consistent (the same in both systems); - In windows the results are different; - all packages and versions are in the same in all tested systems. ## Actual Behavior; - I expect the results are the same in linux, macos, and windows. What I get is:. ```; # list of matching atoms:; ubuntu-20.04 | [3, 5, 7, 9, 11, 13, 18, 19, 22, 23, 26, 28, 30, 32, 34, 36, 41, 42, 45, 46]; macos-latest | [3, 5, 7, 9, 11, 13, 18, 19, 22, 23, 26, 28, 30, 32, 34, 36, 41, 42, 45, 46]; windows-latest | [1, 3, 5, 7, 9, 11, 13, 14, 18, 19, 21, 22, 23, 26, 28, 30, 32, 34, 36, 37, 41, 42, 44, 45, 46]; ```; results from GitHub actions are available here:; - [ubuntu](https://github.com/filipsPL/fingernat-openbabel-tests/runs/4582247794?check_suite_focus=true#step:5:7); - [macos](https://github.com/filipsPL/fingernat-openbabel-tests/runs/4582247852?check_suite_focus=true#step:5:7); - [windows](https://github.com/filipsPL/fingernat-openbabel-tests/runs/4582247885?check_suite_focus=true#step:5:7). ## Steps to Reproduce; Input pdb file and the script is available at: https://github.com/filipsPL/fingernat-openbabel-tests; - [the input pdb file for tests](https://raw.githubusercontent.com/filipsPL/fingernat-openbabel-tests/main/GG.pdb); - [the script](https://github.com/filipsPL/fingernat-openbabel-tests/blob/main/openbabel-smarts-tests.py)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2439:633,test,tested,633,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2439,9,['test'],"['tested', 'tests']"
Testability,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: CentOS-7.7. ## Expected Behavior; tests pass. ## Actual Behavior; test crashes at `testTemplates` in `testbindings.py`. I narrowed it down to the draw() function on the first and last smiles strings:; ""O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2""; ""O=C(CCN1C=CN=C1)N1C2CCC1CN(CC1CC3CCC1C3)C2"". I also tested with the most recent checkout from master, with the same results. The error is as follows:; ```; 186/190 Test #186: pybindtest_bindings ..............***Failed 0.29 sec; /tmp/vsc10009/build/OpenBabel/3.0.0/GCC-8.3.0-Python-3.7.4/openbabel-openbabel-3-0-0/scripts/python:/tmp/vsc10009/build/OpenBabel/3.0.0/GCC-8.3.0-Python-3.7.4/easybuild_obj/lib; ...==============================; *** Open Babel Warning in WriteMolecule; No 2D or 3D coordinates exist. Stereochemical information will be stored using an Open Babel extension. To generate 2D or 3D coordinates instead use --gen2D or --gen3D.; ....==============================; *** Open Babel Warning in ParseSmiles; Too many greater-than signs in SMILES string. ==============================; *** Open Babel Warning in ParseSmiles; Too many greater-than signs in SMILES string. ==============================; *** Open Babel Warning in ParseSmiles; Too many greater-than signs in SMILES string. ==============================; *** Open Babel Warning in ParseSmiles; Invalid reaction SMILES string: only a single '>' sign found (two required to be valid).; ==============================; *** Open Babel Warning in ParseSmiles; Invalid reaction SMILES string: only a single '>' sign found (two required to be valid).; ==============================; *** Open Babel Warning in ParseSmiles; Invalid reaction SMILES string: only a single '>' sign found (two required to be valid).; ..==============================; *** Open Babel Warning in IsValid; The molecule is not marked ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2138:202,test,tests,202,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2138,6,"['Test', 'test']","['Test', 'test', 'testTemplates', 'testbindings', 'tested', 'tests']"
Testability,- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Windows 10. Version 3.0.0 and master worked correct on Debian Linux. ## Expected Behavior; A PDBQT output file. ## Actual Behavior; A PDBQT with mangled coordinates. Record example:. ATOM 1 N UNL 1 2261608.7291334600.251 0.000 0.00 0.00 +0.000 NA. ## Steps to Reproduce. [test.smi.txt](https://github.com/openbabel/openbabel/files/3898807/test.smi.txt). ```sh; obabel -i smi test.smi.txt --ph 7.0 --gen3d -m -O test.pdbqt; ```,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2101:440,test,test,440,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2101,4,['test'],['test']
Testability,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0; Operating system and version: Linux Ubuntu 20.04, gcc 9.3. ## Expected Behavior. No memory leak in this program:. ```c++; #include <openbabel/mol.h>; #include <openbabel/obconversion.h>; int main(int argc,char **argv){; 	using namespace OpenBabel;; 	for(int i = 0; i != 10; ++i){; 		OBConversion in; ; 		in.SetInFormat(""xyz"");; 		OBMol m; ; 		in.ReadFile(&m, ""test.xyz"");; 	}; }; ```. ## Actual Behavior. 61,440 bytes are leaked. (this is proportional to the loop repetition, ~6k per read). ```bash; =2336866== Memcheck, a memory error detector; ==2336866== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.; ==2336866== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info; ==2336866== Command: ./example; ==2336866== ; ==2336866== ; ==2336866== HEAP SUMMARY:; ==2336866== in use at exit: 326,095 bytes in 737 blocks; ==2336866== total heap usage: 21,590 allocs, 20,853 frees, 2,471,446 bytes allocated; ==2336866== ; ==2336866== LEAK SUMMARY:; ==2336866== definitely lost: 61,440 bytes in 10 blocks; ==2336866== indirectly lost: 0 bytes in 0 blocks; ==2336866== possibly lost: 0 bytes in 0 blocks; ==2336866== still reachable: 264,655 bytes in 727 blocks; ==2336866== suppressed: 0 bytes in 0 blocks; ==2336866== Rerun with --leak-check=full to see details of leaked memory; ==2336866== ; ==2336866== For lists of detected and suppressed errors, rerun with: -s; ==2336866== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0); ```. This is a serious bug for users of the library that will process many files. ## Steps to Reproduce. compile the above example, run valgrind. ```bash; c++ example.cpp; valgrind ./a.out; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2370:496,test,test,496,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2370,1,['test'],['test']
Testability,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.0; Operating system and version: CentOS Linux 7 and Windows 10. ## Expected Behavior; I am trying to use openbabel to convert molecules from their SMILES format to their gaussian input format (.gjf) with 3D coordinates (--gen3d enabled). Tried different versions of openbabel: 2.4.1, 3.0, and the recent 3.1.0 release but all of these versions fail to accurately convert a type of structures. I am using Python 3 and openbabel through the command line. . ## Steps to Reproduce; For example, this is the line used:; obabel -:""C(=Cc1c2scnc2cc2ncsc12)c1cncc2ccccc12"" -O mol.gjf --gen3d. The expected structure: ; ![image](https://user-images.githubusercontent.com/28598792/81405058-82c89b00-9169-11ea-9fd1-b2a49c3a7471.png). ## Actual Behavior; For the example above, after the gjf file is obtained, this is its structure when visualized on Chem3D:; ![image](https://user-images.githubusercontent.com/28598792/81404718-be169a00-9168-11ea-8aa2-020ab861ccde.png). This is the error log:; ![image](https://user-images.githubusercontent.com/28598792/81405308-f7033e80-9169-11ea-9371-7a8df1fe6a40.png). Rings containing nitrogen, particularly azoles, would lose its aromaticity after the gjf conversion. This is a repeated problem for similar structures as well. Thank you for your help and for developing this tool and package. Cheers!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2210:1112,log,log,1112,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2210,1,['log'],['log']
Testability,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.3.1; Operating system and version: Ubuntu 20.04. ## Expected Behavior. Local installation of OpenBabel should have a working `~/lib/cmake/OpenBabel3.cmake`. ## Actual Behavior. Package configuration is found but then rejected later because of `maeparser` and `coordgen` not found. ```; Found package configuration file:. /home/correaa/lib/cmake/openbabel3/OpenBabel3Config.cmake. but it set OpenBabel3_FOUND to FALSE so package ""OpenBabel3"" is considered; to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing: maeparser; coordgen; ```. I tried to install `maeparser` (git, cmake, make install) but I get the same error. ## Steps to Reproduce. ```; git clone git@github.com:openbabel/openbabel.git; cd openbabel; mkdir build; cd build; cmake -DCMAKE_INSTALL_PREFIX:PATH=$HOME ..; make -j 10; make test; make install; ```; In a different directory have a `CMakeLists.txt` with the contents. ```; find_package(OpenBabel3 REQUIRED); ```; and run `cmake .`, gives:. ```; CMake Error at CMakeLists.txt:30 (find_package):; Found package configuration file:. /home/correaa/lib/cmake/openbabel3/OpenBabel3Config.cmake. but it set OpenBabel3_FOUND to FALSE so package ""OpenBabel3"" is considered; to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing: maeparser; coordgen; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2374:982,test,test,982,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2374,1,['test'],['test']
Testability,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Current master (`6d774e8`); Operating system and version: Ubuntu 18.04. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; We can use `OpenBabel::OBDistanceGeometry` if Eigen is installed properly. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; We can't use it. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; When we try to compile; ```cpp; #include <openbabel/distgeom.h>. int main(){; OpenBabel::OBDistanceGeometry dg;; }; ```; by ; ```; g++ -I /usr/local/include/openbabel3/ -L /usr/local/lib/openbabel/3.0.0/ test.cpp -lopenbabel; ```; we get an error: `error: ‘OBDistanceGeometry’ is not a member of ‘OpenBabel’`. There are two problems:; - `HAVE_EIGEN` is not defined when this code is compiled, so most of `openbabel/distgeom.h` is ignored.; - `LBFGS.h` is not installed properly when we run `make install`. If we define `HAVE_EIGEN` manually and specify the local pass of `LBFGS.h`, this code can be compiled, but I don't think it is an expected behavior.; ; I'm not sure how to fix these problems. Do you have any suggestions?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2098:761,test,test,761,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2098,2,['test'],['test']
Testability,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Openbabel 3.0.0 built from git today; Operating system and version: MacOS X 10.14.5. ## Expected Behavior; I am trying to convert a molecule with an alias from .smi into an .svg file. Without aliases, everything works fine. I was able to convert the molecules with some default aliases, but sometimes it broke and I got segfault. I created a minimalistic example to reproduce the behavior, see below. ## Actual Behavior; $ ./obabel test.smi -Otest.svg --genalias; Segmentation fault: 11. ## Steps to Reproduce; 0. Build openbabel; 1. Create test.smi file with smiles for thioanisole; $ echo 'c1ccccc1SC' > test.smi; 2. --genalias uses superatom.txt file, so modify it to make it minimalistic. I left only a thiomethyl group in it. In my setup, superatom.txt is here:; echo 'SMe MeS SC red' > /usr/local/share/openbabel/3.0.0/superatom.txt ; 3. ; $ ./obabel test.smi -Otest.svg --genalias; Segmentation fault: 11",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2095:563,test,test,563,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2095,4,['test'],['test']
Testability,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: git master; Operating system and version: Ubuntu 17.10. ## Expected Behavior; According to [the documentation](http://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html#string-descriptors), `obabel test/files/filterset.sdf -osmi --filter ""title<'129'""` should return 2 molecules, 123 and 126. ## Actual Behavior; No molecules are returned. ## Steps to Reproduce; $ obabel test/files/filterset.sdf -osmi --filter ""title<'129'""; 0 molecules converted",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1684:344,test,test,344,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1684,2,['test'],['test']
Testability,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. After #1930 fixed, OpenBabel which is submitted to conda-forge (conda-forge/staged-recipes#7754) has the last problem to resolve. OpenBabel builds pass on Linux, OSX, and Windows, but output `cannot write output format` on OSX for all Python versions. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: osx, darwin13.4.0, Clang 4.0.1. Python 2.7, 3.6, 3.7. ## Expected Behavior; +obabel -:c1ccccc1 --gen3d -omol2; 1 molecule converted; +obabel -:c1ccccc1 --gen3d -oinchi; 1 molecule converted; +obabel -:c1ccccc1 -opng -O img.png; 1 molecule converted. ## Actual Behavior; + obabel -:c1ccccc1 --gen3d -omol2; obabel: cannot write output format!; + obabel -:c1ccccc1 --gen3d -oinchi; obabel: cannot write output format!; + obabel -:c1ccccc1 -opng -O img.png; obabel: cannot write output format!. ## Steps to Reproduce; [Here is the log](https://dev.azure.com/conda-forge/feedstock-builds/_build/results?buildId=15911&view=logs). OpenBabel builds successfully but when testing it outputs `obabel: cannot write output format!`. Only `obabel -h` runs as expected.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1932:948,log,log,948,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1932,3,"['log', 'test']","['log', 'logs', 'testing']"
Testability,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. I submitted OpenBabel to conda-forge (conda-forge/staged-recipes#7754). The build passed on Linux, but Appveyor build failed on Windows. [Here is the whole log.](https://ci.appveyor.com/project/conda-forge/staged-recipes/builds/22373261). ## Environment Information; Open Babel version: 2.4.1; Operating system and version: win-64, py27, compiler=vs2008, see the log for details. ## Expected Behavior; The build passes. ## Actual Behavior; Too many errors. See [the log](https://ci.appveyor.com/project/conda-forge/staged-recipes/builds/22373261) for details. ## Steps to Reproduce; [The conda recipe is here](https://github.com/conda-forge/staged-recipes/pull/7754/files).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1930:239,log,log,239,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1930,3,['log'],['log']
Testability,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. I want to obtain 3D coordinates for a ring-containing molecule, e.g. cyclohexane. For this I use the following code:. import pybel as pb; mol = pb.readstring('smi', 'C1CCCCC1'); mol.make3D(steps = 500); mol.write('mol', 'C:/wd/test.mol', overwrite = True). I expect to see a chair conformation, but this is what i get:. ![cyhex](https://user-images.githubusercontent.com/17598902/30778533-01739fee-a0e1-11e7-80e0-024d9b7f1330.png). However, the use of the linux version gives a normal result.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1643:310,test,test,310,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1643,1,['test'],['test']
Testability,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. [cloud_init_openbabel.txt](https://github.com/openbabel/openbabel/files/3648942/cloud_init_openbabel.txt). ## Environment Information; Open Babel version: 2.4.1 and HEAD; Operating system and version: Ubuntu 18.04. ## Expected Behavior; make test to pass, pybel to work. ## Actual Behavior; pybindtest_bindings fails make test. Trying to import Pybel fails with:. > PYTHONPATH=/usr/local/lib/python2.7/dist-packages/openbabel/ python test.py; > Traceback (most recent call last):; > File ""test.py"", line 3, in <module>; > import pybel; > File ""/usr/local/lib/python2.7/dist-packages/openbabel/pybel.py"", line 51, in <module>; > from . import openbabel as ob; > ValueError: Attempted relative import in non-package; > . I wanted to verify that #1557 was fixed in HEAD, figure out what commit fixed it, and see if it the same issue as one I ran into in a different context (obabel command line), and maybe learn a little pybel at the same time. But I can't get pybel to run at all, and there is a possibly related regression test failure. . ## Steps to Reproduce. I've seen similar reports before, but they don't seem to go anywhere often due to reproducibility issues or problems with finding multiple libraries from different versions. To try to get around that I've attached a file that can be sent as ""user data"" to a AWS instance, this should make it very reproducible to anyone that uses AWS. I used Ubuntu 18.04 ami-05c1fa8df71875112 (64-bit x86), and m4.large or m4.xlarge size. If you aren't an AWS user, I hope it is easy enough to parse this file out into the steps. In the past I had issues with getting the environment right for ""make test"" to find the right .so files. By doing ""make install"" before ""make test"", I think it should get around that, and the final test I do should only use the installed files anyway.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2046:325,test,test,325,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2046,8,['test'],['test']
Testability,"- [x] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: 3.0; Operating system and version: all. ## Expected Behavior. Accessing molecule information should be `const`. ```c++; OBMol const mol = [&]{OBMol _; conv.ReadFile(&_, ""test.xyz""); return _;}();; std::cout << mol.GetMolWt() << std::endl; // should print. currently cannot be called in a `const` OBMol.; ```. _Of course I can be wrong and the accesing function is not constant to indicate internal static, non-thread safe variables (e.g. caches) being set. But I doubt, `const`-`non-const` seems to be inconsistent in the different object of the library. (for example OBUnitCell::GetCellVolume() is `const`, and also redundantly `non-const`, again it is fine if it has to do with internal cache data)_. ## Actual Behavior. GetMolWt cannot be called in a constant object, gives compilation error. ## Steps to Reproduce. ```c++; #include <openbabel/generic.h> // unitcell; #include <openbabel/mol.h>; #include <openbabel/obconversion.h>. #include <iostream>. using namespace std;. int main(int argc,char **argv){; 	using namespace OpenBabel;; 	OBConversion conv = []{OBConversion _; _.SetInFormat(""xyz""); return _;}();; 	OBMol mol = [&]{OBMol _; conv.ReadFile(&_, ""test.xyz""); return _;}();; 	std::cout << mol.GetMolWt() << std::endl;; }; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2369:301,test,test,301,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2369,2,['test'],['test']
Testability,"- [x] This is a feature request. ## Environment Information; Open Babel version: 3.1.1 (3.1.1+dfsg-6+1); Operating system and version: Linux Debian 12/bookworm (branch testing). ## Expected Behavior; ```bash; ~$ obabel -:""[S@@](O)(=O)(=O)CC(=O)OC(=O)c1c2[n](C)c3[n]1CC(=O)OC(=O)c4ccccc4.C3OC.C2O"" --errorlevel 6 -ocan; ==============================; *** Open Babel Warning in ParseSmiles; Invalid SMILES string: Failed to kekulize aromatic SMILES; 0 molecules converted; ``` ; Based on the [documentation](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html?highlight=errorlevel#options), I'm aware the `--errorlevel` extends over five levels. Thus, a sixth level either (still) is hypothetical, or already may be emulated by an approach not yet identified by mine. The effect intended is equivalent to the already existing «none» for e.g., the submission lacking explicit ring closure, and to skip such an entry:. ```bash; ~$ obabel -:""C1CC"" -ocan; ==============================; *** Open Babel Warning in ParseSmiles; Invalid SMILES string: 1 unmatched ring bonds. 0 molecules converted; ```. ## Actual Behavior; ```bash; ~$ obabel -:""[S@@](O)(=O)(=O)CC(=O)OC(=O)c1c2[n](C)c3[n]1CC(=O)OC(=O)c4ccccc4.C3OC.C2O"" --errorlevel 5 -ocan; ==============================; *** Open Babel Warning in ParseSmiles; Failed to kekulize aromatic SMILES. COC[C]1N(C)C(=C(N1CC(=O)OC(=O)c1ccccc1)C(=O)OC(=O)CS(=O)(=O)O)CO	; 1 molecule converted; ```. ## Steps to Reproduce; Processing some data with [Jmol](http://jmol.sourceforge.net/), I obtained SMILES strings copy-pasted into [CDKDepict](https://www.simolecule.com/cdkdepict/depict.html) for visualization. On occasion, the formulae are erroneous because SMILES submitted to CDKDepict were wrong ([example](https://github.com/cdk/depict/issues/38)). The mentioned SMILES string is a problematic because it leads to the depiction of an imidazole with Thiele ring (i.e. six pi electrons) _plus_ two additional electrons on nitrogen atoms (n",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2454:168,test,testing,168,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2454,1,['test'],['testing']
Testability,"- [x] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.1.1 -- Mar 29 2022 -- 00:37:58; Operating system and version: Linux Debian 12/bookworm (branch testing). ## Expected Behavior; When splitting e.g., one .pdb file including multiple models into multiple files about one individual model each, a file sort were eased if openbabel would account for the total of the models by leading (padding) zeros. E.g., if there are more than nine models and less than one hundred, to name the newly written files in a pattern of `split01.pdb`, `split02.pdb`, `split10.pdb`. By similar token, if there were more than 99 models and less than 1000, to use file names like `split001.pdb`, `split002.pdb`, `split010.pdb`, `split123.pdb`, etc. ## Actual Behavior; At present, files are named in a pattern like `split1.pdb`, `split2.pdb`, `split9.pdb`, `split10.pdb`, `split11.pdb` etc. with a variable number of characters though all of them are derived from the same multi-model .pdb. A recent example was splitting a multimodel .pdb ([here](https://github.com/openbabel/openbabel/issues/2472)). ## Steps to Reproduce; The .pdb `1NER` fetched from RCSB PDB ([entry](https://www.rcsb.org/structure/1NER)) was split into individual files by. ```bash; obabel 1ner.pdb -O split.pdb -m; ```. [test_split_pdb.zip](https://github.com/openbabel/openbabel/files/8667406/test_split_pdb.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2476:189,test,testing,189,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2476,1,['test'],['testing']
Testability,"- `from __future__ import print_function`; - replace deprecated `unittest.TestCase.assertEquals` with; `assertEqual`, `assertTrue`, or `assertFalse`; - use `obj is None` instead of `obj == None`; - remove modules and functions that are imported but not used",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1970:74,Test,TestCase,74,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1970,5,"['Test', 'assert']","['TestCase', 'assertEqual', 'assertEquals', 'assertFalse', 'assertTrue']"
Testability,- data/UFF.prm: Add line for atom type 'D'.; - src/forcefields/forcefielduff.cpp: Add checks to prevent segfaults.; - test/regressiontest.cpp: Add test case.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2114:118,test,test,118,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2114,2,['test'],['test']
Testability,- fix misuse of `unittest.TestCase.assert_`; - improve usages of `unitest.TestCase` methods,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2468:26,Test,TestCase,26,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2468,2,['Test'],['TestCase']
Testability,"-- Looking for rint - not found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - not found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Checking available shared pointer...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Success; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::shared_ptr in memory; -- Found Boost: /usr/include (found version ""1.75.0"") found components: program_options iostreams regex ; -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; -- Found Boost: /usr/include (found version ""1.75.0"") found components: filesystem iostreams unit_test_framework regex ; -- maeparser include dir set as 'maeparser_INCLUDE_DIRS-NOTFOUND'; -- maeparser libraries set as 'maeparser_LIBRARIES-NOTFOUND'; -- Downloaded MaeParser 'v1.2.3' to /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/maeparser-v1.2.3.; -- Found Boost: /usr/include (found version ""1.75.0"") found components: iostreams regex ; -- Using zlib library for iostreams dependency.; -- Maestro formats will be supported. Using MaeParser 'v1.2.3' at /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/maeparser-v1.2.3; -- coo",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2406:3726,Test,Test,3726,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406,6,['Test'],['Test']
Testability,"-- Maestro formats will be supported. Using MaeParser 'v1.2.3' at /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/maeparser-v1.2.3; -- coordgen include dir set as coordgen_INCLUDE_DIRS-NOTFOUND; -- coordgen libraries set as 'coordgen_LIBRARIES-NOTFOUND'; -- coordgen templates file set as 'coordgen_TEMPLATE_FILE-NOTFOUND'; -- Downloaded Coordgen 'master' to /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/coordgen-master.; -- Coordinate generation with Coordgen will be supported Using Coordgen 'master' at /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/coordgen-master; -- Found PkgConfig: /usr/bin/pkg-config (found version ""1.7.3"") ; -- Found RapidJSON: /usr/include (found suitable version ""1.1.0"", minimum required is ""1.1.0"") ; -- JSON formats will be supported. Using RapidJSON 1.1.0 at /usr/include; -- Checking for module 'cairo'; -- Found cairo, version 1.17.4; -- Found Cairo: /usr/lib64/libcairo.so ; -- Cairo found. PNG output will be supported.; -- Found Boost: /usr/include (found suitable version ""1.75.0"", minimum required is ""1.45.0"") found components: system ; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Check if compiler accepts -pthread; -- Check if compiler accepts -pthread - yes; -- Found Threads: TRUE ; -- Found Boost: /usr/include (found version ""1.75.0"") found components: program_options iostreams regex ; -- Looking for getopt; -- Looking for getopt - found; -- Attempting to build the GUI; -- wxWidgets found => GUI will be built; -- Found PythonInterp: /usr/bin/python3 (found version ""3.9.6"") ; -- Found SWIG: /usr/bin/swig (found version ""4.0.2"") ; -- Found SWIG: /usr/bin/swig (found suitable version ""4.0.2"", minimum required is ""2.0"") ; -- Found PythonLibs: /usr/lib64/libpython3.9.so (found version ""3.9.6"") ; -- Python bindings will be compiled; -- Configuring done; -- Generating done. ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2406:5961,Test,Test,5961,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406,2,['Test'],['Test']
Testability,"-- Using included inchi library.; -- WARNING: you are using the obsolete 'PKGCONFIG' macro use FindPkgConfig; -- Found LibXml2: /usr/lib/libxml2.so; -- Found ZLIB: /usr/lib/libz.so; -- Found wxWidgets: TRUE; -- Looking for conio.h; -- Looking for conio.h - not found; -- Looking for sys/time.h; -- Looking for sys/time.h - found; -- Looking for time.h; -- Looking for time.h - found; -- Looking for strings.h; -- Looking for strings.h - found; -- Looking for rpc/xdr.h; -- Looking for rpc/xdr.h - found; -- Looking for regex.h; -- Looking for regex.h - found; -- Looking for C++ include sstream; -- Looking for C++ include sstream - found; -- Looking for rint; -- Looking for rint - not found.; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - not found.; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Could NOT find Eigen2; -- checking for module 'cairo'; -- found cairo, version 1.6.4; -- Found Cairo: /usr/lib/libcairo.so; -- Cairo found. PNG output will be supported.; -- Looking for getopt; -- Looking for getopt - found; -- Attempting to build the GUI; -- wxWidgets found => GUI will be built; -- Found PythonInterp: /usr/bin/python2.5; CMake Error: Error in cmake code at; /home/henritzi/src/openbabel/scripts/CMakeLists.txt:285:; Parse error. Function missing ending "")"". Instead found left paren with text ""("".; -- Configuring done. Original comment by: *anonymous",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1111#issuecomment-281800645:1890,Test,Test,1890,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1111#issuecomment-281800645,4,['Test'],['Test']
Testability,"------ Build started: Project: OBError, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; cl : Command line warning D9035 : option 'Wp64' has been deprecated and will be removed in a future release; tokenst.cpp; plugin.cpp; loader.cpp; Linking...; Creating library ..\oberror.lib and object ..\oberror.exp; Generating code; Finished generating code; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBError\Release\BuildLog.htm""; OBError - 0 error(s), 1 warning(s); ------ Build started: Project: OBDLL, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; transform3d.cpp; ..\..\src\math\transform3d.cpp(58) : warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; transform.cpp; spacegroup.cpp; rotor.cpp; rotamer.cpp; ring.cpp; residue.cpp; pointgroup.cpp; ..\..\src\pointgroup.cpp(1087) : warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; phmodel.cpp; patty.cpp; parsmart.cpp; obutil.cpp; obiter.cpp; molchrg.cpp; mol.cpp; kekulize.cpp; griddata.cpp; grid.cpp; generic.cpp; descriptor.cpp; Generating Code...; Compiling...; data.cpp; chiral.cpp; chains.cpp; canon.cpp; ..\..\src\canon.cpp(188) : warning C4305: '+=' : truncation from 'double' to 'float'; builder.cpp; bondtyper.cpp; bond.cpp; base.cpp; atom.cpp; alias.cpp; Generating Code...; Compiling...; typer.cpp; Linking...; Creating library ../OBDLL.lib and object ../OBDLL.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDLL\Release\BuildLog.htm""; OBDLL - 0 error(s), 3 warning(s); ------ Build started: Project: OBConv, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; format.cpp; Compiling...; obconversion.cpp; Linking...; Creating library ../OBC",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/773:456,log,log,456,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/773,1,['log'],['log']
Testability,"-----; ERROR: Command errored out with exit status 1: 'c:\program files\python37\python.exe' -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""'; __file__='""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record 'C:\Users\kovalp\AppData\Local\Temp\pip-record-o_uehc4w\install-record.txt' --single-version-externally-managed --compile Check the logs for full command output. <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2018:3971,test,test,3971,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018,1,['test'],['test']
Testability,"--; test 60; Start 60: test_gzip_1; --; 60: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; 60: ../src/obconversion.cpp:302:24: runtime error: load of value 255, which is not a valid value for type 'bool'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 61; Start 61: test_addh_1; --; 61: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 61: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 62; Start 62: test_implicitH_1; --; 62: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 62: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 66; Start 66: test_lssr_4; --; 66: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 66: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 67; Start 67: test_lssr_5; --; 67: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 67: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 72; Start 72: test_isomorphism_5; --; 72: ../src/obconversion.cpp:302:24: runtime error: load of value 53, which is not a valid value for type 'bool'; 72: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 73; Start 73: test_isomorphism_6; --; 73: ../src/obconversion.cpp:302:24: runtime error: load of value 52, which is not a valid value for type 'bool'; 73: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:3",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:6536,test,test,6536,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,-ig03 does not handle logfiles with nosym keyword,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1157:22,log,logfiles,22,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1157,1,['log'],['logfiles']
Testability,"-to-date, 0 skipped ==========. OBPythonOBF: (skip - requires swig). ------ Build started: Project: OBPythonOBF, Configuration: Release Win32 ------; Running SWIG to generate openbabel-python_wrap.cpp; 'swig' is not recognized as an internal or external command,; operable program or batch file.; Project : error PRJ0019: A tool returned an error code from ""Running SWIG to generate openbabel-python_wrap.cpp""; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBPythonOBF\Release\BuildLog.htm""; OBPythonOBF - 1 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 6 up-to-date, 0 skipped ==========. OBUtilFormats:. ------ Build started: Project: OBUtilFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; titleformat.cpp; reportformat.cpp; povrayformat.cpp; pngformat.cpp; molreport.cpp; copyformat.cpp; Generating Code...; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBUtilFormats\Release\BuildLog.htm""; OBUtilFormats - 0 error(s), 0 warning(s); ========== Build: 1 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. OBXMLFormats:. ------ Build started: Project: OBXMLFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; xmlformat.cpp; xml.cpp; thermoformat.cpp; rxnformat.cpp; ../../include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such . file or directory; rsmiformat.cpp; ../../include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such . file or directory; pubchem.cpp; cmlreactformat.cpp; ../../include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such . file or directory; cmlformat.cpp; ../../include\openbabel/reaction.h(26) : fatal error C1083: C",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:12079,log,log,12079,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['log'],['log']
Testability,". ========== Build: 0 succeeded, 0 failed, 3 up-to-date, 0 skipped ==========. OBDLL:. ========== Build: 0 succeeded, 0 failed, 2 up-to-date, 0 skipped ==========. OBError:. ========== Build: 0 succeeded, 0 failed, 1 up-to-date, 0 skipped ==========. OBFPRT:. ========== Build: 0 succeeded, 0 failed, 3 up-to-date, 0 skipped ==========. OBGUI: (skip - requires wxwidgets). ------ Build started: Project: OBGUI, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; OBGUI.cpp; ..\..\src\gui\stdwx.h(22) : fatal error C1083: Cannot open include file: 'wx/wxprec.h': No such file or directory; stdwx.cpp; ..\..\src\gui\stdwx.h(22) : fatal error C1083: Cannot open include file: 'wx/wxprec.h': No such file or directory; optswx.cpp; ..\..\src\gui\stdwx.h(22) : fatal error C1083: Cannot open include file: 'wx/wxprec.h': No such file or directory; Generating Code...; Project : warning PRJ0018 : The following environment variables were not found:; $(WXWIN); Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBGUI\release\BuildLog.htm""; OBGUI - 3 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 2 up-to-date, 0 skipped ==========. OBInchi:. ------ Build started: Project: OBInchi, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; inchiformat.cpp; getinchi.cpp; Linking...; Generating code; Finished generating code; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBInchi\Release\BuildLog.htm""; OBInchi - 0 error(s), 0 warning(s); ========== Build: 1 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. OBJava: (skip - requires swig). ------ Build started: Project: OBJava, Configuration: Release Win32 ------; Swigify; 'swig' is not recognized as an internal or external command,; operable program or batch file.; Project : error PRJ0019: A tool returne",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:4549,log,log,4549,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['log'],['log']
Testability,. Start 5: tetranonplanar_Test. 5/37 Test #5: tetranonplanar_Test .............. Passed 0.00 sec. Start 6: tetraplanar_Test. 6/37 Test #6: tetraplanar_Test ................. Passed 0.00 sec. Start 7: cistrans_Test. 7/37 Test #7: cistrans_Test ....................***Exception: SegFault 0.02 sec. Start 8: stereoperception_Test. 8/37 Test #8: stereoperception_Test ............ Passed 0.03 sec. Start 9: aromatest_Test. 9/37 Test #9: aromatest_Test ...................***Exception: SegFault 0.03 sec. Start 10: atom_Test. 10/37 Test #10: atom_Test ........................ Passed 0.00 sec. Start 11: bond_Test. 11/37 Test #11: bond_Test ........................ Passed 0.00 sec. Start 12: cansmi_Test. 12/37 Test #12: cansmi_Test ...................... Passed 1.27 sec. Start 13: cmlreadfile_Test. 13/37 Test #13: cmlreadfile_Test ................. Passed 0.02 sec. Start 14: conversion_Test. 14/37 Test #14: conversion_Test .................. Passed 0.01 sec. Start 15: datatest_Test. 15/37 Test #15: datatest_Test .................... Passed 0.00 sec. Start 16: ffghemical_Test. 16/37 Test #16: ffghemical_Test ..................***Failed 0.01 sec. Start 17: ffmmff94_Test. 17/37 Test #17: ffmmff94_Test ....................***Failed 0.01 sec. Start 18: ffuff_Test. 18/37 Test #18: ffuff_Test .......................***Failed 0.01 sec. Start 19: formalcharge_Test. 19/37 Test #19: formalcharge_Test ................ Passed 0.12 sec. Start 20: format_Test. 20/37 Test #20: format_Test ...................... Passed 0.01 sec. Start 21: formula_Test. 21/37 Test #21: formula_Test ..................... Passed 0.21 sec. Start 22: internalcoord_Test. 22/37 Test #22: internalcoord_Test ............... Passed 0.00 sec. Start 23: invalidsmarts_Test. 23/37 Test #23: invalidsmarts_Test ............... Passed 0.00 sec. Start 24: invalidsmiles_Test. 24/37 Test #24: invalidsmiles_Test ............... Passed 0.01 sec. Start 25: iterators_Test. 25/37 Test #25: iterators_Test ................... Passed 0.13 ,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:2176,Test,Test,2176,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability,. Start 6: tetraplanar_Test. 6/37 Test #6: tetraplanar_Test ................. Passed 0.00 sec. Start 7: cistrans_Test. 7/37 Test #7: cistrans_Test ....................***Exception: SegFault 0.02 sec. Start 8: stereoperception_Test. 8/37 Test #8: stereoperception_Test ............ Passed 0.03 sec. Start 9: aromatest_Test. 9/37 Test #9: aromatest_Test ...................***Exception: SegFault 0.03 sec. Start 10: atom_Test. 10/37 Test #10: atom_Test ........................ Passed 0.00 sec. Start 11: bond_Test. 11/37 Test #11: bond_Test ........................ Passed 0.00 sec. Start 12: cansmi_Test. 12/37 Test #12: cansmi_Test ...................... Passed 1.27 sec. Start 13: cmlreadfile_Test. 13/37 Test #13: cmlreadfile_Test ................. Passed 0.02 sec. Start 14: conversion_Test. 14/37 Test #14: conversion_Test .................. Passed 0.01 sec. Start 15: datatest_Test. 15/37 Test #15: datatest_Test .................... Passed 0.00 sec. Start 16: ffghemical_Test. 16/37 Test #16: ffghemical_Test ..................***Failed 0.01 sec. Start 17: ffmmff94_Test. 17/37 Test #17: ffmmff94_Test ....................***Failed 0.01 sec. Start 18: ffuff_Test. 18/37 Test #18: ffuff_Test .......................***Failed 0.01 sec. Start 19: formalcharge_Test. 19/37 Test #19: formalcharge_Test ................ Passed 0.12 sec. Start 20: format_Test. 20/37 Test #20: format_Test ...................... Passed 0.01 sec. Start 21: formula_Test. 21/37 Test #21: formula_Test ..................... Passed 0.21 sec. Start 22: internalcoord_Test. 22/37 Test #22: internalcoord_Test ............... Passed 0.00 sec. Start 23: invalidsmarts_Test. 23/37 Test #23: invalidsmarts_Test ............... Passed 0.00 sec. Start 24: invalidsmiles_Test. 24/37 Test #24: invalidsmiles_Test ............... Passed 0.01 sec. Start 25: iterators_Test. 25/37 Test #25: iterators_Test ................... Passed 0.13 sec. Start 26: logp_psa_Test. 26/37 Test #26: logp_psa_Test ....................***Exception: Se,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:2271,Test,Test,2271,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability,"..... Passed 0.00 sec. Start 23: invalidsmarts_Test. 23/37 Test #23: invalidsmarts_Test ............... Passed 0.00 sec. Start 24: invalidsmiles_Test. 24/37 Test #24: invalidsmiles_Test ............... Passed 0.01 sec. Start 25: iterators_Test. 25/37 Test #25: iterators_Test ................... Passed 0.13 sec. Start 26: logp_psa_Test. 26/37 Test #26: logp_psa_Test ....................***Exception: SegFault 0.02 sec. Start 27: math_Test. 27/37 Test #27: math_Test ........................ Passed 0.13 sec. Start 28: mol_Test. 28/37 Test #28: mol_Test ......................... Passed 0.02 sec. Start 29: phmodel_Test. 29/37 Test #29: phmodel_Test .....................***Exception: SegFault 0.05 sec. Start 30: residue_Test. 30/37 Test #30: residue_Test ..................... Passed 0.03 sec. Start 31: ringtest_Test. 31/37 Test #31: ringtest_Test .................... Passed 0.13 sec. Start 32: smartstest_Test. 32/37 Test #32: smartstest_Test .................. Passed 0.21 sec. Start 33: smilesmatch_Test. 33/37 Test #33: smilesmatch_Test .................***Exception: SegFault 1.44 sec. Start 34: unitcell_Test. 34/37 Test #34: unitcell_Test .................... Passed 0.00 sec. Start 35: pytest_babel. 35/37 Test #35: pytest_babel .....................***Failed 0.03 sec. Start 36: pytest_sym. 36/37 Test #36: pytest_sym ....................... Passed 0.08 sec. Start 37: pytest_fastsearch. 37/37 Test #37: pytest_fastsearch ................***Failed 0.03 sec. 68% tests passed, 12 tests failed out of 37. Total Test time (real) = 4.23 sec. The following tests FAILED:. 	 2 - smiles_Test (SEGFAULT). 	 3 - stereo_Test (SEGFAULT). 	 7 - cistrans_Test (SEGFAULT). 	 9 - aromatest_Test (SEGFAULT). 	 16 - ffghemical_Test (Failed). 	 17 - ffmmff94_Test (Failed). 	 18 - ffuff_Test (Failed). 	 26 - logp_psa_Test (SEGFAULT). 	 29 - phmodel_Test (SEGFAULT). 	 33 - smilesmatch_Test (SEGFAULT). 	 35 - pytest_babel (Failed). 	 37 - pytest_fastsearch (Failed). Makio. Original comment by: makio323",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:3896,Test,Test,3896,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,9,"['Test', 'test']","['Test', 'tests']"
Testability,........ Passed 0.00 sec. Start 11: bond_Test. 11/37 Test #11: bond_Test ........................ Passed 0.00 sec. Start 12: cansmi_Test. 12/37 Test #12: cansmi_Test ...................... Passed 1.27 sec. Start 13: cmlreadfile_Test. 13/37 Test #13: cmlreadfile_Test ................. Passed 0.02 sec. Start 14: conversion_Test. 14/37 Test #14: conversion_Test .................. Passed 0.01 sec. Start 15: datatest_Test. 15/37 Test #15: datatest_Test .................... Passed 0.00 sec. Start 16: ffghemical_Test. 16/37 Test #16: ffghemical_Test ..................***Failed 0.01 sec. Start 17: ffmmff94_Test. 17/37 Test #17: ffmmff94_Test ....................***Failed 0.01 sec. Start 18: ffuff_Test. 18/37 Test #18: ffuff_Test .......................***Failed 0.01 sec. Start 19: formalcharge_Test. 19/37 Test #19: formalcharge_Test ................ Passed 0.12 sec. Start 20: format_Test. 20/37 Test #20: format_Test ...................... Passed 0.01 sec. Start 21: formula_Test. 21/37 Test #21: formula_Test ..................... Passed 0.21 sec. Start 22: internalcoord_Test. 22/37 Test #22: internalcoord_Test ............... Passed 0.00 sec. Start 23: invalidsmarts_Test. 23/37 Test #23: invalidsmarts_Test ............... Passed 0.00 sec. Start 24: invalidsmiles_Test. 24/37 Test #24: invalidsmiles_Test ............... Passed 0.01 sec. Start 25: iterators_Test. 25/37 Test #25: iterators_Test ................... Passed 0.13 sec. Start 26: logp_psa_Test. 26/37 Test #26: logp_psa_Test ....................***Exception: SegFault 0.02 sec. Start 27: math_Test. 27/37 Test #27: math_Test ........................ Passed 0.13 sec. Start 28: mol_Test. 28/37 Test #28: mol_Test ......................... Passed 0.02 sec. Start 29: phmodel_Test. 29/37 Test #29: phmodel_Test .....................***Exception: SegFault 0.05 sec. Start 30: residue_Test. 30/37 Test #30: residue_Test ..................... Passed 0.03 sec. Start 31: ringtest_Test. 31/37 Test #31: ringtest_Test ....................,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:2740,Test,Test,2740,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability,.................................................... benchmark name samples iterations est run time; mean low mean high mean; std dev low std dev high std dev; -------------------------------------------------------------------------------; NumBonds / GetBond 100 56 1.3272 ms ; 244.13 ns 241.171 ns 248.033 ns ; 17.2515 ns 13.6996 ns 20.423 ns ; ; OBMolBondIter 100 62 1.3268 ms ; 218.45 ns 215.996 ns 221.761 ns ; 14.4162 ns 11.4463 ns 17.2281 ns ; ; BeginBond / NextBond 100 114 1.3338 ms ; 120.307 ns 119.038 ns 122.127 ns ; 7.69576 ns 5.91677 ns 9.36035 ns ; ; FOR_BONDS_OF_MOL 100 348 1.3224 ms ; 38.5333 ns 38.3025 ns 38.9516 ns ; 1.55949 ns 0.938391 ns 2.30401 ns ; ; BeginBonds / EndBonds 100 352 1.3024 ms ; 37.2908 ns 36.905 ns 37.8549 ns ; 2.35191 ns 1.75338 ns 2.92314 ns ; ; GetBonds 100 348 1.3224 ms ; 37.7961 ns 37.3666 ns 38.3528 ns ; 2.48275 ns 2.02509 ns 2.91912 ns ; . -------------------------------------------------------------------------------; iterators-atom-bond; -------------------------------------------------------------------------------; /home/timvdm/openbabel-benchmark/main.cpp:168; ............................................................................... benchmark name samples iterations est run time; mean low mean high mean; std dev low std dev high std dev; -------------------------------------------------------------------------------; OBAtomBondIter 100 9 1.3851 ms ; 1.60022 us 1.58045 us 1.62492 us ; 112.515 ns 94.3982 ns 129.009 ns ; ; BeginBond / NextBond 100 17 1.36 ms ; 809.956 ns 803.673 ns 820.129 ns ; 39.3122 ns 27.1928 ns 52.9569 ns ; ; FOR_BONDS_OF_ATOM 100 79 1.3272 ms ; 175.51 ns 173.628 ns 178.167 ns ; 11.3124 ns 8.75191 ns 13.7801 ns ; ; BeginBonds / EndBonds 100 78 1.326 ms ; 173.413 ns 171.365 ns 176.226 ns ; 12.1837 ns 9.54524 ns 14.7505 ns ; ; GetBonds 100 109 1.3298 ms ; 125.818 ns 124.27 ns 127.769 ns ; 8.80802 ns 7.1704 ns 10.2525 ns ; . ------------------------------------------------------------------------------,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2635#issuecomment-1773759180:2498,benchmark,benchmark,2498,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2635#issuecomment-1773759180,1,['benchmark'],['benchmark']
Testability,......................................................... benchmark name samples iterations est run time; mean low mean high mean; std dev low std dev high std dev; -------------------------------------------------------------------------------; NumAtoms / GetAtom 100 57 1.3395 ms ; 239.704 ns 237.452 ns 242.998 ns ; 13.6856 ns 10.255 ns 17.355 ns ; ; OBMolAtomIter 100 63 1.3356 ms ; 213.093 ns 211.359 ns 215.806 ns ; 10.8516 ns 7.52759 ns 14.4128 ns ; ; BeginAtom / NextAtom 100 115 1.334 ms ; 119.102 ns 117.784 ns 120.949 ns ; 7.96645 ns 6.23579 ns 9.59511 ns ; ; FOR_ATOMS_OF_MOL 100 366 1.3176 ms ; 37.0429 ns 36.6542 ns 37.5867 ns ; 2.33947 ns 1.81348 ns 2.8415 ns ; ; BeginAtoms / EndAtoms 100 321 1.3161 ms ; 37.5913 ns 37.0588 ns 38.2691 ns ; 3.02309 ns 2.49616 ns 3.52564 ns ; ; GetAtoms 100 348 1.3224 ms ; 37.13 ns 36.7279 ns 37.7013 ns ; 2.4104 ns 1.85212 ns 2.89647 ns ; . -------------------------------------------------------------------------------; iterators-mol-bond; -------------------------------------------------------------------------------; /home/timvdm/openbabel-benchmark/main.cpp:103; ............................................................................... benchmark name samples iterations est run time; mean low mean high mean; std dev low std dev high std dev; -------------------------------------------------------------------------------; NumBonds / GetBond 100 56 1.3272 ms ; 244.13 ns 241.171 ns 248.033 ns ; 17.2515 ns 13.6996 ns 20.423 ns ; ; OBMolBondIter 100 62 1.3268 ms ; 218.45 ns 215.996 ns 221.761 ns ; 14.4162 ns 11.4463 ns 17.2281 ns ; ; BeginBond / NextBond 100 114 1.3338 ms ; 120.307 ns 119.038 ns 122.127 ns ; 7.69576 ns 5.91677 ns 9.36035 ns ; ; FOR_BONDS_OF_MOL 100 348 1.3224 ms ; 38.5333 ns 38.3025 ns 38.9516 ns ; 1.55949 ns 0.938391 ns 2.30401 ns ; ; BeginBonds / EndBonds 100 352 1.3024 ms ; 37.2908 ns 36.905 ns 37.8549 ns ; 2.35191 ns 1.75338 ns 2.92314 ns ; ; GetBonds 100 348 1.3224 ms ; 37.7961 ns 37.3666 ns 38.3528 ns ; 2,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2635#issuecomment-1773759180:1351,benchmark,benchmark,1351,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2635#issuecomment-1773759180,1,['benchmark'],['benchmark']
Testability,"..............F..................................................; ======================================================================; FAIL: test_default (__main__.TestPCJSON); ----------------------------------------------------------------------; Traceback (most recent call last):; File ""test/testobconv_writers.py"", line 2761, in test_default; self.assertWriters(self.fmt, """"""\; File ""test/testobconv_writers.py"", line 258, in assertWriters; test_write_string(self, mol, conv, expected_output, normalize); File ""test/testobconv_writers.py"", line 165, in test_write_string; test_case.assertMultiLineEqual(output.replace(""\r\n"", ""\n""), expected_output.replace(""\r\n"", ""\n"")); AssertionError: '{\n [1926 chars]102014\n ],\n ""y"": [[1070 chars]]\n}' != '{\n [1926 chars]102012\n ],\n ""y"": [[1070 chars]]\n}'; {; ""PC_Compounds"": [; {; ""atoms"": {; ""aids"": [; 1,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""element"": [; 6,; 6,; 6,; 6,; 6,; 6,; 8,; 1,; 1,; 1,; 1,; 1,; 1; ]; },; ""bonds"": {; ""aid1"": [; 1,; 1,; 2,; 3,; 4,; 5,; 6,; 1,; 2,; 3,; 4,; 5,; 7; ],; ""aid2"": [; 6,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""order"": [; 2,; 1,; 2,; 1,; 2,; 1,; 1,; 1,; 1,; 1,; 1,; 1,; 1; ]; },; ""coords"": [; {; ""type"": [; 1; ],; ""aids"": [; 1,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""conformers"": [; {; ""x"": [; 1.5846,; 1.5703,; 2.4295,; 3.3031,; 3.3175,; 0.0,; -1.0005,; 2.313816216007316,; 0.669250157347277,; 2.4146659588503769,; 4.189331679349326,; 4.052466878708012,; - -1.4648575597102014; ? ^; + -1.4648575597102012; ? ^; ],; ""y"": [; 1.5846,; 1.5703,; 2.4295,; 3.3031,; 3.3175,; 0.0,; -1.0005,; 2.313816216007316,; 0.669250157347277,; 2.4146659588503769,; 4.189331679349326,; 4.052466878708012,; - -1.4648575597102014; ? ^; + -1.4648575597102012; ? ^; ],; ""style"": {; ""annotation"": [; 8,; 8,; 8,; 8,; 8,; 8; ],; ""aid1"": [; 1,; 1,; 2,; 3,; 4,; 5; ],; ""aid2"": [; 6,; 2,; 3,; 4,; 5,; 6; ]; }; }; ]; }; ],; ""charge"": 0; }; ]; }. ```. ## Steps to Reproduce; See e.g.:; ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2246:1100,Assert,AssertionError,1100,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2246,1,['Assert'],['AssertionError']
Testability,"....and it would be great to have a test case (e.g. in testbindings.py) for; each of the formats supported. Actually, I was going to suggest merging yours first. But either way :-). On 13 July 2017 at 14:17, Matt Swain <notifications@github.com> wrote:. > Yeah, makes sense, just a little more work!; >; > I'll wait until Noel's new element handling code is merged first,; > otherwise there will be a clash.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/pull/1596#issuecomment-315074903>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGSHXO--H1lTOs2Jjog3ul8eFE1DAks5sNhkCgaJpZM4OO2xn>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1596#issuecomment-315080216:36,test,test,36,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1596#issuecomment-315080216,2,['test'],"['test', 'testbindings']"
Testability,"../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 66: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 67; Start 67: test_lssr_5; --; 67: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 67: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 72; Start 72: test_isomorphism_5; --; 72: ../src/obconversion.cpp:302:24: runtime error: load of value 53, which is not a valid value for type 'bool'; 72: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 73; Start 73: test_isomorphism_6; --; 73: ../src/obconversion.cpp:302:24: runtime error: load of value 52, which is not a valid value for type 'bool'; 73: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 74; Start 74: test_isomorphism_7; --; 74: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 74: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 82; Start 82: test_regressions_1; --; 82: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 82: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 82: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 82: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; --; test 83; Start 83: test_regressions_221; --; 83: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:7562,test,test,7562,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,./../bin/obgui; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/buildertest.o; //usr/lib/x86_64-linux-gnu/libharfbuzz.so.0: undefined reference to `FT_Get_Var_Blend_Coordinates'; //usr/lib/x86_64-linux-gnu/libgtk-3.so.0: undefined reference to `g_log_structured_standard'; //usr/lib/x86_64-linux-gnu/libcairo.so.2: undefined reference to `FT_Get_Var_Design_Coordinates'; collect2: error: ld returned 1 exit status; src/GUI/CMakeFiles/obgui.dir/build.make:149: recipe for target 'bin/obgui' failed; make[2]: *** [bin/obgui] Error 1; CMakeFiles/Makefile2:6751: recipe for target 'src/GUI/CMakeFiles/obgui.dir/all' failed; make[1]: *** [src/GUI/CMakeFiles/obgui.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/canonconsistenttest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/canonstabletest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/carspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cifspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cistranstest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/graphsymtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/gziptest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/implicitHtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/lssrtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/isomorphismtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/multicmltest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/regressionstest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/rotortest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/shuffletest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/smilestest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/spectrophoretest.o; [ 92%] Building CXX object test/CMakeFiles/test_r,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:51983,test,test,51983,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,"./obcommon.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCommonFormats\Release\BuildLog.htm""; OBCommonFormats - 0 error(s), 0 warning(s); ------ Build started: Project: FastSearch, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFS\Release\BuildLog.htm""; FastSearch - 0 error(s), 0 warning(s); ========== Build: 2 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. gen3D:. ------ Build started: Project: OBDESC, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; smartsdescriptors.cpp; optransform.cpp; groupcontrib.cpp; filters.cpp; cmpdfilter.cpp; Generating Code...; Linking...; Creating library ../OBDESC.lib and object ../OBDESC.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDESC\Release\BuildLog.htm""; OBDESC - 0 error(s), 0 warning(s); ------ Build started: Project: gen3D, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; gen3d.cpp; Linking...; Generating code; Finished generating code; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\gen3D\Release\BuildLog.htm""; gen3D - 0 error(s), 0 warning(s); ========== Build: 2 succeeded, 0 failed, 2 up-to-date, 0 skipped ==========. OBCommonFormats:. ========== Build: 0 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. OBConsole:. ------ Build started: Project: OBConsole, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; babel.cpp; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBConsole",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:1762,log,log,1762,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['log'],['log']
Testability,"./src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 62: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 66; Start 66: test_lssr_4; --; 66: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 66: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 67; Start 67: test_lssr_5; --; 67: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 67: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 72; Start 72: test_isomorphism_5; --; 72: ../src/obconversion.cpp:302:24: runtime error: load of value 53, which is not a valid value for type 'bool'; 72: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 73; Start 73: test_isomorphism_6; --; 73: ../src/obconversion.cpp:302:24: runtime error: load of value 52, which is not a valid value for type 'bool'; 73: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 74; Start 74: test_isomorphism_7; --; 74: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 74: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 82; Start 82: test_regressions_1; --; 82: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 82: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 82: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 82: SUMMARY: UndefinedBehaviorSanitizer: unde",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:7306,test,test,7306,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,".01 sec. Start 19: formalcharge_Test. 19/37 Test #19: formalcharge_Test ................ Passed 0.12 sec. Start 20: format_Test. 20/37 Test #20: format_Test ...................... Passed 0.01 sec. Start 21: formula_Test. 21/37 Test #21: formula_Test ..................... Passed 0.21 sec. Start 22: internalcoord_Test. 22/37 Test #22: internalcoord_Test ............... Passed 0.00 sec. Start 23: invalidsmarts_Test. 23/37 Test #23: invalidsmarts_Test ............... Passed 0.00 sec. Start 24: invalidsmiles_Test. 24/37 Test #24: invalidsmiles_Test ............... Passed 0.01 sec. Start 25: iterators_Test. 25/37 Test #25: iterators_Test ................... Passed 0.13 sec. Start 26: logp_psa_Test. 26/37 Test #26: logp_psa_Test ....................***Exception: SegFault 0.02 sec. Start 27: math_Test. 27/37 Test #27: math_Test ........................ Passed 0.13 sec. Start 28: mol_Test. 28/37 Test #28: mol_Test ......................... Passed 0.02 sec. Start 29: phmodel_Test. 29/37 Test #29: phmodel_Test .....................***Exception: SegFault 0.05 sec. Start 30: residue_Test. 30/37 Test #30: residue_Test ..................... Passed 0.03 sec. Start 31: ringtest_Test. 31/37 Test #31: ringtest_Test .................... Passed 0.13 sec. Start 32: smartstest_Test. 32/37 Test #32: smartstest_Test .................. Passed 0.21 sec. Start 33: smilesmatch_Test. 33/37 Test #33: smilesmatch_Test .................***Exception: SegFault 1.44 sec. Start 34: unitcell_Test. 34/37 Test #34: unitcell_Test .................... Passed 0.00 sec. Start 35: pytest_babel. 35/37 Test #35: pytest_babel .....................***Failed 0.03 sec. Start 36: pytest_sym. 36/37 Test #36: pytest_sym ....................... Passed 0.08 sec. Start 37: pytest_fastsearch. 37/37 Test #37: pytest_fastsearch ................***Failed 0.03 sec. 68% tests passed, 12 tests failed out of 37. Total Test time (real) = 4.23 sec. The following tests FAILED:. 	 2 - smiles_Test (SEGFAULT). 	 3 - stereo_Test (SEGFAUL",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:3505,Test,Test,3505,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability,".0; Operating system and version: Ubuntu 18.04. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; No floating point exception. I think there needs to be a check in vector3::normalize() for zero vectors since it is very hard to guarantee that no callers ever have a zero vector. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior --> . vector3::normalize() gets a zero vector. Thread 3 ""bfd-server-debu"" received signal SIGFPE, Arithmetic exception.; [Switching to Thread 0x7ffff5fc2700 (LWP 9010)]; 0x0000000000dc98c9 in OpenBabel::vector3::normalize() (); (gdb) bt; #0 0x0000000000dc98c9 in OpenBabel::vector3::normalize() (); #1 0x0000000000e0543f in OpenBabel::OBBuilder::GetNewBondVector(OpenBabel::OBAtom*, double) (); #2 0x0000000000b4723b in OpenBabel::OBMol::AddNewHydrogens(OpenBabel::HydrogenType, bool, double); (); #3 0x0000000000d1b06f in OpenBabel::OBGroupContrib::Predict(OpenBabel::OBBase*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) (); ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; This happens with any PDB structure containing the PA0 ligand (e.g. 3E3Z), a phenyl ring with arsenic attached. Getting the logP property. Example code (the 'content' string contains a mol format string with the PA0 compound:. std::ios_base::openmode imode = std::ios_base::in|std::ios_base::binary;; std::ios_base::openmode omode = std::ios_base::out|std::ios_base::binary;; std::stringstream ssi(content, imode);; std::stringstream sso("""", omode);; OpenBabel::OBConversion conv(&ssi, &sso);; OpenBabel::OBFormat* molformat = conv.FindFormat(""",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2088:2074,test,test,2074,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2088,1,['test'],['test']
Testability,".com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.0 (conda); Operating system and version: (Linux, Debian 10). ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Elements should be parsed correctly when reading the file, independently of the number of characters in the element symbol. . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; When parsing structures with two-letter elements (i.e. Cl, Fe, Mg,...) the atomic number is set to 0 (other parameters might be missing, too; not tested). ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. The code below has been tested with PDB entries 1r6j, 333d, 5ix0 in both formats 'pdb' and 'cif'. ```; import sys; import os; from openbabel import openbabel as ob; i = sys.argv[1]; name, ext = os.path.splitext(i); ext = ext[1:].lower(); r = ob.OBConversion(); r.SetInFormat(ext); mol = ob.OBMol(); r.ReadFile(mol, i); for a in ob.OBMolAtomIter(mol):; if a.GetAtomicNum()==0:; res = a.GetResidue(); print(""AAA"", a.GetIdx(), res.GetAtomID(a)); ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2294:1342,test,tested,1342,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2294,3,['test'],"['test', 'tested']"
Testability,.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/datatest.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffgaff.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffghemical.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffmmff94.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffuff.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formalcharge.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/format.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formula.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/internalcoord.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmarts.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmiles.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/iterators.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/logp_psa.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/math.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/mol.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/phmodel.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/residue.o; [ 98%] Building CXX object te,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:54298,test,test,54298,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,".h - found; -- Looking for time.h; -- Looking for time.h - found; -- Looking for strings.h; -- Looking for strings.h - found; -- Looking for rpc/xdr.h; -- Looking for rpc/xdr.h - found; -- Looking for regex.h; -- Looking for regex.h - found; -- Looking for C++ include sstream; -- Looking for C++ include sstream - found; -- Looking for rint; -- Looking for rint - not found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - not found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Checking available shared pointer...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::tr1::shared_ptr in tr1/memory; -- Found PkgConfig: /usr/bin/pkg-config (found version ""0.27.1"") ; -- Checking for module 'cairo'; -- No package 'cairo' found; -- Could NOT find Cairo (missing: CAIRO_LIBRARIES CAIRO_INCLUDE_DIRS) ; -- Could NOT find Cairo. PNG output will NOT be supported.; -- Looking for getopt; -- Looking for getopt - found; -- Attempting to build the GUI; -- wxWidgets not found => GUI will not be built; -- Found PythonInterp: /apps/python/intelpython2018.3/intelpython3/bin/python (found version ""3.6.3"") ;",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1919:3092,Test,Test,3092,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1919,4,['Test'],['Test']
Testability,".h - found; -- Looking for time.h; -- Looking for time.h - found; -- Looking for strings.h; -- Looking for strings.h - found; -- Looking for rpc/xdr.h; -- Looking for rpc/xdr.h - found; -- Looking for regex.h; -- Looking for regex.h - found; -- Looking for C++ include sstream; -- Looking for C++ include sstream - found; -- Looking for rint; -- Looking for rint - not found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - not found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Checking available shared pointer...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Success; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::shared_ptr in memory; -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; -- Found PkgConfig: /usr/bin/pkg-config (found version ""1.6.1"") ; -- Found RapidJSON: /usr/include (found suitable version ""1.1.0"", minimum required is ""1.1.0"") ; -- JSON formats will be supported. Using RapidJSON 1.1.0 at /usr/include; -- Checking for module 'cairo'; -- Found cairo, version 1.16.0; -- Found Cairo: /usr/lib64/libcairo.so ; -- Cairo found. PNG output will be supported.; -- Looking for getopt; -- Looking for ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1996:2515,Test,Test,2515,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1996,4,['Test'],['Test']
Testability,".h - found; -- Looking for time.h; -- Looking for time.h - found; -- Looking for strings.h; -- Looking for strings.h - found; -- Looking for rpc/xdr.h; -- Looking for rpc/xdr.h - found; -- Looking for regex.h; -- Looking for regex.h - found; -- Looking for C++ include sstream; -- Looking for C++ include sstream - found; -- Looking for rint; -- Looking for rint - not found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - not found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Checking available shared pointer...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Success; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::shared_ptr in memory; -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0""); -- Found PkgConfig: /usr/bin/pkg-config (found version ""0.28""); -- Checking for module 'cairo'; -- Found cairo, version 1.14.10; -- Found Cairo: /usr/lib64/libcairo.so; -- Cairo found. PNG output will be supported.; -- Looking for getopt; -- Looking for getopt - found; -- Attempting to build the GUI; -- wxWidgets not found => GUI will not be built; -- Found PythonInterp: /usr/bin/python (found version ""3.6.2""); -- Configurin",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1780:1611,Test,Test,1611,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1780,4,['Test'],['Test']
Testability,"//github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. <!-- - [ ] I believe this to be a bug with Open Babel -->; - [x] This is a feature request. ## Environment Information; Open Babel version: 3.1.1 -- Jun 10 2021 -- 04:27:50; Operating system and version: Debian GNU/Linux 11 (bullseye). ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Jensen [lists here](https://molecularmodelingbasics.blogspot.com/2016/05/automating-calculations-pka-predictions.html) a few test structures encoded as SMILES which are to be converted by OpenBabel into `.xyz` with 3D information. Cyclic structures should pass smoothly the conversion (yet occasionally they do not and issue warnings). Is there an other way to ""sanitize"" SMILES than passing them to RDKit (*vide infra*), perhaps in OpenBabel itself?. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The conversion of; * `C[C@H]1CC[N@@]2CCC[C@@H]12`; * `C[C@H]1[C@@H]2[C@@H](C(N(C)C2=O)=O)C3[N@]1CCC3`; * `C[C@H]1[C@@H]2[C@@H](C(N(C)C2=O)=O)C3[N@H+]1CCC3`. in line of; ```; obabel -:""C[C@H]1[C@@H]2[C@@H](C(N(C)C2=O)=O)C3[N@H+]1CCC3"" --gen3D -h -oxyz; ```; yield warnings like; ```; *** Open Babel Warning in CorrectStereoAtoms; Could not correct 2 stereocenter(s) in this molecule (); with Atom Ids as follows: 2 3; Warning: Stereochemistry is wrong, using the distance geometry method instead; ```; while e.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2393:1037,test,test,1037,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2393,1,['test'],['test']
Testability,"/10948687/6564527/ceb96ec8-c67f-11e4-813a-cfdbbf30bc30.png; > > ; > > And the Cmake Log is like following:; > > Using included inchi library.; > > checking for module 'cairo'; > > package 'cairo' not found; > > Could NOT find Cairo. PNG output will NOT be supported.; > > GUI will not be built; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:14; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:39; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ;",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:1601,test,test,1601,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['test'],['test']
Testability,"/10948687/6564527/ceb96ec8-c67f-11e4-813a-cfdbbf30bc30.png; > > ; > > And the Cmake Log is like following:; > > Using included inchi library.; > > checking for module 'cairo'; > > package 'cairo' not found; > > Could NOT find Cairo. PNG output will NOT be supported.; > > GUI will not be built; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:14; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:39; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape; > > sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:1615,test,test,1615,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,1,['test'],['test']
Testability,/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/datatest.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffgaff.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffghemical.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffmmff94.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffuff.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formalcharge.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/format.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formula.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/internalcoord.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmarts.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmiles.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/iterators.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/logp_psa.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/math.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/mol.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/phmodel.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/residue.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/ringtest.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/smartstest.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/smartsparse.o; [ 99%] Building CXX objec,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:54512,test,test,54512,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,/RelWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; Unable to find executable: /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; 1/193 Test #1: unittest .........................***Not Run 0.00 sec. ```; After copying I get:; ```; Start 1: unittest; 1/193 Test #1: unittest ......................... Passed 0.09 sec; ```; I guess one potential difference could be that I'm aiming to do a local build in my home directory. I build with:; ```; cmake .. -DCMAKE_INSTALL_PREFIX=/home/kevin/software/openbabel/3.0.0; -DPYTHON_BINDINGS=ON -DENABLE_TESTS=ON -DPYTHON_EXECUTABLE=/usr/bin/python3; -DRUN_SWIG=ON -DBOOST_ROOT=/usr/include/boost169 -DBOOST_,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137:1890,test,test,1890,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137,1,['test'],['test']
Testability,/Users/felixgrun/Desktop/TestFormats/PDBQT_outputs.txt. Original comment by: fgrun,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1088#issuecomment-281800204:25,Test,TestFormats,25,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1088#issuecomment-281800204,1,['Test'],['TestFormats']
Testability,"/data.o -c /var/tmp/portage/sci-chemistry/openbabel-2.3.2-r1/work/openbabel-2.3.2/src/data.cpp; make[2]: *** [src/CMakeFiles/openbabel.dir/build.make:63: src/CMakeFiles/openbabel.dir/alias.o] Error 1; make[2]: *** Waiting for unfinished jobs....; make[2]: Leaving directory '/var/tmp/portage/sci-chemistry/openbabel-2.3.2-r1/work/openbabel-2.3.2_build'; make[1]: *** [CMakeFiles/Makefile2:1196: src/CMakeFiles/openbabel.dir/all] Error 2; make[1]: Leaving directory '/var/tmp/portage/sci-chemistry/openbabel-2.3.2-r1/work/openbabel-2.3.2_build'; make: *** [Makefile:141: all] Error 2; ```. My full build log (showing the source configuration using cmake and the entire compilation output) is [here](https://paste.pound-python.org/show/UBYYuKH3qSq84yOe2ux4/). . `emerge -pqv '=sci-chemistry/openbabel-2.3.2-r1::gentoo'` returns (to show the USE flags, which affect configure options, refer to the ebuild linked earlier for how):. ```bash; [ebuild N ] sci-chemistry/openbabel-2.3.2-r1 USE=""openmp wxwidgets -doc {-test}""; ```. The output of `emerge --info '=sci-chemistry/openbabel-2.3.2-r1::gentoo'` (which will show details about my Gentoo system, like compiler options):. ```bash; Portage 2.3.5 (python 3.4.6-final-0, default/linux/amd64/13.0/desktop/plasma/systemd, gcc-6.3.0, glibc-2.24-r1, 4.11.0-gentoo x86_64); =================================================================; System Settings; =================================================================; System uname: Linux-4.11.0-gentoo-x86_64-Intel-R-_Core-TM-_i7-4700MQ_CPU_@_2.40GHz-with-gentoo-2.3; KiB Mem: 16344248 total, 10297040 free; KiB Swap: 0 total, 0 free; sh bash 4.4_p12; ld GNU ld (Gentoo 2.27 p1.0) 2.27; app-shells/bash: 4.4_p12::gentoo; dev-java/java-config: 2.2.0-r3::gentoo; dev-lang/perl: 5.24.1-r1::gentoo; dev-lang/python: 2.7.13::gentoo, 3.4.6::gentoo; dev-util/cmake: 3.8.1::gentoo; dev-util/pkgconfig: 0.29.2::gentoo; sys-apps/baselayout: 2.3::gentoo; sys-apps/openrc: 0.26.1::gentoo; sys-apps/sandbox: 2.10-r",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1566:6304,test,test,6304,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1566,1,['test'],['test']
Testability,/home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; home/kevin2/builds/openbabel/op,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137:1234,test,test,1234,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137,1,['test'],['test']
Testability,/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; Unable to find executable,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137:1312,test,test,1312,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137,1,['test'],['test']
Testability,"/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DA",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:16917,test,test,16917,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,2,['test'],"['test', 'testbindings']"
Testability,/obgui] Error 1; CMakeFiles/Makefile2:6751: recipe for target 'src/GUI/CMakeFiles/obgui.dir/all' failed; make[1]: *** [src/GUI/CMakeFiles/obgui.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/canonconsistenttest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/canonstabletest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/carspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cifspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cistranstest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/graphsymtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/gziptest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/implicitHtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/lssrtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/isomorphismtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/multicmltest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/regressionstest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/rotortest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/shuffletest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/smilestest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/spectrophoretest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/squareplanartest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereotest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereoperceptiontest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tautomertest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object t,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:52509,test,test,52509,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,/obrotate.dir/obrotate.o; [ 84%] Linking CXX executable ../bin/obthermo; [ 84%] Built target obthermo; Scanning dependencies of target obprobe; [ 85%] Building CXX object tools/CMakeFiles/obprobe.dir/obprobe.o; [ 85%] Linking CXX executable ../bin/obrotate; [ 85%] Built target obrotate; Scanning dependencies of target obsym; [ 86%] Building CXX object tools/CMakeFiles/obsym.dir/obsym.o; [ 86%] Linking CXX executable ../bin/obprobe; [ 86%] Built target obprobe; Scanning dependencies of target obminimize; [ 86%] Building CXX object tools/CMakeFiles/obminimize.dir/obminimize.o; [ 86%] Linking CXX executable ../bin/obsym; [ 86%] Built target obsym; Scanning dependencies of target obtautomer; [ 86%] Building CXX object tools/CMakeFiles/obtautomer.dir/obtautomer.o; [ 86%] Linking CXX executable ../bin/obminimize; [ 86%] Built target obminimize; Scanning dependencies of target obgui; [ 86%] Linking CXX executable ../bin/obtautomer; [ 86%] Built target obtautomer; Scanning dependencies of target test_inchiwrite; [ 86%] Building CXX object test/CMakeFiles/test_inchiwrite.dir/inchiwrite.o; [ 86%] Building CXX object src/GUI/CMakeFiles/obgui.dir/OBGUI.o; [ 86%] Building CXX object test/CMakeFiles/test_inchiwrite.dir/__/src/formats/getinchi.o; [ 87%] Linking CXX executable ../bin/test_inchiwrite; [ 87%] Built target test_inchiwrite; [ 88%] Building CXX object src/GUI/CMakeFiles/obgui.dir/stdwx.o; [ 88%] Building CXX object src/GUI/CMakeFiles/obgui.dir/optswx.o; Scanning dependencies of target test_runner; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.o; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.o; [ 88%] Linking CXX executable ../../bin/obgui; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/buildertest.o; //usr/lib/x86_64-linux-gnu/libharfbuzz.so.0: undefined reference to `FT_Get_Var_Blend_Coordinates'; //usr/lib/x86_64-linux-gnu/libgtk-3.so.0: undefined reference to `g_log_structured_standard'; //usr/lib/x86_,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:50326,test,test,50326,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,/obtautomer.dir/obtautomer.o; [ 86%] Linking CXX executable ../bin/obminimize; [ 86%] Built target obminimize; Scanning dependencies of target obgui; [ 86%] Linking CXX executable ../bin/obtautomer; [ 86%] Built target obtautomer; Scanning dependencies of target test_inchiwrite; [ 86%] Building CXX object test/CMakeFiles/test_inchiwrite.dir/inchiwrite.o; [ 86%] Building CXX object src/GUI/CMakeFiles/obgui.dir/OBGUI.o; [ 86%] Building CXX object test/CMakeFiles/test_inchiwrite.dir/__/src/formats/getinchi.o; [ 87%] Linking CXX executable ../bin/test_inchiwrite; [ 87%] Built target test_inchiwrite; [ 88%] Building CXX object src/GUI/CMakeFiles/obgui.dir/stdwx.o; [ 88%] Building CXX object src/GUI/CMakeFiles/obgui.dir/optswx.o; Scanning dependencies of target test_runner; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.o; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.o; [ 88%] Linking CXX executable ../../bin/obgui; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/buildertest.o; //usr/lib/x86_64-linux-gnu/libharfbuzz.so.0: undefined reference to `FT_Get_Var_Blend_Coordinates'; //usr/lib/x86_64-linux-gnu/libgtk-3.so.0: undefined reference to `g_log_structured_standard'; //usr/lib/x86_64-linux-gnu/libcairo.so.2: undefined reference to `FT_Get_Var_Design_Coordinates'; collect2: error: ld returned 1 exit status; src/GUI/CMakeFiles/obgui.dir/build.make:149: recipe for target 'bin/obgui' failed; make[2]: *** [bin/obgui] Error 1; CMakeFiles/Makefile2:6751: recipe for target 'src/GUI/CMakeFiles/obgui.dir/all' failed; make[1]: *** [src/GUI/CMakeFiles/obgui.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/canonconsistenttest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/canonstabletest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/carspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cifsp,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:51025,test,test,51025,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,"/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.0; Operating system and version: . ## Expected Behavior; I was trying to calculate point charges using Extended charge equilibration method(Eqeq) in openbabel with the snippet given in the link: https://github.com/numat/EQeq. My input is a cif file generated from openbabel.(attached LOSXIC.txt)[LOSXIC.txt](https://github.com/openbabel/openbabel/files/2434628/LOSXIC.txt); Doesnt work for LOSXIC and also other such type of files file but works for NaCl.cif file which is also attached [nacl.txt](https://github.com/openbabel/openbabel/files/2434642/nacl.txt); The charges are supposed to be printed as numbers.; ## Actual Behavior; But I am getting the following as output:; [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]; Is there a particular format of cif file to be used as input? ; ![error](https://user-images.githubusercontent.com/43755377/46299408-8feed280-c5a1-11e8-8acf-4c2088dbf379.png). ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1893:2044,test,test,2044,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1893,1,['test'],['test']
Testability,"/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: OpenBabel 3.1.1+git2f34bda337d7ddefa8f2bebfc23931a63e45241f; Operating system and version: Ubuntu 18.04. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; - The build process should be completed without any errors. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; - It causes error like:; [error-deps.log](https://github.com/openbabel/openbabel/files/9179914/error-deps.log). ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; - Build maeparser and install it on ../libmaeparser-1.2.4-220427; - Build coordgenlibs and install it on ../coordgenlibs-3.0.0-220427; - Run following command to try the build process:; `; mkdir build-openbabel; cd build-openbabel; cmake \; -DCMAKE_INSTALL_PREFIX=../openbabel-3.1.1-220621 \; -DBUILD_SHARED=OFF \; -DBUILD_MIXED=ON \; -DWITH_STATIC_INCHI=ON \; -DWITH_STATIC_LIBXML=ON \; -DWITH_COORDGEN=ON \; -DENABLE_OPENMP=ON \; -Dmaeparser_DIR=../libmaeparser-1.2.4-220427 \; -Dcoordgen_DIR=../coordgenlibs-3.0.0-220427 \; ../openbabel; `; `; cmake --build . --config Release -j; `; ## How to fix; - Apply following patch. It does not tested on any other linux distribution or OS than Ubuntu 18.04.; [adjust-dep",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2513:1144,log,log,1144,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2513,1,['log'],['log']
Testability,"/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: 3.1.0. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. I expected and assumed that by generating partial charges using the Gasteiger method for a specific conformation of a particular molecule, I would always obtain identical partial charges. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. However, this is not the case. Can anyone explain why?. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```; from openbabel import pybel; import rdkit; from rdkit import Chem; from rdkit.Chem import AllChem; from rdkit.Chem import rdDistGeom; ```; Generating 10 conformers; ```; ligand_smiles = 'CC(=O)OC1=CC=CC=C1C(=O)O' # example SMILES; rdkit_mol = Chem.MolFromSmiles(ligand_smiles); rdkit_mol = Chem.AddHs(rdkit_mol); rdDistGeom.EmbedMultipleConfs(rdkit_mol,10, randomSeed=0xf00d); rdkit_mol = Chem.RemoveHs(rdkit_mol); n_confs = rdkit_mol.GetNumConformers(); ```. ```; mol_blocks = [Chem.MolToV3KMolBlock(rdkit_mol,confId=i) for i in range(n_confs)]; pybel_conformers = [pybel.readstring('mol',mol_block) for mol_block in mol_blocks]; charges = [pybel_conformers[0].calccharges(model='gasteiger') for i in range(100)]; ```. ```; print('First: ',charges[0],'\n',; 'Tenth: ',charges[10]); ```. **Output:**; `First: [0",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2704:1302,test,test,1302,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2704,1,['test'],['test']
Testability,/optswx.o; Scanning dependencies of target test_runner; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.o; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.o; [ 88%] Linking CXX executable ../../bin/obgui; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/buildertest.o; //usr/lib/x86_64-linux-gnu/libharfbuzz.so.0: undefined reference to `FT_Get_Var_Blend_Coordinates'; //usr/lib/x86_64-linux-gnu/libgtk-3.so.0: undefined reference to `g_log_structured_standard'; //usr/lib/x86_64-linux-gnu/libcairo.so.2: undefined reference to `FT_Get_Var_Design_Coordinates'; collect2: error: ld returned 1 exit status; src/GUI/CMakeFiles/obgui.dir/build.make:149: recipe for target 'bin/obgui' failed; make[2]: *** [bin/obgui] Error 1; CMakeFiles/Makefile2:6751: recipe for target 'src/GUI/CMakeFiles/obgui.dir/all' failed; make[1]: *** [src/GUI/CMakeFiles/obgui.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/canonconsistenttest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/canonstabletest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/carspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cifspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cistranstest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/graphsymtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/gziptest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/implicitHtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/lssrtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/isomorphismtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/multicmltest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/regressionstest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/rotortest.o; [ 91%] Building CXX object test/CMak,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:51743,test,test,51743,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,"0 0 0 0 0 0 0 0 0 0 0 0; 3.5321 0.0493 0.0030 C 0 0 0 0 0 0 0 0 0 0 0 0; -2.3930 0.0649 0.0010 C 0 0 0 0 0 0 0 0 0 0 0 0; -1.0764 1.4443 -0.8888 H 0 0 0 0 0 0 0 0 0 0 0 0; -1.0713 1.4385 0.8921 H 0 0 0 0 0 0 0 0 0 0 0 0; 1.2902 1.4096 0.0100 H 0 0 0 0 0 0 0 0 0 0 0 0; 2.2149 -1.6079 -0.0044 H 0 0 0 0 0 0 0 0 0 0 0 0; 4.4298 -0.5598 0.0018 H 0 0 0 0 0 0 0 0 0 0 0 0; 3.6559 1.1268 0.0067 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 3 1 0 0 0 0; 1 4 2 0 0 0 0; 2 7 3 0 0 0 0; 3 7 1 0 0 0 0; 3 8 1 0 0 0 0; 3 9 1 0 0 0 0; 4 5 1 0 0 0 0; 4 10 1 0 0 0 0; 5 6 2 0 0 0 0; 5 11 1 0 0 0 0; 6 12 1 0 0 0 0; 6 13 1 0 0 0 0; M END; ```; which is from the following reference website:; [PubChem molecule page](https://pubchem.ncbi.nlm.nih.gov/compound/549110#section=3D-Conformer); [SDF file](https://pubchem.ncbi.nlm.nih.gov/rest/pug/compound/CID/549110/record/SDF/?record_type=3d&response_type=display). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; **Actual result from OpenBabel**; ```; test.xyz; OpenBabel11191917433D. 13 12 0 0 0 0 0 0 0 0999 V2000; -0.0622 -0.1867 -0.0074 N 0 0 0 0 0 0 0 0 0 0 0 0; -3.3957 -0.5192 0.0030 N 0 0 0 0 0 0 0 0 0 0 0 0; -1.1333 0.8052 -0.0003 C 0 0 0 0 0 0 0 0 0 0 0 0; 1.1224 0.3173 0.0007 C 0 0 0 0 0 0 0 0 0 0 0 0; 2.3297 -0.5309 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 3.5321 0.0493 0.0030 C 0 0 0 0 0 0 0 0 0 0 0 0; -2.3930 0.0649 0.0010 C 0 0 0 0 0 0 0 0 0 0 0 0; -1.0764 1.4443 -0.8888 H 0 0 0 0 0 0 0 0 0 0 0 0; -1.0713 1.4385 0.8921 H 0 0 0 0 0 0 0 0 0 0 0 0; 1.2902 1.4096 0.0100 H 0 0 0 0 0 0 0 0 0 0 0 0; 2.2149 -1.6079 -0.0044 H 0 0 0 0 0 0 0 0 0 0 0 0; 4.4298 -0.5598 0.0018 H 0 0 0 0 0 0 0 0 0 0 0 0; 3.6559 1.1268 0.0067 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 3 1 0 0 0 0; 1 4 1 0 0 0 0; 3 7 1 0 0 0 0; 3 9 1 0 0 0 0; 4 10 1 0 0 0 0; 5 4 2 0 0 0 0; 5 6 1 0 0 0 0; 6 13 1 0 0 0 0; 7 2 3 0 0 0 0; 8 3 1 0 0 0 0; 11 5 1 0 0 0 0; 12 6 1 0 0 0",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2090:3083,test,test,3083,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2090,1,['test'],['test']
Testability,"0 0; 3.6559 1.1268 0.0067 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 3 1 0 0 0 0; 1 4 2 0 0 0 0; 2 7 3 0 0 0 0; 3 7 1 0 0 0 0; 3 8 1 0 0 0 0; 3 9 1 0 0 0 0; 4 5 1 0 0 0 0; 4 10 1 0 0 0 0; 5 6 2 0 0 0 0; 5 11 1 0 0 0 0; 6 12 1 0 0 0 0; 6 13 1 0 0 0 0; M END; ```; which is from the following reference website:; [PubChem molecule page](https://pubchem.ncbi.nlm.nih.gov/compound/549110#section=3D-Conformer); [SDF file](https://pubchem.ncbi.nlm.nih.gov/rest/pug/compound/CID/549110/record/SDF/?record_type=3d&response_type=display). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; **Actual result from OpenBabel**; ```; test.xyz; OpenBabel11191917433D. 13 12 0 0 0 0 0 0 0 0999 V2000; -0.0622 -0.1867 -0.0074 N 0 0 0 0 0 0 0 0 0 0 0 0; -3.3957 -0.5192 0.0030 N 0 0 0 0 0 0 0 0 0 0 0 0; -1.1333 0.8052 -0.0003 C 0 0 0 0 0 0 0 0 0 0 0 0; 1.1224 0.3173 0.0007 C 0 0 0 0 0 0 0 0 0 0 0 0; 2.3297 -0.5309 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 3.5321 0.0493 0.0030 C 0 0 0 0 0 0 0 0 0 0 0 0; -2.3930 0.0649 0.0010 C 0 0 0 0 0 0 0 0 0 0 0 0; -1.0764 1.4443 -0.8888 H 0 0 0 0 0 0 0 0 0 0 0 0; -1.0713 1.4385 0.8921 H 0 0 0 0 0 0 0 0 0 0 0 0; 1.2902 1.4096 0.0100 H 0 0 0 0 0 0 0 0 0 0 0 0; 2.2149 -1.6079 -0.0044 H 0 0 0 0 0 0 0 0 0 0 0 0; 4.4298 -0.5598 0.0018 H 0 0 0 0 0 0 0 0 0 0 0 0; 3.6559 1.1268 0.0067 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 3 1 0 0 0 0; 1 4 1 0 0 0 0; 3 7 1 0 0 0 0; 3 9 1 0 0 0 0; 4 10 1 0 0 0 0; 5 4 2 0 0 0 0; 5 6 1 0 0 0 0; 6 13 1 0 0 0 0; 7 2 3 0 0 0 0; 8 3 1 0 0 0 0; 11 5 1 0 0 0 0; 12 6 1 0 0 0 0; M RAD 2 1 2 6 2; M END; $$$$; ```. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Please see above description for details.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2090:4184,test,test,4184,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2090,1,['test'],['test']
Testability,00 sec. Start 16: ffghemical_Test. 16/37 Test #16: ffghemical_Test ..................***Failed 0.01 sec. Start 17: ffmmff94_Test. 17/37 Test #17: ffmmff94_Test ....................***Failed 0.01 sec. Start 18: ffuff_Test. 18/37 Test #18: ffuff_Test .......................***Failed 0.01 sec. Start 19: formalcharge_Test. 19/37 Test #19: formalcharge_Test ................ Passed 0.12 sec. Start 20: format_Test. 20/37 Test #20: format_Test ...................... Passed 0.01 sec. Start 21: formula_Test. 21/37 Test #21: formula_Test ..................... Passed 0.21 sec. Start 22: internalcoord_Test. 22/37 Test #22: internalcoord_Test ............... Passed 0.00 sec. Start 23: invalidsmarts_Test. 23/37 Test #23: invalidsmarts_Test ............... Passed 0.00 sec. Start 24: invalidsmiles_Test. 24/37 Test #24: invalidsmiles_Test ............... Passed 0.01 sec. Start 25: iterators_Test. 25/37 Test #25: iterators_Test ................... Passed 0.13 sec. Start 26: logp_psa_Test. 26/37 Test #26: logp_psa_Test ....................***Exception: SegFault 0.02 sec. Start 27: math_Test. 27/37 Test #27: math_Test ........................ Passed 0.13 sec. Start 28: mol_Test. 28/37 Test #28: mol_Test ......................... Passed 0.02 sec. Start 29: phmodel_Test. 29/37 Test #29: phmodel_Test .....................***Exception: SegFault 0.05 sec. Start 30: residue_Test. 30/37 Test #30: residue_Test ..................... Passed 0.03 sec. Start 31: ringtest_Test. 31/37 Test #31: ringtest_Test .................... Passed 0.13 sec. Start 32: smartstest_Test. 32/37 Test #32: smartstest_Test .................. Passed 0.21 sec. Start 33: smilesmatch_Test. 33/37 Test #33: smilesmatch_Test .................***Exception: SegFault 1.44 sec. Start 34: unitcell_Test. 34/37 Test #34: unitcell_Test .................... Passed 0.00 sec. Start 35: pytest_babel. 35/37 Test #35: pytest_babel .....................***Failed 0.03 sec. Start 36: pytest_sym. 36/37 Test #36: pytest_sym .....................,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:3221,Test,Test,3221,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability,01 sec. Start 15: datatest_Test. 15/37 Test #15: datatest_Test .................... Passed 0.00 sec. Start 16: ffghemical_Test. 16/37 Test #16: ffghemical_Test ..................***Failed 0.01 sec. Start 17: ffmmff94_Test. 17/37 Test #17: ffmmff94_Test ....................***Failed 0.01 sec. Start 18: ffuff_Test. 18/37 Test #18: ffuff_Test .......................***Failed 0.01 sec. Start 19: formalcharge_Test. 19/37 Test #19: formalcharge_Test ................ Passed 0.12 sec. Start 20: format_Test. 20/37 Test #20: format_Test ...................... Passed 0.01 sec. Start 21: formula_Test. 21/37 Test #21: formula_Test ..................... Passed 0.21 sec. Start 22: internalcoord_Test. 22/37 Test #22: internalcoord_Test ............... Passed 0.00 sec. Start 23: invalidsmarts_Test. 23/37 Test #23: invalidsmarts_Test ............... Passed 0.00 sec. Start 24: invalidsmiles_Test. 24/37 Test #24: invalidsmiles_Test ............... Passed 0.01 sec. Start 25: iterators_Test. 25/37 Test #25: iterators_Test ................... Passed 0.13 sec. Start 26: logp_psa_Test. 26/37 Test #26: logp_psa_Test ....................***Exception: SegFault 0.02 sec. Start 27: math_Test. 27/37 Test #27: math_Test ........................ Passed 0.13 sec. Start 28: mol_Test. 28/37 Test #28: mol_Test ......................... Passed 0.02 sec. Start 29: phmodel_Test. 29/37 Test #29: phmodel_Test .....................***Exception: SegFault 0.05 sec. Start 30: residue_Test. 30/37 Test #30: residue_Test ..................... Passed 0.03 sec. Start 31: ringtest_Test. 31/37 Test #31: ringtest_Test .................... Passed 0.13 sec. Start 32: smartstest_Test. 32/37 Test #32: smartstest_Test .................. Passed 0.21 sec. Start 33: smilesmatch_Test. 33/37 Test #33: smilesmatch_Test .................***Exception: SegFault 1.44 sec. Start 34: unitcell_Test. 34/37 Test #34: unitcell_Test .................... Passed 0.00 sec. Start 35: pytest_babel. 35/37 Test #35: pytest_babel ...................,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:3128,Test,Test,3128,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability,"1 USE=""openmp wxwidgets -doc {-test}""; ```. The output of `emerge --info '=sci-chemistry/openbabel-2.3.2-r1::gentoo'` (which will show details about my Gentoo system, like compiler options):. ```bash; Portage 2.3.5 (python 3.4.6-final-0, default/linux/amd64/13.0/desktop/plasma/systemd, gcc-6.3.0, glibc-2.24-r1, 4.11.0-gentoo x86_64); =================================================================; System Settings; =================================================================; System uname: Linux-4.11.0-gentoo-x86_64-Intel-R-_Core-TM-_i7-4700MQ_CPU_@_2.40GHz-with-gentoo-2.3; KiB Mem: 16344248 total, 10297040 free; KiB Swap: 0 total, 0 free; sh bash 4.4_p12; ld GNU ld (Gentoo 2.27 p1.0) 2.27; app-shells/bash: 4.4_p12::gentoo; dev-java/java-config: 2.2.0-r3::gentoo; dev-lang/perl: 5.24.1-r1::gentoo; dev-lang/python: 2.7.13::gentoo, 3.4.6::gentoo; dev-util/cmake: 3.8.1::gentoo; dev-util/pkgconfig: 0.29.2::gentoo; sys-apps/baselayout: 2.3::gentoo; sys-apps/openrc: 0.26.1::gentoo; sys-apps/sandbox: 2.10-r4::gentoo; sys-devel/autoconf: 2.13::gentoo, 2.69-r3::gentoo; sys-devel/automake: 1.12.6-r1::gentoo, 1.13.4-r1::gentoo, 1.15-r2::gentoo; sys-devel/binutils: 2.27::gentoo; sys-devel/gcc: 6.3.0::gentoo; sys-devel/gcc-config: 1.8-r1::gentoo; sys-devel/libtool: 2.4.6-r4::gentoo; sys-devel/make: 4.2.1-r1::gentoo; sys-kernel/linux-headers: 4.10::gentoo (virtual/os-headers); sys-libs/glibc: 2.24-r1::gentoo; Repositories:. gentoo; location: /usr/portage; sync-type: git; sync-uri: https://github.com/gentoo/gentoo.git; priority: -1000. fusion809; location: /usr/local/fusion809-overlay; masters: gentoo. flatpak-overlay; location: /usr/local/flatpak-overlay; sync-type: git; sync-uri: git://github.com/fosero/flatpak-overlay.git; masters: gentoo; priority: 50. gamerlay; location: /var/lib/layman/gamerlay; sync-type: git; sync-uri: git://anongit.gentoo.org/proj/gamerlay.git; masters: gentoo; priority: 50. games-overlay; location: /var/lib/layman/games-overlay; sync-type: git; sync-",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1566:7278,sandbox,sandbox,7278,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1566,1,['sandbox'],['sandbox']
Testability,"1/1 Test #212: pytest_babel .....................***Failed Error regular expression found in output. Regex=[ERROR] 1.16 sec; /home/jfkonecn/repos/openbabel/scripts/python:/home/jfkonecn/repos/openbabel/build/lib; .......E/usr/lib/python3.10/subprocess.py:955: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used; self.stdin = io.open(p2cwrite, 'wb', bufsize); /usr/lib/python3.10/subprocess.py:961: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used; self.stdout = io.open(c2pread, 'rb', bufsize); /usr/lib/python3.10/subprocess.py:966: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used; self.stderr = io.open(errread, 'rb', bufsize); ........; ======================================================================; ERROR: testOBRMS (__main__.TestOBabel); Sanity checks for obrms; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/home/jfkonecn/repos/openbabel/test/testbabel.py"", line 529, in testOBRMS; output, err = run_exec( ""obrms -t 10 %s %s""%(sdffile,sdffile)); File ""/home/jfkonecn/repos/openbabel/test/testbabel.py"", line 56, in run_exec; p = Popen([exe] + broken[1:],; File ""/usr/lib/python3.10/subprocess.py"", line 971, in __init__; self._execute_child(args, executable, preexec_fn, close_fds,; File ""/usr/lib/python3.10/subprocess.py"", line 1863, in _execute_child; raise child_exception_type(errno_num, err_msg, err_filename); FileNotFoundError: [Errno 2] No such file or directory: '../bin/obrms'. ----------------------------------------------------------------------; Ran 16 tests in 1.128s. FAILED (errors=1). CMake Error at pytest_babel.cmake:20 (MESSAGE):; 1. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 1.16 sec. The following tests FAILED:; 212 - pytest_babel (Failed); Errors while running CTest; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2662:1793,Test,TestOBabel,1793,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2662,11,"['Test', 'test']","['Test', 'TestOBabel', 'test', 'testOBRMS', 'testbabel', 'tests']"
Testability,"2 CIF files, 2 python scripts, error log. Original comment by: stewenner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1122#issuecomment-281800792:37,log,log,37,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1122#issuecomment-281800792,1,['log'],['log']
Testability,2 tests fail,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2604:2,test,tests,2,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2604,1,['test'],['tests']
Testability,"2-r1/work/openbabel-2.3.2_build/include -I/var/tmp/portage/sci-chemistry/openbabel-2.3.2-r1/work/openbabel-2.3.2/data -I/var/tmp/portage/sci-chemistry/openbabel-2.3.2-r1/work/openbabel-2.3.2/include -I/usr/include/eigen3 -DNDEBUG -DNDEBUG -O2 -pipe -pthread -fopenmp -fPIC -DOB_MODULE_PATH=""\""/usr/lib64/openbabel/2.3.2\"""" -o CMakeFiles/openbabel.dir/data.o -c /var/tmp/portage/sci-chemistry/openbabel-2.3.2-r1/work/openbabel-2.3.2/src/data.cpp; make[2]: *** [src/CMakeFiles/openbabel.dir/build.make:63: src/CMakeFiles/openbabel.dir/alias.o] Error 1; make[2]: *** Waiting for unfinished jobs....; make[2]: Leaving directory '/var/tmp/portage/sci-chemistry/openbabel-2.3.2-r1/work/openbabel-2.3.2_build'; make[1]: *** [CMakeFiles/Makefile2:1196: src/CMakeFiles/openbabel.dir/all] Error 2; make[1]: Leaving directory '/var/tmp/portage/sci-chemistry/openbabel-2.3.2-r1/work/openbabel-2.3.2_build'; make: *** [Makefile:141: all] Error 2; ```. My full build log (showing the source configuration using cmake and the entire compilation output) is [here](https://paste.pound-python.org/show/UBYYuKH3qSq84yOe2ux4/). . `emerge -pqv '=sci-chemistry/openbabel-2.3.2-r1::gentoo'` returns (to show the USE flags, which affect configure options, refer to the ebuild linked earlier for how):. ```bash; [ebuild N ] sci-chemistry/openbabel-2.3.2-r1 USE=""openmp wxwidgets -doc {-test}""; ```. The output of `emerge --info '=sci-chemistry/openbabel-2.3.2-r1::gentoo'` (which will show details about my Gentoo system, like compiler options):. ```bash; Portage 2.3.5 (python 3.4.6-final-0, default/linux/amd64/13.0/desktop/plasma/systemd, gcc-6.3.0, glibc-2.24-r1, 4.11.0-gentoo x86_64); =================================================================; System Settings; =================================================================; System uname: Linux-4.11.0-gentoo-x86_64-Intel-R-_Core-TM-_i7-4700MQ_CPU_@_2.40GHz-with-gentoo-2.3; KiB Mem: 16344248 total, 10297040 free; KiB Swap: 0 total, 0 free; sh bash 4.4_p12;",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1566:5896,log,log,5896,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1566,1,['log'],['log']
Testability,"21:16, yujietia notifications@github.com wrote:; > ; > > Cmake Config is like following:; > > [image: screen shot 2015-03-09 at 5 14 26 pm]; > > https://cloud.githubusercontent.com/assets/10948687/6564526/ceb806b4-c67f-11e4-9833-a2e0e3b744ca.png; > > [image: screen shot 2015-03-09 at 5 14 38 pm]; > > https://cloud.githubusercontent.com/assets/10948687/6564527/ceb96ec8-c67f-11e4-813a-cfdbbf30bc30.png; > > ; > > And the Cmake Log is like following:; > > Using included inchi library.; > > checking for module 'cairo'; > > package 'cairo' not found; > > Could NOT find Cairo. PNG output will NOT be supported.; > > GUI will not be built; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:14; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:39; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppre",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:1257,test,test,1257,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['test'],['test']
Testability,2: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 105: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 106; Start 106: test_smiles_2; --; 106: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 106: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 107; Start 107: test_smiles_3; --; 107: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 107: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 123; Start 123: test_stereo_6; --; 123: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 123: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 124; Start 124: test_stereoperception_1; --; 124: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 124: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 126; Start 126: test_stereoperception_3; --; 126: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 126: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 148; Start 148: test_tautomer_21; --; 148: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 148: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 165; Start 165: test_maereader_1; --; 165: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 165: SUMMARY: UndefinedBehaviorSaniti,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:14542,test,test,14542,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"2aacbc083b58 (f: 3154656000.000000, d: 2.318224e-310); xmm3 00002aacbc083ba5 (f: 3154656256.000000, d: 2.318224e-310); xmm4 00002aaaaae4a100 (f: 2867110144.000000, d: 2.317785e-310); xmm5 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm6 0000000042799c10 (f: 1115266048.000000, d: 5.510146e-315); xmm7 000000000a175ac0 (f: 169302720.000000, d: 8.364666e-316); xmm8 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm9 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm10 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm11 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm12 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm13 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm14 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm15 0000000000000000 (f: 0.000000, d: 0.000000e+00); Module=/lib64/libc.so.6; Module_base_address=0000003F6F800000; Target=2_40_20090519_035743_LHdSMr (Linux 2.6.18-164.11.1.el5); CPU=amd64 (16 logical CPUs) (0xfbb2e1000 RAM); ----------- Stack Backtrace -----------; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9prt24.so [0x2aaaab067d33]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9vm24.so [0x2aaaaace7cad]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9vm24.so [0x2aaaaace7b5f]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9prt24.so [0x2aaaab06ee21]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9vm24.so [0x2aaaaace728b]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9vm24.so [0x2aaaaace7319]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9prt24.so [0x2aaaab06f891]; /lib64/libc.so.6 [0x3f6f8302d0]; /lib64/libc.so.6 [0x3f6f872b31]; /lib64/libc.so.6(__libc_malloc+0x6e) [0x3f6f874bee]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9prt24.so [0x2aaaab06488c]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9prt24.so [0x2aaaab06568e]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9vm24.so [0x2aaaaad319ac]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/979:2705,log,logical,2705,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/979,1,['log'],['logical']
Testability,"3.8.6; swig-2.0.10. ## Expected Behavior; None error. ## Actual Behavior; ```; [ 86%] Built target obfitall; /usr/bin/gmake -f scripts/CMakeFiles/bindings_python.dir/build.make scripts/CMakeFiles/bindings_python.dir/depend; gmake[2]: Entering directory `/builddir/build/BUILD/openbabel-openbabel-3-1-1'; [ 86%] Generating python/openbabel/openbabel-python.cpp, python/openbabel/openbabel.py; cd /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts && /usr/bin/swig -python -c++ -small -O -templatereduce -naturalvar -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/include -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/include -o /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts/python/openbabel/openbabel-python.cpp -DHAVE_EIGEN -DHAVE_EIGEN3 -outdir /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts/python/openbabel /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts/openbabel-python.i; gmake[2]: Leaving directory `/builddir/build/BUILD/openbabel-openbabel-3-1-1'; [ 86%] Built target test_inchiwrite; [ 86%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; cd /builddir/build/BUILD/openbabel-openbabel-3-1-1/test && /usr/bin/c++ -DFORMATDIR=\""/builddir/build/BUILD/openbabel-openbabel-3-1-1/lib64//\"" -DHAVE_EIGEN -DHAVE_EIGEN3 -DHAVE_LIBZ -DHAVE_RADPIJSON -DHAVE_SHARED_POINTER -DHAVE_WXWIDGETS -DTESTDATADIR=\""/builddir/build/BUILD/openbabel-openbabel-3-1-1/test/files/\"" -DUSING_DYNAMIC_LIBS -DWXUSINGDLL -D_FILE_OFFSET_BITS=64 -D__WXGTK__ -I/usr/include/boost169 -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/include -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/data -I/usr/include/eigen3 -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/test -isystem /usr/lib64/wx/include/gtk3-unicode-3.0 -isystem /usr/include/wx-3.0 -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -pthread -DNDEBUG -O3 -DNDEBUG -fPIE -pthread -std=gnu++11 ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2407:1218,test,test,1218,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2407,1,['test'],['test']
Testability,"3022 kB/s) ; Selecting previously unselected package libschroedinger-maeparser1:amd64.; (Reading database ... 160689 files and directories currently installed.); Preparing to unpack .../libschroedinger-maeparser1_1.2.2-1build1_amd64.deb ...; Unpacking libschroedinger-maeparser1:amd64 (1.2.2-1build1) ...; Selecting previously unselected package libopenbabel6.; Preparing to unpack .../libopenbabel6_3.0.0+dfsg-3ubuntu3_amd64.deb ...; Unpacking libopenbabel6 (3.0.0+dfsg-3ubuntu3) ...; Selecting previously unselected package openbabel.; Preparing to unpack .../openbabel_3.0.0+dfsg-3ubuntu3_amd64.deb ...; Unpacking openbabel (3.0.0+dfsg-3ubuntu3) ...; Setting up libschroedinger-maeparser1:amd64 (1.2.2-1build1) ...; Setting up libopenbabel6 (3.0.0+dfsg-3ubuntu3) ...; Setting up openbabel (3.0.0+dfsg-3ubuntu3) ...; Processing triggers for libc-bin (2.31-0ubuntu9.2) ...; Processing triggers for man-db (2.9.1-1) ...; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ # test OpenBabel ; xubuntu@xubuntu:~$ cd Desktop/; xubuntu@xubuntu:~/Desktop$ obabel -:""c1ccncc1"" -h --gen3d -O pyridine.sdf; 1 molecule converted; xubuntu@xubuntu:~/Desktop$ cat pyridine.sdf . OpenBabel01162216093D. 11 11 0 0 0 0 0 0 0 0999 V2000; 1.4330 0.0516 0.0010 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.6880 1.2260 0.0015 C 0 0 0 0 0 0 0 0 0 0 0 0; -0.6942 1.1256 0.0022 C 0 0 0 0 0 0 0 0 0 0 0 0; -1.3624 -0.0485 0.0055 N 0 0 0 0 0 0 0 0 0 0 0 0; -0.6120 -1.1719 0.0069 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.7738 -1.1733 0.0033 C 0 0 0 0 0 0 0 0 0 0 0 0; 2.5185 0.0904 -0.0011 H 0 0 0 0 0 0 0 0 0 0 0 0; 1.1715 2.1963 0.0013 H 0 0 0 0 0 0 0 0 0 0 0 0; -1.3198 2.0134 0.0001 H 0 0 0 0 0 0 0 0 0 0 0 0; -1.1726 -2.1023 0.0114 H 0 0 0 0 0 0 0 0 0 0 0 0; 1.3254 -2.1063 0.0027 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0 0 0 0; 1 6 2 0 0 0 0; 1 7 1 0 0 0 0; 2 3 2 0 0 0 0; 2 8 1 0 0 0 0; 3 4 1 0 0 0 0; 3 9 1 0 0 0 0; 4 5 2 0 0 0 0; 5 6 1 0 0 0 0; 5 10 1 0 0 0 0; 6 11 1 0 0 0 0; M END; $$$$; xubuntu@xubuntu:~/Desktop$ ; xubuntu@xubuntu:~/Desktop$ # check openbabe",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013905161:2436,test,test,2436,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013905161,1,['test'],['test']
Testability,"305-682c7200-3e6e-11eb-9010-6b1eb109ab93.png). I started looking into adding this via CI [here](https://github.com/ltalirz/openbabel/tree/add-coverage) but it turns out that when compiling with `-DCMAKE_BUILD_TYPE=Debug` (which I believe is required for accurate coverage results - didn't check, though), the tests take a very long time ([gh actions log](https://github.com/ltalirz/openbabel/runs/1554047342?check_suite_focus=true)).; Even locally on my computer (which is ~4x faster than the github actions runner), there is still a test that exceeds the 1500s limit; ```; 210/222 Test #210: test_cmlreadfile_1 ............... Passed 0.81 sec; Start 211: inchiSamples.sdf_Test; 211/222 Test #211: inchiSamples.sdf_Test ............ Passed 2.17 sec; Start 212: inchiSamplesTechMan.sdf_Test; 212/222 Test #212: inchiSamplesTechMan.sdf_Test ..... Passed 0.99 sec; Start 213: inchiSteffen_PubChem.smi_Test; 213/222 Test #213: inchiSteffen_PubChem.smi_Test .... Passed 0.89 sec; Start 214: pytest_babel; 214/222 Test #214: pytest_babel ..................... Passed 94.96 sec; Start 215: pytest_sym; 215/222 Test #215: pytest_sym ....................... Passed 116.05 sec; Start 216: pytest_smartssym; 216/222 Test #216: pytest_smartssym ................. Passed 35.42 sec; Start 217: pytest_fastsearch; 217/222 Test #217: pytest_fastsearch ................ Passed 2.64 sec; Start 218: pytest_distgeom; 218/222 Test #218: pytest_distgeom ..................***Timeout 1500.09 sec; Start 219: pytest_unique; 219/222 Test #219: pytest_unique .................... Passed 8.13 sec; Start 220: pytest_kekule; 220/222 Test #220: pytest_kekule .................... Passed 19.51 sec; Start 221: pytest_pdbformat; 221/222 Test #221: pytest_pdbformat ................. Passed 1.04 sec; Start 222: pytest_RInChI; 222/222 Test #222: pytest_RInChI .................... Passed 34.85 sec; ```. This would make the coverage job very long-running on CI. There are different approaches one could take - ; live with the very ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2312:1289,Test,Test,1289,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2312,1,['Test'],['Test']
Testability,33 ns ; 17.2515 ns 13.6996 ns 20.423 ns ; ; OBMolBondIter 100 62 1.3268 ms ; 218.45 ns 215.996 ns 221.761 ns ; 14.4162 ns 11.4463 ns 17.2281 ns ; ; BeginBond / NextBond 100 114 1.3338 ms ; 120.307 ns 119.038 ns 122.127 ns ; 7.69576 ns 5.91677 ns 9.36035 ns ; ; FOR_BONDS_OF_MOL 100 348 1.3224 ms ; 38.5333 ns 38.3025 ns 38.9516 ns ; 1.55949 ns 0.938391 ns 2.30401 ns ; ; BeginBonds / EndBonds 100 352 1.3024 ms ; 37.2908 ns 36.905 ns 37.8549 ns ; 2.35191 ns 1.75338 ns 2.92314 ns ; ; GetBonds 100 348 1.3224 ms ; 37.7961 ns 37.3666 ns 38.3528 ns ; 2.48275 ns 2.02509 ns 2.91912 ns ; . -------------------------------------------------------------------------------; iterators-atom-bond; -------------------------------------------------------------------------------; /home/timvdm/openbabel-benchmark/main.cpp:168; ............................................................................... benchmark name samples iterations est run time; mean low mean high mean; std dev low std dev high std dev; -------------------------------------------------------------------------------; OBAtomBondIter 100 9 1.3851 ms ; 1.60022 us 1.58045 us 1.62492 us ; 112.515 ns 94.3982 ns 129.009 ns ; ; BeginBond / NextBond 100 17 1.36 ms ; 809.956 ns 803.673 ns 820.129 ns ; 39.3122 ns 27.1928 ns 52.9569 ns ; ; FOR_BONDS_OF_ATOM 100 79 1.3272 ms ; 175.51 ns 173.628 ns 178.167 ns ; 11.3124 ns 8.75191 ns 13.7801 ns ; ; BeginBonds / EndBonds 100 78 1.326 ms ; 173.413 ns 171.365 ns 176.226 ns ; 12.1837 ns 9.54524 ns 14.7505 ns ; ; GetBonds 100 109 1.3298 ms ; 125.818 ns 124.27 ns 127.769 ns ; 8.80802 ns 7.1704 ns 10.2525 ns ; . -------------------------------------------------------------------------------; iterators-atom-atom; -------------------------------------------------------------------------------; /home/timvdm/openbabel-benchmark/main.cpp:233; ............................................................................... benchmark name samples iterations est run time; mean low mean high mean; ,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2635#issuecomment-1773759180:2602,benchmark,benchmark,2602,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2635#issuecomment-1773759180,1,['benchmark'],['benchmark']
Testability,389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 104: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 105; Start 105: test_smiles_1; --; 105: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 105: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 106; Start 106: test_smiles_2; --; 106: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 106: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 107; Start 107: test_smiles_3; --; 107: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 107: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 123; Start 123: test_stereo_6; --; 123: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 123: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 124; Start 124: test_stereoperception_1; --; 124: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 124: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 126; Start 126: test_stereoperception_3; --; 126: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 126: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 148; Start 148: test_tautomer_21; --; 148: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 148: SUMMARY: UndefinedBehaviorSani,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:14279,test,test,14279,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"389:62: runtime error: signed iteger overflow: 100000000 * 100 cannot be represented in type 'int'; 25: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 27; Start 27: test_canonstable_1; --; 27: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 27: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 43; Start 43: test_cifspacegroup_12; --; 43: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 43: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 55; Start 55: test_graphsym_1; --; 55: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 55: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 57; Start 57: test_graphsym_3; --; 57: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 57: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 59; Start 59: test_graphsym_5; --; 59: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 59: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 60; Start 60: test_gzip_1; --; 60: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; 60: ../src/obconversion.cpp:302:24: runtime error: load of value 255, which is not a valid value for type 'bool'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 61; Start 61: test_",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:5028,test,test,5028,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"3: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 83: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; 83: ../src/formats/libinchi/ichicano.c:1676:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 83: /usr/include/string.h:44:28: note: nonnull attribute specified here; 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 83: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 83: /usr/include/string.h:44:28: note: nonnull attribute specified here; 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; --; test 85; Start 85: test_regressions_223; --; 85: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 85: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 95; Start 95: test_regressions_2111; --; 95: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 95: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; 95: ../src/formats/libinchi/ichicano.c:1677:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:9580,test,test,9580,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: any; Operating system and version: Ubuntu 18.04. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I would like to get 1.0 when I'm calling the function; `dynamic_cast<OBPairFloatingPoint *>((OBGenericData*)NULL)->GetGenericValueDef(1.0)`; but I get segmentation fail in Ubuntu 18.04 (master branch compiled with standard g++ compiler from Ubuntu repository. See https://stackoverflow.com/questions/2474018/when-does-invoking-a-member-function-on-a-null-instance-result-in-undefined-behav. Simple test case (fails in Ubuntu 18.04 `g++ -O3 main.cpp; ./a.out`); ```; // Example program; #include <iostream>; #include <string>. class A {; public: ; float f;; inline float foo(const float & def) {; if( this == NULL) {; return def;; }; else return f; ; }; };. int main(); {; A * d = NULL; ; std::cout << d->foo(1.0) << std::endl;; }; ```. I think, that it is much better to have the function like this; ```; static ValueT GetValue(OBGenericData * obd); { ; OBPairTemplate<ValueT> * pd = dynamic_cast<OBPairTemplate<ValueT> *>(obd);; assert( pd != NULL);; return pd->GetGenericValue();; }; static ValueT GetValue(OBGenericData * obd, const ValueT &def_val); { ; OBPairTemplate<ValueT> * pd = dynamic_cast<OBPairTemplate<ValueT> *>(obd);; return (pd == NULL) ? def_val : pd->GetGenericValue();; }; ```; Using the static function gives much nicer call.; `float f = OBPairFloatingPoint::GetValue(a.getData(""something""), 1.0);`; instead of; `float f = dynamic_cast<OBPairFloatingPoint *>(a->GetData(""something""))->Get",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1913:1254,test,test,1254,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1913,1,['test'],['test']
Testability,"4 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:14; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:39; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:1945,test,test,1945,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['test'],['test']
Testability,"4 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:14; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:39; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape; > > sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PAT",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:1959,test,test,1959,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,1,['test'],['test']
Testability,"41) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1241) : error C3861: '_finite': identifier not found; alias.cpp; Generating Code...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDLL\Release\BuildLog.htm""; OBDLL - 15 error(s), 3 warning(s); ------ Build started: Project: OBConv, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; format.cpp; Compiling...; obconversion.cpp; Linking...; LINK : fatal error LNK1181: cannot open input file 'OBError.lib'; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBConv\Release\BuildLog.htm""; OBConv - 1 error(s), 0 warning(s); ------ Build started: Project: OBFPRT, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; forcefielduff.cpp; forcefieldmmff94.cpp; forcefieldghemical.cpp; forcefield.cpp; ..\..\src\forcefield.cpp(1828) : warning C4244: 'argument' : conversion from 'time_t' to 'unsigned int', possible loss of data; fingerprint.cpp; finger3.cpp; finger2.cpp; Generating Code...; Linking...; LINK : fatal error LNK1181: cannot open input file 'OBError.lib'; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFPRT\Release\BuildLog.htm""; OBFPRT - 1 error(s), 1 warning(s); ------ Build started: Project: FastSearch, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; fingerprintformat.cpp; fastsearchformat.cpp; Generating Code...; Linking...; LINK : fatal error LNK1181: cannot open input file 'obconv.lib'; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFS\Release\BuildLog.htm""; FastSearch - 1 error(s), 0 warning(s); ========== Build: 0 succeeded, 5 failed, 0 up-to-date, 0 skipped ==========. File Added: ConfigurationManager_05 Jun. 05 23.14.gif. Original comment by: peterennis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781141:4418,log,log,4418,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781141,2,['log'],['log']
Testability,42.998 ns ; 13.6856 ns 10.255 ns 17.355 ns ; ; OBMolAtomIter 100 63 1.3356 ms ; 213.093 ns 211.359 ns 215.806 ns ; 10.8516 ns 7.52759 ns 14.4128 ns ; ; BeginAtom / NextAtom 100 115 1.334 ms ; 119.102 ns 117.784 ns 120.949 ns ; 7.96645 ns 6.23579 ns 9.59511 ns ; ; FOR_ATOMS_OF_MOL 100 366 1.3176 ms ; 37.0429 ns 36.6542 ns 37.5867 ns ; 2.33947 ns 1.81348 ns 2.8415 ns ; ; BeginAtoms / EndAtoms 100 321 1.3161 ms ; 37.5913 ns 37.0588 ns 38.2691 ns ; 3.02309 ns 2.49616 ns 3.52564 ns ; ; GetAtoms 100 348 1.3224 ms ; 37.13 ns 36.7279 ns 37.7013 ns ; 2.4104 ns 1.85212 ns 2.89647 ns ; . -------------------------------------------------------------------------------; iterators-mol-bond; -------------------------------------------------------------------------------; /home/timvdm/openbabel-benchmark/main.cpp:103; ............................................................................... benchmark name samples iterations est run time; mean low mean high mean; std dev low std dev high std dev; -------------------------------------------------------------------------------; NumBonds / GetBond 100 56 1.3272 ms ; 244.13 ns 241.171 ns 248.033 ns ; 17.2515 ns 13.6996 ns 20.423 ns ; ; OBMolBondIter 100 62 1.3268 ms ; 218.45 ns 215.996 ns 221.761 ns ; 14.4162 ns 11.4463 ns 17.2281 ns ; ; BeginBond / NextBond 100 114 1.3338 ms ; 120.307 ns 119.038 ns 122.127 ns ; 7.69576 ns 5.91677 ns 9.36035 ns ; ; FOR_BONDS_OF_MOL 100 348 1.3224 ms ; 38.5333 ns 38.3025 ns 38.9516 ns ; 1.55949 ns 0.938391 ns 2.30401 ns ; ; BeginBonds / EndBonds 100 352 1.3024 ms ; 37.2908 ns 36.905 ns 37.8549 ns ; 2.35191 ns 1.75338 ns 2.92314 ns ; ; GetBonds 100 348 1.3224 ms ; 37.7961 ns 37.3666 ns 38.3528 ns ; 2.48275 ns 2.02509 ns 2.91912 ns ; . -------------------------------------------------------------------------------; iterators-atom-bond; -------------------------------------------------------------------------------; /home/timvdm/openbabel-benchmark/main.cpp:168; .........................................,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2635#issuecomment-1773759180:1455,benchmark,benchmark,1455,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2635#issuecomment-1773759180,1,['benchmark'],['benchmark']
Testability,"44 -2.97580 7.71300 10.76640 C_3 4 0 0.07478; HETATM 5 O5 RES A 444 -2.56850 7.64730 9.44780 O_3 2 0 -0.39022; HETATM 6 C6 RES A 444 -3.22420 6.11110 12.71340 C_R 3 0 -0.04518; HETATM 7 C7 RES A 444 -3.07610 4.86090 13.27370 C_R 3 0 0.00239; HETATM 8 C8 RES A 444 -2.50840 3.86280 12.52490 C_R 3 0 0.16949; HETATM 9 H9 RES A 444 -1.69690 3.45390 10.69820 H_ 1 0 0.45224; HETATM 10 H10 RES A 444 -2.69970 8.47580 9.02660 H_HB 1 0 0.20985; HETATM 11 H11 RES A 444 -1.89590 5.48170 9.70190 H_ 1 0 0.13792; HETATM 12 H12 RES A 444 -4.01710 7.99900 10.80510 H_ 1 0 0.06091; HETATM 13 H13 RES A 444 -2.38340 8.44830 11.29190 H_ 1 0 0.06091; HETATM 14 H14 RES A 444 -3.67620 6.90350 13.29250 H_ 1 0 0.06248; HETATM 15 H15 RES A 444 -3.39390 4.67230 14.28870 H_ 1 0 0.06767; HETATM 16 H16 RES A 444 -2.39890 2.87120 12.93810 H_ 1 0 0.13754; FORMAT CONECT (a6,12i6). CONECT 1 2 8 9; ORDER 1 2 1 1; CONECT 2 1 3 11; ORDER 2 2 1 1; CONECT 3 2 4 6; ORDER 3 1 1 2; CONECT 4 3 5 12 13; ORDER 4 1 1 1 1; CONECT 5 4 10; ORDER 5 1 1; CONECT 6 3 7 14; ORDER 6 2 1 1; CONECT 7 6 8 15; ORDER 7 1 2 1; CONECT 8 7 1 16; ORDER 8 2 1 1; CONECT 9 1; ORDER 9 1; CONECT 10 5; ORDER 10 1; CONECT 11 2; ORDER 11 1; CONECT 12 4; ORDER 12 1; CONECT 13 4; ORDER 13 1; CONECT 14 6; ORDER 14 1; CONECT 15 7; ORDER 15 1; CONECT 16 8; ORDER 16 1; END; ```. The intermediate .sdf carries three double bonds, the visualization in Jmol now carries the cyclic array of \pi electrons:. ![cation_jmol](https://github.com/openbabel/openbabel/assets/19709084/fa3d98f4-c747-4f98-9837-a78d65134bce). (While reading the .sdf, the computation of bonds by Jmol was disabled.). The labeling of `N1` as `N_R` in the .bgf file now matches your requirement, too. However, does the modification improve the file *over all*? For ease of replication, the files used/obtained in this limited test are attached in the .zip archive below. [2024-05-02_test_case_cation.zip](https://github.com/openbabel/openbabel/files/15189528/2024-05-02_test_case_cation.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2090608580:3288,test,test,3288,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2090608580,1,['test'],['test']
Testability,"45852 -0.45523; H 0.47738 0.04083 1.04048; H -0.82678 1.21794 -1.47098; H 0.41625 3.05512 -0.51673; H 0.03859 2.54279 1.14727; H -2.85296 5.45082 1.09341; H -4.30676 6.12747 0.40030; H -2.88334 7.93042 -0.02392; H -1.44507 6.93572 0.03427; H -1.31169 6.63066 -2.20266; H -2.18051 8.12576 -2.25049; H -4.04330 7.15049 -3.16709; H -2.92235 5.90083 -3.68024; H -5.05075 5.94058 -1.66063; H -3.84736 3.40889 -2.69793; H -5.16670 3.55676 -1.46033; H -2.50258 2.43194 1.78898; H -3.61128 2.52186 0.40396; H -1.98490 0.28744 1.18243; H -2.61144 -0.63909 -1.15160; H -3.95281 -0.09178 -0.13927; H -3.37215 0.92427 -1.46752; H -1.18993 -3.17436 -2.52411; H -2.07994 -5.24422 -3.61949; H -1.92569 -6.21057 -2.10163; H -3.40012 -4.59021 -0.87620; H -3.60298 -3.66116 -2.42118; 1 molecule converted; ```. Well, what is the matter with this one, why the complaint? So I run. ```shell; $ obabel -:""Cc1nnc(CNC[C@@H]2CN(C(=O)[C@@]34CCCC[C@H]3C4)C[C@H]2C)n1C1CC1"" -O test.png; 1 molecule converted; ```. ![test](https://user-images.githubusercontent.com/19709084/203514067-0eeff874-3f1b-4165-826a-84fc6feb241e.png). So I copy-paste the SMILES string to [cdkdepict](https://www.simolecule.com/cdkdepict/depict.html) for a visualization, but what should be unusual there?. ![cdkdepict](https://user-images.githubusercontent.com/19709084/203514980-b8bdfea7-48a1-4975-ac4c-1131db62a52b.png). Though the structure representations are not implausible, I process `ZINC001094026363.sdf` [from here](https://zinc15.docking.org/substances/ZINC001094026363/) (download button) (a 2D RDKit file) on on Jmol's console:. ```; $ load ""ZINC001094026363.sdf"";; $ calculate hydrogens;; $ minimize;; $ minimize;; $ write ""converged.sdf"";; ```; Apparently, `converged.sdf` still is problematic. ```shell; $ obabel converged.sdf -O converged.smi; 1 molecule converted; $ obabel convergerd.smi -h --gen3d -O convergerd3d.sdf; $ obabel converged.smi --gen3d -O converged3d.sdf; ==============================; *** Open Babel Warning in Corre",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1324843957:2358,test,test,2358,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1324843957,1,['test'],['test']
Testability,"554047342?check_suite_focus=true)).; Even locally on my computer (which is ~4x faster than the github actions runner), there is still a test that exceeds the 1500s limit; ```; 210/222 Test #210: test_cmlreadfile_1 ............... Passed 0.81 sec; Start 211: inchiSamples.sdf_Test; 211/222 Test #211: inchiSamples.sdf_Test ............ Passed 2.17 sec; Start 212: inchiSamplesTechMan.sdf_Test; 212/222 Test #212: inchiSamplesTechMan.sdf_Test ..... Passed 0.99 sec; Start 213: inchiSteffen_PubChem.smi_Test; 213/222 Test #213: inchiSteffen_PubChem.smi_Test .... Passed 0.89 sec; Start 214: pytest_babel; 214/222 Test #214: pytest_babel ..................... Passed 94.96 sec; Start 215: pytest_sym; 215/222 Test #215: pytest_sym ....................... Passed 116.05 sec; Start 216: pytest_smartssym; 216/222 Test #216: pytest_smartssym ................. Passed 35.42 sec; Start 217: pytest_fastsearch; 217/222 Test #217: pytest_fastsearch ................ Passed 2.64 sec; Start 218: pytest_distgeom; 218/222 Test #218: pytest_distgeom ..................***Timeout 1500.09 sec; Start 219: pytest_unique; 219/222 Test #219: pytest_unique .................... Passed 8.13 sec; Start 220: pytest_kekule; 220/222 Test #220: pytest_kekule .................... Passed 19.51 sec; Start 221: pytest_pdbformat; 221/222 Test #221: pytest_pdbformat ................. Passed 1.04 sec; Start 222: pytest_RInChI; 222/222 Test #222: pytest_RInChI .................... Passed 34.85 sec; ```. This would make the coverage job very long-running on CI. There are different approaches one could take - ; live with the very long run time;; skip very long-running tests; ; try to see whether the ""worst offenders"" really need to be that long-running; ; run the coverage only, say, once per day;; ... I'd be very happy for feedback on this. [1] Issues https://github.com/openbabel/openbabel/issues/1937 https://github.com/openbabel/openbabel/issues/1893 https://github.com/openbabel/openbabel/issues/1321 https://github.com/",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2312:1687,Test,Test,1687,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2312,1,['Test'],['Test']
Testability,"60: ../src/obconversion.cpp:302:24: runtime error: load of value 255, which is not a valid value for type 'bool'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 61; Start 61: test_addh_1; --; 61: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 61: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 62; Start 62: test_implicitH_1; --; 62: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 62: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 66; Start 66: test_lssr_4; --; 66: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 66: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 67; Start 67: test_lssr_5; --; 67: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 67: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 72; Start 72: test_isomorphism_5; --; 72: ../src/obconversion.cpp:302:24: runtime error: load of value 53, which is not a valid value for type 'bool'; 72: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 73; Start 73: test_isomorphism_6; --; 73: ../src/obconversion.cpp:302:24: runtime error: load of value 52, which is not a valid value for type 'bool'; 73: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 74; Start 74: test_isomorphism_7; --; 74: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 74: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsy",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:6793,test,test,6793,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"6100 -0.00100; C -0.92800 1.06000 -0.00000; C -2.25900 0.77200 -0.00000; C -2.68700 -0.45600 0.00100; C -1.84800 -1.53300 0.00100; C -0.47300 -1.33400 0.00100; C 0.00100 -0.00700 -0.00000; C 1.38700 0.25300 0.00000; C 2.28100 -0.83300 0.00100; C 1.82800 1.58700 0.00000; C 0.91800 2.60500 -0.00000; C -0.47300 -1.33400 0.00100; C 0.43200 -2.37200 -0.00400; C 1.80000 -2.10900 0.00100; C 2.28100 -0.83300 0.00100; C 1.38700 0.25300 0.00000; C 0.43200 -2.37200 -0.00400; C 1.80000 -2.10900 0.00100. Atoms #20 and #16, #19 and #15, #18 and #10 are identical: molecule contains only three rings, but perylene contains 5. babel 1.smi 1.xyz --gen3d ---errorlevel 4; ============================== ; *** Open Babel Audit Log in ReadChemObjectImpl ; OpenBabel::Read molecule SMILES format ; ============================== ; *** Open Babel Audit Log in Clear ; Ran OpenBabel::Clear Molecule ; ============================== ; *** Open Babel Audit Log in AssignSpinMultiplicity ; Ran OpenBabel::AssignSpinMultiplicity ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in FindRingAtomsAndBonds ; Ran OpenBabel::FindRingAtomsAndBonds ; ============================== ; *** Open Babel Information in NewPerceiveKekuleBonds ; Kekulize: Huckel rule not satisfied for molecule . ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule ; ============================== ; *** Open Babel Audit Log in AssignAromaticFlags; Ran OpenBabel::AssignAromaticFlags ; ============================== ; *** Open Babel Audit Log in AssignImplicitValence; Ran OpenBabel::AssignImplicitValence ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in FindSSSR",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:869,Log,Log,869,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,5,['Log'],['Log']
Testability,"6: The type or namespace name Action' could not be found. Are you missingSystem' using directive?; ./VectorVecInt.cs(47,23): error CS0246: The type or namespace name Action' could not be found. Are you missingSystem' using directive?; ./VectorVecOBVector3.cs(47,23): error CS0246: The type or namespace name Action' could not be found. Are you missingSystem' using directive?; ./VectorVecUInt.cs(47,23): error CS0246: The type or namespace name Action' could not be found. Are you missingSystem' using directive?; ./VectorpAtom.cs(47,23): error CS0246: The type or namespace name Action' could not be found. Are you missingSystem' using directive?; ./VectorpBond.cs(47,23): error CS0246: The type or namespace name Action' could not be found. Are you missingSystem' using directive?; ./VectorpData.cs(47,23): error CS0246: The type or namespace name Action' could not be found. Are you missingSystem' using directive?; ./VectorpInternalCoord.cs(47,23): error CS0246: The type or namespace name Action' could not be found. Are you missingSystem' using directive?; ./VectorpRing.cs(47,23): error CS0246: The type or namespace name Action' could not be found. Are you missingSystem' using directive?; ./VectorpRotor.cs(47,23): error CS0246: The type or namespace name Action' could not be found. Are you missingSystem' using directive?; Compilation failed: 22 error(s), 0 warnings; [100%] Building CXX object test/CMakeFiles/test_runner.dir/obtest.cpp.o; make[2]: *** [/Users/chengxiyang/Downloads/openbabel-master/scripts/csharp/openbabel-csharp.cpp] Error 1; make[2]: *** Deleting file `/Users/chengxiyang/Downloads/openbabel-master/scripts/csharp/openbabel-csharp.cpp'; make[1]: *** [scripts/CMakeFiles/bindings_csharp.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [100%] Linking CXX executable ../bin/test_runner; [100%] Built target test_runner; make: *** [all] Error 2. The code I used is from the Github-master.; You can contact me at yangchen@oregonstate.edu.; Thanks for help!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1867:3697,test,test,3697,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1867,1,['test'],['test']
Testability,"7 1.00 41.71 ? ? ? ? ? 1 LYS A C 1; ...; ATOM 950 C CG2 . VAL A 1 124 ? 28.143 10.116 17.555 1.00 22.08 ? ? ? ? ? 124 VAL A CG2 1; ATOM 951 O OXT . VAL A 1 124 ? 27.661 12.956 19.992 1.00 22.31 ? ? ? ? ? 124 VAL A OXT 1; ATOM 952 N N . LYS B 1 1 ? 23.301 17.040 7.043 1.00 42.58 ? ? ? ? ? 1 LYS B N 1; ATOM 953 C CA . LYS B 1 1 ? 21.860 16.668 7.160 1.00 41.80 ? ? ? ? ? 1 LYS B CA 1; ... Here ATOMs 1 and 952 are in different chains (A and B) of the same entity (1), at the same position in the chain (N of residue 1 (LYS)). the same for the original (from pdb web site) pdb:. ATOM 1 N LYS A 1 36.746 -20.748 26.111 1.00 0.00 N; ATOM 2 CA LYS A 1 37.454 -19.448 25.930 1.00 0.00 C; ATOM 3 C LYS A 1 36.371 -18.397 25.697 1.00 0.00 C; ...; ATOM 950 CG1 VAL A 124 28.143 10.116 17.555 1.00 0.00 C; ATOM 951 O VAL A 124 27.661 12.956 19.992 1.00 0.00 O; ATOM 952 N LYS B 1 23.301 17.040 7.043 1.00 0.00 N; ATOM 953 CA LYS B 1 21.860 16.668 7.160 1.00 0.00 C. the output of ""babel -i mmcif 1afk.cif -o pdb test.pdb"". ATOM 1 N LYS A 1 36.746 -20.748 26.111 1.00 0.00 N; ATOM 2 CA LYS A 1 37.454 -19.448 25.930 1.00 0.00 C; ATOM 3 C LYS A 1 36.371 -18.397 25.697 1.00 0.00 C; ...; ATOM 950 CG2 VAL A 124 28.143 10.116 17.555 1.00 0.00 C; ATOM 951 OXT VAL A 124 27.661 12.956 19.992 1.00 0.00 O; ATOM 952 N LYS A 1 23.301 17.040 7.043 1.00 0.00 N; ATOM 953 CA LYS A 1 21.860 16.668 7.160 1.00 0.00 C. The last two lines should read as in the original PDB (... LYS B ...). Here is a patch for src/formats/mmcifformat.cpp that does the job:. 94a95; > _atom_site_label_asym_id, // The chain id; 174a176; > { ""_atom_site_label_asym_id"", CIFTagID::_atom_site_label_asym_id },; 473a476,481; >; > typedef map<string, unsigned> CIFasymmap;; > CIFasymmap asym_map;; > string last_asym_id = """";; > unsigned next_asym_no = 0;; >; 638,640c646,660; < case CIFTagID::_atom_site_label_entity_id: // The chain number of the residue, e.g. 2; < cerr << ""chain is "" << token.as_text() << "" num "" << token.as_unsigned() << end",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/912:1922,test,test,1922,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/912,1,['test'],['test']
Testability,7 sec. Start 13: cmlreadfile_Test. 13/37 Test #13: cmlreadfile_Test ................. Passed 0.02 sec. Start 14: conversion_Test. 14/37 Test #14: conversion_Test .................. Passed 0.01 sec. Start 15: datatest_Test. 15/37 Test #15: datatest_Test .................... Passed 0.00 sec. Start 16: ffghemical_Test. 16/37 Test #16: ffghemical_Test ..................***Failed 0.01 sec. Start 17: ffmmff94_Test. 17/37 Test #17: ffmmff94_Test ....................***Failed 0.01 sec. Start 18: ffuff_Test. 18/37 Test #18: ffuff_Test .......................***Failed 0.01 sec. Start 19: formalcharge_Test. 19/37 Test #19: formalcharge_Test ................ Passed 0.12 sec. Start 20: format_Test. 20/37 Test #20: format_Test ...................... Passed 0.01 sec. Start 21: formula_Test. 21/37 Test #21: formula_Test ..................... Passed 0.21 sec. Start 22: internalcoord_Test. 22/37 Test #22: internalcoord_Test ............... Passed 0.00 sec. Start 23: invalidsmarts_Test. 23/37 Test #23: invalidsmarts_Test ............... Passed 0.00 sec. Start 24: invalidsmiles_Test. 24/37 Test #24: invalidsmiles_Test ............... Passed 0.01 sec. Start 25: iterators_Test. 25/37 Test #25: iterators_Test ................... Passed 0.13 sec. Start 26: logp_psa_Test. 26/37 Test #26: logp_psa_Test ....................***Exception: SegFault 0.02 sec. Start 27: math_Test. 27/37 Test #27: math_Test ........................ Passed 0.13 sec. Start 28: mol_Test. 28/37 Test #28: mol_Test ......................... Passed 0.02 sec. Start 29: phmodel_Test. 29/37 Test #29: phmodel_Test .....................***Exception: SegFault 0.05 sec. Start 30: residue_Test. 30/37 Test #30: residue_Test ..................... Passed 0.03 sec. Start 31: ringtest_Test. 31/37 Test #31: ringtest_Test .................... Passed 0.13 sec. Start 32: smartstest_Test. 32/37 Test #32: smartstest_Test .................. Passed 0.21 sec. Start 33: smilesmatch_Test. 33/37 Test #33: smilesmatch_Test .................***Excep,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:2936,Test,Test,2936,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability,8.3528 ns ; 2.48275 ns 2.02509 ns 2.91912 ns ; . -------------------------------------------------------------------------------; iterators-atom-bond; -------------------------------------------------------------------------------; /home/timvdm/openbabel-benchmark/main.cpp:168; ............................................................................... benchmark name samples iterations est run time; mean low mean high mean; std dev low std dev high std dev; -------------------------------------------------------------------------------; OBAtomBondIter 100 9 1.3851 ms ; 1.60022 us 1.58045 us 1.62492 us ; 112.515 ns 94.3982 ns 129.009 ns ; ; BeginBond / NextBond 100 17 1.36 ms ; 809.956 ns 803.673 ns 820.129 ns ; 39.3122 ns 27.1928 ns 52.9569 ns ; ; FOR_BONDS_OF_ATOM 100 79 1.3272 ms ; 175.51 ns 173.628 ns 178.167 ns ; 11.3124 ns 8.75191 ns 13.7801 ns ; ; BeginBonds / EndBonds 100 78 1.326 ms ; 173.413 ns 171.365 ns 176.226 ns ; 12.1837 ns 9.54524 ns 14.7505 ns ; ; GetBonds 100 109 1.3298 ms ; 125.818 ns 124.27 ns 127.769 ns ; 8.80802 ns 7.1704 ns 10.2525 ns ; . -------------------------------------------------------------------------------; iterators-atom-atom; -------------------------------------------------------------------------------; /home/timvdm/openbabel-benchmark/main.cpp:233; ............................................................................... benchmark name samples iterations est run time; mean low mean high mean; std dev low std dev high std dev; -------------------------------------------------------------------------------; OBAtomAtomIter 100 8 1.332 ms ; 1.75625 us 1.73897 us 1.78088 us ; 105.282 ns 78.5718 ns 131.181 ns ; ; BeginNbr / NextNbr 100 13 1.4313 ms ; 1.12652 us 1.11472 us 1.14416 us ; 72.6578 ns 53.7948 ns 93.3306 ns ; ; FOR_NBORS_OF_ATOM 100 63 1.3356 ms ; 224.037 ns 221.28 ns 227.784 ns ; 16.3251 ns 13.0803 ns 19.7404 ns ; ; GetNbrs 100 60 1.344 ms ; 238.905 ns 235.938 ns 242.825 ns ; 17.3301 ns 13.9846 ns 20.3396 ns ; ```,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2635#issuecomment-1773759180:3530,benchmark,benchmark,3530,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2635#issuecomment-1773759180,2,['benchmark'],['benchmark']
Testability,"85 -1.82921 -0.80748; H 1.19877 -2.22364 0.72465; H -0.09393 -1.05871 -1.63704; H 1.32780 0.45852 -0.45523; H 0.47738 0.04083 1.04048; H -0.82678 1.21794 -1.47098; H 0.41625 3.05512 -0.51673; H 0.03859 2.54279 1.14727; H -2.85296 5.45082 1.09341; H -4.30676 6.12747 0.40030; H -2.88334 7.93042 -0.02392; H -1.44507 6.93572 0.03427; H -1.31169 6.63066 -2.20266; H -2.18051 8.12576 -2.25049; H -4.04330 7.15049 -3.16709; H -2.92235 5.90083 -3.68024; H -5.05075 5.94058 -1.66063; H -3.84736 3.40889 -2.69793; H -5.16670 3.55676 -1.46033; H -2.50258 2.43194 1.78898; H -3.61128 2.52186 0.40396; H -1.98490 0.28744 1.18243; H -2.61144 -0.63909 -1.15160; H -3.95281 -0.09178 -0.13927; H -3.37215 0.92427 -1.46752; H -1.18993 -3.17436 -2.52411; H -2.07994 -5.24422 -3.61949; H -1.92569 -6.21057 -2.10163; H -3.40012 -4.59021 -0.87620; H -3.60298 -3.66116 -2.42118; 1 molecule converted; ```. Well, what is the matter with this one, why the complaint? So I run. ```shell; $ obabel -:""Cc1nnc(CNC[C@@H]2CN(C(=O)[C@@]34CCCC[C@H]3C4)C[C@H]2C)n1C1CC1"" -O test.png; 1 molecule converted; ```. ![test](https://user-images.githubusercontent.com/19709084/203514067-0eeff874-3f1b-4165-826a-84fc6feb241e.png). So I copy-paste the SMILES string to [cdkdepict](https://www.simolecule.com/cdkdepict/depict.html) for a visualization, but what should be unusual there?. ![cdkdepict](https://user-images.githubusercontent.com/19709084/203514980-b8bdfea7-48a1-4975-ac4c-1131db62a52b.png). Though the structure representations are not implausible, I process `ZINC001094026363.sdf` [from here](https://zinc15.docking.org/substances/ZINC001094026363/) (download button) (a 2D RDKit file) on on Jmol's console:. ```; $ load ""ZINC001094026363.sdf"";; $ calculate hydrogens;; $ minimize;; $ minimize;; $ write ""converged.sdf"";; ```; Apparently, `converged.sdf` still is problematic. ```shell; $ obabel converged.sdf -O converged.smi; 1 molecule converted; $ obabel convergerd.smi -h --gen3d -O convergerd3d.sdf; $ obabel converged.sm",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1324843957:2319,test,test,2319,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1324843957,1,['test'],['test']
Testability,89%] Building CXX object test/CMakeFiles/test_runner.dir/cistranstest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/graphsymtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/gziptest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/implicitHtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/lssrtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/isomorphismtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/multicmltest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/regressionstest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/rotortest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/shuffletest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/smilestest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/spectrophoretest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/squareplanartest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereotest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereoperceptiontest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tautomertest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runne,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:53039,test,test,53039,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,89:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 103: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 104; Start 104: test_shuffle_5; --; 104: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 104: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 105; Start 105: test_smiles_1; --; 105: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 105: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 106; Start 106: test_smiles_2; --; 106: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 106: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 107; Start 107: test_smiles_3; --; 107: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 107: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 123; Start 123: test_stereo_6; --; 123: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 123: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 124; Start 124: test_stereoperception_1; --; 124: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 124: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 126; Start 126: test_stereoperception_3; --; 126: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 126: SUMMARY: UndefinedBehaviorSanitiz,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:14016,test,test,14016,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,89:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 18: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 19; Start 19: test_builder_3; --; 19: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 19: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 21; Start 21: test_builder_5; --; 21: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 21: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 23; Start 23: test_canonconsistent_1; --; 23: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 23: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 24; Start 24: test_canonconsistent_2; --; 24: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 24: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 25; Start 25: test_canonconsistent_3; --; 25: ../src/graphsym.cpp:389:62: runtime error: signed iteger overflow: 100000000 * 100 cannot be represented in type 'int'; 25: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 27; Start 27: test_canonstable_1; --; 27: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 27: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 43; Start 43: test_cifspacegroup_12; --; 43: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 43: SUMMARY: UndefinedBehaviorSanitizer: undef,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:3701,test,test,3701,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,9%] Building CXX object test/CMakeFiles/test_runner.dir/cifspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cistranstest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/graphsymtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/gziptest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/implicitHtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/lssrtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/isomorphismtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/multicmltest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/regressionstest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/rotortest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/shuffletest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/smilestest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/spectrophoretest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/squareplanartest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereotest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereoperceptiontest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tautomertest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runne,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:52960,test,test,52960,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,91%] Building CXX object test/CMakeFiles/test_runner.dir/spectrophoretest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/squareplanartest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereotest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereoperceptiontest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tautomertest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/atom.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/datatest.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffgaff.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffghemical.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffmmff94.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffuff.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formalcharge.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/format.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formula.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/internalcoord.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmarts.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmiles.o; [ 97,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:53857,test,test,53857,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,"97: ../src/obconversion.cpp:302:24: runtime error: load of value 109, which is not a valid value for type 'bool'; 97: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 98; Start 98: test_rotor_3; --; 98: ../src/obconversion.cpp:302:24: runtime error: load of value 154, which is not a valid value for type 'bool'; 98: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 99; Start 99: test_rotor_4; --; 99: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 99: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 100; Start 100: test_shuffle_1; --; 100: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 100: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 101; Start 101: test_shuffle_2; --; 101: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 101: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 103; Start 103: test_shuffle_4; --; 103: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 103: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 104; Start 104: test_shuffle_5; --; 104: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 104: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 105; Start 105: test_smiles_1; --; 105: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 105: SUMMARY: UndefinedBehaviorSanitizer: undefined-beha",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:12698,test,test,12698,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,9:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 101: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 103; Start 103: test_shuffle_4; --; 103: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 103: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 104; Start 104: test_shuffle_5; --; 104: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 104: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 105; Start 105: test_smiles_1; --; 105: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 105: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 106; Start 106: test_smiles_2; --; 106: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 106: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 107; Start 107: test_smiles_3; --; 107: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 107: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 123; Start 123: test_stereo_6; --; 123: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 123: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 124; Start 124: test_stereoperception_1; --; 124: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 124: SUMMARY: UndefinedBehaviorSanitizer: undefi,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:13753,test,test,13753,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,9:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 182: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 183; Start 183: test_ffmmff94_5; --; 183: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 183: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 185; Start 185: test_ffuff_1; --; 185: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 185: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 203; Start 203: test_phmodel_1; --; 203: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 203: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 204; Start 204: test_residue_1; --; 204: ../src/residue.cpp:853:13: runtime error: member call on address 0x7fff3b32ed70 which does not point to an object of type 'OpenBabel::OBAtom'; 204: 0x7fff3b32ed70: note: object is of type 'OpenBabel::OBBase'; 204: 00 00 00 00 b0 9e 9e 36 b4 7f 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 204: ^~~~~~~~~~~~~~~~~~~~~~~; 204: vptr for 'OpenBabel::OBBase'; 204: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/residue.cpp:853:13 in ; 204: ../include/openbabel/atom.h:160:45: runtime error: member access within address 0x7fff3b32ed70 which does not point to an object of type 'OpenBabel::OBAtom'; 204: 0x7fff3b32ed70: note: object is of type 'OpenBabel::OBBase'; 204: 00 00 00 00 b0 9e 9e 36 b4 7f 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 204: ^~~~~~~~~~~~~~~~~~~~~~~; 204: vptr for 'OpenBabel::OBBase'; 204: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../include/openbabel/atom.h:160:45 in ; --;,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:19081,test,test,19081,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,9:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 99: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 100; Start 100: test_shuffle_1; --; 100: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 100: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 101; Start 101: test_shuffle_2; --; 101: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 101: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 103; Start 103: test_shuffle_4; --; 103: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 103: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 104; Start 104: test_shuffle_5; --; 104: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 104: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 105; Start 105: test_smiles_1; --; 105: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 105: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 106; Start 106: test_smiles_2; --; 106: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 106: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 107; Start 107: test_smiles_3; --; 107: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 107: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavi,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:13226,test,test,13226,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,": internalcoord_Test. 22/37 Test #22: internalcoord_Test ............... Passed 0.00 sec. Start 23: invalidsmarts_Test. 23/37 Test #23: invalidsmarts_Test ............... Passed 0.00 sec. Start 24: invalidsmiles_Test. 24/37 Test #24: invalidsmiles_Test ............... Passed 0.01 sec. Start 25: iterators_Test. 25/37 Test #25: iterators_Test ................... Passed 0.13 sec. Start 26: logp_psa_Test. 26/37 Test #26: logp_psa_Test ....................***Exception: SegFault 0.02 sec. Start 27: math_Test. 27/37 Test #27: math_Test ........................ Passed 0.13 sec. Start 28: mol_Test. 28/37 Test #28: mol_Test ......................... Passed 0.02 sec. Start 29: phmodel_Test. 29/37 Test #29: phmodel_Test .....................***Exception: SegFault 0.05 sec. Start 30: residue_Test. 30/37 Test #30: residue_Test ..................... Passed 0.03 sec. Start 31: ringtest_Test. 31/37 Test #31: ringtest_Test .................... Passed 0.13 sec. Start 32: smartstest_Test. 32/37 Test #32: smartstest_Test .................. Passed 0.21 sec. Start 33: smilesmatch_Test. 33/37 Test #33: smilesmatch_Test .................***Exception: SegFault 1.44 sec. Start 34: unitcell_Test. 34/37 Test #34: unitcell_Test .................... Passed 0.00 sec. Start 35: pytest_babel. 35/37 Test #35: pytest_babel .....................***Failed 0.03 sec. Start 36: pytest_sym. 36/37 Test #36: pytest_sym ....................... Passed 0.08 sec. Start 37: pytest_fastsearch. 37/37 Test #37: pytest_fastsearch ................***Failed 0.03 sec. 68% tests passed, 12 tests failed out of 37. Total Test time (real) = 4.23 sec. The following tests FAILED:. 	 2 - smiles_Test (SEGFAULT). 	 3 - stereo_Test (SEGFAULT). 	 7 - cistrans_Test (SEGFAULT). 	 9 - aromatest_Test (SEGFAULT). 	 16 - ffghemical_Test (Failed). 	 17 - ffmmff94_Test (Failed). 	 18 - ffuff_Test (Failed). 	 26 - logp_psa_Test (SEGFAULT). 	 29 - phmodel_Test (SEGFAULT). 	 33 - smilesmatch_Test (SEGFAULT). 	 35 - pytest_babel (Failed). 	 37",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:3800,Test,Test,3800,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability,: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 107: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 123; Start 123: test_stereo_6; --; 123: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 123: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 124; Start 124: test_stereoperception_1; --; 124: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 124: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 126; Start 126: test_stereoperception_3; --; 126: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 126: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 148; Start 148: test_tautomer_21; --; 148: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 148: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 165; Start 165: test_maereader_1; --; 165: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 165: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 166; Start 166: test_maereader_2; --; 166: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 166: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 173; Start 173: test_cansmi_1; --; 173: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 173: SUMMARY: UndefinedBehaviorSanitizer: undefined,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:15088,test,test,15088,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,: stereo_Test. 3/37 Test #3: stereo_Test ......................***Exception: SegFault 0.04 sec. Start 4: tetrahedral_Test. 4/37 Test #4: tetrahedral_Test ................. Passed 0.00 sec. Start 5: tetranonplanar_Test. 5/37 Test #5: tetranonplanar_Test .............. Passed 0.00 sec. Start 6: tetraplanar_Test. 6/37 Test #6: tetraplanar_Test ................. Passed 0.00 sec. Start 7: cistrans_Test. 7/37 Test #7: cistrans_Test ....................***Exception: SegFault 0.02 sec. Start 8: stereoperception_Test. 8/37 Test #8: stereoperception_Test ............ Passed 0.03 sec. Start 9: aromatest_Test. 9/37 Test #9: aromatest_Test ...................***Exception: SegFault 0.03 sec. Start 10: atom_Test. 10/37 Test #10: atom_Test ........................ Passed 0.00 sec. Start 11: bond_Test. 11/37 Test #11: bond_Test ........................ Passed 0.00 sec. Start 12: cansmi_Test. 12/37 Test #12: cansmi_Test ...................... Passed 1.27 sec. Start 13: cmlreadfile_Test. 13/37 Test #13: cmlreadfile_Test ................. Passed 0.02 sec. Start 14: conversion_Test. 14/37 Test #14: conversion_Test .................. Passed 0.01 sec. Start 15: datatest_Test. 15/37 Test #15: datatest_Test .................... Passed 0.00 sec. Start 16: ffghemical_Test. 16/37 Test #16: ffghemical_Test ..................***Failed 0.01 sec. Start 17: ffmmff94_Test. 17/37 Test #17: ffmmff94_Test ....................***Failed 0.01 sec. Start 18: ffuff_Test. 18/37 Test #18: ffuff_Test .......................***Failed 0.01 sec. Start 19: formalcharge_Test. 19/37 Test #19: formalcharge_Test ................ Passed 0.12 sec. Start 20: format_Test. 20/37 Test #20: format_Test ...................... Passed 0.01 sec. Start 21: formula_Test. 21/37 Test #21: formula_Test ..................... Passed 0.21 sec. Start 22: internalcoord_Test. 22/37 Test #22: internalcoord_Test ............... Passed 0.00 sec. Start 23: invalidsmarts_Test. 23/37 Test #23: invalidsmarts_Test ............... Passed 0.00 sec. S,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:1988,Test,Test,1988,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability,: undefined reference to `g_log_structured_standard'; //usr/lib/x86_64-linux-gnu/libcairo.so.2: undefined reference to `FT_Get_Var_Design_Coordinates'; collect2: error: ld returned 1 exit status; src/GUI/CMakeFiles/obgui.dir/build.make:149: recipe for target 'bin/obgui' failed; make[2]: *** [bin/obgui] Error 1; CMakeFiles/Makefile2:6751: recipe for target 'src/GUI/CMakeFiles/obgui.dir/all' failed; make[1]: *** [src/GUI/CMakeFiles/obgui.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/canonconsistenttest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/canonstabletest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/carspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cifspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cistranstest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/graphsymtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/gziptest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/implicitHtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/lssrtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/isomorphismtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/multicmltest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/regressionstest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/rotortest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/shuffletest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/smilestest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/spectrophoretest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/squareplanartest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereotest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereoperceptiontest.o; [ 92%] Building CXX object test/CMakeFiles/t,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:52213,test,test,52213,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,":. You might have heard that we’ve integrated LGTM’s underlying CodeQL analysis engine natively into GitHub. The result is [**GitHub code scanning**](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! We tested it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On ever",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2546:1165,test,tested,1165,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2546,1,['test'],['tested']
Testability,"://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.0; Operating system and version: macOS 10.15.5. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; `obabel ... -h` should ""hydrogenate"" a molecule: C2N --> C2H7N. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; `obabel -h` does not change the molecule, nor is the `-h` flag even listed in the help text.; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```; [14:23:03] tmck:stoichkit git:(feat/reaction-domain-model*) $ obabel -icdxml priv/cd.xml -omolreport -h; TITLE: 47; FORMULA: C2N; MASS: 38.0281; TOTAL SPIN: 2; ATOM: 1 N TYPE: N3 HYB: 3 CHARGE: -0.2150; ATOM: 2 C TYPE: C3 HYB: 3 CHARGE: 0.1075; ATOM: 3 C TYPE: C3 HYB: 3 CHARGE: 0.1075; BOND: 0 START: 1 END: 2 ORDER: 1; BOND: 1 START: 1 END: 3 ORDER: 1; 1 molecule converted; ```; (where `priv/cd.xml` contents is shown here: https://gist.github.com/ttymck/931b4594d827ea60c415d1191f6f3717). I would expect `FORMULA: C2H7N`. As well, `-h` is not included in the help text, so it is not clear if this feature is still available:. ```; [14:20:41] tmck $ obabel --help | grep -e '-h' ; [14:21:37] tmck $; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2266:1393,test,test,1393,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2266,1,['test'],['test']
Testability,:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 100: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 101; Start 101: test_shuffle_2; --; 101: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 101: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 103; Start 103: test_shuffle_4; --; 103: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 103: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 104; Start 104: test_shuffle_5; --; 104: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 104: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 105; Start 105: test_smiles_1; --; 105: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 105: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 106; Start 106: test_smiles_2; --; 106: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 106: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 107; Start 107: test_smiles_3; --; 107: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 107: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 123; Start 123: test_stereo_6; --; 123: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 123: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavi,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:13490,test,test,13490,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pyb",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:15104,test,test,15104,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,1,['test'],['test']
Testability,"; -- Use std::shared_ptr in memory; -- Could NOT find Boost; -- Could NOT find Boost; -- Maestro formats will NOT be supported. Please install Boost to enable Maestro formats.; -- Coordinate generation with Coordgen will NOT be supported. Please install Boost to enable Maestro formats.; -- Could NOT find RapidJSON (missing: RAPIDJSON_INCLUDE_DIRS) (Required is at least version ""1.1.0""); -- JSON formats will be supported. Using RapidJSON 1.1.0 at /home/kk/openbabel-openbabel-3-1-1/external/rapidjson-1.1.0/include; -- Cairo found. PNG output will be supported.; -- Could NOT find Boost; -- Could NOT find Boost; -- Attempting to build the GUI; -- wxWidgets not found => GUI will not be built; -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR); -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR) (Required is at least version ""2.0""); -- SWIG 2.0 NOT found; -- Configuring done; -- Generating done; -- Build files have been written to: /home/kk/build. **make test**; 97% tests passed, 6 tests failed out of 227. Total Test time (real) = 64.56 sec. The following tests FAILED:; 221 - pybindtest_bindings (Failed); 222 - pybindtest__pybel (Failed); 223 - pybindtest_example (Failed); 224 - pybindtest_obconv_writers (Failed); 225 - pybindtest_cdjsonformat (Failed); 226 - pybindtest_pcjsonformat (Failed); Errors while running CTest; Makefile:72: recipe for target 'test' failed; make: *** [test] Error 8. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. 1. download the sourse code(openbabel-openbabel-3-1-1.tar.gz); 2. sudo apt install libboost-dev; 3. sudo apt install gcc g++ make cmake; 4. sudo apt install libxml2-dev zlib1g-dev libcairo2-dev libeigen3-dev libopenbabel-dev; 5. sudo apt install python3-dev; 6. tar -xzvf openbabel-openbabel-3-1",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2234:2441,test,test,2441,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2234,3,['test'],"['test', 'tests']"
Testability,"; ../../include\openbabel/reaction.h(56) : error C2228: left of '.size' must have class/struct/union; type is ''unknown-type''; ../../include\openbabel/reaction.h(59) : error C2065: '_products' : undeclared identifier; ../../include\openbabel/reaction.h(59) : error C2228: left of '.size' must have class/struct/union; type is ''unknown-type''; ../../include\openbabel/reaction.h(62) : error C2065: '_reactants' : undeclared identifier; ../../include\openbabel/reaction.h(62) : error C2228: left of '.push_back' must have class/struct/union; type is ''unknown-type''; ../../include\openbabel/reaction.h(62) : error C2065: 'sp' : undeclared identifier; ../../include\openbabel/reaction.h(65) : error C2065: '_products' : undeclared identifier; ../../include\openbabel/reaction.h(65) : error C2228: left of '.push_back' must have class/struct/union; type is ''unknown-type''; ../../include\openbabel/reaction.h(65) : error C2065: 'sp' : undeclared identifier; ../../include\openbabel/reaction.h(68) : error C2065: '_ts' : undeclared identifier; ../../include\openbabel/reaction.h(68) : error C2065: 'sp' : undeclared identifier; ../../include\openbabel/reaction.h(71) : error C2065: '_agent' : undeclared identifier; ../../include\openbabel/reaction.h(71) : error C2065: 'sp' : undeclared identifier; ..\..\src\formats\chemdrawcdx.cpp(755) : warning C4065: switch statement contains 'default' but no 'case' labels; ..\..\src\formats\chemdrawcdx.cpp(1087) : warning C4065: switch statement contains 'default' but no 'case' labels; chem3dformat.cpp; cccformat.cpp; carformat.cpp; cacheformat.cpp; cacaoformat.cpp; boxformat.cpp; bgfformat.cpp; balstformat.cpp; amberformat.cpp; alchemyformat.cpp; adfformat.cpp; acrformat.cpp; Generating Code...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBMoreFormats\Release\BuildLog.htm""; OBMoreFormats - 61 error(s), 12 warning(s); ========== Build: 0 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========. Reported by: peterennis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/775:11167,log,log,11167,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/775,1,['log'],['log']
Testability,"; > https://cloud.githubusercontent.com/assets/10948687/6564527/ceb96ec8-c67f-11e4-813a-cfdbbf30bc30.png; > ; > And the Cmake Log is like following:; > Using included inchi library.; > checking for module 'cairo'; > package 'cairo' not found; > Could NOT find Cairo. PNG output will NOT be supported.; > GUI will not be built; > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > Syntax Warning in cmake code at; > ; > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:14; > ; > Argument not separated from preceding token by whitespace.; > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > Syntax Warning in cmake code at; > ; > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; > ; > Argument not separated from preceding token by whitespace.; > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > Syntax Warning in cmake code at; > ; > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; > ; > Argument not separated from preceding token by whitespace.; > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > Syntax Warning in cmake code at; > ; > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:39; > ; > Argument not separated from preceding token by whitespace.; > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(E",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:1361,test,test,1361,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['test'],['test']
Testability,"; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows 10 and Linux. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; The NET binding worked fine under the net core 2.1, net core 3.1 and net framework 4.x at version 2.4.1 and 3.0.0. I have tested both on Windows and Linux system. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The NET binding fails to work at net framework 4.x and all versions of net core. System.BadImageFormatException:“Could not load file or assembly 'OBDotNet, Version=0.5.0.0, Culture=neutral, PublicKeyToken=3069c9c4f488e4bd'. An attempt was made to load a program with an incorrect format”. It looks like the OBDotNet.dll has not been updated since version 2.3.2, the targeted framework is still net framework 3.5. For some reason, it still works under net framework 4.x and net core. But it no longer works in version 3.1.1. Those who use net framework or net core environment, please do not upgrade to 3.1.1, stay at 3.0.0 or lower. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - thi",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2268:988,test,tested,988,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2268,1,['test'],['tested']
Testability,"; Creating library ../OBConv.lib and object ../OBConv.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBConv\Release\BuildLog.htm""; OBConv - 0 error(s), 0 warning(s); ------ Build started: Project: OBCommonFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; smilesformat.cpp; pdbformat.cpp; opendxformat.cpp; obmolecformat.cpp; mol2format.cpp; mdlformat.cpp; atomrecord.cpp; APIInterface.cpp; Generating Code...; Linking...; Creating library ../obcommon.lib and object ../obcommon.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCommonFormats\Release\BuildLog.htm""; OBCommonFormats - 0 error(s), 0 warning(s); ------ Build started: Project: OBFPRT, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; forcefielduff.cpp; forcefieldmmff94.cpp; forcefieldghemical.cpp; forcefield.cpp; ..\..\src\forcefield.cpp(1828) : warning C4244: 'argument' : conversion from 'time_t' to 'unsigned int', possible loss of data; fingerprint.cpp; finger3.cpp; finger2.cpp; Generating Code...; Linking...; Creating library ../OBFPRT.lib and object ../OBFPRT.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFPRT\Release\BuildLog.htm""; OBFPRT - 0 error(s), 1 warning(s); ------ Build started: Project: FastSearch, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; fingerprintformat.cpp; fastsearchformat.cpp; Generating Code...; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFS\Release\BuildLog.htm""; FastSearch - 0 error(s), 0 warning(s); ========== Build: 6 succeeded, 0 failed, 0 up-to-date, 0 skipped ==========. Original comment by: peterennis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781167:3493,log,log,3493,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781167,2,['log'],['log']
Testability,"; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolum",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:7821,test,test,7821,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,2,['test'],"['test', 'testfastsearch']"
Testability,"; test 59; Start 59: test_graphsym_5; --; 59: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 59: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 60; Start 60: test_gzip_1; --; 60: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; 60: ../src/obconversion.cpp:302:24: runtime error: load of value 255, which is not a valid value for type 'bool'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 61; Start 61: test_addh_1; --; 61: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 61: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 62; Start 62: test_implicitH_1; --; 62: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 62: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 66; Start 66: test_lssr_4; --; 66: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 66: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 67; Start 67: test_lssr_5; --; 67: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 67: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 72; Start 72: test_isomorphism_5; --; 72: ../src/obconversion.cpp:302:24: runtime error: load of value 53, which is not a valid value for type 'bool'; 72: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.c",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:6274,test,test,6274,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"<!--; --> I'm trying to run a pretty simple conversion of a text file to pdb. I'm running my program on python 2.7 in a conda virtual environment on MacOSx, but I'm getting an error code. . My code:; `import pybel`; `drug_3d = pybel.readfile(""text"", ""/Users/myname/Documents/drug.txt"")`; `drug_3d_output = pybel.Outputfile(""pbd"", ""/Users/myname/Documents/drug.pdb"")`; `drug_3d_output.write(drug_3d)`; `drug_3d_output.close()`. I get this error code:; ""Traceback (most recent call last):; File ""/Users/myname/Documents/myprogram.py"", line 20, in <module>; drug_3d_output.write(drug_3d); File ""/Users/myname/miniconda2/envs/myenv/lib/python2.7/site-packages/pybel.py"", line 272, in write; self.obConversion.WriteFile(molecule.OBMol, self.filename); AttributeError: 'generator' object has no attribute 'OBMol'. - [X ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Most recent on conda; Operating system and version: MacOSx Sierra. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. --> . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior --> Error; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; --> ; [drug.txt](https://github.com/openbabel/openbabel/files/1182056/drug.txt)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1607:1479,test,test,1479,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1607,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes. ; -->; If a chlorine atom is represented as CL instead of Cl in a file Open Babel, does not properly convert the symbol. This can easily be seen when writing the SMILES out for the file. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: v3.1.1 conda-forge; Operating system and version: Manjaro 20.2.1, Python 3.8. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; SMILES: CCl. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; SMILES: [CH3].*; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Writing the SMILES string for the molecule below resulted in the [CH3].* SMILES output.; ```; from openbabel import pybel. mol = next(pybel.readfile(""xyz"", ""ccl.xyz"")); print(mol.write(""smi""); ```; 5. C -3.25634 0.95398 0.05312; CL -1.48936 0.95398 0.05311; H -3.61336 1.82622 0.60505; H -3.61337 0.03988 0.53253; H -3.61338 0.99586 -0.97822",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2333:1472,test,test,1472,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2333,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; --> . - [X] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: win10, python 3.8 anaconda. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; mol smiles CC(N)C1=CC2=C(C=C1)C=NC=C2, logP from chemaxon 1.29. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I use pybel to calculate the logP of the mol above, the result is 0. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; from openbabel import pybel as pb; my=pb.readstring(""smi"", ""CC(N)C1=CC2=C(C=C1)C=NC=C2""); my.calcdesc(descnames=['MW', 'logP', 'HBA1', 'HBD']); {'MW': 172.22637999999998, 'logP': 0.0, 'HBA1': 2.0, 'HBD': 1.0}",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2372:879,log,logP,879,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2372,5,"['log', 'test']","['logP', 'test']"
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. ## Environment Information; Open Babel version: Current github master (2.4.1+). ## Expected Behavior; When converting the test file 1ubq.pdb.gz to smi, the Arg is not correctly perceived. The guanidinium group is perceived as Arg-N=C([NH2+])N, which is a H-deficient N, instead of Arg-[N+]=C(N)N for example. Note: this may be related to #949 somehow.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1548:708,test,test,708,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1548,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ X ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Win 10 64bit. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Selecting ""xyz"" as input or output format in the graphical user interface. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The option is not available. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Clicking on input/output formats within obgui doesn't show xyz format.; ![obgui](https://user-images.githubusercontent.com/69631139/91174038-025d8400-e6df-11ea-86f0-adb7daa7cd31.png); ![obgui2](https://user-images.githubusercontent.com/69631139/91174042-02f61a80-e6df-11ea-8352-47f7d0b350fc.png)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2275:1340,test,test,1340,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2275,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ Yes] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: Windows 10 . ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I tried canonical smiles, smi and smiles format to get a fasta file output with proper values. Note I am getting smiles from Chembl database. . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; >Unknown molecule 0 bp; generated with OpenBabel 2.4.1; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; take any canonical smiles & convert to fasta ; COC(=O)c1ccc2c(c1)c1ccccc1n2CCCN1C[C@H](C)N[C@H](C)C1; --",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2359:1436,test,test,1436,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2359,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version:windows anaconda python2.7.18. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; `Error; Traceback (most recent call last):; File ""D:\anaconda\envs\my-python2.7\lib\unittest\case.py"", line 329, in run; testMethod(); File ""E:\plip-stable\plip\test\test_literature_validated.py"", line 469, in test_1aku; tmpmol.characterize_complex(ligand); File ""E:\plip-stable\plip\modules\preparation.py"", line 1409, in characterize_complex; lig_obj = Ligand(self, ligand); File ""E:\plip-stable\plip\modules\preparation.py"", line 1003, in __init__; self.inchikey = self.molecule.write(format='inchikey'); File ""D:\anaconda\envs\my-python2.7\lib\site-packages\pybel.py"", line 527, in write; format). **ValueError: inchikey is not a recognised Open Babel format`**. environment info:; ![image](https://user-images.githubusercontent.com/32454333/81146499-fec8b480-8faa-11ea-9433-65d6ea99796b.png)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2194:1193,test,testMethod,1193,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2194,2,['test'],"['test', 'testMethod']"
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2143:1215,test,test,1215,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2143,2,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [X] This is a feature request. ## Environment Information; Open Babel version: OpenBabel 3.1.1 (3.1.1+dfsg-6); Operating system and version: Linux Debian 12/bookworm [testing]. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; The current definition of the bond block in `.mol` and `.sdf` (v3000) allows C=C double bonds without assigned (*E*)/(*Z*) configuration. See, for example, Biovia's documentation ([link to pdf](https://web.archive.org/web/20210219065450/https://discover.3ds.com/sites/default/files/2020-08/biovia_ctfileformats_2020.pdf)) by August 2020, p. 11, which offers cases `0`, `1`, `2`, or `3`. Let me suggest OpenBabel retains `CFG=[x]` in a line like; ```; M V30 3 1 3 4 CFG=2; ```; when writing such a file. Similar to molecule sketchers, the request to visualize a structure as a `.svg` could yield either a wavy single bond attached to the double bond in question .or. a crossed double bond to mark the lack of specification; apparently, this is not yet enabled. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Passing a `.sdf` about alkenes including the `CFG=2` entry (generation by [DataWarrior](https://openmolecules.org/datawarrior/index.html),",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2429:805,test,testing,805,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2429,1,['test'],['testing']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Linux Mint 19.3 64-bit Xfce and Windows 10 ver 1909. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; obspectrophore generates spectrophores that are decimal fractions. Consequently, comparisons must be done with distance measures such as Euclidean distances rather than Tanimoto distances or Tanimoto similarity coefficients. Could the spectrophore sets for each compound simply be multiplied by a constant (e.g., 10^5) to convert all the numbers to integers so that Tanimoto coefficients could then be computed? Would this be a legitimate procedure?; ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Please see description above.; ## Steps to Reproduce; <!--; This is the current consistent behavior. If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2142:1796,test,test,1796,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2142,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: 3.1.1 x86, python bindings 3.1.1 from the Unofficial Windows Binaries for Python Extension Packages.; Operating system and version: Windows 10 20H2 64bit, Python 3.6.5 32bit. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Pybel should allow writing to virtual files such as StringIO() and BytesIO() or return the png depiction as a string if no file has been specified, this is already doable using openbabel's OBConversion().WriteString(), integrating it to Pybel will be a good QOL improvement. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Pybel module only accepts os.Pathlike objects in draw(), and has no return. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2375:1709,test,test,1709,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2375,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: Open Babel 2.3.2 -- Dec 18 2015 -- 10:48:26; Operating system and version: ubuntu 16.04 LTS. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; In current version, suppose I want to extract xyz corrdinates from adfout file, I use the following code, ; /usr/bin/babel -i adfout test.out -o xyz geom.xyz; I found the xyz values are in ""10.5f"" format. ; How to change this format to ""20.12f"" ? . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1693:1033,test,test,1033,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1693,2,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.1.0 -- Nov 21 2020 -- 20:38:43 (homebrew); Operating system and version: MacOS 11.2.1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. I would like to be able to specify the write options when using mol.write() like in the Outputfile.write() or the Readfile() or ReadString(). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. The mol.write() does not support an opt dictionary. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2341:1477,test,test,1477,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2341,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.1.0 -- Nov 21 2020 -- 20:38:43; Operating system and version: MacOS 11.2.3. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I would like there to be some option for turning the verbosity on or off of the command. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Right now you can see in https://github.com/openbabel/openbabel/blob/master/src/conformersearch.cpp that in the constructor the default log is set to std out. . ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2348:1319,log,log,1319,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2348,2,"['log', 'test']","['log', 'test']"
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version:Ubuntu 18.04. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; The libmaeparser library should get statically built when BUILD_SHARED=OFF. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Gets built as a dynamic library, resulting in a link time error linking with other static libraries. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Temporary workaround was to; remove SHARED from ; add_library(maeparser SHARED Buffer.cpp MaeBlock.cpp MaeParser.cpp Reader.cpp Writer.cpp); in openbabel-3.0.0/external/maeparser-1.1/CMakeLists.txt; but the right fix is probably to make it dependent on BUILD_SHARED.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2089:1411,test,test,1411,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2089,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [X] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Linux Debian 12/bookworm [testing], Python 3.9.8. ## Expected Behavior. According to `obabel -L png`, it is possible to append/include e.g., the mol file to/in the `.png` written. See e.g., legacy documentation of OpenBabel 2.3.1 [here](http://openbabel.org/docs/current/FileFormats/PNG2_format.html) and comment by @frederikw in issue report [here](https://github.com/openbabel/openbabel/issues/2426). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. Observation: The `.png` are written and are intelligible. By report of the CLI, the inclusion of the structure file however fails. Suggested changes, 1st class:; + Bug fix to restore the functionality. Suggested changes, 2nd class:; + With the `.pngj` format ([documentation](http://wiki.jmol.org/index.php/File_formats/Export)), Jmol apparently offers a similar export of static (classical `.png` like) and interactive (model) data. In Jmol, it is possible, e.g., to read this extended `.png`, to interact and export the model as `.sdf` «as usual». See archive pngj_examples.zip for examples. It would be nice if Jmol's `.pngj` would be understood by OpenBabel, and the augmente",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2428:747,test,testing,747,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2428,1,['test'],['testing']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [X] This could be a serious problem for Python users. . There is a pyBEL module for parsing and handling biological networks https://pypi.python.org/pypi/PyBEL/. It is installed with the pip command as pybel, and it is imported into python as pybel. How does one import openbabel's pybel when pyBEL is installed on one's computer? . <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1700:1076,test,test,1076,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1700,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1, 2.3.2; Operating system and version: Ubuntu 16.04 Xenial. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; When using the following command:; `obabel MMFF94_hypervalent.sdf -O MMFF94_hypervalent.smi --energy --ff MMFF94 --append Energy --log`. to compute the energies of molecules from the [validation suite ](http://www.ccl.net/cca/data/MMFF94/), a few molecules show an energy that doesn't match that provided by the reference suite.; [obabel241_reference_calibration.txt](https://github.com/openbabel/openbabel/files/1727000/obabel241_reference_calibration.txt); [MMFF94_hypervalent.smi.txt](https://github.com/openbabel/openbabel/files/1727003/MMFF94_hypervalent.smi.txt); The following molecule show the largest difference (in both v2.3.2 and v2.4.1):. 1. CUGLOF; 2. FORJIF; 3. GIHZEC; 4. JALSOE; 5. SEGWEG; 6. VIGTUA; 7. SO18A; 8. ERULE_03. The base SDF file was taken from the MMFF94 website and modified to account for the formal charges that weren't explicit in the original mol2 file. Is this a mistake from my part or in my open babel distribution?. Many thanks for developing open babel!. Best Regards. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If sugge",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1778:1004,log,log,1004,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1778,1,['log'],['log']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Gentoo Linux, 5.6.15-gentoo. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Failed 0/8 test programs. 0/34 subtests failed. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Can't call method ""GetMass"" on an undefined value at t/data.t line 21.; t/data.t ........... Dubious, test returned 255 (wstat 65280, 0xff00) ; Failed 1/2 subtests . t/data.t (Wstat: 65280 Tests: 1 Failed: 0); Non-zero exit status: 255; Parse errors: Bad plan. You planned 2 tests but ran 1.; Files=8, Tests=34, 0 wallclock secs ( 0.03 usr 0.01 sys + 0.39 cusr 0.06 csys = 0.49 CPU); Result: FAIL; Failed 1/8 test programs. 0/34 subtests failed. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```; swig -perl5 -c++ -small -O -templatereduce -naturalvar -I/usr/include/openbabel3 -o scrips/perl/openbabel-perl.cpp -outdir scrips/perl scripts/openb",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2247:885,test,test,885,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2247,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; **Open Babel version:** `Open Babel 2.4.90 -- Oct 15 2018 -- 13:24:25`; This is the latest master from GitHub cloned and compiled, passes all tests.; **Operating system and version:** Ubuntu 18.04. $ uname -a; Linux nuke 4.4.0-137-generic #163-Ubuntu SMP Mon Sep 24 13:14:43 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Dear Open Babel, I am having troubles with the most recent version from Github. I am trying to convert smiles to 2d PNG files with the command:. obabel -:c1ccccc1 -o test.png. With my old version of Open Babel, `Open Babel 2.4.1 -- Feb 2 2017 -- 11:49:37`; I get a correctly looking png file:. Inline-style: ; ![alt text2](https://i.imgur.com/WpUcWKE.png ""Old Open Babel""). ## Actual Behavior. With the most recent Open Babel, I get a corrupted image with the exact same input line; ![alt tex12](https://i.imgur.com/OM9yIqx.png ""New Open Babel""). ## Steps to Reproduce. Running the following command. obabel -:c1ccccc1 -o test.png",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1900:839,test,tests,839,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1900,3,['test'],"['test', 'tests']"
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.3.2; Operating system and version: Ubuntu 18.04.1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Qeq charges computed with openbabel for IRMOF-1 (also named MOF-5) coherent with the values computed with the same protocol as implemented in the code provided by B. Wells et al. (https://pubs.acs.org/doi/suppl/10.1021/jp510415h, see archive in the Supporting Information). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. Qeq charges are completely different, also unphysical: e.g., negative on the Zn ion (-2.66 while the correct one should be +0.46). ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; obabel IRMOF-1.cif --partialcharge qeq -O IRMOF-1_qeq-obabel.mol2; Output and comparison: [IRMOF-1.zip](https://github.com/openbabel/openbabel/files/2479296/IRMOF-1.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1899:1641,test,test,1641,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1899,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1 (or the 2.3.2 GUI version); Operating system and version: CentOS Linux 7 (Core). ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Converting a periodic structure (e.g. .pdb file) to Tinker MM3 format. . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Because of the periodic boundary conditions, it appears the bonds can not be recognized and the MM3 atom types can not be derived, leading to a segmentation fault. However **the MM2 atom types can be derived** (dropping the -x3 option). I don't mind the bonds not being recognized, I could just create a 3x3x3 supercell and look at the atom types of the central cell. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; obabel -ixyz test.xyz -otxyz -x3; [test.zip](https://github.com/openbabel/openbabel/files/7667137/test.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2436:1711,test,test,1711,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2436,4,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1.; Operating system and version: Windows 10. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. --> conversion of SMILES (approximately 500 rows) to mol2 output (including hydrogen bonds with polar atoms and 3D coordinates). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior --> The program freezes and takes up all memory of my pc; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1709:1409,test,test,1409,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1709,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: Debian Buster. ## Expected Behavior; I would want to convert the output geometry given in the NWChem output into xyz format. ## Actual Behavior; The coordinates are not the ones from the final geometry optimization but from the first given geometry in the output file and the x and y coordinates only of the first atom given are both changed to exactly 0. ## Steps to Reproduce; This happens with all tested NWChem output files.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2290:1155,test,tested,1155,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2290,1,['test'],['tested']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: Windows 7. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Calculated logP of Brc1c(Oc2c(Br)cc(Br)cc2O)ccc(Br)c1 = 6.2345; ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Calculated logP of Brc1c(Oc2c(Br)cc(Br)cc2O)ccc(Br)c1 = 0; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Fresh install of 2.4.1 resulted in actual behavior. After additional installation of 2.3.2, logP calculation was as expected for both versions.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1635:866,log,logP,866,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1635,4,"['log', 'test']","['logP', 'test']"
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: win10; conda list:; openbabel 2.4.1 py27_2 openbabel; ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; calculate the maccs fingerprint via compounds.calcfp('maccs'). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>; MACCS is not in the fingerprint list of pybel.fps; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Install openbabel via ; `conda install -c openbabel openbabel`; Then; ```python; import pybel; pybel.fps; # ['ecfp0', 'ecfp10', 'ecfp2', 'ecfp4', 'ecfp6', 'ecfp8', 'fp2', 'fp3', 'fp4']; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1573:1387,test,test,1387,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1573,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: CentOS 8.1.1911. ## Expected Behavior; After building OpenBabel I expected ctest to run all the tests and for them all to pass. ## Actual Behavior; The 1st test (unittest) is skipped (Not Run). This appears to be because ctest expects the unittest executable to be in build/tests whereas it's actually in build/bin. After copying unittest to build/test all tests are run and pass.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2161:850,test,tests,850,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2161,5,['test'],"['test', 'tests']"
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Win 10. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Openbabel 2.4.1 generates such structures correctly, 3.0.0 crashes every time. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; Generate 3D coordinates for a structure ""c1ccc(F)cc1"" using either the GUI or using python bindings.; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2117:1409,test,test,1409,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2117,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.0; Operating system and version: Debian 10. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Correctlly convert sdf to pdbqt and add hydrogen in ph 7.4; ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; More than one ROOT item appear in pdbqt file. It actually convert one compound into two. Using command: obabel z.sdf -O z.pdbqt -p 7.4. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; The sdf file and pdbqt file is here.; [File.zip](https://github.com/openbabel/openbabel/files/7641705/File.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2435:1427,test,test,1427,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2435,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1-x64; Operating system and version: windows10. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Normal installation; ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; After running the executable installation package OpenBabel-3.1.1-x64.exe all environment variables in $PATH will be removed, only openbabel left; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2304:1403,test,test,1403,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2304,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CenOS 7. ## Description; <!-- Describe the intended output or what you expected to see. -->; I have a SMILES file ""test.smi"":. ```; CC1(C)[C@H](CC[C@@]2(C)[C@H]1CC[C@]3(C)[C@@H]2C(=O)C=C4[C@@H]5C[C@](C)(CC[C@]5(C)CC[C@@]34C)C(=O)O)O[C@H]6O[C@@H]([C@@H](O)[C@H](O)[C@H]6O[C@@H]7O[C@@H]([C@@H](O)[C@H](O)[C@H]7O)C(=O)O)C(=O)O; ```. Openbabel could never successfully generate 3d coordinates for this smiles file:. obabel test.smi -O test.sdf --gen3d. The warning information is as below:; ```; ==============================; *** Open Babel Warning in CorrectStereoAtoms; Could not correct 3 stereocenter(s) in this molecule (); with Atom Ids as follows: 7 9 21; Warning: Stereochemistry is wrong, using the distance geometry method instea; ```; The program will then never finish after showing this warning information.; It seems that there is a problem with the distance geometry method.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2280:869,test,test,869,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2280,3,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 7.9/RHEL 8.4. ## Expected Behavior; print xyz format of geometry; ## Actual Behavior; obabel segfaults; ## Steps to Reproduce; obabel h2.log -oxyz; When I try to read a Gaussian 16 CBSQ-B3 log file, OpenBabel segfaults. (obabel g16-cbsqb3.log -oxyz); If I delete all lines before "" Link1: Proceeding to internal job step number 5."" in the output file, then openbabel can process the file (obabel -ig16 h2_laststep.log -oxyz), but probably giving a wrong energy. The same error is not happening when I run version 2.4.1. with gdb (without debug info):; ```; Program received signal SIGSEGV, Segmentation fault.; 0x00007ffff7599478 in OpenBabel::OBAtom::GetDistance(OpenBabel::OBAtom*) (); from /apps/gent/CO7/skylake-ib/software/OpenBabel/3.1.1-iimpi-2020a-Python-3.8.2/lib/libopenbabel.so.7; ```; [h2.log](https://github.com/openbabel/openbabel/files/8383268/h2.log)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2457:898,log,log,898,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2457,6,['log'],['log']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: win 10, python 3.8. ## Expected Behavior; I want to convert the smi to 3D structure and save the mol in mol2 format. But the jupyter lab interface was restarted automatically after the code was executed with error information.; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; the reported error is information below,; *** Open Babel Error in OpenBabel::OBBuilder::GetFragmentCoord; Rigid fragment c1cccnc1 in rigid-fragments.txt has all zero coordinates. <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; from openbabel import pybel; mol = pybel.readstring(""smi"", ""OC(C1=NC=CC=C1CC2=CC=C(C3CCC(S(=O)(NC)=O)CC3)C=C2)=O""); mol.make3D(); <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2332:1735,test,test,1735,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2332,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Open Babel 2.4.1; Operating system and version: CentOS release 6.7 . ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; ![image](https://user-images.githubusercontent.com/49271274/55551215-349aca00-5715-11e9-9d8a-f88136748c3f.png). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; ![image](https://user-images.githubusercontent.com/49271274/55551727-71b38c00-5716-11e9-933d-454568dcfbc0.png); <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; [bnb_TPSS_beta_noethylene.txt](https://github.com/openbabel/openbabel/files/3043157/bnb_TPSS_beta_noethylene.txt)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1957:1475,test,test,1475,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1957,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Trunk as of 2017-05-31; Operating system and version: Mac OSX 10.12.5 (but also Ubuntu 16.04). ## Expected Behavior; When depicting a molecule with a cyclopropyl with stereochemistry on the cyclic carbons, the wedges are best shown ""extracyclicly"". ## Actual Behavior; The wedge bonds end up in the cycle, see added image.; ![test](https://cloud.githubusercontent.com/assets/86855/26625417/4bd49f68-45f4-11e7-9dbc-4bab996add05.png). ## Steps to Reproduce; obabel -ismi -:""C[C@H]1[C@]([C@]1([H])C(O)=O)([H])CC"" -O test.png",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1581:1043,test,test,1043,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1581,2,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: `Open Babel 3.0.0 -- Oct 20 2019 -- 15:03:24`; Operating system and version: `macOS 10.15.1`. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ```; obrms --a; ```; should fail with the clear message; ```; obrms: invalid option -- a; Unrecognized option: 63; ``` ; as it happens with `obrms -a`. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. A segmentation fault occurs:; ```; obrms --a; [1] 17978 segmentation fault obrms --a; ```; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. See above.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2071:1520,test,test,1520,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2071,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: both master/2.4.90 and 2.4.1; Operating system and version: Ubuntu on windows. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; ![image](https://user-images.githubusercontent.com/29393696/45576948-6e19ef80-b82e-11e8-9793-dc80f6fb3406.png). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; ![1](https://user-images.githubusercontent.com/29393696/45577003-bcc78980-b82e-11e8-81b7-7ebd71e8b3ad.png). ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; $ obabel test.smi -Otest.png. test.smi:; [H+].CC[O-].CC[O-]. I uploaded more examples here. I was trying to find a general rule about when the bug would show up but couldn't find one. It seems super random. ; [pics.zip](https://github.com/openbabel/openbabel/files/2385189/pics.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1889:1482,test,test,1482,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1889,3,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: c3143e6235788ddd2c0a9d8298ad4873a5dbc81d; Operating system and version: Debian 11.1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. No undefined behaviors are detected (during test). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. Undefined behaviors are detected at:; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/include/openbabel/atom.h#L160; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichi_bns.c#L2737; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichicano.c#L128; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichicano.c#L1676; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichicano.c#L1677; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/graphsym.cpp#L389; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/obconversion.c",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:936,test,test,936,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: master; Operating system and version: MinGW windows crosscompiling . ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. openbabel/src/formats/fpsformat.cpp: Missed header; `#include <ctime>`",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1990:1251,test,test,1251,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1990,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2181:1215,test,test,1215,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2181,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2020:1214,test,test,1214,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2020,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:development version; Operating system and version:OS X EI Capitan version 10.11.5. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; These are the charges of phenol hydroxyl group published in QTPIE paper. https://www.sciencedirect.com/science/article/pii/S0009261407002618; 12 O 0.0483 2.3035 0.0000 O.3 1 UNL1 -0.82; 13 H -0.8450 2.6610 0.0000 H 1 UNL1 0.51; ## Actual Behavior; <!--- -->; These are the charges of hydroxyl group in phenol calculated by; babel -isdf phenol.sdf -omol2 -O phenol-qtpie.mol2 --partialcharge qtpie; 12 O 0.0483 2.3035 0.0000 O.3 1 UNL1 -1.3781; 13 H -0.8450 2.6610 0.0000 H 1 UNL1 0.7656; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1865:1646,test,test,1646,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1865,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.1.1 -- Jun 10 2021 -- 04:27:50 / libopenbabel7 3.1.1+dfsg-6; Operating system and version: Linux Debian 12/bookworm, branch testing. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I would like to assign InChI with the optional fixed H-layer. If used in conjunction with standard InChI, this information may be used to identify tautomers. This was implemented recently in Jmol (version 14.32.12, 2022-01-18 00:28:54; [reference](https://sourceforge.net/p/jmol/mailman/message/37419194/)). Thus -- lacking identification of an explicit example in the documentation -- an input like; ```python; from openbabel import pybel. mol = pybel.readstring(""smi"", ""Oc1ccccn1"") # i.e., 2-hydroxy pyridine; print(mol.write([""inchi"", ""xFixedH""])); ```; does not yield the anticipated (non standard) InChI; ```bash; InChI=1/C5H5NO/c7-5-3-1-2-4-6-5/h1-4H,(H,6,7)/f/h7H; ```. ## Actual Behavior; ```python; from openbabel import pybel. lactim = pybel.readstring(""smi"", ""Oc1ccccn1"") # i.e., 2-hydroxy pyridine; lactam = pybel.readstring(""smi"", ""C1=CC=CNC(=O)1"") # i.e., 2-pyridone. print(lactim.write(""inchi"")); print(lactam.write(""inchi"")); ```; yield the (necessarily identical) standard InChI; ```; InChI=1S/C5H5NO/c7-5-3-1-2-4-6-5/h1-4H,(H,6,7); InChI=1S/C5H5NO/c7-5-3-1-2-4-6-5/h1-4H,(H,6,7); ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2450:804,test,testing,804,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2450,1,['test'],['testing']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: 2f34bda337d7ddefa8f2bebfc23931a63e45241f; Operating system and version: Debian 11.3. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. When output format of `obabel` is `inchi` or `inchikey` and logging is enabled (i.e. `-xl`):. 1. Log levels for InChI are appropriately set; 2. Input format is correctly determined from command line argument. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. 1. In the examples below, the level should be Info (or Debug) but not Error; 2. Input format is always MOLfile–file extension and `-i` option are ignored. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. If input is SMILES-string,. ```console; $ obabel -:C -o inchi -xl; InChI=1S/CH4/h1H4; ==============================; *** Open Babel Error in InChI log; Generating standard InChI; Input format: MOLfile; Output format: Plain text; Full Aux. info; No timeoutUp to 65534 atoms per structure; 1 molecule converted; ```. If input is a CML file,; ```console; $ obabel -:C -O CH4.cml --gen3D; 1 molecule ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2505:820,log,logging,820,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2505,2,"['Log', 'log']","['Log', 'logging']"
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: 3.1.1 (tested using the x64 installer); Operating system and version: Windows 11 23H2 (OS Build 22631.4037). ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; The installer drops OpenBabel's files and registry keys in a location for all users.; - Shortcuts in `C:\ProgramData\Microsoft\Windows\Start Menu\Programs\OpenBabel 3.1.1`; - Miscellaneous program data (docs, examples etc.) in `C:\ProgramData\OpenBabel-3.1.1`; - Uninstall registry key to `\HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\OpenBabel-3.1.1`. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The installer drops its files and registry values in locations specific to the user account under which context the installer was run. To illustrate with an example scenario: a user is logged in interactively with a standard user account named 'Bob' with SID `S-1-5-21-1234`. The user downloads and runs the installer and is prompted to enter admin credentials so the user authenticates with an account named 'Admin' with SID `S-1-5-21-1000`. The installer finishes successfully but the user doesn't see OpenBabel in the Apps list in Windows Settings (alt. Programs and Features in Control Panel) or any shortcuts in their Start Menu; they",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2724:592,test,tested,592,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2724,1,['test'],['tested']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: 3.1.1 - installed with apt; Operating system and version: Ubuntu 22.04, Python 3.10.4. ## Expected Behavior. I want to redirect the output stream in Python. I am expecting that with code like this:. mystring = io.StringIO(); obHandler.SetOutputStream(mystring). the output would be captured in `mystring`. ## Actual Behavior. However I am failing to find how to do so. It looks like SetOutputStream is either missing a converter from some Python object, or I am too stupid to find out how to use it. I can only get TypeErrors:. from openbabel import openbabel; import io; import sys; obHandler = openbabel.OBMessageHandler(); ; # With an IO stream (BytesIO or StringIO):; obHandler.SetOutputStream(io.BytesIO()); ##Out: TypeError: in method 'OBMessageHandler_SetOutputStream', argument 2 of type 'std::ostream *'. # With stderr/stdout: ; obHandler.SetOutputStream(sys.stderr); ##Out: TypeError: in method 'OBMessageHandler_SetOutputStream', argument 2 of type 'std::ostream *'. # With a file; with open(""test.out"", ""w"") as fd:; obHandler.SetOutputStream(fd); ##Out: TypeError: in method 'OBMessageHandler_SetOutputStream', argument 2 of type 'std::ostream *'. ## Steps to Reproduce; Code given above.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2525:1589,test,test,1589,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2525,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: 3.1.1 ; Operating system and version: Linux. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. When I gen3D for 100k smiles, show ""Open Babel Warning in CorrectStereoAtoms“ and ""Warning: Stereochemistry is wrong, using the distance geometry method instead"". But the distance geometry method will spend much time in this process, I hope I can skip it and save time. What can I do for it? I use the `eventlet`, set time out with signal, `func_timeout` and so on, but it not work. Thank U. I am looking forward to your reply.; ![5fbb9aed53bebd3f79fe46fd17f977d](https://user-images.githubusercontent.com/32425458/187076451-916f15fb-a7eb-4afd-91a5-7311e18607c1.jpg)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2530:1096,test,test,1096,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2530,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: MacOS Ventura 13.6. ## Expected Behavior; As per `obabel -Hcml`; ""In the absence of hydrogenCount and any explicit hydrogen on; an atom, implicit hydrogen is assumed to be present appropriate; to the radical or spinMultiplicity attributes on the atom or; its normal valency if they are not present."". If atoms in a cml file have explicit hydrogens, further implicit hydrogens should not be added. So, for the following, as a cml file; [ch2.txt](https://github.com/openbabel/openbabel/files/13640326/ch2.txt). `obabel ch2.cml -ocan` should produce [CH2]; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; Extra implicit hydrogens are added, `obabel ch2.cml -ocan` results in C - that is, methane.; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Using attached ch2.txt (cml file with txt file type to be uploaded); [ch2.txt](https://github.com/openbabel/openbabel/files/13640326/ch2.txt); `obabel -icml ch2.txt -ocan`",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2655:1713,test,test,1713,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2655,1,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Ubuntu 22.04.3 (5.15.90.1-microsoft-standard-WSL2). ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. After converting a Gaussian .log file to a .xyz file, the commit line should be written as input file name and Energy. For example, I tried to convert a molclular with a calculated enegy value of -1871.263029 Hartree:. command: `obabel 1.log -ilog -oxyz -O 1.xyz`. output file content:; ```; [atom number]; 1.log	Energy: -1871.263029; [cartesian coordinate]; ```. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. The output format was right but the energy value was wrong:. ```; [atom number]; 1.out	Energy: -1174235.7067600; [cartesian coordinate]; ```. In addition, the wrong value did not appear in the input .log file. I don't know how was it calculated out. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. Just use command `obabel filename.log -ilog -oxyz -O filename.xyz` to any .log file.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2636:793,log,log,793,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2636,7,"['log', 'test']","['log', 'test']"
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: ``; Linux mscoc7 5.15.0-58-generic #64-Ubuntu SMP Thu Jan 5 11:43:13 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux ; Distributor ID: Ubuntu; Description: Ubuntu 22.04.1 LTS; Release: 22.04; Codename: jammy; ``. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; No failed tests. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; ```; The following tests FAILED:; 60 - test_gzip_1 (Failed); 72 - test_isomorphism_5 (Failed); 73 - test_isomorphism_6 (Failed); 77 - test_multicml_1 (Failed); 97 - test_rotor_2 (Failed); 98 - test_rotor_3 (Failed); 99 - test_rotor_4 (Failed); 214 - pytest_sym (Failed); 217 - pytest_distgeom (Failed); Errors while running CTest; ```. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; `tar -xvf openbabel-3.1.1-source.tar.bz2; cd openbabel-3.1.1; mkdir build; cd build/; cmake ..; make -j16; make test; ctest --rerun-failed --output-on-failure`. Full output attached. The `test_rotor` failure sound particularly serious since I want to ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2573:927,test,tests,927,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2573,1,['test'],['tests']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2561:1083,test,test,1083,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2561,3,['test'],['test']
Testability,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Dear developers,. when I compile the data, I have the error in the picture below:. ![ed50d4d3416a8c874fefce97e1bd789](https://user-images.githubusercontent.com/75162924/179012267-dc11bfff-24ea-43ea-a741-a2778e77eae4.png). What is the problem and how can I fix it?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2512:1083,test,test,1083,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2512,1,['test'],['test']
Testability,"=======; obabel -ismi -:""C(Cl)=[C@]=CF"" -ocan. output:; ==============================; *** Open Babel Warning in ParseSmiles; Ignoring stereochemistry. Not enough connections to this atom.; FC=C=CCl; 1 molecule converted. also: always good to check the documentation; https://open-babel.readthedocs.io/en/latest/FileFormats/SMILES_format_using_Smiley_parser.html or here; https://github.com/openbabel/openbabel/blob/master/src/formats/smiley.h. So, it is a smiles parser error. If I am not mistaken, the allene or cumulene stereochemistry is not well implemented in the obabel smiles parser/system, which means that when smiles are parsed, the allene stereochemistry label is lost before the coordinate generation and thus the result is not useful... This is based on these examples, not the documentation, because when reading the documentation and testing the example from the documentation... It also fails, even though there are as many differing substituents as there can be. test:; ==============================. obabel -ismi -:""NC(Br)=[C@@]=C(F)I"" -ocan. output:; ==============================; *** Open Babel Warning in ParseSmiles; Ignoring stereochemistry. Not enough connections to this atom.; NC(=C=C(I)F)Br; 1 molecule converted. I think this needs to be fixed, or the implementation reconsidered. I'm not sure if I get it but I would like that allene stereochemistry is recognized also if the determining centers are further away from the central atom, even though I am aware that this becomes computationally exhaustive rather quickly, but I think it this needs to be implemented, as allenic groups are not that rare and the resulting downstream artifacts undesirable. . I drew something in chemdraw for fun and further testing :) It took chemdraw a few seconds to figure out whether it is S/R once I added the hydroxy groups, but it managed. CC(C)CC(CC(C)C)C(C(CC(C)C)CC(C)C)C(C(C(CC(C)C)CC(C)C)C(CC(C)C)CC(C)O)=[C@]=C(C(C(CC(C)C)CC(C)C)C(CC(C)C)CC(C)C)C(C(CC(C)C)CC(C)O)C(CC(C)C)CC",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1891#issuecomment-447419567:1317,test,test,1317,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1891#issuecomment-447419567,1,['test'],['test']
Testability,============= ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in FindSSSR ; Ran OpenBabel::FindSSSR ; ============================== ; *** Open Babel Audit Log in IsClosure ; Ran OpenBabel::PerceiveClosureBonds ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran ,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:2882,Log,Log,2882,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Log'],['Log']
Testability,==============; *** Open Babel Information in OpenBabel::OBMol::NewPerceiveKekuleBonds; Kekulize: Huckel rule not satisfied for molecule ACB_PCA-0004. ==============================; *** Open Babel Information in OpenBabel::OBMol::NewPerceiveKekuleBonds; Kekulize: Huckel rule not satisfied for molecule ACB_PCA-0004; Kekulize: Cannot get an even number of electron for molecule ACB_PCA-0004. ==============================; *** Open Babel Audit Log in OpenBabel::OBMoleculeFormat::WriteChemObjectImpl; OpenBabel::Write molecule Sybyl Mol2 format; ==============================; *** Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignTypes; Ran OpenBabel::AssignTypes; ==============================; *** Open Babel Audit Log in OpenBabel::OBAromaticTyper::AssignAromaticFlags; Ran OpenBabel::AssignAromaticFlags; ==============================; *** Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignImplicitValence; Ran OpenBabel::AssignImplicitValence; ==============================; *** Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignHyb; Ran OpenBabel::AssignHybridization; ==============================; *** Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignHyb; Ran OpenBabel::AssignHybridization; ==============================; *** Open Babel Audit Log in OpenBabel::OBMol::FindSSSR; Ran OpenBabel::FindSSSR; ==============================; *** Open Babel Audit Log in OpenBabel::OBBond::IsClosure; Ran OpenBabel::PerceiveClosureBonds; ==============================; *** Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignHyb; Ran OpenBabel::AssignHybridization; ==============================; *** Open Babel Audit Log in OpenBabel::OBChainsParser::PerceiveChains; Ran OpenBabel::PerceiveChains; ==============================; *** Open Babel Audit Log in OpenBabel::OBGastChrg::AssignPartialCharges; Ran OpenBabel::AssignPartialCharges; 1 molecule converted; 2 info messages 15 audit log messages. ===================================== END. Reported by: @baoilleach,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/671:1716,Log,Log,1716,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/671,12,"['Log', 'log']","['Log', 'log']"
Testability,========================= ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in FindSSSR ; Ran OpenBabel::FindSSSR ; ============================== ; *** Open Babel Audit Log in IsClosure ; Ran OpenBabel::PerceiveClosureBonds ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran ,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:2980,Log,Log,2980,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Log'],['Log']
Testability,"=N2)N)NC(=O)CNC(=O)C(c2cc(Cl)c(O)c(Cl)c2)NC(=O)C(CO)NC(=O)C(c2ccc(O)cc2)NC(=O)C(CC2N=C(N)NC2)NC(=O)C(CCCNC(=O)N)NC(=O)C(C(C)O)NC(=O)C(c2ccc(O)cc2)NC(=O)C(c2ccc(O)cc2)NC(=O)C(C(C)O)NC(=O)C(CCCN)NC(=O)C(c2ccc(O)cc2)NC1=O. See for example the molecule output with :; obabel enducardin2.smi -xh -xa -O enducardin2.svg. We are morking on Mac OS X on the svn trunk version of openbabel (last week version). Sincerely,. Y.D. ----. 193-49-212-82:src laurent$ diff mcdlutil.mod.cpp mcdlutil.cpp; 41,42c41,42; < #define NATOMSMAX 511; < #define NBONDSMAX 2047; ---; > #define NATOMSMAX 255; > #define NBONDSMAX 255; 3931,3932c3931,3932; < vector< vector<bool> > aEQ;//[NATOMSMAX][NATOMSMAX];; < vector< vector<bool> > bEQ;//[NBONDSMAX][NBONDSMAX];; ---; > bool aEQ[NATOMSMAX][NATOMSMAX];; > bool bEQ[NBONDSMAX][NBONDSMAX];; 3936,3939c3936,3937; < void directBondAss(int& bnq, bool& test, bool& test1, ; < std::vector< vector<bool> >& beq,; < std::vector< vector<bool> >& aeq,; < std::vector<int>& bqcounter, std::vector<int>& aqtested,; ---; > void directBondAss(int& bnq, bool& test, bool& test1, const bool beq[NBONDSMAX][NBONDSMAX],; > const bool aeq[NATOMSMAX][NATOMSMAX], std::vector<int>& bqcounter, std::vector<int>& aqtested,; 3957,3962c3955,3958; < fIOPT10=false;; < fIOPT11=false;; < fIOPT13=true;; < fIOPT12=1;; < aEQ = vector< vector<bool> >(NATOMSMAX,vector<bool>(NATOMSMAX,false));; < bEQ = vector< vector<bool> >(NBONDSMAX,vector<bool>(NBONDSMAX,false));; ---; > fIOPT10=false;; > fIOPT11=false;; > fIOPT13=true;; > fIOPT12=1;; 4787,4790c4783,4784; < void TEditedMolecule::directBondAss(int& bnq, bool& test, bool& test1, ; < std::vector< vector<bool> >& beq,; < std::vector< vector<bool> >& aeq,; < std::vector<int>& bqcounter, std::vector<int>& aqtested,; ---; > void TEditedMolecule::directBondAss(int& bnq, bool& test, bool& test1, const bool beq[NBONDSMAX][NBONDSMAX],; > const bool aeq[NATOMSMAX][NATOMSMAX], std::vector<int>& bqcounter, std::vector<int>& aqtested,. Reported by: dufresne0",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1199:1168,test,test,1168,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1199,4,['test'],['test']
Testability,"> @ricrogz - I can't merge something that fails tests. If `master` is needed for that, no problem. I just want to make sure that we can freeze versions for e.g openbabel-3.1.0. Yeah, sorry, I forgot that the switch to disable the test was only in maeparser's master. I'll restore the ""master"" versions for now. I didn't really answer your question: the APIs to maeparser and coordgen are rather stable (we don't make many changes that require updates to calling code, and I'm happy to assist when that happens), so it should be ok to keep it set to ""master"", and change it to whatever version is the current one when you prepare for a release. > I'm aware of the annoying GitHub tar/zip variance. Happy to work on that. I gave it a try already, using `find_path` to search for the directory in which maeparser/coordgen's CMakeLists.txt lives. That seemed to work fine in the CI builds.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2064#issuecomment-553073459:48,test,tests,48,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2064#issuecomment-553073459,2,['test'],"['test', 'tests']"
Testability,"> @schatzsc For your information, there is an early note by Greg Landrum (project of RDKit) [here](https://github.com/rdkit/rdkit/discussions/6995) by today, [2023-12-18 Mon]. By your contribution to chemotion_ELN you possibly have a couple of «typical» carbenes and other complexes one could submit to benchmark an eventually revised approach. Thank you very much for pointing me to this additional line of discussion - will take a look there",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2656#issuecomment-1860589720:303,benchmark,benchmark,303,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2656#issuecomment-1860589720,1,['benchmark'],['benchmark']
Testability,"> @schatzsc I redrew the structure on the test page of Marvin JS ([link](https://marvinjs-demo.chemaxon.com/latest/demo.html)) using the coordinate/dative bond. Pt was assigned a positive charge, Br for compensation a negative one:. @nbehrnd As also mentioned in the [Chemotion issue](https://github.com/ComPlat/chemotion_ELN/issues/1551) metal-ligand bonds MUST NOT be broken. This will also be the standard in the latest upcoming IUPAC InChI recommendations on organometallics. Furthermore, ""dative"" bonds have no relevancy at least in coordination and organometallic chemistry of the d- and f-elements - all those bonds are more or less polar covalent bonds. The best solution would actually for atoms and bonds to be marked with an attribute ""don't touch"" in terms of bond order and addition of implicit hydrogens and M-L ""lines"" simply be taken as an indication of a bonding interaction without any implication on the electron count. In the context of [TUCAN](https://github.com/TUCAN-nest/TUCAN) we have called these ""simple bonds"". Maybe some Zoom discussion of software developers together with the IUPAC InChi organometallics team would be helpful to work towards general solutions?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2656#issuecomment-1854358792:42,test,test,42,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2656#issuecomment-1854358792,2,['test'],['test']
Testability,"> @timvdm - if we un-comment the smiles at the end of `test/testdistgeom.py` do they work as well?. Yes, but it will take longer for the test to run (more than 1 minute on my machine). I'm not sure if this is an issue? The other tests run quickly so I didn't want to add a test which takes much longer.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2158#issuecomment-609968401:55,test,test,55,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2158#issuecomment-609968401,5,['test'],"['test', 'testdistgeom', 'tests']"
Testability,"> As well as testing the SVN trunk, can you test against the 2.3.1 branch. Several branches are not supported yet. So, you need to wait for the 2.3.1.tar.gz to be released, which will appear in the tracker on the next day after the release. However, you can add the basic tool to the ""make test-abi"" step in your buld system:; 1) svn co http://forge.ispras.ru/svn/abi-compliance-checker; 2) cd abi-compliance-checker/trunk/; 3) sudo perl Makefile.pl -install --prefix=/usr; 4) abi-compliance-checker -lib openbabel -d1 OLD.xml -d2 NEW.xml. The basic OLD.xml is the library XML-descriptor:. <version>; 2.3.0; </version>. <headers>; openbabel-2.3.0/include/; </headers>. <libs>; openbabel-2.3.0/lib/; </libs>. you might also want to add some extra sections (like in our tracker) to fix some non-self compiled headers in your project:. <include_preamble>; string.h; limits.h; typeinfo; mol.h; </include_preamble>. <skip_headers>; include/inchi/; </skip_headers>. <skip_constants>; OBFPRT; IF_OBFF_LOGLVL_HIGH; BABEL_DATADIR; IF_OBFF_LOGLVL_MEDIUM; OBERROR; OBAPI; OBCOMMON; EXTERN; IF_OBFF_LOGLVL_LOW; OBCONV; </skip_constants>. 5) Also you can make a snapshot of the stable ABI (""reference implementation""):; $> abi-compliance-checker -lib openbabel -dump OLD.xml; will create the openbabel-OLD.abi.tar.gz and then compare it with a new version:; $> abi-compliance-checker -lib openbabel -d1 openbabel-OLD.abi.tar.gz -d2 NEW.xml. > It would be great if there was some way to run this on; our own servers for every commit and so can immediately see when someone; breaks ABI. It's possible if you have any continuous integration system. Just add this checker as a new custom test. Original comment by: andrey-moscow",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1131#issuecomment-281800980:13,test,testing,13,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1131#issuecomment-281800980,4,['test'],"['test', 'test-abi', 'testing']"
Testability,> Can you revise the patch to detect for '-' in the next character?. I'm not sure what you mean. However I will revise it soon with some tests to make it purpose clear.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/259#issuecomment-184350293:137,test,tests,137,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/259#issuecomment-184350293,2,['test'],['tests']
Testability,"> Given that the MinGW build still fails further along, this cannot be tested to check whether it actually works. Sorry, I didn't understand this. The change; ```; - if(LoadLibrary( lib_name.c_str() )); + if(LoadLibrary( (PTCHAR) lib_name.c_str() )); ```; did work on my machine. > Can you try the following change and see whether the build completes for you too?; > ; > ```; > --- a/CMakeLists.txt; > +++ b/CMakeLists.txt; > @@ -88,7 +88,7 @@ if(NOT CMAKE_RUNTIME_OUTPUT_DIRECTORY); > CACHE STRING ""Binary build output directory""); > endif(); > if(NOT CMAKE_LIBRARY_OUTPUT_DIRECTORY); > - if(UNIX); > + if(UNIX OR MINGW); > set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ""${CMAKE_BINARY_DIR}/lib${LIB_SUFFIX}""; > CACHE STRING ""Library build output directory""); > else() # This is preferable on WIndows for example - bin = lib directory.; > ```. The new `cmake` with the change from `if(UNIX)` to `if(UNIX OR MINGW)`, keeping the original `dlhandler_unix.cpp`, does not prevent the subsequent compilation error to occur. It still tries to compile `dlhandler_unix.cpp` without success.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1594#issuecomment-312241404:71,test,tested,71,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1594#issuecomment-312241404,1,['test'],['tested']
Testability,"> I have the same problems. I have installed OpenBabel into `C:\Program Files\OpenBabel-3.1.1`. And the location is in PATH environment. Same issue here, I have also tried manually specifying the locations by downloading the python part of the repository and running:; python setup.py build_ext -I ""C:\Program Files\OpenBabel-3.1.1"" -L ""C:\Program Files\OpenBabel-3.1.1"". Essentially the same error:; ```C:\ProgramData\Anaconda3\envs\testenv\lib\site-packages\setuptools\dist.py:479: UserWarning: The version specified ('${BABEL_VERSION}') is an invalid version, this may not work as expected with newer versions of setuptools, pip, and PyPI. Please see PEP 440 for more details.; ""details."" % version; running build_ext; Warning: invalid version number '${BABEL_VERSION}'.; Guessing Open Babel location:; - include_dirs: ['C:\\Program Files\\OpenBabel-3.1.1', 'C:\\ProgramData\\Anaconda3\\envs\\testenv\\include', 'C:\\ProgramData\\Anaconda3\\envs\\testenv\\include', '/usr/local/include/openbabel3']; - library_dirs: ['C:\\Program Files\\OpenBabel-3.1.1', 'C:\\ProgramData\\Anaconda3\\envs\\testenv\\libs', 'C:\\ProgramData\\Anaconda3\\envs\\testenv\\PCbuild\\amd64', '/usr/local/lib']; building 'openbabel._openbabel' extension; swigging openbabel\openbabel-python.i to openbabel\openbabel-python_wrap.cpp; swig.exe -python -c++ -small -O -templatereduce -naturalvar ""-IC:\Program Files\OpenBabel-3.1.1"" -IC:\ProgramData\Anaconda3\envs\testenv\include -IC:\ProgramData\Anaconda3\envs\testenv\include -I/usr/local/include/openbabel3 -o openbabel\openbabel-python_wrap.cpp openbabel\openbabel-python.i. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; ```. ### Edit:; I had also tried `conda install -c openbabel openbabel` upon some recommendation I found elsewhere, which installed an old vers",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2018#issuecomment-826168002:434,test,testenv,434,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018#issuecomment-826168002,3,['test'],['testenv']
Testability,"> I haven't tested and I don't do minimizations that often but you could try with `obabel CMNPD-export.sdf -O target.sdf --minimize --sd -ff MMFF94 -e` with the `-e` part telling obabel to continue on error. In general, I think that the ""specialized"" commands are less supported and maintained so if you manage to do something through the obabel interface it will be better. This seems to be working fine. Thank you!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2719#issuecomment-2303977199:12,test,tested,12,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2719#issuecomment-2303977199,1,['test'],['tested']
Testability,"> I ran obenergy in the debugger with breakpoint set -f kekulize.cpp -l 88. Basically, the routines in kekulize.cpp is called for the .log file not for the .sdf file. When a correct .sdf file is used, OB reads everything from the file, so needs_kekulization remains false in mdlformat.cpp. That's interesting. I guess though, that with an incorrect sdf file the routine is not used either, or could you try that, e.g. by removing the double bonds or the charge?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2366#issuecomment-831528089:135,log,log,135,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2366#issuecomment-831528089,1,['log'],['log']
Testability,"> I removed the charge from the SDF file. The routine is not called neither (I put the same breakpoint). However, the output is wrong, which means that carbons and nitrogens of the imidazole ring are considered to be aliphatic:; > IDX TYPE RING; > 1 c2 AL; > 2 c2 AL; > 3 n3 AL; > 4 c3 AL; > 5 n3 AL; > 6 c3 NO; > 7 c3 NO. > > I ran obenergy in the debugger with breakpoint set -f kekulize.cpp -l 88. Basically, the routines in kekulize.cpp is called for the .log file not for the .sdf file. When a correct .sdf file is used, OB reads everything from the file, so needs_kekulization remains false in mdlformat.cpp.; > ; > That's interesting. I guess though, that with an incorrect sdf file the routine is not used either, or could you try that, e.g. by removing the double bonds or the charge?. There is a boolean flag to check if is needed most *format*.cpp files but gaussformat.cpp. For example, you can find it in cofformat.cp, maeformat.cpp, mdlformat.cpp, mol2format, smilesformat.cpp. . In all these files, needs_kekulization is false but it becomes true based on different criteria: . for example in mol2format.cpp:. 449 if (str == ""ar"" || str == ""AR"" || str == ""Ar"") {; 450 order = 1;; 451 flags = OB_AROMATIC_BOND;; 452 needs_kekulization = true;; 453 }. but in mdlformat:; 545 if (order == 4) {; 546 flag |= OBBond::Aromatic;; 547 order = 1;; 548 needs_kekulization = true;; 549 }. And finally there is not needs_kekulization in gauss format.cpp at all.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2366#issuecomment-831546666:460,log,log,460,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2366#issuecomment-831546666,1,['log'],['log']
Testability,"> I'll have to look into the problem in more detail to see whether there is an alternative, but copying and addng hydrogens will be a performance hit. I've seen this elsewhere - we use this approach to handle matching against SMARTS with explicit hydrogens (I think I might even be the author of this) - these patterns are an order of magnitude slower to match (according to a SMILES benchmark from @johnmay).; > ; > If you can't see any alternative, is it okay if I take a look?. Sure it's OK - please feel free to look. I am an old user of Openbabel, but this is my first participation in the project. I already have code that solves the issue without copying (should I post another pull request for it, or how should it be handled to show it to you? It is very minimalistic change, two lines from master branch). After a match (it seems to work in the cases that I tested), I just check whether atom idx in match is not higher than count of atoms in the starting molecule. Only H atoms from SMARTS have higher idx, so I ignore them and it seems to work. I am however unsure it will work all the time.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2102#issuecomment-561279741:384,benchmark,benchmark,384,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2102#issuecomment-561279741,2,"['benchmark', 'test']","['benchmark', 'tested']"
Testability,"> I'll sort it out asap. thanks for the quick reply. We can arrange to send you the build log, if that can be of any help. just let me know, in case. ciao; gabriele",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1962#issuecomment-482605071:90,log,log,90,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1962#issuecomment-482605071,1,['log'],['log']
Testability,"> If I grab a PDB file from RCSB, there are no explicit hydrogens:. It depends how the structure was generated. If it was determined with crystallography, there won't be any hydrogens because they can't be resolved from the electron density. If it's an NMR structure, it probably will include hydrogens. > How about this heuristic.. if the PDB file already has hydrogens, the default should be to assume all hydrogens are explicit?. That seems reasonable. Adding hydrogens to proteins needs to be done very carefully though. A lot of side chains are charged, so you don't want to just automatically fill in a hydrogen everywhere one could possibly go. And of course it depends on pH. Even if you assume you're only interested in pH 7, there still can be ambiguity. HIS has two forms that are equally common at pH 7, with the hydrogen on either ND1 or NE2. If one of the two is able to form a hydrogen bond, that stabilizes it, so you want to look at potential bonding partners to select which is more likely. In the example above, the file already has a hydrogen on CE1, and it adds a second one. That doesn't match any common form at any pH. So I guess there are three parts to the solution. 1. Provide an option for whether to add hydrogens.; 2. The default value for that option should depend on whether the file already has any hydrogens.; 3. Check the logic it uses for adding hydrogens, since there appear to currently be some cases where it creates unrealistic, nonphysical structures.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2411#issuecomment-920439796:1357,log,logic,1357,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2411#issuecomment-920439796,1,['log'],['logic']
Testability,"> If helpful (x86_64 as by `uname -m`) for Debian 12/bookworm (testing) with OpenBabel 3.1.1.+dfsg-6, the generation of the thiazole .sdf passes without complain or error. Despite the presence of the two bridged bicyclic structures, both for `--gen2d` and alternative `--gen3d`. I believe this issue is specific to arm64 architecture.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2417#issuecomment-941123034:63,test,testing,63,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417#issuecomment-941123034,1,['test'],['testing']
Testability,"> MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIAB",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:16026,test,test,16026,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,2,['test'],"['test', 'testbindings']"
Testability,"> Ok, now I realise the difference between the two options.; > I will confirm by comparing coordinates generated by both methods. If the initial conformation as well as the modified one are exported; into the .xyz format, e.g. by. ```; obabel -isdf input_file.sdf -oxyz -O output_file.xyz; ```. a rapid quantifying comparison of the two may be achieved by a Kabsch; test. Jimmy Charnley initiated a lightweight implementation for; Python, which is shared on GitHub (https://github.com/charnley/rmsd); under the permissive BSD license.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2404#issuecomment-916696434:366,test,test,366,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404#issuecomment-916696434,1,['test'],['test']
Testability,"> Thanks. The fix makes sense - can you add a unit test. Otherwise, I'm sure this will creep back again. Will definitely do that. I am not familiar with cmake yet, trying to figure out how to do it. BTW is there any documentation how to write tests? README in /test contains a todo list...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2102#issuecomment-561156090:51,test,test,51,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2102#issuecomment-561156090,3,['test'],"['test', 'tests']"
Testability,> What changed so much with the `tests/CMakeLists.txt` file?. Line ending seems to be changed from LF to CRLF.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2430#issuecomment-1152100167:33,test,tests,33,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2430#issuecomment-1152100167,1,['test'],['tests']
Testability,"> Why are there RDKit related files in there?. I intended to do a comparison in protonation predictions between the toolkits so we could at least have tests for the unambiguous cases, but haven't been able to find the time to do so.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2008#issuecomment-538803590:151,test,tests,151,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2008#issuecomment-538803590,1,['test'],['tests']
Testability,"> `conda install -c conda-forge openbabel`, this command is quite dangerous as it also upgrade python version. fwiw, I haven't seen that behaviour, I was using python 3.7.x in my environment and the newest version of python at the time was 3.9.x. Python's version was not changed by running this command. Regardless, conda will tell you its update plan before it does anything, so, future reader, please check the update plan to make sure it isn't going to force a bad update before hitting [y]. And you can always test it out in a copy of your environment if you're worried. And of course there's always the option to revert the changes if it breaks things!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2018#issuecomment-949921203:515,test,test,515,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018#issuecomment-949921203,1,['test'],['test']
Testability,"?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Gentoo Linux, 5.6.15-gentoo. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Failed 0/8 test programs. 0/34 subtests failed. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Can't call method ""GetMass"" on an undefined value at t/data.t line 21.; t/data.t ........... Dubious, test returned 255 (wstat 65280, 0xff00) ; Failed 1/2 subtests . t/data.t (Wstat: 65280 Tests: 1 Failed: 0); Non-zero exit status: 255; Parse errors: Bad plan. You planned 2 tests but ran 1.; Files=8, Tests=34, 0 wallclock secs ( 0.03 usr 0.01 sys + 0.39 cusr 0.06 csys = 0.49 CPU); Result: FAIL; Failed 1/8 test programs. 0/34 subtests failed. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```; swig -perl5 -c++ -small -O -templatereduce -naturalvar -I/usr/include/openbabel3 -o scrips/perl/openbabel-perl.cpp -outdir scrips/perl scripts/openbabel-perl.i; cd scrips/perl; perl Makefile.PL PREFIX=/usr INSTALLDIRS=vendor INSTALLMAN3DIR=none DESTDIR=/var/tmp/portage/sci-chemistry/openbabel-perl-3.1.1/image INC=-I/usr/include/openbabel3; make -j17 -l4 'OTHERLDFLAGS=-Wl,-O1 -Wl,--as-needed -W",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2247:1222,test,test,1222,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2247,1,['test'],['test']
Testability,"?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Windows 10 version 1909 and Linux Mint 19.3 64-bit Xfce. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; obspectrophore can be used to generate Spectrophores vectors from a molecular file such as SDF. However, there is apparently no built-in way to then compute a distance metric (such as Euclidean distance) between a reference vector and the sample vectors corresponding to each compound in the SDF file.; ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; There is apparently no built-in way to then compute a distance metric (such as Euclidean distance) between a reference vector and the sample vectors corresponding to each compound in the SDF file. Instead, one has to export the vectors and use another program, such as python, to compute the distance metric.; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; This limitation is present each time obspectrophore is used to generate Spectrophores; no futher processing of the data is possible from within obspectrophore or obabel.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2140:1890,test,test,1890,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2140,1,['test'],['test']
Testability,"@BJWiley233 Would the use of obabel from a .deb for Ubuntu ([their index](https://packages.ubuntu.com/search?keywords=openbabel&searchon=names&suite=all&section=all) mentions version 3.0.0 for LTS release 20.04/focal, and 3.1.1 for 22.04/jammy)) be suitable for you? If so, are you able to generate a 2D structure, a 3D conformer, respectively?. To ease potential replication, I attach the results with obabel (Open Babel 3.1.1 -- Oct 20 2022 -- 17:31:22) as currently provided by Linux Debian 12/bookworm as a .zip archive. There might be slight *numeric* differences for the conformer (`diff --brief` will spot them) when you generate a conformer on your computer (indeed, there may be variations from run to run). Often, they are not *this much* important from a chemical point of view if obabel is used to provide a starting point for ongoing further work in Gaussian/MOPAC at higher level of theory, but can be quantified e.g., by a Kabsch test (an implementation in Python by [Charnley et al.](https://github.com/charnley/rmsd)). [2022-11-25_comparison.zip](https://github.com/openbabel/openbabel/files/10090283/2022-11-25_comparison.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1327198403:945,test,test,945,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1327198403,1,['test'],['test']
Testability,"@MJoseom Just changing the bond order (fourth column in the bond block. ```; @<TRIPOS>BOND; 1	1	2	2; 2	2	3	1; 3	3	4	1; 4	4	5	1; 5	5	6	1; ```; ) will not suffice to perform the saturation. It is, as indicated by you, a bit more complicated than the substitution of strings (e.g., by AWK) because a) some files describe the aromatic rings by alternating single and double bonds marked by `1` and `2` respectively, while b) `2` _possibly_ should be retained to describe e.g., C=O of esters and amides. Noteworthy, «just» rewrite the .mol2 as provided by you with . ```bash; obabel -imol2 test.txt -O rewrite_01.mol2; ```; yields a bond block where the amides explicitly marked _as such_ (by string `am`). On the other hand, passing the .xyz format lacking any information of bond order, OpenBabel assigns the bonds of the aromatic rings with an explicit `ar`, too:. ```bash; obabel -imol2 test.txt -oxyz | obabel -ixyz -O rewrite_02.mol2; ```; By change of the bond order e.g., of a former phenyl ring, both additional hydrogen atoms (and their coordinates) as well a new coordinates of the carbon atoms need to be updated (new bond lengths C-C). If one wouldn't need to reuse the coordinates of the atoms not affected by the saturation, the «saturation of the SMILES string» might be an alternative to handling `.mol2`. Because once I wrote such a script ([link](https://github.com/nbehrnd/datawarrior_saturate_Murcko_scaffolds), though currently constrained to at most one stereogenic center), may you indicate the program you use to perform the saturation?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2508#issuecomment-1177513071:585,test,test,585,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2508#issuecomment-1177513071,2,['test'],['test']
Testability,"@RicardoMBorges Do you use ChemDraw to generate the initial `.cdxml`, .or. do you use an other program (e.g., Marvin, or JChem [for Excel]) to generate a `.cdxml` in first place? If so, which version?. If I copy-paste the .cdxml in ChemDraw's [JS sample page](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#) (*via* Structure -> Load CDXML), I obtain a drawing *which looks like* the structure was drawn & analyzed briefly. The JS page has no button to display the molcular sum formula, but the file obviously contains such:. ![CD_sample_page](https://user-images.githubusercontent.com/19709084/136968421-13609f9b-433f-4d2b-b9e3-97b27124cbd5.png). Subsequently, Stucture -> Get SMILES exports ```CC(C)C(NC(C(C)(C)C(CCCC=C)OC(CNC1=O)=O)=O)C(OC(C(C)C)C(NC1C(C)CC)=O)=O```. which ; ```bash; obabel -:""CC(C)C(NC(C(C)(C)C(CCCC=C)OC(CNC1=O)=O)=O)C(OC(C(C)C)C(NC1C(C)CC)=O)=O"" -ocan -h -xh; ```; replies with . ```bash; [H]C(=C(C(C(C(C1([H])OC(=O)C([H])([H])N([H])C(=O)C([H])(N([H])C(=O)C(OC(=O)C(N(C(=O)C1(C([H])([H])[H])C([H])([H])[H])[H])([H])C(C([H])([H])[H])(C([H])([H])[H])[H])([H])C(C([H])([H])[H])(C([H])([H])[H])[H])C(C(C([H])([H])[H])([H])[H])(C([H])([H])[H])[H])([H])[H])([H])[H])([H])[H])[H])[H]; ```. However, the conversion of your `.cdxml` into e.g., a `.png` by OpenBabel *suggests* that something at the level generating the former went wrong. The dots next to implicit carbon atoms normally are seen if the valences are not filled:. ![testat](https://user-images.githubusercontent.com/19709084/136969234-68c68243-8a3e-4b19-a85b-dbe4ce56549e.png). For me, a plausible reason why the (re)addition of hydrogens fails. PS: A convenient «trick» to exchange files like `.cdxml` in the issue report is to embed them into a `.zip` archive.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2416#issuecomment-941037394:1461,test,testat,1461,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2416#issuecomment-941037394,1,['test'],['testat']
Testability,"@RicardoMBorges In similar tune like @fredrikw , capitalization (or absence of such) may *implicitly* carry the number of of hydrogens present. E.g., `C1CCCCC1` to represent cyclohexane, `c1ccccc1` to represent benzene (lower case c, n, o, s represent aromatic systems). You may add the reasoning why you need explicit hydrogens in the SMILES string, or/and an example file where you think it would be useful. Because a benzene .cdxml generated from ChemDraw's [test page](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#) isn't necessarily rewritten by . ```bash; obabel -icdxml benzene.cdxml -osmi; ```; into `c1ccccc1` (example file attached in the .zip archive). [benzene.cdxml.zip](https://github.com/openbabel/openbabel/files/7328283/benzene.cdxml.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2416#issuecomment-940789699:462,test,test,462,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2416#issuecomment-940789699,1,['test'],['test']
Testability,"@Surluson . For testing, I organized this script from #54:. ```python; import pybel; import EQeq; import sys. with open(sys.argv[-1]) as in_file:; m = in_file.read(). # Test EQeq's openbabel implementation; mol = pybel.readstring('cif', m); mol.calccharges('eqeq'); charges = [a.partialcharge for a in mol]. # EQeq's standard Python bindings; out = EQeq.run(m, output_type='list'). # Compare average and max differences; diff = [abs(c - o) for c, o in zip(charges, out)]; print(sum(diff) / len(diff)); print(max(diff)); ```. The numat/EQeq only works in python 2 due to its ctypes usage, and the charges are slightly different due to #60 and rounding errors, but my tests only show ~10<sup>-4</sup> average difference and ~10<sup>-3</sup> max difference.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1861#issuecomment-401914391:16,test,testing,16,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1861#issuecomment-401914391,3,"['Test', 'test']","['Test', 'testing', 'tests']"
Testability,@afonari you can run `ctest -V -R pdbread` the -R will match tests with specified regex.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2170#issuecomment-612047646:61,test,tests,61,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2170#issuecomment-612047646,1,['test'],['tests']
Testability,"@baoilleach - did you have a chance to test this? I'd like to merge for 3.1 - even if it needs further improvement, it's a big step forward.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2171#issuecomment-623121150:39,test,test,39,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2171#issuecomment-623121150,1,['test'],['test']
Testability,"@baoilleach : Thank you for your feedback, I added the modified test",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1818#issuecomment-388582619:64,test,test,64,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1818#issuecomment-388582619,2,['test'],['test']
Testability,@baoilleach I have made @ginggs the owner of https://launchpad.net/openbabel . I created that stuff back in the day when there was a push to get at least stub Launchpad projects for all upstreams.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1668#issuecomment-338197116:154,stub,stub,154,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1668#issuecomment-338197116,1,['stub'],['stub']
Testability,"@baoilleach I want to remove the hydrogen atoms attach with SP3 C atom. Firstly I test if the C is SP3, find the neighbors, test if they are hydrogens, and then delete them.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/363#issuecomment-269859144:82,test,test,82,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/363#issuecomment-269859144,2,['test'],['test']
Testability,@baoilleach thanks. Then what should I do to delete hydrogens implicitly? I tested that DeleteAtom can do the work.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/363#issuecomment-269716103:76,test,tested,76,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/363#issuecomment-269716103,1,['test'],['tested']
Testability,"@cassguff Based on the [documentation](https://open-babel.readthedocs.io/en/latest/FileFormats/XYZ_cartesian_coordinates_format.html) flag `-b` is an option (`-xb`) of reading. Your input is a SMILES string and eventually you want to write .xyz coordinates only (i.e., the file has no information about bonds). An command like. ```; obabel -:""c1ccncc1"" -h --gen3d -O test.xyz; ```. is sufficient for (this example) to generate a conformer of pyridine (including protons for pH 7.4) written into file `test.xyz`.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969460982:367,test,test,367,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969460982,2,['test'],['test']
Testability,"@dkoes - I'm seeing test failures in the new test:; > Traceback (most recent call last):; File ""/Users/runner/work/openbabel/openbabel/test/testpdbformat.py"", line 28, in testSegname; mol = pybel.readstring('pdb','''ATOM 102 N CYS A 16 59.916 27.715 54.719 1.00 30.93 A N; AttributeError: 'NoneType' object has no attribute 'readstring'",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2637#issuecomment-1793814024:20,test,test,20,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2637#issuecomment-1793814024,5,['test'],"['test', 'testSegname', 'testpdbformat']"
Testability,"@e-kwsm Complementary observation: entry VS001, spiro[4.5]dec-2-ene in the [cipvalidationsuite](https://cipvalidationsuite.github.io/ValidationSuite/) compiled by Robert Hanson *et al.* equally is assigned by them by the SMILES string `C1[C@]2(CCCC1)CC=CC2`. However, the submission of their 3D .sdf file to Open Babel (version 3.1.1 by Jan 10 2024 in Debian 13/trixie). ```; $ obabel VS001.sdf -ocan; C1CCC2(CC1)CC=CC2	VS001; 1 molecule converted; $ obabel -:""C1[C@]2(CCCC1)CC=CC2"" -ocan; C1CCC2(CC1)CC=CC2	; 1 molecule converted; ```. drops the `@`. The compilation of 300 structures may contain additional entries worth to test. Hanson, R. M.; Musacchio, S.; Mayfield, J. W.; Vainio, M. J.; Yerin, A.; Redkin, D. Algorithmic Analysis of Cahn–Ingold–Prelog Rules of Stereochemistry: Proposals for Revised Rules and a Guide for Machine Implementation. J. Chem. Inf. Model. 2018, 58 (9), 1755–1765. https://doi.org/10.1021/acs.jcim.8b00324.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2674#issuecomment-1959364056:626,test,test,626,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2674#issuecomment-1959364056,1,['test'],['test']
Testability,"@frederikw in issue report [here](https://github.com/openbabel/openbabel/issues/2426). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. Observation: The `.png` are written and are intelligible. By report of the CLI, the inclusion of the structure file however fails. Suggested changes, 1st class:; + Bug fix to restore the functionality. Suggested changes, 2nd class:; + With the `.pngj` format ([documentation](http://wiki.jmol.org/index.php/File_formats/Export)), Jmol apparently offers a similar export of static (classical `.png` like) and interactive (model) data. In Jmol, it is possible, e.g., to read this extended `.png`, to interact and export the model as `.sdf` «as usual». See archive pngj_examples.zip for examples. It would be nice if Jmol's `.pngj` would be understood by OpenBabel, and the augmented `.png` written by OpenBabel could be read by Jmol as in «accessing the model data». ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behaviour.; -->; ```bash; $ obabel -:""CC(=O)Cl"" -O mymol.png -xO smi; ==============================; *** Open Babel Error in PNG Format; Not a PNG file; ==============================; *** Open Babel Error in PNG Format; Failed to embed molecule(s); 1 molecule converted; ```; The image is written and intelligible. The subsequent attempt to recover the SMILES string from the `.png` however fails, and file `smiles.txt` stays empty. ```bash; $ obabel mymol.png -osmi -O smiles.txt; ==============================; *** Open Babel Error in PNG Format; Not a PNG file; 1 molecule converted; ```. [example_pngj.zip](https://github.com/openbabel/openbabel/files/7521417/example_pngj.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2428:2265,test,test,2265,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2428,1,['test'],['test']
Testability,"@fredrikw About this issue, I'm having another problem due to the unusual version (3.1.1.1).; I want to use openbabel as a dependency of a Python package, and even though I install it using `conda`, it tries to upgrade the package when I install my package.; IMHO, bumping the version to `3.1.2` would be a good idea. Also, maybe `/usr/include/openbabel3` should be set as default in `setup.py`? The newer versions of Ubuntu (22.04, for example) and Arch/Manjaro, all of which compromise a fair amount of Linux users, use this path. If I use `--global-option` to use `-L` and `-I` I can install but I get the warnings:. ```bash; WARNING: Implying --no-binary=:all: due to the presence of --build-option / --global-option / --install-option. Consider using --config-settings for more flexibility.; DEPRECATION: --no-binary currently disables reading from the cache of locally built wheels. In the future --no-binary will not influence the wheel cache. pip 23.1 will enforce this behaviour change. A possible replacement is to use the --no-cache-dir option. You can use the flag --use-feature=no-binary-enable-wheel-cache to test the upcoming behaviour. Discussion can be found at https://github.com/pypa/pip/issues/11453; Collecting openbabel; Using cached openbabel-3.1.1.1.tar.gz (82 kB); Preparing metadata (setup.py) ... done; Installing collected packages: openbabel; DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because the '--no-binary' option was enabled for it and this currently disables local wheel building for projects that don't have a 'pyproject.toml' file. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/11451; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286079905:1123,test,test,1123,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286079905,1,['test'],['test']
Testability,"@fredrikw Ah *this one*. In parlance of Jmol, it is a `.pngj` to retain the model and adjustments of visualization in one container which enables later interaction in Jmol, too (example attached). Briefly described as one of the formats written: http://wiki.jmol.org/index.php/File_formats/Export Possibly organized differently, OpenBabel does not successfully extract a `.sdf` from Jmol's `lutidine_model_pngj.png`. Inspired by your input, I tried to replicate your example for pyridine, saved as `c1ccncc1`in `pyridine.smi`. Then; ```bash; obabel -:""c1ccncc1"" --gen3d -h -O pyridine.sdf # 1 molecule converted; obabel -:""c1ccncc1"" --gen3d -h -O pyridine.png # 1 molecule converted; obabel pyridine.png pyridine.smi pyridine.sdf -O augmented.png -xO sdf; ```; because I thought the inclusion of the data as a `.mol` or a `.sdf` would not matter. The initial output to the CLI of the last command I got however was ; ```; ==============================; *** Open Babel Error in PNG Format; Not a PNG file; ==============================; *** Open Babel Error in PNG Format; Not a PNG file; ==============================; *** Open Babel Error in PNG Format; Failed to embed molecule(s); ==============================; *** Open Babel Error in PNG Format; Not a PNG file; ==============================; *** Open Babel Error in PNG Format; Failed to embed molecule(s); 1 molecule converted; ```; Though the two images are written and the report by `file *.png` confirms their nature, `obabel augmented.png -O content.sdf` then yielded only an empty container. (If this matters, using OpenBabel 3.1.1 as packaged for Debian 12/bookworm [testing]). [lutidine_model_pngj.png.zip](https://github.com/openbabel/openbabel/files/7513270/lutidine_model_pngj.png.zip); [pyridine_test.zip](https://github.com/openbabel/openbabel/files/7513507/pyridine_test.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2426#issuecomment-965306607:1635,test,testing,1635,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2426#issuecomment-965306607,1,['test'],['testing']
Testability,"@fredrikw Based on your comment, I run. ```bash; obabel -:'c1ccncc1' -osmi -h; obabel -:'c1ccncc1' -osmi -xh; obabel -:'c1ccncc1' -ocan -h; obabel -:'c1ccncc1' -ocan -xh; ```; with OpenBabel 3.1.1. as provided by Linux Debian 12/bookworm, branch testing. None of them added explicit hydrogens around the pyridine, nor a form like `C1=CN=CC=C1` e.g. said ChemDraw JS suggests as a plausible solution. Since ```obabel -:'c1ccncc1' -oxyz -h``` did add them (and ```obabel -:'c1ccncc1' -oxyz -xh``` did not), I probably misunderstand the manual (section 18.1.7). Or do I?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2416#issuecomment-940797557:246,test,testing,246,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2416#issuecomment-940797557,1,['test'],['testing']
Testability,"@fredrikw So far, I understood *standardization* as an advantage to offer both the assignment of InChI (like a structure2InChI) as well as for the reversed approach InChI2structure. If it is for. > « Different input structures may give the same result; for example, acetic acid and acetate would both give the same core parent structure, that of acetic acid.»; >; > [Wikipedia](https://en.wikipedia.org/wiki/International_Chemical_Identifier). then a test, e.g., with the [ChemDraw JS page](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#) reveals (contemporary) implementations of the assignment are going to assign the two *differently* by a layer describing charges only seen for the later. Thus,. ```; InChI HOAc: InChI=1S/C2H4O2/c1-2(3)4/h1H3,(H,3,4); InChI OAc-: InChI=1S/C2H4O2/c1-2(3)4/h1H3,(H,3,4)/p-1; ```; Referring to the `inchi-1` reference 64bit executable published by the InChI trust, it is possible to convert (lists of) InChI strings into an intermediate form (toggle `InChI2Struct`) and eventually into a `.sdf` (toggle `OutputSDF`). I agree InChI's regenerated `.sdf` (currently) have an extra line too many, and it seems a bit odd to that these put all atoms into one spot of coordinate (0,0,0). Yet OpenBabel's output is the same in this regard (and already did so converting SMILES strings into `.sdf`) *except if requested* to consider an additional `--gen2d` (or, `--gen3d`). In case InChI are systematically less good than, say (for example) the SMILES notation, then I would suggest to extend the documentation accordingly (e.g., section 18.1.3). The user guide shipped with v. 1.06 for example states. > «Standard InChI organometallic representation does not include bonds to metal for the time being.»; >; > InChI_UserGuide.pdf, page 2. which may fit as a constraint to consider. Do you know about other groups of chemical compounds where OpenBabel's InChI2structure approach may lead to unforeseen, unintended results? If you think it would be worth to dis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2416#issuecomment-949795875:451,test,test,451,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2416#issuecomment-949795875,2,['test'],['test']
Testability,"@ghutchis , as promised, I am attaching two RPM spec files. `openbabel.spec` is the one I am using to build my RPMs, whereas `openbabel-ci.spec` is a modified version intended for use in a CI role. The most significant difference between the two is that the latter does not designate any patches (which I haven't provided anyway), since I imagine that it would be used to test the actual contents of the repository at various points. There is more that could be done to tune and trim the -ci spec for the role I imagine for it, but I think it would be better to base further changes on what you *actually* need instead of on what I guess you might need. [openbabel.spec.txt](https://github.com/openbabel/openbabel/files/4650857/openbabel.spec.txt); [openbabel-ci.spec.txt](https://github.com/openbabel/openbabel/files/4650858/openbabel-ci.spec.txt). ("".txt"" was appended to the file names to persuade GitHub to accept them.). If you would prefer to receive one or both of these in the form of a PR, then I would be happy to oblige -- just give me the details of what you want, where.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2223#issuecomment-630838110:372,test,test,372,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2223#issuecomment-630838110,1,['test'],['test']
Testability,@ghutchis - just wanted to ping to see if you've had a chance to think about the ideal way to test this?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1993#issuecomment-516413330:94,test,test,94,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1993#issuecomment-516413330,1,['test'],['test']
Testability,"@ghutchis - this is now ""building"" in your CI with my latest commit, but only because it sees no Boost and then skips building maeparser and its tests. Not sure if that's what you want to do here, but if you want me to make any changes just let me know.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1993#issuecomment-500932639:145,test,tests,145,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1993#issuecomment-500932639,1,['test'],['tests']
Testability,"@ghutchis . Here are files for testings. [mol_n_cdxml.zip](https://github.com/openbabel/openbabel/files/1998747/mol_n_cdxml.zip). I would like to contribute some testings, but have questions. 1. Is it necessary to re-run `make install` and `make test` after changing something in test files?; It takes a lot of time to re-run them.; Maybe you could share tips to write tests. 2. Could I run one specific test? ; What I know is to run `make test` after `make install`, and this runs all tests. 3. Is there any test example for similar formatting tests which could be a reference to write a test?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1831#issuecomment-388644054:31,test,testings,31,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1831#issuecomment-388644054,11,['test'],"['test', 'testings', 'tests']"
Testability,@ghutchis @baoilleach . Test added.; Please check it.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1831#issuecomment-391598858:24,Test,Test,24,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1831#issuecomment-391598858,2,['Test'],['Test']
Testability,"@ghutchis Here are some more details regarding the testing I have been doing. I'm running the same smi-sdf-can roundtrip test from `test/testdistgeom.py` on a large dataset (eMolecules SMILES database, only considering chiral molecules). So far, **17670 molecules** have been processed **without any segfaults or wrong stereochemistry**. There is only a minor cosmetic issue which should be fixed I think. For some structures, the number of iterations in `OBDistanceGeometry` is not enough to generate a valid structure. This results in a warning message:; ```; ==============================; *** Open Babel Warning in AddConformer; Distance Geometry failed.; ```; The full roundtrip still produces the correct geometry since we now have an additional loop in Gen3D. However, seeing this message is confusing if the whole process actually worked. Ideally, `AddConformer()` would return a boolean to indicate success. This would change the API/ABI. Some possible workarounds:; 1. Increase the number of iterations (currently equal to the number of atoms).; 2. Add function and member variable (in `OBDistanceGeometryPrivate`) to silence this message.; 3. Remove message and add function to check succes/failure. For the 17670 molecules, there were only 7 such cases. These are listed below together with the number of times OBDistanceGeometry failed. ```; O\C=C1\CCCCC1=O 1 iteration failed; C[C@H]1CCC\C=C\[C@@H]2C[C@H](O)C[C@H]2[C@H](O)\C=C\C(=O)O1 5 iterations failed; Cl\C=C\Cl 1 iteration failed; CO[C@H]1[C@H](O)CC(=O)O[C@H](C)C\C=C\C=C\[C@H](OC2CCC(C(C)O2)N(C)C)[C@H](C)C[C@H](CC=O)[C@@H]1OC1OC(C)C(OC2CC(C)(O)C(O)C(C)O2)C(C1O)N(C)C 3 iterations failed; C\C1=C/CC(C)(C)\C=C\C\C(C)=C\CC1 1 iteration failed; CCO\C=C\CC 1 iteration failed; CO[C@H]1[C@@H](CC(=O)O[C@H](C)C\C=C\C=C\[C@H](O)[C@H](C)C[C@H](CC=O)[C@@H]1O[C@@H]1O[C@H](C)[C@@H](O[C@H]2C[C@@](C)(O)[C@@H](OC(=O)CC(C)C)[C@H](C)O2)[C@@H]([C@H]1O)N(C)C)OC(C)=O 5 iterations failed; ```; In any case, it might be a good idea to have a minim",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2158#issuecomment-610071981:51,test,testing,51,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2158#issuecomment-610071981,4,['test'],"['test', 'testdistgeom', 'testing']"
Testability,"@ghutchis I think it's work that needs to be done to the `calccharges` function I'm proposing, not to the lower-level code. The C++ charge models generally print to an OBErrorLog and then return false. What I'd like to do is grab the contents of that log if this fails and print it as the exception in Python, rather than what it's currently doing. (That being said, my EQeq implementation could do a better job at throwing relevant errors...). I'm also open to more opinions on the error throwing vs boolean argument. The error throwing is personal preference, but, if I'm in the minority, I'll happily remove it.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/61#issuecomment-32376053:251,log,log,251,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/61#issuecomment-32376053,1,['log'],['log']
Testability,@ghutchis this most recent commit appears to do what I was saying re: error messages (tested on benzene and a MOF w/ qeq and qtpie by removing data files),MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/61#issuecomment-32380833:86,test,tested,86,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/61#issuecomment-32380833,1,['test'],['tested']
Testability,"@gregcouch If I understood you correctly, you request an extension of OpenBabel's features. Because the .cif you indicate contains multiple model blocks, it may be easier to start with a single model. Thus, using CCDC's viewer Mercury, the first model in your test file was saved it both as .cif and .pdb. The .pdb as second (additional) format was considered because there are programs written for a conversion of .pdb into .mmcif (e.g., [cif2pdb](https://www.iucr.org/resources/cif/software/cif2pdb) on IUCr's software list, or a post on [bioinformatics.stackexchange](https://bioinformatics.stackexchange.com/questions/10896/how-to-quickly-and-robustly-convert-between-mmcif-and-pdb) about an other program) for a comparison with openbabel's record written (said Mercury does not offer an export to .mmcif; I'm not aware if there is a plausibility/syntax checker for .mmcif as there is with [checkcif](https://checkcif.iucr.org/) for .cif files). At least one of the models of your reference data set equally is available as .cif on the COD (entry card [2103886](https://www.crystallography.net/cod/2103886.html)), too. [2022-10-27_single_model.zip](https://github.com/openbabel/openbabel/files/9877491/2022-10-27_single_model.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2545#issuecomment-1293199196:260,test,test,260,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2545#issuecomment-1293199196,1,['test'],['test']
Testability,"@husakm A bypass perhaps *good enough* in terms of maintenance and overall performance could consist of generating an intermediate .sdf by xyz2mol eventually processed by obabel to yield the Materials Studio file you seek. Meanwhile, someone with the necessary insight then could extend obabel's source code to provide the extended functionality you request. Addressing RDKit with Python, a MWE can be. ```python; from rdkit import Chem; from rdkit.Chem import rdDetermineBonds. raw_mol = Chem.MolFromXYZFile('KAXWOV_cation_xyz.xyz'); mol = Chem.Mol(raw_mol); rdDetermineBonds.DetermineBonds(mol,charge=-1); print(Chem.MolToMolBlock(mol)); ```. For some flexibility regarding the .xyz file to process and the (global) charge to assign, I wrote a small script around this ([xyz2mol_b](https://github.com/nbehrnd/xyz2mol_b/blob/main/xyz2mol_b.py)) -- as just tested in a virtual environment (Python 3.11.8, RDKit 2023.09.6 fetched with pip) still functional today. Thus. ```shell; $ python ./xyz2mol_b.py KAXWOV_cation_xyz.xyz -c 1 > cation.sdf; $ obabel cation.sdf -O cation.bgf; 1 molecule converted; $ cat cation.bgf ; BIOGRF 200; DESCRP ; FORCEFIELD DREIDING ; FORMAT ATOM (a6,1x,i5,1x,a5,1x,a3,1x,a1,1x,a5,3f10.5,1x,a5,i3,i2,1x,f8.5); HETATM 1 N1 RES A 444 -2.09800 4.11920 11.28120 N_R 2 0 -0.21693; HETATM 2 C2 RES A 444 -2.23690 5.32490 10.71550 C_R 3 0 0.17487; HETATM 3 C3 RES A 444 -2.80460 6.36740 11.41490 C_R 3 0 0.04130; HETATM 4 C4 RES A 444 -2.97580 7.71300 10.76640 C_3 4 0 0.07478; HETATM 5 O5 RES A 444 -2.56850 7.64730 9.44780 O_3 2 0 -0.39022; HETATM 6 C6 RES A 444 -3.22420 6.11110 12.71340 C_R 3 0 -0.04518; HETATM 7 C7 RES A 444 -3.07610 4.86090 13.27370 C_R 3 0 0.00239; HETATM 8 C8 RES A 444 -2.50840 3.86280 12.52490 C_R 3 0 0.16949; HETATM 9 H9 RES A 444 -1.69690 3.45390 10.69820 H_ 1 0 0.45224; HETATM 10 H10 RES A 444 -2.69970 8.47580 9.02660 H_HB 1 0 0.20985; HETATM 11 H11 RES A 444 -1.89590 5.48170 9.70190 H_ 1 0 0.13792; HETATM 12 H12 RES A 444 -4.01710 7.99900 10.8",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2090608580:857,test,tested,857,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2090608580,1,['test'],['tested']
Testability,"@ivzzognam Because there is no line with an `obabel` instruction, is it related to obabel? And if you want to report log from the shell in a GitHub issue, it is better to enclose it in a block starting / closing by a line of three back ticks as code block (see for example the 101 about markdown on [learnxinyminutes](https://learnxinyminutes.com/docs/markdown/)) to yield something in line of . ```shell; $ obabel -:""c1ccncc1"" -h --gen3d -oxyz; 11. C 1.43303 0.05159 0.00100; C 0.68800 1.22595 0.00151; C -0.69424 1.12564 0.00218; N -1.36237 -0.04853 0.00552; C -0.61197 -1.17189 0.00692; C 0.77379 -1.17331 0.00332; H 2.51852 0.09036 -0.00113; H 1.17153 2.19630 0.00127; H -1.31976 2.01344 0.00006; H -1.17257 -2.10232 0.01145; H 1.32543 -2.10632 0.00270; 1 molecule converted; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2657#issuecomment-1853615642:117,log,log,117,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2657#issuecomment-1853615642,2,['log'],['log']
Testability,"@jajupmochi Would an update of openbabel an option for you? There are might be good reasons to use a LTS from the Ubuntu family instead their intermediate releases published twice a year, as well as against; if you stick to LTS I would recommend to update to 20.04 LTS (and in this summer, to 22.04 LTS). To provide perspective, OpenBabel repackaged by DebiChem for Linux Debian 12/bookworm (branch testing) is at version 3.1.1 by February 6th, 2022 ([tracker](https://tracker.debian.org/pkg/openbabel)). If the generation 0D (the SMILES string) to 3D (the .xyz) fails, an alternative is to generate an intermediate 2D (.xyz) in first place. Sometimes, rewriting the SMILES string into a form more accessible to OpenBabel equally helps/offers additional help. . For the first SMILES string:. ```bash; obabel -:""N1(C=C[C@@H](C=C1C)[C@H]1C=CN(C(=C1)C)CCCl)CCCl"" -ocan | obabel -ismi -h --gen3d -oxyz; ```. yields e.g., . ```; 1 molecule converted; 42. Cl 0.93057 -0.72235 0.11214; C 2.70908 -0.81013 0.17949; C 3.30555 -0.84380 -1.22848; N 4.78308 -0.91157 -1.16078; C 5.50030 0.27828 -1.04781; C 6.79964 0.34655 -0.72869; C 7.58978 -0.90870 -0.42149; C 6.78436 -2.16623 -0.71814; C 5.47659 -2.13574 -1.05238; C 4.75761 -3.43161 -1.33497; C 9.00781 -0.95143 -1.07678; C 9.00304 -0.87328 -2.58644; C 9.84595 -0.06092 -3.23557; N 10.75438 0.79769 -2.61330; C 10.72369 0.90150 -1.20482; C 9.92661 0.09709 -0.46849; C 11.53292 1.93288 -0.45745; C 11.76972 1.46635 -3.46203; C 13.02007 0.59878 -3.60521; Cl 14.17952 1.34836 -4.73549; H 2.97462 -1.70594 0.74913; H 3.06144 0.06210 0.73931; H 3.00196 0.05450 -1.78183; H 2.89782 -1.68767 -1.79530; H 4.92952 1.18267 -1.23133; H 7.29603 1.30611 -0.65422; H 7.74476 -0.91385 0.66839; H 7.30518 -3.11487 -0.62493; H 5.43684 -4.29123 -1.32134; H 4.29997 -3.40647 -2.32943; H 3.97906 -3.61608 -0.58816; H 9.45341 -1.92403 -0.81917; H 8.32012 -1.50882 -3.14057; H 9.85509 -0.03516 -4.32277; H 9.92024 0.18199 0.61507; H 11.99814 2.68502 -1.09382; H 12.32360 1.45087 ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1046568989:399,test,testing,399,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1046568989,1,['test'],['testing']
Testability,"@jennijones Perspective chemistry: what is the origin of the SMILES string? Because if read e.g., by [Marvin](https://marvinjs-demo.chemaxon.com/latest/demo.html), the hydrogen of carbon highlighted . ![marvin](https://github.com/openbabel/openbabel/assets/19709084/ef32b63c-5de3-46d6-9135-eaaa6a296ee1). and the short bridge across boron, alkyl chain, nitrogen are not very comfortable in first place. This appears to be very strained motif and in terms of energy, unusual expensive. Perspective Python script: I were more comfortable if the force field to be used appears as parameter of the geometry optimization, on the same line, e.g. ```; mol.make3D(forcefield=""uff"", steps=1000); ```. The underlying logic of your script seems to attempt an optimization with UFF if this available. To me, this were better embedded in a try/except clause, i.e. a pattern in line of. ```python; try:; mol.make3D(forcefield=""uff"", steps=1000); except Exception:; print(""launch of optimization failed""); ```. Possibly there is a better exception condition than the very general `Exception` itself (pylint will indicate it as a point to work on). But at least the script will continue to work across this point, e.g. during an iteration over a list of SMILES even if the launch of the optimization in this step failed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2687#issuecomment-2044508975:707,log,logic,707,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2687#issuecomment-2044508975,1,['log'],['logic']
Testability,"@johnmay has taken a look and come to a similar conclusion. It's missing the atom test, probably as the first line of matchCandidate. More problematic is that the built-in test is fairly simplistic and is not strictly speaking testing isomorphism exactly. Still, it'll be better than the current. I'll make the change and test it against @johnmay's VF2.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1929#issuecomment-467501723:82,test,test,82,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1929#issuecomment-467501723,8,['test'],"['test', 'testing']"
Testability,"@johnmay unfortunately I do not know how SMARTS matching is implemented - need this to discuss efficiency vs SMILES matching. It is a deeper layer of OpenBabel that makes this job. I guess that some extra work is needed in your approach to cope with stereochemistry and isotopes. Here I wrote a test for alias feature, and also removed copy construction of OBMol in AliasData::AddAliases, just checking if atom exists. Appreciate team members to take a look when you have time. @baoilleach BTW just figured out that. > bool OBSmartsPattern::Match(OBMol &mol,bool single). makes a copy of OBMol to add hydrogens. This function is called for each and every SMARTS in the alias table from superatom.txt. So probably performance was not that badly hit by my original commit. If we add hydrogens once and mark molecule as hydrogenated, it might in fact have improved performance of aliasing by a factor of N where N is number of SMARTS ;)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2102#issuecomment-561696028:295,test,test,295,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2102#issuecomment-561696028,1,['test'],['test']
Testability,"@mainguyenanhvu There is too little information shared by you, i.e. what is; the input structure you provide to OpenBabel to replicate your observation?; Is the warning ""can not correct stereochemistry"" equally issued while; converting your input SMILES into a canonical one (`-ocan`)? Did you stay; with the default force field (MMFF94), or tried an other one implemented? Are; all atoms of your input structures covered by the force field? Did you you; test `--gen3d` with optional `--fast` or `--fastest` (computationally more; affordable, because it leaves out some of the default optimization which could; be still reasonable in your workflow)?. The identification of a reasonable conformer from scratch can already be; demanding for small non-protein molecules (just because today's Nobel prizes; for chemistry). If there only is one particular structure / only a few, a; bypass can be the generation of a flat 2D sdf. ```; obabel -:""c1ccncc1"" --gen2d -h -O 2dstructure.sdf; ```. with OpenBabel which then is read -- explicitly as a 2D structure -- e.g. by; Jmol for a minimization to 3D from the program's console. ```; load ""2dstructure.sdf"" filter ""2D"";; ```. Or right away from a SMILES string itself, e.g. ```; load ""$c1ccncc1"" filter ""2D""; ```. (A call by `java -jar Jmol.jar -h` shows that Jmol can be launched from the; CLI, process data without a GUI, act according to a script to digest batches; of models, too.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2280#issuecomment-2402271223:455,test,test,455,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2280#issuecomment-2402271223,1,['test'],['test']
Testability,"@merkys I just submitted same intermediate `reconstruct.sdf` to RDKit (currently 2020.09.5 for Debian 12/bookworm [testing]):. ```python; import rdkit; from rdkit import Chem. m = Chem.MolFromMolFile(""reconstruct.sdf""); print(Chem.MolToSmiles(m)); ```; This assigns `COC(=O)/C=C1\CN(S(=O)(=O)c2ccc(C)cc2)C\C1=C/c1ccccc1` as SMILES string with (*Z*,*Z*)-configuration. It is not the one COD currently states on the landing page of the entry, but leads to an equivalent representation in e.g., CDK Depict and OpenBabel.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2319#issuecomment-968096622:115,test,testing,115,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2319#issuecomment-968096622,1,['test'],['testing']
Testability,"@miracle1111111 - please create separate threads for different questions. (In answer to your question, no there is not a descriptor model for logS at the moment.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2351#issuecomment-822687553:142,log,logS,142,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2351#issuecomment-822687553,1,['log'],['logS']
Testability,@mwojcikowski I can add PHP if you test it.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/28#issuecomment-25003485:35,test,test,35,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/28#issuecomment-25003485,1,['test'],['test']
Testability,@n-yoshikawa - you read my mind- last night I was thinking 'let's just have easier tests for now and work on improving',MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1875#issuecomment-557647846:83,test,tests,83,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1875#issuecomment-557647846,1,['test'],['tests']
Testability,"@nbeaver There may situations where editing a single `.cif` file manually, directly in the file, is fine, especially if you know plausible entries. If not, [publcif](https://journals.iucr.org/services/cif/publcif/) is a freely available, multi-platform editor which guides you by internal dictionaries and checkers. Note, however, beside the crystallographic model (e.g., unit cell, symmetry operations, atom coordinates), a `.cif` file equally may contain instructions how this model was refined, as well as a reduced representation of the experimental diffraction data. Their consistency is probed with checksums (test [PLAT012](https://journals.iucr.org/services/cif/checking/PLAT012.html)) by Platon, because these two would both allow a) to replicate the construction of the model, and b) build an other, possibly improved, model. For the background, see A. Spek's recent open access publication (author of Platon) [here](http://scripts.iucr.org/cgi-bin/paper?S2056989019016244).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2261#issuecomment-666994769:616,test,test,616,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2261#issuecomment-666994769,2,['test'],['test']
Testability,"@nbehrnd Thanks for the helpful comment; I wasn't aware of `checkcif` or `platon`. I'll admit that `example_bad.cif` was generated by [`afl-fuzz`](https://lcamtuf.coredump.cx/afl/) and then hand-edited to isolate the relevant line, so it wasn't a CIF that I found in the ""wild"". (I've been experimenting with fuzzing scientific libraries as they don't seem to have been widely tested in this manner, although OpenBabel's SMILES format parser [was fuzzed in 2018](https://github.com/openbabel/openbabel/pull/1770) by @baoilleach.). The original `example_good.cif` was a data file included in Avogadro:. https://github.com/cryos/avogadro/blob/79d22168cb8c5a874189bebf16f7270871f3c469/crystals/ice/H2O-Ice-II.cif. As for updates, I did compile OpenBabel from source and check that the bug was replicable on the [latest git revision](https://github.com/openbabel/openbabel/commit/4709b0752109db593f1bee6298ef3bfa718d260d).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2261#issuecomment-666743407:377,test,tested,377,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2261#issuecomment-666743407,1,['test'],['tested']
Testability,"@nbehrnd There are functions to add and remove hydrogens with Pybel: `.addh()` does the same as `.AddHydrogens()` in OpenBabel and `.removeh()` does the same as `.DeleteHydrogens()`. However, getting the `.formula` attribute calls `GetFormula()`, which calls `GetSpacedFormula(1, """")`, forcing explicit hydrogens, so the output should be the same regardless of the state of Hydrogens. [The third parameter is a boolean for implicit hydrogens, but it defaults to True.]. However, there is a deficiency when deciding to use implicit hydrogens. When you make `C.[Ru]` a molecule, there are no proper bonds (`mol.OBMol.NumBonds()` gives 0). Therefore, the below line turns off the implicit hydrogen mode.; https://github.com/openbabel/openbabel/blob/c3143e6235788ddd2c0a9d8298ad4873a5dbc81d/src/mol.cpp#L1015. Perhaps this logic needs to be adjusted for the SMILES ""non-bond"" type?. If you add H before calling `.formula`, it will work as expected. ```python; >>> from openbabel import pybel; >>> mol = pybel.readstring(""smi"", ""C.[Ru]""); >>> mol.addh(); >>> mol.formula; 'CH4Ru'; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2363#issuecomment-828675814:819,log,logic,819,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2363#issuecomment-828675814,1,['log'],['logic']
Testability,"@nbehrnd Yes, the issue also occurs under Ubuntu 20.04.3. issue: https://github.com/hackingmaterials/atomate/pull/734; [logs](https://github.com/hackingmaterials/atomate/runs/4808065787?check_suite_focus=true). I tried installing with `apt`, `snap` and `conda`. All have the same issue.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013889460:120,log,logs,120,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013889460,1,['log'],['logs']
Testability,@nbehrnd thanks for your comment. I do not really get how confab is related to the problem here? . The SetTorsion function works in the vast majority of cases as intended and just rotates the specifc dihedral (here chi1). In maybe 2 of 100 cases I will produce faulty structures (with systems that only differ in the coordinates and residues/atoms being equal). I double checked that the atoms we are choosing are correct and I also reversed the order of atoms for SetTorsion but nothing gives me a satisfactory result. . I also tested this in openbabel 2.4.1 and the problem exists there too. . I am not an openbabel expert but upon reading [ObRotorList Documentation](https://openbabel.org/dev-api/classOpenBabel_1_1OBRotorList.shtml#aca77a345e848bcedd33f56b03844d014) there is an argument for fixed atoms but I am not sure how to use it. Any pointers on how to use this? Perhaps if the bb_nitrogen atom is fixed the rotation would work correctly by rotating the sidechain and not the backbone atoms.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2434#issuecomment-977921185:529,test,tested,529,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2434#issuecomment-977921185,1,['test'],['tested']
Testability,"@ostueker There are at least two bypasses available, if the installation of `python3-openbabel` provided by your OS fails. - in clean a virtual environment, use [openbabel-wheel](https://pypi.org/project/openbabel-wheel/) instead of openbabel. It works well for instance in Linux Debian 13/trixie, and Windows. Prior to the installation of this package, assert the absence of openbabel's Python bindings, i.e. either start all over, or run `pip uninstall openbabel`. The sole adjustment to your project then is to edit `requirements.txt`. This approach does not interfere with the obabel executable installed to the CLI with `openbabel` and `libopenbabel7` e.g., as provided by the repositories of Debian 13/trixie (at present 3.1.1+dfsg-9+b).; - for work with/around openbabel and Python, use the interpreter and the packaged version by [anaconda](https://anaconda.org/conda-forge/openbabel)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-2033798886:354,assert,assert,354,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-2033798886,1,['assert'],['assert']
Testability,@rathann I'm wondering if the -march=native call is the cause of your failures. (I'm guessing that some of the tests are done with cross-compilation.),MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/266#issuecomment-193881243:111,test,tests,111,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/266#issuecomment-193881243,1,['test'],['tests']
Testability,"@ricrogz - I can't merge something that fails tests. If `master` is needed for that, no problem. I just want to make sure that we can freeze versions for e.g openbabel-3.1.0. I'm aware of the annoying GitHub tar/zip variance. Happy to work on that.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2064#issuecomment-552988102:46,test,tests,46,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2064#issuecomment-552988102,1,['test'],['tests']
Testability,"@schatzsc For your information, there is an early note by Greg Landrum (project of RDKit) [here](https://github.com/rdkit/rdkit/discussions/6995) by today, [2023-12-18 Mon]. By your contribution to chemotion_ELN you possibly have a couple of «typical» carbenes and other complexes one could submit to benchmark an eventually revised approach.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2656#issuecomment-1859711211:301,benchmark,benchmark,301,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2656#issuecomment-1859711211,1,['benchmark'],['benchmark']
Testability,"@schatzsc I redrew the structure on the test page of Marvin JS ([link](https://marvinjs-demo.chemaxon.com/latest/demo.html)) using the coordinate/dative bond. Pt was assigned a positive charge, Br for compensation a negative one:. ![test_in_marvin](https://github.com/openbabel/openbabel/assets/19709084/a3ee90f5-0a20-4c43-bfd4-97696e937227). Beside saving the structure in the program's original format as a Marvin object (.mrv), it was exported as .mol -- once in the v2000 dialect, once in the more recent v3000 dialect. The Hill formula matches your anticipated result:. ```shell; $ obabel marvin_mol2000.mol -oreport | head -10; FILENAME: ; FORMULA: C13H13BrN5Pt; MASS: 514.2578; EXACT MASS: 513.0002234; INTERATOMIC DISTANCES. C 1 C 2 C 3 N 4 C 5 C 6; ------------------------------------------------------------------; C 1 0.0000 ; C 2 0.8249 0.0000 ; 1 molecule converted; ```. and . ```shell; $ obabel marvin_mol3000.mol -oreport | head -10; FILENAME: ; FORMULA: C13H13BrN5Pt; MASS: 514.2578; EXACT MASS: 513.0002234; INTERATOMIC DISTANCES. C 1 C 2 C 3 N 4 C 5 C 6; ------------------------------------------------------------------; C 1 0.0000 ; C 2 1.5399 0.0000 ; 1 molecule converted; ```. For the visualization by obabel, `-xu` replaces the element colors by a black-and-white scheme favourable here, for instance. ```shell; $ obabel marvin_mol2000.mol -O mol2000.png -xu; 1 molecule converted; ```. ![mol2000](https://github.com/openbabel/openbabel/assets/19709084/aed6c32a-e538-4e96-9d9d-d71a1c8f9c01). To ease a replication, see the archive attached below. For the test, I used obabel (version 3.1.1 -- Jan 4 2023 -- 09:58:24) as provided by Linux Debian 13/trixie (branch testing). [2023-12-13_test_in_marvin.zip](https://github.com/openbabel/openbabel/files/13659583/2023-12-13_test_in_marvin.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2656#issuecomment-1853661655:40,test,test,40,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2656#issuecomment-1853661655,3,['test'],"['test', 'testing']"
Testability,@timvdm - if we un-comment the smiles at the end of `test/testdistgeom.py` do they work as well?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2158#issuecomment-609965521:53,test,test,53,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2158#issuecomment-609965521,2,['test'],"['test', 'testdistgeom']"
Testability,"@vaitkus True, the first suggestion boils down to not use `cat` and `|`. When I moderate OpenBabel with Python's `subprocess` module, using `Popen` to work with input data which are syntactically wrong, I may fetch `stderr` (see example `check.py` in the example archive attached below). The translation of this approach to cover your instruction does not yield an observable error message (see `observation_vaitkus.py`). I don't know if an other language (of your choice) is going to be more verbose / more suitable here. The suggest ""different sequence"" referred to replace the approach with cat (get the content of the file, pipe this into subsequently started OpenBabel) by starting OpenBabel in first place (and let OpenBabel fetch the content of `test.smi`). This is the only change in the sequence of events I put on the table. [convert_io.zip](https://github.com/openbabel/openbabel/files/6669604/convert_io.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2386#issuecomment-863144505:753,test,test,753,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2386#issuecomment-863144505,1,['test'],['test']
Testability,"@wojdyr are you sure? This was never merged as-is and looking at commits, 7534c4626f1c72187472cada055b3176048040a5 *may* solve the issues I noticed with group 210, but for the rest, I can't tell with a quick glance. For example, 445afcb1428c80d98fce5f03fb9a8ae763a170ff touches group 222, but only changes the group's header. From what I can remember, I noticed a problem while fixing `avogadro`, so I decided to systematically compare `openbabel` to `spglib`, yielding this bug report. Sadly, I don't have the test program after all these years, and ATM, I don't have the time to write it again. Perhaps later, although I hope someone beats me to it :)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1292#issuecomment-331460100:511,test,test,511,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1292#issuecomment-331460100,1,['test'],['test']
Testability,"A `cout` logging statement in cifformat.cpp was polluting stdout, which is an issue when writing the output molecule to stdout. Also: Should all the `cout` statements in cifformat.cpp be changed to `obErrorLog`?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/76:9,log,logging,9,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/76,1,['log'],['logging']
Testability,A better test case (because the Mol file above is messed up by the email) is:. Success:; obabel -:C((=O)O)[C@](I)(Br)Cl -omol --gen2d | obabel -imol -osmi; C(=O)(O)[C@](I)(Br)Cl. Fail:; obabel -:C((=O)O)[C@](I)(Br)Cl --genalias -omol -xA --gen2d | obabel -imol -osmi; C(I)(Br)(Cl)C(=O)O. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1155#issuecomment-281801387:9,test,test,9,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1155#issuecomment-281801387,1,['test'],['test']
Testability,"A better test case is simply:. >>> import pybel; >>> mol = pybel.ob.OBMol(); >>> pybel.Molecule(mol).write(""inchi""). Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/933#issuecomment-281795785:9,test,test,9,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/933#issuecomment-281795785,2,['test'],['test']
Testability,"A confab beta tester reports:; ""When I input a gzipped file it only appears to read the first molecule. This has happened to me in the past in my own code - when I call OBConversion::Read; with the second argument as a file stream it only reads the first molecule. The trick is to; set the input stream first, then call Read with just the single OBMol& argument. It's a subtle one as it only shows up for zipped input formats, but it is to do with the fact; that when the stream argument is not null, it gets checked to see if it is zipped, and if; it has been checked before the Read simply returns false (to avoid repeated checking)."". Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1015:14,test,tester,14,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1015,1,['test'],['tester']
Testability,"A mol file is attached. I am not sure how to test the aromatic - Kekule conversion by command line, since mol file already contains Kekule bonds. It might be the problem is related to the aromatic SMILES parsing, as it was first reported. . Original comment by: vedina",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/866#issuecomment-281794873:45,test,test,45,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/866#issuecomment-281794873,1,['test'],['test']
Testability,"A patch that fixes this without using six would be great. On Fri, 3 Apr 2020, 19:07 Maksim Rakitin, <notifications@github.com> wrote:. > While following the example at; > https://open-babel.readthedocs.io/en/latest/UseTheLibrary/PythonInstall.html#test-the-installation,; > noticed that the mol.draw() step fails on importing of Tkinter in Python; > 3.7. The module was renamed to tkinter in Python 3+ versions, and the six; > library supports the proper handling of the change:; > https://six.readthedocs.io/#module-six.moves. I added six as the install; > requirement.; > ------------------------------; > You can view, comment on, or merge this pull request online at:; >; > https://github.com/openbabel/openbabel/pull/2157; > Commit Summary; >; > - Fix the import of Tkinter in Python 3+; >; > File Changes; >; > - *M* scripts/python/openbabel/pybel.py; > <https://github.com/openbabel/openbabel/pull/2157/files#diff-863e0301a7472d65e3d8a16069b84301>; > (2); > - *M* scripts/python/setup.py; > <https://github.com/openbabel/openbabel/pull/2157/files#diff-4e89b66ccedac44670411667ec0b727d>; > (1); >; > Patch Links:; >; > - https://github.com/openbabel/openbabel/pull/2157.patch; > - https://github.com/openbabel/openbabel/pull/2157.diff; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/pull/2157>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAALCGKKOEUDARWBSS5GEUDRKYQV7ANCNFSM4L4LAHWQ>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2157#issuecomment-609051007:248,test,test-the-installation,248,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2157#issuecomment-609051007,1,['test'],['test-the-installation']
Testability,"A quick look on the failing test seems to indicate that the new test is run also on installs without the bindings. (https://github.com/openbabel/openbabel/actions/runs/6626985692/job/18417945235?pr=2637); So I would assume it is fixed by either rewriting the test to not use the bindings, similar to the other test in testpdbformat.py or split it out to a new file and only run the test when the bindings are built.; With option one being preferred I would think, since this should probably be a feature that should be available (and tested) also without bindings.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2637#issuecomment-1798272631:28,test,test,28,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2637#issuecomment-1798272631,7,['test'],"['test', 'tested', 'testpdbformat']"
Testability,"A recent API change (#1576) broke FragIt (https://github.com/FragIt/fragit-main) which depended on the knowledge about implicit bonds. Now, #1576 did include new utility functions (obfunctions.h) but these functions were never exposed through the python API. 1. This PR exposes those functions hidden away in obfunctions.h so I can use them in FragIt. This PR does not add or remove anything in the API apart from exposing functionality in the API through the python-bindings but I am unsure whether I am required to add some form of test or other documentation?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1697:534,test,test,534,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1697,1,['test'],['test']
Testability,"A test run by. `obabel -ipdb test.pdb -opng -O test.png -xd`. with the data attached just worked fine (i.e., no display of the file name) with the more recent release of Open Babel 3.1.0. Given this observation, I suggest either a new compilation from the [sources](https://github.com/openbabel/openbabel/releases), or substitution of the executables. Note there equally is a [snap](https://snapcraft.io/install/openbabel/mint) dedicated to Open Babel, too. Then probe again if the issue is present. [test.zip](https://github.com/openbabel/openbabel/files/5000406/test.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2257#issuecomment-666276566:2,test,test,2,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2257#issuecomment-666276566,5,['test'],['test']
Testability,"A warning is issued when converting my favourite SDF file, head.sdf (in scripts/python/examples):. babel -i SDF head.sdf -o smi head.smi. ==============================; *** Open Babel Warning in OpenBabel::MDLFormat::ReadMolecule; WARNING: Problems reading a MDL file; Cannot read title line. 2 molecules converted; 1 warnings 34 audit log messages. The weird thing is...there is a title line!. ------------. From Geoff:. Rats. It seemed like a pretty safe fix -- add more verbose warnings to the mdlformat.cpp code when rejecting molecules. This comes when we try to read after the last $$$$ in that file. So you have read 2 molecules cleanly, and then attempt to read a 3rd.; Obviously, there isn't another molecule in the file (you hit the EOF), so it fails. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/662:337,log,log,337,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/662,1,['log'],['log']
Testability,"ARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > Python bindings will be compiled; > > Configuring done; > > CMake Warning (dev):; > > Policy CMP0042 is not set: MACOSX_RPATH is enabled by default. Run ""cmake; > > --help-policy CMP0042"" for policy details. Use the cmake_policy command to; > > set the policy and suppress this warning.; > > ; > > MACOSX_RPATH is not specified for the following targets:; > > ; > > inchi; > > openbabel; > > ; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > Generating done; > > ; > > Need help! Thank you~; > > ; > > —; > > Reply to this email directly or view it on GitHub; > > https://github.com/openbabel/openbabel/issues/131.; > > ; > > —; > > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:23131,test,test,23131,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['test'],['test']
Testability,"ARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:46 in ; --; 95: ../src/formats/libinchi/ichicano.c:1676:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 95: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; --; test 97; Start 97: test_rotor_2; --; 97: ../src/obconversion.cpp:302:24: runtime error: load of value 109, which is not a valid value for type 'bool'; 97: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 98; Start 98: test_rotor_3; --; 98: ../src/obconversion.cpp:302:24: runtime error: load of value 154, which is not a valid value for type 'bool'; 98: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 99; Start 99: test_rotor_4; --; 99: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 99: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 100; Start 100: test_shuffle_1; --; 100: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 100: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 101; Start 101: test_shuffle_2; --; 101: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 101: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/gra",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:11925,test,test,11925,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['test'],['test']
Testability,"About 002RPD.log from andersbiceps, this one does not have the ""nosym"" keyword and includes a ""standard orientation"" block. However, it does not include the second one the code is looking for, maybe because it is a single-point calculation?. As noted in #3495545, this will trash the ifs object and the subsequent rewind (ifs.seekg(0)) will have no effect, resulting in an empty outgoing molecule. I suggest fixing that by checking for the line ""Normal termination of Gaussian"" which is usually the last line and breaking out of the while loop then (so the rewind can still take effect). About the cclib test case - this one seems to crash while pushing back orbital data, I get the segfault here:. #4 OpenBabel::GaussianOutputFormat::ReadMolecule (this=<value optimized out>, pOb=<value optimized out>, pConv=<value optimized out>); at /build/openbabel-UwmzPj/openbabel-2.3.1+dfsg/src/formats/gaussformat.cpp:742. 742	 betaSymmetries.push_back(symmetries[i]);. Noel, can you confirm that? It looks like a different bug to me. Original comment by: @mbanck",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1205#issuecomment-281802259:13,log,log,13,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1205#issuecomment-281802259,2,"['log', 'test']","['log', 'test']"
Testability,"About the test case, you can check the attachment of #1768. Without the patch it indeed segfaults, with it it's ok. Now I recognize that it may not be the right fix (perhaps I'm just hidding the pb).; Also, I checked the existing test cases but I didn't found something enough similar to copy cat it.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1798#issuecomment-375660966:10,test,test,10,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1798#issuecomment-375660966,2,['test'],['test']
Testability,"According to @mcs07 above, this should already be working. Is there any blocker here, besides uploading? I'm willing to test the package.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2067#issuecomment-556901152:120,test,test,120,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2067#issuecomment-556901152,1,['test'],['test']
Testability,"According to the Daylight SMARTS website ""[#6;X3v3+0]"" should match a carbon radical. (http://www.daylight.com/dayhtml_tutorials/languages/smarts/smarts_examples.html#RAD). This doesn't work, instead the radical is treated as a connection:. $ echo 'C[CH2]' | babel -ismi -s'[#6;X3v3+0]' -osmi; 0 molecules converted; 12 audit log messages; $ echo 'C[CH2]' | babel -ismi -s'[#6;X4v4+0]' -osmi; C[CH2]; 1 molecule converted; 31 audit log messages. Similarly for the less constrained match ""[#6;X3]"". $ echo 'C[CH2]' | babel -ismi -s'[#6;X3]' -osmi; 0 molecules converted; 12 audit log messages. I'd like to see this work consistently for heteroatoms too:. $ echo 'CCO[O]' | babel -ismi -s'[O;X1]' -osmi; 0 molecules converted; 18 audit log messages. Cheers,; Stephen. Reported by: donquix2003",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/803:326,log,log,326,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/803,4,['log'],['log']
Testability,"According to the documentation, not all elements are covered yet. To quote:. > Right now there is only limited support for element perception. It works for elements with one letter symbols if the atomtype starts with the same letter. source: https://open-babel.readthedocs.io/en/latest/FileFormats/GRO_format.html. Let's say I generate a .gro about diethyl ether by. ```shell; $ obabel -:""CCOCC"" -h --gen3d -ogro. 15; 1UNL C 1 0.095 -0.007 0.005; 1UNL C 2 0.247 -0.010 0.002; 1UNL O 3 0.297 0.089 0.093; 1UNL C 4 0.439 0.091 0.094; 1UNL C 5 0.486 0.197 0.191; 1UNL H 6 0.054 -0.082 -0.063; 1UNL H 7 0.058 0.092 -0.024; 1UNL H 8 0.058 -0.027 0.106; 1UNL H 9 0.283 0.012 -0.099; 1UNL H 10 0.283 -0.109 0.033; 1UNL H 11 0.477 0.113 -0.006; 1UNL H 12 0.477 -0.007 0.126; 1UNL H 13 0.448 0.296 0.162; 1UNL H 14 0.595 0.201 0.195; 1UNL H 15 0.448 0.177 0.292; 0.00000 0.00000 0.00000; 1 molecule converted; ```. As a permanent record (file `ether.gro.txt` attached below), this works fine for subsequent edits by obabel (e.g. conversion to .xyz). Substitution of the first atom entry to `C1` (see `ether_modified.gro.txt` attached) does not matter. Introduction of `Be` as second does not stop the conversion, however yields an .xyz with `B` instead of `Be`. An additional edit of atom 3 to either `Li`, `Mg`, `Na`, `Ca`, `Fe`, `Cl`, or `Br` currently yields. ```shell; $ obabel ether_modified.gro -oxyz; ==============================; *** Open Babel Error in Convert; Convert failed with an exception; 0 molecules converted; ```. equally in an instance of openbabel as provided by Linux Debian 13/trixie (branch testing, version 3.1.1 -- Jan 4 2023 -- 09:58:24). [ether_modified.gro.txt](https://github.com/openbabel/openbabel/files/12237940/ether_modified.gro.txt); [ether.gro.txt](https://github.com/openbabel/openbabel/files/12237942/ether.gro.txt)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2614#issuecomment-1661767131:1608,test,testing,1608,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2614#issuecomment-1661767131,1,['test'],['testing']
Testability,"Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 4709b0752109db593f1bee6298ef3bfa718d260d; Operating system and version: Debian 10.6. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. obsym works without segmentation fault. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. obsym crashes with segmentation fault. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. With the following file, H2O.xyz,; ```; 3; H2O.xyz; H -0.78304 -0.60618 0.00000; O 0.00000 0.00000 0.00000; H 0.78304 -0.60618 0.00000; ```. obsym crashes:. ```ShellSession; $ obsym H2O.xyz; Point Group: zsh: segmentation fault obsym H2O.xyz; ```. lldb result is as follows:. ```GDB; (lldb) run H2O.xyz; Process 22477 launched: 'obsym' (x86_64); Point Group: Process 22477 stopped; * thread #1, name = 'obsym', stop reason = signal SIGSEGV: invalid address (fault address: 0x22); frame #0: 0x00007ffff7dcf641 libopenbabel.so.7`OpenBabel::OBAtom::GetDistance(OpenBabel::OBAtom*) [inlined] OpenBabel::OBMol::HasFlag(this=0x0000000000000000, flag=8388608) at mol.h:402:41; 399 	 //! Mark that distance calculations, etc., should apply periodic boundary conditions through the minimimum image convention.; 400 	 //! Does",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2286:1347,test,test,1347,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2286,1,['test'],['test']
Testability,"Actually, if that's the case, we can bring back the log statements I removed in an earlier PR, and just put them in an 'if'. Just say the word.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1714#issuecomment-349093308:52,log,log,52,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1714#issuecomment-349093308,1,['log'],['log']
Testability,"Actually, the README also refers to how to build the Java bindings, but that is taken care of via CMake now. The instructions didn't seem to work either, but admittedly I only tried a few times because of curiosity. Maybe the README should only contain the information regarding LD_LIBRARY_PATH and LD_PRELOAD as well as the Mac OS equivalent. I will try and test on Mac OS soon. Original comment by: mkjensen",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1102#issuecomment-281800542:359,test,test,359,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1102#issuecomment-281800542,1,['test'],['test']
Testability,"Actually, the valgrind failures were with invalidsmiles, not invalidsmarts, so I have no idea what the problem might be. In my checkout I have more tests, is it possible the auto-tester is running something different for this test?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/201#issuecomment-122428418:148,test,tests,148,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/201#issuecomment-122428418,3,['test'],"['test', 'tester', 'tests']"
Testability,"Actually, what we can do is to select a subset of molecules (e.x 30 molecules) and generate their atom types to be used as the reference. Then, we can add a new test to compare the atom types of these compounds with those used as the reference. Therefore, if someone changes gaff.prm or anything related, the test will fail if the changes cause a mismatch. . > On Mar 14, 2016, at 5:14 PM, Geoff Hutchison notifications@github.com wrote:; > ; > Is there some way we can add a unit test for the correct GAFF atom types (i.e., beyond the current energy evaluations)? This way, if some future commit accidentally breaks GAFF typing, we would know.; > ; > —; > Reply to this email directly or view it on GitHub https://github.com/openbabel/openbabel/pull/278#issuecomment-196389370.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/278#issuecomment-196529960:161,test,test,161,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/278#issuecomment-196529960,3,['test'],['test']
Testability,"Add fully functional maeparser support for both reading and writing mae/maegz format. Also added some very basic tests. maeparser APIs require C++11, so the most controversial change here is enabling C++11 if maeparser is enabled (which it would be by default). All code seems to build fine with this enabled (at least with modern compilers), so hopefully this will be OK for OpenBabel. Fixes #1803",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1993:113,test,tests,113,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1993,1,['test'],['tests']
Testability,Add regression test for fast tanimoto search,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/183:15,test,test,15,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/183,1,['test'],['test']
Testability,Add support for COF format (Culgi object file) and add Python tests for converting COF to and from MOL and MOL2 formats using obabel executable,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1944:62,test,tests,62,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1944,1,['test'],['tests']
Testability,Add support for COF format plus tests,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1944:32,test,tests,32,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1944,1,['test'],['tests']
Testability,"Add timeout option (necessary for mols with many symmetries) and fix bug with default behavior (was not doing one to one mappings). Also, added test.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2608:144,test,test,144,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2608,1,['test'],['test']
Testability,Add unit tests for pull requests: #254 #255 #260,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/262:9,test,tests,9,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/262,1,['test'],['tests']
Testability,"Added a test at the start of parsing, throw an error if the string is longer than BUFF_SIZE. Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1181#issuecomment-281801818:8,test,test,8,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1181#issuecomment-281801818,1,['test'],['test']
Testability,"Added a test for this to the test suite (testfastsearch.py). It passes on a variety of 64-bit and 32-bit systems (http://my.cdash.org/testSummary.php?project=57&name=pytest_fastsearch&date=2010-03-01), so I'm marking this as pending. The failures are the systems where all of the tests fail and are not specific to this test. This will close automatically in 2 weeks unless reopened by the original submitter. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796342:8,test,test,8,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796342,6,['test'],"['test', 'testSummary', 'testfastsearch', 'tests']"
Testability,"Added a unit test. For my education, can you tell me how to run a certain unit test (for example test_pdbreadfile_4) not all of them using `make test`.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2170#issuecomment-612030682:13,test,test,13,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2170#issuecomment-612030682,3,['test'],['test']
Testability,"Added functionality for peri/poly fused rings. Small changes to allow more fused notation ring combinations. Small QOL changes for atom assignment and ""locant"" path definitions. Added support for major periodic table elements, Spiro & ring bridge support. Combinations of cyclic unit merging now available on read. . Tests on the Pubchem data yielded read results of 97%. * Created function for polyfused ring systems - . ```c++. polyfused_ring(std::vector<OpenBabel::OBAtom*> &ring,std::vector<char> char_vector, std::vector<int> atom_vector, int ring_positions); ```; * Created function for perfused ring systems- ; ```c++; int perifused_ring(std::vector<OpenBabel::OBAtom*> &ring,std::vector<char> char_vector, std::vector<int> atom_vector,std::vector<char> peri_vector, int ring_positions) {; ```; this has limited functionality for larger combinations, but covers the basic peri fused examples for rings up to 2 peri atoms. . * Several Additions to ``bool parse_ring()`` to facilitate the above functions. * Full addition of periodic elements to all switch statements in parse_ring, parse_inorganic",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2510:317,Test,Tests,317,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2510,1,['Test'],['Tests']
Testability,Added test in testsym.py in r3594. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/816#issuecomment-281793820:6,test,test,6,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/816#issuecomment-281793820,2,['test'],"['test', 'testsym']"
Testability,Added tests.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1558#issuecomment-297484638:6,test,tests,6,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1558#issuecomment-297484638,1,['test'],['tests']
Testability,"Additional remark: When I use babel from the Avogadro package it seems to work, however this is a different version (2.2.2b1) and it produces the same warning message nevertheless. /Applications/Avogadro.app/Contents/bin/babel; Open Babel 2.2.2b1 -- Jun 2 2009 -- 12:15:39. /Applications/Avogadro.app/Contents/bin/babel -i cif 2aev.cif -o pdb test.pdb ; ==============================; *** Open Babel Warning in Init; Unable to open data file 'space-groups.txt'; ==============================; *** Open Babel Warning in Init; Cannot initialize database; ==============================; *** Open Babel Warning in Find; Unknown space group with incomplete or wrong definition.; 1 molecule converted; 3 warnings 80 audit log messages 1 debugging messages. Original comment by: knollentroll",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/910#issuecomment-281795455:343,test,test,343,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/910#issuecomment-281795455,2,"['log', 'test']","['log', 'test']"
Testability,"Address #1615 by testing if filename is an instance of bytes and use a; bytes suffix in that case. This seems to be the approach used in cpython; source code, so I take it for being pythonic at the moment. (e.g.; https://github.com/python/cpython/blob/3f9183b/Lib/posixpath.py#L119 )",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1673:17,test,testing,17,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1673,1,['test'],['testing']
Testability,"Adds support for the new handling of reactions, such that mixtures of reactions and molecules will be returned as OBMols. Also fixes the handling of implicit Hs, as it turns out that there were no test cases for CDX files and it was returning benzene without any hydrogens. There are a few things that don't work, but they didn't work before either (I believe):; 1. Molecules with radicals are not correctly handled (in terms of hydrogens); 2. Only the OBConversion:Convert() interface works. Not ::Read(), and so they cannot be read from Python, etc. I don't know whether this is an underlying problem with reading binary files or just something that Chris never got around to implementing.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1878:197,test,test,197,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1878,1,['test'],['test']
Testability,"Adrià Cereto-Massagué reported on the OpenBabel-scripting mailing list that gzipped files could not be opened with the Python bindings on Windows, although they could under linux. The following gives an error message of some kind:; >>> mols = pybel.readfile(\'sdf\',\'test_file.sdf.gz\'); >>> mols.next().title. This problem seems to be specific to the Python bindings: all the gzipped files I have tried have been read properly with obabel/GUI in Windows. (It is writing compressed files on Windows that does not work properly.). However the file http://dalkescientific.com/writings/benzodiazepine.sdf.gz surprisingly works for me in the above Python test. The attached files ( compressed with 7z) with Windows or UNIX line-endings both fail. OB 2.3.0 Pybel 1.6. Reported by: @chrismorl",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1104:652,test,test,652,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1104,1,['test'],['test']
Testability,"After I run `make clean`, the following files which were generated during the build remain:. ```; scripts/python/examples/testpybel.pyc ; scripts/python/openbabel.pyc ; scripts/python/pybel.pyc ; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/354:122,test,testpybel,122,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/354,1,['test'],['testpybel']
Testability,"After a reboot, the Windows tests did fail - this does happen occassionally where Windows refuses to believe the dlls have changed. Anyway, dumb mistake - now fixed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1715#issuecomment-351713732:28,test,tests,28,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1715#issuecomment-351713732,1,['test'],['tests']
Testability,"After creating a ""build"" directory, and running ""cmake ../"" and ""make -j2"", I ran ""make test"" and got fails on:. 2:builder_Test; 21:inchiSamples_Test; 27:charge-mmff94_Test; 31:ffgaff_Test; 32:ffghemical_Test; 34:ffuff_Test; 42:logp_psa_Test; 52:pytest_babel; 53:pytest_sym; 54:pytest_fastsearch; 55:pytest_unique; 56:pytest_kekule. The reason for this is that ""make test"" does not set up the environment variables to point to the data and lib folders, so fragments.txt is not found in the builder_Test, and the others fail for similar reasons. Setting the environment variables manually shouldn't be necessary, as cmake was told where to find the source files... Setting the environment variables and re-running reported all tests passed. Paul Murphy <paul.murphy@glpg.com>. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1044:88,test,test,88,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1044,3,['test'],"['test', 'tests']"
Testability,"After this fix, valgrind reports no leaks ([valgrind-out.txt](https://github.com/openbabel/openbabel/files/4631753/valgrind-out.txt)) when running mol test (besides the dlopen ([supr.txt](https://github.com/openbabel/openbabel/files/4631752/supr.txt))):; ```; valgrind --leak-check=full --show-leak-kinds=all --track-origins=yes --log-file=valgrind-out.txt --suppressions=../supr.txt ./bin/test_runner mol 1; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2220:151,test,test,151,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2220,2,"['log', 'test']","['log-file', 'test']"
Testability,"Ah interesting, thanks Fredrik. . Looking at the link you've found, that looks like a code/format no longer supported since 2005. The xbs code I mentioned is still available as part of the Ubuntu repository and is functioning (I downloaded and tested this morning). Maybe it would be more useful to switch the ""bs"" format in obabel to support the xbs format described above? At the moment the obabel user guide doesn't give information about the format it is applying or its usage:; https://openbabel.org/docs/dev/FileFormats/Ball_and_Stick_format.html; The xbs code is also still available on github and has been ported to JS:; https://github.com/Montmorency/XBS; https://observablehq.com/@montmorency/xbs-an-observable-ball-and-stick-viewer; What do you think?; Best wishes.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2576#issuecomment-1481233956:244,test,tested,244,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2576#issuecomment-1481233956,2,['test'],['tested']
Testability,"Ah yes - of course there are issues with the tests - that's what I get when I do a late-night pull request. Regarding the flavors, for sure. It's just a different set of switch statements, or same switch statements with different electron contributions. What the API should be needs a small bit of thought, for example what's expected if you apply a different model and then write out a SMILES? Does the library need to remember which model has been applied? Could I write up a proposal separate to this pull request?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1638#issuecomment-329385804:45,test,tests,45,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1638#issuecomment-329385804,1,['test'],['tests']
Testability,"Ah, I see. You may need to add a special option that writes everything to one file for testing purposes.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/311#issuecomment-225592356:87,test,testing,87,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/311#issuecomment-225592356,1,['test'],['testing']
Testability,"Ah...your log is referring to Python3 but you say you are using Python2. On Sat, 2 Jun 2018, 08:17 Brandonnogithub, <notifications@github.com> wrote:. > I complied openbabel bymeself. And I can import it in python2, it works; > fine.; > But when I install another package (ENeN, you can find it in github),; > which requires openbabel, it can't be find.; > Here is the message when I install it:; > ###############################################################; > Requirement already satisfied: dill in; > ./.local/lib/python3.6/site-packages (from eden==0.2) (0.2.7.1); > Requirement already satisfied: esmre in; > /usr/local/lib/python2.7/dist-packages (from eden==0.2) (0.3.1); > Collecting openbabel (from eden==0.2); > Downloading; > https://mirrors.aliyun.com/pypi/packages/9c/30/eb9c3d3d3b86981f6c6a7b8eceb6f4a13b9a12673efbc842b7cebe0ce39a/openbabel-2.4.1.tar.gz; > (74kB); > ###############################################################; >; > so it downloads openbabel and try to install it, errors:; > ###############################################################; > Running setup.py bdist_wheel for openbabel ... error; > Complete output from command /usr/bin/python3 -u -c ""import setuptools,; > tokenize;*file*='/tmp/pip-install-vokwsrny/openbabel/setup.py';f=getattr(tokenize,; > 'open', open)(*file*);code=f.read().replace('\r\n',; > '\n');f.close();exec(compile(code, *file*, 'exec'))"" bdist_wheel -d; > /tmp/pip-wheel-4bdr_2wn --python-tag cp36:; > running bdist_wheel; > running build; > running build_ext; > Open Babel location automatically determined by pkg-config:; >; > - include_dirs: ['/usr/include/python3.6m',; > '/usr/local/include/openbabel-2.0']; > - library_dirs: ['/usr/local/lib']; > building '_openbabel' extension; > swigging openbabel-python.i to openbabel-python_wrap.cpp; > swig -python -c++ -small -O -templatereduce -naturalvar; > -I/usr/include/python3.6m -I/usr/local/include/openbabel-2.0 -o; > openbabel-python_wrap.cpp openbabel-python.i; > unable to ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1844#issuecomment-394077891:10,log,log,10,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1844#issuecomment-394077891,1,['log'],['log']
Testability,Aha - now it's failing in the tests. So I need to make @fredrikw's change after all. :-),MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2176#issuecomment-612847226:30,test,tests,30,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2176#issuecomment-612847226,1,['test'],['tests']
Testability,"Aha! ; 1. The InChI format Is adding each bond twice, once from A->B and once from B->A.; 2. This wouldn't have been a problem except that the logic in AddBond was not adding up. It was adding virtual bonds in this case instead of just returning false immediately. I've avoided adding the bond twice in 1, and solved the logic in 2.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/134#issuecomment-97961306:143,log,logic,143,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/134#issuecomment-97961306,2,['log'],['logic']
Testability,"All done, related tests run and pass:; ```; Start 30: test_cifspacegroup_1; 29/168 Test #30: test_cifspacegroup_1 ............. Passed 0.70 sec; Start 31: test_cifspacegroup_2; 30/168 Test #31: test_cifspacegroup_2 ............. Passed 0.61 sec; Start 32: test_cifspacegroup_3; 31/168 Test #32: test_cifspacegroup_3 ............. Passed 0.10 sec; Start 33: test_cifspacegroup_4; 32/168 Test #33: test_cifspacegroup_4 ............. Passed 0.62 sec; Start 34: test_cifspacegroup_5; 33/168 Test #34: test_cifspacegroup_5 ............. Passed 0.61 sec; Start 35: test_cifspacegroup_6; 34/168 Test #35: test_cifspacegroup_6 ............. Passed 0.61 sec; Start 36: test_cifspacegroup_7; 35/168 Test #36: test_cifspacegroup_7 ............. Passed 0.61 sec; Start 37: test_cifspacegroup_8; 36/168 Test #37: test_cifspacegroup_8 ............. Passed 0.66 sec; Start 38: test_cifspacegroup_9; 37/168 Test #38: test_cifspacegroup_9 ............. Passed 0.61 sec; Start 39: test_cifspacegroup_10; 38/168 Test #39: test_cifspacegroup_10 ............ Passed 0.61 sec; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1558#issuecomment-302876157:18,test,tests,18,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1558#issuecomment-302876157,11,"['Test', 'test']","['Test', 'tests']"
Testability,"All the other cerr statements should be taken into account.; Some should be changed by using error log, other should just; be removed",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1825:99,log,log,99,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1825,1,['log'],['log']
Testability,"All three geometries appear to differ slightly by comparison by a; Kabsch test, e.g. calculate_rmsd.py by Jimmy Charnley Kromann et; al.[1] Possible causes for only differences spot may be. + picking the wrong entry from the .nwo file (with multiple entries «geometry»); + indeed an unsuccessful optimization of the geometry submitted; + rounding errors within the implementation of the Kabsch test, or; + that the difference in geometry (especially as there are not this; many reference atoms in methane) by an optimization successfully; run is just little. However, C appears to move a little if; comparing in a diffview. On the other hand, the submission of NWChem's early test case of; nitrogen[2] which departs from; ```; title ""Nitrogen cc-pvdz SCF geometry optimization"" ; geometry ; n 0 0 0 ; n 0 0 1.08 ; end ; basis ; n library cc-pvdz ; end ; task scf optimize. ```; may be processed as mentioned earlier, i.e. after saving the above in; file `n2.nw` with; ```; nwchem n2.nw > n2.nwo; obabel -inwo n2.nwo -oxyz -O n2_out.xyz; ```; While this computation did not alter the interatomic distance (if; compared to the input), there is the move of the barycentre of the; molecule to (0,0,0) in the .xyz eventually written by OpenBabel:; ```; 2; n2.nwo; N 0.00000 0.00000 -0.54000; N 0.00000 0.00000 0.54000. ```; This observation contrasts with the hypothesis of an eventual report; of the input structure. (This is independent from the avenue to copy; and yank the tables from the .nwo into an .xyz file.). [1] https://github.com/charnley/rmsd; [2]; https://nwchemgit.github.io/Getting-Started.html#simple-input-file-scf-geometry-optimization",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2290#issuecomment-898298599:74,test,test,74,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2290#issuecomment-898298599,6,['test'],['test']
Testability,"Already an input like; ```bash; obabel -:""c1ccncc1"" -O py*.smi; ```; will not create `py*.smi`, but `py1.smi`. In other cases, the file names will require an escape to access them (e.g., `py?.smi` as `py\?.smi` for e.g., `obabel py\?.smi -O test.png`). You might be able to adjust the terminal emulator to do this for you *on the fly*, however chances are your colleagues' computers are not set up for this by default. However, this may become an obstacle down the road (e.g., retrieve by regexes). If you want to ease exchange, stick to to the 2x26 English characters of [a-zA-Z], decimals [0-9] plus dash, plus, and underscore.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2445#issuecomment-1020199090:241,test,test,241,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2445#issuecomment-1020199090,1,['test'],['test']
Testability,"Alright, I'll fix the pdb format and add a test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1628#issuecomment-326549058:43,test,test,43,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1628#issuecomment-326549058,1,['test'],['test']
Testability,Also it can be useful to add the testpypi server to your `.pypirc` file to test everything is OK before uploading:. ```; [distutils]; index-servers =; pypi; testpypi. [pypi]; repository: https://pypi.python.org/pypi; username: <un>; password: <pw>. [testpypi]; repository: https://testpypi.python.org/pypi; username: <un>; password: <pw>; ```. So then it's easy to do a quick. ```; python setup.py register -r testpypi; python setup.py sdist upload -r testpypi; ```. then check on http://testpypi.python.org before doing the proper upload with. ```; python setup.py sdist upload -r pypi; ```,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/65#issuecomment-33500704:33,test,testpypi,33,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/65#issuecomment-33500704,8,['test'],"['test', 'testpypi']"
Testability,"Also, I noticed that depictor tests do not pass on debian/testing (seems due to bad check of the ouput of compare).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/220#issuecomment-131952604:30,test,tests,30,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/220#issuecomment-131952604,2,['test'],"['testing', 'tests']"
Testability,"Also, now for the last few days the mmff94 charges tests:; http://my.cdash.org/testDetails.php?test=3050513&build=101540. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1013#issuecomment-281797138:51,test,tests,51,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1013#issuecomment-281797138,3,['test'],"['test', 'testDetails', 'tests']"
Testability,"Alternatively the following describes how to run a specific test directly.; Especially useful if you are using a debugger:; https://open-babel.readthedocs.io/en/latest/Contributing/Testing.html#running-tests. On Fri, 10 Apr 2020, 15:16 Geoff Hutchison, <notifications@github.com>; wrote:. > @afonari <https://github.com/afonari> you can run ctest -V -R pdbread the; > -R will match tests with specified regex.; >; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/pull/2170#issuecomment-612047646>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAALCGIQEQOMWC7F75VDCPTRL4S3LANCNFSM4MFNRV6A>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2170#issuecomment-612194516:60,test,test,60,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2170#issuecomment-612194516,4,"['Test', 'test']","['Testing', 'test', 'tests']"
Testability,"An option sounds good, but which should be the default? If this is; unexpected, then presumably adding the number should be the default. On 26 April 2018 at 09:30, Maciej Wójcikowski <notifications@github.com>; wrote:. > Dup of #1283 <https://github.com/openbabel/openbabel/issues/1283>.; >; > Currently there is no option not to append the number of residue during; > molecule. Maybe the quickest solution would be to add such option?; >; > As a workaround in Python would be to remove the residue number from the; > end of residue name before writing to mol2.; >; > import reimport pybel; >; > mol = next(pybel.readfile('mol2', 'test.mol2')); > for res in mol.residues:; > new_resname = re.sub('[0-9]+$', '', res.name); > res.OBResidue.SetName(new_resname); > print(res.name); > print(mol.write('mol2')); >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/1819#issuecomment-384557893>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGbOW513nlSi1O61UqgnRRQpvaIlyks5tsYWegaJpZM4TVYDn>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1819#issuecomment-384560609:631,test,test,631,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1819#issuecomment-384560609,1,['test'],['test']
Testability,"And if you comfortable with compiling from master yourself, it is available to test right away.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2547#issuecomment-1345981841:79,test,test,79,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2547#issuecomment-1345981841,1,['test'],['test']
Testability,And one more test case:; CC(CCC[C@H]([C@H]1CC[C@@H]2[C@]1(C)CC[C@H]1[C@H]2CC2([C@@H]3[C@]1(C)CC[C@@H](C3)Br)S(=O)(=O)CCS2(=O)=O)C)C. Original comment by: sdvb,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1124#issuecomment-281800833:13,test,test,13,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1124#issuecomment-281800833,1,['test'],['test']
Testability,"And regarding the issue on DNA/Peptide. The code is trying to guess on sequence type based on the content, but it is rather naïve in its efforts. It works better on longer sequences though. You could add a hint in the comment line though that would help. ```; > test; AR; ```; would give a DNA molecule while; ```; > test Peptide; AR; ```; would give a peptide.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2367#issuecomment-844225144:262,test,test,262,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2367#issuecomment-844225144,2,['test'],['test']
Testability,"Another example: ; obabel -:""C1C=C2COC[C@]32[C@H](C1)[C@]1(CCC3)CCOC1"" -o sdf -O test.sdf --gen3d. Original comment by: *anonymous",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1124#issuecomment-281800828:81,test,test,81,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1124#issuecomment-281800828,1,['test'],['test']
Testability,"Another piece of the puzzle: As zou may already have noticed, the original files I reported the problem for are 'special', i.e. the compounds contained therein are actually different structures for the same sum formula. Now, just out of curiosity, I re-ran the test with two completely unrelated compounds (vanilin and morphine). And what can I say? The programs perform as they should, i.e. the results do not differ if the calculations are performed on the individual MOL files or an SD file containing both compounds. Maybe this hints you in the correct direction. Original comment by: timoreiss",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/923#issuecomment-281795643:261,test,test,261,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/923#issuecomment-281795643,1,['test'],['test']
Testability,Any suggestions on how to debug the appveyor build failure? The test passes for me..,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/201#issuecomment-122091067:64,test,test,64,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/201#issuecomment-122091067,1,['test'],['test']
Testability,"Apologies! learning how SWIG works so i've refactored this commit, i've also updated the test to be stricter on the SMILES; ordering. . valgrind test - no leaks. # Wiswesser Reader Release Notes. The following are sections from Elbert G. Smiths rule book that were used to create; the wln reader. Note that not all chapters are listed here, only the ones where compound; types were introduced. ## Rules fully supported; * Unbranched and Branched Chains; * Systematic Contractions; * Organic Salts; * Benzene Derivatives; * Multisubstituted Benzene Rings; * Benzene Rings in Branching Chains; * Monocyclic Rings; * Bicyclic Rings; * Polycyclic Rings; * Perifused Rings; * Chains of Rings other than Benzene; * Sprio Rings; * Bicyclic Bridged Rings; * Rings with Pseudo Bridges; * Ring Structures with Crossed Bonds and Unbranched Bridges; * Rings of Rings Contraction; * Metallocenes and Catanenes ; * Chelete Compounds; * Ionic Charges, Free Radicals and Isotopes. ## Rules unsupported. * Multipliers; * Ring Contractions and Multipliers; * All Special Problems Rules",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2591:89,test,test,89,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2591,2,['test'],['test']
Testability,Appveyor tests are failing because an environment issue,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2222:9,test,tests,9,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2222,1,['test'],['tests']
Testability,"Are either of you interested in having a go at this?. On 7 November 2017 at 08:18, Andrius Merkys <notifications@github.com>; wrote:. > I confirm the bug:; >; > andrius@tasmanijos-velnias ~ $ obabel ~/src/openbabel-2.4.1/test/files/filterset.sdf -osmi --filter ""title<'129'""; > 0 molecules converted; > andrius@tasmanijos-velnias ~ $ obabel --version; > No input file or format spec or possibly a misplaced option.; > Most options must come after the input files. (-i -o -O -m can be anywhwere.); >; > Open Babel 2.4.1 -- Oct 24 2017 -- 16:08:06; > Usage:; > obabel [-i<input-type>] <infilename> [-o<output-type>] -O<outfilename> [Options]; > Try -H option for more information.; >; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/1684#issuecomment-342407778>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGeLa_HpzA8kfeaymFNmyhwHYn7gxks5s0BJigaJpZM4QTg3N>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1684#issuecomment-344595757:221,test,test,221,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1684#issuecomment-344595757,1,['test'],['test']
Testability,"Are you saying that you can build the entirety of Open Babel, and for example, run the test (via ""make tests"") after the LoadLibrary change? I also had to do the second step.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1594#issuecomment-312257261:87,test,test,87,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1594#issuecomment-312257261,2,['test'],"['test', 'tests']"
Testability,"As a feature of Avogadro we have added the plugin allowing for Ghemical style forcefield optimizations. The problem is that if you take one molecule and run multiple optimizations there is some sort of memory leak (at least as far as i can tell from debugging). The problem is a result of bad Angle generic data in the molecule. (Possibly getting copied wrong during the OBMol::operator= function?) The reason i suspect it's a memory leak is that during the second run i get random data from the Angle generic data. When you do a FOR_ANGLES_OF_MOL(x,y), (*x) is getting random integers on the second run. (I put in some debugging code but it's super ugly so i'm not going to attach it.). The segfault itself occurs in OBForceFieldGhemical::SetupCalculations line 546. I have been able to fix the problem by regenerating this data in the OBMol::FindAngles function at line 372 in mol.cpp. it's not an acceptable fix but it should help to point this out:. void OBMol::FindAngles(); {; //if already has data return; if(HasData(OBGenericDataType::AngleData)); DeleteData(OBGenericDataType::AngleData);; //return;. //get new data and attach it to molecule; OBAngleData *angles = new OBAngleData;; SetData(angles);; ; ...; } . Note that the ""DeleteData ..."" line is originally a //return;. I am attaching the forcefieldghemical.cpp unit test that can replicate this segfault. Reported by: @milkypostman",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/612:1331,test,test,1331,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/612,1,['test'],['test']
Testability,"As a general note: With version 2.3.2, you are using a very old version of OpenBabel. Consider to transition the current branch 3.1.1 (e.g., [online](https://open-babel.readthedocs.io/en/latest/index.html), or [the latest version as pdf](https://readthedocs.org/projects/open-babel/downloads/pdf/latest/) (currently March 26, 2021)). Either. * compile OpenBabel from the public sources ([here](https://github.com/openbabel/openbabel/tags)); * consider an version upgrade (not only an update) of your operating system which offers a more recent OpenBabel package, or; * an installation of an other Linux side-by-side with newer OpenBabel in its repositories (e.g., [Debian](https://tracker.debian.org/pkg/openbabel), or [Ubuntu](https://packages.ubuntu.com/search?keywords=openbabel&searchon=names&suite=all&section=all)). From a practical perspective, the; ```; babel test.pdbqt -O test.mol2 -h -m --partialcharge gasteiger --gen3D; ```; should be revised, and not only for the more modern keyword `obabel` to initiate the instructions relayed to OpenBabel. `-m` *normally* is used to indicate that there *multiple* molecules (like models) within the input file which should be split into multiple individual output files (see the examples [here](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html#examples)). Running a docking experiment *in silico* alters the conformation of the molecule submitted as ligand. This kind of optimization (and valuable information) however will be overwritten by the later `--gen3d` which triggers an optimization by a force field as if the molecule were isolated *in absence* of the molecules it is supposed to bind to earlier.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2404#issuecomment-913618181:868,test,test,868,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404#issuecomment-913618181,2,['test'],['test']
Testability,"As an aside, I see hybridization as a type of atom typing, so it'd be great to move away from hybridization altogether and just test the structure for whatever feature we are actually looking for. It's not the case so much in the builder, but I think we end up with code where people favor checking the hybridization (which triggers SMARTS patterns running over the entire molecule) rather than what they really want, like does it have a double bond.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1801#issuecomment-375207276:128,test,test,128,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1801#issuecomment-375207276,1,['test'],['test']
Testability,"As background, have you seen my blog post?; http://baoilleach.blogspot.co.uk/2013/11/anatomy-of-bug-fix.html. So I have tested that the code makes things better. I think you are asking; about unit tests though. I don't see how this code is testable without exposing some of the; depiction internals, or reimplementing them in the tests. Specifically; measuring the ""clash overlap"", which was an existing function in the; depiction code but is not exposed in the API. I'll look into it - it might; be as simple as setting a data field on the molecule. On 21 November 2013 22:23, Geoff Hutchison notifications@github.com wrote:. > Can we get some layout tests? I'm not sure quite how we'd test this, but; > it seems like a good idea.; > ; > —; > Reply to this email directly or view it on GitHubhttps://github.com/openbabel/openbabel/pull/40#issuecomment-29030719; > .",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/40#issuecomment-29059865:120,test,tested,120,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/40#issuecomment-29059865,12,['test'],"['test', 'testable', 'tested', 'tests']"
Testability,"As described at https://github.com/openbabel/enhancement-proposals/blob/master/reactions-as-obmols/reaction-handling.md. I still have some reaction formats left but I'd like to get in a PR now, and get some feedback, as all the tests pass, and the rest will be a bit of a slog. SMILES, RINCHI and RXN all support reactions via OBMols now. I've added an OBReactionFacade class to simplify things. In short, reactions are supported via three attributes, a flag on an OBMol, and two OBPairInteger data objects on an OBAtom, ""rxncomp"" and ""rxnrole"".",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1836:228,test,tests,228,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1836,1,['test'],['tests']
Testability,"As found in https://github.com/openbabel/openbabel/issues/2641#issuecomment-1816436930, the current SSSR has a problem when removing redundant rings. The overlap is currently based on atoms instead of bonds, leading to incorrect results.; This code includes a fix for that problem, but I do not know how efficient the solution is. In addition, I have a few questions/problems regarding the testing. I added a test case to `ringtest.cpp` where I thought it belonged. However, since several other tests uses the file `test/files/attype.00.smi` this leads to a bunch of failing tests. Would it be best to rework ""my test"" to a regression test or regenerate the result files for the other failing tests (such as formalcharge and formula etc)?; In addition, this change seems to have affected canonicalization, at least I get a ton of errors in test_canonstable. If that code relies on SSSR it would be reasonable to expect this and in that case maybe a ""backwards-compability-switch"" so that the canonicalization could continue to call the old code that although not correct for SSSR-purposes should be good enough to produce stable canonicalization.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2648:390,test,testing,390,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2648,8,['test'],"['test', 'testing', 'tests']"
Testability,"As was pointed out in issue number 153 on; https://github.com/openchemistry/avogadrolibs, there; are a few issues in the space groups. There were a few; illegal '#' symbols and potential problems with Hall numbers; 506 (international number 210) and 450 (international number; 160). Unfortunately, I couldn't fix 450, but I was able to; fix 506. A test was performed: after using the transforms; in Avogadro, spglib identified the space group correctly.; For some reason, this was not the case for number 450...",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/367:348,test,test,348,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/367,1,['test'],['test']
Testability,Assertion failure in rapidjson when using output of Avogadro2,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2619:0,Assert,Assertion,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2619,1,['Assert'],['Assertion']
Testability,"At least for pdbqtformat.cpp, part of the problem seems to be a difference between clang and gcc in how clang handles a decrement of an iterator. In clang (at least on Yosemite) a decrement of an iterator already at .begin() can produce a segfault on subsequent use, so you have to add lots of extra tests. What I have tried so far in pdbqtformat.cpp that seems to work (at least for 4dui.pdb) at line 499 ff in pdbqtformat.cpp is. ```; multimap <unsigned int, unsigned int>::iterator it=how_many_atoms_move.begin();; if ((!moves_many) && !how_many_atoms_move.empty()) {it=how_many_atoms_move.end();; if (it!=how_many_atoms_move.begin())--it;}; for (unsigned int i = 1; i <= depth; i++); {; free_bonds.insert((*it).second);; if (!moves_many) {if (it!=how_many_atoms_move.begin())--it;}; else{if (it!=how_many_atoms_move.end())++it;}; }; ```. This would suggest are review of all cases of --it or it-- in all iterator uses to make sure they are protected for use with clang. ALternatively one could report it as a clang bug, but I am not sure how productive that would be.; -- H. J. Bernstein",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/203#issuecomment-186284645:300,test,tests,300,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/203#issuecomment-186284645,1,['test'],['tests']
Testability,"Atom aromaticity in SMILES is determined by the case of the characters, not; by the nature of the attached bonds. Here is the SMILES for benzene:; c1ccccc1; The bond between two atoms marked as aromatic is implicitly an aromatic; bond. So, equivalently:; c:1:c:c:c:c:c:1. If this is benzene, then your question boils down to the following.; ""What is the meaning of C:1:C:C:C:C:C:1?"". In short, the meaning is undefined. No toolkit should be writing values; like this if they care about other tools interpreting this 'correctly'. I actually included this example in the SMILES benchmark (; https://github.com/nextmovesoftware/smilesreading/tree/master/3-results); though I see that I didn't check in the results. I think I was wary of; distracting people from problems with defined behaviour. Regards,; Noel. On Tue, 18 May 2021 at 02:48, craldaz ***@***.***> wrote:. > I've also posted the answer on Matter Modeling Stack exchange with a; > bounty if you want to gain some points there.; >; > https://mattermodeling.stackexchange.com/q/4981/52; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2368#issuecomment-842761119>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAALCGM6JDB5SYYVUAUCVQLTOHBPNANCNFSM44ZVU7BA>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2368#issuecomment-843053926:576,benchmark,benchmark,576,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2368#issuecomment-843053926,1,['benchmark'],['benchmark']
Testability,"Attached script generates obmol objects from strings containing an xyz file. If I switch the order of the coordinates, the atom type assignment changes, that is, the hydrogen bound to nitrogen should be hn, but it becomes hc instead. Environment: conda installed OB 3.1.0 on MacOS Arm architecture. [testOBatype.zip](https://github.com/user-attachments/files/17311795/testOBatype.zip). ```; % ./testOBatype.py; Atom: C3, Index: 1, Coordinates: (27.443, 25.356, 25.795), Type: c3; Atom: C3, Index: 2, Coordinates: (27.248, 25.853, 29.562), Type: c3; Atom: C2, Index: 3, Coordinates: (27.868, 25.379, 27.247), Type: c; Atom: O2, Index: 4, Coordinates: (29.062, 25.299, 27.534), Type: o; Atom: Nam, Index: 5, Coordinates: (26.911, 25.575, 28.155), Type: n; Atom: H, Index: 6, Coordinates: (26.362, 25.502, 25.733), Type: hc; Atom: H, Index: 7, Coordinates: (25.945, 25.633, 27.858), Type: hn; Atom: H, Index: 8, Coordinates: (28.243, 26.3, 29.591), Type: h1; Atom: H, Index: 9, Coordinates: (27.967, 26.176, 25.283), Type: hc; Atom: H, Index: 10, Coordinates: (27.688, 24.382, 25.346), Type: hc; Atom: H, Index: 11, Coordinates: (26.57, 26.612, 29.98), Type: h1; Atom: H, Index: 12, Coordinates: (27.32, 24.96, 30.2), Type: h1; Bond: hc 9 - c3 1, Order: 1; Bond: hc 10 - c3 1, Order: 1; Bond: hc 6 - c3 1, Order: 1; Bond: c3 1 - c 3, Order: 1; Bond: c 3 - o 4, Order: 2; Bond: c 3 - n 5, Order: 1; Bond: hn 7 - n 5, Order: 1. *****; Bond: n 5 - c3 2, Order: 1; Bond: c3 2 - h1 8, Order: 1; Bond: c3 2 - h1 11, Order: 1; Bond: c3 2 - h1 12, Order: 1; Atom: C3, Index: 1, Coordinates: (27.443, 25.356, 25.795), Type: c3; Atom: C3, Index: 2, Coordinates: (27.248, 25.853, 29.562), Type: c3; Atom: C2, Index: 3, Coordinates: (27.868, 25.379, 27.247), Type: c; Atom: O2, Index: 4, Coordinates: (29.062, 25.299, 27.534), Type: o; Atom: Nam, Index: 5, Coordinates: (26.911, 25.575, 28.155), Type: n; Atom: H, Index: 6, Coordinates: (25.945, 25.633, 27.858), Type: hc; Atom: H, Index: 7, Coordinates: (26.362, 25",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2727:300,test,testOBatype,300,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2727,3,['test'],['testOBatype']
Testability,Attaching test file from original bug report from @mkmatlock; [2185720_1.sdf.txt](https://github.com/openbabel/openbabel/files/1042550/2185720_1.sdf.txt),MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1358#issuecomment-305278525:10,test,test,10,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1358#issuecomment-305278525,1,['test'],['test']
Testability,"Attempting to replicate your observation with `obabel` from the CLI, I notice `obabel -:'C' --gen3d -oxyz` reports -- like in your example -- about five atoms. The omission of the `--gen3d` parameter yields a report about one atom (C) only. Equally, I observe an output equivalent to the sum formula `CH4Ru` for SMILES string `C.[Ru]` only if either `--gen3d`, or `-h` for the explicit notation of hydrogens is deployed. From the .pdf documentation (about version 3.0, by Jul 14, 2020), I did not identify yet an example about an equivalent to the explicit `-h` parameter in pybel. Does it exist?. (Observations within OpenBabel 3.1.0 as offered by Debian 11 / bullseye, branch testing.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2363#issuecomment-827465119:678,test,testing,678,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2363#issuecomment-827465119,1,['test'],['testing']
Testability,Audit Log. Original comment by: @Pansanel,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779316:6,Log,Log,6,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779316,1,['Log'],['Log']
Testability,Avoid logging messages that are taking time,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1714:6,log,logging,6,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1714,1,['log'],['logging']
Testability,Babel Audit Log in AssignImplicitValence; Ran OpenBabel::AssignImplicitValence ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in FindSSSR ; Ran OpenBabel::FindSSSR ; ============================== ; *** Open Babel Audit Log in IsClosure ; Ran OpenBabel::PerceiveClosureBonds ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran ,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:2784,Log,Log,2784,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Log'],['Log']
Testability,"Babel Warning in ReadMolecule; Invalid value for mass difference. It should be between -3 and 4.; 0.0000 0.0000 0.0000 C -4 0 0 0 0 0 0 0 0 0 0 0; .==============================; *** Open Babel Warning in WriteMolecule; No 2D or 3D coordinates exist. Stereochemical information will be stored using an Open Babel extension. To generate 2D or 3D coordinates instead use --gen2D or --gen3D.; ..==============================; *** Open Babel Warning in GetSmilesElement; Isotope value larger than 9999. Ignoring value.; ..==============================; *** Open Babel Warning in ParseComplex; Square planar stereochemistry must be one of SP1, SP2 or SP3; ==============================; *** Open Babel Warning in ParseComplex; Square planar stereochemistry must be one of SP1, SP2 or SP3; ==============================; *** Open Babel Warning in InsertSquarePlanarRef; Warning: Square planar stereo specified for atom with more than 4 connections.; ==============================; *** Open Babel Warning in InsertSquarePlanarRef; Warning: Square planar stereo specified for atom with more than 4 connections.; ..terminate called after throwing an instance of 'std::out_of_range'; what(): vector::_M_range_check: __n (which is 16) >= this->size() (which is 8). CMake Error at pybindtest_bindings.cmake:20 (MESSAGE):; Child aborted. Start 187: pybindtest__pybel; 187/190 Test #187: pybindtest__pybel ................ Passed 0.99 sec; Start 188: pybindtest_example; 188/190 Test #188: pybindtest_example ............... Passed 0.14 sec; Start 189: pybindtest_cdjsonformat; 189/190 Test #189: pybindtest_cdjsonformat .......... Passed 0.14 sec; Start 190: pybindtest_pcjsonformat; 190/190 Test #190: pybindtest_pcjsonformat .......... Passed 0.15 sec. 99% tests passed, 1 tests failed out of 190; ```. ## Steps to Reproduce; I first had to copy the file `lib/_openbabel.so` from the build directory to the source directory at `scripts/python/openbabel/` to make the python tests run.; ```; make test; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2138:7286,Test,Test,7286,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2138,8,"['Test', 'test']","['Test', 'test', 'tests']"
Testability,"Babel-3.1.1"" -L ""C:\Program Files\OpenBabel-3.1.1"". Essentially the same error:; ```C:\ProgramData\Anaconda3\envs\testenv\lib\site-packages\setuptools\dist.py:479: UserWarning: The version specified ('${BABEL_VERSION}') is an invalid version, this may not work as expected with newer versions of setuptools, pip, and PyPI. Please see PEP 440 for more details.; ""details."" % version; running build_ext; Warning: invalid version number '${BABEL_VERSION}'.; Guessing Open Babel location:; - include_dirs: ['C:\\Program Files\\OpenBabel-3.1.1', 'C:\\ProgramData\\Anaconda3\\envs\\testenv\\include', 'C:\\ProgramData\\Anaconda3\\envs\\testenv\\include', '/usr/local/include/openbabel3']; - library_dirs: ['C:\\Program Files\\OpenBabel-3.1.1', 'C:\\ProgramData\\Anaconda3\\envs\\testenv\\libs', 'C:\\ProgramData\\Anaconda3\\envs\\testenv\\PCbuild\\amd64', '/usr/local/lib']; building 'openbabel._openbabel' extension; swigging openbabel\openbabel-python.i to openbabel\openbabel-python_wrap.cpp; swig.exe -python -c++ -small -O -templatereduce -naturalvar ""-IC:\Program Files\OpenBabel-3.1.1"" -IC:\ProgramData\Anaconda3\envs\testenv\include -IC:\ProgramData\Anaconda3\envs\testenv\include -I/usr/local/include/openbabel3 -o openbabel\openbabel-python_wrap.cpp openbabel\openbabel-python.i. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; ```. ### Edit:; I had also tried `conda install -c openbabel openbabel` upon some recommendation I found elsewhere, which installed an old version and did not fix the problems I was having with the whl I obtained from https://www.lfd.uci.edu/~gohlke/pythonlibs/#openbabel (severely incomplete list of input and output formats). For anyone who stumbles upon this in the future, the problem was fixed with `conda install -c conda-forge openbabel` *smacks forehead*",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2018#issuecomment-826168002:1439,test,testenv,1439,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018#issuecomment-826168002,2,['test'],['testenv']
Testability,"Based on the question, it is not clear if you want a machine-readable trace (a log file), or want to assist a visual inspection by a human checker. In case your project's interest is more on the later, are you aware of RDKit's cookbook with the entry ""Highlight a Substructure in a Molecule"" when using a Jupyter notebook?. http://rdkit.org/docs/Cookbook.html#highlight-a-substructure-in-a-molecule",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2534#issuecomment-1247709533:79,log,log,79,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2534#issuecomment-1247709533,2,['log'],['log']
Testability,"Because SDF is sensitive to spaces, which get modified in HTML, it is better to attach a file. I cannot read your example but the attached Test.sdf :; Test; OpenBabel11241011002D. 2 1 0 0 0 0 0 0 0 0999 V2000; 0.0000 0.0000 0.0000 * 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0 0 0 0; A 1; OR; M END; $$$$. is read ok by OpenBabel and is output as TestOut.sdf :; Test; OpenBabel11241011102D. 3 2 0 0 0 0 0 0 0 0999 V2000; 0.0000 0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 O 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 * 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0 0 0 0; 2 3 1 0 0 0 0; M END; $$$$. which is reasonable. The Alias OR means the structure cannot be completely determined. Perhaps you could make another comment here (not in a new bug) and attach the problem file. Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1064#issuecomment-281798015:139,Test,Test,139,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1064#issuecomment-281798015,4,['Test'],"['Test', 'TestOut']"
Testability,Before copying unit test to build/test I get:; Start 1: unittest; ```; Could not find executable /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; Looked in the following places:; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; ,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137:20,test,test,20,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137,13,['test'],['test']
Testability,"Besides the assert, please re-merge with master to resolve the minor conflicts, and I'll be happy to merge this! Thanks.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/17#issuecomment-29997102:12,assert,assert,12,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/17#issuecomment-29997102,1,['assert'],['assert']
Testability,"Brilliant. I'll test it out - I have a set of tautomers somewhere I've pulled out from ChEMBL. Regarding keto-enol, if you do add this in, could you put it within an option just in case it leads to weird results? I have the impression from others that this may be the case.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2171#issuecomment-612885818:16,test,test,16,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2171#issuecomment-612885818,1,['test'],['test']
Testability,Broken test is unrelated- I'll fix that this weekend.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2608#issuecomment-1773399655:7,test,test,7,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2608#issuecomment-1773399655,1,['test'],['test']
Testability,"Bugfix for multi-model PDB writing. Previous versions inserted an; 'END' tag before the 'ENDMDL' tag after each model. This violates; the PDB spec, which says 'END' marks the end of file, and also; trips up some programs/APIs (e.g. rdkit) that follow the spec and; stop reading the resulting PDB files after the first model.; Minimally invasive fix. I can make a test if desired.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/332:363,test,test,363,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/332,1,['test'],['test']
Testability,Buggy log. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778334:6,log,log,6,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778334,1,['log'],['log']
Testability,Bugs from roundtrip testing,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/410:20,test,testing,20,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/410,1,['test'],['testing']
Testability,Build log from Fedora ppc64 build system. Original comment by: dmierzej,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1147#issuecomment-281801225:6,log,log,6,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1147#issuecomment-281801225,1,['log'],['log']
Testability,Buildroot setup log - includes installed packages versions. Original comment by: dmierzej,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1147#issuecomment-281801227:16,log,log,16,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1147#issuecomment-281801227,1,['log'],['log']
Testability,"By guessing, I think it should be; -a ""$win_dlhandler"" = ""yes""); instead of ; test ""$win_dlhandler"" = ""yes""). in configure.in. I'm afraid of checking it in though, as I don't have an autobuild toolchain. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/901#issuecomment-281795369:78,test,test,78,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/901#issuecomment-281795369,1,['test'],['test']
Testability,"By syntax, the SMILES string is fine. What the SMILES string describes, however, represents a hurdle for OpenBabel. If you paste the SMILES string into an other structure2picture converter, e.g., [CDK Depict](https://www.simolecule.com/cdkdepict/depict.html), one of the double bonds of the pyrrolidine is resolved as a double bond without explicitly assigned configuration. For me, it looks related to observations about the isomers of 2-butene filed earlier ([here](https://github.com/openbabel/openbabel/issues/2429)). With the information shared by you, I aimed for a replication with a pristine copy of the `.cif` from COD, which was translated into a `.sdf` with cod-tools, and submitted to OpenBabel to assign a SMILES string. ```bash; codcif2sdf ./4021153.cif > reconstruct.sdf; obabel reconstruct.sdf -osmi ; ```. Not anticipated by mine, the result is not; `C(=O)(/C=C1\CN(CC/1=C\c1ccccc1)S(=O)(=O)c1ccc(cc1)C)OC`; but; `C(=O)(/C=C/1\CN(C\C1=C/c1ccccc1)S(=O)(=O)c1ccc(cc1)C)OC`; In other words, the then other double bond is «wavy». While the intermediate `.sdf` follows the v2000 dialect, it may be read by e.g., by [DataWarrior](https://openmolecules.org/datawarrior/index.html); ```bash; datawarrior ./reconstruct.sdf; ```; which promptly identifies both double bonds as (*Z*) configured (which indeed is .true.). No surprise, CDK Depict converts SMILES string; `Cc(cc1)ccc1S(N(C/C1=C\C(OC)=O)C/C1=C\c1ccccc1)(=O)=O`; into a structure without a wavy bond. Environment Information: OpenBabel (3.1.1+dfsf-6), Python (3.9.8), and cod-tools (3.3.0+dfsg-1) as provided in Linux Debian 12/bookworm [testing]. ![CDK_depict](https://user-images.githubusercontent.com/19709084/141507918-85f9cc55-66f5-4076-a1ee-a4650613862d.png). [cod_cif_EZ_issue.zip](https://github.com/openbabel/openbabel/files/7529359/cod_cif_EZ_issue.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2319#issuecomment-967290797:1606,test,testing,1606,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2319#issuecomment-967290797,1,['test'],['testing']
Testability,"By the way, I think it would be a great idea to add a set of unit tests for space group detection and validation - it seems as if there are far too many unusual cases.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/259#issuecomment-183400656:66,test,tests,66,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/259#issuecomment-183400656,1,['test'],['tests']
Testability,"C1C1 is used by Andrew Dalke in http://ctr.wikia.com/wiki/Chemistry_Toolkit_Rosetta_Wiki as an example of a SMILES error which ought to be caught and reported. OB converts it to CC (not even C=C, which would have been logical). His other example Q is not converted, but there is no error message. . Reported by: @chrismorl",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1016:218,log,logical,218,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1016,1,['log'],['logical']
Testability,"CC2(COC)N(C(=O)CC)C3=CC=CC=C3"";; stringstream ss(SmilesString);; OBConversion conv(&ss);; OBMol mol;; if(!conv.SetInFormat(""smi"") || !conv.Read(&mol)); {; cout << ""Bail out! Can't read SMILES string"" << endl;; system(""pause"");; return -1;; }; mol.AddHydrogens();; if (!pOp->Do(&mol)); {; cout << ""Bail out! 3D generation failed"" << endl;; system(""pause"");; return -1;; }; if (!pFF->Setup(mol)); {; cout << ""Bail out! Forcefield Setup failed"" << endl;; system(""pause"");; return -1;; }; pFF->SteepestDescent(1000);; pFF->GetCoordinates(mol);; int numrots = mol.NumRotors();; cout << ""Number of rot: "" << numrots << endl;; pFF->WeightedRotorSearch(numrots, 100);; pFF->GetCoordinates(mol);; cout << ""Got to the end"" << endl;; system(""pause"");; }. ////////////////////////////////////////////////. The error was in std::vector:; _DEBUG_ERROR(""vector iterator not dereferencable"");. The call stack was:; msvcp80d.dll!00819961(); [Frames below may be incorrect and/or missing, no symbols loaded for; msvcp80d.dll]; > OpenBabelDLLD.dll!std::_Vector_const_iterator<OpenBabel::OBBond; *,std::allocator<OpenBabel::OBBond *> >::operator*() Line 99 + 0x14; bytes C++; OpenBabelDLLD.dll!std::_Vector_iterator<OpenBabel::OBBond; *,std::allocator<OpenBabel::OBBond *> >::operator*() Line 327 C++; OpenBabelDLLD.dll!OpenBabel::OBMol::FindChildren(std::vector<int,std::allocator<int>; > & children=[0](), int first=3, int second=4) Line 560 + 0x23; bytes C++; OpenBabelDLLD.dll!OpenBabel::OBRotorList::AssignTorVals(OpenBabel::OBMol; & mol={...}) Line 424 C++; OpenBabelDLLD.dll!OpenBabel::OBRotorList::Setup(OpenBabel::OBMol &; mol={...}) Line 53 C++; OpenBabelDLLD.dll!OpenBabel::OBForceField::WeightedRotorSearch(unsigned; int conformers=10, unsigned int geomSteps=100) Line 1269 C++; testbug.exe!main(int argc=1, char * * argv=0x00ae6648) Line 79 +; 0x14 bytes C++; testbug.exe!__tmainCRTStartup() Line 586 + 0x19 bytes C; testbug.exe!mainCRTStartup() Line 403 C; kernel32.dll!7c816fd7(). Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/751:2300,test,testbug,2300,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/751,3,['test'],['testbug']
Testability,"CESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > ; > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape; > > sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABE",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:20014,test,test,20014,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,1,['test'],['test']
Testability,"CMAKE_BUILD_TYPE=Debug` (which I believe is required for accurate coverage results - didn't check, though), the tests take a very long time ([gh actions log](https://github.com/ltalirz/openbabel/runs/1554047342?check_suite_focus=true)).; Even locally on my computer (which is ~4x faster than the github actions runner), there is still a test that exceeds the 1500s limit; ```; 210/222 Test #210: test_cmlreadfile_1 ............... Passed 0.81 sec; Start 211: inchiSamples.sdf_Test; 211/222 Test #211: inchiSamples.sdf_Test ............ Passed 2.17 sec; Start 212: inchiSamplesTechMan.sdf_Test; 212/222 Test #212: inchiSamplesTechMan.sdf_Test ..... Passed 0.99 sec; Start 213: inchiSteffen_PubChem.smi_Test; 213/222 Test #213: inchiSteffen_PubChem.smi_Test .... Passed 0.89 sec; Start 214: pytest_babel; 214/222 Test #214: pytest_babel ..................... Passed 94.96 sec; Start 215: pytest_sym; 215/222 Test #215: pytest_sym ....................... Passed 116.05 sec; Start 216: pytest_smartssym; 216/222 Test #216: pytest_smartssym ................. Passed 35.42 sec; Start 217: pytest_fastsearch; 217/222 Test #217: pytest_fastsearch ................ Passed 2.64 sec; Start 218: pytest_distgeom; 218/222 Test #218: pytest_distgeom ..................***Timeout 1500.09 sec; Start 219: pytest_unique; 219/222 Test #219: pytest_unique .................... Passed 8.13 sec; Start 220: pytest_kekule; 220/222 Test #220: pytest_kekule .................... Passed 19.51 sec; Start 221: pytest_pdbformat; 221/222 Test #221: pytest_pdbformat ................. Passed 1.04 sec; Start 222: pytest_RInChI; 222/222 Test #222: pytest_RInChI .................... Passed 34.85 sec; ```. This would make the coverage job very long-running on CI. There are different approaches one could take - ; live with the very long run time;; skip very long-running tests; ; try to see whether the ""worst offenders"" really need to be that long-running; ; run the coverage only, say, once per day;; ... I'd be very happy for ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2312:1486,Test,Test,1486,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2312,1,['Test'],['Test']
Testability,CMakeFiles/test_runner.dir/bond.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/cansmi.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_mmff94.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/charge_gasteiger.o; [ 94%] Building CXX object test/CMakeFiles/test_runner.dir/conversion.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/datatest.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffgaff.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffghemical.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffmmff94.o; [ 95%] Building CXX object test/CMakeFiles/test_runner.dir/ffuff.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formalcharge.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/format.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/formula.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/internalcoord.o; [ 96%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmarts.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/invalidsmiles.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/iterators.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/logp_psa.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/math.o; [ 97%] Building CXX object test/CMakeFiles/test_runner.dir/mol.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/phmodel.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/residue.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/ringtest.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/smartstest.o; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/smartsparse.o; [ 99%] Building CXX object test/CMakeFiles/test_runner.dir/smilesmatch.o; [ 99%] Building CXX object test/CMakeFiles/test_runner.dir/unitcell.o; [ 99%] Building CXX object test/CMakeFiles/test_runner.dir/cmlreadfile.o; [ 99%] Building CXX o,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:54727,test,test,54727,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,"CTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape; > > sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:9548,test,test,9548,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,1,['test'],['test']
Testability,"Calling OBMol::GetFormula() causes programs to crash with some molecules, please find attached a sample program and pdb file which causes the program to crash on Linux.; Tested on SuSE 10.1 x86 & OpenBabel 2.0.2. Compile and run the test program like this:. formula anim01.pdb pdb. -- . Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/589:170,Test,Tested,170,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/589,2,"['Test', 'test']","['Tested', 'test']"
Testability,Can I capture warning messages into a log file during executing pybel?,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2728:38,log,log,38,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2728,1,['log'],['log']
Testability,"Can we get some layout tests? I'm not sure quite how we'd test this, but it seems like a good idea.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/40#issuecomment-29030719:23,test,tests,23,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/40#issuecomment-29030719,2,['test'],"['test', 'tests']"
Testability,Can you add the file the OP provided as a test case to prevent future regressions?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2170#issuecomment-612020331:42,test,test,42,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2170#issuecomment-612020331,1,['test'],['test']
Testability,"Can you email me a test file and associated command-line. I've tried a few files, but nothing I have seems to trigger the code.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/200#issuecomment-125650738:19,test,test,19,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/200#issuecomment-125650738,1,['test'],['test']
Testability,Can you give me a bit more on this? I guess Jeff's change broke zts? Can we have a test file?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1666#issuecomment-338059692:83,test,test,83,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1666#issuecomment-338059692,1,['test'],['test']
Testability,"Can you help look at the failures in the `roundtrip` test you added?. ```; 1102 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1q11_tye.sdf; [726](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:727); pdbmol not equal: Mismatched ExplicitValence, 3 != 4; [727](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:728); 1603 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/4isk_1jy.sdf; [728](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:729); pdbmol not equal: Could only match 0 of 80 atoms (80); [729](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:730); 2461 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1kmn_hso.sdf; [730](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:731); pdbmol not equal: Could only match 0 of 22 atoms (22); [731](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:732); 3216 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/5ot9_aoz.sdf; [732](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:733); pdbmol not equal: Could only match 0 of 29 atoms (29); [733](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:734); 3334 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/3hxb_bd5.sdf; [734](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:735); pdbmol not equal: Could only match 0 of 81 atoms (81); [735](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:736); 3516 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1fmb_hyb.sdf; [736](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:737); pdbmol not equal: Could only match 0 of 82 atoms (82); [737](https://github.com/openbabel/openbabel/runs/7",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256:53,test,test,53,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256,4,['test'],['test']
Testability,Can you provide a test file?. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1049#issuecomment-281797852:18,test,test,18,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1049#issuecomment-281797852,1,['test'],['test']
Testability,Can you provide test.mol? This might help if I cannot reproduce it.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1643#issuecomment-338211426:16,test,test,16,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1643#issuecomment-338211426,1,['test'],['test']
Testability,"Can you run the test from the command-line and give me the output on MSVC?. Thanks very much,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1013#issuecomment-281797132:16,test,test,16,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1013#issuecomment-281797132,1,['test'],['test']
Testability,"Can you show me your test output before and after? With OB3, there's no 'unittest' - everything is done through a test runner program.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612034495:21,test,test,21,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612034495,2,['test'],['test']
Testability,Can you try copying them all into a smi file - then you can test them all at once.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1280#issuecomment-381524139:60,test,test,60,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1280#issuecomment-381524139,1,['test'],['test']
Testability,"Can you use these updated test results: test/files/uffresults.txt. [uffresults.txt](https://github.com/openbabel/openbabel/files/628708/uffresults.txt). The CI checks will then pass and I can merge your change, thanks.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/355#issuecomment-264619223:26,test,test,26,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/355#issuecomment-264619223,2,['test'],['test']
Testability,"Cleaning up the code to read different atomic partial charges from Gaussian log file, namely Mulliken, Hirshfeld, CM5, and ESP charges.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1742:76,log,log,76,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1742,1,['log'],['log']
Testability,"Cmake Config is like following:; ![screen shot 2015-03-09 at 5 14 26 pm](https://cloud.githubusercontent.com/assets/10948687/6564526/ceb806b4-c67f-11e4-9833-a2e0e3b744ca.png); ![screen shot 2015-03-09 at 5 14 38 pm](https://cloud.githubusercontent.com/assets/10948687/6564527/ceb96ec8-c67f-11e4-813a-cfdbbf30bc30.png). And the Cmake Log is like following:; Using included inchi library.; checking for module 'cairo'; package 'cairo' not found; Could NOT find Cairo. PNG output will NOT be supported.; GUI will not be built; CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:14; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:39; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use th",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:333,Log,Log,333,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,3,"['Log', 'test']","['Log', 'test']"
Testability,"Compiling openBabel 2.1.1 on Linux. Compilation is ok, but cml test fails :; # sh ./cml.sh. # Testing CML support...; *** glibc detected *** double free or corruption (fasttop): 0x08c7f9c8 ***; 1..6; # CML2 with array; *** glibc detected *** double free or corruption (!prev): 0x085733f0 ***; not ok 1; # CML2 with XML version; *** glibc detected *** double free or corruption (fasttop): 0x08a859c8 ***; not ok 2; # CML1 with DOCTYPE; *** glibc detected *** double free or corruption (fasttop): 0x09bd09c8 ***; not ok 3; # CML2 arrays with namespaces; *** glibc detected *** double free or corruption (fasttop): 0x082119c8 ***; not ok 4; # Roundtripping from 2D MDL Molfile to CML and back; *** glibc detected *** double free or corruption (fasttop): 0x080c29c8 ***; not ok 5; # Roundtripping from 3D MDL Molfile to CML and back; *** glibc detected *** double free or corruption (fasttop): 0x090559c8 ***; not ok 6. Reported by: reinerdieden",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/675:63,test,test,63,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/675,2,"['Test', 'test']","['Testing', 'test']"
Testability,"Configuration now fails. This is the error:. ```bash; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; CMake Warning (dev) at /usr/share/cmake/Modules/FindOpenMP.cmake:179 (if):; if given arguments:. ""TRUE"". An argument named ""TRUE"" appears in a conditional statement. Policy; CMP0012 is not set: if() recognizes numbers and boolean constants. Run; ""cmake --help-policy CMP0012"" for policy details. Use the cmake_policy; command to set the policy and suppress this warning.; Call Stack (most recent call first):; /usr/share/cmake/Modules/FindOpenMP.cmake:224 (_OPENMP_GET_SPEC_DATE); CMakeLists.txt:397 (find_package); This warning is for project developers. Use -Wno-dev to suppress it. -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; CMake Warning (dev) at /usr/share/cmake/Modules/FindOpenMP.cmake:179 (if):; if given arguments:. ""TRUE"". An argument named ""TRUE"" appears in a conditional statement. Policy; CMP0012 is not set: if() recognizes numbers and boolean constants. Run; ""cmake --help-policy CMP0012"" for policy details. Use the cmake_policy; command to set the policy and suppress this warning.; Call Stack (most recent call first):; /usr/share/cmake/Modules/FindOpenMP.cmake:266 (_OPENMP_GET_SPEC_DATE); CMakeLists.txt:397 (find_package); This warning is for project developers. Use -Wno-dev to suppress it. ```. this is with 2.4.1. I tried applying that patch but it makes no difference to this issue. Oh no I was wrong it does build after.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1566#issuecomment-301288329:68,Test,Test,68,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1566#issuecomment-301288329,4,['Test'],['Test']
Testability,Confirmed - sorry tested on wrong install.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/222#issuecomment-133038116:18,test,tested,18,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/222#issuecomment-133038116,1,['test'],['tested']
Testability,"Constraining the conversion to a small set (`timeout 120 obabel ache_smiles.smi -O ache.sdf --gen3d 5 --p 7.4`) and the fastest algorithm to suggest a conformer (which need not lead to the global optimum), the CLI reports multiple entries where the stereochemistry either is ambiguous, or wrong (`Could not correct 1 stereocenter(s) in this molecule ()`). Actually, there are entries with more than one problematic chirality center, too. In this perspective, it is better if OpenBabel's permanent record only is about the non-problematic structures. The better thing to do would be a revision of the structure generator; since SMILES are a reduced representation of the structures, possibly the maintainers of the generator may fix the problem and benchmark the assignment of stereochemistry (CIP rules) against a reference set. Meanwhile, perhaps the generator you use offers the export of the molecules as 3D structures, e.g. in the .sdf format to bypass the current problem. https://github.com/CIPValidationSuite/ValidationSuite",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2506#issuecomment-1174678164:748,benchmark,benchmark,748,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2506#issuecomment-1174678164,1,['benchmark'],['benchmark']
Testability,"Contains: swig.log, mkmf.log, and build.log. Original comment by: jballanc",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/704#issuecomment-281779976:15,log,log,15,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/704#issuecomment-281779976,3,['log'],['log']
Testability,"Conversion from a Q-Chem z-matrix shows clear problems; on some molecules (likely from a torsional change). The; resulting structure is not anything like the XYZ; cartesian coordinates immediately before the z-matrix. A new test should be created to test the; internal-&gt;cartesian and cartesian-&gt;internal conversion; routines. Ideally, these should be self-consistent, at; least in the internal coordinates presented. Further; testing of this sort may elucidate where the problem; exists. -Geoff. (I also need to post a few test structures which show; this bug.). Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/430:224,test,test,224,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/430,4,['test'],"['test', 'testing']"
Testability,Convert tabs to spaces in testpdbformat.py,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1568:26,test,testpdbformat,26,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1568,1,['test'],['testpdbformat']
Testability,"Converting a SMILES code to a svg file produces broken SVGs for certain SMILES codes e.g.:. ```~~; obabel -:""C16=C2C(=C(O)C=C1)OC3C7(OC)C(C(C)(O)C(C)C)CC5(C23CCN(CC4CC4)C5C6)CC7"" -osvg -O test.svg; ```~~. The created SVG file ""test.svg"" contains invalid SVG line tags such as:. ```~~; <line x1=""-nan"" y1=""-nan"" x2=""-nan"" y2=""-nan"" stroke=""rgb(0,0,0)"" stroke-width=""1.0""/>; <line x1=""71.7"" y1=""76.3"" x2=""-nan"" y2=""-nan"" stroke=""rgb(0,0,0)"" stroke-width=""1.0""/>; <line x1=""71.7"" y1=""76.3"" x2=""-nan"" y2=""-nan"" stroke=""rgb(0,0,0)"" stroke-width=""1.0""/>; ```~~. Reported by: jerut. Original Ticket: [openbabel/bugs/890](https://sourceforge.net/p/openbabel/bugs/890)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1270:188,test,test,188,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1270,2,['test'],['test']
Testability,Could you convert that file to SMILES on MSVC?. babel.exe test/files/forcefield.sdf -osmi. I'm curious if the C60 only has aromatic carbons. Thanks!. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1013#issuecomment-281797139:58,test,test,58,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1013#issuecomment-281797139,1,['test'],['test']
Testability,Crash with invalidsmiles test on 2.1 branch,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/649:25,test,test,25,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/649,1,['test'],['test']
Testability,"Current CVS version (6/29) fails to assign bond orders correctly in ; a number of cases found in proteins:. 1. isoleucine (ILE) residues SOMETIMES get a double ; bond placed at the end of the sidechain rather than a; single. In the test file included, resnums 16,85,103 ; are bad, but 6,47,80,99 are ok. . 2. 5-membered rings have incorrect bond; orders. This includes histidine and tryptophan (see ; pervious bug report) but not proline. 3. one incorrect bond order found connecting PRO 25; and GLY 26. The above bugs did not occur in release 1.99. One bug that did ; occur in release 1.99 seems now to be fixed: ARG residues now ; appear to work correctly. The current CVS version runs over 100 ; times faster than version 1.99, wow!!. To run the test file:. babel -ipdb CGIFrag.pdb -omol2 CGIFrag.mol2. Richard . Reported by: reg8",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/405:232,test,test,232,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/405,2,['test'],['test']
Testability,"Current CVS version of OpenBabel (6/29) fails to correctly assign ; bond orders to tryptophan residues. Six-membered ring gets all ; aromatic bonds, but 5-membered ring gets an incorrect kekule ; structure (double bonds in wrong place). From my point of view, it ; would be better to get all bonds in kekule form (single, double or ; triple), but all aromatic bonds (mol2 type 4) would be ok. I actually ; had this working in the 1.99 release and am looking into the ; problem. . &gt;babel -h -ipdb TRP.pdb -omol2 TRP.mol2. Here is a test pdb input file (TRP.pdb) to reproduce the problem:. ATOM 178 N TRP A 27 19.460 15.407 20.116 1.00 ; 3.49 A; ATOM 179 CA TRP A 27 19.487 16.872 20.001 1.00 ; 4.11 A; ATOM 180 C TRP A 27 20.257 17.060 18.688 1.00 ; 5.03 A; ATOM 181 O TRP A 27 21.389 17.543 18.677 1.00 ; 4.65 A; ATOM 182 CB TRP A 27 20.213 17.541 21.187 1.00 ; 4.17 A; ATOM 183 CG TRP A 27 19.679 17.185 22.548 1.00 ; 4.29 A; ATOM 184 CD1 TRP A 27 20.234 16.472 23.573 1.00 ; 3.55 A; ATOM 185 CD2 TRP A 27 18.389 17.594 23.039 1.00 ; 4.29 A; ATOM 186 NE1 TRP A 27 19.374 16.376 24.633 1.00 ; 3.31 A; ATOM 187 CE2 TRP A 27 18.215 17.033 24.316 1.00 ; 3.73 A; ATOM 188 CE3 TRP A 27 17.341 18.325 22.442 1.00 ; 4.93 A; ATOM 189 CZ2 TRP A 27 17.036 17.198 25.043 1.00 ; 3.57 A; ATOM 190 CZ3 TRP A 27 16.177 18.528 23.189 1.00 ; 4.49 A; ATOM 191 CH2 TRP A 27 16.026 17.948 24.450 1.00 ; 3.74 A. Resulting output (TRP.mol2), note the two double bonds going to ; C5:. @&lt;TRIPOS&gt;MOLECULE; *****; 24 25 0 0 0; SMALL; GASTEIGER; Energy = 0. @&lt;TRIPOS&gt;ATOM; 1 N1 19.4600 15.4070 20.1160 N.3 1 &lt;1&gt; -; 0.3212; 2 C1 19.4870 16.8720 20.0010 C.3 1 &lt;1&gt; ; 0.0656; 3 C2 20.2570 17.0600 18.6880 C.2 1 &lt;1&gt; ; 0.1373; 4 O1 21.3890 17.5430 18.6770 O.2 1 &lt;1&gt; -; 0.2994; 5 C3 20.2130 17.5410 21.1870 C.3 1 &lt;1&gt; ; 0.0035; 6 C4 19.6790 17.1850 22.5480 C.2 1 &lt;1&gt; ; 0.0249; 7 C5 20.2340 16.4720 23.5730 C.1 1 &lt;1&gt; -; 0.0076; 8 C6 18.3890 17.5940 23.0390 C.ar 1 &lt;1&gt; ; 0.01",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/404:534,test,test,534,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/404,1,['test'],['test']
Testability,"Current version 2.0.x fails to convert some aromatic rings.; For example, ; COC(Cc1n[nH]c(=S)n1c2ccccc2)OC BIONET_10B-022 ether; in test/attype.00.smi, is converted to ; ""COC(CC1N(C(N[N]1)=S)c1ccccc1)OC"".; In this case 5-membered ring lacks aromaticity after; conversion. Former version 1.100.2 converts this SMILES; successfully as ""COC(Cc1n(c([nH]n1)=S)c1ccccc1)OC"". Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/516:132,test,test,132,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/516,1,['test'],['test']
Testability,"Currently only _symmetry_equiv_pos_as_xyz is parsed in mmcifformat, which is superseded by _space_group_symop_operation_xyz: http://www.iucr.org/__data/iucr/cifdic_html/1/cif_core.dic/Isymmetry_equiv_pos_as_xyz.html. cifformat covers both names, so change is not needed there. Added a test.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1578:285,test,test,285,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1578,1,['test'],['test']
Testability,"D'oh! That was a bad mistake. When I have a chance, I'll see if I can sneak in a triangle-smoothing unit test. Both that code, and `distgeom.cpp` had weird copy/paste errors there.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1735#issuecomment-354183347:105,test,test,105,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1735#issuecomment-354183347,1,['test'],['test']
Testability,DCMAKE_PREFIX_PATH=$BOOST_PATH \; 	-DCMAKE_INSTALL_PREFIX=$OPENBABEL_CMAKE_PREFIX \; 	-DZLIB_ROOT=$ZLIB_PATH \; 	-DBUILD_SHARED=OFF \; make -j4; ```; Errors; ```; ---------------------------------------------------------------; [ 77%] Linking CXX static library libopenbabel.a; [ 77%] Built target openbabel; Scanning dependencies of target obabel; Scanning dependencies of target roundtrip; [ 78%] Building CXX object tools/CMakeFiles/obabel.dir/obabel.cpp.o; [ 78%] Building CXX object test/CMakeFiles/roundtrip.dir/roundtrip.cpp.o; Scanning dependencies of target test_runner; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aligntest.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aliastest.cpp.o; [ 79%] Linking CXX executable ../bin/roundtrip; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/roundtrip.dir/build.make:89: bin/roundtrip] Error 1; make[1]: *** [CMakeFiles/Makefile2:1138: test/CMakeFiles/roundtrip.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 80%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; [ 80%] Linking CXX executable ../bin/obabel; /usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/8/libstdc++.a(eh_globals.o): undefined reference to symbol '__tls_get_addr@@GLIBC_2.3'; /usr/bin/ld: //lib/x86_64-linux-gnu/ld-linux-x86-64.so.2: error adding symbols: DSO missing from command line; collect2: error: ld returned 1 exit status; make[2]: *** [tools/CMakeFiles/obabel.dir/build.make:90: bin/obabel] Error 1; make[1]: *** [CMakeFiles/Makefile2:1110: tools/CMakeFiles/obabel.dir/all] Error 2; ---------------------------------------------------------------; [100%] Linking CXX executable ../bin/test_runner; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2377:2756,test,test,2756,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377,1,['test'],['test']
Testability,"DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape; > > sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:14478,test,test,14478,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,1,['test'],['test']
Testability,"DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape; > > sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:12013,test,test,12013,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,1,['test'],['test']
Testability,"Dear Chris,; Thanks for your updating and working. I will be happy to test a new version of OpenBabel. Unfortunately I don't know how I can help you. Original comment by: ruchemist",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/918#issuecomment-281795559:70,test,test,70,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/918#issuecomment-281795559,1,['test'],['test']
Testability,"Dear Dr. Hutchison,. I didn’t notice that there is also a defined testing on `OSError` inside `scripts/python/examples/testpybel.py` in `TestToolkit.testRFmissingfile` method, which caused the hidden error in my script `v2`, where I simply changed `OSError` to `ValueError` when input file does not exist. In this time, `v4`, I think everything should be fine. Exactly as the original codes behavior when error happens:. ```; Pseudocode, validation in sequence:. 1) If format is defined:; - ValueError on format itself will be raised if it does not work; else:; - try to guess from filename; * ValueError prompted for file not exists; * ValueError when format does not work. 2) If filename is not valid:; - OSError will be raised; ```. Besides, I also fixed a potential issue in `scripts/python/examples/testpybel.py`, when both `First try` in ""LINE: 14"" and `Second: try` in ""LINE 20"" not work, then global variable `rdkit` and `cdk` will **not** be defined in old codes, although this script is only built for `openbabel.pybel` itself.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204881480:66,test,testing,66,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204881480,9,"['Test', 'test']","['TestToolkit', 'testRFmissingfile', 'testing', 'testpybel']"
Testability,"Dear Dr. Hutchison,. Thank you for you pointing out where the conflict of the this pull request. Actually, this problem is caused by the “priority” of the checking sequence. Let me explain it in detail. To validate the `file-format`, in testing script `scripts/python/examples/testpybel.py`, there is an intentioned `assert`:. ```; LINE 194: def RFformaterror(self):; LINE 195: mol = getattr(self.toolkit.readfile(""noel"", ""head.sdf""), nextmethod)(); ```. In old `pybel.py`, since the format `noel` is not supported at the very beginning, the `format-error` will be raised firstly, by using returned Boolean variable `formatok`, which is just like assumed. . However, in new updated codes, the function becomes: `pybel.readfile(format=None, filename=None, opt=None)`, because the argument `filename` is always required, so to be efficient, it is being checked first. Due to file path of `head.sdf` is `python/examples/head.sdf`, but does not exist at `where-the-ctest-being-executed`, thus the error `IOError` will be raised, yet it is not equivalent with the expected `ValueError`, coded in:. ```; # file: scripts/python/examples/testpybel.py. LINE 197: def testRFformaterror(self):; LINE 198: """"""Test that invalid formats raise an error""""""; LINE 199: self.assertRaises(ValueError, self.RFformaterror); ```. Therefore, the testing process is not passed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204726470:237,test,testing,237,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204726470,8,"['Test', 'assert', 'test']","['Test', 'assert', 'assertRaises', 'testRFformaterror', 'testing', 'testpybel']"
Testability,"Dear Open Babel authors!. ~>babel bsse.log bsse.xyz. While converting Gaussian log file into XYZ format, babel extracts the first geometry. However geometry optimization was requested in Gaussian job so I expected to see the last geometry in XYZ file. I noticed the wrong behavior appears only if counterpoise=2 option in Gaussian job is activated. . Marat Talipov; TalipovM@gmail.com. Open Babel 2.2.3 -- Feb 18 2011 -- 13:16:37; Darwin Marat-Talipovs-iMac.local 10.7.0 Darwin Kernel Version 10.7.0: Sat Jan 29 15:17:16 PST 2011; root:xnu-1504.9.37~1/RELEASE_I386 i386 i386 iMac11,3 Darwin. Reported by: mirari",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1105:39,log,log,39,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1105,2,['log'],['log']
Testability,"Dear baoilleach,; Did you test my files? Are you able to resolve this problem?. Original comment by: ruchemist",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/918#issuecomment-281795543:26,test,test,26,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/918#issuecomment-281795543,1,['test'],['test']
Testability,"Dear developpers,. I am using Open Babel 2.3.2 -- Nov 23 2015 -- 18:51:24. I have found a bug in the generations of lammps data files. I am converting a PDB file to a lmpdat file using the command ; babel -i pdb test.pdb -o lmpdat test.lmpdat. Although the generation of the atoms is done correctly, the bonds are not properly generated. Attached you will find the input and output files. Regards, ; Sebastián. Reported by: sebas-n1. Original Ticket: [openbabel/bugs/972](https://sourceforge.net/p/openbabel/bugs/972)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1351:212,test,test,212,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1351,2,['test'],['test']
Testability,Debian provides [build logs for all architectures](https://buildd.debian.org/status/package.php?p=openbabel) if this is of any help in this case. To me the logs for arm64 do not seem to contain anything strange around `mcdlutil.cpp`.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2417#issuecomment-942131332:23,log,logs,23,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417#issuecomment-942131332,2,['log'],['logs']
Testability,"Despite the large size of the library, a full ""unit test"" setup, which ; provides tests for each and every method in the underlying libopenbabel ; would be very useful. The current test architecture tests some key ; ""higher-level"" functions (e.g., translation, SMARTS matching, etc.) which is ; important. However, bug 1373650 points out the problems with the library -- some ; methods are not tested in every scenario. Since Open Babel should be ""bullet-proof,"" more method-level and class-; level testing would be ideal. -Geoff. Reported by: @ghutchis. Original Ticket: ""openbabel/feature-requests/69"":https://sourceforge.net/p/openbabel/feature-requests/69",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1438:52,test,test,52,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1438,6,['test'],"['test', 'tested', 'testing', 'tests']"
Testability,Did you figure it out? I'm getting almost the same exact failed tests as you did.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2593#issuecomment-1992295069:64,test,tests,64,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2593#issuecomment-1992295069,1,['test'],['tests']
Testability,"Did you give [cairosvg](https://cairosvg.org/) a shoot? It is based on Python3, does not require inkscape, and may run from the CLI. The files attached in the archive were obtained by . `obabel -ipdb test.pdb -osvg -O probe.svg -xd`; `cairosvg probe.svg -o probe.png`; `cairosvg probe.svg -o probe.pdf`; `cairosvg probe.svg -o probe.ps`; `ps2eps probe.ps`. in Linux Debian 10 / branch «testing». Obviously, there is this additional step to convert the `.ps` into a `.eps` with [ps2eps](http://tm.uka.de/~bless/ps2eps). However both this later file as well as the `.pdf` written by `cariosvg` are true vector format files ready for further edit in an editor like inkscape (successfully tested with version 1.0). Yet I agree, a direct export from openbabel would be welcome. [example.zip](https://github.com/openbabel/openbabel/files/5012395/example.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2251#issuecomment-667692391:200,test,test,200,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2251#issuecomment-667692391,3,['test'],"['test', 'tested', 'testing']"
Testability,"Difficult to say what may be the problem there without the files. Some questions:; * Have you tried adding the `-m` flag to the first command? (`obabel CMNPD-export.sdf -O target.sdf --minimize --sd -ff MMFF94 -e -m`; * I think you may have entered the filename wrong on your ""-m-command"" it should probably be something like `obabel -isdf target.sdf -osdf -O target_split.sdf -m` to give files like 'target_split1.sdf', 'target_split2.sdf' etc.; * If the above doesn't help, could you try with a subset of molecules? E.g. the first 10 or so and attach the file so that we can test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2719#issuecomment-2304479292:577,test,test,577,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2719#issuecomment-2304479292,1,['test'],['test']
Testability,"Do not call `-n`, but `-xn` (mnemonics _use_ or _execute_ a format specific option which `-n` is). As an illustration (obabel 3.1.1 as provided in Linux Debian 12/bookworm (branch testing):. ```bash; $ obabel -:""C"" --title ""methane (Angstroms, default)"" -h --gen3d -o gr96; #GENERATED BY OPEN BABEL 3.1.1; TITLE; methane (Angstroms, default); END; POSITION; 1 UNL C 1 0.95144 0.06266 -0.06096; 1 UNL H 2 2.04364 0.06266 -0.06096; 1 UNL H 3 0.58738 0.24046 -1.07523; 1 UNL H 4 0.58737 0.85214 0.60016; 1 UNL H 5 0.58737 -0.90463 0.29219; END; 1 molecule converted; ```; but; ```bash ; $ obabel -:""C"" --title ""methane (nanometers)"" -h --gen3d -o gr96 -xn; #GENERATED BY OPEN BABEL 3.1.1; TITLE; methane (nanometers); END; POSITION; 1 UNL C 1 0.10736 -0.00092 0.00671; 1 UNL H 2 0.21658 -0.00092 0.00671; 1 UNL H 3 0.07095 0.07563 -0.06216; 1 UNL H 4 0.07095 0.02045 0.10744; 1 UNL H 5 0.07095 -0.09884 -0.02515; END; 1 molecule converted; ```; ---. Given the simplicity of methane, GROMOS possibly is just fine with default `--gen3d` as starting geometry OpenBabel provides here. It often is the sweet spot of computational cost among the five levels of 3D coordinate generation offered. (The manual points to a dedicated publication to balance pros and cons.) For methane in particular, there is no need for an extended permutation of rotor search `--gen3d best` (or `--gen3d slowest`) offer, either. . Because you mention GROMOS, _I speculate_ you aim to provide multiple _conformers_ of one (more complex) molecule for GROMOS to start with. OpenBabel can provide you these geometries as individual, separate models, too.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2471#issuecomment-1119424828:180,test,testing,180,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2471#issuecomment-1119424828,2,['test'],['testing']
Testability,Do the tests pass? Or at least does the number of failing tests not increase?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/18#issuecomment-22381690:7,test,tests,7,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/18#issuecomment-22381690,2,['test'],['tests']
Testability,Do you have the test file available?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1769#issuecomment-362195079:16,test,test,16,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1769#issuecomment-362195079,1,['test'],['test']
Testability,"Do you need the python bindings? Otherwise, I would say that you can move on with the install step. According to your linked bug report the pdformat test fails due to a Python error as well so that one could be ignored.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2250#issuecomment-643936104:149,test,test,149,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2250#issuecomment-643936104,1,['test'],['test']
Testability,"Do you want to add a command-line switch to set the seed? This seems like it's a fairly simple way tweak the randomness (e.g., for unit tests).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1954#issuecomment-481755685:136,test,tests,136,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1954#issuecomment-481755685,2,['test'],['tests']
Testability,"Does openbabel provide a functionality to calculate atom chirality given a molfile representation? I guess the obchiral can only detect whether an atom is chiral or not without classification of R/S.; Thanks so much!; <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2237:1433,test,test,1433,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2237,1,['test'],['test']
Testability,"Does this work in C++? Setting the torsion in a 3d structure of butane segfaults. import pybel; import openbabel as ob. mol = pybel.readstring(""smi"", ""CCCC""); mol.make3D(). atoms = [x.OBAtom for x in mol.atoms]. for i in range(3):; assert atoms[i].IsConnected(atoms[i+1]), ""Not connected!!"". assert mol.OBMol.GetTorsion(atoms[0], atoms[1], atoms[2], atoms[3])==180.0; mol.OBMol.SetTorsion(atoms[0], atoms[1], atoms[2], atoms[3], 170.0); # Segfault. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/755:232,assert,assert,232,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/755,2,['assert'],['assert']
Testability,"Doh! Snaps run in a sandboxed environment, and don't have permissions unless the creator grants them. I'll have to redo the snap. In the meanwhile you can still pipe stuff through obabel and pipe the output to a file, e.g.; cat tmpfile.cif | openbabel.obabel -icif -opdb > tmpfile.pdb; (I've confirmed this works with your test file). When I've done it, I'll update this issue.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1647#issuecomment-332535570:20,sandbox,sandboxed,20,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1647#issuecomment-332535570,2,"['sandbox', 'test']","['sandboxed', 'test']"
Testability,"Done, I initially wrote an automorphism test but that seemed fine so replicated exactly Noel's test case and confirmed if failed without the change to ``ismorphism.cpp``.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1929#issuecomment-467618842:40,test,test,40,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1929#issuecomment-467618842,2,['test'],['test']
Testability,Double free memory bug in test/invalidsmiles,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/624:26,test,test,26,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/624,1,['test'],['test']
Testability,"Drat - I merged but should have changed the title. Not to worry. It looks like this was something I added when I rewrote the test suite, but it wasn't needed in the end.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1757#issuecomment-358567778:125,test,test,125,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1757#issuecomment-358567778,1,['test'],['test']
Testability,"Drat. I don't understand. Right now, I can only assume it's a quirk of the Appveyor infrastructure, and I do note that they recently changed something or other. Of course, it could be a real bug, but even if so, it's not related to your patch and we can't reproduce it. Apologies for the inconvenience. I'll tell Appveyor to skip that particular test and rebuild.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/201#issuecomment-122809148:346,test,test,346,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/201#issuecomment-122809148,1,['test'],['test']
Testability,"Dup of #1283. Currently there is no option not to append the number of residue during molecule. Maybe the quickest solution would be to add such option?. As a workaround in Python would be to remove the residue number from the end of residue name before writing to mol2. ```python; import re; import pybel. mol = next(pybel.readfile('mol2', 'test.mol2')). for res in mol.residues:; new_resname = re.sub('[0-9]+$', '', res.name); res.OBResidue.SetName(new_resname); print(res.name). print(mol.write('mol2')); ```; Also if you want to save small molecules (ligands) there is an `l` option to ignore residue information.; ```; obabel -imol2 1.mol2 -omol2 2.mol2 -xl # <1> in output; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1819#issuecomment-384557893:342,test,test,342,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1819#issuecomment-384557893,1,['test'],['test']
Testability,"During a test minimization on the attached file, everything was proceeding normally. Then, after 45 normal steps, the minimization ""exploded"". 38 51.084 51.086; 39 51.084 51.084; 40 51.083 51.084; 41 51.082 51.083; 42 51.082 51.082; 43 51.081 51.082; 44 51.081 51.081; 45 51.080 51.081; 46 14279868.072 51.080; 47 12376949.852 14279868.072; 48 900328.732 12376949.852; 49 454273.226 900328.732. I'll attach the PDB output after 46 steps as well (9.pdb). Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/619:9,test,test,9,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619,1,['test'],['test']
Testability,"E.g. `obabel -:""c1ccncn1"" -O test.png --append MW`",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2426#issuecomment-965030426:29,test,test,29,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2426#issuecomment-965030426,1,['test'],['test']
Testability,"ESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > ; > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > Python bindings will be compiled; > > Configuring done; > > CMake Warning (dev):; > > Policy CMP0042 is not set: MACOSX_RPATH is enabled by default. Run ""cmake; > > --help-policy CMP0042"" for policy details. Use the cmake_policy command; > > to; > > set the policy and suppress this warning.; > > ; > > MACOSX_RPATH is not specified for the following targets:; > > ; > > inchi; > > openbabel; > > ; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > Generating ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:22974,test,test,22974,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,2,['test'],"['test', 'testexample']"
Testability,"Each time one wants to report an issue about openbabel here on GitHub, the interface provides you with a template. This is to help you to organize your observation(s), and others to identify the possible cause; typically leading to an improvement how the program is used or/and an improvement of the program. You still can edit your question with the bits and bolts the template provides; perhaps especially to organize a report in sections (initiated by a head line following the `##`):. ```; ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; ```. In addition, the interface allows to discern running text on one hand, from snippets of code / output back to the CLI on the other hand by markup as a code block: add three backticks in a line prior, and three backticks in a line following the section. Do not confuse backticks with single quotes. Because some characters might have a particular meaning to (GitHub flavored) [markdown syntax](https://learnxinyminutes.com/docs/markdown/) used here, it equally is *safer* to enclose SMILES and SMARTS in backticks, too. This equally eases to copy-paste them from here to a local instance of running openbabel. To illustrate the above, see e.g. ```shell; obabel -:""C#Cc1ccccc1"" -h --gen3d -O phenylacetylene.sdf; ```. about a snippet of source code enclosed in a fenced code block, and . ```; CX4;!$([H0]);!$([!#6;!$([P,S]=O);!$(N(~O)~O)])[$([CX3]=[O,N,S]),$(",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2607#issuecomment-1614522395:1040,test,test,1040,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2607#issuecomment-1614522395,2,['test'],['test']
Testability,Enhanced test suite,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1388:9,test,test,9,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1388,1,['test'],['test']
Testability,Ensured that tests actually run (https://s3.amazonaws.com/archive.travis-ci.org/jobs/109369516/log.txt):. ```; Start 29: test_cifspacegroup_1; 28/155 Test #29: test_cifspacegroup_1 ............. Passed 0.48 sec; Start 30: test_cifspacegroup_2; 29/155 Test #30: test_cifspacegroup_2 ............. Passed 0.48 sec; ```,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/264#issuecomment-184253529:13,test,tests,13,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/264#issuecomment-184253529,4,"['Test', 'log', 'test']","['Test', 'log', 'tests']"
Testability,Ensured that tests related to CIF pass:. ```; Start 29: test_cifspacegroup_1; 28/158 Test #29: test_cifspacegroup_1 ............. Passed 0.53 sec; Start 30: test_cifspacegroup_2; 29/158 Test #30: test_cifspacegroup_2 ............. Passed 0.53 sec; Start 31: test_cifspacegroup_3; 30/158 Test #31: test_cifspacegroup_3 ............. Passed 0.10 sec; Start 32: test_cifspacegroup_4; 31/158 Test #32: test_cifspacegroup_4 ............. Passed 0.55 sec; ```,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/267#issuecomment-188342224:13,test,tests,13,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/267#issuecomment-188342224,5,"['Test', 'test']","['Test', 'tests']"
Testability,Error 2; make[1]: *** Waiting for unfinished jobs....; [ 88%] Building CXX object test/CMakeFiles/test_runner.dir/canonconsistenttest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/canonstabletest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/carspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cifspacegrouptest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/cistranstest.o; [ 89%] Building CXX object test/CMakeFiles/test_runner.dir/graphsymtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/gziptest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/implicitHtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/lssrtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/isomorphismtest.o; [ 90%] Building CXX object test/CMakeFiles/test_runner.dir/multicmltest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/regressionstest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/rotortest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/shuffletest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/smilestest.o; [ 91%] Building CXX object test/CMakeFiles/test_runner.dir/spectrophoretest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/squareplanartest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereotest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/stereoperceptiontest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tautomertest.o; [ 92%] Building CXX object test/CMakeFiles/test_runner.dir/tetrahedraltest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetranonplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/tetraplanartest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/uniqueidtest.o; [ 93%] Building CXX object test/CMakeFiles/test_runner.dir/aromatest.o; [ 93%] Building CXX object test/CM,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:52662,test,test,52662,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['test'],['test']
Testability,"Except it would be good with a test or two as well, to show that it works.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2283#issuecomment-700278938:31,test,test,31,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2283#issuecomment-700278938,1,['test'],['test']
Testability,"FOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape; > > sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:6692,test,test,6692,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,2,['test'],"['test', 'testsym']"
Testability,Failure is in the cifwriter test #2170,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2184#issuecomment-622494061:28,test,test,28,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2184#issuecomment-622494061,1,['test'],['test']
Testability,Failures in test/logp_psa,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/623:12,test,test,12,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/623,1,['test'],['test']
Testability,Fault 0.02 sec. Start 8: stereoperception_Test. 8/37 Test #8: stereoperception_Test ............ Passed 0.03 sec. Start 9: aromatest_Test. 9/37 Test #9: aromatest_Test ...................***Exception: SegFault 0.03 sec. Start 10: atom_Test. 10/37 Test #10: atom_Test ........................ Passed 0.00 sec. Start 11: bond_Test. 11/37 Test #11: bond_Test ........................ Passed 0.00 sec. Start 12: cansmi_Test. 12/37 Test #12: cansmi_Test ...................... Passed 1.27 sec. Start 13: cmlreadfile_Test. 13/37 Test #13: cmlreadfile_Test ................. Passed 0.02 sec. Start 14: conversion_Test. 14/37 Test #14: conversion_Test .................. Passed 0.01 sec. Start 15: datatest_Test. 15/37 Test #15: datatest_Test .................... Passed 0.00 sec. Start 16: ffghemical_Test. 16/37 Test #16: ffghemical_Test ..................***Failed 0.01 sec. Start 17: ffmmff94_Test. 17/37 Test #17: ffmmff94_Test ....................***Failed 0.01 sec. Start 18: ffuff_Test. 18/37 Test #18: ffuff_Test .......................***Failed 0.01 sec. Start 19: formalcharge_Test. 19/37 Test #19: formalcharge_Test ................ Passed 0.12 sec. Start 20: format_Test. 20/37 Test #20: format_Test ...................... Passed 0.01 sec. Start 21: formula_Test. 21/37 Test #21: formula_Test ..................... Passed 0.21 sec. Start 22: internalcoord_Test. 22/37 Test #22: internalcoord_Test ............... Passed 0.00 sec. Start 23: invalidsmarts_Test. 23/37 Test #23: invalidsmarts_Test ............... Passed 0.00 sec. Start 24: invalidsmiles_Test. 24/37 Test #24: invalidsmiles_Test ............... Passed 0.01 sec. Start 25: iterators_Test. 25/37 Test #25: iterators_Test ................... Passed 0.13 sec. Start 26: logp_psa_Test. 26/37 Test #26: logp_psa_Test ....................***Exception: SegFault 0.02 sec. Start 27: math_Test. 27/37 Test #27: math_Test ........................ Passed 0.13 sec. Start 28: mol_Test. 28/37 Test #28: mol_Test ......................... Passed 0,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:2458,Test,Test,2458,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability,"Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:3.1.1(self compiled version); Operating system and version:Manjaro 5.15.12. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; In the specified path,there are some SMI files:; ```txt; zinc10.smi; *zinc10.smi; zinc10*.smi; ?zinc10.smi; arg.smi; aspirin.smi; ```; In obgui's input filename box,here are some inputs with wildchars I tested:. 1. `*.smi`; 2. `*zinc10.smi`; 3. `?zinc10.smi`; 4. `z*.smi`; 5. `arg.smi;a*.smi;zinc10.smi`. Respiectively,expected conversed files are:. 1. `zinc10.smi;*zinc10.smi;zinc10*.smi;?zinc10.smi;arg.smi;aspirin.smi`; 2. `zinc10.smi;*zinc10.smi`; 3. `*zinc10.smi;?zinc10.smi`; 4. `zinc10.smi;zinc10*.smi`; 5. `arg.smi;aspirin.smi;zinc10.smi`; ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Actually,conversed files are:. 1. None; 2. None; 3. None; 4. None; 5. `arg.smi;zinc10.smi`. In general,any wildchars in the input filename box will not be conversed. ; Any wildchars in the filename will not be conversed,even selected in the input dialoag. ; Other filenames without `*` or `?` splited by `;` will converse correctly. ; `*` in output filename box works correctly if input filename box has no `*`.; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; ![obguiWildcharBug](https://user-images.githubusercontent.com/60164864/150667555-1f458586-e8e1-4434-a4e9-8d9059fe9fb5.png)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2445:2219,test,test,2219,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2445,1,['test'],['test']
Testability,"Finally closed. The final hurdle was 2D -> InChI. Regarding test cases, I'd prefer to start off with simpler structures and be methodological about it. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779574:60,test,test,60,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779574,2,['test'],['test']
Testability,"First part is to always parse space group origin:; - This is fixed by removed overloaded version of SpaceGroup::SetHMName.; - Unrelated, removed similar overloaded SpaceGroup::SetHallName. Second part:; - Expose -xo option for write PDB, to set space group setting (if present) in space group label. Added tests.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1558:306,test,tests,306,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1558,1,['test'],['tests']
Testability,"First, all the credit for the conda binary goes to @rwest and @connie (discussion [here](https://github.com/conda/conda-recipes/pull/310)). All I did was run a more recent git commit through their build script. There's a note [hidden on binstar](https://anaconda.org/patrickfuller/openbabel):. > Tested on Python 2 and 3, Mac and Ubuntu. Requires adding asmeurer and rwest to your ~/.condarc channels. These channels allow the installer to grab the `pkg-config` and `cairo` dependencies. @rwest had to patch directly into openbabel's source to resolve certain dependency paths (the goal was to have _all_ dependencies managed through conda). If you don't use their channels for pulling dependencies, the links are going to be incorrect. For replication's sake, my `~/.condarc` is:. ```; channels:; - defaults; - asmeurer; - rwest; - rmg; - patrickfuller; ```. The binary should work. If it doesn't, my pre-conda workflow used a whole lot of `install_name_tool` commands. ```; install_name_tool -change libpython3.4m.dylib ~/miniconda3/lib/libpython3.4m.dylib ~/miniconda3/lib/python3.4/site-packages/_openbabel.so; for l in xmlformat pubchem cmlreactformat cmlformat cdxmlformat; do install_name_tool -change libxml2.2.dylib ~/miniconda3/lib/libxml2.dylib ~/miniconda3/lib/openbabel/2.3.90/$l.so; done; ```. It's a mess and really not recommended. Let me know if this helps!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/203#issuecomment-159679248:296,Test,Tested,296,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/203#issuecomment-159679248,1,['Test'],['Tested']
Testability,Fix #305 - logic error for non-ring bonds introduced into NumRotors() during distgeom updates,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/308:11,log,logic,11,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/308,1,['log'],['logic']
Testability,Fix OBChemTsfm handling where the implicit H count was going below 0 and wrapping. As reported by @bbucior. See #1895 for more info. Includes the test case reported by Ben along with another one for the same problem triggered by bond order changes.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1896:146,test,test,146,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1896,1,['test'],['test']
Testability,Fix SMILES parsing fuzz test failures from AFL,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1770:24,test,test,24,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1770,1,['test'],['test']
Testability,Fix TESTDIR definition to allow space in path,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1757:4,TEST,TESTDIR,4,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1757,1,['TEST'],['TESTDIR']
Testability,Fix failing test in testobconv_writers,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2682:12,test,test,12,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2682,1,['test'],['test']
Testability,Fix for #1628 by lowercasing second letter of element. Begin testing reading PDB file format.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1631:61,test,testing,61,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1631,1,['test'],['testing']
Testability,Fix for logic when there is an existing ASCII depiction in an SD file,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/328:8,log,logic,8,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/328,1,['log'],['logic']
Testability,Fix for segault (with regression test),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2162:33,test,test,33,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2162,1,['test'],['test']
Testability,Fix logic in chains lazy perception,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1821:4,log,logic,4,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1821,1,['log'],['logic']
Testability,Fix minor tests,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2169:10,test,tests,10,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2169,1,['test'],['tests']
Testability,Fix randomly failing Python gradient test,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1966:37,test,test,37,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1966,1,['test'],['test']
Testability,Fix small test failures from merging,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2490:10,test,test,10,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2490,1,['test'],['test']
Testability,Fix test failure with Python 3,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2218:4,test,test,4,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2218,1,['test'],['test']
Testability,Fix the cif write test (i.e. modified format),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2177:18,test,test,18,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2177,1,['test'],['test']
Testability,Fixed an error with the allExplicit option where the function was opposite to what was stated. Fixed by removing the negation in test.; See line note in https://github.com/openbabel/openbabel/commit/ba397aa5a01cd3753072fadf9535d0092dfcf784#diff-2a365bc04bfc2f8bea760bcade7466a0,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/141:129,test,test,129,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/141,1,['test'],['test']
Testability,Fixes #1726 with reading molecules from CIF and MMCIF files.; (regression test forthcoming),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1823:74,test,test,74,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1823,1,['test'],['test']
Testability,Fixes #2063....I believe. Let me test this directly before this is merged.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2100:33,test,test,33,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2100,1,['test'],['test']
Testability,"Fixes #338, basically following the proposal from the initial report. However, reading the specification at http://www.cambridgesoft.com/services/documentation/sdk/chemdraw/cdx/properties/Atom_Charge.htm the charge is an int8 so I cast directly to that.; Also according to the mentioned spec, there was a bug in ChemDraw producing a different kind of charges for a while. It looks like the code will not work on those files, the ""else-path"" should be invoked for those but according to the spec it looks like there should be a shift of the result to get a proper charge. But as long as we cannot find an example file created in ChemDraw >= 8.0 < 8.0.6 we will not be able to test for this.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2537:675,test,test,675,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2537,1,['test'],['test']
Testability,"Fixes a minor installation regression from PR #1601. `make install` crashed with the following error:. ```; CMake Error at data/cmake_install.cmake:39 (file):; file INSTALL cannot find; ""/cygdrive/c/Users/Benjamin/Git/Contrib/openbabel/data/element.txt"".; Call Stack (most recent call first):; cmake_install.cmake:68 (include); ```. Removing the deleted files from the cmake target allowed installation to proceed. I haven't used Travis much yet, but would a `make install` test in CI be useful?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1617:474,test,test,474,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1617,1,['test'],['test']
Testability,Fixing minor things for reading ESP from log files,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1753:41,log,log,41,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1753,1,['log'],['log']
Testability,Floating point exception in OpenBabel::OBGroupContrib::Predict for logP with PA0,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2088:67,log,logP,67,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2088,1,['log'],['logP']
Testability,"Following discussion with WDI on shapado (http://blueobelisk.shapado.com/questions/has-anyone-got-experience-of-round-tripping-2d-sdf-smiles-sdf-and-its-effect-on-stereochemistry) and testing with Isis/Draw and Symyx Draw, it seems that both explicit and implicit hydrogens should always be considered the highest priority atoms if present. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1073#issuecomment-281799974:184,test,testing,184,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1073#issuecomment-281799974,1,['test'],['testing']
Testability,"Following is a description of the bug in chain parsing I found using PyBel. The actual description is from an e-mail exchange with Noel O'Boyle, and I have modified it slightly to make more sense in this context. > I tried to iterate over all atoms from the OBMol object, and this; > does work, but I noticed that the chain membership is apparently not parsed; > correctly from the PDB file. For the attached 1ere.pdb, Chain F should; > contain 39 HETATM records - 20 belonging to estrogen and 19 belonging to; > water molecules. However, only the water molecules are given the correct; > chain membership such that the following code returns ""19"" (also see the; > attached IncorrectChains.py):; >; > count = 0; > for ai in range(1,mol.NumAtoms()+1):; > a = mol.GetAtom(ai); > r = a.GetResidue(); > if (r.IsHetAtom(a) and r.GetChain() == ""F""):; > print a.GetType() + "" - "" + r.GetChain(); > count = count + 1; >; > print ""Total: "" + str(count); >; >; > I tested this by changing the conditional to this:; >; > if (r.IsHetAtom(a) and r.GetChain() == ""A""):; >; > In this case the output is ""234"" as the number of HETATMS in Chain A - 120; > for estrogen which should actually be in 6 different chains (A-F) and 18 for; > the waters in chain A. Reported by: kirkd",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/928:955,test,tested,955,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/928,1,['test'],['tested']
Testability,"Following your email, I started writing the docs, and had a similar problem. After checking the code, and looking at logp.txt, I see that you need to put "";heavy"" at the start (see logp.txt), and then it works. I don't yet understand how this works but I'm getting there... Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1159#issuecomment-281801445:117,log,logp,117,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1159#issuecomment-281801445,2,['log'],['logp']
Testability,"For file downloaded from ccdc ( https://summary.ccdc.cam.ac.uk/structure-summary?id=doi:10.5517/cc8j3mh&sid=DataCite ), openbabel fail to convert from mmcif to pdb and give the following error - . Unknown space group error (H-M symbol:P21/c), cannot match the list of transforms, please file a bug report.; 1 molecule converted; 1 errors 21 warnings 14 audit log messages. In the attached cif file from ccdc, the short space group P21/c is recognized by openbabel. Openbabel by default remove the space and add it to dictionary. The thing went wrong was due to the following block -; loop_; _symmetry_equiv_pos_as_xyz; ???; Openbabel doesn't treat the transformation as unknown and try to match and fail in the library. I checked in a patch in my forked repo and created a pull request - . https://github.com/openbabel/openbabel/commit/4d9b605f793cf932c8fd6e3fc3770d385a683d4b. Please evaluate and let me know.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/238:359,log,log,359,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/238,1,['log'],['log']
Testability,"For my part, if anyone creates a setup.py that is good to go against the; current release, I am happy to upload it. There is a test pypi server where; things can be tested. On Sat, 9 Nov 2019 at 23:11, Matt Swain <notifications@github.com> wrote:. > Sorry for the slow reply. It's not too much trouble to put a new 3.0; > package onto PyPI. @e-kwsm <https://github.com/e-kwsm> has already done; > most of the hard work in updating the setup.py script in #2060; > <https://github.com/openbabel/openbabel/pull/2060>. Someone just needs to; > run python setup.py sdist in the scripts/python directory, then upload; > the result with twine.; >; > However... there is a bug in the 3.0 release that means that the pip; > install process will fail to find the OB include directory. This has since; > been fixed (#2059 <https://github.com/openbabel/openbabel/pull/2059>,; > @e-kwsm <https://github.com/e-kwsm> again, thanks!) but I would recommend; > against uploading the sdist until this fix is released (in 3.0.1?),; > otherwise it will just break pip install... for everyone who hasn't; > compiled the latest master from source.; >; > Honestly, this is just the latest example of how unreliable it is to; > install via pip with a sdist that relies on pkgconfig to find OB and then; > run swig at install time. I would strongly recommend people use conda; > instead, which has none of these problems. If people are really keen on; > pip, a better solution would probably be to create binary wheel files like; > Noel does for Windows, but I have no experience with this.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2067?email_source=notifications&email_token=AAALCGJHUR2C6MYZ5435RLLQS47S3A5CNFSM4JFL3CQKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEDURJJY#issuecomment-552146087>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAALCGKFCDMIEUW4MP7K",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2067#issuecomment-553360004:127,test,test,127,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2067#issuecomment-553360004,2,['test'],"['test', 'tested']"
Testability,"For some reason babel treats the hydrogen atom differently from the lithium atom in the xyz parser. This is what happens for lithium. $ babel -ixyz li.xyz -oreport; FILENAME: li.xyz; FORMULA: Li; MASS: 6.9410; EXACT MASS: 7.0160045; INTERATOMIC DISTANCES; ... $ babel -ixyz li.xyz -oqcin ; $comment; li.xyz; $end. $molecule; 0 1; 3 0 0 0; $end. $rem. $end; 1 molecule converted; 12 audit log messages . And this is what happens for the hydrogen atom:. $ babel -ixyz test.xyz -oreport; FILENAME: test.xyz; FORMULA: H; MASS: 1.0079; EXACT MASS: 1.0078250; TOTAL SPIN: 2; INTERATOMIC DISTANCES; ... $ babel -ixyz test.xyz -oqcin ; $comment; test.xyz; $end. $molecule; 0 2; 1 0 0 0; $end. $rem. $end; 1 molecule converted; 11 audit log messages . As can be seen, the Q-Chem input file for the lithium atom has the wrong multiplicity (1=singlet) instead of the expected 2. Running with ---errorlevel 5, it appears that the lithium atom XYZ input triggers OpenBabel::AssignImplicitValence but not the hydrogen atom XYZ input. Reported by: @jiahao",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1099:388,log,log,388,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1099,6,"['log', 'test']","['log', 'test']"
Testability,"For some smiles, cansmiles yields incorrect results. PROBLEM:; echo 'O=c1[nH]c(=O)c2cccc3c2c1ccc3' | babel -ismi -osmi; O=[C]1=[NH][C](=O)=C2C=CC=C3C2C1C=CC3	; 1 molecule converted; 4 info messages 33 audit log messages; The resulting SMILES in not correct. I expected the result to be identical to the input, because the input came from a canonicalization of another SMILES. BACKGROUND:; The input SMILES above came from here.; echo 'O=C1NC(=O)C2=CC=CC3=C2C1=CC=C3' | babel -ismi -osmi; O=c1[nH]c(=O)c2cccc3c2c1ccc3	; 1 molecule converted; 1 info messages 33 audit log messages. This resulting cansmiles is correct, but I cannot convert it properly (see PROBLEM).; Another way to think of this is; cansmiles(x) = cansmiles(cansmiles(x)); This is not true for x = 'O=c1[nH]c(=O)c2cccc3c2c1ccc3'. I think this is a general problem with aromatic rings having =O subtitutions and how to aromatize them. Linux/ubuntu; openbabel 2.2.3. TJ; tjo@gnova.com. Reported by: tjbear",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/986:207,log,log,207,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/986,2,['log'],['log']
Testability,For testing purposes which yielded this bug. I reckon the title shouldn't be *****,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2600#issuecomment-1596813459:4,test,testing,4,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2600#issuecomment-1596813459,1,['test'],['testing']
Testability,"For the record, I now have the following SMILES and InChI for the two test cases, OB01_DoubleRing/mol and OB02_FusedRing.mol respectively:. CN1CC[C@]2(CO[C@@H](C)O2)C1; InChI=1S/C8H15NO2/c1-7-10-6-8(11-7)3-4-9(2)5-8/h7H,3-6H2,1-2H3/t7-,8-/m1/s1. O[C@H]1C[C@H]2CC[C@@H](C1)N2C; InChI=1S/C8H15NO/c1-9-6-2-3-7(9)5-8(10)4-6/h6-8,10H,2-5H2,1H3/t6-,7+,8+. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779575:70,test,test,70,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779575,1,['test'],['test']
Testability,Force build to test appveyor,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2240:15,test,test,15,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2240,1,['test'],['test']
Testability,"Forgot to tell, I don't reproduce this with master sources, as expected (see my previous comment), here's the result:. > `julien@debian:~/projects/openbabel/build/bin$` ./obprop ../../bugs/; CID_2519.xml mol1opt.log mol1test_freq.log patch-909.txt ; julien@debian:~/projects/openbabel/build/bin$ ./obprop ../../bugs/CID_2519.xml ; ==============================; *** Open Babel Error in XML Format; Need to specify the input XML format more `precisely`",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1289#issuecomment-381324590:212,log,log,212,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1289#issuecomment-381324590,2,['log'],['log']
Testability,Format for occupancy is (https://www.cgl.ucsf.edu/chimera/docs/UsersGuide/tutorials/pdbintro.html):; `55-60 | Occupancy | right | real (6.2)`. Added a test.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1799:151,test,test,151,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1799,1,['test'],['test']
Testability,Fresh install of 2.4.1 on Windows 7 does not correctly calculate logP or TPSA,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1635:65,log,logP,65,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1635,1,['log'],['logP']
Testability,"From Andrew Dalke on list:. One of RDKit MACCS key definitions is. [!#6;!#1]~[!#6;!#1;!H0]. I'm working on my test suite for those definitions, as mentioned in my previous email. Here's a test case. >>> mol = pybel.readstring(""smi"", ""[U]S(C)C""); >>> matcher = pybel.Smarts(""[!#6;H0]""); >>> matcher.findall(mol); [(1,), (2,)]; >>> matcher = pybel.Smarts(""[!#6;!#1]~[!#6;!#1;!H0]""); >>> matcher.findall(mol); []; >>>. RDKit, OEChem, and Daylight say that that pattern matches that structure. That's because all three programs say that the ""S"" has an implicit hydrogen on it. Daylight says that sulfur has valence levels of ""S (2,4,6)"". http://www.daylight.com/dayhtml/doc/theory/theory.smiles.html. This looks to be a bug in the code which calculates the implicit hydrogen count. Here's another another case where the implicit h-count is wrong, this time with P. Daylight says the valence levels for P in SMILES are (3,5). Given N=PPCC. The second atom (the first P) has a double bond and a single,; so it's valences are filled. It should have no implicit hydrogens. However, here's first the RDKit.MACCS pattern which passed, unexpectedly, in OpenBabel. >>> mol = pybel.readstring(""smi"", ""N=PPCC""); >>> matcher = pybel.Smarts(""[!#6;!#1;!H0]~[!#6;!#1;!H0]""); >>> matcher.findall(mol); [(1, 2), (2, 3)]; >>> Hmatcher = pybel.Smarts(""[!H0]""); >>> Hmatcher.findall(mol); [(1,), (2,), (3,), (4,), (5,)]; >>>. You can see it's because the matcher thinks all of the atoms have at least one implicit hydrogen. Compare this to RDKit, which correctly has the P with no implicit hydrogens. >>> mol = Chem.MolFromSmiles(""N=PPCC""); >>> pat = Chem.MolFromSmarts(""[!#6;!#1;!H0]~[!#6;!#1;!H0]""); >>> mol.GetSubstructMatches(pat); (); >>> Hpat = Chem.MolFromSmarts(""[!H0]""); >>> mol.GetSubstructMatches(Hpat); ((0,), (2,), (3,), (4,)). Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1108:110,test,test,110,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1108,2,['test'],['test']
Testability,"From Andrew Dalke on list:. Perhaps I'm missing something after staring at fingerprint SMARTS definitions for the last few days. I'm validating the MACCS substructure keys from RDKit, which are also used in OpenBabel and CDK. I'm writing a test suite, which will be public when done. (Actually, they are public now, if you know where the version control repository is.). I'm having a very difficult time generating an aromatic ring with a ""P"" in it in OpenBabel. >>> import pybel; >>> pybel.readstring(""smi"", ""c1cccp1"").write(); 'C1CCCP1\t\n'; >>> pybel.readstring(""smi"", ""c1ccccp1"").write(); 'C1=CC=NC=P1\t\n'. Since P is in the same group and has the same valence levels as N, I expected the first of these to return ""c1cccp1"", similar to. >>> pybel.readstring(""smi"", ""c1cccn1"").write(); 'c1ccc[nH]1\t\n'. Both RDKit and OEChem have no problem dealing with ""c1cccp"" and interpreting it as an aromatic ring. I processed about 50K structures from PubChem to find a number with aromatic ""p"" in them. Since PubChem doesn't have aromaticity information, what I did was use another program to perceive the aromaticity. Below I show the RDKit SMILES for a structure and the OpenBabel equivalent for it. You can see that of the 53 structures where RDKit has no problems with a ""p"" in an aromatic ring, 51 of them are converted into aliphatic form by OpenBabel. Is this due to a chemical reason or a design reason for why OpenBabel does this? Perhaps it's something subtle about aromaticity perception (which I sadly admit I still don't have a good grasp on). This is with OEChem OBReleaseVersion() '2.3.0' which I built a couple of days ago. Andrew; dalke@dalkescientific.com. Columns are; column 1: ""p"" in OpenBabel's SMILES; column 2: the SMILES string from RDKit; column 3: the SMILES string from OpenBabel. False 'CCc1c(CC)p(-c2ccccc2)c(-c2ccccc2)c1-c1ccccc1' 'CCC1C(CC)P(C2CCCCC2)C(C2CCCCC2)C1C1CCCCC1\t\n'; True '[W].Cc1np(C([Si](C)(C)C)[Si](C)(C)C)nc1N1CCCCC1.[O+]#[C-].[C-]#[O+].[O+]#[C-].[C-]#[O+].",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1109:240,test,test,240,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1109,1,['test'],['test']
Testability,"From Andrew Dalke:. (1) Shouldn't the molecular formula for ""[NH4+]"" include the total formal charge?. (2) The formal results for c1ccccc1O.[NH4+] are very strange. Take a look at this test. self.assertEquals(mol.GetSpacedFormula(), ""C 6 H 10 N 1 O 1 ""); self.assertEquals(mol.GetSpacedFormula(1), ""C 6 H 10 N O ""). Why is there a double space in ""N 1"" and ""O 1""? Why is there a; space after the last ""1""? And just how useful is the ""include; implicit hydrogens"" flag to generate. self.assertEquals(mol.GetSpacedFormula(0, ' ', 0), ""C 6 H 4 N 1 O 1 ""). Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1053:185,test,test,185,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1053,4,"['assert', 'test']","['assertEquals', 'test']"
Testability,"From Andrew Dalke:. It seems that GetUMapList interacts with the results of GetMapList. def test_basic_match_behavior_which_I_did_not_expect(self):; mol = parse_smiles(""c1ccccc1O""); pat = parse_smarts(""c1ccccc1""); pat.Match(mol); self.assertEquals(pat.NumMatches(), 12); results = pat.GetUMapList(); self.assertEquals(pat.NumMatches(), 1); results = pat.GetMapList(); # I really expected the following to be 12.; # It appears the UMapList does an in-place trim.; # XXX Is that the right/expected behavior?; self.assertEquals(pat.NumMatches(), 1); self.assertEquals(len(results), 1). pat.Match(mol); # Here they are 12; results = pat.GetMapList(); self.assertEquals(pat.NumMatches(), 12); results = pat.GetUMapList(); self.assertEquals(pat.NumMatches(), 1); self.assertEquals(len(results), 1). Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1052:235,assert,assertEquals,235,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1052,7,['assert'],['assertEquals']
Testability,"From Noel:; This fixes #1929, at least the immediate issue. The test for atom identity was missing in the isomorphism mapper, except for the first atom to be tested which was tested 'outside the loop' in advance. Thanks to @johnmay for help identifying this. More generally, the existing identity check is a little loose and should be tightened up to check for hydrogen count, charge, isotope and any other attributes I can think of (currently it just tests atomic number, aromaticity and ring membership). In theory, it's just an interface which the user can override, but the defaults should do what is expected, which is to be an exact match rather than something a bit fuzzy.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1939:64,test,test,64,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1939,4,['test'],"['test', 'tested', 'tests']"
Testability,"From an ORCA geometry optimization the first (initial) geometry is extracted, not the final geometry. The corresponding energy given is for the final geometry.; Tested with Openbabel 2.4.1 (64bit) and Win10 pro 64 bit.; See attached: ORCA output file and extracted geometry in .xyz format. Reported by: yodah134. Original Ticket: [openbabel/bugs/982](https://sourceforge.net/p/openbabel/bugs/982)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1361:161,Test,Tested,161,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1361,1,['Test'],['Tested']
Testability,"From the perspective of small molecules:. Does `diff` reveal differences on these hydrogens only? Do the heavy atoms (CNOPS) move a little, too?. If these structures are not too big (criterion: counting the number of atoms), I suggest to export the newly generated `.pdb` for each run into an `.xyz` and then compare a Kabsch test. E.g., [Jimmy Charnley](https://github.com/charnley/rmsd) initiated a handy Python based implementation to superimpose two structures and to quantify the difference when aligning them as much as possible. Since the two forms you generate have the same number of atoms, and are more similar than just constitutional isomers, a check could possibly were quick. (You equally may put two `.pdb` files into a `.zip`, and attach this archive to document your observations in this thread, too.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2420#issuecomment-949804970:326,test,test,326,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2420#issuecomment-949804970,1,['test'],['test']
Testability,Full unit test framework,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1438:10,test,test,10,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1438,1,['test'],['test']
Testability,Gaussian 03 log files computed with the nosym keyword can not be processed.; In the attachment there is a log file of water with and without the nosym keyword. Reported by: dwondrousch,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1157:12,log,log,12,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1157,2,['log'],['log']
Testability,Gaussian Log file which causes bad conversion. Original comment by: mirari,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1105#issuecomment-281800580:9,Log,Log,9,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1105#issuecomment-281800580,1,['Log'],['Log']
Testability,Ghemical Forcefield Test Case (Multiple Atoms Same Location). Original comment by: @milkypostman,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/629#issuecomment-281778549:20,Test,Test,20,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/629#issuecomment-281778549,1,['Test'],['Test']
Testability,"Given that the MinGW build still fails further along, this cannot be tested to check whether it actually works. So, let's put this on-hold until all of the MinGW problems are fixed. I'll try and find time to figure it out...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1594#issuecomment-311903459:69,test,tested,69,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1594#issuecomment-311903459,1,['test'],['tested']
Testability,"Given the attached mol2 (which has some dodgy atom types I must admit) which contains 85 molecules, only half of the molecules are returned by an iterator. In fact, every second molecule is skipped. import pybel; mols = [mol for mol in pybel.readfile(""mol2"", ""myfile.mol2"")]; assert len(mols)!=85; assert len(mol)==42. Note, that this code works fine for a multimolecule sdf file (or least, the ""head.sdf"" included in the Python scripts directory). Regards,; Noel. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/617:276,assert,assert,276,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/617,2,['assert'],['assert']
Testability,"Going to merge now, and sort out the test failures found after merging #1656",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1660#issuecomment-335401643:37,test,test,37,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1660#issuecomment-335401643,1,['test'],['test']
Testability,"Good afternoon,. I am working on building and compiling Align-It for our research informatics team with the company I work for, and running into some errors on a Linux 2023 AMI instance. We have successfully installed Shape-It on a Rocky Linux server before, and the RI team wanted to utilize Align-It as well, and looks like it should be a similar compile and build process, so not sure if there's something different among my Linux dev box, versus the Rocky Linux box. That would have to be tested next week.. I am hoping to gain any insight on the 'undefined reference' errors I am receiving at the end of the 'make' command for my align-it project. /home/ec2-user/openbabel/include/openbabel/math/vector3.h:274:10: note: declared here; 274 | bool operator== ( const vector3& ) const;; | ^~~~~~~~; [100%] Linking CXX executable align-it. but then started going into errors like this:. /usr/bin/ld: CMakeFiles/align-it.dir/src/result.cpp.o: in function Result::Result()': result.cpp:(.text+0x170): undefined reference to OpenBabel::OBMol::OBMol()'; /usr/bin/ld: CMakeFiles/align-it.dir/src/utilities.cpp.o: in function positionMolecule(OpenBabel::OBMol*, SiMath::Matrix&, SolutionInfo&)': utilities.cpp:(.text+0x1920): undefined reference to OpenBabel::OBMol::BeginAtom(__gnu_cxx::__normal_iterator<OpenBabel::OBAtom**, std::vector<OpenBabel::OBAtom*, std::allocatorOpenBabel::OBAtom* > >&)'; /usr/bin/ld: utilities.cpp:(.text+0x1b93): undefined reference to OpenBabel::OBAtom::SetVector(double, double, double)' /usr/bin/ld: utilities.cpp:(.text+0x1ba0): undefined reference to OpenBabel::OBMol::NextAtom(__gnu_cxx::__normal_iterator<OpenBabel::OBAtom**, std::vector<OpenBabel::OBAtom*, std::allocatorOpenBabel::OBAtom* > >&)'; /usr/bin/ld: CMakeFiles/align-it.dir/src/utilities.cpp.o: in function TransformMolecule(OpenBabel::OBMol*, SiMath::Matrix&, Coordinate&, Coordinate&)': utilities.cpp:(.text+0x1e74): undefined reference to OpenBabel::OBMol::BeginAtom(__gnu_cxx::__normal_iterator<OpenBabe",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2667:493,test,tested,493,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2667,1,['test'],['tested']
Testability,"Good find. Do you still have the test case? I'd like to see where in the code it was accessing the value, as it may be a logic problem.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2038#issuecomment-533662984:33,test,test,33,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2038#issuecomment-533662984,2,"['log', 'test']","['logic', 'test']"
Testability,"Good to go, @ghutchis. The codacy warnings about subprocess refer to debug code that Andrew was using. And just to add that I commented out the problematic pointcloud test mentioned by @fredrikw in the original PR. It uses a random number generator. *sigh*",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2176#issuecomment-612876615:167,test,test,167,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2176#issuecomment-612876615,1,['test'],['test']
Testability,"Google drive reports file structures.sdf to be quite large (1.7G). For me, this is much larger, than anticipated and a stop sign (The documentation contains at least one case study including the Tanimoto scores, see https://open-babel.readthedocs.io/en/latest/Fingerprints/fingerprints.html. It would be nice if the manual would state ahead of time how many GBs will be used when running this example, too.). But, does your test set to document the problem need to contain this many molecules/to be this large in volume? Though .sdf may be compressed (e.g., .zip is a permitted file format for an attachment on GitHub), why not describing the test set e.g., in a text file listing the structures as smiles instead? To index the molecules, obabel possibly does not need to know the coordinates of the atoms as long as the atoms' connectivity and stereochemistry (R/S, E/Z configuration) is described; and the reduced representation by a smiles string typically conveys this information. You still can consider to compress this text file into a .zip (then attached here) to complement your question, too.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2544#issuecomment-1291671575:424,test,test,424,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2544#issuecomment-1291671575,2,['test'],['test']
Testability,"Gotcha. I'll tell you what - with this info, I'll put together the test; with the testfiles from the original bug report. - Noel. On Mon, 24 Sep 2018 at 13:27, fredrikw <notifications@github.com> wrote:. > Yeah, I know ther are no tests, I did this on my Windows machine at work; > and I'm not in complete agreement with the build system... I'll try to add; > a test shortly, a simple one is to run gen2D on [H+].CC[O-].CC[O-] and make; > sure that all atoms have unique x- and y-positions (that is the real; > problem, the long bonds are just a symptom). Before the change I get the; > molfile (notice the coordinates for the last three atoms):; >; > OpenBabel09241813522D; >; > 7 4 0 0 0 0 0 0 0 0999 V2000; > 0.8210 -0.3437 0.0000 H 0 3 0 0 0 0 0 0 0 0 0 0; > 9.9282 -1.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; > 8.1962 -2.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; > 6.4641 -1.0000 0.0000 O 0 5 0 0 0 0 0 0 0 0 0 0; > 6.4641 -6.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; > 6.4641 -6.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; > 6.4641 -6.0000 0.0000 O 0 5 0 0 0 0 0 0 0 0 0 0; > 2 3 1 0 0 0 0; > 3 4 1 0 0 0 0; > 5 6 1 0 0 0 0; > 6 7 1 0 0 0 0; > M CHG 3 1 1 4 -1 7 -1; > M END; >; > After the change I got:; >; > OpenBabel09241813522D; >; > 7 4 0 0 0 0 0 0 0 0999 V2000; > 3.2321 -3.0000 0.0000 H 0 3 0 0 0 0 0 0 0 0 0 0; > 4.9641 -0.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; > 4.0981 -1.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; > 3.2321 -0.5000 0.0000 O 0 5 0 0 0 0 0 0 0 0 0 0; > 2.2321 -1.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; > 1.3660 -0.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; > 0.5000 -1.0000 0.0000 O 0 5 0 0 0 0 0 0 0 0 0 0; > 2 3 1 0 0 0 0; > 3 4 1 0 0 0 0; > 5 6 1 0 0 0 0; > 6 7 1 0 0 0 0; > M CHG 3 1 1 4 -1 7 -1; > M END; >; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/pull/1890#issuecomment-423957463>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGUgwxlZxsfb83ca",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1890#issuecomment-423957968:67,test,test,67,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1890#issuecomment-423957968,8,['test'],"['test', 'testfiles', 'tests']"
Testability,Great - do you have a sample hin file for testing?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1755#issuecomment-358062636:42,test,testing,42,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1755#issuecomment-358062636,1,['test'],['testing']
Testability,Great news! Many thanks! ; I found your https://github.com/openbabel/openbabel/tree/master/test directory and will somehow manage :),MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/257#issuecomment-183683946:91,test,test,91,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/257#issuecomment-183683946,1,['test'],['test']
Testability,Great testcase. The problem is caused at mol.AssignSpinMultiplicity() in MDLFormat::ReadMolecule. I'll look into it tomorrow hopefully... Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1194#issuecomment-281802058:6,test,testcase,6,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1194#issuecomment-281802058,1,['test'],['testcase']
Testability,"H 0 0 0 0 0 0 0 0 0 0 0 0; 2.7526 1.1284 -1.3542 H 0 0 0 0 0 0 0 0 0 0 0 0; 2.9952 -0.6259 -0.9923 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 11 1 0 0 0 0; 1 9 1 0 0 0 0; 2 3 1 0 0 0 0; 2 1 1 0 0 0 0; 3 14 1 0 0 0 0; 3 15 1 0 0 0 0; 4 5 1 0 0 0 0; 4 3 1 0 0 0 0; 5 18 1 0 0 0 0; 5 19 1 0 0 0 0; 6 7 1 0 0 0 0; 6 5 1 0 0 0 0; 7 8 3 0 0 0 0; 10 1 1 0 0 0 0; 12 2 1 0 0 0 0; 13 2 1 0 0 0 0; 16 4 1 0 0 0 0; 17 4 1 0 0 0 0; 20 6 1 0 0 0 0; 21 6 1 0 0 0 0; M RAD 1 8 3; M END; $$$$. that is not at all what is expected. The first N is not charged even if it is connected to 4 atom and the second N is set radical with single bond instead of triple bond. How come? Can it be overcome?. Thanks for hints. <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1595:4950,test,test,4950,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1595,1,['test'],['test']
Testability,Happy to test a patch if needed.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1624#issuecomment-325835264:9,test,test,9,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1624#issuecomment-325835264,1,['test'],['test']
Testability,Has this been tested over a larger dataset?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1777#issuecomment-367369364:14,test,tested,14,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1777#issuecomment-367369364,1,['test'],['tested']
Testability,"Have you been doing any performance testing ([g]perf, profiling, sampling, etc.). It would be interesting to see where the hot-spots are in the unit tests.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1699#issuecomment-346703516:36,test,testing,36,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1699#issuecomment-346703516,2,['test'],"['testing', 'tests']"
Testability,"Have you tested with the latest SVN? I'd like to close this bug. If you haven't tested, please try the 2.2.0b1 snapshot:; https://sourceforge.net/project/platformdownload.php?group_id=40728. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781172:9,test,tested,9,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781172,2,['test'],['tested']
Testability,"Having some problems using OBMol.GetData(int). First of; all, the API doesn't describe what this does. I expect; that it extracts the data fields one by one in some; arbitary order. However, it doesn't appear to be able; to do this. Here is an example. The attached test file has two; fields: 'NSC' and 'Molecular weight'. GetData(int); finds the 'NSC' field without any problems but not the; 'Molecular weight'. In addition, it finds a 'Comment'; field but I guess this is a good thing. >>>>> Python code; from openbabel import *. obconversion = OBConversion(); obconversion.SetInFormat(""sdf""); obmol = OBMol(). notatend = obconversion.ReadFile(obmol,""test.sdf""); print ""Using obmol.GetData(string)""; for field in [""NSC"",""Molecular weight""]:; data = obmol.GetData(field); print ""The value of '%s' is '%s'"" %; (data.GetAttribute(),data.GetValue()). print ""\nUsing obmol.GetData(int)""; for i in range(100):; data = obmol.GetData(i); if data:; print ""i=%d: the value of '%s' is '%s'"" %; (i,data.GetAttribute(),data.Ge; tValue()). print ""\nUsing obmol.GetData()""; print obmol.GetData(). >>>>> Output; Using obmol.GetData(string); The value of 'NSC' is '1'; The value of 'Molecular weight' is '122.03677944'. Using obmol.GetData(int); i=1: the value of 'NSC' is '1'; i=3: the value of 'Comment' is 'CORINA 2.61 0041 ; 25.10.2001'. Using obmol.GetData(); <Swig Object of type; 'std::vector<OpenBabel::OBGenericData *,std::allocator<Open; Babel::OBGenericData * > > *' at 0x815a634>; >>>> End of output. Regards; Noel. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/533:266,test,test,266,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/533,2,['test'],['test']
Testability,"Hello all,. I'm updating Open Babel to version 3.1.1 for the GNU Guix package manager, and I can reproduce this same test failure by using the 32-bit x86 version of GCC 7.5.0. The test passes when building for and executing on 64-bit x86, 32-bit ARM hard float, and 64-bit ARM. Hope this helps somehow!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2041#issuecomment-770950573:117,test,test,117,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2041#issuecomment-770950573,2,['test'],['test']
Testability,Hello!. The warning is not an error but it is saying that OpenBabel cannot assign kekulized bonds (i.e. alternating single and double bonds) to the structure. It's most likely not a problem but could indicate that the input molecule has problems in rare cases so the best option is to double check the input and output structures (easiest to do graphically) to assert that they are the same and correct.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2560#issuecomment-1385624392:361,assert,assert,361,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2560#issuecomment-1385624392,1,['assert'],['assert']
Testability,"Hello, . The AtomID attribute of an atom is set with the ; corresponding four characters of the pdb file. pdfformat.cpp:201:. string atmid = sbuf.substr(6,4); . And then spaces at the beginning and the end of atmid ; are trimmed with:. while (!atmid.empty() && atmid[0] == ' '); atmid = atmid.substr(1,atmid.size()-1);. while (!atmid.empty() && atmid[atmid.size()-1] == ' '); atmid = atmid.substr(0,atmid.size()-1);. And later the AtomID is set (line 373), ; res->SetAtomID(atom, atmid);. Now, in the file residue.cpp the function; GetAtomIDNumber() starts by testing if the first ; character of the AtomID is a space (which is false ; since it has been trimmed). Therefore the computed ; IDNumber will be completely false and GetAtomProperty ; will return inexact values. Since I need theses annotations, i've written a small; patch which replaces the line 373 of pdbformat.cpp by:; res->SetAtomID(atom, sbuf.substr(6,4));; (it may not be a good solution). I join a program that shows the bug (try it with any ; pdb protein and you will see that all atom properties ; are wrong). I also join the tiny patch. Hope this helps, ; -- ; Marc Lasson <marc dot lasson at gmail com>. Reported by: mlasson",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/699:560,test,testing,560,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/699,1,['test'],['testing']
Testability,"Hello,. Could you please attach an example file with this problem for testing?; And also, please shorten the title of the issue and move the text to the description. It is very difficult to read now.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2181#issuecomment-619841542:70,test,testing,70,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2181#issuecomment-619841542,1,['test'],['testing']
Testability,"Hello,. Cppcheck reported several times (about 100) this:; Prefer prefix ++/-- operators for non-primitive types. I attached a patch to fix them + some 2 or 3 assert. Julien. Reported by: serval2412. Original Ticket: [openbabel/bugs/893](https://sourceforge.net/p/openbabel/bugs/893)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1273:159,assert,assert,159,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1273,1,['assert'],['assert']
Testability,"Hello,. I am presenting a first patch towards the acceptance of PDB insertion codes.; A more detailed description on what insertion codes are and how they are used I put as a comment to commit https://github.com/openbabel/openbabel/commit/46bb2d1d42b23938c6446680632477e950643e1d - in short, it is a single character that extends the residue ID and may become particularly important when it is only that character that distinguishes two consecutive residues representing the same amino acid. The patch is complete in the sense that PDB files with insertion codes are now properly read and transformations into other formats, tested was FASTA, behave correctly, i.e. no residue is omitted. The patch is incomplete in the sense that related formats like PDBQT (and possibly others beyond my immediate expertise) are not yet addressed. Also, I yet did not address any writing of PDB formats. I am prepared to continue this work, just hoping for a bit of a review and guidance in that I am not completely erroneous in how I addressed the insertion codes in the first place. I am attaching relevant lines of a structure with that feature; [test_insertioncode.pdb.txt](https://github.com/openbabel/openbabel/files/123521/test_insertioncode.pdb.txt); which transformed looks like. <pre>; $ obabel -ipdb openbabel/test_insertioncode.pdb -ofasta ; >openbabel/test_insertioncode.pdb 6 bp; generated with OpenBabel 2.3.90; SVSSSY; 1 molecule converted; </pre>. while the current implementation omits one (the middle) S.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/257:625,test,tested,625,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/257,1,['test'],['tested']
Testability,"Hello,. I am using open babel as a library for my code.; I use the tautomer feature by calling the routine EnumerateTautomers. Most of the case it works fine, but I am having error when I input anyline derivative (for example C[NH2+]c1ccccc1). One H gets removed giving a smiles misinterpreted later on (C[NH+]C1=CC=CC=C1). By looking a bit in the code I noticed it's occurre in EndMol subroutine. ; Could you help on this one? Is there an option or subtlety I missed?; Thanks. <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1692:1692,test,test,1692,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1692,1,['test'],['test']
Testability,"Hello,. I'm trying to use openbabel 2.1.1 on linux to convert mdl mol v3000 files into mdl mol v2000. The example-file molex.mol (see attachment) contains a COLLECTION Block. ; No conversion is taking place.; No warning or error (except for the title line. % babel -errorlevel 5 -imdl molex.mol -omdl molex2.mol; ==============================; *** Open Babel Warning in ReadMolecule; WARNING: Problems reading a MDL file; Cannot read title line. 0 molecules converted; 1 warnings 4 audit log messages. If the COLLECTION-Block is removed, conversion goes through smoothly. % babel -errorlevel 5 -imdl molexZ.mol -omdl molex2.mol; ==============================; *** Open Babel Warning in ReadMolecule; WARNING: Problems reading a MDL file; Cannot read title line. 1 molecule converted; 1 warnings 16 audit log messages. reiner.dieden@ucb-group.com. Reported by: reinerdieden",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/663:489,log,log,489,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/663,2,['log'],['log']
Testability,"Hello,. While converting a long list of InChIs to SMILES, I noticed the following input results in a segfault:. ```; InChI=1S/C25H35N3O2/c1-17-15-18-9-6-4-3-5-7-10-19-12-13-21(27-19)24(18)25(30-17)23(29-2)16-22(28-25)20-11-8-14-26-20/h8,11-14,17-18,23-24,27-28H,3-7,9-10,15-16H2,1-2H3/b22-20-/t17-,18-,23-,24-,25+/m0/s1AuxInfo=1/0/N:1,29,8,7,9,6,10,24,5,11,23,13,14,25,3,20,2,4,12,22,15,21,19,16,17,26,30,27,28,18/it:im/rA:30CC.oCC.eCCCCCCCCCCCC.oC.oOC.eCCCCCCNNOCN/rB:p1;s2;n3;s4;s5;s6;s7;s8;s9;s10;s11;d12;s13;d14;s4p15;s16;s2s17;s17;s19;s20;d-21;s22;d23;s24;s22d25;N17s21;P19;s28;s12s15;/rC:7.0888,-5.0303,0;6.6191,-3.5637,0;5.1142,-3.2371,0;4.6445,-1.7705,0;3.1395,-1.444,0;2.1042,-2.5841,0;.5992,-2.2575,0;.1295,-.7909,0;1.1648,.3492,0;.6951,1.8158,0;1.7304,2.9559,0;3.2354,2.6294,0;4.5723,3.3937,0;5.7124,2.3584,0;5.0269,.7183,0;5.6798,-.6304,0;7.1847,-.957,0;7.6544,-2.4236,0;6.8709,.5507,0;8.2078,1.3151,0;9.3479,.2798,0;10.8556,.5936,0;11.4879,1.9978,0;13.0188,1.8304,0;13.3326,.3227,0;11.9957,-.4417,0;8.7156,-1.1244,0;5.4667,1.183,0;4.217,.2831,0;3.7051,1.1627,0;; ```. TBH, I'm not even sure if the InChI is correct, but I figured it shouldn't segfault in any case. Tested with the latest release (3.1.1) on Windows 11, and it occurs both through `obabel` and the GUI.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2730:1178,Test,Tested,1178,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2730,1,['Test'],['Tested']
Testability,"Hello,; Tested with the master of openbabel just now.; This command line works only if there is a single molecule in the input file.; If there are two or more:; *** Open Babel Error in GetValues; cansmi not recognized as a property or a descriptor; 2 molecules converted",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1603:8,Test,Tested,8,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1603,1,['Test'],['Tested']
Testability,"Hello,does openbabel have a function to calculate the logS (Water solubility) of SMILES?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2351#issuecomment-821814955:54,log,logS,54,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2351#issuecomment-821814955,1,['log'],['logS']
Testability,"Hello. I would like to create a pull request, but I'm extremely busy this week. I don't' want to create it w/o testing.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2125#issuecomment-590873825:111,test,testing,111,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2125#issuecomment-590873825,1,['test'],['testing']
Testability,Hello; I've run into a problem where openbabel doesn't recognize any file format:. `Laptops-MacBook-Pro:bin laptop$ ./obabel -ipdb 1DRF.pdb -oxyz -O 1DRF.xyz`; `obabel: cannot read input format!`; `Open Babel 2.4.1 -- Feb 4 2017 -- 11:01:17`; `Usage:`; `obabel [-i<input-type>] <infilename> [-o<output-type>] -O<outfilename> [Options]`; `Try -H option for more information.`. This seems to happen with all binaries and formats:. `Laptops-MacBook-Pro:bin laptop$ ./obminimize gaff.sdf`; `./obminimize: cannot read input/output format!`; `Laptops-MacBook-Pro:bin laptop$ ./obrotamer gaff.sdf`; `Error! Cannot read file format!`; `Laptops-MacBook-Pro:bin laptop$ ./roundtrip gaff.sdf out.sdf`; `./roundtrip: Cannot read file #1 format!`; `Laptops-MacBook-Pro:bin laptop$ ./roundtrip test3d.xyz out.xyz`; `./roundtrip: Cannot read file #1 format!`; `Laptops-MacBook-Pro:bin laptop$ ./roundtrip 1DRF.pdb out.pdb`; `./roundtrip: Cannot read file #1 format!`. I've compiled from source both on OSX and Linux and both had this problem; I tested both the 2.4.1 stable and the latest git version and both had this problem. Builds were done in the standard way with `mkdir build && cd build && cmake .. && make`. Am I doing something seriously wrong or does this issue occur for others?. Thank you.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/375:1030,test,tested,1030,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/375,1,['test'],['tested']
Testability,"Here are some console logs:; Error: attempt to subscript container with out-of-bounds index -350469331, ; but container only holds 3 elements. Objects involved in the operation:; sequence ""this"" @ 0x0x5555557fbaf0 {; type = std::__debug::vector<double, std::allocator<double> >;; }. Here's part of the bt:; #3 0x00007ffff73bd363 in std::__debug::vector<double, std::allocator<double> >::operator[] (this=0x5555557fbaf0, __n=18446744073359082285); at /usr/include/c++/7/debug/vector:417; #4 0x00007ffff75472e9 in OpenBabel::OBRotamerList::SetCurrentCoordinates (this=0x7fffffffb290, mol=..., arr=std::__debug::vector of length 7, capacity 7 = {...}); at /home/julien/projects/openbabel/src/rotamer.cpp:562; #5 0x00007ffff73ea3c5 in OpenBabel::OBForceField::FastRotorSearch (this=0x7fffe8234200 <OpenBabel::theForceFieldUFF>, permute=false); at /home/julien/projects/openbabel/src/forcefield.cpp:1376; #6 0x00007fffe9c0a1ad in OpenBabel::OpGen3D::Do (this=0x7fffe9e90ae0 <OpenBabel::theOpGen3D>, pOb=0x5555557f7a00, OptionText=0x5555557fa2f0 """", pOptions=0x7fffffffe6a8, ; pConv=0x7fffffffe540) at /home/julien/projects/openbabel/src/ops/gen3d.cpp:164. and now rotorKey from frame 5:; (gdb) p rotorKey; $5 = std::__debug::vector of length 7, capacity 7 = {0, -350469331, 0, 0, 0, 0, 0}",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1694#issuecomment-374054530:22,log,logs,22,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1694#issuecomment-374054530,1,['log'],['logs']
Testability,"Here are some tests, using this script:. ``` python; import pybel; import os; for filename in os.listdir(""mofs""):; with open(os.path.join(""mofs"", filename)) as in_file:; mof = in_file.read(); mol = pybel.readstring(""cif"", mof); mol.unitcell.FillUnitCell(mol.OBMol); print filename, len(mol.write(""cif"")); ```. and ran with. ```; python -m cProfile -s time test.py | grep FillUnitCell; ```. ""mofs"" is a directory with 13 files, all of which are non-P1 cifs and none of which break the old approach. **Test 1:** Old method vs new method in collision detection. Less characters means duplicates removed. Old:. ```; CoMOF74.cif 31809; FeMOF74.cif 530843; HKUST-1.cif 9622; MgMOF74.cif 418092; MIL-101.cif 991528; NiMOF74.cif 35987; NOTT-101.cif 334571; NU-125.cif 71438; SALEM-2.cif 95843; UiO-66.cif 578635; UTSA-20.cif 155004; ZIF-8.cif 7135; ```. New:. ```; CoMOF74.cif 9497; FeMOF74.cif 12043; HKUST-1.cif 8772; MgMOF74.cif 15118; MIL-101.cif 902758; NiMOF74.cif 10771; NOTT-101.cif 28685; NU-125.cif 64088; SALEM-2.cif 21477; UiO-66.cif 29745; UTSA-20.cif 13846; ZIF-8.cif 5908; ```. **Test 2:** Current hash vs 4x length hash, to test how an unoptimized hash performs. Shorter hash:. ``` c; snprintf(hash, 22, ""%03d,%.3f,%.3f,%.3f"", atom->GetAtomicNum(), baseV.x(), baseV.y(), baseV.z());; ```. ```; ncalls tottime percall cumtime percall filename:lineno(function); 13 4.026 0.310 4.026 0.310 {_openbabel.OBUnitCell_FillUnitCell}; ```. Longer hash:. ``` c; snprintf(hash, 88, ""%03d,%.3f,%.3f,%.3f%03d,%.3f,%.3f,%.3f%03d,%.3f,%.3f,%.3f%03d,%.3f,%.3f,%.3f"", atom->GetAtomicNum(), baseV.x(), baseV.y(), baseV.z(), atom->GetAtomicNum(), baseV.x(), baseV.y(), baseV.z(), atom->GetAtomicNum(), baseV.x(), baseV.y(), baseV.z(), atom->GetAtomicNum(), baseV.x(), baseV.y(), baseV.z());; ```. ```; ncalls tottime percall cumtime percall filename:lineno(function); 13 4.042 0.311 4.042 0.311 {_openbabel.OBUnitCell_FillUnitCell}; ```. They're basically the same. I'm guessing that 1. there are only O(N) string",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/23#issuecomment-23977778:14,test,tests,14,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/23#issuecomment-23977778,3,"['Test', 'test']","['Test', 'test', 'tests']"
Testability,"Here is a little testing program. it compiles fine and the input file ""lig.smi"" has only one record as following:; c1ccccc1 Benzene. the program output:; $ ./OBtest; first compound read; end modification; Segmentation fault. Reported by: yongjinxu",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/909:17,test,testing,17,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/909,1,['test'],['testing']
Testability,Here is a smaller test set that produces the same issue. . test_maccs.smi: ; [test_maccs.smi.tar.gz](https://github.com/openbabel/openbabel/files/10179954/test_maccs.smi.tar.gz). test_maccs.fs: ; [test_maccs.fs.tar.gz](https://github.com/openbabel/openbabel/files/10179955/test_maccs.fs.tar.gz). the fast search file was created using this command:; obabel -ofs test_maccs.smi -xfMACCS. the structure within test_maccs.smi titled lead_compound was compared to the complete database using this command:; obabel test_maccs.smi -ofpt -s'Nc1ccc2c(c1)nc([nH]2)c1ccc(cc1)C(=O)O' -at0.5,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2544#issuecomment-1341587691:18,test,test,18,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2544#issuecomment-1341587691,1,['test'],['test']
Testability,Here's a simpler test case presumably stemming from the same problem:. <pre>; >obabel -:O[C@@H](C)N -oinchi | obabel -iinchi -osmi -h; C1[C@H](N)(O)[H]1; </pre>,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/134#issuecomment-94563971:17,test,test,17,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/134#issuecomment-94563971,2,['test'],['test']
Testability,Here's a test file from cclib:; http://cclib.svn.sourceforge.net/viewvc/cclib/trunk/data/Gaussian/basicGaussian03/dvb_un_sp.out?revision=640. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1205#issuecomment-281802247:9,test,test,9,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1205#issuecomment-281802247,1,['test'],['test']
Testability,"Hi ; I also encounter similar situation when converting a bunch of Zinc15-biogenic compounds in smile strings to generate 3D structure using --gen3D to output as mol2 format in my Ubuntu machine (16.04 LTS) using openbabel 3.0.0. Screen freeze, process killed itself in the middle after freeze and many output with no 3D coordinate like above occur very frequently. Since there is no crash output in /var/crash and error information in auth.log in /var/log. Is there anything I could do to resolve this question, Your kindly help will be highly appreciated. sincerely. Jrhau",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2117#issuecomment-598192962:441,log,log,441,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2117#issuecomment-598192962,2,['log'],['log']
Testability,"Hi @Brett628 ; If you want to follow the given procedure in this tutorial, please download the required `pythonsh` interpreter for the subsequent steps: ; https://ccsb.scripps.edu/mgltools/downloads/. Reasons we strongly recommend this `pythonsh`: ; (1) it's a ready-to-use python2.7. You do not have to install it by yourself (or replace your base Python3 with an older Python, which will cause many further inconvinience); (2) it has a specific set of packages, including a specific version of Obabel and some other packages developed by the same authors. No installation of additional packages needed . I'm not 100% sure if this works on Win11. But I have tested it on Linux, so I'm more confident that the same workflow works in WSL ^^ . Just another note - . This covalent docking method you're following has a newer implementation supported by [Meeko](https://github.com/forlilab/Meeko?tab=readme-ov-file#docking-covalent-ligands-as-flexible-sidechains), a more recently developed tool for receptor and ligand preparation. . This workflow does run with Python3 and recent versions of RDKit, numpy, etc. if you're willing to give it a try. However, it may not work for Python 3.12 at the moment. See [this](https://github.com/forlilab/Meeko/issues/139#issuecomment-2231257208) for more detail",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2714#issuecomment-2269491983:659,test,tested,659,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2714#issuecomment-2269491983,1,['test'],['tested']
Testability,"Hi @dkoes. Can you comment on this? This PR causes your PDBQT test case in testbabel.py to fail as follows. The test case has as output the following:; ```; REMARK 1 A between atoms: _1 and _2; REMARK 2 A between atoms: _2 and _3; ```; This PR causes this output to change to:; ```; REMARK 1 A between atoms: N_1 and CA_2; REMARK 2 A between atoms: CA_2 and C_3; ```; Looks like an improvement to me, but I just want to doublecheck before I edit the test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1849#issuecomment-397959688:62,test,test,62,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1849#issuecomment-397959688,4,['test'],"['test', 'testbabel']"
Testability,"Hi @nbehrnd ; Thanks so much for your kind reply. We have [a newer method for covalent docking](https://github.com/forlilab/Meeko/?tab=readme-ov-file#reactive-docking), supported by a set of new tools (and python3 packages). . The inquired covalent docking is a relatively old method. But it should still work with the designated python2.7 interpreter, which is complemented by a set of Python2 packages, including a specific (older) version of obabel. . The reported issues might be caused by a version change or by the fact that the Win11 platform wasn't tested when the tutorial was written.. We appreciate the report and all of your kind support. @Brett628 If you have any further questions, please do not hesitate to reach out.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2714#issuecomment-2269517865:557,test,tested,557,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2714#issuecomment-2269517865,1,['test'],['tested']
Testability,"Hi @nbehrnd, thanks for taking such a deep dive into this. Actually I am working specifically on PLIP and 3lcs.pdb is only an example file I am currently using for testing. . I am looking into some issues regarding protonation - PLIP currently calls `AddPolarHydrogens()`.; I thought this was the Python Interface equivalent to the command line version with `-h`, actually it is probably the equivalent of `--addpolarh`. So yes, I am indeed only interested in polar hydrogens. However, I am getting a hydrogen atom added to one of the oxygens in glutamic acids side chain which I don't think should be there in physiological conditions. I was experimenting with using `AddHydrogens(True, True, 7.4)` instead to get polar hydrogens for a specific pH value. I thought this would be the Python interface equivalent of `-p`. Turns out, while using it via the Python interface messes up the file in a similar manner, the command line option in contrast to the Python interface option still leaves me with that unwanted hydrogen in glutamic acid's side chain. No idea how that happens... Regarding that cyclopropane - it is a methionine in the original pdb file, I guess open babel messes it up even more than I first noticed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1976621613:164,test,testing,164,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1976621613,1,['test'],['testing']
Testability,"Hi @timvdm, apart from a logical error in my own code (which I need to think about), the OB code still had trouble with the following pairs:. ```; *=Nc1[nH]cc2-c(c1)c1ccccc1n2,*=Nc1ncc2c(c1)c1ccccc1[nH]2; *=Nc1ccc(cc1)NC(Nc1ccccc1)=S,*=Nc1ccc(cc1)N=C(Nc1ccccc1)S; *=Nc1cccc(c1)NC(N*)=S,*=Nc1cccc(c1)NC(=N*)S; *=Nc1ccc(cc1)NC(=N*)S,*=Nc1ccc(cc1)NC(N*)=S; ```; It also had trouble with protonated nitrogens, which hopefully is a simple atom-typing issue:; ```; *N=CC(c1[nH]ncn1)=CN=[N+](c1ccccc1)*,*N=CC(c1n[nH]cn1)=CN=[N+](c1ccccc1)*; *NC(c1ccc[n+](c1)*)=O,*N=C(c1ccc[n+](c1)*)O; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2171#issuecomment-918953059:25,log,logical,25,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2171#issuecomment-918953059,2,['log'],['logical']
Testability,"Hi All,. I got a free license from the PVS guys and ran their static checker on the code.; The report is attached [archive.tar.gz](https://github.com/openbabel/openbabel/files/4630071/archive.tar.gz), it is also available here:; https://afonari.github.io/openbabel-pvs-report/index.html. I ran it as:; ```; git clone ...; cd openbabel; mkdir build; cd build; cmake ..; make -j8; cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=On ..; pvs-studio-analyzer analyze -c -o ./pvs-output.log -j8; # V1042 flag is to disable the warning that GPL license is in the header of the files; plog-converter -a GA:1,2 -t fullhtml pvs-output.log -o ./pvs-report_dir -d V1042; tar -czvf archive.tar.gz ./pvs-report_dir; ```. I think some places are easier to fix than another. Happy quarantining! =)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2219:471,log,log,471,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2219,2,['log'],['log']
Testability,"Hi Geof,. I updated Openbabel and saw nothing. However, I noticed you merged the ; patch for Avogadro. julien@julienPC:~/avogadro/avogadro$ git pull -r && git log -1; Current branch master is up to date.; commit 07060934342ab621d42b77d0aa5e7b2387a46f3a; Author: Julien Nabet <serval2412@yahoo.fr>; Date: Tue Sep 24 22:59:38 2013 +0200. Coverity: fix some memory leaks. Change-Id: I7a1ca207ace6a5d89cf447551619c11849d93c6a. julien@julienPC:~/openbabel$ git pull -r && git log -1; Current branch master is up to date.; commit 4bdca389075d90fe25d59708a7034a4c578d431c; Merge: 63fe928 3ca6aa3; Author: Geoff Hutchison <geoff.hutchison@gmail.com>; Date: Wed Sep 25 08:13:54 2013 -0700. Merge pull request #29 from Reinis/bindings_scala. scala: Add an example program in Scala using Java bindings. Am I missing something?; Thanks anyway! :-). Julien. On 30/09/2013 21:07, Geoff Hutchison wrote:; >; > Merged. Thanks! (Feel free to use GitHub and make pull requests for ; > easier merges and code-review.); >; > ------------------------------------------------------------------------; >; > *[bugs:#893] <http://sourceforge.net/p/openbabel/bugs/893/> cppcheck: ; > Prefer prefix ++/-- operators for non-primitive types (patch attached)*; >; > *Status:* closed; > *Labels:* cppcheck; > *Created:* Thu Sep 26, 2013 04:54 AM UTC by serval24; > *Last Updated:* Thu Sep 26, 2013 04:54 AM UTC; > *Owner:* nobody; >; > Hello,; >; > Cppcheck reported several times (about 100) this:; > Prefer prefix ++/-- operators for non-primitive types; >; > I attached a patch to fix them + some 2 or 3 assert; >; > Julien; >; > ------------------------------------------------------------------------; >; > Sent from sourceforge.net because you indicated interest in ; > https://sourceforge.net/p/openbabel/bugs/893/; >; > To unsubscribe from further messages, please visit ; > https://sourceforge.net/auth/subscriptions/; >. Original comment by: serval2412",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1273#issuecomment-281803754:159,log,log,159,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1273#issuecomment-281803754,3,"['assert', 'log']","['assert', 'log']"
Testability,"Hi Hin-Tak, thanks for the comments and the fix. I want to ask whether you would be interested in running a nightly build on a Tru64 system. None of the developers have access to such a system and so errors like this occur from time to time, and are difficult to resolve. We have recently (i.e. in the last week) set up a build dashboard at http://my.cdash.org/index.php?project=Open%20Babel&date=2010-02-14 and are working through the warnings and test failures. The build procedure is simply a one command that should be run from cron. If you are happy to do so, please contact me off-list at baoilleach@gmail.com. . - Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/964#issuecomment-281796279:449,test,test,449,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/964#issuecomment-281796279,2,['test'],['test']
Testability,"Hi Open Babel!. I get a wrong charge on a Lysine side chain when reading a file from xyz. An example is here: https://dl.dropboxusercontent.com/u/17435887/027ALA_opt.xyz. For instance when converting the following way:. babel -ixyz ALA_opt.xyz -ocom ALA_out.com. babel will assign a total charge of 0 and a multiplicity of 1. This is not correct, since a correct charge and multiplicity are 1 and 1, respectively. The structure is is the result of a PM6 optimization so bond lengths and angles shouldn't be way off. The output from obprop (see below) has a warning concerning ""Accepted unusual valence(s): N(4)"" which may be a clue towards the error maybe? Four bonds to a nitrogen atom is not /that/ unusual. :). I've tried this on the following babel --version:; Open Babel 2.3.0 -- Dec 17 2011 -- 16:15:08; Open Babel 2.3.2 -- Dec 13 2012 -- 18:44:34; Open Babel 2.3.90 -- Dec 1 2013 -- 15:56:22. name backbones/027ALA_opt.log; formula C14H28N5O4; mol_weight 330.403; exact_mass 330.214; canonical_SMILES [NH3]CCCC[C@@H](C(=O)N[C@H](C(=O)NCC(=O)NC)C)NC(=O)C	backbones/027ALA_opt.log. ==============================; *** Open Babel Warning in InChI code; backbones/027ALA_opt.log :Accepted unusual valence(s): N(4); InChI InChI=1S/C14H28N5O4/c1-9(13(22)17-8-12(21)16-3)18-14(23)11(19-10(2)20)6-4-5-7-15/h9,11H,4-8H2,1-3,15H3,(H,16,21)(H,17,22)(H,18,23)(H,19,20)/t9-,11-/m0/s1. num_atoms 51; num_bonds 50; num_residues 0; sequence -; num_rings 0; logP 0.4651; PSA 119.64; MR 85.0889; $$$$. Reported by: andersx. Original Ticket: [openbabel/bugs/906](https://sourceforge.net/p/openbabel/bugs/906)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1286:926,log,log,926,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1286,4,['log'],"['log', 'logP']"
Testability,"Hi all,. I was trying to canonicalize SMILES file when I noticed that some SMILES in the output are strange. input:. CC(C)(C)C(=O)OCOCC1C(CC(O1)n2ccc(nc2=O)NC(=O)OCc3ccccc3)F ; CCCCn1c2c(c3[nH]ccn3n2)c(=O)n(c1=O)CCCC. output:. O=C(OCc1ccccc1)Nc1cc[n](C2CC(F)C(COCOC(=O)C(C)(C)C)O2)c(=O)[nH]1 ; CCCC[N]1=C(=O)c2c(=[N](CCCC)C1=O)[nH]n1cc[nH]c21. in the output second structure one carbon atom has valence 5 =C(=O)c, and 1st structure there is on carbon in 6 member aromatic ring with double bonded oxygen c(=O)?. the command line: babel -ismi test.smi -ocan test_can.smi. Open Babel was compiled from SVN:. Path: .; URL: https://openbabel.svn.sourceforge.net/svnroot/openbabel/openbabel/trunk; Repository Root: https://openbabel.svn.sourceforge.net/svnroot/openbabel; Repository UUID: 71e0b675-c112-0410-beda-96664073b5c2; Revision: 2020; Node Kind: directory; Schedule: normal; Last Changed Author: ghutchis; Last Changed Rev: 2019; Last Changed Date: 2007-07-07 22:02:04 -0600 (Sat, 07 Jul 2007). Operating system:. SuSE Linux 10.2 with kernel version 2.6.18.8-0.5-default. Oleg. OUrsu@salud.unm.edu. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/667:541,test,test,541,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/667,1,['test'],['test']
Testability,"Hi all. - I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Fedora 34; Python-3.9.6. ## Expected Behavior; None test failed. ## Actual Behavior. ```; 216/227 Test #216: pytest_distgeom ..................***Failed 0.05 sec; /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/scripts/python:/home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/x86_64-redhat-linux-gnu/lib64; File ""/home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/test/testdistgeom.py"", line 45; 'Clc1cccc(Cl)c1\C=N\NC(=O)c1cccs1',; ^; SyntaxError: (unicode error) 'unicodeescape' codec can't decode bytes in position 18-19: malformed \N character escape. CMake Error at pytest_distgeom.cmake:20 (MESSAGE):; 1; ```. ## Steps to Reproduce. Building openbabel-3.1.1 on Fedora 34 with following configuration:. ```; + /usr/bin/cmake -S . -B x86_64-redhat-linux-gnu -DCMAKE_C_FLAGS_RELEASE:STRING=-DNDEBUG -DCMAKE_CXX_FLAGS_RELEASE:STRING=-DNDEBUG -DCMAKE_Fortran_FLAGS_RELEASE:STRING=-DNDEBUG -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DCMAKE_INSTALL_DO_STRIP:BOOL=OFF -DCMAKE_INSTALL_PREFIX:PATH=/usr -DINCLUDE_INSTALL_DIR:PATH=/usr/include -DLIB_INSTALL_DIR:PATH=/usr/lib64 -DSYSCONF_INSTALL_DIR:PATH=/etc -DSHARE_INSTALL_PREFIX:PATH=/usr/share -DLIB_SUFFIX=64 -DBUILD_SHARED_LIBS:BOOL=ON -Wno-dev -DCMAKE_SKIP_RPATH:BOOL=ON -DBUILD_GUI:BOOL=ON -DPYTHON_BINDINGS:BOOL=ON -DPYTHON_EXECUTABLE=/usr/bin/python3 -DPERL_BINDINGS:BOOL=OFF -DRUBY_BINDINGS:BOOL=OFF -DOPENBABEL_USE_SYSTEM_INCHI=true -DENABLE_VERSIONED_FORMATS=false -DRUN_SWIG=true -DENABLE_TESTS:BOOL=ON -DOPTIMIZE_NATIVE=OFF; -- The C compiler identification is GNU 11.2.1; -- The CXX compiler identification is GNU 11.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/lib64/ccache/gcc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX c",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2406:191,test,test,191,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406,4,"['Test', 'test']","['Test', 'test', 'testdistgeom']"
Testability,"Hi all. I am currently a Google Summer of Code Scholar working with MDAnalysis. My project involves the creation of a converter to convert between OpenBabel OBMols and MDAnalysis Universes. I am working with the automatic python bindings. I am keen to chat with current OpenBabel maintainers to gain a deeper insight into the package and take on any suggestions for features or attributes that would be beneficial to access and convert. I also have some questions about functionality that I would love some assistance with. 1. I can see that OpenBabel supports PDB formats, but I cannot see any attributes within the OBMol or OBAtom classes for alternate locations, chainids, occupancies and tempfactors/B-values. Would anyone be able to point me in the direction of where I can find these attributes (if they are supported)? The only documentation I can find it [here](http://openbabel.org/docs/FileFormats/Protein_Data_Bank_format.html). 2. I would love to utilise a handful of the OpenBabel test-set files to test the converter, but I do not want to clone the entire repo into my converter for size purposes. Do you have a preferred way for me to access and credit the files back to OpenBabel? . Thanks for your time! You can follow along with my project [here](https://github.com/MDAnalysis/mda-openbabel-converter).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2708:994,test,test-set,994,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2708,2,['test'],"['test', 'test-set']"
Testability,"Hi everybody. I apologize in advance if my question is dumb, and thank anyone that could help me out. I'm quite new to C++ and cmake. I have written a new plugin format, PDBT, which at the moment is nothing more than a copy of pdbqt format, but which will change once I can get it to work. When compiling normally everything works, I am able to use the new file format. However, I need an executable that can be distributed for use on different machines. When compiling using -DBUILD_SHARED=OFF -DBUILD_MIXED=ON, I can compile libopenbabel.a which I can then use to compile a static obabel binary. This executable works, but the new plugin (PDBT) is absent from obabel -L formats list, and fails when I try to use it doing ""obabel -isdf test/pdb_ligands_sdf/966c_rs2.sdf -opdbt"". Does anyone have any idea why the plugin is not working on the mixed compiled executable?. Here is my fork with the PDBT format (simply copied the pdbqt file in formats folder and modified formats.cmake to add pdbt format):. https://github.com/rquiroga7/openbabel.git. I am attaching my CMakeLists file which I use to compile the obabel executable:; [CMakeLists.txt](https://github.com/openbabel/openbabel/files/4268993/CMakeLists.txt)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2134:737,test,test,737,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2134,1,['test'],['test']
Testability,"Hi there,. For one of our applications, we wanted to be able to extract a chemical formula from an InChI. We can get OpenBabel to read an InChI, but I noticed that it always deletes all the hydrogens, and there is no alternative option. [Here](https://github.com/openbabel/openbabel/blob/master/src/formats/inchiformat.cpp#L246) is where it looks like all the hydrogens are deleted. Any thoughts about this? Should we have an option to not delete the hydrogens?. Thanks,; Patrick. <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1881:1695,test,test,1695,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1881,1,['test'],['test']
Testability,"Hi there,. I have developed a web application in .NET C# code using OBDotNet. My OS is Windows 7, 64 bit.The version of Open Babel I am using, is OpenBabel-2.3.2.; Its working fine when I run application in Microsoft Visual studio. But after publishing my application and hosting it on IIS, when I run the application, it is throwing exception. I am attaching the same error log file for your reference.; Please help. Thanks; Pradeep. Reported by: pradeepv67. Original Ticket: [openbabel/bugs/968](https://sourceforge.net/p/openbabel/bugs/968)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1347:375,log,log,375,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1347,1,['log'],['log']
Testability,"Hi! I've run into an issue that I believe is the same except that I'm encountering it in Pybel rather than the command-line interface. I installed Openbabel/Pybel with Conda and the output of `conda list ""openbabel""` is shown below:; ```; # packages in environment at /home/james/miniconda3/envs/dbale:; #; # Name Version Build Channel; openbabel 1!2.4.1 py35_2 omnia; ```. I tested all available force fields and got the same error for them all. Here is a minimal example of the error:. ```python; import pybel. cases = [""F[Zn]F"", ""F[Ti](F)F""]; ffs = [""gaff"", ""ghemical"", ""mmff94"", ""mmff94s"", ""uff""]; for case in cases:; for ff in ffs:; m = pybel.readstring(""smi"", case); m.make3D(forcefield=ff). print(""Force Field ="", ff); print(m.write(""xyz"")); ```; ```; Force Field = gaff; 4. F 1.07585 0.02711 0.05926; Ti 3.24585 0.02711 0.05926; F -nan -nan -nan; F -nan -nan -nan. Force Field = ghemical; 4. F 1.02247 0.07565 0.06142; Ti 3.19247 0.07565 0.06142; F -nan -nan -nan; F -nan -nan -nan. Force Field = mmff94; 4. F 1.04019 0.07609 0.05095; Ti 3.21019 0.07609 0.05095; F -nan -nan -nan; F -nan -nan -nan. Force Field = mmff94s; 4. F 0.97489 0.09279 -0.02756; Ti 3.14489 0.09279 -0.02756; F -nan -nan -nan; F -nan -nan -nan. Force Field = uff; 4. F 0.92952 -0.06106 -0.03611; Ti 3.09952 -0.06106 -0.03611; F -nan -nan -nan; F -nan -nan -nan; ```. Any advice would be appreciated!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1213#issuecomment-541377306:376,test,tested,376,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1213#issuecomment-541377306,1,['test'],['tested']
Testability,"Hi, . To help fixing the Bug I wanted to add a Unit test, ; and realised that I just have to add them to test/files/validsmarts.txt. tail validsmarts.txt; [oX2r5]; [r;!r3;!r4;!r5;!r6;!r7]; [sX2r5]; # Trigger Bug #3065756; Nc1ncnc2c1ncn2C1C=C=CO1 ; C1=CC(n2cnc3c(N)ncnc23)OC=1. will result in . ...; ok 224; ok 225; ok 226; not ok 227 failed on C1=CC(n2cnc3c(N)ncnc23)OC=1; 1..227; ==============================; *** Open Babel Error in SMARTSError; SMARTS Error:; C1=CC(n2cnc3c(N)ncnc23)OC=1; ^. Hope that helped. I am still unsure whether this is a valid bug, ; but IIRC all SMILES should be valid SMARTS. And it works with the ; canonical SMILES as input. Yours,; Steffen. Original comment by: sneumann",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1021#issuecomment-281797270:52,test,test,52,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1021#issuecomment-281797270,2,['test'],['test']
Testability,"Hi, I just added a comment line. No tests for now, unfortunately.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1663#issuecomment-337355953:36,test,tests,36,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1663#issuecomment-337355953,1,['test'],['tests']
Testability,"Hi, I would like ask if is it normal to have failed tests on the following:. 60 - test_gzip_1 (Failed); 72 - test_isomorphism_5 (Failed); 73 - test_isomorphism_6 (Failed); 77 - test_multicml_1 (Failed); 97 - test_rotor_2 (Failed); 98 - test_rotor_3 (Failed); 99 - test_rotor_4 (Failed); 214 - pytest_sym (Failed); 217 - pytest_distgeom (Failed). I am attaching the LastTest.log for your reference. [LastTest.log](https://github.com/openbabel/openbabel/files/11599588/LastTest.log)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2593:52,test,tests,52,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2593,4,"['log', 'test']","['log', 'tests']"
Testability,"Hi,. Could someone give me a quick outline of the procedure for adding test cases, please?. Matt",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/165:71,test,test,71,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/165,1,['test'],['test']
Testability,"Hi,. I am not familiar enough with CML spec to reply to your question. See below for more explanations. I am doing molecular simulations with empirical force fields (e.g. OPLSAA or other). In order to do a molecular simulation, I must assign a force field type to each atom in a molecule. Recently, I decided to use the AtomClass number as a force field type. I found that CML is the only output format that use the AtomClass number but I would like to output this information directly in tinker xyz file (instead of MM2 force field). My work flow for a molecular simulation is then: create a SMILE code for molecules including AtomClass number (or equivalently force field type), use obabel to output a tinker xyz file (with coordinates and connectivity informations) and a cml file (with force field information) from which as script creates input files for my molecular dynamics code…. This is just a second-choice route! Ideally, I would like obabel to do atom typing (associate force field to atoms from element names and connectivity using rules) just like aten does using NETA langage. I will be happy to help or test!; Bernard. > Le 23 déc. 2017 à 22:16, baoilleach <notifications@github.com> a écrit :; > ; > I was just looking at this code this week, and I can imagine the problem. Can I ask what do you use this CML for? What I've been thinking about is whether it would be better to write out the atomclass information in some other way if this is allowed by the CML spec.; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1731#issuecomment-353773802:1120,test,test,1120,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1731#issuecomment-353773802,1,['test'],['test']
Testability,"Hi,. I am using openbabel to generate tautomers (mostly of amino acid) and need to get zwitterionic species (N...OH become NH+....O-). I noticed it's not possible in tautomer.cpp because N neutral is not considered as a acceptor. I change the AssignAtomType routine to modify that. That part is working ok, but then in the propagation part I don't see the configuration I want to reach (NH+...O-) proposed. My problem is I am willing to change it but I don't get the enumerate/propagation algorithm, could you give me info about it? Its name? A paper it is explained into?... Thanks. Laëtitia. <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1717:1808,test,test,1808,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1717,1,['test'],['test']
Testability,"Hi,. I have bee using openbabel as a library for a while. I wanted to update my version of openbabel and thus download and compile openbabel-2.4.1. Problem is when I want to compile my code, I get the following error; : /home/bomble/Project/openbabel-2.4.1/include/openbabel/mol.h:25: error: openbabel/babelconfig.h: No such file or directory; and indeed I can't find babelconfig.h in the include dir but babelconfig.h is asked in almost all other include.; Where can I find it?. Thanks. <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1683:1702,test,test,1702,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1683,1,['test'],['test']
Testability,"Hi,. I have been working on a project which included a lot of malformed SMILES been fed to OpenBabel via Python bindings. I have found out a case when OpenBabel crashes with a segmentation fault. After playing a bit, I have found the simplest case to break it is something like the following SMILES string:. F13.1. To reproduce the error, do the following:. $ echo 'F13.1' > test.smi; $ babel -i smi test.smi -o mol test.mol; Segmentation fault. In Python:; $ python; Python 3.4.1 (default, May 23 2014, 17:48:28) [GCC] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; import pybel; pybel.readstring('smi', 'F13.1'); Segmentation fault; $. I have run babel with GDB, here is the backtrace:. 1 0x00007fffef348cdb in OpenBabel::OBSmilesParser::ParseSmiles (this=this@entry=0x7fffffff41b0, mol=...) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:431; 2 0x00007fffef349427 in OpenBabel::OBSmilesParser::SmiToMol (this=this@entry=0x7fffffff41b0, mol=..., s=...) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:398; 3 0x00007fffef349c63 in OpenBabel::SMIBaseFormat::ReadMolecule (this=<optimized out>, pOb=<optimized out>, pConv=0x7fffffffdf60) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:343; 4 0x00007ffff77934e2 in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl (pConv=0x7fffffffdf60, pFormat=0x7fffef55fb50 <OpenBabel::theSMIFormat>) at ../temp/openbabel-2.3.2/src/obmolecformat.cpp:105; 5 0x00007ffff7738e8c in OpenBabel::OBConversion::Convert (this=this@entry=0x7fffffffdf60) at ../temp/openbabel-2.3.2/src/obconversion.cpp:519; 6 0x00007ffff773b33d in OpenBabel::OBConversion::Convert (this=this@entry=0x7fffffffdf60, is=0x7fffffffd3e0, os=os@entry=0x7fffffffcfe0) at ../temp/openbabel-2.3.2/src/obconversion.cpp:450; 7 0x00007ffff773d6cf in OpenBabel::OBConversion::FullConvert (this=this@entry=0x7fffffffdf60, FileList=..., OutputFileName=..., OutputFileList=...) at ../temp/openbabel-2.3.2/src/obconversion.cpp:1417; 8 0x0000000000402",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1316:375,test,test,375,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1316,3,['test'],['test']
Testability,"Hi,. I have noticed that on converting a Smiles string with chirality to sdf format, the resulting output file lacks any chiral information.; This is also evident on converting the sdf file back to a smiles format. -Tushar. e.g. > echo ""CC[C@H](C)[C@@H](C)CC"" > test.smi. > babel -ismi test.smi -osdf test.sdf. > babel -isdf test.sdf -osmi test_new.smi. > cat test_new.smi; CCC(C)C(C)CC. Reported by: tsjain",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/897:262,test,test,262,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/897,4,['test'],['test']
Testability,"Hi,. I made a bunch of changes to the png depiction to fit my needs and I thought I would share them... I'm not very experienced with pull requests, so maybe I haven't done everything optimally, for example if you would like me to split the commits into different requests, please let me know.; The -xm option added in a509587 was difficult to properly explain in a few words but basically now you always get a png with the set height and widths, regardless of the compound. With this change, single molecule depictions can be made dependent on the shape of the compound, so that there won't be a lot of empty space around. I'll try to attach two example images to make it easier to understand... (The margins aren't that easy to see, but if you download the images it's more apparent).; ![without_xm](https://f.cloud.github.com/assets/86855/1001311/1b1a82a6-0a67-11e3-8fa2-18b76fc79cb5.png); Created with `obabel -ismi -:""[O-][C@@]([H])(C)COc1ccccc1[NH3+].[Cl-] test"" -xd -O ~/Desktop/without_xm.png`; ![with_xm](https://f.cloud.github.com/assets/86855/1001312/2146d9fe-0a67-11e3-82f1-96998a5097ce.png); Created with `obabel -ismi -:""[O-][C@@]([H])(C)COc1ccccc1[NH3+].[Cl-] test"" -xm -O ~/Desktop/with_xm.png`",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/19:963,test,test,963,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/19,2,['test'],['test']
Testability,"Hi,. It seems that babel is well capable of reading in gaussian calculated Mulliken charges. However, charges provided by more sophisticated algorithms (opt=mk for example) are not read even if they are calculated. Including support for better partial charges would make sense because Mulliken charges typically don't make any sense. Quick look in the gaussformat.cpp shows that only Mulliken charges are interpreted. I tested a bit, and adding the following code after Mulliken code, should do the trick (same code as for Mulliken with small changes):. else if(strstr(buffer,""Charges from ESP fit"") != NULL ); {; hasPartialCharges = true;; ifs.getline(buffer,BUFF_SIZE); // column headings; ifs.getline(buffer,BUFF_SIZE); // column headings; ifs.getline(buffer,BUFF_SIZE);; tokenize(vs,buffer);; while (vs.size() >= 3 &&; strstr(buffer,""------------------------------------------"") == NULL); {; atom = mol.GetAtom(atoi(vs[0].c_str()));; if (!atom); break;; atom->SetPartialCharge(atof(vs[2].c_str()));. if (!ifs.getline(buffer,BUFF_SIZE)) break;; tokenize(vs,buffer);; }; }. In addition, one needs to add a correct value for the pair data that is set later in the code. I hope that this comment is useful. Regards,. Tapani Kinnunen (takinnun at hotmail.com). Reported by: *anonymous. Original Ticket: [openbabel/feature-requests/148](https://sourceforge.net/p/openbabel/feature-requests/148)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1517:420,test,tested,420,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1517,1,['test'],['tested']
Testability,"Hi,. The last changes in obprop.cpp fixed the features that I reported earlier, thanks for this. However, it seems that the new version does not cope very well with multimolecule cml files. If there is two or more molecules in the cml file, the obprop outputs the properties of the last molecule twice. Sdf, mol2 etc seem to work ok. This has something to do with the new while structure (that processes all the molecules) in obprop.cpp. The previous structure (for loop, exists in revision 1865) works ok with multimolecule cml files. In the cml file, <cml start tag has something to do with this problem. In case of multimolecule cml, babel writes a reference to cml namescape in cml start tag -> obprop duplicates output. If I remove the namespace reference (just plain <cml>) -> no problems with the obprop output. I tested this on two platforms (linux/solaris) and the problem remained the same. I hope this helps,. Tapani Kinnunen; takinnun at hotmail.com. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/632:821,test,tested,821,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/632,2,['test'],['tested']
Testability,"Hi,. There is a bug in the atom type determination of terminal oxygens attached to Sulfurs, e.g. in the sulphonamide group S(=O)(=O)N. Line 2339 on src/forcefields/forcefieldmmff94.cpp : ; if (nbr2->IsOxygen() && nbr2->GetValence() == 0). should be changed to,; if (nbr2->IsOxygen() && nbr2->GetValence() == 1). Except for single ions, there are no atoms with a valence of 0!. This is causing the terminal O's on sulfur to be typed as index 7 instead of index 32.; If one looks at molecule BBSPRT10 in the MMFF Validation suite, the type assignment for the O is indeed 32(check file MMFF94_opti.log in the validation suite). Regards,; Tushar Jain. Reported by: tsjain",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/877:595,log,log,595,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/877,1,['log'],['log']
Testability,"Hi,. Yeah I never opened a pull request for this because I wasn't confident enough that it didn't break anything - especially considering it makes fairly significant changes to the reading and writing of MDL Molfiles. In particular:; - I'm not really sure how Open Babel handles zero-order bonds internally in general. Do any other changes have to be made to accommodate that?; - I had to change AddHydrogens so it doesn't reset the ImplicitValencePerceived flag (just like it doesn't reset the ChiralityPerceived flag). Hopefully that doesn't cause any problems elsewhere.; - I haven't extensively tested the implementation of the algorithm. Everything seems fine, but I just tested it on some of the structures in the supplementary information for the paper. Alex Clark may be the best person to check it over, if he is able to. . The paper - http://pubs.acs.org/doi/abs/10.1021/ci200488k; Supplementary information - http://pubs.acs.org/doi/suppl/10.1021/ci200488k/suppl_file/ci200488k_si_001.pdf",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/18#issuecomment-22380480:599,test,tested,599,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/18#issuecomment-22380480,2,['test'],['tested']
Testability,"Hi,. if you specify any resolution to PNG export via -xp,; the resulting PNG file has 0 bytes. To reproduce:. Works:; echo ""CC"" | ./bin/babel -i smi -o png test.png. Doesn't work:; echo ""CC"" | ./bin/babel -i smi -o png -xp 300 test.png. This is reproducible on Ubuntu 12.04, both with ; binary packages 2.3.1+dfsg-4 and and a local build of today's SVN r5063. Yours,; Steffen. Reported by: sneumann. Original Ticket: [openbabel/bugs/879](https://sourceforge.net/p/openbabel/bugs/879)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1259:156,test,test,156,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1259,2,['test'],['test']
Testability,"Hi,; I am trying to generate 3D coordinates from the Mechanistic Sets .sdf files downloaded from NCI. But I keep getting the error 'Segmentation fault (core dumped)'. However, it worked with the Diversity Sets .sdf files. So any help here? And I am using Linux Ubuntu. Thanks!; Ruben. <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2004:1499,test,test,1499,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2004,1,['test'],['test']
Testability,"Hi,; i write a quick fix : see attached file 2527225.patch (more checking on values of columns 79/80). Do you think that a warning should be displayed ?; I attach 6 pdb files :; 1CRN.pdb / dipep.pdb (input test files); 1CRN2.2.0.pdb / dipep2.2.0.pdb : babel -ipdb 1CRN.pdb -opdb 1CRN2.2.0.pdb (babel 2.2.0 06/13/2008); 1CRNFixed.pdb / dipepFixed.pdb : babel -ipdb 1CRN.pdb -opdb 1CRNFixed.pdb (babel 2.2.X with new attached patch). Original comment by: lleell00",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/846#issuecomment-281794316:206,test,test,206,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/846#issuecomment-281794316,1,['test'],['test']
Testability,"Hi. I like to distinguish between Carboxylic acids and ; Carboxylic esters: . Based on ; http://www.daylight.com/support/faq/smarts_examples.fa; q.html#META. the SMARTS for Carboxylic acid (with proton) (-oic acid, ; COOH) should be [CX3](=O)[OX2H1]. With this code I get for lMatches = 0. // start sample code	; OBSmartsPattern* sp = new OBSmartsPattern; ; std::istringstream is(""CC(=O)O"");; OBMol mol(SMI,MOL2);; vector<vector<int> >	mlist;; long lMatches = -1;. if (sp->Init(""[CX3](=O)[OX2H1]"")); {; mol.Clear();; OBFileFormat::ReadMolecule(is, mol);; if (! mol.Empty()) ; {; sp->Match(mol);; mlist = sp->GetMapList();; lMatches = mlist.size();; } ; } ; // end sample code	. If I change ; if (sp->Init(""[CX3](=O)[OX2H1]"")); to; if (sp->Init(""[CX3](=O)[OX1]"")); I get for lMatches = 1. For this test I used Microsoft Visual Studio.net 2003 ; C++ Compiler. I had no problem with the sample ; application smartstest. . Thank you for your work!! . Best regards. Ivo; silvestri@isitech.com. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/456:797,test,test,797,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/456,1,['test'],['test']
Testability,Hi. The test file from cclib you gave me is not read correctly when using openbabel 2.3.1_0 with the command:; babel -ig09 dvb_un_sp.out -oxyz aaa.xyz; 0 molecules converted. while it is converted correctly using openbabel 2.2.3_0. I forgot to mention that i'm working on mac os x mountain lion with openbabel installed from macport. Do you have the same problem for this file with your version of open babel?. Best regards. Vincent. Original comment by: vliegeois,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1205#issuecomment-281802249:8,test,test,8,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1205#issuecomment-281802249,1,['test'],['test']
Testability,Hi. You can find information on running and adding a test at:; http://open-babel.readthedocs.io/en/latest/Contributing/Testing.html,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1831#issuecomment-388866388:53,test,test,53,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1831#issuecomment-388866388,2,"['Test', 'test']","['Testing', 'test']"
Testability,"Hi; I have found that i have some problem converting gaussian file using: babel -ig09 ok.log -oxyz test.xyz.; Sometimes, it does not work with openbabel 2.3.1 (and i also think with 2.3.0) while it was working perfectly well with 2.2.3. I was able to isolate the smallest piece of gaussian log file that works with open babel 2.3.1 (as well as with 2.2.3):; Entering Gaussian System, Link 0=/cluster/apps/gaussian/09_A02-vl1/serial/x86_64-Linux/pgi/11.3-64/g09/g09; #; Input orientation: ; ---------------------------------------------------------------------; Center Atomic Atomic Coordinates (Angstroms); Number Number Type X Y Z; ---------------------------------------------------------------------; 1 7 0 -0.477749 1.577049 -1.113058; 2 7 0 0.477755 1.577016 1.113106; 3 6 0 -2.682077 -0.519929 1.073098; ---------------------------------------------------------------------; Standard orientation: ; ---------------------------------------------------------------------; Center Atomic Atomic Coordinates (Angstroms); Number Number Type X Y Z; ---------------------------------------------------------------------; 1 7 0 -10.477749 11.577049 -11.113058; 2 7 0 0.477755 1.577016 1.113106; 3 6 0 -12.682077 -0.519929 1.073098. For both version, it is the standard orientation geometry that is output. This is all perfectly fine. I have notice that since version 2.3.1 (and i guess also 2.3.0), two elements are needed for the file to be correctly read:; 1) The second line with: "" # "" indicating the route section in gaussian; 2) Both the Input and standard orientation; These two facts were not needed in version 2.2.3. For instance, the following file was read without problem in 2.2.3 but not in 2.3.1:; Entering Gaussian System, Link 0=/cluster/apps/gaussian/09_A02-vl1/serial/x86_64-Linux/pgi/11.3-64/g09/g09; #; Input orientation: ; ---------------------------------------------------------------------; Center Atomic Atomic Coordinates (Angstroms); Number Number Type X Y Z; -----------------",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1205:89,log,log,89,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1205,3,"['log', 'test']","['log', 'test']"
Testability,"Hm, I cleaned some stuff and now have one OB installation left. Still. build/test % python ../../openbabel/test/testgauss.py; OpenBabel not found, stopping test.; build/test % echo $PYTHONPATH; /Users/spoel/Alexandria/AlexandriaDB/PYTHON:/Users/spoel/Liquids/PYTHON:/Users/spoel/GG/openbabel-alexandria/install/lib/python3.8/site-packages/openbabel; build/test % ls /Users/spoel/GG/openbabel-alexandria/install/lib/python3.8/site-packages/openbabel; __init__.py	__pycache__/	_openbabel.so*	openbabel.py	pybel.py",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2385#issuecomment-860990372:77,test,test,77,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2385#issuecomment-860990372,6,['test'],"['test', 'testgauss']"
Testability,"Hm, the test failure seems to be related to code I haven't touched. Any suggestion on how to debug this?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2664#issuecomment-1893670412:8,test,test,8,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2664#issuecomment-1893670412,1,['test'],['test']
Testability,"Hmmm...it works for me on Windows. Here's what I did. I took a SMILES file:; ```; C 18; CC 123; CCC 124; CCCC 125; ```; I converted it to an SDF file. Then:; ```; C:\Tools\openbabel\baoilleach\2017build\bin\Release>obabel test.sdf -osmi --filter ""title<'129'""; CC 123; CCC 124; CCCC 125. C:\Tools\openbabel\baoilleach\2017build\bin\Release>obabel test.sdf -osmi --filter ""title<129""; C 18; CC 123; CCC 124; CCCC 125; ```; Can you doublecheck just to be sure, to be sure?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1684#issuecomment-342398444:222,test,test,222,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1684#issuecomment-342398444,2,['test'],['test']
Testability,"Hmmm...seems to work fine on Windows (Travis doesn't run the Windows tests, but I've just done them here). I'll check it out on Linux...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1715#issuecomment-351517687:69,test,tests,69,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1715#issuecomment-351517687,1,['test'],['tests']
Testability,Hold off merging this.. it looks like it is buggy (despite passing make test),MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/148#issuecomment-94899362:72,test,test,72,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/148#issuecomment-94899362,1,['test'],['test']
Testability,"Hopefully fixed in r4081. I set OBJ_DIR in the CMakeLists.txt. Also, I don't rely on LD_LIBRARY_PATH. . Geoff, can you test this on Mac? (Marked as pending...) . Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1019#issuecomment-281797231:119,test,test,119,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1019#issuecomment-281797231,1,['test'],['test']
Testability,"How are you doing the compilation? Is that cross-compilation from a different platform for example? Which ARM device exactly are you using/targeting? I have an old Raspberry Pi that I can possibly use to test. The reason I ask is that while the compilation error can be made to disappear, I would still be worried that the other uses of char in those functions may be silently affected and so I'd like to test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1689#issuecomment-345510647:204,test,test,204,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1689#issuecomment-345510647,2,['test'],['test']
Testability,"Huh, why might that be? I'm importing pybel with `from testbindings import pybel` which is what other test files do. The test passes on my workstation and on CI.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2637#issuecomment-1796421319:55,test,testbindings,55,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2637#issuecomment-1796421319,3,['test'],"['test', 'testbindings']"
Testability,I *think* the problem is that somehow C60 isn't becoming completely aromatic on these systems. I'll see if I can come up with a test for that. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1013#issuecomment-281797136:128,test,test,128,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1013#issuecomment-281797136,1,['test'],['test']
Testability,"I added the webGL viewer to RDKit about a month back (rdkit/rdkit#257), and used it as an opportunity to use IPython v2.0's new [install_nbextension](http://ipython.org/ipython-doc/stable/api/generated/IPython.html.nbextensions.html) feature. This commit is basically a port of the improvements made in the RDKit pull request. This should reduce memory overhead, especially in cases where multiple webGL molecules are drawn. The logic here copies `imolecule.min.js` to the python install directory (a little awkward to put a js file in a python directory, but I couldn't think of a better alternative). When a user requests a webGL drawing, the code checks to see if it's installed, and installs if needed. Note that this breaks webGL for IPython <2.0.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/80:429,log,logic,429,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/80,1,['log'],['logic']
Testability,"I agree with all of this, and I'd like to merge as soon as possible to winkle out any remaining issues asap and to draw a line under this part. I'll see @chrismorl on 22 June at a meeting, and I'll look into the issues surrounding radicals in the run up to that (I don't think it's really going to be a problem). Appveyor is being annoying though. I'll have to skip another test - there's something not right about their system.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1576#issuecomment-305984983:374,test,test,374,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1576#issuecomment-305984983,1,['test'],['test']
Testability,"I also don't think there is likely to be a problem with identifying ; radicals. I'll try to look at the modified code before 22 June, but ; don't depend on this. Chris. On 03/06/2017 17:17, baoilleach wrote:; > I agree with all of this, and I'd like to merge as soon as possible to; > winkle out any remaining issues asap and to draw a line under this part.; > I'll see @chrismorl <https://github.com/chrismorl> on 22 June at a; > meeting, and I'll look into the issues surrounding radicals in the run; > up to that (I don't think it's really going to be a problem).; >; > Appveyor is being annoying though. I'll have to skip another test -; > there's something not right about their system.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/pull/1576#issuecomment-305984983>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AAGFdakjYHBGAYodovrp1Vntm7kQnwTJks5sAYcFgaJpZM4NkO25>.; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1576#issuecomment-305986338:634,test,test,634,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1576#issuecomment-305986338,1,['test'],['test']
Testability,"I also want to submit a test case for this, but the problem is, that I don't know the appropriate way to get a temporary folder files store within the test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/311#issuecomment-225562422:24,test,test,24,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/311#issuecomment-225562422,2,['test'],['test']
Testability,I am :; Enguerran Vanquelef; enguerran.vanquelef@q4md-forcefieldtools.org. I work with:; Opensuse 10.2 64 bits; Openbabel 2.1.1. The bug I have noted:; I have noted a problem with some gaussian log files.; When a gaussian log file contain a ghost atom (named Bq in the log file) no translation is possible. Openbabel give the following message : segmentation fault. other files work fine. regards. Enguerran Vanquelef. Reported by: *anonymous,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/739:194,log,log,194,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/739,3,['log'],['log']
Testability,"I am a new Open Babel user and have installed babel on my MacOSX 10.6 from the package OpenBabel-2.2.3b.mac.zip. I am trying to convert from a .cif file taken from the Cambridge database to a .pdb. However, I receive the following error:. *** Open Babel Error in Find; Unknown space group error (H-M symbol:Fm-3m), cannot match the list of transforms, please file a bug report.; 1 molecule converted; 1 errors 16 audit log messages 1 debugging messages. If anyone has any suggestions as to how this issue can be solved and any future advice I would greatly appreciate it. . Thanks, ; Stephanie; steichm@Sandia.gov. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1011:419,log,log,419,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1011,1,['log'],['log']
Testability,"I am not a fan of this. Unless initialising to zero is a requirement of the code logic, all that we're doing here is slowing things down, and papering over potential problems. I would prefer the code to segfault and for us to fix the underlying problem, rather than the code seemingly working fine but actually not. A good example is PR #2038, where the underlying logic problem remains (it's on my TODO) and was only found due to the unitialized memory. . However, I do think it would be good to run our test suite in an environment that could catch such problems (e.g. address-sanitizer). We actually used to do this back in the day when we used CDash for nightly builds.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2204#issuecomment-625697584:81,log,logic,81,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2204#issuecomment-625697584,3,"['log', 'test']","['logic', 'test']"
Testability,"I am seeing the same test failures, plus a few others, for the 2.3.0 source release of OpenBabel on CentOS 5.5 / i386:. 3 - builder_Test (Failed); 22 - inchiSamples_Test (Failed); 28 - charge-mmff94_Test (Failed); 32 - ffgaff_Test (Failed); 33 - ffghemical_Test (Failed); 35 - ffuff_Test (Failed); 43 - logp_psa_Test (Failed); 53 - pytest_babel (Failed); 54 - pytest_sym (Failed); 55 - pytest_fastsearch (Failed); 56 - pytest_unique (Failed); 57 - pytest_kekule (Failed); 58 - pybindtest_bindings (Failed); 59 - pybindtest__pybel (Failed); 60 - pybindtest_example (Failed). I assume the test numbers differ from the OP's because of different CMake options. Specifically, I configured CMake (version 2.6.4) this way:. JAVA_HOME=/usr/lib/jvm/java-1.6.0-openjdk-1.6.0.0 \; /usr/bin/cmake ../openbabel-2.3.0 \; -DCMAKE_INSTALL_PREFIX=/usr \; -DJAVA_BINDINGS=ON \; -DPERL_BINDINGS=ON \; -DPERL_INCLUDE_PATH=/usr/lib/perl5/5.8.8/i386-linux-thread-multi/CORE \; -DPERL_LIBRARY=/usr/lib/perl5/5.8.8/i386-linux-thread-multi/CORE/libperl.so \; -DPYTHON_BINDINGS=ON -DRUBY_BINDINGS=ON. No OpenBabel binaries, libraries, or environment configuration was yet installed on the build system. This is significant at least because I had to patch a bug in the Ruby bindings' build configuration to build successfully (I will report that bug separately), but it may also affect the tests. I ran ""make"" with no additional options or environment variables, then ""make test"" to produce the test failures. Original comment by: johnbollinger",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797801:21,test,test,21,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797801,5,['test'],"['test', 'tests']"
Testability,"I am sorry for the timing of this report. I know you have all put a lot of work in the code and especially the canonicalization code works very smooth now and I could process the 9.6 million compounds within our Simosa database without any problem using the 2.3.0rc2. ; But these tests were on neutral compounds and it was only yesterday when I started working on the output of the pKa calculator of ChemAxon that I discovered this discrepancy. ; The given ring system is also one of those cases where different programs behave differently. For instance with the ChemAxon tools there are multiple models and in one model the ring is being considered as aromatic while with the other it is not. So I guess this one of those rather particular cases when several rules coincide when using kekulize,cpp on this ring. Original comment by: @gertthijs",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1042#issuecomment-281797753:280,test,tests,280,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1042#issuecomment-281797753,1,['test'],['tests']
Testability,I am trying to convert a file from SMILES to SD. openbabel/bin/babel -ismi TaoR1-5.subset.smi -osdf ; Tao.sdf; Assert at File mol.cpp Line 885; Segmentation fault. I am running RedHatLinux 7.3. Reported by: *anonymous,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/415:111,Assert,Assert,111,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/415,1,['Assert'],['Assert']
Testability,"I am using Mac osx 10.9.5. Do you offer a 2.3.2 open babel for mac?; Thanks a lot!. On Tue, Mar 10, 2015 at 5:03 AM, baoilleach notifications@github.com; wrote:. > Try a more recent version of Open Babel.; > - Noel; > ; > On 9 March 2015 at 21:16, yujietia notifications@github.com wrote:; > ; > > Cmake Config is like following:; > > [image: screen shot 2015-03-09 at 5 14 26 pm]; > > <; > > https://cloud.githubusercontent.com/assets/10948687/6564526/ceb806b4-c67f-11e4-9833-a2e0e3b744ca.png; > > ; > > [image: screen shot 2015-03-09 at 5 14 38 pm]; > > <; > > https://cloud.githubusercontent.com/assets/10948687/6564527/ceb96ec8-c67f-11e4-813a-cfdbbf30bc30.png; > > ; > > And the Cmake Log is like following:; > > Using included inchi library.; > > checking for module 'cairo'; > > package 'cairo' not found; > > Could NOT find Cairo. PNG output will NOT be supported.; > > GUI will not be built; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:14; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Sy",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:689,Log,Log,689,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,2,"['Log', 'test']","['Log', 'test']"
Testability,"I am using Open Babel ver 2.3.1 on a win7 Home machine 64bit; It seems that open babel cannot compute the valence of ANY radical carbon.; Here is how I found this problem. I want to find carbon radicals using SmartsDescriptors.; To do that, I added a SmartsDescriptor to plugindefines.txt in my working folder; according to daylight ; http://www.daylight.com/dayhtml_tutorials/languages/smarts/smarts_examples.html#RAD. I tried with some single-radicals, and the program never found a match for the RandomTest.txt file (see attachment). Trying to understand why, I set these following descriptors (in plugindefines.txt). SmartsDescriptor; v4; [v4]; Number of atoms with valence of 4. SmartsDescriptor; v3; [v3]; Number of atoms with valence of 3. #the following copied from Daylight; SmartsDescriptor; CR; [CX3v3+0]; C radicals. When testing the program I had the following output; obabel RandomTest.txt -h -ismi -otxt --append cansmi formula CR V3 V4; I had as output the following; cansmi formula CR V3 V4; [CH3] CH3 0 0 1; C[CH2] 	C2H5 0 0 2; C[CH]C 	C3H7 0 0 3; C[C](C)C 	C4H9 0 0 4; C=[CH] 	C2H3 0 0 2; C[C]=C 	C3H5 0 0 3; C#[C] 	C2H 0 0 2. No radicals are found (first numeric column). ; That’s because no carbon has a valence of 3 (second numeric column): all carbons always have valence of 4 (last column).; I expected the ""v3"" being equal to 1 for all the tested molecules and the V4 being lower by 1.; It is not clear to me if this is a bug, an unsupported feature or if I didn't really understand what obabel means with ""valence"".; Am I missing something or this is a bug?; Samuele; samuele.sommariva@gmail.com. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1160:834,test,testing,834,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1160,2,['test'],"['tested', 'testing']"
Testability,"I assume your note. > Well I can import babel in python now. relates to an eventual successful installation of openbabel with `pip install openbabel-wheel` from PyPI *instead* of the standard openbabel (and `pip install openbabel`) reported [here](https://github.com/openbabel/openbabel/issues/2018). *Possibly* your Python environment still contains some data by previous attempts to install standard openbabel. Because `openbabel-wheel` aims to fill the gap of standard `openbabel` with a setup as similar as standard openbabel would do (within reason), the Python interpreter plausibly has a hard time to identify the correct files; all while the *installation* of `openbabel` or `openbabel-wheel` is mutually exclusive. Recommendation: set up a virtual Python environment for your project; see Python's documentation [here](https://docs.python.org/3/library/venv.html). With the virtual environment activated, install `pip install openbabel-wheel` only, then test your sample code. Once the work on your project is done, or the source code no longer is used by you, you can simply delete the folder containing the supporting virtual environment. This approach keeps your standard Python installation (outside the virtual environment) unaffected and easy to maintain. Notes:. - `pip list` will tabulate all pip installed Python packages.* The log is about the current environment used, i.e. if called while running the virtual environment, the listing is about the virtual environment only.; - as usual, you can remove a package by `pip uninstall name_of_the_package_to_remove`.; - use [pipreqs](https://pypi.org/project/pipreqs/) to generate a `requirements.txt` file based on the `import` statements in your project. A future user of your work (which could be you) then can run `pip install -r requirements.txt` to resolve the dependencies in a pristine virtual environment. (This package typically ships with [WinPython](https://winpython.github.io/); by now you know how to check/install the pa",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792940138:963,test,test,963,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792940138,2,['test'],['test']
Testability,"I assumed so. :-/ Just disappointed that it wasn't covered by the test; suite. On 3 May 2018 at 21:02, Geoff Hutchison <notifications@github.com> wrote:. > It's probably worth doing a git blame to find out when / how this warning; > was introduced:; > https://github.com/openbabel/openbabel/blame/; > 6c576995969b048186232970ef1b630400544b31/src/formats/smilesformat.cpp#L614; >; > BTW looks like @baoilleach <https://github.com/baoilleach> is the; > culprit. 😉; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/1830#issuecomment-386418572>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGSnMHLxcUiTQhSWkUC0YXVAXY4VZks5tu2I8gaJpZM4TvFhz>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1830#issuecomment-386430953:66,test,test,66,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1830#issuecomment-386430953,1,['test'],['test']
Testability,"I believe it's needed so that instantiating OBConversion() will work (which loads the plugins). Again, I believe that resetting the flags will not affect anything. If you can test and let me know for sure, then I can look into moving the code inside OBConversion's __init__ itself. At the moment, the code is at the start of openbabel.py. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1222#issuecomment-281802931:175,test,test,175,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1222#issuecomment-281802931,1,['test'],['test']
Testability,"I believe that this fixes #1929, at least the immediate issue. The test for atom identity was missing in the isomorphism mapper, except for the first atom to be tested which was tested 'outside the loop' in advance. Thanks to @johnmay for help identifying this. More generally, the existing identity check is a little loose and should be tightened up to check for hydrogen count, charge, isotope and any other attributes I can think of (currently it just tests atomic number, aromaticity and ring membership). In theory, it's just an interface which the user can override, but the defaults should do what is expected, which is to be an exact match rather than something a bit fuzzy.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1940:67,test,test,67,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1940,4,['test'],"['test', 'tested', 'tests']"
Testability,"I believe the problem with plugins has been resolved in 2.2.0 branch, so yes, this bug can be counted as closed.; I'd be happy to assist with the testing/feedback for MinGW installation of OB, I see that the questions show up moderately often. The compilation of executables (e.g. babel.exe) still fails even in 2.2.0 and this is something that I think will have to be addressed eventually. Original comment by: igor_filippov",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/710#issuecomment-281780073:146,test,testing,146,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/710#issuecomment-281780073,2,['test'],['testing']
Testability,I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Linux Slackware 14.2. ## Expected Behavior; Image created by openbabel. ## Actual Behavior; Useless file. ## Steps to Reproduce; obabel -C -i sdf Conformer3D_CID_60961.sdf -o png -O test.png; I do not believe it is limited to that file I get the same issue with another file too.; You can get that file from PubChem:; https://pubchem.ncbi.nlm.nih.gov/compound/60961,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2195:311,test,test,311,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2195,1,['test'],['test']
Testability,"I believe this to be a bug with Open Babel. To me it seems as resurfacing of #1851 on arm64 architecture. ## Environment Information; Open Babel version: 3.1.1+dfsg-6, as packaged in Debian; Operating system and version: Debian unstable a.k.a. sid. ## Expected Behavior; * The following results in a valid SDF file:; ```bash; $ echo 'O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2' | obabel -i smi -o sdf --gen2D; ```; * The following test passes:; ```bash; $ python3 test/testbindings.py TestSuite.testTemplates; ```. ## Actual Behavior; ```bash; $ echo 'O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2' | obabel -i smi -o sdf --gen2D; ==============================; *** Open Babel Error in Convert; Convert failed with an exception; 0 molecules converted; $ python3 test/testbindings.py TestSuite.testTemplates; testTemplates (__main__.TestSuite); Check for regressions to #1851 ... terminate called after throwing an instance of 'std::out_of_range'; what(): vector::_M_range_check: __n (which is 16) >= this->size() (which is 8); Aborted; ```; The failure is observed on arm64 architecture. Tested also on amd64 and mipsel, both worked fine.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2417:429,test,test,429,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417,12,"['Test', 'test']","['TestSuite', 'Tested', 'test', 'testTemplates', 'testbindings']"
Testability,"I break the -at option in a local build, and make test failed to detect; the breakage. Add a regression test for it.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/183:50,test,test,50,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/183,2,['test'],['test']
Testability,"I bumped in this bug report while trying to understand why I couldn't generate the proper protonation state even for simple molecules. I've tried to identify the source of the problem with the version I'm using, v2.3.2 (Ubuntu).; I hope I'm not missing something trivial in my tests... ; Hopefully it can be useful to debugging, I apologize for the long post (and the horrible formatting... blame Markdown).; I've tried the test case Noel reported, and while the charge issue seems to be fixed, protonation state and atom typing are still wrong. Besides, I found the following behavior to be rather puzzling:; <pre><code>obabel -:""OC(=O)c1ccccc1"" -omol2 --gen3D -p 7.4 -O obabel_firstpass.mol2; obabel -imol2 obabel_firstpass.mol2 -omol2 -p 7.4 -O obabel_secondpass.mol2; </code></pre>The molecule obabel_secondpass.mol2 has correct typing and charge (~-1).; The following code replicates the behavior of obabel commands above, generating the proper molecule only at the second pass:; <pre><code>; # Python Obabel/Pybel test; import pybel; ob = pybel.ob; from sys import argv; fp = open('benzoicAcid.smi', 'w'); fp.write('OC(=O)c1ccccc1 benzoicAcid\n'); fp.close(); """"""read SMI and generate Mol2 (first pass)""""""; obc = ob.OBConversion(); obc.SetInAndOutFormats('smi', 'mol2'); obc.OpenInAndOutFiles('benzoicAcid.smi', 'wrong.mol2'); mol = ob.OBMol(); notatend = obc.Read(mol); while notatend:; """"""pybel shortcut""""""; pmol = pybel.Molecule(mol); pmol.make3D(); mol = pmol.OBMol; mol.CorrectForPH(); mol.AddHydrogens(); obc.Write(mol); """"""XXX write molecule with wrong carboxylic atom typing: O.3 and O.2""""""; print ""Atoms count (first pass):"", mol.NumAtoms(); mol = ob.OBMol(); notatend = obc.Read(mol); """""" re-read the wrong molecule""""""; obc = ob.OBConversion(); obc.SetInAndOutFormats('mol2', 'mol2'); obc.OpenInAndOutFiles('op.mol2', 'right.mol2'); mol = ob.OBMol(); notatend = obc.Read(mol); while notatend:; """"""pybel shortcut""""""; pmol = pybel.Molecule(mol); #pmol.make3D(); mol = pmol.OBMol; mol.Cor",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1091#issuecomment-281800260:277,test,tests,277,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1091#issuecomment-281800260,6,['test'],"['test', 'tests']"
Testability,"I can replicate your findings with OpenBabel 3.1.1 (dfsg-6+b1) as provided in Linux Debian 12/bookworm (branch testing). To recover the geometries _at all_, I recommend [Jmol](http://jmol.sourceforge.net/) as an alternative; here, the program recognizes 17 model geometries present. Reading a specific model (e.g., `load models ({3}) ""h2.log""`, cf. [Jmol wiki](http://wiki.jmol.org/index.php/Load/Filter) and [interactive documentation](https://chemapps.stolaf.edu/jmol/docs/?ver=14.32#loadmodels)) as well as the output (e.g., `write ""model_3.xyz"";`, cf. archive attached) equally may be scripted:. ![ezgif com-optimize](https://user-images.githubusercontent.com/19709084/161046607-e7053b1f-afb9-4a30-814c-e4c06bca2cda.gif). [model_3.xyz.zip](https://github.com/openbabel/openbabel/files/8388940/model_3.xyz.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2457#issuecomment-1084470976:111,test,testing,111,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2457#issuecomment-1084470976,2,"['log', 'test']","['log', 'testing']"
Testability,I can't merge this with the Windows compile fail:; ```; C:\openbabel\tools\obrms.cpp(90): error C2057: expected constant expression [C:\openbabel\build\tools\obrms.vcxproj]; 613C:\openbabel\tools\obrms.cpp(90): error C2466: cannot allocate an array of constant size 0 [C:\openbabel\build\tools\obrms.vcxproj]; 614C:\openbabel\tools\obrms.cpp(90): error C2133: 'refcoord' : unknown size [C:\openbabel\build\tools\obrms.vcxproj]; 615C:\openbabel\tools\obrms.cpp(91): error C2057: expected constant expression [C:\openbabel\build\tools\obrms.vcxproj]; 616C:\openbabel\tools\obrms.cpp(91): error C2466: cannot allocate an array of constant size 0 [C:\openbabel\build\tools\obrms.vcxproj]; 617C:\openbabel\tools\obrms.cpp(91): error C2133: 'testcoord' : unknown size [C:\openbabel\build\tools\obrms.vcxproj]; ```,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1961#issuecomment-482173817:736,test,testcoord,736,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1961#issuecomment-482173817,1,['test'],['testcoord']
Testability,"I cannot reproduce this with the latest version of Clang (2.7) or the Clang SVN snapshots. I use the latter to test OB development code. Clang's C++ code is only recently matured. If you're not using Clang 2.7, they do not recommend using it to compile C++. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/999#issuecomment-281796910:111,test,test,111,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/999#issuecomment-281796910,1,['test'],['test']
Testability,"I check the configuration step, and realize that had some missing libraries, like `boost` and `RapidJSON`, for example. Everything if ok now at configuration step ([configuration.log](https://github.com/openbabel/openbabel/files/14922029/configuration.log)). Now, when running `make`, I got new errors ([make.log](https://github.com/openbabel/openbabel/files/14922176/make.log)):. ```; Consolidate compiler generated dependencies of target maeparser; [ 1%] Built target maeparser; Consolidate compiler generated dependencies of target coordgen; [ 4%] Built target coordgen; Consolidate compiler generated dependencies of target openbabel; [ 4%] Building CXX object src/CMakeFiles/openbabel.dir/alias.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/alias.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/alias.cpp:16:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/atom.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/base.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bitvec.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bond.cpp.o; ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:179,log,log,179,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,4,['log'],['log']
Testability,"I confirm the bug:; ```; andrius@tasmanijos-velnias ~ $ obabel ~/src/openbabel-2.4.1/test/files/filterset.sdf -osmi --filter ""title<'129'""; 0 molecules converted; andrius@tasmanijos-velnias ~ $ obabel --version; No input file or format spec or possibly a misplaced option.; Most options must come after the input files. (-i -o -O -m can be anywhwere.). Open Babel 2.4.1 -- Oct 24 2017 -- 16:08:06; Usage:; obabel [-i<input-type>] <infilename> [-o<output-type>] -O<outfilename> [Options]; Try -H option for more information.; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1684#issuecomment-342407778:85,test,test,85,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1684#issuecomment-342407778,1,['test'],['test']
Testability,I continued testing to almost 31k molecules. There were several molecules for which the number of iterations was not enough. I have increased this and improved the error handling as discussed above. I'm now running the test again with these changes and will report the results later.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2158#issuecomment-611502088:12,test,testing,12,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2158#issuecomment-611502088,2,['test'],"['test', 'testing']"
Testability,"I created a CDX file from ChemDraw and tested it. It could not get what I want with `border` attribute and this fix my issue (with my current version of ChemDraw). ; Technically, I am pretty sure about this ""bug"". Thing makes me confused is that this file is the header from ChemDraw themself so it just a little bit weird.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1743#issuecomment-362992751:39,test,tested,39,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1743#issuecomment-362992751,1,['test'],['tested']
Testability,"I didn't. But I see no reason not to merge. On Sun, 3 May 2020, 15:46 Geoff Hutchison, <notifications@github.com> wrote:. > @baoilleach <https://github.com/baoilleach> - did you have a chance to; > test this? I'd like to merge for 3.1 - even if it needs further; > improvement, it's a big step forward.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/pull/2171#issuecomment-623121150>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAALCGPVEZ4EXJIPKABWQADRPV7UDANCNFSM4MFORPFA>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2171#issuecomment-623162498:198,test,test,198,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2171#issuecomment-623162498,1,['test'],['test']
Testability,"I don't know if the patch will be accepted since it may need an associated test case.; As a workaround, waiting for a fix, I think that just adding a blank line before ""DDI:"" line.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1768#issuecomment-375078479:75,test,test,75,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1768#issuecomment-375078479,1,['test'],['test']
Testability,I don't know what to do about the 2 of 3 Travis CI build failures. The output says:; ```; 181/181 Test #181: pybindtest_obconv_writers ........***Failed Error regular expression found in output. Regex=[ERROR] 1.54 sec; ```; How do I have it report the actual error(s)?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1923#issuecomment-455637149:98,Test,Test,98,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1923#issuecomment-455637149,1,['Test'],['Test']
Testability,"I don't know where it came from, but it was probably from ZINC. Daylight's Depict draws it but gives an error message about the stereo. So regard it as a test of error handling. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/996#issuecomment-281796859:154,test,test,154,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/996#issuecomment-281796859,1,['test'],['test']
Testability,"I don't seem to be able to reproduce on my machine running Windows 10 and installing openbabel fresh (`conda install openbabel -c conda-forge`) in a conda environment running Python 3.10.; Could you try to create a new conda environment to test? (And double check that you are running the correct python...). It's a different error message than when `rigid-fragments.txt` is missing (and in that case, it seems like there is a fall-back mechanism that provides a structure).; ```; >obabel -:""BrC/C=C/c1ccc(O[C@@H]2CCCNC2)cc1"" -ismi -omol --gen3d; ==============================; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open ring-fragments-index.txt. OpenBabel08102211013D. 35 36 0 0 1 0 0 0 0 0999 V2000; 15.2854 -6.1963 0.6627 Br 0 0 0 0 0 0 0 0 0 0 0 0; 13.6538 -5.1799 0.3704 C 0 0 0 0 0 0 0 0 0 0 0 0; 13.2738 -4.5221 1.6597 C 0 0 0 0 0 0 0 0 0 0 0 0; 13.1549 -3.1889 1.7844 C 0 0 0 0 0 0 0 0 0 0 0 0; 12.8632 -2.4283 3.0137 C 0 0 0 0 0 0 0 0 0 0 0 0; 13.0643 -2.9261 4.3048 C 0 0 0 0 0 0 0 0 0 0 0 0; 12.9515 -2.0818 5.4201 C 0 0 0 0 0 0 0 0 0 0 0 0; 12.6588 -0.7266 5.2613 C 0 0 0 0 0 0 0 0 0 0 0 0; 12.6605 0.0345 6.3986 O 0 0 0 0 0 0 0 0 0 0 0 0; 13.1570 1.3845 6.2683 C 0 0 2 0 0 0 0 0 0 0 0 0; 14.2087 1.6314 7.3590 C 0 0 0 0 0 0 0 0 0 0 0 0; 13.5728 1.5865 8.7459 C 0 0 0 0 0 0 0 0 0 0 0 0; ...; `",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2522#issuecomment-1210382147:240,test,test,240,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2522#issuecomment-1210382147,1,['test'],['test']
Testability,I don't think that the error in the test file you provide (0.00001 Ang) is sufficient to be classified as a bug. That seems to be an acceptable rounding error. You said that you earlier found a bigger error. We really need a test file that shows a larger error to verify and fix any problem. I'm marking this as pending. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1008#issuecomment-281797069:36,test,test,36,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1008#issuecomment-281797069,2,['test'],['test']
Testability,"I don't think you could silence only that warning, but you can silence all warnings with `ob.obErrorLog.SetOutputLevel(0)` (see https://stackoverflow.com/questions/50419371/how-to-disable-logged-warnings-in-pybel and https://openbabel.org/api/3.0/classOpenBabel_1_1OBMessageHandler.shtml)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2567#issuecomment-2024579930:188,log,logged-warnings-in-pybel,188,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2567#issuecomment-2024579930,1,['log'],['logged-warnings-in-pybel']
Testability,"I don't understand why the residue number gets appended to the residue name here:; https://github.com/openbabel/openbabel/blob/90739b4c5caf8f1af41c968354a5bfbb1f3aa630/src/formats/mol2format.cpp#L672-L673. This in fact leads to an issue that if you load and save *.mol2, the residue number gets appended to the residue name every time. For instance, use obabel on the same file multiple times:; ```sh; $ obabel test.mol2 -O test.mol2; ```. Example file:; ```; $ cat test.mol2; @<TRIPOS>MOLECULE; *****; 9 9 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 C -1.1751 -0.1984 0.0000 C.3 1 MYRES 0.1808; 2 N -2.3491 0.6420 0.0000 N.pl3 1 MYRES -0.3222; 3 C -1.9564 1.9915 0.0000 C.2 1 MYRES 0.0049; 4 C -0.5897 2.0518 0.0000 C.2 1 MYRES 0.0049; 5 N -0.0796 0.7422 0.0000 N.pl3 1 MYRES -0.3222; 6 R1 -3.3224 0.3062 0.0000 H 1 MYRES 0.1478; 7 R2 -2.6318 2.8365 0.0000 H 1 MYRES 0.0791; 8 R2 0.0087 2.9530 0.0000 H 1 MYRES 0.0791; 9 R1 0.9195 0.4933 0.0000 H 1 MYRES 0.1478; @<TRIPOS>BOND; 1 1 2 1; 2 2 3 1; 3 2 6 1; 4 3 4 2; 5 3 7 1; 6 4 5 1; 7 4 8 1; 8 5 1 1; 9 5 9 1; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2024:411,test,test,411,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2024,3,['test'],['test']
Testability,I downloaded the package from https://sourceforge.net/projects/openbabel/?source=typ_redirect and had some pyc files:; ./test/testbindings.pyc; ./test/testbabel.pyc; ./scripts/python/examples/testpybel.pyc,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/354#issuecomment-388572535:121,test,test,121,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/354#issuecomment-388572535,5,['test'],"['test', 'testbabel', 'testbindings', 'testpybel']"
Testability,"I downloaded the source code from:; https://github.com/openbabel/openbabel/releases/tag/openbabel-3-1-1. I tried both: openbabel-3.1.1-source.tar.bz2; <https://github.com/openbabel/openbabel/releases/download/openbabel-3-1-1/openbabel-3.1.1-source.tar.bz2>; and Source code; <https://github.com/openbabel/openbabel/archive/refs/tags/openbabel-3-1-1.zip>; (zip); <https://github.com/openbabel/openbabel/archive/refs/tags/openbabel-3-1-1.zip>; . Both of their openbabel3.1.1/test/testdistgeom.py files were still in their; ""pre-fix"" version according to the bug journal; <https://github.com/openbabel/openbabel/pull/2218/commits/7de27f309db5f7ec026ef5c5235e5b33bf7d1a85#diff-b0c1c91ef890aac128d98b666512172136a7b4d49ec74b5bf7f5f3922b0837d4L50>.; I manually changed line 45-51 according to the journal and that then fixed; my failed test ""test_distgeom"". On Tue, 19 Mar 2024 at 04:45, fredrikw ***@***.***> wrote:. > As mentioned in my comment in #2578; > <https://github.com/openbabel/openbabel/issues/2578>, this was fixed; > after the release of 3.1.1 so the question is if you use the trunk version?; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2217#issuecomment-2006341435>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AE3HCUALMKVWZT5EBA3XF4LYY73MJAVCNFSM4NAXAKSKU5DIOJSWCZC7NNSXTN2JONZXKZKDN5WW2ZLOOQ5TEMBQGYZTIMJUGM2Q>; > .; > You are receiving this because you commented.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2217#issuecomment-2007593262:473,test,test,473,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2217#issuecomment-2007593262,3,['test'],"['test', 'testdistgeom']"
Testability,"I e-mailed the original poster of https://sourceforge.net/p/openbabel/mailman/message/34502202/ to follow-up, and present my hypothesis after researching the HRESULT error code that appeared in the attached log. openbabel_csharp.dll may fail to load in this manner if other DLLs it depends upon (notably, the Microsoft VC++ Run-Time library DLL corresponding to the Visual Studio used to build OB) are not present on the IIS server. The DLLs must match version / target architecture (32 or 64bit) / build configuration (debug or release). I'm unaware of the specifics of the original poster's machine configurations, but recommended carefully verifying that all depedent DLLs exist and match between the two machines. Original comment by: stonelight",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1347#issuecomment-281804872:207,log,log,207,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1347#issuecomment-281804872,1,['log'],['log']
Testability,"I encounter another problem during working the developmental code on March 1st. I follow the instruction of the CMake (http://openbabel.org/wiki/CMake) OpenBabel to compile the development code on RedHad Linux of 64bit box. First, the newly compiled babel program fails making an index output file as follows. $ babel ten.smi -osf. babel: cannot write output format!. Open Babel 2.2.99 -- Mar 1 2010 -- 15:53:14. Usage: babel [-i<input-type>] <name> [-o<output-type>] <name>. Try -H option for more information. However, it can convert the SMILES file into a SDF file without any problem by “babel -ismi ten.smi -osdf ten.sdf”. Yes, it can write SDF output, but not index.... . Second, during the “make test”, some tests failed as follows:; ; Running tests... Test project path/to/build/openbabel. Start 1: uniqueid_Test. 1/37 Test #1: uniqueid_Test .................... Passed 0.01 sec. Start 2: smiles_Test. 2/37 Test #2: smiles_Test ......................***Exception: SegFault 0.04 sec. Start 3: stereo_Test. 3/37 Test #3: stereo_Test ......................***Exception: SegFault 0.04 sec. Start 4: tetrahedral_Test. 4/37 Test #4: tetrahedral_Test ................. Passed 0.00 sec. Start 5: tetranonplanar_Test. 5/37 Test #5: tetranonplanar_Test .............. Passed 0.00 sec. Start 6: tetraplanar_Test. 6/37 Test #6: tetraplanar_Test ................. Passed 0.00 sec. Start 7: cistrans_Test. 7/37 Test #7: cistrans_Test ....................***Exception: SegFault 0.02 sec. Start 8: stereoperception_Test. 8/37 Test #8: stereoperception_Test ............ Passed 0.03 sec. Start 9: aromatest_Test. 9/37 Test #9: aromatest_Test ...................***Exception: SegFault 0.03 sec. Start 10: atom_Test. 10/37 Test #10: atom_Test ........................ Passed 0.00 sec. Start 11: bond_Test. 11/37 Test #11: bond_Test ........................ Passed 0.00 sec. Start 12: cansmi_Test. 12/37 Test #12: cansmi_Test ...................... Passed 1.27 sec. Start 13: cmlreadfile_Test. 13/37 Test #13: cml",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:703,test,test,703,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,6,"['Test', 'test']","['Test', 'test', 'tests']"
Testability,I filed the cclib test case as #3565280. Original comment by: @mbanck,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1205#issuecomment-281802264:18,test,test,18,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1205#issuecomment-281802264,1,['test'],['test']
Testability,"I finally got the AFL fuzz tester to work. This was on Linux with a static build. The build failed when linking the obabel executable, but works if you do it manually after removing the ""-rdynamic"" from the VERBOSE=1 output. Anyway, I ran it for a while (-ismi -onul) and fixed the segfaults it found:; 1. SMILES starting with a bond symbol; 2. Self-bonding through ring closures; 3. Square planar and tetrahedral stereo with 5 nbors (where the nbor might be described by a ring closure). Anything that's a reaction SMILES also segfaults if read as smi (I rejected these SMILES when testing), but hopefully we can fix this as described in my enhancement proposal. I also tightened up the parsing of square planar stereo so that only @SP1/2/3 are accepted.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1770:27,test,tester,27,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1770,2,['test'],"['tester', 'testing']"
Testability,"I for one cannot judge the beauty of the fixes or solutions, but #1902 fixes the problem (just tested it), does not unfix the problem fixed by #1852, and it adds tests to prevent future regression on this problem, so as far as I am concerned it would be great to merge it. thanks to you all @baoilleach @fredrikw and @serval2412 for developing and maintaining this library.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1921#issuecomment-454539921:95,test,tested,95,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1921#issuecomment-454539921,2,['test'],"['tested', 'tests']"
Testability,"I forgot to say that this bug is highlighted by testsym.py, which is failing since May 8th (see the build dashboard). Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/983#issuecomment-281796616:48,test,testsym,48,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/983#issuecomment-281796616,1,['test'],['testsym']
Testability,"I found a Linux system that I could set up for testing, so I added a test. It's a Python test that relies on itertools.combinations, is that ok?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1890#issuecomment-424643667:47,test,testing,47,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1890#issuecomment-424643667,3,['test'],"['test', 'testing']"
Testability,"I found a simple way to update the result files for SMARTS, formula and formal charge tests. But not for the canonstable test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2648#issuecomment-1842919659:86,test,tests,86,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2648#issuecomment-1842919659,4,['test'],"['test', 'tests']"
Testability,"I found that too but that's not quite good enough as a description. Let me chase this up a bit with the CCDC. If I can't find anything, we can assume that Zeo++ is correct and use that as a test file. We can make the numbers optional as you suggest - it's choosing the default that's the difficult part.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1648#issuecomment-338244564:190,test,test,190,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1648#issuecomment-338244564,1,['test'],['test']
Testability,I found the problem to the failing canonical test. There was a bug in my new code when there were multiple ring systems in the molecule. It is now fixed and thereby I could also revert the changes to the canonstable file meaning that there are no longer any changes to the canonicalization.; So I think I am done with this now!,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2648#issuecomment-1999103724:45,test,test,45,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2648#issuecomment-1999103724,1,['test'],['test']
Testability,I got a seg fault when trying to call Separate function with OBMol object. ; Here is the output for the testing program file attached. $ ./OBtest; first compound read; Segmentation fault. input file name lig.smi has only one record:; c1(nc2c(cn1)cccc2)[NH2].c1(ccc(cc1)[SH])[NH2] 12356. Reported by: yongjinxu,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/914:104,test,testing,104,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/914,1,['test'],['testing']
Testability,"I got the same on SL5, either a segfault appears of (after commenting some of the code), or the test run displays: ""Canonical SMILES: The molecular weight is 0.0"" (which is obviously incorrect) and nothing more.; Usually the segfault appears in case of the code throwing an exception, but not only then, I guess.; Is this planned to be fixed somehow?. Original comment by: joannakocot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1012#issuecomment-281797119:96,test,test,96,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1012#issuecomment-281797119,1,['test'],['test']
Testability,I guess since it can take a while it may be nice to log which iteration it is at to stdout.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1333334223:52,log,log,52,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1333334223,1,['log'],['log']
Testability,"I had libxml2 compiled from source with configure flags; --without-threads --disable-shared. While it compiled fine the resulting library didn't link with OB.; After your advice I tried compiling libxml2 from source as provided at MinGW, unfortunately the script they have did not run for me.; So now I installed libxml2 binary library (-dev and -dll packages) from; http://sourceforge.net/projects/mingw/files/MSYS/libxml2/; as well as libiconv (dll only) and zlib (dll only). This allows for openbabel to compile and tests to run, but it's certainly not a static library which was the goal from the beginning as it requires 3 additional DLLs to load. Original comment by: igor_filippov",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1037#issuecomment-281797713:519,test,tests,519,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1037#issuecomment-281797713,1,['test'],['tests']
Testability,"I have 3 installations of Open Babel I am testing with:. (1) Installed on Mac OS X 10.10.1, using v2.3.1 installer from downloads page; (2) Installed on Mac OS X 10.10.1, building from git repository, v2.3.90; (3) Installed on Ubuntu 14.04, building from git repository, v2.3.90. First, there is some ambiguity in the [documentation](http://open-babel.readthedocs.org/en/latest/3DStructureGen/multipleconformers.html) for confab for number of conformers:. In options list: **--conf** used. ```~~; --conf <#confs>; ```~. In examples: **-nconfs** used. ```~~; obabel bostrom.sdf -O confs.sdf --confab -nconfs 100000; ```~~. I am unable to verify which one is correct, because I am unable to get confab to work properly, but this should be cleared up in the documentation eventually. Confab; -----------------; Based on the [documentation](http://open-babel.readthedocs.org/en/latest/3DStructureGen/multipleconformers.html) example:. ```~~; obabel bostrom.sdf -O confs.sdf --confab -nconfs 100000; ```~~. My input:. ```~~; $ obabel r.xyz -O a.xyz --confab; ```~~. Outputs:; (1) Mac, 2.3.1 - confab not recognized, so it just converts xyz to xyz. ```~~; 1 molecule converted; ```~~. (2) Mac, 2.3.90, fails to build forcefield (this is invariant to number of rotatable bonds). ```~~; **Starting Confab 1.1.0; **To support, cite Journal of Cheminformatics, 2011, 3, 8.; ..Input format = xyz; ..Output format = xyz; ..RMSD cutoff = 0.5; ..Energy cutoff = 50; ..Conformer cutoff = 1000000; ..Write input conformation? False; ..Verbose? False. **Molecule 1; ..title = 0 1; ..number of rotatable bonds = 0; !!Cannot set up forcefield for this molecule; !!Skipping. 0 molecules converted; ```~~. (3) Ubuntu, 2.3.90, confab not recognized, so it just converts xyz to xyz, same as (1). ```~~; 1 molecule converted; ```~~. Genetic Algorithm; -----------------; Documentation input:. ```~~; obabel startingConformer.mol -O ga_conformers.sdf --conformer --nconf 30; --score rmsd --writeconformers; ```~~. My input:. `",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1330:42,test,testing,42,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1330,1,['test'],['testing']
Testability,"I have a 1.0 install version of InChI which doesn't compile with OpenBabel 2.2. . /usr/bin/ld: Undefined symbols:; _GetINCHIKeyFromINCHI. This is because of the new function in InChI for producing a key. While possible to support both versions though #ifdef checks, it's okay, I think, to have this compilation problem. Few use InChI and fewer use the older code. I wanted to disable InChI support for my build. The configure script says. --disable-inchi do not build the InChI library. I tracked the problem down to this line:. if test x""$LIBINCHI"" = ""x"" -o ""$inchi"" = ""yes""; then. It should be. if test x""$LIBINCHI"" = ""x"" -o ""$inchi"" = ""no""; then. That is, ""if the inchi code could not be found or the inchi option is *disabled*"". . Reported by: dalke",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/801:532,test,test,532,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/801,2,['test'],['test']
Testability,"I have a molecule which SMILES is `CC(C)CC(=O)Nc1cc(-c2ccc(C(N)=O)cc2C(=O)O)cc(C2CC(C)(c3ccccc3)c3cc(C(=N)N)ccc3N2)c1`, after add H by openbabel, there is a `C` with `+1`. <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: win10 and centos7. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; ![image](https://user-images.githubusercontent.com/5920217/114177985-a98de380-996f-11eb-84ed-574ab5b5d8ba.png). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; ![image](https://user-images.githubusercontent.com/5920217/114178002-b0b4f180-996f-11eb-9a7a-66dabb2e9e89.png). ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; ```; obabel -:'CC(C)CC(=O)Nc1cc(-c2ccc(C(N)=O)cc2C(=O)O)cc(C2CC(C)(c3ccccc3)c3cc(C(=N)N)ccc3N2)c1' -O output.sdf -p 7; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2353:1635,test,test,1635,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2353,1,['test'],['test']
Testability,"I have a program which generates python scripts that use open babel to read CIF files, perform energy calculations on them, and then output a new CIF file. It works almost always, but seems to fail on reading a few CIF files that are seemingly properly formatted. I have included a problem CIF file, the python script used to read and operate on it, and a log file of the error that is generated when this python script is run. Using Open Babel version 2.2.3, running on Ubuntu Linux. Reported by: stewenner",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1122:356,log,log,356,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1122,1,['log'],['log']
Testability,"I have a strange problem with the conversion of charged structures from; InChI to Canonical smiles on 64bit architectures (I am using the Ruby; interface, but the effect seems to be reproducible also on the command; line). It gives the expected result on 32 bit machines (tested with; Ubuntu Hardy + Open Babel 2.2.2, Ubuntu Intrepid + Open Babel 2.2.3):. echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -ocan --; [Na+].F[B-](F)(F)F; 1 molecule converted; 1 info messages 21 audit log messages. but the positive charge is missing on 64bit machines (tested on 2 machines with; Debian Lenny, Open Babel 2.2.2 and 2.2.3). echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -ocan --; [Na].F[B-](F)(F)F; 1 molecule converted; 1 info messages 21 audit log messages. The same problem occurs without canonification:. echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -osmi --; [B-](F)(F)(F)F.[Na]; 1 molecule converted; 1 info messages 21 audit log messages. PS: Noel O'Boyle has confirmed the problem on 64bit Linux, but it works on 64bit Windows. Reported by: chelma",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/962:272,test,tested,272,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/962,5,"['log', 'test']","['log', 'tested']"
Testability,"I have attached a patch, which fixes the following three things:. 1. Starts intensities parsing at the third token (i.e. after ""IR INTENSITIES""). 2. Keeps on reading displacements if there is at least one mode, not only if there are at least two modes. 3. Rewrote the displacement logic with respect to translational/rotational modes. numDisp is abused a bit now, but should have the correct value at the end of each mode block. Geoff, can you check the above for some GAMESS files? I only ever saw the attached ""C6H6_631++_631_B3LYP5.gamout"" file. Original comment by: @mbanck",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/881#issuecomment-281795119:281,log,logic,281,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/881#issuecomment-281795119,1,['log'],['logic']
Testability,"I have come across a problem with certain smiles strings with regard to generating a fs index and probing against that index. Consider the file test.smi; c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C chem001. build a fs index; $ babel -ismi test.smi -ofs test.fs; build properly, converting 1 molecule. probing against the fs with the exact same input smiles:; $ babel test.fs hitlist.smi -s'c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C' -at0.85; yields 0 molecules converted. Rerunning the same probe but with a lower tanimoto threshold results in a hit:; $ babel test.fs hitlist.smi -s'c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C' -at0.80; yields 1 molecule converted. Direct comparison works:; $ obabel -:'c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C' -:'c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C' -ofpt; yields a tanimoto of 1. and probing directly against the original .smi file:; $ babel test.smi hitlist.smi -s'c1cccc(c1[N+](=O)[O-])Sc1ccc(cc1)C' -at0.85; yields 1 molecule converted. In my tests using ~85 probe molecules against a 160,000-entry database this last method (direct comparison to the smi file) doesn't always work. However, the molecules that give problems when probing against the fs index are different from the molecules that give problems when probing directly against the smi file. My OS is Mac OSX 10.6.8; This error reproduces on Open Babel 2.3.0 and 2.3.9 (dev version). Christopher Mayne; cgmayne@gmail.com. Reported by: cmayne",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1135:144,test,test,144,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1135,7,['test'],"['test', 'tests']"
Testability,"I have not confirmed yet if this bug exists also on the SVN trunk, but it certainly exists on the 2.1 branch right now. The invalidsmiles test works fine up until the tests to read random binary data. This evidently causes an infinite loop immediately:. The main crash:; Program received signal EXC_BAD_ACCESS, Could not access memory.; Reason: KERN_INVALID_ADDRESS at address: 0xbf7ffff0; 0x0115120c in zlib_stream::basic_unzip_streambuf<char, std::char_traits<char> >::underflow (this=0x0) at zipstreamimpl.h:341; 341 basic_unzip_streambuf<charT, traits>::underflow(void). Here's a backtrace:; #13525 0x01150fd4 in zlib_stream::basic_unzip_streambuf<char, std::char_traits<c; har> >::fill_input_buffer (this=0x313530) at zipstreamimpl.h:493; #13526 0x0115111c in zlib_stream::basic_unzip_streambuf<char, std::char_traits<c; har> >::unzip_from_stream (this=0x313530, buffer=0x280fa04 """", buffer_size=4092); at zipstreamimpl.h:462; #13527 0x01151374 in zlib_stream::basic_unzip_streambuf<char, std::char_traits<c; har> >::underflow (this=0x313530) at zipstreamimpl.h:357; #13528 0x94c6cab0 in std::basic_streambuf<char, std::char_traits<char> >::uflow ; (); #13529 0x0114664c in OpenBabel::LineEndingExtractor::operator() (this=0x312834, ; src=@0x313530) at ../include/openbabel/lineend.h:171; #13530 0x01150a34 in OpenBabel::FilteringInputStreambuf<OpenBabel::LineEndingExt; ractor>::underflow (this=0x312810) at ../include/openbabel/lineend.h:132; #13531 0x94c6cab0 in std::basic_streambuf<char, std::char_traits<char> >::uflow ; (); #13532 0x94c6d1bc in std::basic_streambuf<char, std::char_traits<char> >::xsgetn; (); #13533 0x94c54da8 in std::istream::read (). Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/649:138,test,test,138,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/649,2,['test'],"['test', 'tests']"
Testability,"I have observed something curious about variations in the way OpenBabel assigns Gasteiger charges. For example,. babel -isdf molecule.sdf -omol2 molecule_H.mol2 -h. produces a molecule with an overall charge that is essentially 0. However, the command. babel -isdf molecule.sdf -omol2 molecule_H.mol2 -p 7.4. produces a molecule that has an overall charge of -9.0. Both output files have had the same number of hydrogens added. Is this what's supposed to happen?. I have attached the input file for others to test. This seems to happen with both 2.2.3 and 2.3.0,. Reported by: dhouston6",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1091:509,test,test,509,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1091,1,['test'],['test']
Testability,"I have obtained the attached CIF file for Prussian Blue directly from the journal website PR Bueno, et al., J. Phys. Chem. C, 2008, 111(34), 13264-71. The IUCr CIF test site confirms that both its basic and full structural information are without error. However, when I attempt a conversion under Windows 2003 using the most current OpenBabel 2.2.0 (converting to CIF - in order to use the simplest conversion - or anything else for that matter), I get the following report: ; =============================; *** Open Babel Warning in OpenBabel::CIFFormat::ReadMolecule; Problems reading a CIF file: no structure found !; 0 molecules converted; ============================; I am no expert in CIF - could someone advise how to correct the file? Why is Babel having a problem?; ; I actually wish to put the structure into Jmol, which also rejects the CIF file with ""Error reading file at line 5: String index out of range: -31 .... type mol"". LesG. lesg@users.sourceforge.net. . Reported by: lesg",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/814:164,test,test,164,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/814,1,['test'],['test']
Testability,"I have only tested on OS X. The main thing I could see being an issue across platforms is using pkg-config to locate the Open Babel install. I added a fallback so if pkg-config fails, `/usr/local/` is guessed as the install location. If this is different across platforms, it should be possible to add some platform detection with alternative paths. I suspect this won't get a lot of use, considering it seems no one noticed setup.py has been broken for ages until Joshua fixed it a couple of weeks ago – I guess everyone just uses the cmake options when compiling. However this is useful for anyone who wants to install using pip and for virtualenv support. With regards to the name, the -python suffix seems uncommon on PyPI, seeing as by definition everything is python. If you are doing `pip install openbabel` you know you are getting python bindings. With the linux package managers I assume the -python suffix is necessary because Open Babel itself is also a package.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/65#issuecomment-33211681:12,test,tested,12,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/65#issuecomment-33211681,1,['test'],['tested']
Testability,"I have some probles hen converting data from g03 output to mol2. 1. I have problems with C.4 atoms . In the file mol11_min.mol2, atom N1 ( index 3 ) has been assigned to N.3 and not to a N.4 ; If I do the same test with the old babel 1.6 I have the good assignation. Also atom S1 ( index 22 ) has S.2 assignation, different from babel 1.6, that have S.3 Type. In this case, I do not know what is the right one. I used :; - Linux UBUNTU; - g77 compiler; - openbabel 2.1.1. Jaime. jaimerubio07@gmail.com. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/681:210,test,test,210,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/681,1,['test'],['test']
Testability,"I have some probles hen converting data from g03 output to mol2. 1. I have problems with C.cat atoms ( from guanidinium ) that are not detected. In the file mol8_min.mol2, atom C25 ( index 35 ) has been assigned to C.2 and not to a C.cat.; If I do the same test with the old babel 1.6 I have the good assignation. I used :; - Linux UBUNTU; - g77 compiler; - openbabel 2.1.1. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/680:257,test,test,257,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/680,1,['test'],['test']
Testability,"I haven't tested and I don't do minimizations that often but you could try with; `obabel CMNPD-export.sdf -O target.sdf --minimize --sd -ff MMFF94 -e` with the `-e` part telling obabel to continue on error. In general, I think that the ""specialized"" commands are less supported and maintained so if you manage to do something through the obabel interface it will be better.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2719#issuecomment-2303927317:10,test,tested,10,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2719#issuecomment-2303927317,1,['test'],['tested']
Testability,"I just compiled 2.2.0 to see if the problem exists there, too.; It's a bit more verbose now, but problem persists. Open Babel 2.2.0 -- Nov 25 2008 -- 17:53:21. Yours,; Steffen. zcat pubchem/Compound_00300001_00325000.sdf.gz | babel -f 249 -l 249 -isdf -omol /tmp/313325.mol; 1 molecule converted; 17 audit log messages. zcat pubchem/Compound_00300001_00325000.sdf.gz | babel -f 250 -l 250 -isdf -omol /tmp/313325.mol; ==============================; *** Open Babel Warning in ReadMolecule; WARNING: Problems reading a MDL file; Cannot read atom and bond count; Expected standard 6 character atom and bond count. 0 molecules converted; 1 warnings 2 audit log messages . Original comment by: sneumann",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/831#issuecomment-281794060:306,log,log,306,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/831#issuecomment-281794060,2,['log'],['log']
Testability,"I just did a short test: it works :). Thanks. > Le 27 déc. 2017 à 22:56, Geoff Hutchison <notifications@github.com> a écrit :; > ; > This should work in master, using -otxyz -xc to use atom classes as atom types directly, no CML required.; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1732#issuecomment-354255717:19,test,test,19,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1732#issuecomment-354255717,1,['test'],['test']
Testability,"I just don't understand it because it doesn't cause any problems on any of our test systems (see http://my.cdash.org/index.php?project=Open+Babel&display=project). The only thing I can suggest is to repeat the whole thing from scratch. Remove all of the folders, and check it out from subversion again, and so forth. Maybe it didn't checkout correctly the first time. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1111#issuecomment-281800644:79,test,test,79,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1111#issuecomment-281800644,1,['test'],['test']
Testability,"I just found a possible bug in the identification of ester bonds.; Basically, the method OBBond.IsEster() returns true with . HOW TO REPRODUCE IT:; ```; $ cat> testester.py << EOF; import pybel; ob = pybel.ob; smi = [ 'OC(=O)', 'CC(O)=O', 'O=C(O)c1ccccc1']; for s in smi:; mol = pybel.readstring('smi',s).OBMol; for b in ob.OBMolBondIter(mol):; if b.IsEster():; print ""FOUND ESTER BOND""; ^D; $ python testester.py; FOUND ESTER BOND; ```; The test is positive with formic, acetic and benzoic acid, and it doesn't seem to be affected by the input format (I've tested Mol2). Reported by: @sforli. Original Ticket: [openbabel/bugs/970](https://sourceforge.net/p/openbabel/bugs/970)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1349:160,test,testester,160,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1349,4,['test'],"['test', 'tested', 'testester']"
Testability,I just used the HIN file provided from @tulebaev in #1569 as the sample file for testing. It is available here: https://github.com/openbabel/openbabel/files/1008391/H2O2_min.hin.txt,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1755#issuecomment-358119657:81,test,testing,81,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1755#issuecomment-358119657,1,['test'],['testing']
Testability,"I knew `#1` and `#2` to be unspecific about the double bond both because of the wiggle bonds CDKDepict uses .and. because using the optional CIP labeling (second pull-down menu, last entry) thankfully assigns both (R)/(S) and (E)/(Z) if applicable. What I still lack with SMILES is e.g., to recognize manually well enough if the substitutents around a double bond are in cis, or trans relationship. As with but-2-ene, the four permutations are simpler to recognize (either `//`, or `\\` point to the same direction for the cis; and either opposing `/\`, or `\/` for the trans relationship):. ![2022-03-30_cdkdepict_CIP](https://user-images.githubusercontent.com/19709084/160873791-cd5ca720-9dbf-4a4c-96b1-e504890a1204.png). That's when tested programs may help. Ok. Thank you; case closed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1083306380:736,test,tested,736,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1083306380,2,['test'],['tested']
Testability,"I looked at the test failures briefly and it looks like there are two problems. No1 is with the pointcloud format where the coordinates are different than expected. I guess that this might be due to how the actual vdW surface is generated. The other problem I get is with testFPS.test_multimol_default where there is a ValueError due to a mix of iteration and f.read() (ValueError: Mixing iteration and read methods would lose data).; The latter I fixed by changing the relevant code to:; ```; with open(filename) as f:; # Ensure there is a header; line = f.readline(); self.assertEqual(line[:5], ""#FPS1"", line); # Skip the rest of the header; ids = []; inheader = True; for line in f:; if line[:1] != ""#"":; inheader = False; self.assertEqual(line.count(""\t""), 1, ""Wrong number of fields?: %r"" % (line,)); hex_fp, id = line.rstrip(""\n"").split(""\t"", 1); ids.append(id); elif not inheader:; self.fail(""Second header?: %r"" % (line,)); if inheader:; self.fail(""Reached end of file too early, after: %r"" % (line,)); ```. I think that the logic would be unchanged by this. With this change and removing the pointcloud-test I could get it to pass all tests locally at least...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1923#issuecomment-472416430:16,test,test,16,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1923#issuecomment-472416430,7,"['assert', 'log', 'test']","['assertEqual', 'logic', 'test', 'testFPS', 'tests']"
Testability,"I made the test case easier to pass the test for now. I think it is allowed as distance geometry is [described as ""unstable"" in the document](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html#specify-speed). I want to improve distance geometry anyway and I want to have advice about how to implement `CheckStereoConstraints()`. I'm currently comparing input SMILES and output SMILES, but it does not seem to be working...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1875#issuecomment-557651006:11,test,test,11,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1875#issuecomment-557651006,2,['test'],['test']
Testability,"I mean, I think we should still add a unit test for ""no, there is not a hydrogen at the origin"". Let's take the hydrogens as a separate issue / pull request. @baoilleach - there's a weird valence issue with this file -- the azide is getting a hydrogen in the middle and at the end. I suspect the problem is that the SDF is mal-formed (i.e., even ChemDraw puts an ""h"" on the terminal N). However, =N= should never be protonated.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1981#issuecomment-489327719:43,test,test,43,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1981#issuecomment-489327719,1,['test'],['test']
Testability,"I misunderstood the meaning of `SetChiralityPerceived()`. I intended to set chirality based on the current 3D structure instead of cached one, but it was opposite. I replaced it to `StereoFrom3D()`, but the test still fails. Maybe SMILES generation is not dependent on these settings?. In addition to distance geometry related test failures, there are many tests failing. I'm not sure rebase was successful. Closing this pull request and branching from the current master may make problem easier. https://github.com/openbabel/openbabel/blob/2f51910df2aebbfd1258a2c1100d50a3e1ec7d9e/src/distgeom.cpp#L915",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1875#issuecomment-555329978:207,test,test,207,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1875#issuecomment-555329978,3,['test'],"['test', 'tests']"
Testability,I need the static compiled library in order to statically link it to another program. I'm getting ready to do a little benchmark with the smina docking program developed by Dr. Koes and am compiling two static copies of it so both computers I'm benchmarking (Core i5 laptop vs. Raspberry Pi 4 B+) have the same program. Open Babel 3 is required for compiling it. I'm compiling the i386 version and ARM version in the same Docker container using Debian Buster since it is most similar to Raspberry Pi OS (Raspbian).,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2377#issuecomment-857353697:119,benchmark,benchmark,119,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377#issuecomment-857353697,2,['benchmark'],"['benchmark', 'benchmarking']"
Testability,"I observe the sequence of the atom indices in conformer 2 is inverse of the sequence of atom indices 3. For instance in the firs line. 11 6 1 2 134.140. vs. 2 1 6 11 137.586. If it is the mere rearrangement of four columns, why not relying on awk in a pattern like. ```shell; awk '{ if ($4 > $1) { print $1, $2, $3, $4, $5 } else { print $4, $3, $2, $1, $5} }' test.txt; ```. which for file `test.txt`, a concatenation of the two data sets of. ```; 11 6 1 2 134.140; 11 6 1 8 -39.032; 11 6 3 5 103.856; 11 6 3 2 -135.819; 11 6 3 4 -22.520; 2 1 6 11 137.586; 8 1 6 11 -35.620; 5 3 6 11 102.922; 2 3 6 11 -136.973; 4 3 6 11 -23.804; ```. yields. ```; 2 1 6 11 134.140; 8 1 6 11 -39.032; 5 3 6 11 103.856; 2 3 6 11 -135.819; 4 3 6 11 -22.520; 2 1 6 11 137.586; 8 1 6 11 -35.620; 5 3 6 11 102.922; 2 3 6 11 -136.973; 4 3 6 11 -23.804; ```. @fredrikw Does the observation following ""the other direction"" for e.g. ` 11 6 1 8 -39.032` (first file, second line) now for `8 1 6 11` now an angle of +140.968 degrees? I.e. ```shell; $ awk '{ if ($4 > $1) { print $1, $2, $3, $4, $5 } else { print $4, $3, $2, $1, 180+$5} }' test.txt; 2 1 6 11 314.14; 8 1 6 11 140.968; 5 3 6 11 283.856; 2 3 6 11 44.181; 4 3 6 11 157.48; 2 1 6 11 137.586; 8 1 6 11 -35.620; 5 3 6 11 102.922; 2 3 6 11 -136.973; 4 3 6 11 -23.804; ```. [test.txt](https://github.com/openbabel/openbabel/files/13379413/test.txt)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2644#issuecomment-1814678145:361,test,test,361,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2644#issuecomment-1814678145,5,['test'],['test']
Testability,I opened up #167 but I'm seeing issues with tests (MMFF94 and Gasteiger). Can you take a look? I don't have time tonight to see what's happening.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/166#issuecomment-97972694:44,test,tests,44,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/166#issuecomment-97972694,1,['test'],['tests']
Testability,"I previous ""fix"" several years ago added successive calls to BeginModify/EndModify in AddHydrogens to ensure that coordinates were set (PR#1665519). Unfortunately, this completely blows away all but the set conformer. This, despite the AddHydrogen code correctly handling the multiple conformer cases (at least it looks like it). I believe that all that is needed to resolve the original bug is to make sure coordinates are set on atoms. The original bug report claims test cases were added for the bug and this change doesn't result in any test failures, so I assume it fixes the original bug while retaining multiple conformers.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/201:469,test,test,469,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/201,2,['test'],['test']
Testability,I ran into an issue where overwriting my LD_LIBRARY_PATH causes most of the tests to fail.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1588:76,test,tests,76,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1588,1,['test'],['tests']
Testability,"I ran obenergy in the debugger with breakpoint set -f kekulize.cpp -l 88. Basically, the routines in kekulize.cpp is called for the .log file not for the .sdf file. When a correct .sdf file is used, OB reads everything from the file, so needs_kekulization remains false in mdlformat.cpp.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2366#issuecomment-831515578:133,log,log,133,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2366#issuecomment-831515578,1,['log'],['log']
Testability,"I read a mol2 file with pybel.; I want to rename some atoms (name, type) in some special cases.; For this, I test if the type (atom.GetType()) equals a given string. The problem is that pybel assigns a different type (eg : C+) instead of type present in the mol2 file (eg : C2). Reported by: lorenzo21",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/861:109,test,test,109,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/861,1,['test'],['test']
Testability,"I recently added a new test ""smilesmatch"" which reads strings as SMILES ; and SMARTS. Since SMARTS is a superset of SMILES, a string should match ; itself as a molecule. Currently, ~30% of the test molecules I checked this afternoon do not ; match themselves. I'm attaching a file with a small set of non-matched SMILES. It's hard to ; know, but many may be related to bug #1503849, but I suspect others ; are new. -Geoff. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/552:23,test,test,23,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/552,2,['test'],['test']
Testability,"I saw this at the top of mol.h:; ```; // Currently includes many headers for 2.x backwards compatibility; // \deprecated -- this will be cleaned up in 3.0 efforts; // to improve compile time significantly.; // Only include necessary headers and class declaration stubs.; ```; So, that's what I did. I did the same for bond.h and atom.h, and did a little bit of additional triming. I also moved the globals into wherever their classes are defined (so including oberror.h gives you obErrorLog), and removed the typedefs for OBEdge/NodeBase. It was a bit more work than I expected, so I should probably have resisted. In any case, from the point of view of a user, they may need to include mol.h, bond.h, atom.h, and obiter.h, where previously mol.h would have sufficed.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1958:263,stub,stubs,263,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1958,1,['stub'],['stubs']
Testability,"I see no problem moving to (signed) int unless we can find an example of a string being used here. It's an API change, but we're in the process of making several at the moment, so now's the time and it sounds like it's necessary. We should make sure to add a test case to make it clear that this is the desired behaviour. By the way, in your Python, you might prefer to use the triple quote ("""""") for multi-line strings.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1786#issuecomment-371507121:259,test,test,259,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1786#issuecomment-371507121,2,['test'],['test']
Testability,"I should add, all testing of this was done on Linux. And you can contact me (David Hall) at david (at) acpharis.com if you have questions or push fixes. Original comment by: @cowsandmilk",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1277#issuecomment-281803802:18,test,testing,18,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1277#issuecomment-281803802,1,['test'],['testing']
Testability,"I solved the chiral center problem, but some of tests failed. This is possibly because convergence check by `OBDistanceGeometry::CheckStereoConstraints()` does not always agree with the check by canonical SMILES.; Convergence check is another serious problem on coordinate generation, which is discussed before: https://sourceforge.net/p/openbabel/mailman/message/36699127/. I will try canonical SMILES based convergence check and see how it works.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1875#issuecomment-527657305:48,test,tests,48,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1875#issuecomment-527657305,1,['test'],['tests']
Testability,"I speculate there could be a bug because of the following two different outcomes. 0) generation of the aromatic.cml (bond orders marked by A). ```shell; $ obabel -:""c1ccccc1"" -ocml --gen3d -xA > ~/Desktop/test.cml; 1 molecule converted; $ cat ~/Desktop/test.cml; $ cat ~/Desktop/test.cml ; <?xml version=""1.0""?>; <molecule xmlns=""http://www.xml-cml.org/schema"">; <atomArray>; <atom id=""a1"" elementType=""C"" hydrogenCount=""1"" x3=""1.382807"" y3=""-0.221802"" z3=""0.005621""/>; <atom id=""a2"" elementType=""C"" hydrogenCount=""1"" x3=""0.506827"" y3=""-1.306766"" z3=""-0.007235""/>; <atom id=""a3"" elementType=""C"" hydrogenCount=""1"" x3=""-0.871185"" y3=""-1.090814"" z3=""-0.015111""/>; <atom id=""a4"" elementType=""C"" hydrogenCount=""1"" x3=""-1.372721"" y3=""0.210822"" z3=""-0.004526""/>; <atom id=""a5"" elementType=""C"" hydrogenCount=""1"" x3=""-0.496795"" y3=""1.296205"" z3=""0.011557""/>; <atom id=""a6"" elementType=""C"" hydrogenCount=""1"" x3=""0.881190"" y3=""1.080097"" z3=""0.012965""/>; <atom id=""a7"" elementType=""H"" hydrogenCount=""0"" x3=""2.456430"" y3=""-0.390211"" z3=""0.009514""/>; <atom id=""a8"" elementType=""H"" hydrogenCount=""0"" x3=""0.897545"" y3=""-2.320834"" z3=""-0.010961""/>; <atom id=""a9"" elementType=""H"" hydrogenCount=""0"" x3=""-1.553723"" y3=""-1.935967"" z3=""-0.029527""/>; <atom id=""a10"" elementType=""H"" hydrogenCount=""0"" x3=""-2.446585"" y3=""0.379351"" z3=""-0.008513""/>; <atom id=""a11"" elementType=""H"" hydrogenCount=""0"" x3=""-0.887676"" y3=""2.310028"" z3=""0.022209""/>; <atom id=""a12"" elementType=""H"" hydrogenCount=""0"" x3=""1.563844"" y3=""1.925102"" z3=""0.020756""/>; </atomArray>; <bondArray>; <bond atomRefs2=""a1 a2"" order=""A""/>; <bond atomRefs2=""a2 a3"" order=""A""/>; <bond atomRefs2=""a3 a4"" order=""A""/>; <bond atomRefs2=""a4 a5"" order=""A""/>; <bond atomRefs2=""a5 a6"" order=""A""/>; <bond atomRefs2=""a1 a6"" order=""A""/>; <bond atomRefs2=""a1 a7"" order=""1""/>; <bond atomRefs2=""a2 a8"" order=""1""/>; <bond atomRefs2=""a3 a9"" order=""1""/>; <bond atomRefs2=""a4 a10"" order=""1""/>; <bond atomRefs2=""a5 a11"" order=""1""/>; <bond atomRefs2=""a6 a12"" order=""1""/>; </bondArray>; ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2646#issuecomment-1819639642:205,test,test,205,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2646#issuecomment-1819639642,3,['test'],['test']
Testability,"I started to convert your `.sdf` test files into `.pdb` by `obabel -isdf <ligand_name>.sdf -opdb -O <ligand_name>.pdb` with Open Babel (version 3.1.0 in Linux Debian, I suggest you check if you equally may update to this) and displayed them pairwise in an elder installation of Jmol (14.6.4_2016.11.05). Only the conversion about `PEMETREXED_1.sdb` yielded a reasonable display of the `.pdb` with different atom colors for C, H, N, O. You know that Open Babel may read and write `.sdf` and `.pdb` files. I knew there are multiple ways an `.xyz` or a `.pdb` file may be written and occasionally -- just for the sake of consistency -- I use Open Babel to «correct» these prior to further processing. Thanks to your test files, I learn that this apparently equally is the case for `.sdf` files and I thus issued conversions in pattern of `obabel -isdf NATEGLINIDE_1.sdf -osdf -O NATEGLINIDE_1_rewritten.sdf` for both `NATEGLINIDE` and `PEMETREXED`, and then converted these by e.g., `obabel -isdf NATEGLINIDE_1_rewritten.sdf -opdb NATEGLINIDE_1_rewritten.pdb`. The visualizations by Jmol then look considerably better. Could such an edit equally be helpful for you?. The obvious question is about the difference between the original and the modified `.sdf` files. According to a difference view with `vimdiff` (an extension of the vim editor) or [meld](http://meldmerge.org/) (version 3.20.2) is that both the number of columns in the upper part of the connectivity table increase, as well as the connectivities are in part defined differently. Archive `format_problem.zip` contains the files mentioned and some screen photos taken along to address the issue. [format_problem.zip](https://github.com/openbabel/openbabel/files/5673926/format_problem.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2303#issuecomment-742608516:33,test,test,33,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2303#issuecomment-742608516,4,['test'],['test']
Testability,I tested the changes on the resulting files read from VESTA and VisIt. ; Any feedback is welcome.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2580#issuecomment-1488054706:2,test,tested,2,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2580#issuecomment-1488054706,2,['test'],['tested']
Testability,"I think (not tested),. https://github.com/openbabel/openbabel/blob/master/src/fingerprints/finger2.cpp#L176. is the problem as this makes the hashing asymetric (trailing bond order)? The rotation to find the max ring hash (in DoRings()) is then different depending on which way round you traverse the path. John",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/206#issuecomment-127271309:13,test,tested,13,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/206#issuecomment-127271309,1,['test'],['tested']
Testability,"I think I have discovered the problem. File test/CMakeLists.txt includes this command that appears aimed, in part, at controlling the relevant environment variables when the tests are run:. set_tests_properties(${test}_Test PROPERTIES; FAIL_REGULAR_EXPRESSION ""ERROR;FAIL;Test failed""; ENVIRONMENT ""BABEL_LIBDIR=${CMAKE_BINARY_DIR}/lib""; ENVIRONMENT ""BABEL_DATADIR=${CMAKE_SOURCE_DIR}/data""). ""ENVIRONMENT"" is a documented test property in CMake 2.8, but not in CMake 2.6. For what it's worth, the build requirements at http://openbabel.org/docs/2.3.0/Installation/install.html specify CMake 2.4 as a minimum requirement. Original comment by: johnbollinger",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797802:44,test,test,44,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797802,5,"['Test', 'test']","['Test', 'test', 'tests']"
Testability,"I think I have not been specific enough, sorry for that.; No, not entirely indeed. In my last attemps I was building only `openbabel` with; ```; mingw32-make openbabel; ```; because, I thought, the problem comes from there. The latter command successfully (or, should I say more correctly ""without errors"") builds what it has to build with the `(PTCHAR)` change . Actually, I am not using any of the optional libraries: Eigen 3.0 (even though I have it), libxml2, zlib, wxWidgets 2.8 (even though I have it, but I don't want the GUI). In fact, I just want to use the C++ library API for my in-house developments... Now, I tried the following (still with the (PTCHAR) change):; ```; C:\OpenBabel\build2>cmake ..\openbabel-2-4-1 -G""MinGW Makefiles"" -DBUILD_GUI=OFF; ```; the displayed information is enclosed in [cmake.txt](https://github.com/openbabel/openbabel/files/1116542/cmake.txt).; ```; C:\OpenBabel\build2>mingw32-make -j4; ```; this builds all it has to build without giving errors.; ```; C:\OpenBabel\build2>mingw32-make test; ```; with only 34% tests passed, 95 tests failed out of 144. The details are in the enclosed [tests.txt](https://github.com/openbabel/openbabel/files/1116543/tests.txt). (I had to shut test 124 down manually because it was stuck there for very long, see elapsed time). I have the feeling I am doing it totally wrong... :(",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1594#issuecomment-312383027:1030,test,test,1030,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1594#issuecomment-312383027,6,['test'],"['test', 'tests']"
Testability,I think I'd two minor pieces:; - a check in GetNewBondVector() and/or OBBuilder::Connect() to look for invalid connection vectors; - Something like this for tests: https://gist.github.com/ghutchis/381adeba95b5d9923757c159757857e8,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2149#issuecomment-606780700:157,test,tests,157,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2149#issuecomment-606780700,1,['test'],['tests']
Testability,"I think one way to integrate this cleanly into open babel would; be to have a new option, for example --dump-logP-per-HA [filename]; in which case what I wrote to stdout should go to the given file.; I guess users won't be very happy if each time they ask for; cLogP to be appended to a molecule their stdout is polluted.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/74#issuecomment-39281686:109,log,logP-per-HA,109,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/74#issuecomment-39281686,1,['log'],['logP-per-HA']
Testability,I think something happened here -- I can't run the InChI test anymore. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1030#issuecomment-281797437:57,test,test,57,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1030#issuecomment-281797437,1,['test'],['test']
Testability,I think the change should be on line 57 from:. if(UNIX); to ; if(NOT MSVC). but I cannot test this at the moment. Will the MinGW build still work if the lib is in a different folder than the executables?. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1059#issuecomment-281797939:89,test,test,89,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1059#issuecomment-281797939,1,['test'],['test']
Testability,"I think the logic is right:. ```; for j=0; if str[j] == integer and str[j+1] == '/' then; compute the fraction; else; do nothing, since str[j] is just integer and should be removed (hopefully no CIF will have something like 4*x); ```. There should also be check j+1 < str.length() && j+2 < str.length()",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/259#issuecomment-184406525:12,log,logic,12,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/259#issuecomment-184406525,1,['log'],['logic']
Testability,"I think the main thing would be to have a test to ensure this doesn't happen again. If you attach some test files (e.g., an MDL file and the expected ChemDraw version - perhaps as saved by ChemDraw itself) I'm willing to write the testing code.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1831#issuecomment-388236455:42,test,test,42,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1831#issuecomment-388236455,3,['test'],"['test', 'testing']"
Testability,"I think the one thing I'd really like is a unit test for this (e.g., an example PDB file and then the FASTA sequence check). That way if someone breaks the insertion codes with a commit, it won't pass the unit tests. Otherwise, the code looks OK.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/257#issuecomment-183398777:48,test,test,48,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/257#issuecomment-183398777,2,['test'],"['test', 'tests']"
Testability,I think the problem is about your coulombtest.cpp. See line 675-679 in the log: https://ci.appveyor.com/project/baoilleach/openbabel/build/1.0.928#L675; Maybe the way of linking is different in the Windows environment. But I am not familiar with it.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1859#issuecomment-401433225:75,log,log,75,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1859#issuecomment-401433225,1,['log'],['log']
Testability,"I think there is a general problem in dealing with stereochemistry with SMILES strings, and that this bug is tied to [ 1742876 ] and [ 1792878 ], and possibly to a bunch of closed bugs. We are looking to use OpenBabel to generate database primary keys. We are parsing a vendor-supplied database, which includes both molfile and SMILES descriptors for compounds. For chiral compounds, OpenBabel appears to perform well when converting the vendor-supplied molfile data to either InChI or canonical SMILES. OpenBabel seems (* caveat below *) to have a very high failure rate when it uses the vendor-supplied SMILES string, though. I tested 53 small (SMILES string <= 20 characters) chiral molecules, and about half (26 - included as attachment) appear to disrupt the stereochemistry when inputed as SMILES. The disruption was visible either when converting to InChI (10 cases), to canonical SMILES (8 cases) or both (8 cases):. Failed both InChI and Canonical SMILES:; C[C@@H]1Cc2ccccc2CN1; C[C@H]1Cc2ccccc2CN1; FC[C@H]1Cc2ccccc2CN1; N[C@@H]1CCSC1=O; N[C@H]1CCSC1=O; OC(=O)C[C@@H]1CCNC1; OC(=O)C[C@H]1CCNC1; OC[C@H]1Cc2ccccc2CN1. Failed InChI:; C\C=N/OC[C@H]1CCCN1C; CN(C)CC#C[C@H]1CCCN1; CN1CCC[C@H]1c2cccnc2; CP(O)(=O)C[C@H](O)CN; FC[C@@H]1CCCN1; N[C@H]1CCn2cccc2C1; NC[C@@H]1CC(=O)NO1; NC[C@H]1CC(=O)NO1; NC[C@H]1COc2ccccc2O1; OC(=O)[C@@H]1CCCN1. Failed SMILES:; CC(C)[C@H](N)C(O)=O; CC[C@H](O)C([O-])=O; CO[C@@H](CN)c1ccccc1; CO[C@H](CN)c1ccccc1; N[C@@H](CO)C(O)=O; N[C@H](CO)C(O)=O; NCCC[C@H](N)C(O)=O; NCCSC[C@H](N)C(O)=O. Command being used: babel ---errorlevel 2 -ocan -ismi <string>; (or -oinchi for inchi output). Open Babel 2.1.1 -- Sep 28 2007 -- 18:13:29; Altix Itanium; Intel(R) C++ Itanium(R) Compiler for Itanium(R)-based applications; Version 8.0 Build 20031017 Package ID: l_cc_p_8.0.056; Copyright (C) 1985-2003 Intel Corporation. All rights reserved. To be honest, I don't have many independent mechanisms to verify that OpenBabel is the point of failure in all cases; I can't read th",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/683:630,test,tested,630,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/683,1,['test'],['tested']
Testability,"I think this is ready for review, I included modified space-groups.txt from #1560 in here for testing purposes (it could be merged from here to close #1560 also).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1558#issuecomment-298682220:94,test,testing,94,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1558#issuecomment-298682220,1,['test'],['testing']
Testability,I think you forgot to attach the test files. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1094#issuecomment-281800466:33,test,test,33,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1094#issuecomment-281800466,1,['test'],['test']
Testability,"I tried rebase, but the test still failed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1875#issuecomment-550496887:24,test,test,24,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1875#issuecomment-550496887,1,['test'],['test']
Testability,"I tried the following `test.py` in the current master,; ```python; from openbabel import openbabel; ; print(openbabel.OBElements.GetSymbol(6)); ```; but it yielded the followng error.; ```; $ python3 test.py ; Traceback (most recent call last):; File ""test.py"", line 3, in <module>; print(openbabel.OBElements.GetSymbol(6)); AttributeError: module 'openbabel.openbabel' has no attribute 'OBElements'; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1601#issuecomment-500198589:23,test,test,23,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1601#issuecomment-500198589,3,['test'],['test']
Testability,"I tried with the attached patch ; [patch.txt](https://github.com/openbabel/openbabel/files/1993251/patch.txt) but it doesn't seem to be taken into account.; Indeed, with initial sources (without the fix), I don't see the segfault. Moreover, I noticed this:; Start 25: test_canonstable_1; 25/179 Test #25: test_canonstable_1 ...............***Failed Error regular expression found in output. Regex=[FAIL]331.65 sec",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1818#issuecomment-388190321:295,Test,Test,295,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1818#issuecomment-388190321,1,['Test'],['Test']
Testability,I understand but it's another step to do and I don't want to dive in this part.; Don't hesitate to refuse and close the patch if you think it can't be accepted with a test case.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1798#issuecomment-375077897:167,test,test,167,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1798#issuecomment-375077897,1,['test'],['test']
Testability,"I use CUBE files a lot for quick inspection of simulation results.; And I use the popular VESTA and VisIt applications for visualization. To my surprise, I realized that there are two dialects of CUBE format defined https://gaussian.com/cubegen/. (a) The most usual format has the list of atoms and immediately after the density data. (b) There is a second format uses ""negative"" number of atoms to indicate that there will some kind of ""orbital"" index (two numbers actually) in between the list and the data. But inspecting the code, it seems that OpenBabel supports both variants for reading.; But it doesn't implement (a) for writing. This is unfortunate because VESTA and VisIt and others do not support format (b). I can hack the OpenBabel code to implement writing in format (a), but I wonder if there is a better way to handle subtle changes in the output format.; In any case if one doesn't introduce a whole new format, I would like to know if there is way to pass this information to the converter of the Format class. I notice for example that there is a `Flags()` method in the Format class, but it seems to be for something else. These are the lines that need to be modified to save the CUBE file in the most usual format (a). https://github.com/openbabel/openbabel/blob/master/src/formats/gausscubeformat.cpp#L620-L628. Another leaner alternative, that doesn't require flags, is to default to format (a) when there is only one GridData count. In any case, I would like to know if there is interest in implementing this in the code.; I can propose a merge request after asking some framework questions (testing, etc).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2579:1616,test,testing,1616,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2579,1,['test'],['testing']
Testability,"I used a profiler to find the stereofacade issue. That was essentially a misuse of the class. After that, there are a few more things that could probably be rewritten for speed such as CreateCanonTree, testing whether two stereo configs are equal, and finding the smallest ring a bond is in (maybe this latter is unnecessary in the smiles code). More generally, calling buffer.reserve at the start might help, caching option lookups, caching multiple accesses to GetIdx (etc).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1699#issuecomment-346757019:202,test,testing,202,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1699#issuecomment-346757019,1,['test'],['testing']
Testability,"I want to use `pybel` to create a `pybel.Molecule` from user defined data. I follow the [cclib example](https://github.com/cclib/cclib/blob/master/cclib/bridge/cclib2openbabel.py) referenced in [Examples from around the web (Open Babel Documentation)](http://openbabel.org/docs/current/UseTheLibrary/PythonExamples.html#examples-from-around-the-web). Everything works fine for neutral molecules but when I add a molecular charge (`SetTotalCharge`) or a user-defined molecular spin multiplicity (`SetTotalSpinMultiplicity`), these are ignored. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Python version: 3.7.3; Operating system and version: Ubuntu 19.04 . ## Expected Behavior . Creating an `OH-` ion should yield . > InChI=1S/H2O/h1H2/p-1. ## Actual Behavior. Creating an `OH-` ion actually yields `OH·` radical. > InChI=1S/HO/h1H. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Input:; ```python; import pybel. atomcoords = [[0.0, 0.0, 0.00],; [0.0, 0.0, 0.95]]; atomnos = [8, 1]; charge = -1; mult = 1. obmol = pybel.ob.OBMol(); for i in range(len(atomnos)):; obatom = pybel.ob.OBAtom(); obatom.SetAtomicNum(atomnos[i]); obatom.SetVector(*atomcoords[i]); obmol.AddAtom(obatom); obmol.ConnectTheDots(); obmol.PerceiveBondOrders(); obmol.SetTotalSpinMultiplicity(mult); obmol.SetTotalCharge(charge). mymol = pybel.Molecule(obmol). print(mymol.write('inchi')); ```; Output:; ```; InChI=1S/HO/h1H; ```. ## Edit; If I build openbabel from current `master` branch, I additionally get the following openbabel warning:; ```; ==============================; *** Open Babel Warning in InChI code; #0 :Accepted unusual valence(s): O(1); ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1995:1104,test,test,1104,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1995,1,['test'],['test']
Testability,"I was aware of the ""priority"" of the sequence issue, which is why I said you could also just change the test. The modified version looks fine. . I'll double-check the build tests, but this looks good to merge.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1205260029:104,test,test,104,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1205260029,2,['test'],"['test', 'tests']"
Testability,"I was doing some tests with a file for a software I'm developing, and when I did certain unrelated changes, the HBA calculation went crazy. I haven't been able to reproduce the normal behaviour, only the buggy one. I'm using OpenBabel 2.3.1 on Debian. This happens using both pybel from OpenBabel and from cinfony 1.0. So i've written a little script which shows what happens:. from cinfony import pybel # or just 'import pybel', the result is the same for me. testfile = 'test/test_ligands.sdf.gz'. print [mol.calcdesc(['HBA1'])['HBA1'] for mol in pybel.readfile('sdf', testfile)]; print [mol.calcdesc(['HBA2'])['HBA2'] for mol in pybel.readfile('sdf', testfile)]. When I run it it prints the following:; [35.0, 43.0, 37.0, 46.0, 37.0, 37.0]; [6.0, 6.0, 6.0, 7.0, 6.0, 6.0]. There can be seen that the HBA1 values are extremely high in comparison. The most annoying part is that I was getting sensible values from HBA1 calculation in my program, but I'm not able to reproduce them (they were values almost identical to the ones of HBA2). Thank you,. Adrià <ssorgatem@gmail.com>. Reported by: ssorgatem",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1154:17,test,tests,17,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1154,5,['test'],"['test', 'testfile', 'tests']"
Testability,"I was looking briefly at the logs from https://github.com/hackingmaterials/atomate/pull/734 and it seems like the problem is that when installing atomate via pip, it doesn't pick up the python-openbabel version installed earlier (the comment that it is due to system python vs virtual env is most likely correct). So instead it tries to install from pypi.; The 3.1.1.1 is the latest version of OpenBabel on pypi (https://pypi.org/project/openbabel/3.1.1.1/) that was created due to some packaging issue. If I recall correctly it's the same as 3.1.1 on most platforms.; I don't think the ""invalid version error"" is the real error, the problem is that it doesn't find the include files.; I haven't used packaged installs in a while but you might try to install libopenbabel-dev instead of python3-openbabel. I cannot remember if the dev files are included in the ""regular openbabel install"" but it's worth a try.; Otherwise we need to check if the folder `/usr/local/include/openbabel3` contains the missing files. Hope that helps in finding a solution! OpenBabel may be difficult to install sometimes, especially so when mixing package installs from different providers (Ubuntu vs PyPI). I noticed that in your Circle-CI build you opted on using conda which is what I normally recommend for user installs at least. Maybe you can use that on GitHub-actions as well.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014225437:29,log,logs,29,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014225437,1,['log'],['logs']
Testability,"I was testing Open Babel 2.3.0 for its ability to use it in a script to test for unique compounds when I encountered a problem concerning the processing of aromaticity when reading smiles input with some specific aromatic rings. Step 1: convert this protonated molecule to canonical smiles:; $ echo ""C1=CC=CC=C1N1[N-]C(=O)C=CC1(=O)"" | babel -ismi -ocan; O=c1ccc(=O)n([n-]1)c1ccccc1. Step 2: read the canonical smiles and convert it to canonical smiles :; $ echo ""O=c1ccc(=O)n([n-]1)c1ccccc1"" | babel -ismi -ocan; O=C1CCC(=O)[N-]N1c1ccccc1	. One would expect that the result of step 2 would generate the same canonical smiles again, but as the example shows this is not happening. . If I perform the same procedure but with neutral form the procedure is OK.; $ echo ""C1=CC=CC=C1N1NC(=O)C=CC1(=O)"" | babel -ismi -ocan; O=c1ccc(=O)n([nH]1)c1ccccc1	. $ echo ""O=c1ccc(=O)n([nH]1)c1ccccc1"" | babel -ismi -ocan; O=c1ccc(=O)n([nH]1)c1ccccc1	. Gert Thijs; gert.thijs@silicos.com. Reported by: @gertthijs",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1042:6,test,testing,6,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1042,2,['test'],"['test', 'testing']"
Testability,I was testing all the comands in the user docs. >babel aceto_indes.fs aceto_results.sdf -s c1ccccc1Br -at5; 5 molecules converted; However looking at the file it seems the molecule separator is missing?. MOL_00000105; OpenBabel11140519413D. 10 10 0 0 0 0 0 0 0 0999 V2000; 1.1069 -0.0724 0.0000 C 0 0 0 0 0; 2.5552 -0.0724 0.0000 C 0 0 0 0 0; 0.3862 1.1552 0.0000 C 0 0 0 0 0; 0.3862 -1.3241 0.0000 C 0 0 0 0 0; 3.2724 -1.3241 0.0000 C 0 0 0 0 0; 3.2724 1.1552 0.0000 O 0 0 0 0 0; -1.0276 1.1552 0.0000 C 0 0 0 0 0; -1.0276 -1.3241 0.0000 C 0 0 0 0 0; -1.7448 -0.0724 0.0000 C 0 0 0 0 0; -3.1931 -0.0724 0.0000 Br 0 0 0 0 0; 1 2 1 0 0 0; 1 3 1 0 0 0; 1 4 2 0 0 0; 2 5 1 0 0 0; 2 6 2 0 0 0; 3 7 2 0 0 0; 4 8 1 0 0 0; 7 9 1 0 0 0; 8 9 2 0 0 0; 9 10 1 0 0 0; M END; MOL_00000067; OpenBabel11140519413D. 10 10 0 0 0 0 0 0 0 0999 V2000; -0.3552 0.0483 0.0000 C 0 0 0 0 0. Reported by: *anonymous,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/487:6,test,testing,6,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/487,1,['test'],['testing']
Testability,"I will look at it asap. Where's the original from @dkoes?. On Sat, 4 May 2019, 14:36 Geoff Hutchison, <notifications@github.com> wrote:. > I mean, I think we should still add a unit test for ""no, there is not a; > hydrogen at the origin"".; >; > Let's take the hydrogens as a separate issue / pull request.; >; > @baoilleach <https://github.com/baoilleach> - there's a weird valence; > issue with this file -- the azide is getting a hydrogen in the middle and; > at the end. I suspect the problem is that the SDF is mal-formed (i.e., even; > ChemDraw puts an ""h"" on the terminal N). However, =N= should never be; > protonated.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/pull/1981#issuecomment-489327719>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AAALCGKCJ4RPE3BAB7NS2R3PTWGMRANCNFSM4HKXRYNA>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1981#issuecomment-489447612:182,test,test,182,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1981#issuecomment-489447612,1,['test'],['test']
Testability,"I will test a little bit more, will update here once I'm sure it works.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/252#issuecomment-177009217:7,test,test,7,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/252#issuecomment-177009217,1,['test'],['test']
Testability,"I wonder why such many files are added to this repo. I don't know where they come from, but how about something like; ```sh; wget somewhere/archive; tar -xf archive; # test; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2008#issuecomment-535329449:168,test,test,168,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2008#issuecomment-535329449,1,['test'],['test']
Testability,"I would highly suggest migrating to Python3 ASAP. While you can currently install OB bindings for 2.7, they will not be tested or supported going forward.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2151#issuecomment-607368993:120,test,tested,120,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2151#issuecomment-607368993,1,['test'],['tested']
Testability,"I'd be happy to have the GitHub actions test RPM builds so we can provide initial release binaries too. Can you give me the full set of flags?. I've been looking at, e.g. https://github.com/marketplace/actions/build-an-rpm",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2223#issuecomment-629375047:40,test,test,40,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2223#issuecomment-629375047,1,['test'],['test']
Testability,"I'd like to merge this, but I'm not sure what to do about the test failures.. Any ideas?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1875#issuecomment-547009798:62,test,test,62,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1875#issuecomment-547009798,1,['test'],['test']
Testability,I'd like to obtain canonical SMILES with chiral info from PDB file.; Option -xi for chiral info was ignored when -ocan used instead of -osmi.; I got the following result with bable ver.2.1.0. $ cat mpd_clean.pdb; ATOM 1 C1 MPD 4728 -0.344 -1.472 -1.321 1.00 20.00 C+0; ATOM 2 C2 MPD 4728 -0.084 0.021 -1.122 1.00 20.00 C+0; ATOM 3 O2 MPD 4728 1.323 0.254 -1.049 1.00 20.00 O+0; ATOM 4 CM MPD 4728 -0.670 0.802 -2.299 1.00 20.00 C+0; ATOM 5 C3 MPD 4728 -0.746 0.485 0.177 1.00 20.00 C+0; ATOM 6 C4 MPD 4728 -0.145 -0.280 1.357 1.00 20.00 C+0; ATOM 7 O4 MPD 4728 1.240 0.047 1.481 1.00 20.00 O+0; ATOM 8 C5 MPD 4728 -0.878 0.106 2.643 1.00 20.00 C+0; END. $ babel -ipdb mpd_clean.pdb -osmi -xi 1.smi ; cat 1.smi; 1 molecule converted; 18 audit log messages; CC(C)(O)C[C@@H](O)C mpd_clean.pdb. $ babel -ipdb mpd_clean.pdb -ocan -xi 1.smi ; cat 1.smi; 1 molecule converted; 31 audit log messages; CC(O)CC(C)(C)O mpd_clean.pdb. Reported by: *anonymous,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/635:742,log,log,742,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/635,2,['log'],['log']
Testability,"I'd still really love a unit test to make sure when reading multiple molecules the -f and -l flags are handled by the Python bindings, for example.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/52#issuecomment-31183991:29,test,test,29,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/52#issuecomment-31183991,1,['test'],['test']
Testability,I'd strongly suggest moving away from Python 2.7. I doubt any future versions of Open Babel will test against this.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2194#issuecomment-624732166:97,test,test,97,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2194#issuecomment-624732166,1,['test'],['test']
Testability,I'll file a separate bug so for the cclib test case... Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1205#issuecomment-281802263:42,test,test,42,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1205#issuecomment-281802263,1,['test'],['test']
Testability,"I'll have to look into the problem in more detail to see whether there is an alternative, but copying and addng hydrogens will be a performance hit. I've seen this elsewhere - we use this approach to handle matching against SMARTS with explicit hydrogens (I think I might even be the author of this) - these patterns are an order of magnitude slower to match (according to a SMILES benchmark from @johnmay). If you can't see any alternative, is it okay if I take a look?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2102#issuecomment-561188339:382,benchmark,benchmark,382,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2102#issuecomment-561188339,1,['benchmark'],['benchmark']
Testability,I'll have to think carefully about the unit cell cases - and probably derive some test cases for them.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2158#issuecomment-609463040:82,test,test,82,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2158#issuecomment-609463040,1,['test'],['test']
Testability,"I'll look into it. On 10 October 2017 at 15:25, Geoff Hutchison <notifications@github.com>; wrote:. > *bump* - can you see if this solves John's problems. It looks okay to me,; > but I don't have his test file.; >; > —; > You are receiving this because your review was requested.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/pull/1658#issuecomment-335490099>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGYJhXyGGiAZzrIpZn_xBBXDF0mvyks5sq35YgaJpZM4Px6RB>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1658#issuecomment-335492752:200,test,test,200,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1658#issuecomment-335492752,1,['test'],['test']
Testability,"I'll take down the other page so. On 28 January 2014 10:57, Matt Swain notifications@github.com wrote:. > OK I left the package name as 'openbabel' and updated the README to; > explain more clearly that this is just the python bindings along with a; > link to the main Open Babel site.; > ; > Here's what it will look like (on the test PyPI site):; > https://testpypi.python.org/pypi/openbabel; > ; > ## ; > ; > Reply to this email directly or view it on GitHubhttps://github.com/openbabel/openbabel/pull/65#issuecomment-33468494; > .",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/65#issuecomment-33470586:331,test,test,331,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/65#issuecomment-33470586,4,['test'],"['test', 'testpypi']"
Testability,"I'm already working on this, but wanted to mark this in the database for ; verification and public tracking. Rich Apodaca has been doing some great work with Ruby and chemistry:; http://. We're working on getting a Ruby bridge using SWIG, much like the Perl ; and Python interfaces. So far, there is SWIG-generated code, but it's not ; yet ready for beta testing.; -Geoff. Reported by: @ghutchis. Original Ticket: ""openbabel/feature-requests/101"":https://sourceforge.net/p/openbabel/feature-requests/101",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1470:355,test,testing,355,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1470,1,['test'],['testing']
Testability,"I'm getting a segmentation fault when loading a GAMESS output file with vibrational frequencies (mol1test_freq.log, attached). Output from a mere optimization run reads in fine (except for that it complains not being able to assign all charges) (mol1opt.log, attached). . System: OSX 10.9 Mavericks, openbabel compiled from github commit 5f0837 Sat Mar 15 15:59:37 2014. Attached is the gamess output file. . This is the code I'm using to read it in (python):; ```~~~; >>> import pybel; >>> mols = pybel.readfile(format='gamess', filename='mol1test_freq.log'); >>> m = mols.next(); Segmentation fault: 11; ```~~~. Reported by: mschmuker. Original Ticket: [openbabel/bugs/918](https://sourceforge.net/p/openbabel/bugs/918)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1298:111,log,log,111,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1298,3,['log'],['log']
Testability,I'm going to come down pretty strongly on the default including bond orders. Messing up molecules is never desirable. I put in an option - if needed it can be reversed and set during testing.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2008#issuecomment-514301821:183,test,testing,183,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2008#issuecomment-514301821,1,['test'],['testing']
Testability,I'm going to commit this to master - hopefully the merge was successful. (We'll find out once it re-runs tests.),MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1853#issuecomment-531506476:105,test,tests,105,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1853#issuecomment-531506476,1,['test'],['tests']
Testability,"I'm going to mark this as closed at this stage. Based on John's comment, it looks like CMake 2.8 is required for running the tests correctly, otherwise the environment variables need to be set manually. I guess it's more of a documentation problem than a bug. We should bump up our requirements for CMake version perhaps. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797803:125,test,tests,125,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797803,1,['test'],['tests']
Testability,"I'm going to merge this for 3.0. I think we probably need to revisit having a separate (larger) test set for cases like this, MMFF94 validation, etc. I'm going to remove bondtyper from the script bindings unless someone can explain why it's crucial.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2008#issuecomment-535705368:96,test,test,96,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2008#issuecomment-535705368,1,['test'],['test']
Testability,"I'm going to merge this, since the test was in #2150",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2149#issuecomment-608509623:35,test,test,35,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2149#issuecomment-608509623,1,['test'],['test']
Testability,I'm going to revisit once I cut the 2.4 release. I suspect the test failure is minor.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/295#issuecomment-218898845:63,test,test,63,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/295#issuecomment-218898845,1,['test'],['test']
Testability,"I'm going to squash, merge, and fix the Python test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2385#issuecomment-1151691738:47,test,test,47,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2385#issuecomment-1151691738,1,['test'],['test']
Testability,"I'm happy to merge - this looks fine, but a regression test would be ideal. Thanks!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/332#issuecomment-238618766:55,test,test,55,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/332#issuecomment-238618766,1,['test'],['test']
Testability,"I'm having similar problems ... Works in 2.3.0, though. Example of an offending file:; https://dl.dropbox.com/u/17435887/002RPD.log. Original comment by: *anonymous",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1205#issuecomment-281802252:128,log,log,128,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1205#issuecomment-281802252,1,['log'],['log']
Testability,"I'm honestly not sure why we went with dynamic_bitset, I'll check with the original developer who made this call probably will have some good reason we didn't use std::vector<bool>. That said - we also use boost for quite a few various things, like effortless gzip fstreams, parsing doubles efficiently, common string manipulations, their very nice unit test package, etc. These would be relatively annoying to have to gut out, not impossible, but pretty annoying. Are you committed at this point to not having boost be a requirement? I can't imagine you have many users who don't have boost either already installed or trivially available through their package manager.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1993#issuecomment-500175457:354,test,test,354,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1993#issuecomment-500175457,1,['test'],['test']
Testability,I'm not able to reproduce it either. I'm turning on verbose tests and rebuilding the original commit on Appveyor...,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/201#issuecomment-122538911:60,test,tests,60,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/201#issuecomment-122538911,1,['test'],['tests']
Testability,"I'm not going to merge until you write the test case. Either way, I'm cherry-picking fixes for 2.4, so I'll merge when you're ready.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/329#issuecomment-234315246:43,test,test,43,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/329#issuecomment-234315246,1,['test'],['test']
Testability,"I'm not sure how that can happen - it built with both Travis and Appveyor continuous testing. Can you do a ""make clean; make"" for me?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/270#issuecomment-191559254:85,test,testing,85,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/270#issuecomment-191559254,1,['test'],['testing']
Testability,I'm not sure that I'll be able to make such stub. Thank you for your help anyway!,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1884#issuecomment-420966873:44,stub,stub,44,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1884#issuecomment-420966873,1,['stub'],['stub']
Testability,"I'm now attaching a patch that improves the rendering of charged structures. It removes the (unjustified?) 2x scaling for the charge text and uses U+22C5: DOT OPERATOR instead of ASCII dot symbol for the radical. The patch works for me: see the attached test.mol and test-orig.svg/test.svg. Please review the patch and tell if it's the work in right direction. Although the rendering seems better now, it's still not ideal: the charge is overlapped with the bond and is hard to see. Ideally, bond line should stop before charge. Original comment by: *anonymous",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1167#issuecomment-281801568:254,test,test,254,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1167#issuecomment-281801568,3,['test'],"['test', 'test-orig']"
Testability,"I'm passing the buck here. I revisited this bug using SVN trunk:. babel ~/Downloads/smivscan.mol2 -osmi; C[C@@H]1C[NH](C[C@@H](O1)C)C[C@@H](C(F)(F)F)O	ZINC03883383; C[C@H]1C[NH](C[C@H](O1)C)C[C@@H](C(F)(F)F)O	ZINC03883386. babel ~/Downloads/smivscan.mol2 -ocan; C[C@@H]1O[C@H](C)C[NH](C1)C[C@H](O)C(F)(F)F	ZINC03883383; C[C@@H]1O[C@H](C)C[NH](C1)C[C@H](O)C(F)(F)F	ZINC03883386. That is, the stereo looks different for SMI, but not CAN. If this isn't a bug (i.e., given the input order, the SMI output is correct), let's make a testcase for the CAN example. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779171:527,test,testcase,527,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779171,1,['test'],['testcase']
Testability,"I'm pretty sure this is a regression, and am surprised that it's not covered by the tests. Anyhoo, stereo on a nitrogen due to a LP is not accepted when reading from SMILES. (Note this is nothing to do with stereo perception, just the mechanics of reading a SMILES string.). ```; >obabel -ismi -:[N@@](Br)(F)I -osmi; ==============================; *** Open Babel Warning in OpenBabel::OBSmilesParser::ParseSmiles; Ignoring stereochemistry. Not enough connections to this atom.; N(Br)(F)I; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1830:84,test,tests,84,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1830,1,['test'],['tests']
Testability,"I'm trying to write a package for Open Babel for the Spack package manager (see https://github.com/LLNL/spack/pull/4256). The installation seems to work, but one of the unit tests crashes:; ```; Start 157: pytest_pdbformat; 157/160 Test #157: pytest_pdbformat .................***Failed 0.04 sec; /blues/gpfs/home/software/spack-0.10.0/var/spack/stage/openbabel-2.4.1-g7kl4coxcxba2x2ugjpqbeipuembkpk7/openbabel-2.4.1/scripts/python:/scratch/ajstewart/spack-stage/spack-stage-z0O89Y/openbabel-2.4.1/spack-build/lib; File ""/blues/gpfs/home/software/spack-0.10.0/var/spack/stage/openbabel-2.4.1-g7kl4coxcxba2x2ugjpqbeipuembkpk7/openbabel-2.4.1/test/testpdbformat.py"", line 32; self.entryPDBwithInsertioncodes=""""""ATOM 406 N VAL L 29 58.041 17.797 48.254 1.00 0.00 N ; ^; TabError: inconsistent use of tabs and spaces in indentation. CMake Error at pytest_pdbformat.cmake:20 (MESSAGE):; 1; ```; The problem is that this file contains mixed tabs and spaces. This PR converts all tabs to spaces and allows the unit test to pass.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1568:174,test,tests,174,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1568,5,"['Test', 'test']","['Test', 'test', 'testpdbformat', 'tests']"
Testability,"I'm using openbabel-2.0.0 on Linux/Suse 9.1. . I tried to convert an sdf file exported from IsisBase,; that contains the following section:; ...; 5 6 2 0 0 0 0; 6 1 1 0 0 0 0; 10 11 1 0 0 0 0; G 10 3; OMe; M STY 1 1 SUP; M SLB 1 1 1; ... .../temp> babel -isdf test01.sdf -osdf test.sdf; Conversion failed with an exception. Count=0; 0 molecules converted. It seems to be a valid construct in the property; section of an sdf according to ctfile-1.pdf p. 16 cf. MDL:; ... ; Group Abbreviation [MDL ISIS/Desktop]; G aaappp; x... aaa: Atom number; ppp: Atom number; x: Abbreviation label; ... mdlformat.cpp seems to stumble over the OMe label. replacing line 222; 220 while(ifs.getline(buffer,BUFF_SIZE)); 221 {; 222 if(!strchr(buffer,'M')) continue;; by ; 222 if(strncmp(buffer,""M "",3)) continue;; seems to fix things. Probably better is: ; 222 if(!strncmp(buffer,""M END"",6)) break;; 223 if(strncmp(buffer,""M CHG"",6) \; 224 || strncmp(buffer,""M RAD"",6) \; 225	|| strncmp(buffer,""M ISO"",6)) continue;. test01.sdf attached. Yours; th; thuebner@t2-consult.de. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/502:277,test,test,277,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/502,2,['test'],['test']
Testability,"I'm using the 2.3.1 GUI. I want to use ""Display in Firefox"" to look at the effect of changing the SVG depiction options. When I convert two molecules from SMI to SMI, and click ""Display in Firefox"" it works correctly and I see two molecules. When I convert the same molecules to SVG, and click ""Display in Firefox"" I can use the SVG depiction options to change the depiction. However, I only see a single molecule (the second molecule), even when I write to a file. . Here are my test molecules:; CC(=O)Cl; CCCBr. - Noel. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1187:480,test,test,480,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1187,1,['test'],['test']
Testability,I've added a static build to the Travis CI tests in #284. Hopefully this type of build will be fixed now.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/283#issuecomment-197979318:43,test,tests,43,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/283#issuecomment-197979318,1,['test'],['tests']
Testability,I've added some more safety logic. Should be fixed now. Original comment by: @timvdm,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/946#issuecomment-281796063:28,log,logic,28,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/946#issuecomment-281796063,1,['log'],['logic']
Testability,"I've added the test, but now the previous ones fail on (surprise) disconnected smiles...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1669#issuecomment-338213524:15,test,test,15,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1669#issuecomment-338213524,1,['test'],['test']
Testability,"I've been doing some performance testing of OpenBabel on large datasets ; (2-4 million compounds) and whilst I had no problems it probably is ; hitting the current limits. It is also apparent that the current and future ; generation of machines a multi-core architecture will become more ; common place. To take advantage of this we really need multi-threading. ; Not a trivial request I know but could give significant performance gains. Reported by: *anonymous. Original Ticket: ""openbabel/feature-requests/105"":https://sourceforge.net/p/openbabel/feature-requests/105",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1474:33,test,testing,33,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1474,1,['test'],['testing']
Testability,"I've been testing this version for loading CIF files and converting them to PDB, seems to work well.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1558#issuecomment-299960481:10,test,testing,10,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1558#issuecomment-299960481,1,['test'],['testing']
Testability,"I've changed the behavior to preserve atom order. It's just a couple of lines change in mol.cpp which you can make yourself based on the pull request link above, or else check out the latest development code from the git repo. Your test case is included as a unit test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1763#issuecomment-363563889:232,test,test,232,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1763#issuecomment-363563889,2,['test'],['test']
Testability,"I've created a test suite of 14k non-redundant ligands from the pdb. These are provided as reasonably processed sdf files. testroundtrip.py verifies that they can be read in and roundtripped (with hydrogens) through sdf, mol2, and pdb file formats without mucking things up. . Initially there were thousands of failures. Now there are none. You can go through all the commits for the details, but here are the bigger changes:. - mol2 file format now outputs formal charges with a UNIT_ATOM_ATTR record (there is an option to disable its output); - pdb files now output bond orders through the popular but non-standard convention of duplicating CONECT records; - sdf files will only have aliases treated as substructure replacements if the target atom is a wildcard; - numerous adjustments to bond typing rules to make them more conservative. The additional tests add a few minutes to testing, but I think it's very important that we include them. This sort of large test set is needed. Plans for the future:; - port python driver to c++ to avoid python dependency; - make things work without having to roundtrip the molecules with hydrogens; - compare protonation states to rdkit, find and fix errors; - additional file formats for roundtripping",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2008:15,test,test,15,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2008,5,['test'],"['test', 'testing', 'testroundtrip', 'tests']"
Testability,"I've hit a problem using SMILES as SMARTS, ; which in my case requires using *canonical* SMILES as input,; see the example below. The problem occurs both with ob-2.2.3 ; and todays SVN trunk. #-------- Cut & Paste from here ------------. echo 'InChI=1S/C9H7N5O/c10-8-7-9(12-4-11-8)14(5-13-7)6-2-1-3-15-6/h2-6H,(H2,10,11,12)' | babel -i inchi - -o smi; #C1=CC(n2cnc3c(N)ncnc23)OC=1 ; #1 molecule converted; #1 info messages 25 audit log messages . echo 'O' | babel -i smi - -s 'C1=CC(n2cnc3c(N)ncnc23)OC=1' -o smi - ; #==============================; #*** Open Babel Error in SMARTSError; # SMARTS Error:; #C1=CC(n2cnc3c(N)ncnc23)OC=1; # ^. echo 'InChI=1S/C9H7N5O/c10-8-7-9(12-4-11-8)14(5-13-7)6-2-1-3-15-6/h2-6H,(H2,10,11,12)' | babel -i inchi - -o can; #Nc1ncnc2c1ncn2C1C=C=CO1 ; #1 molecule converted; #1 info messages 25 audit log messages . # Correct:; echo 'O' | babel -i smi - -s 'Nc1ncnc2c1ncn2C1C=C=CO1' -o smi - ; #0 molecules converted. Reported by: sneumann",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1021:432,log,log,432,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1021,2,['log'],['log']
Testability,I've just come across abicompat on Linux. Available on Ubuntu 18.04 for instance. Haven't had a chance to test it. What I have tested is whether the new openbabel-3.dll on Windows is a drop-in replacement for the openbabel-3.dll of OB3.0 without causing the old obabel to segfault or otherwise complain. And it works fine.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2190#issuecomment-624871109:106,test,test,106,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2190#issuecomment-624871109,2,['test'],"['test', 'tested']"
Testability,"I've just installed openbabel-2.1.1 from source without incident (though make and configure outputs are attached), and when I then create the perl makefile and run make, I also experience no errors). However, when I run 'make test', the conversion test fails:. PERL_DL_NONLAZY=1 /usr/bin/perl ""-MExtUtils::Command::MM"" ""-e"" ""test_harness(0, 'blib/lib', 'blib/arch')"" t/*.t; t/atom.............ok ; t/bond.............ok ; t/conversion.......FAILED tests 5-6, 8 ; Failed 3/9 tests, 66.67% okay; t/data.............ok ; t/format...........ok ; t/internalcoord....ok ; t/mol..............ok ; t/residue..........ok ; Failed Test Stat Wstat Total Fail Failed List of Failed; -------------------------------------------------------------------------------; t/conversion.t 9 3 33.33% 5-6 8; Failed 1/8 test scripts, 87.50% okay. 3/35 subtests failed, 91.43% okay.; make: *** [test_dynamic] Error 2. Doing a little debugging of the conversion test script, it looks like the line:. $obConversion->ReadString($obMol,""C1=CC=CS1"");. ; is failing silently as it creates an empty $obMol object, with no atoms. Also, the line:. $obConversion->WriteFile($obMol, ""test.mdl"");. appears to be failing silently as no file is created. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/677:226,test,test,226,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/677,8,"['Test', 'test']","['Test', 'test', 'tests']"
Testability,"I've just tested this and it seems that a couple of files were not included in the windows release. If you go to :. http://openbabel.svn.sf.net/viewvc/openbabel/openbabel/tags/openbabel-2-2-0/data/. and download the following missing files, it should work:; mmff94.ff; mmff94s.ff; mmffs_oop.par; mmffs_tor.par. HTH. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/822#issuecomment-281793906:10,test,tested,10,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/822#issuecomment-281793906,1,['test'],['tested']
Testability,"I've set this a high priority because I think it needs to be fixed before the impending release. With the latest beta 2 snapshot, the Pybel test suite fails due to the following result:; pybel.readstring(""smi"", ""CCC"").write(""smi"") now gives; ""[CH4][CH3][CH4]"" instead of the former ""CCC"". I have a feeling this must be due to r2864 but I can't see anything; wrong there. Geoff?. Noel. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/854:140,test,test,140,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/854,1,['test'],['test']
Testability,I've tested it on Anaconda build and it truly fix #325,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/326#issuecomment-233586604:5,test,tested,5,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/326#issuecomment-233586604,1,['test'],['tested']
Testability,"I've tested this on Linux and it works well for me. The hardware support is correctly used on a more modern hardware and correctly not attempted on the older one. Thanks. As you noted, it fails to make use of the hardware popcount support on VirtualBox instances, but if compiled with -mpopcnt flag anyway it will actually use it. Should an option be added for turning this on in cases such that as that? Something like ""-DFORCE_POPCNT=ON"". I don't know how common VirtualBox is, but apparently both of us use it so it can't be too rare. VMWare instances work correctly. So does whatever Amazon uses for their t2.small Amazon Linux instances.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/186#issuecomment-107211378:5,test,tested,5,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/186#issuecomment-107211378,1,['test'],['tested']
Testability,"I've updated the patch, and updated the title of this patch to better reflect what it does. The problem was that OBConversion::Write() always set SetOneObjectOnly() so there was no way it could be used to generate CML output. The CML writer looked at Index and IsLast to see if it was a single-molecule or multi-molecule output. If the former, it wrote <molecule> element. If the latter it wrote a <cml> element containing 2 or more <molecule> elements. Another problem was that it needs to Index++ before calling WriteMolecule(), as that's the only way for the initialization code check (Index==1) to be correct *and* for GetOutputIndex() to reflect the number of molecules written. That in turn means that WriteFile() and WriteString() need to set Index=0 before calling Write(). In addition, I updated WriteString() so it saves/restores more state, and I added the new testobconversion_writers.py test program to the list of test cases for ""make test"". Finally, I include a 2-molecule CML test case, to ensure that it is possible to use the updated Writer API implementation to create the correct output.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1923#issuecomment-455598175:900,test,test,900,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1923#issuecomment-455598175,4,['test'],['test']
Testability,"I've uploaded the test output. Search for ""not ok"". Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1013#issuecomment-281797135:18,test,test,18,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1013#issuecomment-281797135,1,['test'],['test']
Testability,"I've written some code. Just need to test it on Linux, and then I'll submit a pull request...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/184#issuecomment-106910388:37,test,test,37,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/184#issuecomment-106910388,1,['test'],['test']
Testability,"IF(import_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > S",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:18845,test,test,18845,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['test'],['test']
Testability,"IMO, this PR is untestable within the current codebase. For example, I can't get the test to pass on a Linux system where Open Babel is already installed. Unless you have another suggestion, I think we should just merge without the test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1826#issuecomment-396024793:85,test,test,85,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1826#issuecomment-396024793,2,['test'],['test']
Testability,"If I load a PDB molecule and afterwards load an XTC trajectory for that molecule (which seems to be the way to load a trajectory in Open Babel), then at some point the JVM crashes due to a crash in native code. I found out the reason is that the OBMol.finalize() method (which is called by the garbage collector when there is no more references to an object) includes a call to OBMol.delete() which is responsible for calling into the native code that then crashes. I have included the crash information in ""crash.txt"" and I will attach an example molecule and trajectory later (I do not see the possibility for multiple attachments). The code below is the reduced test case:. OBConversion conversion = new OBConversion();; conversion.SetInFormat(""pdb"");. OBMol molecule = new OBMol();; conversion.ReadFile(molecule, ""/path/to/AcAANMe.pdb"");. conversion.SetInFormat(""xtc"");; // Crash if next line is uncommented:; //conversion.ReadFile(molecule, ""/path/to/trajectory.xtc"");. molecule.delete();. Reported by: mkjensen",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1125:665,test,test,665,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1125,1,['test'],['test']
Testability,"If OpenBabel is used for automated batch conversion using the -m switch and only one input file is given, e.g. babel test.sdf -omol2 -m, the output file is *not* named ""test.mol2"" but ""1.mol2"". If at least two input file are given the output files have the same names as the input files (except the extension of course). Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/601:117,test,test,117,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/601,2,['test'],['test']
Testability,"If a molecule is created with H-H bonds (e.g., H2, or this hypothetical H3 molecule), these bonds are not deleted by OBMol::DeleteHydrogens(). Credit to the Avogadro project and Donald:. OBMol testMolH3;; OBAtom *testAtom3 = testMolH3.NewAtom();; testAtom3->SetAtomicNum(1);; testAtom3 = testMolH3.NewAtom();; testAtom3->SetAtomicNum(1);; testAtom3 = testMolH3.NewAtom();; testAtom3->SetAtomicNum(1);; testMolH3.AddBond(1,2,1);; testMolH3.AddBond(2,3,1);; // OK, we now have 3 hydrogen atoms, 2 bonds; testMolH3.DeleteHydrogens();; // should have 0 atoms, 0 bonds. (in fact, we have 0 atoms, 2 bonds!). A unit test is being added to test/mol.cpp for this. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/638:610,test,test,610,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/638,2,['test'],['test']
Testability,"If an SD File contains a <NAME> field with more than one line, OpenBabel produces invalid SD Files and SMILES files on output. The attached SDF (""methane.sdf"") has such a name. Test it as:. babel methane.sdf -o sdf; babel methane.sdf -o smi. It's not clear whether this should be considered a bug in the output modules, or the input module, and it boils down to the question: Is a name allowed to have multiple lines? If ""yes"", then the bug is in the output modules. If ""no"", then the input SDF reader should reject, or better yet, ignore multi-line names. Multi-line names are typically due to the 80-character restriction on line length in an SDF; very long names have to be broken into two lines. My suggestion is to allow them on input. On output, suppress any name that has multiple lines. You can write it in the SDF body, but not in the SDF header part. You have to drop it altogether for SMILES. Reported by: @cjames53",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/766:177,Test,Test,177,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/766,1,['Test'],['Test']
Testability,"If helpful (x86_64 as by `uname -m`) for Debian 12/bookworm (testing) with OpenBabel 3.1.1.+dfsg-6, the generation of the thiazole .sdf passes without complain or error. Despite the presence of the two bridged bicyclic structures, both for `--gen2d` and alternative `--gen3d`.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2417#issuecomment-941068420:61,test,testing,61,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417#issuecomment-941068420,1,['test'],['testing']
Testability,"If obconformer is used to generate a new conformation of a molecule with: . obconformer 30 250 c:\temp\myconformer.mol >c:\temp\foundconformer.mol. it shows, that the best of the 30 generated conformations has an energy of 143.113 kcal/mol.; The final minimization however starts with an energy of 197.557 which is not the energy of the conformer with lowest energy, but the energy of the LAST of the 30 conformers created. ; The energy of the conformer returned thus is 180.8 kcal/mol.; The energy of the conformation with which the final minimization starts may vary from calculation to calculation, but it is always the last from the list of conformers. Tested with Openbabel 2.4.1 (64bit) and Win10 pro 64 bit.; This bug was also present in Open Babel 2.3.2. See also:. http://forums.openbabel.org/Obconformer-Obminimize-tt4659382.html; http://forums.openbabel.org/obconformer-tt4659386.html. Reported by: yodah134. Original Ticket: [openbabel/bugs/990](https://sourceforge.net/p/openbabel/bugs/990)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1369:657,Test,Tested,657,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1369,1,['Test'],['Tested']
Testability,"If the user specified option 2 (expand dangling bonds as dummy atoms), there was the possibility of an invalid memory access as the logic handling this did not catch all possibilities. Fixed by testing for a nullptr.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2449:132,log,logic,132,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2449,2,"['log', 'test']","['logic', 'testing']"
Testability,"If you can, it's best to avoid this problem by writing to a string instead of disk. You can just imagine people running the tests with ""sudo"" and creating all sorts of permissions problems. Could you describe the problem exactly - maybe I can help...?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/311#issuecomment-225567152:124,test,tests,124,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/311#issuecomment-225567152,1,['test'],['tests']
Testability,"If you make the sulfur trioxide bond pattern a bit more specific (specifying hybridization) that fixes the issue:; ```; --- a/data/bondtyp.txt; +++ b/data/bondtyp.txt; @@ -47,7 +47,7 @@; # Sulfite; [#16D3]([#8D1])([#8D1-])([#8D1-]) 0 1 2 0 2 1 0 3 1; # Sulfur trioxide; -[#16D3]([#8D1])([#8D1])([#8D1]) 0 1 2 0 2 2 0 3 2; +[#16D3^2]([#8D1])([#8D1])([#8D1]) 0 1 2 0 2 2 0 3 2; # Sulfites; [#16D3]([#8D1])([#8])([#8]) 0 1 2 0 2 1 0 3 1; # Disulfur monoxide; ```. I would also change `import openbabel as ob` to `from openbabel import openbabel as ob` in `testgauss.py` and would consider adding AssignTotalChargeToAtoms to the Gaussian reader (it seems reasonable for the atomic formal charge to add up to the molecular):; ```; --- a/src/formats/gaussformat.cpp; +++ b/src/formats/gaussformat.cpp; @@ -1391,6 +1391,7 @@ namespace OpenBabel; dp->SetOrigin(fileformatInput);; mol.SetData(dp);; }; + mol.AssignTotalChargeToAtoms(total_charge);; mol.SetTotalCharge(total_charge);; mol.SetTotalSpinMultiplicity(spin_multiplicity);; ; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2385#issuecomment-860931988:553,test,testgauss,553,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2385#issuecomment-860931988,1,['test'],['testgauss']
Testability,"If you try to convert S=C=S to 3D with make3D(), it enters an infinite loop and exits with the following error:; RuntimeError: maximum recursion depth exceeded. This is because it keeps checking for whether the molecule has 3D coordinates, but the test fails as the molecule is linear. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/795:248,test,test,248,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/795,1,['test'],['test']
Testability,"If you try to generate the canonical SMILES of a molecule that consists entirely of hydrogen atoms, OpenBabel gets a segmentation violation:. echo ""[H][H]"" | babel -i smi -o can. It is caused by a test in cansmilesformat.cpp that tries to avoid starting a SMILES on a hydrogen atom; if the molecule is entirely hydrogen atoms, it ends up with a NULL atom pointer and tries to use it. Reported by: @cjames53",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/817:197,test,test,197,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/817,1,['test'],['test']
Testability,"If you use CMake 2.8, and rerun the configure step, ""make test"" should work better now. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796353:58,test,test,58,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796353,1,['test'],['test']
Testability,"In 2.3.2 version of Openbabel (both invocation from python bindings and obabel binary) process enters in the infinite loop (no errors, process running & consuming CPU) with some molecules, like the attached one, if trying to add hydrogens to the molecule from which they were removed previously. In 2.3.1 version it worked correctly; Test scenario:; obabel 1.sdf -d -O 2.sdf # Done correctly; obabel 2.sdf -h -O 3.sdf # Never ends. Reported by: remezn. Original Ticket: [openbabel/bugs/843](https://sourceforge.net/p/openbabel/bugs/843)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1223:334,Test,Test,334,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1223,1,['Test'],['Test']
Testability,"In absence of working knowledge of C++, I lack insight how Openbabel's C++ code is organized, interacting, and eventually providing results. Your log shared by 2029-02-29 might indicate ""something is broken"" in the setup of Open Babel accessible to you, because issuing the same command as you yields in my instance (OpenBabel 3.1.1. as provided by Debian) only the following:. ```shell; $ obabel 3lcs.pdb -O 3lcs_prot.pdb -p; ==============================; *** Open Babel Warning in PerceiveBondOrders; Failed to kekulize aromatic bonds in OBMol::PerceiveBondOrders (title is 3lcs.pdb). 1 molecule converted; ```. Speculation: the PLIB tool's file `requirements.txt` lists Open Babel (line 4, `openbabel~=3.0.0`), which might interfere here. It might be a library missing, or a conflict of ""which one to use"" e.g., if you have a system wide installation of OpenBabel, then partially overwritten by PLIB. My recommendation consists of. - to remove the current (local?) installation of Open Babel.; - if you reinstall Open Babel for general use on the computer (e.g., because of obgui), use the most recent version ([original source](https://github.com/openbabel/openbabel/releases)); - if you want to want to use Open Babel inside a Python project, use a virtual environment; isolated from the rest of Python libraries you have, an error in dependencies of the libraries were constrained to this compartment; - edit this (or any other) `requirements.txt` file. The current fetch of openbabel's Python bindings via pypi is known to be problematic; perhaps because it lists version 3.1.1.1 (four levels) on its [PyPi entry](https://pypi.org/project/openbabel/) instead of typical three (e.g., 3.1.1). Anyway, substitute the line of `openbabel` by `openbabel-wheel>=3.1.1.16` (as an example of application, see [here](https://github.com/OpenChemistry/fragments/blob/main/scripts/requirements.txt)) before running the usual `pip install -r ./requirements.txt` to amend the local Python setup. [openbabel-",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1973548939:146,log,log,146,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1973548939,1,['log'],['log']
Testability,"In addition to deducing file type based on file extension (e.g. "".mol2"") it is ; often possible to figure out file type based on content -- the so-called ; ""magic MIME type"" also used by the UNIX ""file"" command:. http://developer.kde.org/documentation/library/cvs-api/kdelibs-; apidocs/kio/kio/html/classKMimeMagic.html; http://httpd.apache.org/docs/2.2/mod/mod_mime_magic.html. http://en.wikipedia.org/wiki/Magic_number_(programming); #Magic_numbers_in_files. It would be useful to not only have a set of magic data for chemical files, ; but also for Open Babel to use magic typing to guess file type (e.g., for ; "".out"" or "".log"" types). -Geoff. Reported by: @ghutchis. Original Ticket: ""openbabel/feature-requests/92"":https://sourceforge.net/p/openbabel/feature-requests/92",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1461:627,log,log,627,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1461,1,['log'],['log']
Testability,"In cifs with no `_atom_site_symbol`, the old logic attempted to use `_atom_site_label`. Issue is that most labels are symbol + a number, e.g. `Na1`. New logic strips numbers before attempting to use symbol. Still not perfect, but much better. ![output](https://cloud.githubusercontent.com/assets/1449833/3997616/e2a1babc-2940-11e4-975c-aedc5b5f0543.png)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/88#issuecomment-52929087:45,log,logic,45,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/88#issuecomment-52929087,2,['log'],['logic']
Testability,"In converting the attached amorphous silicon cluster 3x3x3 supercell from XYZ to Mol2, obabel appears to hang while calculating the ring topology (the program did not finish in 22 hours). In contrast, the unit cell XYZ to Mol2 is successful and completes in five seconds. Please find attached a tarball, split into two chunks using gnu split, containing the structures and corresponding output logs, and the successful output for the single unit cell. In gdb, the backtrace is identical whenever I stop the execution except for lines #0 and #1. Shown is the backtrace after execution was stopped manually after 22 hrs. This problem occurs with the head revision (r4519) on ubuntu-10.04 x86_64. Reported by: @jiahao",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1121:394,log,logs,394,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1121,1,['log'],['logs']
Testability,"In fact, this patch completely breaks any svg output for multiple molecules. I'm planning to fix point 2 an 3 by making this an option, and reworking the seperation of roles between svgformat and depictor/svgpainter. . More input files for test are needed. The quinin mol2 file provided at http://pqr.pitt.edu/ can not be read. Where can I find files containing more than one molecule?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/202#issuecomment-122782965:240,test,test,240,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/202#issuecomment-122782965,1,['test'],['test']
Testability,In my case it is just `swig` not installed. The error log is good at misleading the user to find out the root cause. It would be better to print the original error to the console instead of `Error: SWIG failed. Is Open Babel installed?`,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-2242556743:54,log,log,54,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-2242556743,1,['log'],['log']
Testability,"In some MDL files, I found the R# symbols can not handle by MDL plugin. for example:; 51.0955 -14.3670 0.0000 R# 0 0 0 0 0 0 0 0 0 0 0 0. And in bool MDLFormat::TestForAlias() it does not support this format. if(symbol.size()==1 || isdigit(symbol[1]) || symbol[1]=='\'' || symbol[1]=='¢'). Thank you. Reported by: axot. Original Ticket: [openbabel/bugs/876](https://sourceforge.net/p/openbabel/bugs/876)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1256:161,Test,TestForAlias,161,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1256,1,['Test'],['TestForAlias']
Testability,"In some cases, functional groups are not converted correctly from cdx files in which they are represented by an alias instead of having all bonds drawn explicitly. The attached cdx file contains three structures of 1,3-substituted benzenes. Using Open Babel 2.4.0, the command ""obabel -icdx test.cdx -ocan"" yields the following result: . *c1cccc(c1)C(F)(F)F	; *c1cccc(c1)C(Cl)(Cl)Cl	; IC(c1cccc(c1)C(I)(I)I)(I)I	. The only structure converted correctly is the one with all bonds drawn explicitly. For the other structures, possibly dependent on orientation, one of the two functional groups is missing. Note that this happens both when the bond is drawn to the ""C"" in the alias, or, in a less correct representation, to the halogen. I could also reproduce this behavior for other functional groups, such as CN. Reported by: mdbu. Original Ticket: [openbabel/bugs/976](https://sourceforge.net/p/openbabel/bugs/976)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1355:291,test,test,291,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1355,1,['test'],['test']
Testability,"In that case, I'll check out old versions and see whether I can pinpoint the breaking commit, because that would save me a lot of trouble. (And I note the failing test.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1878#issuecomment-411042337:163,test,test,163,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1878#issuecomment-411042337,1,['test'],['test']
Testability,"In the current CVS version (2.0.0b5 2005-10-01) the -m flag to babel ; does not work as documented. Unless I misunderstand, the ""split"" feature should take a multi-; molecule file and produce a pile of single-molecule files:. babel test/RadIn1.smi Rad.xyz -m. There are 9 molecules in RadIn1.smi, so there should be Rad1.xyz ; through Rad9.xyz. Instead:; babel test/RadIn1.smi Rad.xyz -m; 9 molecules converted; 2 files output. The first is RadIn1.xyz. RadIn1.xyz contains the first molecule. (Good.); RadIn2.xyz contains all of the remaining molecules (Bad.). Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/483:232,test,test,232,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/483,2,['test'],['test']
Testability,"In the current SVN trunk, conversion of a gzip encoded file only generates one molecule:. tools/babel ~/Desktop/Downloads/MMFF94_dative.mol2.gz -osmi; C(C(O)=O)N AGLYSL01. But there are, in fact, 761 molecules in the file:; tools/babel ~/Desktop/Downloads/MMFF94_dative.mol2 -osmi; ...; 761 molecules converted; 9 warnings 9281 audit log messages . (Perhaps it's faster and better to implement a gzip decoder like the lineend.h code? This might also solve other PR in this list.). -Geoff. Reported by: @ghutchis. Original Ticket: ""openbabel/feature-requests/111"":https://sourceforge.net/p/openbabel/feature-requests/111",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1480:334,log,log,334,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1480,1,['log'],['log']
Testability,"In this highly simplified case, I would expect the output to be just one line, C=COC=C, both with and without the -c flag. In the general case, the line returned with the -c option must be a member of the set of lines which are returned without the -c option. Also, your prior patch has gotten mangled by the markdown. Is the only change to reverse the sense of the 'if' test? If so, doing that causes the 'make test' test suite to fail, but without a useful error message.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/227#issuecomment-388594506:371,test,test,371,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/227#issuecomment-388594506,6,['test'],['test']
Testability,"In your test case, you attempt to delete the same atoms twice. The first time, the number of atoms goes from 20 to 17. The second time, it doesn't change. This is because they have already been suppressed. It's true that DeleteHydrogens doesn't actually delete anything. It suppresses the explicit representation of hydrogen atoms in the molecular graph.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/363#issuecomment-269607349:8,test,test,8,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/363#issuecomment-269607349,1,['test'],['test']
Testability,InChI code reports error:; Wrong 0D stereo descriptor(s); for molecules like; CN(C)/C=C/1\CCNC1=O BIONET_10A-007 hetatm; from the test set. Reported by: @chrismorl,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/542:130,test,test,130,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/542,1,['test'],['test']
Testability,"Indeed, I got this:; The following tests FAILED:; 	 25 - test_canonstable_1 (Failed); 	113 - test_tautomer_2 (Failed); Then I used test_runner and had this:; julien@debian:~/projects/openbabel/build/bin$ ./test_runner tautomertest 2; /home/julien/projects/openbabel/test/tautomertest.cpp:74: canonicalTautomers.size() == unsigned(1) [15 == 1] (FAIL)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/227#issuecomment-388644216:35,test,tests,35,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/227#issuecomment-388644216,2,['test'],"['test', 'tests']"
Testability,Is BitGrid usable ? hbtypes.txt is missing for test. lshyamal AT yahoo DOT com. Reported by: *anonymous,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/423:47,test,test,47,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/423,1,['test'],['test']
Testability,Is it possible to add a test case? E.g. a test for a weirdly long bond. Would be great. Details at https://open-babel.readthedocs.io/en/latest/Contributing/Testing.html but feel free to ask me any questions.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1890#issuecomment-423955527:24,test,test,24,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1890#issuecomment-423955527,3,"['Test', 'test']","['Testing', 'test']"
Testability,"Is there some way we can add a unit test for the correct GAFF atom types (i.e., beyond the current energy evaluations)? This way, if some future commit accidentally breaks GAFF typing, we would know.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/278#issuecomment-196389370:36,test,test,36,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/278#issuecomment-196389370,1,['test'],['test']
Testability,"Is this a problem with 2.2.3? If not, I'm going to mark this bug as pending. Please reopen if still a problem. Part of the problem here is that we are not responsible for the versions of OpenBabel in the various distributions. They would have generated the Python bindings themselves, and it is likely that they didn't use the recommended version of SWIG (instead, they would have used the ancient SWIG provided by their own distribution). A possible solution going forward is that I should include the Python test suite as part of the standard OpenBabel test suite. Then they would know it wasn't working. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/972#issuecomment-281796422:510,test,test,510,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/972#issuecomment-281796422,2,['test'],['test']
Testability,"It all looks good to me. A minor fix to the test code is that as there is no stdin, you just pass a single argument to run_exec. See docs at https://open-babel.readthedocs.io/en/latest/Contributing/Testing.html. Here's what I've got - it segfaults before the patch, but passes after.; ```; def testNoInput(self):; """"""Ensure that this does not segfault (PR#1818)""""""; self.canFindExecutable(""obabel""); output, error = run_exec(""obabel -i""); ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1818#issuecomment-388581660:44,test,test,44,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1818#issuecomment-388581660,3,"['Test', 'test']","['Testing', 'test', 'testNoInput']"
Testability,"It can be accepted but it'll just slow down the review, because I'll have to actually look and see what you've done. With a test case, I can just go ""fine"". :-)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1798#issuecomment-375657629:124,test,test,124,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1798#issuecomment-375657629,1,['test'],['test']
Testability,"It could be a difference in the Python versions we are testing. Python 3 seems to be more strict about tabs vs. spaces than Python 2 was. According to http://stackoverflow.com/a/28326024/5828163:. > Python 3 disallows mixing the use of tabs and spaces for indentation.; >; > Python 2 code indented with a mixture of tabs and spaces should be converted to using spaces exclusively.; >; > When invoking the Python 2 command line interpreter with the -t option, it issues warnings about code that illegally mixes tabs and spaces. When using -tt these warnings become errors. These options are highly recommended!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1568#issuecomment-302161981:55,test,testing,55,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1568#issuecomment-302161981,1,['test'],['testing']
Testability,"It doesn't seem to be a build problem as much as a run time problem so the build logs wouldn't help I'm afraid (I see that my wording was unclear above, I meant if you could make a debug build and run that with e.g. gdb).; I also did not see any mention of the failing testTemplates in the test output of the build, but there were some timeouts so it may be hidden in other stuff.; Unfortunately, without access to an arm64 machine to test on I will not be able to locate the problem.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2417#issuecomment-942187828:81,log,logs,81,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417#issuecomment-942187828,4,"['log', 'test']","['logs', 'test', 'testTemplates']"
Testability,"It equally might be a question how bond order is (re)calculated and eventually visualized. From the colour scheme applied and the representation of single/double/aromatic bonds, it is possible you used a different molecule viewer than [Jmol](http://jmol.sourceforge.net/). Based on the reference file you mention, and the test conversion of the .sdf into a .mol2 (same instruction, OpenBabel 3.1.1 as provided by the repositories in Linux Debian 12/bookworm, branch testing), I submitted both files to . + the version provided via debichem/Debian's repository (a bit old, version 14.6.4 by 2016); + version 14.31.47 by June 2021, fetched from sourceforge. In both cases, the distinct representation of the keto-enol form shown in your representation of the .sdf is retained. ![comparison_new](https://user-images.githubusercontent.com/19709084/136707788-ff0ace1d-475b-4ac2-ae13-251085a08016.png). Reference data sets and the .png screen photos of the two tests are attached in the .zip below. [comparison.zip](https://github.com/openbabel/openbabel/files/7317947/comparison.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2415#issuecomment-939526298:322,test,test,322,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2415#issuecomment-939526298,3,['test'],"['test', 'testing', 'tests']"
Testability,"It has been some time I was installing OpenBabel in Xubuntu 18.04 LTS; but gradually transitioned to Debian 12/bookworm (branch testing) --; because of this, I'm not sure if the installation in contemporary; Ubuntu Fossa matches 1:1 Debian bookworm. Some weeks ago, I run into a related problem with pytest. According; to one of the maintainers, it is up to the distributions how the; packages are eventually are named in the package managers. Here:; in Debian 12 pytest for Python3 is called on the CLI by `pytest-3` vs.; pytest for legacy Python2 by `pytest`, all while pytest calls pytest; only `pytest` (e.g., in their documentation) because they moved to; Python3-only for quite some time (cf. https://github.com/pytest-dev/pytest/discussions/9481). My suggestion for the issue of OpenBabel (which needn't be one by; OpenBabel /per se/): try. ```bash; sudo apt-get install python3-openbabel; ```. to get it working. Good luck!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013898746:128,test,testing,128,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013898746,1,['test'],['testing']
Testability,It is perfectly valid in RSMI to be missing a reactant or product (or indeed both). I've added support for these so that the following are now read without any trouble:; ```; >>N; O>>; >>; ```; These are also written out exactly as above - no changes were made to make this happen. Test cases included.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1655:282,Test,Test,282,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1655,1,['Test'],['Test']
Testability,"It looks like the change that caused this is bond typing. I initially expected something in kekulize.cpp and narrowed it down to a change in commit f97eb3f4, since triazine successfully roundtrips in the parent commit. However, only the changes in bondtyp.txt are necessary to cause this regression, so it's probably an effect from this line:. ```; # NR2 in ring with hybridized carbon neighbors; [#7D2R][#6D3^2] 0 1 2; ```. In case it helps, I started looking through the aromatics.smi from the testing suite to see if there were other examples of the failed roundtripping ([code attached](https://github.com/openbabel/openbabel/files/1095251/test_aromatic_roundtrip.sh.txt)). These are the changes between 2.3.2 and 2.4.1:. ```; CHECK c1ncno1 C1=[N]=C[N]O1 1,2,4-oxadiazole; CHECK c1ncns1 [CH]1N=C[N]S1 1,2,4-thiadiazole; CHECK c1cncnn1 C1=N[N]C=N[CH]1 1,2,4-triazine; CHECK c1ncncn1 C1=[N]=CN=C[N]1 s-triazine; CHECK n1cnnnc1 [N]1=CN=N[N]C=1 1,2,3,5-tetrazine; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1360#issuecomment-310413163:496,test,testing,496,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1360#issuecomment-310413163,1,['test'],['testing']
Testability,"It looks to me as if it's pulled in as part of maeparser. Unittest is added as a target in external/maeparser-1.1/CMakeLists.txt when ENABLE_TESTS is on, I can see it built during make, and it's included in CTestTestfile.cmake in my build directory. Build log (make.log) and bziped src directory attached. [src.zip](https://github.com/openbabel/openbabel/files/4523846/src.zip); [make.log](https://github.com/openbabel/openbabel/files/4523832/make.log)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2161#issuecomment-618501603:256,log,log,256,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2161#issuecomment-618501603,4,['log'],['log']
Testability,"It seems I fixed half the bug (the XML part), but just by accident!. It still fails if zlib is missing though. I've changed the title of the bug to reflect this. (For my reference, to test the bug, I need to rename /usr/lib/zlib.a to /usr/lib/backup_zlib.a and maybe also zlib.so). Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/961#issuecomment-281796227:184,test,test,184,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/961#issuecomment-281796227,1,['test'],['test']
Testability,"It seems to be working now, so it's reasonable to keep it working. I'm not really familiar with it though, so if I get stuck on how to test it I might be back to you...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1946#issuecomment-472961677:135,test,test,135,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1946#issuecomment-472961677,1,['test'],['test']
Testability,"It turns out that the part of the InChI writer that handles the stereo assumes that AtomIds are simply AtomIdxs-1, but this is not true in general, and can lead to an incorrect stereo layer. The fix is to properly convert from AtomIds to AtomIdxs. Although this only affects 11 molecules in ChEMBL when converting straight from SMI to InChI (and so wouldn't have been noticed before), it was already causing my second RInChI test case to fail (a test case taken from the RInChI docs). My guess is that it must be copying the molecule when generating the shared pointer, thus rearranging either the Ids or Idxs. To be honest, I'm not 100% convinced that we need AtomIds - I must talk to Tim about this sometime.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1652:425,test,test,425,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1652,2,['test'],['test']
Testability,"It works fine for me under MSVC. I've checked it in as a test case - if it fails on Linux tonight, we can follow it up. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1051#issuecomment-281797865:57,test,test,57,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1051#issuecomment-281797865,1,['test'],['test']
Testability,"It would be great if you could file a separate bug with a testcase. On Thu, 9 Aug 2018, 17:02 Fedor Golishevskiy, <notifications@github.com>; wrote:. > While we are at it, I'm pretty sure the handling of kCDXProp_Name; > <https://github.com/openbabel/openbabel/blob/c9c500388dac1469364f778f4f4aa3a6ff7cc7c5/src/formats/chemdrawcdx.cpp#L777>; > is incorrect, as I have discovered while writing my own little CDX parser; > built with Kaitai Struct in Python.; >; > The spec makes a sneaky exception; > <https://www.cambridgesoft.com/services/documentation/sdk/chemdraw/cdx/properties/Name.htm>; > for the Name prop inside an ObjectTag such that the nStyleRuns field is; > completely missing, and the prop contains just raw text data. Thus, the; > code in question will misinterpret the first 2 bytes of text as nStyleRuns; > when the prop is inside the ObjectTag; > <https://www.cambridgesoft.com/services/documentation/sdk/chemdraw/cdx/ObjectTag.htm>; > object.; > This has caused my parser to crash and I don't see any special casing in; > C++ here either.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/pull/1878#issuecomment-411809453>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGUf3wQN7zmOiAJHUGsGlj2GdkbtBks5uPF0JgaJpZM4Vw_WZ>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1878#issuecomment-412298916:58,test,testcase,58,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1878#issuecomment-412298916,1,['test'],['testcase']
Testability,"It's been a while since Wilmer and I wrote these, but I'll brush up on my math and discuss with him in the coming weeks!. I do remember that I ran this implementation against the original code (at [numat/EQeq](https://github.com/numat/eqeq)) and believe I got the same values for a test series of MOFs. If you can provide an example where the results are different, that'd provide us with a useful starting point.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1861#issuecomment-401575124:282,test,test,282,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1861#issuecomment-401575124,1,['test'],['test']
Testability,"It's failing on Mac - maybe that's an old Python version?. ```; 218/227 Test #218: pytest_babel .....................***Failed 0.23 sec; /Users/runner/work/openbabel/openbabel/scripts/python:/Users/runner/work/openbabel/build/lib; File ""/Users/runner/work/openbabel/openbabel/test/testbabel.py"", line 528; output, err = run_exec( f""obrms -t 10 {sdffile} {sdffile}""); ^; SyntaxError: invalid syntax; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2608#issuecomment-1636424704:72,Test,Test,72,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2608#issuecomment-1636424704,3,"['Test', 'test']","['Test', 'test', 'testbabel']"
Testability,"It's impossible to access the values of data fields in; SD files using Python. The problem is that the; GetData() method should return OBPairData(), but; instead returns OBGenericData(). The latter does not; have a GetValue() method. Here is some example code:. >>>> Python; from openbabel import *. obconversion = OBConversion(); obconversion.SetInFormat(""sdf""); obmol = OBMol(). notatend = obconversion.ReadFile(obmol,""test.sdf""); assert notatend, ""No molecules in file!""; assert obmol.HasData('Molecular weight'), ""Doesn't have; a field called molecular weight!""; data = obmol.GetData('Molecular weight'); print ""The data has the following class: %s"" %; data.__class__; print ""The available methods include:""; print dir(data). >>>> Output; The data has the following class: <class; 'openbabel.OBGenericData'>; The available methods include:; ['Clone', 'GetAttribute', 'GetDataType', SetAttribute',; '__class__', '__del__', '__delattr__', '__dict__',; '__doc__', '__getattribute__', '__hash__', '__init__',; '__module__', '__new__', '__reduce__','__reduce_ex__',; '__repr__', '__setattr__', '__str__',; '__swig_destroy__', '__weakref__', 'this', 'thisown']. >>>> Notes; Please find attached test.sdf. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/532:421,test,test,421,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/532,4,"['assert', 'test']","['assert', 'test']"
Testability,"It's looking as if Open Babel is taking the second to last step from Gaussian geometry optimization output. For instance, a CCSD(T)/QZVP optimization on the Li_2^+ ion gives a final bond length of 3.133200 Å when you look at the log file, but extracting the geometry from the log file with OpenBabel 2.3.2 I get 3.13236 Å. Log file attached. Reported by: jussilehtola. Original Ticket: [openbabel/bugs/908](https://sourceforge.net/p/openbabel/bugs/908)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1288:229,log,log,229,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1288,3,"['Log', 'log']","['Log', 'log']"
Testability,"It's not standard, it's an extension. The example testcase I provide is a real-life SMILES string that contains more than 99 open rings. We don't have control over what SMILES strings other tools generate. (Rereading this, I sound grumpy - I'm not :-) - by the way, just checked your papers - would be good to get some of your xtallography stuff into Open Babel)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1677#issuecomment-339599656:50,test,testcase,50,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1677#issuecomment-339599656,1,['test'],['testcase']
Testability,"Java binding libopenbabel_java.dylib - crashes the JVM using simple test OBabel. Crashes verified for following environments:; OpenBabel Source:; 2.3.1 source; 2.3.2 source; Latest from Github (Feb 24th); Host OS: MAC OS X 10.9.5; Java: 1.7.0_40, 1.8.0_66 and 1.8.0_74. Build process with make outputs are in attachments and include CMakeCache.txt are from the Latest OpenBabel source from github and the Java 1.8.0_74 environment. (Note other build combinations had same problem but figured latest code was best bet for figuring out this issue). > cmake -DEIGEN3_INCLUDE_DIR=/Users/marko/ob/eigen3.2.8 -DRUN_SWIG=ON -DJAVA_BINDINGS=ON -DCMAKE_INSTALL_PREFIX=/Users/marko/ob/vlatest/install ../ob-src 2>&1 | tee cmake.out; > make | tee make.out; > make install | tee make_install.out; > make test | tee make_test.out. The make activities (cmake, make, make install, make test) all run successfully. I had to convert ""#""'s to ""//"" comments in open-babel-java.i since the 3.0.8 Swig I have in my environment treats them as directives. The libopenbabel_java.jnilib is found and being loaded but crashes the JVM. The following is the JVM crash to the console:. ```; #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x00000001363187a5, pid=17284, tid=6403; #; # JRE version: Java(TM) SE Runtime Environment (8.0_74-b02) (build 1.8.0_74-b02); # Java VM: Java HotSpot(TM) 64-Bit Server VM (25.74-b02 interpreted mode bsd-amd64 compressed oops); # Problematic frame:; # C [libawt_lwawt.dylib+0x447a5] JNI_OnLoad+0x91; #; # Failed to write core dump. Core dumps have been disabled. To enable core dumping, try ""ulimit -c unlimited"" before starting Java again; #; # An error report file with more information is saved as:; # /Users/marko/eclipseLuna_ws/IZIntegOpenBabel_1_8_0_74/hs_err_pid17284.log; #; # If you would like to submit a bug report, please visit:; # http://bugreport.java.com/bugreport/crash.jsp; # The crash happened outside the Java Virtual Machine",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1352:68,test,test,68,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1352,3,['test'],['test']
Testability,"John has described the atom contributions in the Daylight aromaticity plus some extensions (e.g. [S+]-[O-] treated the same as [S]=[O].) https://figshare.com/articles/Daylight_Aromatic_Atoms/3370945. I have implemented these in the code. This replaces the existing code which aromatised things at least some of which shouldn't have been, at least in the context of SMILES strings. For example, rings containing radicals. This is partly because the existing code couldn't test for exact valence, as the hydrogens were floating and so a radical nitrogen looked similar to a nitrogen with a hydrogen. We may support multiple aromaticity models in future, but at least now we have a firm foundation in a documented 'spec'. I have a benchmark set of potentially aromatic rings over at https://github.com/nextmovesoftware/smilesreading and I have been comparing the before vs after picture. As far as I can tell, everything is an improvement.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1638:471,test,test,471,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1638,2,"['benchmark', 'test']","['benchmark', 'test']"
Testability,"Just GetSymbol will work without the OBElements. On Sun, 9 Jun 2019, 10:30 Naruki Yoshikawa, <notifications@github.com>; wrote:. > I tried the following test.py in the current master,; >; > from openbabel import openbabel; >; > print(openbabel.OBElements.GetSymbol(6)); >; > but it yielded the followng error.; >; > $ python3 test.py; > Traceback (most recent call last):; > File ""test.py"", line 3, in <module>; > print(openbabel.OBElements.GetSymbol(6)); > AttributeError: module 'openbabel.openbabel' has no attribute 'OBElements'; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/pull/1601?email_source=notifications&email_token=AAALCGIMJBQYZF7WH4HAFBLPZTETHA5CNFSM4DS2IKEKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODXIGZPI#issuecomment-500198589>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AAALCGODS2U3OMT37K6KUVTPZTETHANCNFSM4DS2IKEA>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1601#issuecomment-500201752:153,test,test,153,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1601#issuecomment-500201752,3,['test'],['test']
Testability,"Just a note. The test framework on master is new and improved so you will; have to make some edits to your test file. If it's not obvious I can help; once it's checked in.; - Noel. On 11 September 2013 15:09, Geoff Hutchison notifications@github.comwrote:. > This looks fine, but I'm not going to merge directly into openbabel-2-3-x.; > Can you re-submit this as a patch to master? (I'll almost certainly merge; > into openbabel-2-3-x soon, but I'd prefer to merge into master, make sure; > everything is happy for a few weeks before going into stable.); > ; > Thanks!; > ; > —; > Reply to this email directly or view it on GitHubhttps://github.com/openbabel/openbabel/pull/25#issuecomment-24242503; > .",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/25#issuecomment-24254165:17,test,test,17,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/25#issuecomment-24254165,2,['test'],['test']
Testability,"Just an example program I used when testing Java bindings. We already have similar thing in Java so it is of limited utility. But it works and I find Scala nicer, might as well preserve for posterity.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/29:36,test,testing,36,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/29,1,['test'],['testing']
Testability,"Just create the virtual environment (example for Linux Debian attached below); the isolated vessel of Python's standard library is available to you in a matter of a few seconds. I don't know how Python was installed to the computer you use (perhaps by an installer from python.org, maybe Winpython, maybe chocolately, maybe ...). It is possible other programs / utilities / the operating system (now) rely on Python; hence, the sudden removal of Python can unexpectedly hamper / corrupt the work elsewhere. *This* is a reason of the previous suggestion to simply set up a virtual environment (of Python) for your project because you know to eventually use some functionality outside the standard library & share a `requirements.txt` file. It equally helps you to build something in a reproducible way (share with a colleague, your script is written in partial fulfillment of a class, etc.). Regarding the GUI of openbabel: you don't have to use it. Like every GUI, the developers selected some functionality which now is presented in a hierarchy assumed to be logical and useful. If there is only one, or a few of structures to interconvert into an other file format, the GUI *can* be useful. The access from the CLI however is *more suitable* (or, the only reasonable way) to interact with openbabel to *pipe* and *tee* input, output, error streams with a script, or programs (grep, sed, awk; an other instance of openbabel; something written by you, etc.). In the case of a Debian based Linux operating system, for instance, the installation is modular: bindings to python, or the installation of the gui are optional (require an additional explicit opt-in) to `openbabel` and `libopenbabel7` for the executable to the CLI:. ![synaptic](https://github.com/openbabel/openbabel/assets/19709084/c40aa8e1-4551-4e89-8f44-d6fc35df2400). [log.txt](https://github.com/openbabel/openbabel/files/13270060/log.txt)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1795509432:1060,log,logical,1060,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1795509432,6,['log'],"['log', 'logical']"
Testability,"Just for information with the patch, I got this:; 2 molecules converted; 1 info messages 34 audit log messages",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1852#issuecomment-395565094:98,log,log,98,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1852#issuecomment-395565094,1,['log'],['log']
Testability,"Just found old Visual C++ 2005 x86 runtimes. They DO run silently using ""/q:a.."" switch. But it seems that newer versions do not use it.; Example:; VC++ 2005 x86 runtime:; vcredist_x86.exe /q:a /c:""msiexec /i vcredist.msi /qn /l* %temp%\vcredist_x86.log"". Original comment by: romanzhv",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1291#issuecomment-281804063:250,log,log,250,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1291#issuecomment-281804063,1,['log'],['log']
Testability,"Just tested latest dev code on a 64bit Linux system. Seems to work fine:. > babel ten.fs -ifs -s'Nc2nc(c1ccccc1)nc3ccccc23' out.smi; 1 candidates from fingerprint search phase; 1 molecule converted. makeio, could you test the development code and see whether the problem has gone away for you. See the instructions at http://openbabel.org/wiki/CMake; 1 info messages 57 audit log messages. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796341:5,test,tested,5,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796341,3,"['log', 'test']","['log', 'test', 'tested']"
Testability,"Just to follow-up (only a year too late). The new code is much improved indeed. However, I'm still able to find some test failures, e.g. S=c1[nH]c(c([nH]1)c1ccccc1)c1ccccc1 and Sc1[nH]c(c(n1)c1ccccc1)c1ccccc1 don't resolve to the same form. I can provide a longer list if @timvdm or anyone else is interested. A separate issue is that it's not possible to use the functor from the Python API. I know that OEChem have solved this by somehow enabling Python functions to be passed in. An alternative would be to do as Tim did previously for automorphisms (I think), where there is an API function that either has a default functor or acts as a convenience function to just return a vector<OBMol*> of results (perhaps with an optional maxsize argument?).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2171#issuecomment-913157043:117,test,test,117,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2171#issuecomment-913157043,1,['test'],['test']
Testability,"Just to illustrate what this issue is about, here's a test CMakeLists.txt; ```; find_package(OpenBabel3); add_library(lib lib.cpp); target_link_libraries(lib openbabel); ```; If you run it (with 3.1.0), you will get an error; ```; Target ""lib"" links to target ""Boost::system"" but the target was not found.; Perhaps a find_package() call is missing for an IMPORTED target, or an; ALIAS target is missing?; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2197#issuecomment-625322890:54,test,test,54,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2197#issuecomment-625322890,1,['test'],['test']
Testability,"Just upgraded to MacOSX 10.8, and am trying to recompile OpenBabel with Perl Bindings.; XCode cmdline tools, cmake, perl 5.12.4, eigen, swig, swig-perl, etc are all up to date. %svn co https://openbabel.svn.sourceforge.net/svnrootopenbabel/openbabel openbabel; %cd ../build/openbabel; %/opt/local/bin/cmake \; -DRUN_SWIG=ON \; -DPYTHON_BINDINGS=ON \; -DPERL_BINDINGS=ON \; -DPERL_LIBRARY=/System/Library/Perl/5.12/darwin-thread-multi-2level/CORE/libperl.dylib \; -DPERL_INCLUDE_PATH=/System//Library/Perl/5.12/darwin-thread-multi-2level/CORE \; -DJAVA_BINDINGS=ON \; -DEIGEN3_INCLUDE_DIR=/opt/local/include/eigen3 \; ../../src/openbabel/openbabel/trunk/; % make; % make test; % sudo make install; % setenv PERL5LIB ""/usr/local/lib:~/lib""; % perl -de 1; <1> use OpenBabel;; Can't find 'boot_Chemistry__OpenBabel' symbol in /usr/local/lib/libOpenBabel.dylib; at /usr/local/lib/OpenBabel.pm line 11; Compilation failed in require at (eval 6)[/System/Library/Perl/5.12/perl5db.pl:638] line 2.; at (eval 6)[/System/Library/Perl/5.12/perl5db.pl:638] line 2. The terminal stream from the commands is attached. cmake complained about wxWidgets (macports for this is broken, but I don't care about the GUI), conio.h and xdr.h, though the latter is present in the source tree, and SCANDIR_NEEDS_CONST test failed (not sure what that is). ; make proceeded with just warnings.; make test passed all except pybindtest_bindings and pybindtest_example, but OpenBabel.pm fails when used in perl. I don't quite understand what went wrong. Anyone else have success building on MacOSX 10.8 ? Any help greatly appreciated. Reported by: do0gie",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1202:670,test,test,670,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1202,3,['test'],['test']
Testability,"KING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESS",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:14389,test,test,14389,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['test'],['test']
Testability,"KING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESS",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:11939,test,test,11939,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['test'],['test']
Testability,"LES=""authn_core authz_core socache_shmcb unixd actions alias auth_basic authn_alias authn_anon authn_dbm authn_default authn_file authz_dbm authz_default authz_groupfile authz_host authz_owner authz_user autoindex cache cgi cgid dav dav_fs dav_lock deflate dir disk_cache env expires ext_filter file_cache filter headers include info log_config logio mem_cache mime mime_magic negotiation rewrite setenvif speling status unique_id userdir usertrack vhost_alias"" CALLIGRA_FEATURES=""kexi words flow plan sheets stage tables krita karbon braindump author"" COLLECTD_PLUGINS=""df interface irq load memory rrdtool swap syslog"" CPU_FLAGS_X86=""mmx mmxext sse sse2"" ELIBC=""glibc"" GPSD_PROTOCOLS=""ashtech aivdm earthmate evermore fv18 garmin garmintxt gpsclock isync itrax mtk3301 nmea ntrip navcom oceanserver oldstyle oncore rtcm104v2 rtcm104v3 sirf skytraq superstar2 timing tsip tripmate tnt ublox ubx"" INPUT_DEVICES=""evdev synaptics"" KERNEL=""linux"" L10N=""en en_AU en_GB en_US en-AU en-GB en-US"" LCD_DEVICES=""bayrad cfontz cfontz633 glk hd44780 lb216 lcdm001 mtxorb ncurses text"" LIBREOFFICE_EXTENSIONS=""presenter-console presenter-minimizer"" OFFICE_IMPLEMENTATION=""libreoffice"" PHP_TARGETS=""php5-6"" PYTHON_SINGLE_TARGET=""python3_4"" PYTHON_TARGETS=""python2_7 python3_4"" RUBY_TARGETS=""ruby21 ruby22"" USERLAND=""GNU"" VIDEO_CARDS=""nvidia intel"" XTABLES_ADDONS=""quota2 psd pknock lscan length2 ipv4options ipset ipp2p iface geoip fuzzy condition tee tarpit sysrq steal rawnat logmark ipmark dhcpmac delude chaos account""; Unset: CC, CPPFLAGS, CTARGET, CXX, EMERGE_DEFAULT_OPTS, INSTALL_MASK, LC_ALL, PORTAGE_BUNZIP2_COMMAND, PORTAGE_COMPRESS, PORTAGE_COMPRESS_FLAGS, PORTAGE_RSYNC_EXTRA_OPTS, USE_PYTHON; ```. ## Steps to Reproduce; On a 64-bit Gentoo Linux testing system (with `ACCEPTED_KEYWORDS=""~amd64""` in `/etc/portage/make.conf`) run:. ```bash; emerge '=sci-chemistry/openbabel-2.3.2-r1::gentoo'; ```. as root, with the options showed in the above `emerge --info` output. . Thanks for your time,; Brenton",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1566:12974,test,testing,12974,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1566,1,['test'],['testing']
Testability,"LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(impo",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:13961,test,test,13961,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,2,['test'],"['test', 'testbindings']"
Testability,"Let me first answer the question you are trying to answer. With the current master (not 2.4.1):; ```; import pybel; ob = pybel.ob; for element in [ob.Fluorine, ob.Oxygen, ob.Nitrogen, ob.Carbon, ob.Boron, ob.Beryllium, ob.Lithium]:; print(ob.GetTypicalValence(element, 0, 0)); ```; Output is:; ```; >py test.py; 1; 2; 3; 4; 3; 2; 1; ```; Note that guessing the valence in this manner is imprecise - you can't always get it right when you start moving down the periodic table. If you are writing cheminformatics code relying on these values, you will run into problems at some point. Regarding the GetImplicitValence function, let's just say that it's likely to be removed or somehow fixed/changed in the near future, as the way Open Babel handles implicit hydrogens has changed, and the name of the functions doesn't correspond to what they actually do. I'm going to mark this bug as closed, but feel free to continue the conversation if anything is unclear.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1874#issuecomment-409136482:303,test,test,303,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1874#issuecomment-409136482,1,['test'],['test']
Testability,"Let me know if #2208 does it for you. If you know a way to test via GitHub actions, I'd be happy to add to the builds - I guess a Dockerfile build?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2206#issuecomment-625564142:59,test,test,59,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2206#issuecomment-625564142,1,['test'],['test']
Testability,Log of failed build due to missing OBGUI.rc file. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/665#issuecomment-281779273:0,Log,Log,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/665#issuecomment-281779273,1,['Log'],['Log']
Testability,"Logged In: NO . ##########################################################; ***** Error not resolved even if fragment.txt is found ***; ##########################################################; Hi,; the erro still exists in SMI to SDF with the option ; ""create 3D coordinates"" in OB 2.2.0 GUI (WIN); Here are the SMILES (one or two generate the error with illeagal SDF options). S=S=S; S1SSSS1; S1SSSSS1; S1SSSSSS1; S1SSSSSSS1; S; SS; SSS; SSSS; C=S; CS; CCS; CCCS; CC(C)S; CCCCS; SC1CCCCC1; SCCS; CC(S)CS; SCCCCS; CSC; CSSC; CSSSC; CCSCC; CCSSCC; C1CS1; C1SCC=C1; C1CCSC1; s1cccc1; O=C1SCCS1; O=C1SC=CS1; S=C1SCCS1; S=C1SC=CS1; Sc1ccccc1; S(c1ccccc1)c1ccccc1; S(Sc1ccccc1)c1ccccc1; OSO; CC(S)=O; CCSC(C)=O; CSC#N; FSF; FSSF; CSCl; CSSCl; ClSc1ccccc1; ClSSc1ccccc1; ClSCl; ClSSCl; BrSBr; BrSSBr; O=S=O; O=S(=O)=O; OS(O)(=O)=O; CS(C)=O; CCS(=O)CC; O=S(c1ccccc1)c1ccccc1; COS(=O)OC; CCOS(=O)OC; CCOS(=O)OCC; CS(C)(=O)=O; CCS(C)(=O)=O; CCS(=O)(=O)CC; O=S(=O)(c1ccccc1)c1ccccc1; COS(=O)(=O)OC; CCOS(=O)(=O)OCC; CS(C)=S; OS(F)(=O)=O; FS(F)(=O)=O; FS(F)=S; FS(F)(F)F; OS(Cl)(=O)=O; ClS(Cl)=O; ClS(Cl)(=O)=O; N#CSSC#N; SCCCCCS; SCc1ccccc1; CSc1ccccc1; CC1CS1; CC(C)(C)SC(C)(C)C; SCCCS; CC(C)(C)SSC(C)(C)C; CCCCCS; CCCCCCS; C1CC=CS1; s1c2ccccc2c2ccccc12; CCSC(C)(C)C; CCCCCCCCCCS; CC(C)CSSCC(C)C; CSC(C)C; C1CCSCC1; S1SC(=CC=C1c1ccccc1)c1ccccc1; CCCC(C)(C)S; CC(C)C(C)(C)S; CCCCCCCS; SC1CCCC1; CC(C)(C)CS; CCC(C)(C)S; CCCCCSC; S=C1SCCCS1; CC1CCCS1; CCC(C)CS; CC(C)C(C)S; C1CSC1; CC(C)(C)SCC=C; CCCSCC; CCSCSCC; CC1CCSC1; CC(C)CS; CCC(C)S; CCSC(C)C; CCSCC=C; C(SCc1ccccc1)c1ccccc1; CCSCCSCC; CC(C)CCS; CC(C)CCSCCC(C)C; Cc1sccc1; CC(C)CSCC(C)C; CSC(C)(C)C; Cc1cscc1; CCSc1ccccc1; CCSC; CC(C)SC(C)C; CCSCc1ccccc1; C=CSC=C; CCCCSC; CCCSSCCC; CCCCSSCCCC; CCCCSCC; CSC1CCCC1; S=C=S; CC(C)(C)S; CSCc1ccccc1; CCCCCSCCCCC; S=C1Sc2ccccc2S1; s1ccc2ccccc12; CCSSC(C)(C)C; CCSSC; CSC(=S)SC; S=C1SSc2ccccc12; S=C1SSC(=C1)c1ccccc1; CSSC(C)(C)C; CSSC(C)C; SC(c1ccccc1)c1ccccc1; CC(C)SSC(C)(C)C; O=C1CCSC1; O=C1CCCS1; CC(C)C",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793434:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793434,1,['Log'],['Logged']
Testability,"Logged In: NO . ##########################################################; ******** Error resolved **********************************; ##########################################################. Hi, ; I also found out that OBGUI.exe looks the fragment.txt up in some former or temp directories; under win (using the FileMon) http://technet.microsoft.com/en-us/sysinternals/bb896642.aspx; My OB is installed in C:\chemistry\OpenBabel-2.2.0; however it does the following . 2:02:43 PM	OBGUI.exe:3304	OPEN	Z:\smi23d-win\fragments.txt	NOT FOUND	Options: Open Access: All	; 2:02:43 PM	OBGUI.exe:3304	OPEN	Z:\smi23d-win\2.2.0\fragments.txt	PATH NOT FOUND	Options: Open Access: All	; 2:02:43 PM	OBGUI.exe:3304	OPEN	Z:\smi23d-win\fragments.txt	NOT FOUND	Options: Open Access: All	. OK, now I got it, I used the former directory as a working directory in the WIN GUI.; However now I changed to ""USE input below (ignore input file)"" So actually it should never; look in any old working directory, but in the *installation directory*. Cheers; Tobias. ==============================; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open fragments.txt; 1 molecule converted. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/792#issuecomment-281793425:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/792#issuecomment-281793425,1,['Log'],['Logged']
Testability,"Logged In: NO . ##########################################################; ******** Error resolved if fragment.txt is found *********; ##########################################################. Hi, ; I also found out that OBGUI.exe looks the fragment.txt up in some former; or temp directories; under win (using the FileMon); http://technet.microsoft.com/en-us/sysinternals/bb896642.aspx; My OB is installed in C:\chemistry\OpenBabel-2.2.0; however it does the following . 2:02:43 PM	OBGUI.exe:3304	OPEN	Z:\smi23d-win\fragments.txt	NOT; FOUND	Options: Open Access: All	; 2:02:43 PM	OBGUI.exe:3304	OPEN	Z:\smi23d-win\2.2.0\fragments.txt	PATH NOT; FOUND	Options: Open Access: All	; 2:02:43 PM	OBGUI.exe:3304	OPEN	Z:\smi23d-win\fragments.txt	NOT; FOUND	Options: Open Access: All	. OK, now I got it, I used the former directory as a working directory in; the WIN GUI.; However now I changed to ""USE input below (ignore input file)"" So actually; it should never; look in any old working directory, but in the *installation directory*. Cheers; Tobias. ==============================; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open fragments.txt; 1 molecule converted. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793433:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793433,1,['Log'],['Logged']
Testability,Logged In: NO . /bin/sh ../../libtool --tag=CXX --mode=compile g++ -DHAVE_CONFIG_H -I. -I../../src -I../../include -I../../src -I../../include -g -O2 -MT optransform.lo -MD -MP -MF .deps/optransform.Tpo -c; -o optransform.lo optransform.cpp; g++ -DHAVE_CONFIG_H -I. -I../../src -I../../include -I../../src -I../../include -g -O2 -MT optransform.lo -MD -MP -MF .deps/optransform.Tpo -c optransform.cpp -fPIC -DPIC -o .libs/optransform.; o; optransform.cpp:19:35: error: openbabel/optransform.h: No such file or directory; optransform.cpp:25: error: 'OpTransform' has not been declared; optransform.cpp: In function 'const char* OpenBabel::Description()':; optransform.cpp:28: error: aggregate 'std::string txt' has incomplete type and cannot be defined; optransform.cpp:29: error: '_descr' was not declared in this scope; optransform.cpp:31: error: '_filename' was not declared in this scope; optransform.cpp: At global scope:; optransform.cpp:36: error: 'OpTransform' has not been declared. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/719#issuecomment-281780239:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/719#issuecomment-281780239,1,['Log'],['Logged']
Testability,"Logged In: NO . /usr/local/include/openbabel-2.0/openbabel/generic.h: In instantiation of ‘OpenBabel::OBPairTemplate<int>’:; When trying to compile the little program above, I get:. test.cc:4: instantiated from here; /usr/local/include/openbabel-2.0/openbabel/generic.h:304: erreur: conflicting return type specified for ‘const ValueT& OpenBabel::OBPairTemplate<ValueT>::GetValue() const [with ValueT = int]’; /usr/local/include/openbabel-2.0/openbabel/generic.h:203: erreur: overriding ‘virtual const std::string& OpenBabel::OBGenericData::GetValue() const’; /usr/local/include/openbabel-2.0/openbabel/generic.h: In constructor ‘OpenBabel::OBPairTemplate<ValueT>::OBPairTemplate() [with ValueT = int]’:; test.cc:4: instantiated from here; /usr/local/include/openbabel-2.0/openbabel/generic.h:302: erreur: type ‘int’ is not a direct base of ‘OpenBabel::OBPairTemplate<int>’. We need to change the name of one of OBGenericData::GetValue and OBPairTemplate<ValueT>::GetValue. As the OBGeneric version retruns a string, we might recall it GetString. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/694#issuecomment-281779765:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/694#issuecomment-281779765,3,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: NO . > This is a duplicate report and has been fixed in the 2.1 SVN code. The; > 2.1.1 release will come out shortly. In the meantime, I suggest trying the; > 2.1.1 snapshot:; > ; > http://sourceforge.net/project/showfiles.php?group_id=40728&package_id=154019&release_id=519286. Great, thanks ghutchis and chrismorl! I will try the snapshot. -john (john_sullivan@hms.harvard.edu). Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/658#issuecomment-281779122:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/658#issuecomment-281779122,1,['Log'],['Logged']
Testability,"Logged In: NO . >Whether or not the file has 3D coordinates, the undefined; >stereochemistry should be respected (e.g., a racemic mixture, the 3D ; >coordinates are unreliable, etc.). Yes, that's the behaviour I would expect. Sometimes you have an SD file ; with one 3D structure stored per compound, well knowing that this is just ; one of two or more stereoisomers in the (racemic) mixture, and just one ; of many reasonable low energy conformations... Christian. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/484#issuecomment-281775883:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/484#issuecomment-281775883,1,['Log'],['Logged']
Testability,"Logged In: NO . A good bug report should include:. * Your name and email address; * The version of Open Babel are you using, and your operating system (Linux, Mac OS X, Windows, Solaris, etc.); * An attachment containing an example input file that causes the problem.; * Please try to be specific and give an example of what exactly didn't work. Please let us know what you think should have happened instead. In particular, please note the fourth point. What didn't work? We need a bit more information here before we know what the problem is. . Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/808#issuecomment-281793678:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/808#issuecomment-281793678,1,['Log'],['Logged']
Testability,Logged In: NO . Asking Frog to unambiguate. CC1OC(C[NH](C1)CC(C(F)(F)F)O)C; you get ; ...; C[C@@H]1O[C@H](C[NH](C1)C[C@H](C(F)(F)F)O)C; C[C@H]1O[C@@H](C[NH](C1)C[C@H](C(F)(F)F)O)C; ...; i.e. both solutions as well. So I wonder: what is correct?. Gerd . Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779166:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779166,1,['Log'],['Logged']
Testability,Logged In: NO . Can you confirm that the problem is with the Perl bindings and not the Python bindings? Looking at the build log it seems that the error only starts when Fedora starts building the Python bindings. - Noel. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780561:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780561,2,"['Log', 'log']","['Logged', 'log']"
Testability,"Logged In: NO . Can you provide me with some example files? For example, could you provide ; me with an example Sybyl file (saved from Sybyl) that doesn't work after going ; through Babel?. It's easy enough to change things in the output, but I'd like to make sure we ; match the Sybyl file exactly. Thanks,; -Geoff. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/504#issuecomment-281776218:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/504#issuecomment-281776218,1,['Log'],['Logged']
Testability,Logged In: NO . Chris - could you take a look at this when you have a chance. I'd like to rerelease Pybel once this is fixed...not being able to write SMI fouls up a lot of the basic functionality... Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/796#issuecomment-281793477:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/796#issuecomment-281793477,1,['Log'],['Logged']
Testability,"Logged In: NO . Correction to last note: PRO residues are actually fine, it; was my graphics; code at fault. Richard. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/405#issuecomment-281774472:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/405#issuecomment-281774472,1,['Log'],['Logged']
Testability,"Logged In: NO . For the record, cclib uses the following to find charge and multiplicity:. if line[1:7] == 'Charge' and line.find(""Multiplicity"")>=0:. regex = "".*=(.*)Mul.*=\s*(\d+).*""; match = re.match(regex, line); assert match, ""Something unusual about the line: '%s'"" % line; ; self.charge = int(match.groups()[0]); self.mult = int(match.groups()[1]). - Noel. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/747#issuecomment-281780807:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/747#issuecomment-281780807,2,"['Log', 'assert']","['Logged', 'assert']"
Testability,"Logged In: NO . Geoff: I thought the STL iterators where introduced to avoid this problem,; shouldn't we be using them instead of ordinary loops?. Richard. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1380#issuecomment-281809550:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1380#issuecomment-281809550,1,['Log'],['Logged']
Testability,Logged In: NO . Great! Thank you very Much! :). Reinis. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/732#issuecomment-281780488:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/732#issuecomment-281780488,1,['Log'],['Logged']
Testability,"Logged In: NO . Great, this is already helpful !; I noticed it works in 2.1.x version, not in 2.0 though - not a showstopper, just something to note.; Also, I noticed that OB_HASH_BOND and OB_WEDGE_BOND flags seem to be interchanged - when I use; the former I get the wedge bond and vice-versa. Thank you,; Igor. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779012:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779012,1,['Log'],['Logged']
Testability,"Logged In: NO . Hello, I'm working on a tcl script which will translate le Log file to xyz file. Another path is an option in Gaussian : Punch=(coord) will copy in a text files optimized coordinates in atomic units, which is easier to translate in .xyz file than a log file.; I will inform you... thanks. Enguerran Vanquelef. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/739#issuecomment-281780647:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/739#issuecomment-281780647,3,"['Log', 'log']","['Log', 'Logged', 'log']"
Testability,"Logged In: NO . Hello,. I have wrote a smal Tcl script. When Gaussian uses Bq atoms, it generates a coordinate table with center number starting ""2"" instead of ""1"". Maybe this is the origin of the bug. regards. PS : The Tcl script if you are interessting :. #!/usr/bin/tclsh. set path [pwd]; puts $path. set liste_log [lsort -dictionary [glob $path/*.log]]; set nb_log [llength $liste_log]; puts ""il y a $nb_log fichiers .log""; #find the last standard orientation :. for {set n 0} {$n<$nb_log} {incr n} {; set nom_fich_log [lindex $liste_log $n]; puts ""\nnom du fichier en cours :[file tail $nom_fich_log]""; set log_courant [open $nom_fich_log r]; set hfichxyz [file rootname [file tail $nom_fich_log]].xyz; set fichxyz [open $hfichxyz w]; set ligne [gets $log_courant]; while {$ligne!="" -- Stationary point found.""} {; set ligne [gets $log_courant]; }; # I'm just after ""Stationnary point found""; set mot1 [lindex $ligne 0]; set mot2 [lindex $ligne 1]; set phrase $mot1$mot2; while {$phrase!=""Standardorientation:""} {; set ligne [gets $log_courant]; set mot1 [lindex $ligne 0]; set mot2 [lindex $ligne 1]; set phrase $mot1$mot2; }; #I'm just after the line ""Standard orientation""; #puts $ligne; set ligne [gets $log_courant]; #puts $ligne; set ligne [gets $log_courant]; #puts $ligne; set ligne [gets $log_courant]; #puts $ligne; set ligne [gets $log_courant]; #puts $ligne; set ligne [gets $log_courant]; #puts ""coorodos:""; #Next line is the start of coordinates block; set i 1; while {[lindex $ligne 0]!=""---------------------------------------------------------------------""} {; switch [lindex $ligne 1] {; 6 {set tab(nom,$i) ""C""}; 1 {set tab(nom,$i) ""H""}; 8 {set tab(nom,$i) ""O""}; 7 {set tab(nom,$i) ""N""}; 16 {set tab(nom,$i) ""S""}; default {set tab($i,nom) ""*""}; }; set tab(X,$i) [lindex $ligne 3]; set tab(Y,$i) [lindex $ligne 4]; set tab(Z,$i) [lindex $ligne 5]; #puts ""[lindex $ligne 1]\t [lindex $ligne 3]\t [lindex $ligne 4]\t [lindex $ligne 5]""; set ligne [gets $log_courant]; incr i; }; pu",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/739#issuecomment-281780648:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/739#issuecomment-281780648,3,"['Log', 'log']","['Logged', 'log']"
Testability,"Logged In: NO . Hello,. a problem occurs with my tcl script with another Gaussian 98 output file which contain a Bq atom.; I have found a small solution but not very ""regular"" :; I had to replace ""Input orientation"" by ""Standrad orientation"" few lines under ""Stationary point found"" and I have modified the Tcl script (find it below, I have added Bq case in the switch block). regards. Enguerran Vanquelef. #!/usr/bin/tclsh. set path [pwd]; puts $path; set liste_log [lsort -dictionary [glob $path/*.log]]; set nb_log [llength $liste_log]; puts ""il y a $nb_log fichiers .log""; #find the last standard orientation :; for {set n 0} {$n<$nb_log} {incr n} {; set nom_fich_log [lindex $liste_log $n]; puts ""nom du fichier en cours : [file tail $nom_fich_log]""; set log_courant [open $nom_fich_log r]; set hfichxyz [file rootname [file tail $nom_fich_log]]_opt.xyz; set fichxyz [open $hfichxyz w]; set ligne [gets $log_courant]; while {$ligne!="" -- Stationary point found.""} {; set ligne [gets $log_courant]; }; # I'm just after ""Stationnary point found""; set mot1 [lindex $ligne 0]; set mot2 [lindex $ligne 1]; set phrase $mot1$mot2; while {$phrase!=""Standardorientation:""} {; set ligne [gets $log_courant]; set mot1 [lindex $ligne 0]; set mot2 [lindex $ligne 1]; set phrase $mot1$mot2; }; #I'm just after the line ""Standard orientation""; set ligne [gets $log_courant]; set ligne [gets $log_courant]; set ligne [gets $log_courant]; set ligne [gets $log_courant]; set ligne [gets $log_courant]; #Next line is the start of coordinates block; set i 1; while {[lindex $ligne 0]!=""---------------------------------------------------------------------""} {; switch [lindex $ligne 1] {; 6 {set tab(nom,$i) ""C""}; 1 {set tab(nom,$i) ""H""}; 8 {set tab(nom,$i) ""O""}; 7 {set tab(nom,$i) ""N""}; 16 {set tab(nom,$i) ""S""}; 0 {set tab(nom,$i) ""Bq""}; default {set tab($i,nom) ""*""}; }; set tab(X,$i) [lindex $ligne 3]; set tab(Y,$i) [lindex $ligne 4]; set tab(Z,$i) [lindex $ligne 5]; set ligne [gets $log_courant]; incr i; }; ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/739#issuecomment-281780649:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/739#issuecomment-281780649,3,"['Log', 'log']","['Logged', 'log']"
Testability,"Logged In: NO . Hi Christoph,; I am not a great programmer. I just use Daylight, Openeye; and OpenBabel to make some tools and work with them. I have; developed a database cartridge from OpenBabel as a experiment.; www.unm.edu/~tharun/smdb.html. My email address is tharun@unm.edu please contact me and I; will be willing to work on the fingerprinter for OpenBabel. . I dont know what standards is OpenBabel using. If you can; direct me then I will be happy to contribute for this project. Thanks; Tharun; tharun@unm.edu. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1398#issuecomment-281809848:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1398#issuecomment-281809848,1,['Log'],['Logged']
Testability,"Logged In: NO . Hi, Geoff,. Thank you for your response. I give more ring systems which are incorrectly dearomatized; by Open Babel version 2.0.x. [test/attype.00.smi]; c1n[nH]c(=S)n1; O=c1nccc3nc4oc5ccccc5c(=O)c4cc13; c1nc2sccn2c1. [another example]; c1[n+]cnc2ncnc12; c1onc(-c2ccccc2Cl)c1; c1ccc2[nH]c3ccc4cc[n+]cc4c3c2c1; n1c2ccccc2c3c4C(=O)NCc4c5c6ccccc6nc5c13; c1c(C)c2cc3[n-]c(cc4nc(cc5[n-]c(cc1n2)c(C)c5C=C)c(C)c4CCC(O)=O)c(CCC(O)=O)c3; c2c3ccc(n3)cc5ccc([nH]5)cc7ccc([nH]7)cc9ccc2n9. Please try these test set. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/516#issuecomment-281776434:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/516#issuecomment-281776434,9,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: NO . Hi,. I had the very same problem. As yuo can see, the error arise from the use ; of gcc 4.0.0 (in the lines /usr/lib/gcc/powerpc-apple-darwin8/4.0.0/). So, in order to have a working version of open babel you should:. > sudo gcc_select 3.3; > ./configure; > make; > make install. You see, the trick is to tell the system to use gcc v3.3.; After you succesfully compile openbabel, remember to:. > sudo gcc_select 4.0. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/482#issuecomment-281775857:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/482#issuecomment-281775857,1,['Log'],['Logged']
Testability,"Logged In: NO . Hi,. I have been exploring the memory usage of the windows; version of openbabel described above. I have used the; Windows task manager to follow the memory usage when; openbabel is working on the example file I posted earlier. The results are listed at the end of this post. As you can; see, the memory used by open babel increases steadily over; time. When fitting a linear regression line through the cpu; time/memory usage points you obtain the following line:. memory usage [k] = 5622 + 1198*(CPU Time[s]). As babel took about 113s to work through the 40k smiles,; i.e. ~354 molecules/s and the regression graph shows that; 1198k additional memory is used per sec, this implies that; each molecule uses an additional 1198/354 = 3.4k of memory. I have repeated this using other output formats (in case it; was only the fingerprint format causing this). For example:. babel example.smi -osdf example.sdf. The same results apply, i.e. the amount of memory used by; openbabel is contantly increased. I have also tried this with files containing more smiles,; and found that this continues as long as there is memory; available. eg after 15 minutes, the VM size is 1,391,720k. Surely this counts as a memory leak?. Regards. Ian. I_P_S@hotmail.com. openbabel-2.0.0awins memory usage on example.smi:. CPU [s]	Mem usage	Peak mem	VM size; 6	11860	11860	10424; 10	16408	16408	14980; 17	25620	26008	24528; 24	34328	34328	32916; 27	38116	38116	37196; 34	46612	46612	45380; 41	55336	55440	54696; 44	59436	59436	58628; 51	67328	67328	66236; 58	75872	76308	74516; 61	79776	81384	79632; 68	87220	87220	86780; 75	95728	95728	94644; 79	99756	99756	98856; 86	107812	107812	106584; 89	112328	112952	110948; 96	120176	102176	120520; 103	128400	128400	128416; 106	132172	132172	132036; 113	134432	139936	132820. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776399:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776399,1,['Log'],['Logged']
Testability,"Logged In: NO . Hi,. Sorry for the duplicate bug report, I managed to hit F5 in wrong browser tab and page was resubmitted. Anyway, new version of the code seems to work OK with cml. Thanks for noticing this. Tapani Kinnunen; takinnun at hotmail.com. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/632#issuecomment-281778612:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/632#issuecomment-281778612,1,['Log'],['Logged']
Testability,"Logged In: NO . Hi,; maybe this is due the error reported before (fragment.txt missing). ==============================; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open fragments.txt; 1 molecule converted. Tobias. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793428:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793428,1,['Log'],['Logged']
Testability,Logged In: NO . I agree. PLEASE do this soon. A lot of people will really use ; this. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1376#issuecomment-281809512:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1376#issuecomment-281809512,1,['Log'],['Logged']
Testability,"Logged In: NO . I can't reproduce this. Whether simultaneous or in any order, adding explicit hydrogens and coordinates ends up correctly for me with 14 atoms, 14 bonds. Could you say exactly what you did to get the error? Did you copy the molecule at any stage?. Chris. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/789#issuecomment-281793405:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/789#issuecomment-281793405,1,['Log'],['Logged']
Testability,Logged In: NO . I did some investigating and discovered a source of these sort ; of seg; fautls. I'm not sure if it is the same source you discovered. MY OBESERVATION:; parsing an invalid smile string which starts with a digit e.g.; '2CCCC3' seg faults with assertion notice. THE PROBLEM:; the digit cues the ParseSmiles function to reference an atom ; in the; molecule when there are none. Any ideas?. Josh. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775156:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775156,2,"['Log', 'assert']","['Logged', 'assertion']"
Testability,Logged In: NO . I don't know where your tr1 header files are stored and what they are called. Try looking for; a file called shared_ptr or shared_ptr.h If these can't found try looking for shared_ptr is any header file. Then I'll be able to change reaction.h or babelconfig.h. You need to update all the SVN files (up to the folder which containd the file ChangeLog. One of the errors was probabley due to that. Chris (c.morley AT gaseq.co.uk). Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786169:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786169,1,['Log'],['Logged']
Testability,Logged In: NO . I downloaded the 2.0.0b5-20051015 version today and that worked fine. ; Must be down to differences between this version and the one I used ; earlier (2.0.0b5-20051001). Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/485#issuecomment-281775916:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/485#issuecomment-281775916,1,['Log'],['Logged']
Testability,"Logged In: NO . I experiment the problem of memory leak when I work with sdf; files of 400MB or files with thousands of smiles.; I don't know C++, but I think the problem is in the; OBConversion class. When I measure the memory used by a subprogram where I have; created an object of this class, the result is that it; leaves data in memory after closing the subprogram. And if I; don't use this class, the memory after calling the; subprogram is 0. I send you the tiny perl program used to take this; conclusions, each '#number' tell you the memory usage. Thanks for all. #!/usr/bin/perl -W. use Chemistry::OpenBabel;; use Memchmark qw(memchmark);;; use strict;. my $mem=memchmark {main_program()};; print ""\n\nMemoria usada: $mem\n\n"";. exit;. sub main_program {; 	my; $molec=""C(Nc1ccc([S]([N]2[CH](c3cnccc3)CCCC2)(=O)=O)cc1)(c1c(Br)cccc1)=O"";; 	my $smarts_pattern=""[S]"";. 	#0; 	my $obConversion=new Chemistry::OpenBabel::OBConversion;; 	#2727936; 	my $obSmartsPattern = new; Chemistry::OpenBabel::OBSmartsPattern;; 	#2727936; 	$obConversion->SetInFormat(""sdf"");; 	#2727936; 	my $obMol=new Chemistry::OpenBabel::OBMol;; 	#2727936; 	$obConversion->ReadString($obMol,$molec);; 	#2863104; 	$obMol->ConvertDativeBonds();; 	#2863104; 	$obSmartsPattern->Init(""$smarts_pattern"");; 	#2863104; 	if ($obSmartsPattern->Match($obMol)) {; 		print ""\nOK\t$molec\n"";	; 	}; 	#2863104; 	$obMol->Clear();; 	#2863104. }. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776406:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776406,1,['Log'],['Logged']
Testability,Logged In: NO . I have added OBCommonFormats to FastSearch's dependencies - it somehow seems to have been removed. I hope we are nearly there?. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781149:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781149,1,['Log'],['Logged']
Testability,"Logged In: NO . I tried the code you suggested Chris, but it seems its not ; actually implemented (unless this is on the CVS rather than ; the lastest snapshot?). Compiler said:; no matching function for call to `OpenBabel::OBConversion::; SetOneObjectOnly(bool)'; ../src/obconversion.h:298: candidates are: void; OpenBabel::OBConversion::SetOneObjectOnly(). and the only function I could find for SetOneObejctOnly is ; this:; void OBConversion::SetOneObjectOnly(); {; OneObjectOnly=true;; m_IsLast=true;; }. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/560#issuecomment-281777336:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/560#issuecomment-281777336,1,['Log'],['Logged']
Testability,Logged In: NO . Interesting decision by the Tracker System. I responded with detailed evidence on 2006-03-16 following; the comments posted on 2006-03-14. Why was this ignored?. Ian. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776401:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776401,1,['Log'],['Logged']
Testability,"Logged In: NO . It works if you ask for CANONICAL SMILES. % babel -j -icdx melanocortin-2007-17-16.cdx -ocan; O=Cc1ccccc1N1CCN(CC1)[C@@H](=O)[C@H]1CN(C[C@H]1c1ccc(Cl)cc1)C(C)C	_melanocortin-2007-17-16.cdx; 1 molecule converted; 46 audit log messages 393 debugging messages . (Openbabel 2.1.1, Mac OS X 10.5.1) ufos@ufos-software.com. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779398:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779398,2,"['Log', 'log']","['Logged', 'log']"
Testability,"Logged In: NO . It's an XML or BOOST error (are you using GCC 3.x by any chance?). You should leave your email address if you want someone to fix this bug, as they will probably need to ask you some questions... Noel. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/756#issuecomment-281780977:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/756#issuecomment-281780977,1,['Log'],['Logged']
Testability,"Logged In: NO . Like I said, this is still best dealt with on the mailing list. I note you are compiling in Debug Mode, not Release. Have you tried copying the boost dir to openbabeltrunk/include? I find this an easier way to 'install' boost. If you do this, there should be a file openbabeltrunk/include/boost/shared_ptr.hpp.; - Noel. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786163:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786163,1,['Log'],['Logged']
Testability,Logged In: NO . Looks fine now - Noel. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/664#issuecomment-281779253:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/664#issuecomment-281779253,1,['Log'],['Logged']
Testability,"Logged In: NO . Noel, are you using the 2.0.x wrappers? I haven't fixed the 2.1 development ; code yet -- I still have to fix some compilation problems from Chris before I can ; test and commit the fixes yet. I'm quite sure that the 2.0.1 wrappers do not have this problem. -Geoff. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/525#issuecomment-281776602:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/525#issuecomment-281776602,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: NO . One of the disadvantages of compiling from the HEAD code is that people keep changing it. The errors about _finite are due somebody's changes which necessitates including float.h in mol.h. Revision 2528 and later have this. Do another Update. I not entirely sure what odbccp32.libi is and it is not in the VC2005 Express distribution I have, so I can be of limited help. odbccp32.lib appears in the list of Additional Dependencies in \VC\VCProjectDefaults\CoreWin.vsprops but not in my express version. You could try removing it and restarting Visual Studio (or maybe there is something in your version's IDE to do this), but this may affect some of your other programs. Alternatively, you could add odbccp32.lib to each project's Properties Configuration Properties/Linker/Input/Ignore Specific Library. The other warnings can be ignored. (There are fewer than there were.). Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781143:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781143,1,['Log'],['Logged']
Testability,Logged In: NO . Original bug report still valid. Rev 2509. However I had to revert Makefile.PL to Rev 2301. Otherwise I got:; Can't build and link to 'openbabel'. - Noel. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/720#issuecomment-281780268:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/720#issuecomment-281780268,1,['Log'],['Logged']
Testability,Logged In: NO . Please attach an input file exhibiting the bug... Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/762#issuecomment-281781072:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/762#issuecomment-281781072,1,['Log'],['Logged']
Testability,"Logged In: NO . Presumably this is the same as bug [ 1497456 ] InChI 0D stereo descriptor wrong, although this has a nice test case. Noel. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/594#issuecomment-281777908:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/594#issuecomment-281777908,2,"['Log', 'test']","['Logged', 'test']"
Testability,Logged In: NO . Probably this is caused by selection in file. Openbabel converts this file when the selection is removed. selection PLANE 3; selectatom 34 molecule 1; selectatom 28 molecule 1; selectatom 29 molecule 1; endselection PLANE. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/752#issuecomment-281780880:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/752#issuecomment-281780880,1,['Log'],['Logged']
Testability,"Logged In: NO . See ATOM record in the PDB Format Description below.; http://www.rcsb.org/pdb/docs/format/pdbguide2.2/guide2.2_fra; me.html. According to the description, coordinates should be ; formatted as F8.3, ; i.e. 4 digits before the decimal point, 3 digits after the ; point.; This can represent -999.000 to 9999.000, i.e. 11000 ; Angstrom.; I think it is enough for most purposes. Your problem can be avoided by adding say 5000 to the z ; coordinate values. Takaaki Fukami. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/499#issuecomment-281776138:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/499#issuecomment-281776138,1,['Log'],['Logged']
Testability,"Logged In: NO . Should component-level grouping be functional in the current ; SMARTS implementation, or is it still in development?; I'm asking because if I search an sd file with a pattern like ; '([#6]).([#6])' (=2 carbons which are part of different ; components) obgrep will also return methane (obviously ; hitting the same carbon atom twice). Christian . Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775151:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775151,1,['Log'],['Logged']
Testability,"Logged In: NO . Similarly a ""\n"" is added to the end of an InChI. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/507#issuecomment-281776263:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/507#issuecomment-281776263,1,['Log'],['Logged']
Testability,Logged In: NO . Thanks for looking into this. Sorry if it's been a red herring. It's possible that I could be getting a bit mixed up as the cinfony Pybel and the openbabel Pybel are a bit out of synch (the cinfony one is a week older than the release). I will download and test the released openbabel Pybel. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/796#issuecomment-281793479:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/796#issuecomment-281793479,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: NO . The PSA calculation in SVN already uses the JOELib2 parameter files and is basically a translation. The reason why I used PSA and logP class is that it would be possible to add extra algorithms to calculate these properties. But shared GroupContribution class would make sense:; - avoid bugs in code that is quite similar; - add other JOELib properties that use GroupContribution (MR, ??). I'll implement this as a OBGroupContribution class. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1410#issuecomment-281810058:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1410#issuecomment-281810058,2,"['Log', 'log']","['Logged', 'logP']"
Testability,"Logged In: NO . The SWIG interface file (openbabel-ruby.i) seems to come from that of perl. OBFingerprint may have been omitted as it caused compilation error. (Perl interface also seems to lack the support of OBFingerprint, though I can't confirm) When I tried compiling uncommented file, it failed. This problem is obviously not from ruby scripts, but from SWIG interface file. Although I can't help you correcting this bug as I don't know about SWIG, I can eagerly do the testing-related stuffs, etc. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/791#issuecomment-281793411:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/791#issuecomment-281793411,2,"['Log', 'test']","['Logged', 'testing-related']"
Testability,"Logged In: NO . The maximum common substructure detection algorithm; described by Krissinel and Henrick in Software: Practice and; Experience; Volume 34, Issue 6 , Pages 591 - 607, is easy to implement; and reasonably fast for small (drug-size) molecules. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1404#issuecomment-281810026:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1404#issuecomment-281810026,1,['Log'],['Logged']
Testability,"Logged In: NO . The resolution was simply ""nothing to fix"". At the time I felt strongly they should be identical to Daylight. Now I realise this isn't so important. - Noel. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/695#issuecomment-281779788:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/695#issuecomment-281779788,1,['Log'],['Logged']
Testability,"Logged In: NO . The same segfault occurs here. The same problem occured for torsions. The problem is that the atoms and bonds are changed, but the AngleData and TorsionData is not.; To fix this I added. DeleteData(OBGenericDataType::AngleData);; DeleteData(OBGenericDataType::TorsionData);. to the end of OBMol::operator=. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/612#issuecomment-281778205:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/612#issuecomment-281778205,1,['Log'],['Logged']
Testability,"Logged In: NO . There is a difference - now, I get segfaults for both; examples in my original post!. I'm afraid this story isn't over yet...:-(. Noel. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/525#issuecomment-281776599:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/525#issuecomment-281776599,1,['Log'],['Logged']
Testability,"Logged In: NO . There is no such thing as ""The unique IUPAC name"". The IUPAC; recommendations (of which the two listed references are only; a small part) are *designed* to provide multiple acceptable; names. . IUPAC has started some projects to produce guidelines that; *would* generate unique names, but those projects are years; from completion. Until they are completed, it is impossible; to resolve this request. Jonathan Brecher; CambridgeSoft Corporation; jsb@cambridgesoft.com. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1400#issuecomment-281809870:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1400#issuecomment-281809870,1,['Log'],['Logged']
Testability,"Logged In: NO . There's no semi-colon in the actual code snipet (sorry for poor copy-paste skills!):; .....; if (bond[i].hash); mol.AddBond(atom[bond[i].a].n,atom[bond[i].b].n,bond[i].type,OB_HASH_BOND);. else; mol.AddBond(atom[bond[i].a].n,atom[bond[i].b].n,bond[i].type);; ....; conv.WriteFile(&mol,""out.sdf"");; ..... Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779010:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779010,1,['Log'],['Logged']
Testability,"Logged In: NO . These 'extra' functions are in the Boost header library, AFAIK. They must be included with GCC4. Could one of the C++ gurus please explain update the Configure and Makefile if Boost is required with GCC3.4.x? Noel. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/717#issuecomment-281780199:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/717#issuecomment-281780199,1,['Log'],['Logged']
Testability,"Logged In: NO . This happens quite commonly, actually for nearly 25% of the smiles strings i try to convert . Nc1ccc(cc1)OCC(O)C[n+]1ccccc1. john_sullivan@hms.harvard.edu. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/658#issuecomment-281779118:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/658#issuecomment-281779118,1,['Log'],['Logged']
Testability,Logged In: NO . Two quick suggestions that might help us to help you... (1) Does this also occur for the latest development snapshot of OpenBabel 2.1.0?...(available under downloads from http://sf.net/projects/openbabel); (2) Can you attach the input file?. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777879:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777879,1,['Log'],['Logged']
Testability,"Logged In: NO . Um, actually, perhaps buffer[BUFF_SIZE-1] = '\0'; would; be rather better. MJR. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/540#issuecomment-281776876:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/540#issuecomment-281776876,1,['Log'],['Logged']
Testability,"Logged In: NO . Update: the 1/10/03 CVS version seems to correctly protonate; all; standard amino acid residues except:. HIS: missing a proton on 5-membered ring; TRP: missing a proton on 5-membered ring; PRO: missing all bonds in 5-membered ring, protons correct; ARG: C=N double bond in wrong place. Richard. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/405#issuecomment-281774471:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/405#issuecomment-281774471,1,['Log'],['Logged']
Testability,"Logged In: NO . Using OpenBabelGUI under Windows XP. In the box underneath the text ""Output below"" (where it normally says the number of molecules converted) - lots of text flashed in this box and then it stopped but left part of the SMARTS string in this box. Then the screen went white, and could only close by opening task manager, and using End now (about three times as OpenBabel wasn't responding) The input file was huge 168meg.; Thanks for your quick response,; Mandy. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/615#issuecomment-281778255:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/615#issuecomment-281778255,1,['Log'],['Logged']
Testability,"Logged In: NO . What's the equivalent C++ code?. And shouldn't map.front() return NULL if there are no; elements or better still, raise an Exception, rather than; segfaulting?. Python uses an Easier to Ask Forgiveness Than Permission; philosophy rather than Look Before You Leap. So catching; exceptions is seen as better than using if statements, which; may/may not catch the problem. Regards,; Noel. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/537#issuecomment-281776828:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/537#issuecomment-281776828,1,['Log'],['Logged']
Testability,"Logged In: NO . Whoops. Sorry, I pressed Submit too early. ; Anyway, the xyz file, attached to the bug report, gives the following ; output for direct conversion to bgf: . BIOGRF 200; DESCRP XYZ; REMARK BGF file created by Open Babel 2.0.0b5-20051001; FORCEFIELD DREIDING ; FORMAT ATOM ; (a6,1x,i5,1x,a5,1x,a3,1x,a1,1x,a5,3f10.5,1x,a5,i3,i2,1x,f8.5); HETATM 1 H1 RES A 444 1.75200 -0.90700 0.00000 HC 1 ; 0 0.21219; HETATM 2 O2 RES A 444 -0.36800 -0.51900 -0.90100 O3 1 ; 0 -0.36980; HETATM 3 H3 RES A 444 -0.37300 -0.52500 0.91000 HC 1 ; 0 0.08667; HETATM 4 H4 RES A 444 -0.36600 1.03900 0.00000 HC 1 ; 0 0.08667; HETATM 5 O5 RES A 444 1.43100 0.00000 0.00000 O3 1 ; 0 -0.36980; HETATM 6 C6 RES A 444 0.00000 0.00000 0.00000 C3 1 ; 0 0.14190; HETATM 7 H7 RES A 444 -1.33000 -0.51900 -0.86071 HC 1 ; 0 0.21219; FORMAT CONECT (a6,12i6). CONECT 1 5; ORDER 1 1; CONECT 2 7 6; ORDER 2 1 1; CONECT 3 6; ORDER 3 1; CONECT 4 6; ORDER 4 1; CONECT 5 1 6; ORDER 5 1 1; CONECT 6 2 4 5 3; ORDER 6 1 1 1 1; CONECT 7 2; ORDER 7 1; END. Note that the types (i.e. C3 HC O3) are NOT correct. ; When I first convert the xyz to sdf and then from sdf to bgf I get the ; correct output:. BIOGRF 200; DESCRP XYZ; REMARK BGF file created by Open Babel 2.0.0b5-20051001; FORCEFIELD DREIDING ; FORMAT ATOM ; (a6,1x,i5,1x,a5,1x,a3,1x,a1,1x,a5,3f10.5,1x,a5,i3,i2,1x,f8.5); HETATM 1 H1 RES A 444 1.75200 -0.90700 0.00000 H_ 1 ; 0 0.21219; HETATM 2 O2 RES A 444 -0.36800 -0.51900 -0.90100 O_3 2 ; 0 -0.36980; HETATM 3 H3 RES A 444 -0.37300 -0.52500 0.91000 H_ 1 ; 0 0.08667; HETATM 4 H4 RES A 444 -0.36600 1.03900 0.00000 H_ 1 ; 0 0.08667; HETATM 5 O5 RES A 444 1.43100 0.00000 0.00000 O_3 2 ; 0 -0.36980; HETATM 6 C6 RES A 444 0.00000 0.00000 0.00000 C_3 4 ; 0 0.14190; HETATM 7 H7 RES A 444 -1.33000 -0.51900 -0.86070 H_ 1 ; 0 0.21219; FORMAT CONECT (a6,12i6). CONECT 1 5; ORDER 1 1; CONECT 2 7 6; ORDER 2 1 1; CONECT 3 6; ORDER 3 1; CONECT 4 6; ORDER 4 1; CONECT 5 1 6; ORDER 5 1 1; CONECT 6 2 3 4 5; ORDER 6 1 1 1 1; CONECT 7 ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/485#issuecomment-281775911:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/485#issuecomment-281775911,1,['Log'],['Logged']
Testability,"Logged In: NO . Yes - you're absolutely right. I recently resolved this in Jybel, but didn't think there was any need to put it into Pybel. Turns out I was wrong. I will do as soon as possible, but I am away until Tuesday. - Noel. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/636#issuecomment-281778875:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/636#issuecomment-281778875,1,['Log'],['Logged']
Testability,"Logged In: NO . build it today without problems, must have been some kind of ; stability issues on friday, since i also had some problems ; with open office crashing later that evening. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/488#issuecomment-281775970:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/488#issuecomment-281775970,1,['Log'],['Logged']
Testability,"Logged In: NO . diff -ur openbabel-2.2.0b4-mopout/src/formats/mopacformat.cpp openbabel-2.2.0b4/src/formats/mopacformat.cpp; --- openbabel-2.2.0b4-mopout/src/formats/mopacformat.cpp	2008-05-28 10:32:53.000000000 +0400; +++ openbabel-2.2.0b4/src/formats/mopacformat.cpp	2008-05-30 01:16:37.000000000 +0400; @@ -80,7 +80,7 @@; mol.BeginModify();; while	(ifs.getline(buffer,BUFF_SIZE)); {; - if(strstr(buffer,""CARTESIAN COORDINATES"") != NULL); + if(strstr(buffer,"" CARTESIAN COORDINATES"") != NULL); {; // mol.EndModify();; mol.Clear();. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/763#issuecomment-281781087:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/763#issuecomment-281781087,1,['Log'],['Logged']
Testability,Logged In: NO . ernst-georg.schmid@bayerbbs.com. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/496#issuecomment-281776086:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/496#issuecomment-281776086,1,['Log'],['Logged']
Testability,"Logged In: NO . in gnumeric/goffice, there is one xml file for each plugin.; The framework loads these on startup and then loads the; plugins when one of the services it offers is requested.; Of course, it is also possible to generate a single xml file; from some special comment present in the source file for the; plugin. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810180:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810180,1,['Log'],['Logged']
Testability,Logged In: NO . submitted by Richard Gillilan. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/404#issuecomment-281774439:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/404#issuecomment-281774439,1,['Log'],['Logged']
Testability,Logged In: NO . test.smi contains; c1ccccc1C=Cc2ccccc2	stilbene; c1ccc(cc1)\C=C\c2ccccc2 trans Stilbene; c1ccc(cc1)\C=C/c2ccccc2	cis Stilbene; c1ccccc1	benzene. With Mac line endings I get. Test:~ username$ /usr/local/bin/obgrep -n 'c1ccccc1' '/Users/username/; Desktop/test.smi'; c1ccccc1 benzene2ccccc2 cis Stilbenene. If I convert to UNIX I get. Test:~ usename$ /usr/local/bin/obgrep -n 'c1ccccc1' '/Users/username/; Desktop/test.smi'; stilbene; trans Stilbene; cis Stilbene; benzene. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1406#issuecomment-281810035:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1406#issuecomment-281810035,6,"['Log', 'Test', 'test']","['Logged', 'Test', 'test']"
Testability,Logged In: NO . try to do /bin/sh obgrep '!c' then the negation operator ; shouldn't be overrided by the system. Fabien. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/441#issuecomment-281775108:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/441#issuecomment-281775108,1,['Log'],['Logged']
Testability,"Logged In: NO . update: have found fixes to all problems in this report,; none involved ; changes in code. In phmodel.txt:. HIS: can add missing hydrogen via; TRANSFORM [nD2:1]1c[nD2]cc1 &gt;&gt; [n+:1]1c[nD2]cc1; The real root of the problem here is that HIS in; nonionized form has; two tautomers (the proton may be on either nitrogen). ; Both occur in; nature though one is favored. . TRP: can add missing hydrogen via; TRANSFORM [nD2:1]1cccc1 &gt;&gt; [n+:1]1cccc1; (this last fix is not fully general and may mess up other; assignments,; so I have not checked it in). ARG: bond orders in resdata.txt are incorrect for RES ARG. Richard Gillilan. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/405#issuecomment-281774473:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/405#issuecomment-281774473,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1031385. I have tried to build the Fingerprinter in OpenBabel. I came; up with a version how should I post the code for testing ?. What should I do next to submit the code?. Thanks; Tharun. Original comment by: tallu,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1398#issuecomment-281809850:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1398#issuecomment-281809850,2,"['Log', 'test']","['Logged', 'testing']"
Testability,Logged In: YES ; user_id=1031385. Is any work being done on creating Canonical Smiles using; OpenBabel. Original comment by: tallu,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1396#issuecomment-281809814:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1396#issuecomment-281809814,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1031385. The current version of the fingerprinter will accept; canonical smiles to generate finger prints. As I did not see; OpenBabel has any feature to get canonical smiles, This work; will be incomplete until the canonicalization is done. Original comment by: tallu",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1398#issuecomment-281809851:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1398#issuecomment-281809851,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=104300; Originator: NO. Confirmed the weird Makefile issue. I don't know if this is a bug in make (or a feature :>) but removing the weird file helps. There are some other files like that as well:; $ find . -name ""._*"" | xargs file; ./src/math/._matrix3x3.cpp: AppleDouble encoded Macintosh file; ./src/math/._spacegroup.cpp: AppleDouble encoded Macintosh file; ./src/math/._transform3d.cpp: AppleDouble encoded Macintosh file; ./src/fingerprints/._finger3.cpp: AppleDouble encoded Macintosh file; ./src/forcefields/._Makefile.am: AppleDouble encoded Macintosh file; ./src/._fingerprint.cpp: AppleDouble encoded Macintosh file; ./src/._mol.cpp: AppleDouble encoded Macintosh file; ./src/formats/._Makefile.am: AppleDouble encoded Macintosh file; ./src/formats/xml/._Makefile.am: AppleDouble encoded Macintosh file; ./src/._obiter.cpp: AppleDouble encoded Macintosh file; ./data/._aromatic.txt: AppleDouble encoded Macintosh file; ./data/._types.txt: AppleDouble encoded Macintosh file; ./data/._psa.txt: AppleDouble encoded Macintosh file; ./data/._fragments.txt: AppleDouble encoded Macintosh file; ./data/._logp.txt: AppleDouble encoded Macintosh file; ./data/._space-groups.txt: AppleDouble encoded Macintosh file; ./data/._isotope-small.txt: AppleDouble encoded Macintosh file; ./data/._element.txt: AppleDouble encoded Macintosh file; ./data/._SMARTS_InteLigand.txt: AppleDouble encoded Macintosh file; ./data/._isotope.txt: AppleDouble encoded Macintosh file; ./data/._UFF.prm: AppleDouble encoded Macintosh file; ./data/._resdata.txt: AppleDouble encoded Macintosh file; ./data/._torlib.txt: AppleDouble encoded Macintosh file; ./data/._ringtyp.txt: AppleDouble encoded Macintosh file; ./data/._bondtyp.txt: AppleDouble encoded Macintosh file; ./data/._patterns.txt: AppleDouble encoded Macintosh file; ./scripts/._openbabel-java.i: AppleDouble encoded Macintosh file; ./scripts/perl/._Makefile.PL: AppleDouble encoded Macintosh file; ./scripts/._openbabel-perl.i: Appl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/783#issuecomment-281793259:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/783#issuecomment-281793259,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=104300; Originator: NO. beta4 doesn't crash anymore. Original comment by: dmierzej,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/728#issuecomment-281780418:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/728#issuecomment-281780418,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=104300; Originator: YES. My mistake. Obviously it's python bindings. Sorry. Summary fixed. Original comment by: dmierzej,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780562:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780562,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=104300; Originator: YES. Relevant Fedora bugreport:. https://bugzilla.redhat.com/show_bug.cgi?id=427700. Relevant gcc bugreport:. http://gcc.gnu.org/PR34708. Original comment by: dmierzej,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780560:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780560,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1102637; Originator: NO. Similar problem on m68k autobuilders of the Debian project. If this file could be split, this would help a lot:; http://buildd.debian.org/fetch.cgi?pkg=openbabel;ver=2.1.1-1;arch=m68k;stamp=1193495674. Original comment by: dleidert",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780567:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780567,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1102637; Originator: NO. This has already been fixed in SVN. Original comment by: dleidert,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/737#issuecomment-281780591:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/737#issuecomment-281780591,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1102637; Originator: NO. This has been fixed in the SVN (to my knowledge). Should be closed. Original comment by: dleidert,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/724#issuecomment-281780324:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/724#issuecomment-281780324,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1102637; Originator: YES. I don't know if hardcoding the binary name is a good idea. One can change the binary name via the configure options --program-prefix, --program-suffix or --program-transform-name. Original comment by: dleidert",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/731#issuecomment-281780479:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/731#issuecomment-281780479,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1102637; Originator: YES. The good news: You already have man-pages for obminimize, obenergy and obrotamer in your SVN. The bad news: You don't ship nor install them :) They are not part of man_MANS in doc/Makefile.am. The fix is pretty simple and I attach it. However, a man-page for rountrip is missing and it would be nice, if you could ship one.; File Added: 1900675_patch.diff. Original comment by: dleidert",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/729#issuecomment-281780444:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/729#issuecomment-281780444,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1155272. Besides its beta anyway. Thank You,; Micah. Original comment by: ilikesci",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/574#issuecomment-281777531:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/574#issuecomment-281777531,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1155272. Thank You, I tried doing a yahoo search for it and could not; figure out where I could get it. Sometimes these things happen. Thank You,; Micah. Original comment by: ilikesci",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/574#issuecomment-281777530:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/574#issuecomment-281777530,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1155272. more specifically libinchi.dll when I run it. Original comment by: ilikesci,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/574#issuecomment-281777526:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/574#issuecomment-281777526,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615. A possible solution to this is to give OBGenericData a; virtual GetValue function returning a std::string. Calling; GetValue on a OBGenericData pointer to a OBPairData object; would use the OBPairData function. The base class version; actually returns the Attribute, which was easier than making; it return an empty string, which would look neater, but it; should never be called. This solution is not very elegant, making OBGenericData just; a little bit less generic. But it isn't too bad - lots of; classes might find returning a string value useful - and I; hope gets the job done. (OBCommentData has a GetData; function - I'll make its virtual GetValue do the same.) . I've added the required code to generic.h in SVN. I can't; test with Python since we still lack a Windows version. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/532#issuecomment-281776715:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/532#issuecomment-281776715,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=1189615. Added a system of registration of number of parameters for ; each option. This allows main() to parse the command line ; more flexibly: options can be reliably anywhere in the line ; (this bug) and the parameter text for any single character ; option can start immediately, e.g. -f3 or after a space -f 3 It ; means that options in the same group (in, out or general) ; must take the same number of parameters, even if they ; mean different things in different formats (like C++ operator ; overloading). Conflicts are flagged at startup, provided all the ; options are registered (functionally essential only for those ; with parameters). Having sets of RegisterOptionParam() statements in format ; constructors is a bit messy. The Windows GUI parses the ; format Description() for this information and maybe it could ; be done in the main program too, although you wouldn't see ; immediately when this tricky process has gone wrong, as ; you do in the GUI. This is quite a lot of code for a small improvement in the user ; interface. However, while in the 20th century if it didn't work, ; you were doing something wrong. In the 21st century it's the ; program's fault. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/472#issuecomment-281775692:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/472#issuecomment-281775692,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615. Although I haven't compiled it, I think your program is; stopping when it finds a molecule it can't convert. The; first one is; b1ccccc1; Depict ( http://www.daylight.com/daycgi/depict ) also fails; with this, so it may not be correct SMILES. However it seems; a reasonable extension and when I get time I'll add code so; that it will be accepted. The molecule (about 49th) starting ; c12c3c4c5c1c6c7c8c2c9c%10c3c%11c%12c4c%13c%14c5c%15c...; ( a fullerene?) is causing my OB version to hang. I'll add; this as a bug in its own right. The loop in your program could be like the following,; although I haven't tested it:. int count = 0;; while(ifs) // Read the whole file; {; if(conv.Read(&mol, &ifs)) //Process the molecules; successfully converted; if (mol.NumHvyAtoms() > 1) count++;; mol.Clear();; }. This should ignore molecules that can't be converted, but; sadly not those that cause an infinite loop. Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/563#issuecomment-281777388:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/563#issuecomment-281777388,2,"['Log', 'test']","['Logged', 'tested']"
Testability,Logged In: YES ; user_id=1189615. Are you going to attach the file?. Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/520#issuecomment-281776526:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/520#issuecomment-281776526,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615. Attached file!. Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/491#issuecomment-281776006:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/491#issuecomment-281776006,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615. Christian Laggner has corrected the file and I hope it ; will be in v2.0.0 Some of the errors were typos but some ; were (fairly minor) deficiencies in the SMARTS parser, ; which he will report as bugs. The corrected file is attached. I did not pick up these errors earlier because they were ; reported via C (rather than C++) output routines. This ; doesn't make a difference with console output, but did ; with the Windows GUI. This will also be corrected shortly. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/491#issuecomment-281776005:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/491#issuecomment-281776005,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615. Corrected in HEAD code in Jan 2006. Example file now; converted ok.; Status made pending. Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/503#issuecomment-281776198:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/503#issuecomment-281776198,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615. I agree but would go further. There is little point in; storing data which is easily computed. The contamination of; OBGenericData was one reason why I bypassed GetFormula(); with GetSpacedFormula(). . I would propose to change the code so that RingData and ; Formula do not store here. Chiral data should also not be; stored here (as I keep saying without doing anything) and; maybe not z-matrix stuff either. . Broadly, OBGenericData should contain:; meta-data comments, IDs, sources, methods, etc.; extra chemical information - e.g crystal properties,; energies, spectra and all those comp chem things I don't; uderstand.; and, if really necessary, any data which takes more than a; second to calculate or requires an external program. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1467#issuecomment-281810534:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1467#issuecomment-281810534,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615. I can see the cause of the problem, introduced in the recent ; upgrading of Options. It arises because an over-ambitious ; attempt at generality and extendibility. Options can take ; associated text (e.g. -s) or not (e.g. -p), but this is not known ; to the main() function because an option may be introduced ; by a format class. If the option was a single letter and the ; text was concatinated, there would be no problem. But with ; the text following after a space (also a unix way? and ; necessary with long options), main() can mistake a following ; file name for option-associated text. This is not easy. If a -S option takes a filterfilename, . babel infilename outfilename -S filterfilename; babel infilename -oxxx -S filterfilename. would be unambiguous. But. babel -S filterfilename infilename outfilename; babel -S filterfilename infilename -oxxx. would be difficult for main() if it didn't know whether -S took ; data or not, since it may think filterfilename is an input file. A solution would be for formats to register at start up whether ; their options had associated text, like they currently register ; their file extensions. While this may be over-elaborate, it ; would be transparent to the user, and not difficult for a format ; class developer. I'll look into it. . Chris; . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/472#issuecomment-281775691:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/472#issuecomment-281775691,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615. I had not previously compiled obgrep on Windows because it ; uses getopt() and most of its features are built into openbabel ; v2.0 anyway. But I found a getopt Windows port and ; reproduced the fault. The problem is that the ifstream object ; ifs was going out of scope before a pointer to it was used. I'll ; updated the of obgrep.cpp which can now be compiled on ; Windows with a public domain port of getopt. (Not ; extensively tested.). Chris . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/445#issuecomment-281775185:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/445#issuecomment-281775185,2,"['Log', 'test']","['Logged', 'tested']"
Testability,Logged In: YES ; user_id=1189615. I have committed code to smilesformat.cpp in the SVN HEAD; (will be v2.1) to give a warning with the illegal aromatic; elements b [si] [ge] [sb] [bi] [te] [sn] but accept them.; The resulting molecule may or may not be what be what was; expected (caveat emptor). . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/563#issuecomment-281777390:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/563#issuecomment-281777390,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615. I'm afraid I don't understand what std::map<> you mean. The; call to OBMol::Center I was observing to be successful is at; line 70 of transform.cpp. ; babel some2Dmolecule.mol -omol -c; will exercise it.; Is your OBMol fully constructed? I have found this to be a; cause for strange failures of API functions in other cases. . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777307:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777307,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615. I'm sorry about the missing file; I attach it here. It ; being Windows only it seems to have slipped through the ; cracks; I'm sure Geoff will make sure it is included in ; the next release of source code. Visual C++ 2005 Express (the free version) can update VC6 ; dsp files ok, but I haven't tried the intermediate 2002 ; and 2003 versions. It would be helpful if you could ; provide the build files for these versions when you ; succeed in building them. If you can manage with the command line version, there are ; fewer things to go wrong when building OBabel, the ; standalone exe project. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/495#issuecomment-281776063:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/495#issuecomment-281776063,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615. I've reopened this. Only preliminary work in 2.1.0 HEAD; files has been done as yet. I'll try to finish the job so; that all the OBGeneric data is copied with an OBMol. . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/505#issuecomment-281776237:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/505#issuecomment-281776237,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615. If all the atoms (or even all the non-H atoms) have 3D ; coordinates surely the stereochemistry *is* defined, so that ; this isn't a bug. If it were a 2D molecule, stereo centres could ; or could not be be defined which would be relected in ; theSMILES output. So what seems to be required is to be ; able to input a molecule with 3D coordinates *and* 2D stereo ; specifications, and to ignore the z coordinates. This is a ; feature request. . Many parts of the sdf/mol format (including I think undefined ; stereo) are concerned with molecular querying, and at ; present OpenBabel doesn't convert molecules of this kind ; (with defined uncertainties). For example it converts mol to ; SMILES not SMARTS. To do this would be another ; reasonable feature request.; ; Having said all this, there does seem to be a bug with ; SMILES sometimes generating spurious stereo centres from ; 2D molecules. This occurs with the attached file (posted by ; Reinhard Dunkel on the InChI form for another purpose). Is the original problem file similar to this? It would be helpful if ; it was posted. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/484#issuecomment-281775874:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/484#issuecomment-281775874,2,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615. In v2.0 the reading and writing is interleaved. There is a queue ; of 2 so that an output format can know if it is outputting the ; last object. The ostream should be flushed even if there is an ; exception (but possibly it could be one object short(?)). If the ; fault is minor enough to just produce a molecule with no ; atoms or if the format has a SkipObjects() function the faulty ; molecule is not output but the input file should continue to be ; read. But I'll take this all back if you have a file which fails... Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1415#issuecomment-281810073:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1415#issuecomment-281810073,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615. Indeed this was the way it was until last week. But Jean ; Bréfort found difficulties when loading files during the ; initialization of a static variable. See; https://sourceforge.net/mailarchive/forum.php?; thread_id=8969769&forum_id=3042; He (as I understand it) was loading OB using dlopen. He ; said ""This might be a glibc bug, but we must live with ; it."" So we are: currently a (possibly dummy) OBConversion ; object has to be constructed to access the static data. ; Not elegant, but not a big deal either. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/500#issuecomment-281776151:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/500#issuecomment-281776151,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615. Now corrected in CVS. I found it necessary to include a ; third place (in FullConvert()) where the zip/unzip streams ; are made. It's a pity that all these elegant features ; interact! . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/486#issuecomment-281775925:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/486#issuecomment-281775925,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615. OBAtom::ImplicitHydrogenCount() gives the right answer for ; this case, but the wrong answer in most others. I have ; removed it.; The fault is corrected by adding the line:; IMPVAL [#6^1-]			1 #CM for ; isocyanides; in atomtyp.txt. I think this fix is robust since it follows on ; from the two lines above:; IMPVAL [#6^3-]			3; IMPVAL [#6^2-]			2; I expect Geoff will update atomtyp.h appropriately. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/453#issuecomment-281775339:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/453#issuecomment-281775339,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615. OBMol::Center() is working with the SVN HEAD code for me, at; least when called from OBMol::DoTransformations as part of; the normal conversion process (-c option). Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777303:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777303,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615. OK, $$$$ will be output after every molecule. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/490#issuecomment-281775993:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/490#issuecomment-281775993,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615. Sorry for this embarrassing mistake. The zip file for; downloading now contains the DLL files.; It took a long time to find this out - nearly 2000 people; had downloaded this version. However, the DLLs were the same; as in 2.0.1. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/574#issuecomment-281777527:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/574#issuecomment-281777527,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615. Sorry, I must have expanded it recently, probably to solve a; problem similar to this one. The version in SVN HEAD is:; ; void OBConversion::SetOneObjectOnly(bool b); {; OneObjectOnly=b;; m_IsLast=b;; }. with the declaration:; void SetOneObjectOnly(bool b=true);. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/560#issuecomment-281777337:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/560#issuecomment-281777337,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615. Thanks for finding this. The bug is now corrected in CVS. ; Fastsearch output is now like the normal output with ; separators between items in some formats (e.g. mol), and ; with a header and footer where appropriate(e.g. CML). Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/487#issuecomment-281775946:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/487#issuecomment-281775946,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615. Thanks very much for these comments. User interface design ; depends on fitting in with the user's expectations. The ; more examples of these, the better. . The GUI has a number of design faults and bugs which I ; have put off correcting because I would prefer to put the ; effort into a cross-platform GUI. (I would welcome ; suggestions what to use to build such an interface). To respond to your comments:. (0) The installation is deliberately minimal. I would have ; thought that whatever you use for unzipping, you can ; always specify the destination folder. The current most ; common approach would be double clicking the zip file in ; Windows XP, which would do as you suggest. . (1)(2)(7) The design without a menu bar is perhaps less ; common than it used to be and maybe is too disconcerting. ; I agree there should be some About info. The control menu ; is a possible place for this, but maybe nobody would think ; to look there. I agree there should be a minimize button. (3) and (4) are bugs. The failure of All Chemical Formats ; seems to be to a 256 character limit on the filter string ; and has only come to light when all the formats were ; included. Why this should occur needs tracking down. (5) illustrates a UI dilemma. Should ; a)the type of file requested, or ; b)the extension of the file selected by the user ; have priority on what format OB attempts to convert. I ; chose b), and I provided a Force this Format checkbox to ; cover the case where this was not what was required. You ; prefer a), giving priority to the user's earlier choice ; via the Format dropdown and an opportunity to Force file ; Extension via a checkbox. Both are reasonable, but I ; prefer a) on the principle that it uses a later deliberate ; user choice. (6) I agree that more feedback is needed to help the user ; to know whether local or file input is being used. Making ; it read-only when the file option is selected and ; automatically updating the contents ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810307:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810307,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615. The code in CVS HEAD now copies the OBGenericData when an; OBMol is copied. Set pending. Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/505#issuecomment-281776238:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/505#issuecomment-281776238,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615. The missing libs for linking the DLLs are attached (see ; below). But it is important to be aware that the DLLs have ; C++ interfaces and so are only useable when being called ; from C++ programs which have been compiled with the same ; compiler. Even different versions of the MS compiler are ; incompatible: the name decoration is the same (from VC4 ; onwards), but STL function and parameter names seem to be ; different. The precompiled DLLs in openbabel-2.0.0win.zip ; are compiled with VC6 and would not work with a program ; compiled with MinGW. The decision not to use the more normal C interfaces was ; made because it would distort the structure of the program ; excessively and make far more of the source code specific ; to Windows DLL builds rather than being essentially the ; same for all platforms as at present. If you manage to get round the bug in building DLLs (or ; anything else) on MinGW we would be delighted if you could ; share your build files. The OBabel standalone build is ; easier if it meets your needs.; ; The attached zip file has VC6 OBConv.lib and OBDLL.lib ; which are needed to link the DLLs and are only useful if ; you have VC6 to build a program to drive them. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/496#issuecomment-281776089:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/496#issuecomment-281776089,2,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615. This example works ok for me in Windows, but it fails on; others. It seems critically dependent on the size of the; file - adding a single space sometimes make it work. I'll; try to sort it out. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/535#issuecomment-281776785:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/535#issuecomment-281776785,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615. This feature would be of wider application if it were in the ; main babel (which can also do the work of obgrep), where it ; could be easily implemented in OBMol::DoTransformations ; which already does filtering.; It could now have an interface like; --prop MW>102; and could be extended to other properties (with names other ; than ""MW"") which would relate to any info that OB had on ; the molecule - chemical, e.g nAtoms - and non-chemical, ; e.g. title or comments. The parsing of the string containing ; >,< or = would be easy. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1416#issuecomment-281810076:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1416#issuecomment-281810076,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615. This is a case where I have not been "" eating my own dog; food"" as I don't have cause to use single molecule output; files. It is obviously wrong that there can be incorrect output. So I have added to HEAD CVS a conditional block in; OBConversion::AddChemObject() so that formats with; WRITEONEONLY output only one molecule. With a multi-molecule; input file, the user can still specify which molecule that; is using the -f# option. He can already manually specify that each molecule is output; in a separate file, e.g.,; babel 4mols.smi out.qcin -m; (or in Windows babel 4mols.smi out*.qcin}. Is it a good idea for this to happen automatically? The; first file in a multi-output would be out1.qcin which wasn't; the name the user thought he was specifying. He would also; loose the opportunity to select which single molecule is; output. I think the change above is sufficient, but, as I; say, I don't eat this dog food. There have been other changes to AddChemObject() but this; one could be put into 2.0.2 should this ever happen. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/527#issuecomment-281776630:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/527#issuecomment-281776630,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615. This is by design. The $$$$ is added only between ; molecules. But if you think it a good idea to always have ; it at the end, it would be easy to change. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/490#issuecomment-281775991:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/490#issuecomment-281775991,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615. This may be connected to me recently (29 July) changing ; OBMoleculeFormat to allow zero atom molecules to be ; passed on. This puts the onus on each format individually to ; handle this situation. . The reason for making this change is to handle output from ; CML where molecules are allowed to have zero atoms and ; frequently do in CMLReact. I don't think it unreasonable for a format to do something safe ; when give a molecule with <=0 atoms. But if it is too much ; work, the test could be put back into OBMoleculeFormat and ; SmilesFormat and MolFormat made not to derive from it. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/460#issuecomment-281775569:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/460#issuecomment-281775569,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=1189615. This works ok for me under Windows XP.; I have added some code before the line above to give an; error message if pDefault is not acceptable. This is a; pointer to the default XML format, which is either the one; marked as such, or the first one. It really should be ok.; Alternatively there may be some difficult with the RTTI; function typeid. Could you try it with the modified; xmlformat.cpp? ; Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/575#issuecomment-281777538:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/575#issuecomment-281777538,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615. void SetOneObjectOnly(false);; does what you want and sets m_IsLast=false. It also sets; OneObjectOnly=false, which is the default anyway. ; Calling the function with true reverses these but would be; appropriate if you needed to manually mark the last molecule. We could have SetLast() as suggested but I think; SetOneObjectOnly(0) should be good enough. We could do with; some documentation though. The user is helped when doing normal conversions (via; FullConvert()) by making $$$$ addition as automatic as; possible. This is complicated by OB using the same code for; mol and sdf files which differ in their requirement for a; $$$ at the end. When calling the format from a program (via; Write()) I don't think it unreasonable that you have to say; that multiple molecules are about to be output and then flag; the last molecule manually. It would be similar for outputting multiple molecules in CML. ; . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/560#issuecomment-281777335:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/560#issuecomment-281777335,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615; Originator: NO. $END$ wasn't being recognizing as the same as $END. Fixed in 2.1.x. Example file doesn't crash. Closed.; . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/652#issuecomment-281779039:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/652#issuecomment-281779039,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. According to; http://www.daylight.com/dayhtml/doc/theory/theory.smirks.html. ""Recall that in versions of the Daylight system prior to 4.51, [H] as SMARTS meant: ""any atom with a single attached hydrogen"", while in SMILES it is a lone explicit hydrogen. ... In SMARTS, these expressions now are interpreted as a hydrogen atom, rather than as any atom with one hydrogen attached."". I guess OB's SMARTS implementation is using the old version rather than the new. It certainly needs to be corrected.; This will also affect the recently introduced, but not much tested, OpTransform class. Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/738#issuecomment-281780614:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/738#issuecomment-281780614,2,"['Log', 'test']","['Logged', 'tested']"
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. All of these SMILES have 4-valent nitrogen, I guess due to the way the MOL2 file is converted. So to SMILES the molecule is some kind of strange radical. Surely this is an error? It would be better to get this right before worrying about the chirality. Incidentally, when Marvin View reads the mol2 file, it gives the OH group a negative charge, which also doesn't look right. I am afraid mol2 files are out of my experience. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779162:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779162,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615; Originator: NO. Already corrected in SVN Head code for V2.1 and in snapshots. It's a bit of moving target... Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/597#issuecomment-281777969:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/597#issuecomment-281777969,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. Are you using the release code? There was a SMILES bug in SVN code shortly before release, but it all works fine for me now. I used SVN head code to build the PythonOBF project, copied openbabel.py _openbabel.pyd pybel.py and head.sdf into the folder with OpenBabel 2.2.0 from OpenBabel2.2.0_Windows_Installer2.exe , set PYTHONPATH there - and your example works ok. Chris; . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/796#issuecomment-281793478:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/796#issuecomment-281793478,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. At your suggestion, I've now (rev2016) added support for:. * as wildcard. It has to be the first or last character. property names containing spaces. You use underscores in the filter string. I originally had a warning message for unknown property names but removed it because it becomes tedious with files where some molecules have a property and others don't (like the filterset.sdf referred to inon the wiki page). . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1486#issuecomment-281810761:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1486#issuecomment-281810761,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. Closed, see #1975137 r2504. Marcus found that atoi was being given an unterminated string. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779319:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779319,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. Correct the fault identified by Jean in babel.cpp (and nbabel.cpp) in development SVN code rev 2074. It is surprising that this bug took so long to find. I guess experienced users know that a format is read-only; other users don't report bugs - so thank you, LI Daobing.; I mostly use the GUI where such errors are impossible, so this part of OpenBabel has received less critical attention. Chris . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/684#issuecomment-281779589:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/684#issuecomment-281779589,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. Corrected in SVN revision 1753 (for v2.1). The -m option was interpreted as a splitting operation if there was only one input file and a batch operation otherwise. It is now also necessary for the base name for the output files that will contain the split objects to have at least one character.; babel test.sdf -omol2 -m now converts to the expected test.omol2, but there is also a warning message in case the user was expecting to be doing a split.; Marked pending. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/601#issuecomment-281778043:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/601#issuecomment-281778043,3,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. DeleteData(OBGenericData*) had a bug which could have appeared intermittently (a vector iterator used when invalidated after a deletion). Corrected in the C++ code (revision 1951). The port to Python hasn't been tested. I've also added a new overloaded function DeleteData(string&) which I guess would be used like obmol.DeleteData(""NSC"") when the appropriate interfacing has been done. It is used for the forthcoming babel --delete commandline option. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/641#issuecomment-281778905:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/641#issuecomment-281778905,2,"['Log', 'test']","['Logged', 'tested']"
Testability,Logged In: YES ; user_id=1189615; Originator: NO. File Added: AliasProblem.sdf. Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/693#issuecomment-281779748:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/693#issuecomment-281779748,2,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615; Originator: NO. Fixed in HEAD code r2370 in the way suggested by Richard West. Set status to pending.; Chris. Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/747#issuecomment-281780809:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/747#issuecomment-281780809,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615; Originator: NO. Fixed in HEAD code revision 2056. Documentation improved. . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/676#issuecomment-281779436:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/676#issuecomment-281779436,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. Fixed in revision 2145 in trunk.; It needed another flag on OBAtom to require implicit Hs even if there are explicit H. It is set for simple, non-aromatic SMILES atoms. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/702#issuecomment-281779931:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/702#issuecomment-281779931,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. Fixed in revision 2394 in the development code by modifying atomtyp.txt. This could be used with v2.1.1 and there are some test species in test/files/FormulaTest.smi. The valence model that OpenBabel uses is rather fragile, so please keep an eye open for any further discrepancies in S compound. Set Pending to close after 2 weeks if not notified as faulty. Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/749#issuecomment-281780822:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/749#issuecomment-281780822,3,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. Fixed in v2643 by removing Si IMPVAL entry, so that Si never has implict H. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/741#issuecomment-281780668:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/741#issuecomment-281780668,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. I have added OBCommonFormats to FastSearch's dependencies, which should sort out the build order. The warnings can ignored. Keeping these tidy is a continuing task since not all developers get the same warnings. You probably want to build in Release mode. There was a recent glitch which meant that Debug configurations were being used even when it said Release at the top. I hope this is now corrected. Chris . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781137:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781137,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. I have applied Jean Brefort's patch, which seems to do what is required, to the development code r2479. Set Pending . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/758#issuecomment-281781000:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/758#issuecomment-281781000,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. I think these molecules are handled correctly if the attached atomtyp.txt replaces that in v2.2.0. The current way of handling valence requires a SMARTS pattern for each configuration, e.g. the one for O+ with a triple bond was missing. There may be other SMARTS patterns needed, so could you try with some more of your exotic molecules? . Chris; File Added: atomtyp.txt. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/813#issuecomment-281793756:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/813#issuecomment-281793756,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. I think your code has a (common) programming error.; In ob_hillformula the pointer tmpFormula does not have any memory assigned to it. So depending on where it pointed, the function could work, or it could crash. Even if it had, you would be returning the value of a local variable. I would return a std::string by value. Incidentally, you don't need to call AddHydrogens() before using GetFormula() or GetMolWt(). Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/678#issuecomment-281779476:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/678#issuecomment-281779476,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615; Originator: NO. I'm afraid I can't find what the version of the libxml2.dll is. It is older and smaller than 2.6.27 which I downloaded last year. But it also doesn't seem to have any problems. Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/762#issuecomment-281781079:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/762#issuecomment-281781079,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. I've written a framework which makes it easy to implement plugin modules for classes with an abstract base class and derived classes called via virtual functions. OBForcefield isn't quite like that but could easily be modified so that it was. Then add a macro MAKE_PLUGIN(OBForcefield), make a global instance of each derived class specifying its ID, and provide a constructor to pass this on to its parent OBForcefield. See details in pluginiter.h OBFingerprint has been modified in this way. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1477#issuecomment-281810644:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1477#issuecomment-281810644,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. If the env var BABEL_DATADIR is not set, a precompiled verision of the data is used, which I suppose is ok. With BABEL_DATADIR set, atomtyp.txt is parsed.; ; The parsing of this data file was written assuming it had UNIX line endings. With Windows files on Windows, a trailing \r appeared in some parsed items. (It may not work with old MAC data files also.) Maybe '\r' is the erroneous ^M that was seen. I've added \r to list of white space characters in tokenize() and the warnings I was getting writing to mol2 files have gone away and the mol2 output file is the same with BABEL_DATADIR set or not. I'm not qualified to comment on the other possible bugs on this ticket. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/647#issuecomment-281778979:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/647#issuecomment-281778979,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. In OpenBabel v2.2.0 you can also use:; babel -L formats ; which has an output like:; xml -- General XML format [Read-only]; xyz -- XYZ cartesian coordinates format; yob -- YASARA.org YOB format; zin -- ZINDO input format [Write-only]; which I don't think is too difficult to parse and is almost what you suggest. or ; babel -L formats read; which has the same output (except the bracketed item is omitted) for formats that can be read, and of course similarly for write. babel -L formats verbose or babel -Hall; gives complete information on all formats, including the format-specific options. It would not be less easy to parse however. If you were using the C++ API or the Python or other scripting interface there are other more flexible ways of listing the formats. Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1505#issuecomment-281811016:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1505#issuecomment-281811016,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. In revision 2025 in SVN HEAD, COLLECTION blocks are now benignly ignored, with a warning, and the rest of the molecule is converted. Set Pending, to close after 2 weeks. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/663#issuecomment-281779225:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/663#issuecomment-281779225,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. Is this what is required?. >echo CCO|babel -ismi -ocml --AddPolarH; <?xml version=""1.0""?>; <molecule xmlns=""http://www.xml-cml.org/schema"">; <atomArray>; <atom id=""a1"" elementType=""C""/>; <atom id=""a2"" elementType=""C""/>; <atom id=""a3"" elementType=""O""/>; <atom id=""a4"" elementType=""H""/>; </atomArray>; <bondArray>; <bond atomRefs2=""a1 a2"" order=""1""/>; <bond atomRefs2=""a2 a3"" order=""1""/>; <bond atomRefs2=""a3 a4"" order=""1""/>; </bondArray>; </molecule>; 1 molecule converted; 22 audit log messages. Options like these can be added as plugins, without altering existing code.; The code is in src/ops/addpolarh.cpp and it should be compiled like gen3d.cpp. (It is very similar - I just altered a few words.) Feel free to make or suggest improvements. Command-line options which are OBTransforms can be added without compiling, see data/plugindefines.txt. Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1502#issuecomment-281810957:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1502#issuecomment-281810957,2,"['Log', 'log']","['Logged', 'log']"
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. It looks as if the C++ library you are using already has std::tr1 defined. If so, shared_ptr will already be defined and boost isn't needed. Could you try removing the line; #define USE_BOOST in windows-vc2005/babelconfig.h. If this works (I hope you will use the mailing list to let us know) I'll sort out a version dependent fix in babelconfig.h. According to http://blogs.msdn.com/vcblog/archive/2008/01/08/q-a-on-our-tr1-implementation.aspx; tr1 support appeared in a ""Feature Pack"" for Visual C++ 2008 and is not applicable to the Express version or to Visual C++ 2005. Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786164:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786164,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. It won't compile on your machine until the code is altered to accomodate it. So it would be more helpful to track down the tr1 files than recompiling the program, which is not providing useful information. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786187:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786187,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. It worked ok for me with v2.0.2 and the latest released version 2.1.1. This was with the Windows GUI, but that would not normally make much difference.; ; The fourth bond has its second atom index=14, just before the bond order. Could it be that some corruption with extra spaces has happened somewhere? With an abnormal audit log, the fault is probably in your copy of OpenBabel. . Could you see if you get the same problem with v2.1.1?. Chris . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779317:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779317,2,"['Log', 'log']","['Logged', 'log']"
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. Most of the files in shared.txt are from Boost, and we still haven't found the implementation of tr1, if it is there. I suspect your STL library files are in; c:\Program Files\Microsoft Visual Studio 9.0\VC\include\; (It will contain the file called algorithm). Could you use FindInFiles in Visual Studio to search this directory and its sub-directories for ""shared_ptr"" (don't use the quotes) or failing that ""tr1"" (case-insensitive)?. Chris . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786181:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786181,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. My apologies, I realized overnight that strdup was used and came back this morning to retract. I guess I think in a C++ rather than a C way.; The bug is still a mystery. I'll look at at AddHydrogens() which has changed a little since v2.0.1. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/678#issuecomment-281779481:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/678#issuecomment-281779481,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. Not really a bug, but a good suggestion which doesn't look too difficult. I'll tackle it when v2.2.0 release is out of the way. Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1501#issuecomment-281810954:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1501#issuecomment-281810954,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. Now OBFingerprint::Tanimoto() returns 0.0 when no bits are set in HEAD revision 1967. Sloppy programming, I'm afraid. Set Pending. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/648#issuecomment-281778997:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/648#issuecomment-281778997,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. Openbabel is very close to compiling on your system but it will not do so until some small code changes are made. To make these I need some information that Microsoft does not make easily accessible unless you have bought their product. This would open up Openbabel to other users with VC2008. Could you help with information on the tr1 header files as detailed previously?. Some of the errors you are seeing are new transient ones which are inevitable in development code because of the delay in adjusting the build files when developers using other platforms have made code changes. I can see these and can correct them, but I need help with VC2008. Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786177:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786177,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615; Originator: NO. Probable the same as #1738005 which has now been fixed in 2.1.x. Set Pending. Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/659#issuecomment-281779148:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/659#issuecomment-281779148,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615; Originator: NO. Probably fixed in rev 2069 in HEAD code. Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/675#issuecomment-281779417:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/675#issuecomment-281779417,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. Remember that babel has a -e option which attempts to read further molecules after an error. The interpretation of alias blocks is SDF files is a continuing problem.; ; The attached file AliasProblem.sdf contains the 5th and 8th molecule from the original 38MB problem file. It looks as if the first molecule is the result of an erroneous file conversion by PubChem. The second molecule looks as if it has some meaning, although OB doesn't parse it correctly. I am inclined to set up an OBGenericData structure to handle alias information (which would be also used for entities like Ph from ChemDraw, if Jean Brefort has been persuaded. Anything from the SDF alias line (except ? and *) could be put in there. But maybe there should be an attempt to interpret it, as in the second molecule, or especially in attached alias2.sdf from the InChI Technical Manual. In the last case, a C atom has to be replaced by a SD group. OB currently gets the intended answer in the last case, but at the expense in other cases of a clean minimal treatment - the line as merely an alias for interpretation elsewhere. So I'll change the development code to do the minimal treatment, unless anybody has a different view. Alias blocks will then not give any errors whatever they contain. Chris. File Added: Alias2.sdf. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/693#issuecomment-281779746:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/693#issuecomment-281779746,2,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. Rev1982 ignored characters<0 in ParseSmiles which had caused errors. The invalidsmiles test now works ok on Windows, but the zlib routines are not active in Windows and the error messages indicate that this is where the problem lies. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/649#issuecomment-281779008:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/649#issuecomment-281779008,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. SD and MOL files have traditionally been handled in OB by the same code, which has lead to errors like this. From revision 1638 they are separate, so that SD files now always output with $$$$ at the end, and MOL files no longer output properties. Marking as closed. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/583#issuecomment-281777677:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/583#issuecomment-281777677,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. SDFormat outputs wedge/hash bonds only if the dimension of the molecule is 2. The default for a newly constructed OBMol is 3, so you need to call SetDimension(2). . However smiles format output does not seem to be recognizing OB_HASH_BOND in the case I tried. I'll look into this further. Canonical smiles (can format) works ok. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779011:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779011,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615; Originator: NO. SetOneObjectOnly(bool b) will do this for you. This suggestion has come up previously. I'll add a synomym SetLast. It's no good having functionality if nobody can find it. . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/596#issuecomment-281777948:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/596#issuecomment-281777948,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. Sorry about the glitch which caused double posting. I have committed the changes for simplifying the reading of alias blocks to the trunk development code. At least the first 1498 molecules of AliasProblem.sdf are read without OB reporting errors, although quite a lot of them have uninterpreted aliases. I'll mark as Pending to close in 2 weeks. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/693#issuecomment-281779758:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/693#issuecomment-281779758,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615; Originator: NO. Thank you for taking the trouble to providing such a detailed description. There is more than one bug here.; The SMILES parser was not ordering the atoms correctly when one or more of the atoms attached to a chiral center was a ring closure.; The loss of chiral info occurred in FindChiralCenters(). Calling this was unnecessary and the SMILES parse now avoids this by calling SetChiralityPerceived().; These two corrections are in smilesformat.cpp rev 2065 (which compatible with v2.1.1) and SMILES to InChI should now be ok. There still seems to be a bug in Canonical SMILES output and this has not yet been corrected. The third set of molecules listed in the original bug report are examples. . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779558:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779558,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615; Originator: NO. Thanks for the report and patch. The development version (soon to be v2.2.0) has already been corrected in a very similar way. Chris. Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/733#issuecomment-281780505:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/733#issuecomment-281780505,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. Thanks for the report. Most of the code in OpenBabel is the same whatever the platform. This includes that for hydrogen addition, but, as you point out, it may use data in some .txt files. If these are not present, as in the Windows distribution, an internal set of data are used, which should be the same as in the default .txt files, unless something has gone wrong. It would be helpful if you could attach an example file, and try to find the version numbers:; menu item Help/About on the Windows GUI and babel -V on the commandline. Chris . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/670#issuecomment-281779324:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/670#issuecomment-281779324,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. Thanks for the suggestion, which is now in rev 2067 in HEAD code.; Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/679#issuecomment-281779493:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/679#issuecomment-281779493,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615; Originator: NO. Thanks; I have removed the spam; Chris. Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/708#issuecomment-281780044:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/708#issuecomment-281780044,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. The --filter option in SVN HEAD (for v3.0) does much of this. See; http://openbabel.sourceforge.net/wiki/--filter_option. babel infile.sdf outfile.xxx --filter ""title='TargetTitle'"". It can have multiple boolean connected filter tests that may involve (sdf-like) properties (NAME in the example below is such a property):. babel infile.sdf outfile.xxx --filter ""(title='TargetTitle' || NAME='AltTitle') && MW >180"". The string tests can be crudely alphabetical, title>'Tar', but it doesn't do regular expressions. Would many chemists be able to use a regular expression easily? (Speaking as one who couldn't.). Chris . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1486#issuecomment-281810756:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1486#issuecomment-281810756,3,"['Log', 'test']","['Logged', 'tests']"
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. The InChI example files were using the <NAME> property and no title. They were all single line, though. If it is a practice that is in use, then we should support it. . Maybe to prevent errors but minimise information loss, any line break in a title retrieved by OBMol::GetTitle() should be returned with any line break converted to a space or a tab. I don't think the loss of backward compatibility is serious enough to worry about. The function could have a bool parameter whose default has this behaviour, but the inverse would allow access to the raw multiline text if necessary. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/766#issuecomment-281781126:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/766#issuecomment-281781126,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615; Originator: NO. The SVN development code at revision 1822 now produces the right InChI for this molecule. But I'm still checking stereochemistry in InChI format. Mark pending to be closed after 2 weeks unless notified. Chris. Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/595#issuecomment-281777934:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/595#issuecomment-281777934,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. The hanging when large amounts of output are sent only to the GUI window has been reported as bug 1596906, and has not yet been corrected. It may work if you specify an output file. Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/615#issuecomment-281778257:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/615#issuecomment-281778257,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615; Originator: NO. The main cause of this seems to be that the fragments.txt data file is not being found.; Setting the Environment Variable BABEL_DATADIR to the installation directory (this is C:\Program Files\OpenBabel-2.2.0 for me) seems to fix the problem. (Use Control Panel/System/Advanced/Environment Variables). What is going on needs further investigation since the current directory does not seem to be what I was expecting. It would probably worth setting the Environment Variable in the installer. This is partly the same problem as bug #2013806 and partly the bug with linear molecules #2014055. Chris . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793435:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793435,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615; Originator: NO. The nitrogen atom in dan156.sdf has a double and two single bonds and no charge. This is probably not what was intended - the sdf file is corrupt. OB doesn't give an error message with molecules like these and maybe should do. The four-valent nitrogen is reported when converting to InChI.; Chris. Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/718#issuecomment-281780215:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/718#issuecomment-281780215,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. The patch adds; #include <string.h>; to data.h and obconversion.h. I think it would be confusing to include this obsolete header file as well as the current <string>. I presume that strcasecmp is declared in string.h, but is there not a better way to handle it? For instance with Windows Visual C++ builds it is redefined as stricmp in babelconfig.h. Chris . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/724#issuecomment-281780323:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/724#issuecomment-281780323,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. The problem is probably with your project settings; I don't think there is a boost problem.; Information on boost installation is at http://openbabel.org/wiki/Install_(MSVC); It sounds as if the entry in Additional Include Directories may not have gone properly. Make sure that the directory added here is one that has a subdirectory called ""boost"". It would be better to compile in Release mode. This bug report is a cumbersome way of sorting out the problems with Visual Studio 2008, which I am sure will be achieved by a couple of small changes, most likely to your Visual Studio set up. Would you like to email me privately at c.morley AT gaseq.co.uk ?. Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/787#issuecomment-281793378:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/787#issuecomment-281793378,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. The problem was not to do with my previous comment, but arises because the hydrogens in the molecule have to be explicit to match [H] in SMARTS.; In r2373 the match is now done on an explicit H copy of the molecule when the SMARTS pattern contains [H]. Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/738#issuecomment-281780616:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/738#issuecomment-281780616,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. The problem was the facility to provide input on the command line, terminated by a blank line. The empty line at the start of the mol file was being seen as this. The commandline input was always clunky, but now even clunkier because you have to use Cntl Z to terminate, but the piping example now works. Chris . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/765#issuecomment-281781119:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/765#issuecomment-281781119,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. The reasoning, seen easiest with a single atom C fragment, was that almost every molecule would have this matched, given that the main use of this type of fingerprint is to index large >10000 databases of organic molecules. It would be unlikely that any body would depend on the single atom N fragment, in the way they would for say As. Rather, they would specify a N-containing group which would have larger distinguishing fragments. These bits would not contribute significantly to distinguishing between molecules and so should be omitted. . However, the gain from doing so is not much. So if the difference from Daylight's product is confusing maybe we should change it. Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/695#issuecomment-281779781:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/695#issuecomment-281779781,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. The revision essentially ignores what is in the COLLECTION block. Is that good enough?; The file is is SVN. The following link will retrieve it. It could just replace the original file and then OpenBabel should be compiled, if you can do that. I could supply a compiled Windows version if that would help.; http://openbabel.svn.sourceforge.net/viewvc/*checkout*/openbabel/openbabel/trunk/src/formats/mdlformat.cpp?revision=2025. Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/663#issuecomment-281779229:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/663#issuecomment-281779229,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. The rule now is:; ""If any explicit non-isotopically-specified hydrogens are present, then ALL hydrogens for this heavy atom are fully specified."" This is stated in line 2055 of mol.cpp but maybe there should be a general writeup on implicit hydrogens somewhere else. I realize that you will not find this rule very satisfactory. Using implicit hydrogens is a convenience but is prone to misinterpretation unless there are hard and fast rules, which there aren't in SDF files, as far as I know. I think the best we can do is to fit in with what the user probably wanted. I think these three examples do this: in a structure with implicit hydrogens the user often wants to highlight where the D atoms are; but nobody would write methane with only one hydrogen, so he/she must mean the molecule CH . If you wanted to represent the molecule CD you would have to use a M RAD line with a value of 4, which is interpreted by OB but is not legal SDF, although it is a very obvious extension. You would also be taking a lot of notice of whether it was being interpreted correctly, which you might not be with the first two examples. So I think we cover all types of user. Incidentally, in SMILES the Daylight theory manual says ""Within brackets, any attached hydrogens and formal charges must always be specified."" I take this to mean ""there is no implicit hydrogen on bracketed atoms."". With the molecules:; [CH3][2H] [CH2][2H] [CH][2H] [C][2H]; Depict draws the same picture for all and gives warnings of hydrogen deficiency for the 2nd and 4th, but surprisingly not the 3rd. Apart for this last case, it seems to be consistent with the previous paragraph. I didn't find any equivalent statements in the OpenSmiles specification, but maybe there should be something. Chris ; . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/743#issuecomment-281780710:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/743#issuecomment-281780710,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. The sdf file has the selenium as part of an aromatic structure (its bonds are aromatic). There is no ambiguity in the SMILES structure; it is understood by Daylight's Depict, MarvinView and OpenBabel, although not Chem Sketch. OpenSMILES is not yet finallized and this issue is contentious. I think it is not appropriate to make changes to OpenBabel's output at the moment but just to note it as a possible bug for the future. I have reduced the priority.; Chris . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/711#issuecomment-281780088:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/711#issuecomment-281780088,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. The second problem is also to do with the parsing of INPUT CARD lines. With the modified version of gamessformat.cpp in 2.1.x I don't have any problem. (Since I couldn't find the complete gam file, I just pasted in the lines below which caused the crashes.) Are you using the updated gamessformat.cpp?. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/652#issuecomment-281779043:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/652#issuecomment-281779043,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615; Originator: NO. These seem to be Kekulize failures.; The first molecule is output correctly to CML when using aromatic bonds (not Kekule). A simplified molecule showing the same behaviour is Cn2ccc(nc2=O) .; The second molecule reports an error in start_kekulize and the bonds are not marked aromatic. Anybody fancy doing some Kekulization?. Chris . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/667#issuecomment-281779285:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/667#issuecomment-281779285,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. This is known bug #1720529 which will be fixed in v2.1.1 to be released soon. By the way, the stereo info in 2.0 had a number of bugs with molecules like this; 2.1.1 should be better. Thanks for the feedback, sorry for the inconvenience. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/658#issuecomment-281779121:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/658#issuecomment-281779121,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615; Originator: NO. This occurred with large output streams. Corrected in revision 1837 for v2.1. . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/580#issuecomment-281777639:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/580#issuecomment-281777639,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. This sounds like bug #1775399, which was not properly resolved. I was never able to reproduce the problem on my Windows system. It seemed that the XML parsing (which is done in libxml2) was going wrong, with an atom id from the atomRefs2 attribute being seen as part of the bond order attribute. If you have the benefit of a consistent failure, perhaps you could see whether there is anything around the building of libxml2 that could be a cause. (I have only ever used a pre-built libxml2 DLL.) . Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/762#issuecomment-281781075:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/762#issuecomment-281781075,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. This works ok for me. If no output file is specified, the output appears in the output window only.; Could you attach the file that didn't work?. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/580#issuecomment-281777631:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/580#issuecomment-281777631,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. Try setting an environment variable BABEL_DATADIR to the directory where OpenBabel was installed, probably, C:\Program Files\OpenBabel-2.2.0 . You can set environment variables in Control Panel/System/Advanced/Environment Variables. Post here again if this doesn't work. . The installer should have set BABEL_DATADIR, and it not doing so has caused other problems too. The installer OpenBabel2.2.0_Windows_Installer2.exe does set it. Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/799#issuecomment-281793531:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/799#issuecomment-281793531,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615; Originator: NO. Warning removed in HEAD code rev 2070. Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/662#issuecomment-281779222:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/662#issuecomment-281779222,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615; Originator: YES. Closed. Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/653#issuecomment-281779058:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/653#issuecomment-281779058,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615; Originator: YES. Corrected in revision 1831. This is the sort of bug that crashes aeroplanes - in release code it would only have an effect on very rare occasions. Well done the Visual Studio debugger!. Chris . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/600#issuecomment-281778028:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/600#issuecomment-281778028,2,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615; Originator: YES. Fixed in SVN v2.1.x. The example file has been replaced by one with two molecule with specified and and one with unspecified chirality. Now seems to work as expected:; CC(O)CC	2-butanol chirality unspecified; C[C@@H](O)(CC)	2-butanol one enantiomer; C[C@H](O)(CC)	2-butanol the other enantiomer. File Added: Butanol2D3mols.sdf. Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/653#issuecomment-281779052:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/653#issuecomment-281779052,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: YES. Input [CH4] crashes on line 2878 because the vector canonical_order, which has a size of 1 is being accessed with an index of 1. That is nbr1->GetIdx() returned 2. This is with the default _canonicalOutput=false, so I guess it is using your new code. It works ok when _canonicalOutput=true. Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/779#issuecomment-281793122:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/779#issuecomment-281793122,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615; Originator: YES. It still fails in the same way for me in revision 1822.; with Visual C++8. Is this another compiler compatibility problem?. Chris. Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/600#issuecomment-281778025:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/600#issuecomment-281778025,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: YES. Neither of your recent mods helped.; I have a fix in revision 2659 which doesn't crash with any molecules for me. A couple of vectors now have 2147483647 pushed when the atom is H, to match the situation with canonical ordering, rather than ending up with a size smaller than the number of atoms. I assume 2147483647 = 2^31-1 is just a big number?. I'll mark as closed. Are your earlier mods to be retained?. Chris . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/779#issuecomment-281793126:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/779#issuecomment-281793126,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: YES. Replaced newlinebuf by code in lineend.h This is a FilteringInputStreambuf based on an article by James Kanze. This allows the tellg and seekg requests to be passed on to the original rdbuf. Fastsearch now seems to work ok. The method would potentially allow a decompression readbuf to be inserted as well. I considered using Boost iostreams, but the seek requirement would mean that a new filter would have to be written. The Boost code is large and complex and I preferred the very much simpler self-written approach.; Marked pending in case any problems are found. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/585#issuecomment-281777717:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/585#issuecomment-281777717,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: YES. To use fastsearch newlinebuf has to work with all normal text input formats. Fastsearch indexes the input file by recording their positions using tellg.; ; The problem is that tellg and seekg aren't working in the new rdbuf. To get them to work seems to need a new virtual seekoff() function writing, which proved more difficult than I thought it would be, and I gave up. Although it seems elegant at first, is a new rdbuf the best way to go? Might it be easier to use a modified getline() etc., and maybe some extra calls to Trim(). This sort of a problem must affect almost all programs with text input. The code compiled on Windows with with Visual Studio 2005 seems to handle all line endings transparently and newlinebuf is now excluded from the builds. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/585#issuecomment-281777716:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/585#issuecomment-281777716,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: YES. [CH4] now works, but [OH][OH] and c1[nH]ccc1 don't. The OO and the non-standard c1nccc1 are ok. Its difficult for you to find a bug if you can't reproduce it. I can, so I'll urgently look into this further because it is a show-stopper. Previous intermittent bugs were the non-terminated char array in atoi and returning references to local variables. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/779#issuecomment-281793125:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/779#issuecomment-281793125,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=125666. DATADIR is certainly one of the installation problems.; AFAICS babelconfig.h is generated by ./configure on Unix; systems. There is no equivalent on Windows systems. However; there may be a bableconfig.h already in the CVS. Therefore; compiling with this will give compilation values based on; (some) arbitrary UNIX values for the environment. Is there is a need for a non-autoconfigured babelconfig.h?; Perhaps editable according to compiler?. It's also not very clear to newcomers what DATADIR should; point to. I assume it is actually normally the source directory. P. Original comment by: @petermr,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774927:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774927,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=125666. Please feel free to commit this through CVS - I think we've; had some compilers flag this as an error but haven't; recommitted. Peter. Original comment by: @petermr,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/433#issuecomment-281774944:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/433#issuecomment-281774944,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1260158; Originator: NO. Sorry - forgot to log in when I submitted this and thought I'd have the chance to amend the details. I should have mentioned that my name is Jens Thomas and email is j.m.h.thomas@dl.ac.uk. Original comment by: jensthomas,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/651#issuecomment-281779033:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/651#issuecomment-281779033,2,"['Log', 'log']","['Logged', 'log']"
Testability,"Logged In: YES ; user_id=1290830. >PDB files without explicit hydrogens are extremely hard to; type ""correctly."". I know, that's why I praised Fabien ;-); But I'm doing my best to only report things that are still; doable without hydrogens (and I think were also done; correctly before some recent changes). >At the very least, the current CVS version (on the; >openbabel-new-framework branch) looks OK to me. I cvs-checkedout this one, but it's still the same. >But it'd help a lot if you were a bit more specific about which; >bonds are assigned ""wrong."". Sorry, I feared that the one who programmed all the; complicated details of kekulize.cpp might take it as an; insult to be told about the location of double bonds in the; standard DNA base-pairs ;-). Anyway, here we go, looking at the attached kekubug.pdb:. Residue 630 is Guanosine. OpenBabel puts a double bond at; C2=N2, but it should instead be flipped over to C2=N3:; http://en.wikipedia.org/wiki/Guanosine_monophosphate. There is this general rule that oxygens bound to aromatic; rings get a double bond if possible (i.e. if it doesn't kill; aromaticity), because the keto form is more stable than the; enol tautomer:; http://www.nationmaster.com/encyclopedia/Keto_enol-tautomerism; (that's already handled well by OpenBabel). I think OpenBabel still needs to consider that nitrogens; bound to aromatic rings get a single bond if possible.; Couldn't find the theoretical justification for this; empirical rule, can anyone help?. Residue 631 is Cytidine, with essentially the same problem; again: The C4=N4 double bond belongs to C4=N3.; http://en.wikipedia.org/wiki/Cytidine. Residue 632 is an unusual one where OpenBabel puts a double; bond at C1*=C5, which is impossible because C1* is clearly; sp3 hybridized and non-planar.; So both the C1*=C5 and N1=C6 double bonds should be single; bonds, with a C6=C5 double bond in the middle. BTW: I don't have an example now, but I saw the kekulizer; generate different results for the same re",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/446#issuecomment-281775220:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/446#issuecomment-281775220,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1290830. I looked again at the code, and it turns out that the second; piece is just an alternative version of the first, exlcuded; from compilation with #ifdef RECURSIVE. So the patch just; reduces code entropy and makes sure that if one day someone; removes the #define RECURSIVE, he doesn't get the bug back. Original comment by: elmarkrieger",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/473#issuecomment-281775696:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/473#issuecomment-281775696,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1290830. Yep, I finally found the bug. The above guess was wrong. In OBAromaticTyper::AssignAromaticFlags, the first pass; ""//mark atoms as potentially aromatic""; does not mark the protonated nitrogen, because the SMARTS; pattern; [#7D3+]			1	1; in data/aromatic.txt does not match. The reason is that the; formal charge has not been set. I don't know enough about; OpenBabel yet to know where this should be done properly,; but the following hack fixes the problem:. >In src/typer.cpp; >replace ; //unset all aromatic flags; for (atom = mol.BeginAtom(i);atom;atom = mol.NextAtom(i)); atom->UnsetAromatic();; >with; for (atom = mol.BeginAtom(i);atom;atom = mol.NextAtom(i)); { //unset aromatic flags; atom->UnsetAromatic();; //set the formal charges (quick hack for nitrogen only); if (atom->IsNitrogen()); atom->SetFormalCharge(atom->BOSum()-3); } . Cheers,; Elmar. Original comment by: elmarkrieger",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/469#issuecomment-281775663:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/469#issuecomment-281775663,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1309655. Geoff,. I loaded your alkane.mol into MDL draw and saved it and it; added CFG=2 to atom 4 (as well as changing the co-ords but; not significantly.) CFG=2 coresponds to a ""@"" sign in SMILES; if the attached hydrogen is written inside the [C@] bracket. On converting into smiles it outputted the same inverted; string as you. (the 2D co-ordinates with wedge bonds overruled the parity; in the smilesformat.cpp deleating all the 2D co-ords with; the CFG=2 gave the correct SMILES output). I am currently working on fixing the chirality in molV3000; and SMILES by integrating some of the smiles only routines; into chiral.cpp as well as getting CML compatible chirality; working. At the moment all the chirality routines are in; smilesformat.cpp and noformats are using the ones in chiral.cpp. The / and \ bonds are being written from the up and down; ones in the mol file, but are not valid smiles strings; unless used next to double bonds. A parser to check the; smiles string for these before output might be worthfile. Original comment by: nickengland",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/474#issuecomment-281775703:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/474#issuecomment-281775703,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1309655. Geoff,. The 2005-08-01 snapshot doesn't exist, but in the latest CVS; version mol2format (and I assume the GetNumberOfElements); seems to work perfectly. (although I had to comment out SWIG; to get it to compile). This is under linux. - Nick. Original comment by: nickengland",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/465#issuecomment-281775605:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/465#issuecomment-281775605,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1309655. The attached smilesformat.cpp has been altered to correctly ; write 0D chirality for dot.disconected SMILES. I think its ; working correctly,. C1-C-C-C-C-C1%11.O%10%11.N[C@@]%10(C)C(=O)O; C1-C-C-C-C-C1%11.O%10%11.N[C@]%10(C(=O)O)C; C1C(CCCC1)O[C@](N)(C)C(=O)O . are all converted into the same molecule (although not ; written in the same way). I haven't tested it a great deal so there might be some ; problems with it. - Nick. Original comment by: nickengland",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777262:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777262,2,"['Log', 'test']","['Logged', 'tested']"
Testability,"Logged In: YES ; user_id=1309655. When I added the chiral code to allow Smiles->MOLv3000 ; conversion I didn't add the code to the WriteSmiles. If you ; convert from the smiles string ""C1-C-C-C-C-C1%11.O%10%11.N; [C@@]%10(C)C(=O)O"" to sdf Molv3000 (-x3) and then from that ; to smiles you get ""C1C(CCCC1)O[C@](N)(C)C(=O)O"" which is ; the correct output. You can use this as a workaround for dot disconected ; structures until I get time to work out how to implement ; the chiral checking properly in the write smiles code. Original comment by: nickengland",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777260:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777260,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1309655; Originator: NO. Interstingly using the workaround:. babel -imol2 test.mol2 -oxyz | babel -ixyz -osmi to force all bonds to be lost and calculated based on the ""join the dots"" yields. C(NC(C(NCP(OC(C(=O)O)Cc1ccccc1)(=O)O)=O)C)(=O)OCc1ccccc1 . which then roundtrips from smiles to smiles without loosing the aromaticity. However passing this smiles tring into mol2 and out again looses the aromaticty of BOTH benzene rings, but they are listed as type C.Ar inside the mol2 file. This leads me to belive that the error must lie inside the mol2 reader. Original comment by: nickengland",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/759#issuecomment-281781022:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/759#issuecomment-281781022,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=1311180. OK, I had UNICODE defined and that messed everything up. Now; it compiles. Sorry for the extra noise caused by me; compiling without the provided project files... Original comment by: bswerts",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/495#issuecomment-281776068:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/495#issuecomment-281776068,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1311180. Thanks for the quick fix, but unfortunately it doesn't; compile. I don't know that much about Windows programming so; I was unable the 'cast' the errors away. I atached a file; with the output from nmake. It would be very weird that it; would compile with VS6 and .NET 2005 but not with .NET 2003. I will try to provide .vcproj files for .NET 2003 when; everything works. Original comment by: bswerts",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/495#issuecomment-281776065:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/495#issuecomment-281776065,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1387#issuecomment-281809684:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1387#issuecomment-281809684,76,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1312539; Originator: NO. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1421#issuecomment-281810119:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1421#issuecomment-281810119,74,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1373872; Originator: NO. I had the same problem on a MacBook with 10.5.3 on it. The 2.2.0b6 binary solved the problem for me. (By the way, the installer said that it was 2.2.0b5 when showing credits...). /Fredrik. Original comment by: @fredrikw",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/744#issuecomment-281780741:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/744#issuecomment-281780741,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1377149; Originator: NO. OpenBabel 2.2.0 is in my PATH variable, but I still get this error unless fragments.txt is in my current working directory. I've found that a solution is to set the BABEL_DATADIR variable. Sam. Original comment by: sea36",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/792#issuecomment-281793427:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/792#issuecomment-281793427,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1384550. Hi I came across this recently, would it be possible to include this in ; openBabel?; http://bioweb.ucr.edu/ChemMine/Documents/README.php; http://bonsai.ims.u-tokyo.ac.jp/~mdehoon/software/cluster/software.htm; ""The open source clustering software available here implement the most ; commonly used clustering methods for gene expression data analysis. The ; clustering methods can be used in several ways. Cluster 3.0 provides a ; Graphical User Interface to access to the clustering routines. It is available for ; Windows, Mac OS X, and Linux/Unix. Python users can access the clustering ; routines by using Pycluster, which is an extension module to Python. People ; that want to make use of the clustering algorithms in their own C, C++, or ; Fortran programs can download the source code of the C Clustering Library."". Original comment by: chris_swa",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1444#issuecomment-281810326:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1444#issuecomment-281810326,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1385787. Actually, your pattern does not search for explicit ; hydrogens - that would be 'CN([H])[H]'. [NH2] should mean ; nitrogen with two hydrogens attached (implicit or explicit). Original comment by: claggner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/492#issuecomment-281776016:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/492#issuecomment-281776016,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1385787. Good idea.; For adding a whole list of values, you might want something ; similar to this: take an SD file and a table file (e.g.tab-; separated txt file). The table file contains compound names ; and the values of the property/ies to add. OpenBabel should ; add the property/ies of the table file to the corresponding ; compounds in the SD file under a given property name(s).; Conversely, you should also be able to extract all property ; data including the structure name (very first line of the ; compound header) from an SD file to a table text file. Original comment by: claggner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1436#issuecomment-281810201:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1436#issuecomment-281810201,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1385787. If my interpretation of MDLI's ""CTFile Formats"" (http://www.; mdli.com/downloads/public/ctfile/ctfile.jsp) is right, then ; there should be $$$$ also after the last compound of an SD ; file. This is also more practicable for splitting/merging ; and therefore widely used. . Original comment by: claggner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/490#issuecomment-281775992:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/490#issuecomment-281775992,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1391954. >below). But it is important to be aware that the DLLs have ; >C++ interfaces and so are only useable when being called ; >from C++ programs which have been compiled with the same . Ouch, yes. I forgot the name mangling issue. >If you manage to get round the bug in building DLLs (or ; >anything else) on MinGW we would be delighted if you could ; >share your build files. The OBabel standalone build is ; >easier if it meets your needs. O.K., I managed to build the static library by running; configure, adding dlhandler_win32.cpp, manually replacing; all references to dlhandler_unix with dlhandler_win32; (including the .loT files and dependencies!), defining; HAVE_CLOCK_T in babelconfig.h and runnig make. It does not emit any error messages but also does not build; a DLL, maybe you can give me a hint where to look why?. Original comment by: @ergo70",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/496#issuecomment-281776095:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/496#issuecomment-281776095,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1391954. Here is the requested backtrace from gdb: gdb.txt. regards,. Ernst-Georg. Original comment by: @ergo70",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/517#issuecomment-281776462:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/517#issuecomment-281776462,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1391954. Hm, it seems that the bond stereo information of the; original Molfile gets lost on the way throug OpenBabel. Without bond stereo, I get the same InChI from the IUPAC; tool and babel.exe. I can't find any documentation about stereo handling during; conversion, so I would consider this either a bug in; OpenBabel or in the documentation. Original comment by: @ergo70",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/510#issuecomment-281776338:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/510#issuecomment-281776338,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1391954. I've tracked it down to ProcessOneStructure() in GetINCHI(); in inchi_dll.c. After ProcessOneStructure() the InChI in output_file->pStr; is already truncated. But from there, I'm out of my league... Original comment by: @ergo70",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/510#issuecomment-281776337:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/510#issuecomment-281776337,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1391954. Thank you. I assume atomtyp.h will also have to be fixed? ; Can I do that myself or better wait for 2.1.0?. Original comment by: @ergo70,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/508#issuecomment-281776310:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/508#issuecomment-281776310,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1391954. Yes, it works for me now. Thank you. Original comment by: @ergo70",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/508#issuecomment-281776313:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/508#issuecomment-281776313,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1391954; Originator: YES. >I think your code has a (common) programming error.; >In ob_hillformula the pointer tmpFormula does not have any memory assigned; >to it. So depending on where it pointed, the function could work, or it. Objection your honor!. man strdup (3):. The strdup() function allocates sufficient memory for a copy of the string str, does the copy, and returns a pointer to it. The pointer may subsequently be used as an argument to the function free(3). My code my have problems but I never release something that frequently crashes and since I call free() on that pointer later, I'm pretty sure it is properly allocated. The PostgreSQL server is remorseless in case of memory violations. ;-). I'm currently suspecting the MinGW compiler 3.4.2 I use to be the reason (which has at least one problem with optimizations switched on), so I would like to have this bug reopened until I can verify this. I'm currently updating to MSYS 5.1.3 with gcc 3.4.5 so it won't take long. But this still not explains why it works with Openbabel 2.0.x and the same compiler... Original comment by: @ergo70",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/678#issuecomment-281779477:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/678#issuecomment-281779477,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1391954; Originator: YES. This was most likely a compiler bug with MinGW gcc 3.4.2. After updating to the current MinGW gcc 3.4.5. and recompiling, everything works fine. And it comes with it's own gettimeofday() also, no need to tinker with the Makefiles anymore. :). Original comment by: @ergo70",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/678#issuecomment-281779482:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/678#issuecomment-281779482,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1391954; Originator: YES. Update: I have removed the call to AddHydrogens() as suggested and now it works. So if there is really a bug, it's most likely in AddHydrogens(). Original comment by: @ergo70",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/678#issuecomment-281779480:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/678#issuecomment-281779480,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1395228. Hope the attached files provide the information you require:. test.mol: Example mol file exported from ISIS Draw. babel1.mol2: test.mol converted -imol -omol2 with babel ; 1.100.2 which is read with bonds by sybyl. babel2.mol2: same file converted with babel 2.0.0 which is ; read but doesn't get bonds. sybyl.mol2: same structure sketched and save in sybyl as a ; reference .mol2 file. Note that this is 3D whereas the ; other files are all 2D. Original comment by: kparkes,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/504#issuecomment-281776219:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/504#issuecomment-281776219,3,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=1444119. Accidentally created twice, deleting second copy. Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/554#issuecomment-281777250:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/554#issuecomment-281777250,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1444119. Here is another case that is probably the same bug. This is; particularly bad because it loses aromaticity on a simple; benzene ring. The SD File is parsed correctly can converted; to a SMILES, but when you re-parse the SMILES that OpenBabel; already produced, you get garbage. See the SD file below; (call it ""foo.sdf""), and use it for this test:. $ babel /tmp/foo.sdf -o smi ; c1(n(c2c(c(o1)=O)cccc2)CC(=O)OCC)=O; 1 molecule converted; [M6:cj] /emi/src/docs/patents $ babel /tmp/foo.sdf -o smi |; babel -i smi -o smi; 1 molecule converted; C1(OC(C2C(N1CC(=O)OCC)CCCC2)=O)=O; 1 molecule converted. ----------------------. OpenBabel05020621282D. 18 19 0 0 0 0 0 0 0 0999 V2000; 1.3509 0.4120 0.0000 C 0 0 0 0 0; 0.6384 -0.0005 0.0000 N 0 0 0 0 0; 1.3509 1.2370 0.0000 O 0 0 0 0 0; 0.6384 1.6537 0.0000 C 0 0 0 0 0; -0.0741 1.2370 0.0000 C 0 0 0 0 0; -0.0783 0.4120 0.0000 C 0 0 0 0 0; 0.6342 -0.8255 0.0000 C 0 0 0 0 0; 2.0634 -0.0005 0.0000 O 0 0 0 0 0; -0.0866 -1.2380 0.0000 C 0 0 0 0 0; 0.6384 2.4787 0.0000 O 0 0 0 0 0; -0.7991 -0.8255 0.0000 O 0 0 0 0 0; -0.7908 1.6495 0.0000 C 0 0 0 0 0; -0.0866 -2.0630 0.0000 O 0 0 0 0 0; -0.7908 -0.0005 0.0000 C 0 0 0 0 0; -0.7991 -2.4755 0.0000 C 0 0 0 0 0; -1.5033 1.2370 0.0000 C 0 0 0 0 0; -1.5033 0.4120 0.0000 C 0 0 0 0 0; -0.8033 -3.3005 0.0000 C 0 0 0 0 0; 2 1 1 0 0 0; 3 1 1 0 0 0; 8 1 2 0 0 0; 6 2 1 0 0 0; 7 2 1 0 0 0; 4 3 1 0 0 0; 5 4 1 0 0 0; 10 4 2 0 0 0; 12 5 2 0 0 0; 6 5 1 0 0 0; 14 6 2 0 0 0; 9 7 1 0 0 0; 11 9 2 0 0 0; 13 9 1 0 0 0; 16 12 1 0 0 0; 15 13 1 0 0 0; 17 14 1 0 0 0; 18 15 1 0 0 0; 17 16 2 0 0 0; M END; $$$$; -------------------. Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/516#issuecomment-281776442:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/516#issuecomment-281776442,3,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=1444119. I tested this bug against openbabel-1.100.2, and it does NOT; exhibit this problem. Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/538#issuecomment-281776850:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/538#issuecomment-281776850,2,"['Log', 'test']","['Logged', 'tested']"
Testability,"Logged In: YES ; user_id=1444119. Perl uses ""lazy"" garbage collection. Very lazy -- normally; objects are left alone unless the pointer (object) is about; to be reused. The example you give won't detect leaks,; because the $obMol object is never deallocated. And; furthermore, $obMol->Clear()) erases atoms and bonds, but; does not deallocate or resize the atom/bond arrays that held; them, so you would *not* expect memory usage to shrink when; you call $obMol->Clear(). The $obMol object and all of its; internal structures, still exist, waiting for the next time; you call $obMol->ReadString(). Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/565#issuecomment-281777439:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/565#issuecomment-281777439,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1444119. This is most likely a combination of two other bugs. . 1. As far as I can tell, any SMARTS with @, @@, or /\; cis/trans markings never matches itself. It's just flat broken. 2. The other major source of errors is bug #1503849, ""SMARTS; ring-closure not parsed correctly."" Since OB *often* writes; out SMILES like C=1CCCCC1, these never match themselves. Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/552#issuecomment-281777232:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/552#issuecomment-281777232,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1444119. This may be related to the SSSR detection in rings.c. It; appears to take exponential time O(K^R) where R is the; number of rings in a group. Fullerenes with 60 rings work,; but past about 72 rings the exponential time seems to be; prohibitive. Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/579#issuecomment-281777615:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/579#issuecomment-281777615,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1444119; Originator: NO. I'm reopening this bug. The problem isn't due to an error in the input -- it is a real bug in canon.cpp. Even if you replace the N with a C, you'll still get two different canonical SMILES. See my earlier comments about why this happens. Craig. Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779168:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779168,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1444119; Originator: NO. The canonical SMILES is incorrect -- I will investigate. However, OpenEye's depiction is wrong, too, as illustrated by these two SMILES. C/C=C(/Br)/C; C/C=C(/Br)\C. OpenEye's depict program draws two molecules, but they can't both be right. The first one is wrong, because it puts the methyl and bromo in the same place. Daylight's SMILES parser correctly rejects the first SMILES. Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/605#issuecomment-281778100:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/605#issuecomment-281778100,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1444119; Originator: NO. This SD File from DrugBank is not valid. It's not a problem with OpenBabel. Last time I downloaded data from DrugBank, I had the same problem: The first line of many of the MOL records is simply missing. In this instance, look at each $$$$ line. Immediately following it, there are only two header lines, followed by the COUNTS line. A proper SD File has three lines. Two lines are illegal, and OpenBabel is correct to reject it. Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/760#issuecomment-281781039:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/760#issuecomment-281781039,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1444119; Originator: NO. This appears to be a bug in the symmetry analysis / canonicalization (canon.cpp). It is exceeding some threshold that causes it loop infinitely, even though it seems to have generated a canonical labeling of the atoms. The following loops forever:; echo 'C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O 11980446' | tools/babel -i smi -o can. But if you remove just one of the repeated units, it finishes almost instantly:. echo 'C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O 11980446' | tools/babel -i smi -o can. My suspicion is that the 32-bit numbers used to represent the graph invarients for each atom isn't enough bits, or it could be that some of the internal ""fields"" in this 32-bit number are being exceeded such that the graph invarient labels for atoms can't be sorted out. This may be a symptom of the warning in the code, canon.cpp::CreateNewClassVector(), which says,. Note that, per Weininger's warning, this assumes the initial class; ID's are less than 100, which is a BAD assumption, e.g. OCC...CCN; would have more than 100 symmetry classes if the chain is more than; 98 carbons long. Should change",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/690#issuecomment-281779692:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/690#issuecomment-281779692,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1444119; Originator: NO. This is a bug in the canonicalizer. The canonicalizer figures out the symmetry groups of the atoms without taking chirality into account, so any time there are two atoms that are identical except for their chirality, you'll get two possible ""canonical"" SMILES. Another instance of this is documented in the code, where a cis/trans configuration is incorrectly analyzed because, without taking chirality into account, it appears to be symmetrical and hence not cis or trans. In this case there is an axis of symmetry through a ring, and the only difference in the two halves of the ring are the two chiral centers themselves. So when the canonical-SMILES tree-generator reaches the ring, it has a choice between going left or right, and both paths appear identical, so it can generate two different canonical SMILES. The canonicalizer needs to add chirality to the atom-invarients *before* it starts analyzing chirality. However, even this is tricky, because sometimes a center can be chiral or achiral depending on the chirality of *other* atoms, leading to a sort of chicken-or-egg problem. Maybe a two-pass symmetry analysis is needed: First without chirality, then add in the chirality as new atom-invarients when a tie between two chiral atoms is discovered, and re-do the symmetry analysis. Craig. Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779164:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779164,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1444119; Originator: YES. Warning to developers: If you did a lot of SDF-to-SMILES translations using earlier versions of Open Babel, the SMILES cis/trans markings will be WRONG in roughly 25% of the molecules that have an E/Z double bond. Note that SMILES-to-SMILES conversion was correct, since the bug was duplicated in the SMILES reader and writer. Only SMILES that originated from some other format (SDF, etc.) will be incorrect. Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/584#issuecomment-281777704:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/584#issuecomment-281777704,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1454689; Originator: NO. See http://openbabel.org/wiki/Radicals_and_SMILES_extensions. The SDF file does not explicitly state that the Si is a radical, and so OpenBabel assumes you just meant the extra Hydrogen to be there implicitly (this assumption has been annoying me all day). Conversion to many other formats, including printing out the SDF again, will not show implicit Hydrogens. The formula, SMILE, molecular weight, etc, do. If you use this SDF file it gets it correct (I have added a line specifying that atom 2 is a radical). OpenBabel06200711312D. 4 3 0 0 0 0 0 0 0 0999 V2000; 0.0000 -0.6667 0.0000 C 0 0 0 0 0; 0.5000 -0.5000 0.0000 Si 0 0 0 0 0; 1.0000 -0.6667 0.0000 C 0 0 0 0 0; 0.5000 -0.0000 0.0000 C 0 0 0 0 0; 1 2 1 0 0 0; 2 3 1 0 0 0; 2 4 1 0 0 0; M RAD 1 2 2; M END; $$$$. The assumption about implicit hydrogens is rather troublesome.; When an atom has not been explicitly marked as a radical center (which cannot be done in many file formats that OpenBabel reads) and yet has is not valence satisfied, I think there are three possible reasons. (1) The Hydrogen was implicit and should be added automatically. (2) The radical center was 'implicit' and the spin multiplicity of the atom should be changed automatically. (3) It was just a mistake and an error should be raised that the molecule is nonsensical. . OpenBabel always seems to go with option (1), which makes sense for some chemical software, especially that aimed at pharmaceuticals. However, reading in g03 log files for example, especially when the molecule has an overall spin multiplicity specified, option (2) is vastly preferable. . Can we give the user the choice when importing, as to which assumptions to make?. Original comment by: rhw27",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/741#issuecomment-281780667:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/741#issuecomment-281780667,2,"['Log', 'log']","['Logged', 'log']"
Testability,Logged In: YES ; user_id=1500648; Originator: NO. Added check for eof() from cin. Resolved in trunk 1730. Original comment by: @milkypostman,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/593#issuecomment-281777905:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/593#issuecomment-281777905,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1500648; Originator: NO. I don't know how you guys are testing, but using both Avogadro and obmm, this ring of three carbons plus hydrogens is giving me a nan result. Not sure what causes this. I'm attaching the test file. ; File Added: threering.gpr. Original comment by: @milkypostman",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/609#issuecomment-281778179:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/609#issuecomment-281778179,3,"['Log', 'test']","['Logged', 'test', 'testing']"
Testability,"Logged In: YES ; user_id=1500648; Originator: YES. Marking as ""Pending"". I believe the fix we have is sufficient and makes sense. Original comment by: @milkypostman",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/612#issuecomment-281778209:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/612#issuecomment-281778209,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1500648; Originator: YES. Ok, so it is obvious from the code; there is a check to see if the molecule has any bonds. ie. if the molecule doesn't have any bonds it doesn't finish (just returns). namely line 1906:. if(NumBonds()==0 && NumAtoms()!=1); {; obErrorLog.ThrowError(__FUNCTION__, ; ""Did not run OpenBabel::AddHydrogens on molecule with no bonds"", obAuditMsg);; return true;; }. Is there any reason this needs to be there?. Original comment by: @milkypostman",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/610#issuecomment-281778186:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/610#issuecomment-281778186,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1500648; Originator: YES. The segfault appears to be caused by SetParent not being called when NewBond is called. The reason i conclude this is the problem is that it appears to work fine and also it's the one difference between NewBond and AddBond. Closing. Original comment by: @milkypostman,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/607#issuecomment-281778126:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/607#issuecomment-281778126,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1500648; Originator: YES. This problem has bigger roots and can be replicated in a number of ways. However, this bit of code also causes a segfault. It _uses_ BeginModify and EndModify to add two atoms and create a bond between the two. OBMol testMolH3;; testMolH3.BeginModify();; OBAtom *testAtom3 = testMolH3.NewAtom();; testAtom3->SetVector(0.5f, 0.5f, 0.5f);; testAtom3->SetAtomicNum(6);; OBAtom *testAtom4 = testMolH3.NewAtom();; testAtom4->SetVector(-0.5f, -0.5f, -0.5f);; testAtom4->SetAtomicNum(6);; OBBond *testBond = testMolH3.NewBond();; testBond->SetBO(1);; testBond->SetBegin(testAtom3);; testBond->SetEnd(testAtom4);; testAtom3->AddBond(testBond);; testAtom4->AddBond(testBond);; testMolH3.EndModify();; testMolH3.AddHydrogens();. However, if we add an EndModify() then AddHydrogens to the single atom then continue it works fine. OBMol testMolH3;; testMolH3.BeginModify();; OBAtom *testAtom3 = testMolH3.NewAtom();; testAtom3->SetVector(0.5f, 0.5f, 0.5f);; testAtom3->SetAtomicNum(6);. testMolH3.EndModify();; testMolH3.AddHydrogens();; testMolH3.BeginModify();. OBAtom *testAtom4 = testMolH3.NewAtom();; testAtom4->SetVector(-0.5f, -0.5f, -0.5f);; testAtom4->SetAtomicNum(6);; OBBond *testBond = testMolH3.NewBond();; testBond->SetBO(1);; testBond->SetBegin(testAtom3);; testBond->SetEnd(testAtom4);; testAtom3->AddBond(testBond);; testAtom4->AddBond(testBond);; testMolH3.EndModify();; testMolH3.AddHydrogens();. It would be useful if someone with experience with CorrectPH could help. I was able to trace part of the but down to where there is a Loop on the Apply function in file phmodel.cpp line 158. Also, if you disable PH correction the first code will still segfault in the mol.cpp file around line 1975 (somewhere in the loop where the adoms are created and conformer information setup). Original comment by: @milkypostman",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/607#issuecomment-281778125:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/607#issuecomment-281778125,13,"['Log', 'test']","['Logged', 'testBond']"
Testability,"Logged In: YES ; user_id=1500648; Originator: YES. Well, the true fix would be to not even bother copying that data when the operator= occurs (like in the loop, test for it and then don't copy that part of it). The other problem i'm afraid of is that this angle data does not get rebuilt when a new atom is added. Original comment by: @milkypostman",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/612#issuecomment-281778206:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/612#issuecomment-281778206,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=1514341; Originator: YES. That hack solved it. Thanks!. ==snippet==; modify openbabel.py to resemble:; import sys; if sys.platform.find(""linux"") != -1:; #import dl; sys.setdlopenflags(sys.getdlopenflags() | 0x100) . Original comment by: theoryno3",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/655#issuecomment-281779081:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/655#issuecomment-281779081,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1514992; Originator: YES. Excellent, thank you! We applied smilesformat.cpp rev 2065 and now all 26 test cases provided pass without complaint. I expanded my testing net to include slightly larger molecules ( <= 30 SMILES characters, 891 chiral molecules tested) and came up with a new set of discrepancies (total of 12). As before I can't be certain in all cases that it's not a discrepancy hard-coded in the MolFile / SMILES columns of the database, but I hand checked a couple that seem to be a problem within OpenBabel. In the first case (attached as OB01_DoubleRing.mol) the SMILES string from the vendor database converted fine, both apparently to canonical SMILES and InChI. The MolFile converted to canonical SMILES ok, but lost the stereochemistry on one of the two chiral centers when converted to InChI. If I read the connection table in the MolFile correctly, the two carbons in question are atom 2 (between the two oxygens, which are atoms 3 and 11) and atom 1 (methyl group); that bond appears to be explicitly specified as ""down"" chirality in the 2-1 bond row ('6'). For reference, the vendor-supplied SMILES string is C[C@@H]1OC[C@]2(CCN(C)C2)O1 while the OpenBabel canonical form is CN1CC[C@]2(CO[C@@H](C)O2)C1. The second problem is with a fused ring (not sure that's the correct terminology), molfile attached as OB02_FusedRing.mol. The molecule techincally has three chiral centers, but two of them may only have one R/L form sterically accessible (?). The molfile specifies chirality for all three. OB export to InChI results in loss of chirality information on all three centers ( InChI=1/C8H15NO/c1-9-6-2-3-7(9)5-8(10)4-6/h6-8,10H,2-5H2,1H3 ). OB export to canonical SMILES losses chirality on the hydroxyl. Working with the vendor supplied SMILES string ( CN1[C@@H]2CC[C@H]1C[C@@H](O)C2 ) as input instead of the molfile results in a chirality flip on the hydroxyl when output as canonical smiles ( O[C@@H]3C[C@H]4CC[C@@H](C3)N4C ), but proper chiralit",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779559:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779559,4,"['Log', 'test']","['Logged', 'test', 'tested', 'testing']"
Testability,Logged In: YES ; user_id=1514992; Originator: YES. File Added: OB01_DoubleRing.mol. Original comment by: listentoreason,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779561:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779561,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1514992; Originator: YES. File Added: OB02_FusedRing.mol. Original comment by: listentoreason,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779564:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779564,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1548691; Originator: YES. Absolutely! You're right, I misunderstood the CHG field in V3000 MOL files.; babel DOES put the partial charges from molpac2007 in, say, a mol2 file. However, I don't get the audit logs... I tried with:. babel ---errorlevel 4 ...; babel ---errorlevel4 ...; babel --errorlevel 4 ... (also tried with errorlevel 5). but none worked, meaning that no ""audit log"" lines were written to the output file, nor to the standard output. No need for the patch concerning the ""segmentation fault"" I can wait for 2.1. Thank you for your help with this problem!. Miguel. Original comment by: molatwork",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778407:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778407,3,"['Log', 'log']","['Logged', 'log', 'logs']"
Testability,"Logged In: YES ; user_id=1548691; Originator: YES. Hi Geoff,. Yes, you're right, I'm using MOPAC2007. Sorry, I should have attached an example input anyway.; I downloaded/compiled the beta version you mention. The good thing is that it does the conversion. The bad ones are:; 1) I get this message:. 23 audit log messages; (the number depends on the output format). 2) It doesn't matter how I run babel I get a ""Segmentation fault"" at the end. Since the conversion is done this is not really a problem, just that it's not very elegant ;-). Another question, but perhaps I should submit a feature request is that I had hoped that partial charges would be imported, at least to MOL format... Is there a way of doing it?. Thank you very much for your help!. Miguel. Original comment by: molatwork",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778404:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778404,2,"['Log', 'log']","['Logged', 'log']"
Testability,"Logged In: YES ; user_id=1557018; Originator: NO. > I'm referring to matrix.cpp,. Oh right, OK. Yes, I agree this could benefit from e.g. multithreading. Just one remark: how sparse are the matrices that you want to run those algorithms on? If they are e.g. adjacency matrices of graphs, then they are probably very sparse, in which case the main optimization to make is to use a sparse matrices library. Original comment by: benoitjacob",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810740:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810740,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1557018; Originator: NO. Probably a bug in the Python bindings. vector3::x() returns a reference, while GetX() returns a value. Another interesting thing would be to check whether the crash occurs in x() or in GetVector(). Original comment by: benoitjacob",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/661#issuecomment-281779193:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/661#issuecomment-281779193,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1557018; Originator: NO. This is for 3x3 fixed-size matrices. So there's nothing to gain from multithreading (the size is too small). It is very important to use fixed-size matrices in order to avoid dynamic memory allocations and unroll loops; most scientific libraries focus on dynamic-size matrices instead. Using dynamic-size matrices would divide the speed by a factor of 10 at least. OpenBabel's matrix code now has pretty extensive unit-tests so I don't think there's much to improve in the area of reliability. As to vectorization, it might indeed improve speed, I don't know (3x3 might be a too small size, and isn't a power of two, so it isn't clear to me that vectorization will help). Just FYI, someone offered to add vectorized codepaths to Eigen. Also keep in mind that currently OpenBabel gains much from the inlining of small math functions. This is only possible with either a builtin math lib (like OpenBabel currently has) or a template lib. I don't think that a binary lib could compete with that, for the kind of small fixed-size matrices that OB is using. Original comment by: benoitjacob",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810737:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810737,3,"['Log', 'test']","['Logged', 'tests']"
Testability,"Logged In: YES ; user_id=1557018; Originator: YES. And what about that other solution, to write OpenBbael::strtof() functions etc... overriding the C library?. Or if the faulty code is not in namespace OpenBabel you can still override the C functions by #defines but of course thta's uglier... Original comment by: benoitjacob",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779362:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779362,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1557018; Originator: YES. As you wish, I admit I don't have the time to implement right now the solution that I just proposed... but I think that setting locale parameters in a _library_ is too dangerous to be considered a viable solution... it's OK as a very temporary solution though. The problems will happen in multithreaded apps doing something else while OpenBabel is parsing a file. Suppose that the app has two threads, one allows to manipulate a molecule, one allows to edit a document (could be a worksheet). When the app quits, it tells both threads to save their data. So the first thread saves the molecule, the second thread saves the document. The first one changes the locale, which affects the second which wants to honor the locale as it is writing a human-readable document. Of course things are even worse if both threads are playing with the locale, e.g. if both are doing OpenBabel I/O... Original comment by: benoitjacob",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779360:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779360,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1557018; Originator: YES. I hadn't considered that it could be the calling app's responsibility to set the locale. Your solution is exactly the workaround that I had committed to KDE but I thought it was only temporary. . Original comment by: benoitjacob,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779351:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779351,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1557018; Originator: YES. Yes, this is definitely a workaround. In fact we do completely agree :). That OpenBabel parses files in a locale-dependent way, is clearly an OpenBabel bug, which needs to be fixed there. The C library (sscanf) apparently always honor the locale. So any code using it must be changed to use the C++ library (ifstream...) and call .imbue() on the stream to tell it to assume LC_NUMERIC=C. A while ago part of this was fixed in OpenBabel but last time I checked many places (probably in file format plugins...) still had to be ported. Original comment by: benoitjacob",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779356:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779356,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1557018; Originator: YES. Yes, this is what we've been doing in Kalzium and Avogadro. This is of course much more dangerous to do in a lib... though indeed if you set the locale back after completion i.e. after only a fraction of a second, it probably won't cause trouble... anyway I suppose that we agree that it's only a temporary workaround!. Here's my suggestion for a quick fix that at least is not dangerous for the application using OpenBabel: implement in OpenBabel namespace functions sscanf() atoi() strtof() etc..... overriding the ones from the C library. Normally all callers from inside OpenBabel namespace will call them insted of the C library functions. So OpenBabel::sscanf() would be implemented using the c++ standard library and imbue() to ensure that it doesn't honor the locale parameters. As for the optimal fix i.e. removing all calls to these C library functions througout OpenBabel there is a lot of work to do !!!. gaston@kiwi:~/cuisine/openbabel/src$ grep -R sscanf . |wc -l; 630; gaston@kiwi:~/cuisine/openbabel/src$ grep -R atoi . |wc -l; 1161; gaston@kiwi:~/cuisine/openbabel/src$ grep -R strtol . |wc -l; 713; gaston@kiwi:~/cuisine/openbabel/src$ grep -R strtoul . |wc -l; 506; gaston@kiwi:~/cuisine/openbabel/src$ grep -R strtof . |wc -l; 502. Original comment by: benoitjacob",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779358:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779358,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1587751. I don't know why this bug report appear duplicated, it's ; the same that the bug report number 1553315, if you are ; administrator please remove this one. Thank you. Original comment by: oligoelemento",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/567#issuecomment-281777463:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/567#issuecomment-281777463,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1595982. The command line to reproduce the bug with the attached data; file (correcting an error in the original post) is:. f=2bo8; cat $f.pdbatm.bz2a? | bunzip2 > $f.pdbatm; head -31077 $f.pdbatm > $f.pdbatm.cut; babel -p -iPDB $f.pdbatm.cut -oPDB $f.pdbh. Original comment by: tadpole_leg,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/568#issuecomment-281777471:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/568#issuecomment-281777471,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1619256; Originator: NO. I just downloaded version 2.2 for testing and this problem seems to be solved there. Gert . Original comment by: @gertthijs,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/785#issuecomment-281793319:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/785#issuecomment-281793319,2,"['Log', 'test']","['Logged', 'testing']"
Testability,"Logged In: YES ; user_id=164544. I can reproduce the component-level grouping problem. Below; are some interesting cases and a stack trace. This problem; seems pretty serious (assuming it's not simply missing; functionality). If it hasn't been implemented yet then it; should be mentioned in the documentation. [philip@darwin]$ obgrep '([#6]).([#6])' methane.smi; C; [philip@darwin]$ obgrep '([#6]).(c)' methane.smi; C; [philip@darwin]$ obgrep '([#6]).(cc)' methane.smi; 0 1; Assert at File mol.cpp Line 689; Segmentation fault. (gdb) set args '([#6]).([#8]c)' methane.smi; (gdb) run; Starting program: /usr/local/bin/obgrep '([#6]).([#8]c)'; methane.smi; 0 1; Assert at File mol.cpp Line 689. Program received signal SIGSEGV, Segmentation fault.; OpenBabel::OBMol::GetAtom (this=0x2b1, idx=1091774220) at; mol.cpp:689; 689 obAssert(false);; (gdb) bt; #0 OpenBabel::OBMol::GetAtom (this=0x2b1, idx=1091774220); at mol.cpp:689; #1 0xb7f7c058 in OpenBabel::OBSSMatch::Match; (this=0xbffff3b0, mlist=@0xbffff628, bidx=0) at stl_vector.h:501; #2 0xb7f7c2dc in OpenBabel::OBSSMatch::Match; (this=0xbffff3b0, mlist=@0xbffff628, bidx=-1) at; parsmart.cpp:2768; #3 0xb7f7a403 in match (mol=@0xbffff450, pat=0x805da88,; mlist=@0xbffff628, single=false) at parsmart.cpp:2262; #4 0xb7f788dd in OpenBabel::OBSmartsPattern::Match; (this=0xbffff610, mol=@0xbffff450, single=false) at; parsmart.cpp:2087; #5 0x08049a7a in main (argc=-1073744816, argv=0xbffff4d8); at obgrep.cpp:137; (gdb) The program is running. Exit anyway? (y or n) y. Original comment by: pgr94",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775152:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775152,3,"['Assert', 'Log']","['Assert', 'Logged']"
Testability,Logged In: YES ; user_id=164544. I was confusing problems caused by the shell interpreting; special characters in the SMARTS string and obgrep's errors.; By using single quotes my shell shouldn't be interpreting; special characters any more. [philip@darwin]$ obgrep '!C' mols; SMARTS Error: !C; ^; [philip@darwin]$ obgrep '[!C]' mols; [20 hits]. Is the former invalid SMARTS or is this an obgrep error?. Philip. Original comment by: pgr94,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/441#issuecomment-281775109:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/441#issuecomment-281775109,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=164544. The segmentation fault has been isolated and is reported in; a separate bug. ; ; http://sourceforge.net/tracker/index.php?func=detail&aid=1119970&group_id=40728&atid=428740. The negation operator wasn't to blame, so marking this bug; as closed. Thanks for the help Geoff et al. . Philip. Original comment by: pgr94",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/441#issuecomment-281775113:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/441#issuecomment-281775113,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1666820; Originator: YES. File Added: JINGAO.txyz. Original comment by: lidaobing,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/685#issuecomment-281779596:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/685#issuecomment-281779596,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1682851; Originator: NO. * Your version isn't the same as SVN (e.g., you still haven't committed test/logp_psa.cpp) Not a big deal. To be sure I used a different check-out than my working copy. So this can't be the problem (will commit test/logp_psa.cpp next time). * We have some subtle floating-point issue between OS X and Linux? Yuck.; * Some unknown force is causing the gradient to explode on my machine. Could you apply the attached patch and post the output? (my output is also attached); File Added: log.patch. Original comment by: @timvdm",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778338:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778338,4,"['Log', 'log', 'test']","['Logged', 'log', 'test']"
Testability,"Logged In: YES ; user_id=1682851; Originator: NO. Both sd and cg correctly minimize 9.gpr here... 9.pdb: ; some bonds are missing when loading this in avogadro, are you using the current SVN version for all files (bond.cpp, ...)?; missing bonds doesn't explain the large bond lengths though. Could you provide some additional information so I can try to reproduce this. (obminimize, sd/cg, ...). Tim. Original comment by: @timvdm",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778328:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778328,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1682851; Originator: NO. File Added: log.txt. Original comment by: @timvdm,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778343:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778343,2,"['Log', 'log']","['Logged', 'log']"
Testability,Logged In: YES ; user_id=1682851; Originator: NO. Fixed in SVN... Original comment by: @timvdm,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/780#issuecomment-281793143:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/780#issuecomment-281793143,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1682851; Originator: NO. GetBeginAtomIdx() wasn't checking if the _bgn pointer was valid before calling _bgn->GetIdx(). The same problem can be found in GetEndAtomIdx() and OBBond::GetNbrAtom(OBAtom *ptr), I'll fix this too and commit. . (If the atoms are not set, 0 will be returned. When we change to atom indexes starting from 0 in OB3.0, we should return the maximum unsigned int value?? ). (I can't close the bug, I don't have admin rights on the trackers...). Original comment by: @timvdm",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/754#issuecomment-281780937:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/754#issuecomment-281780937,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1682851; Originator: NO. I'm working on the pdbfromat and the chain parser to fix this and similar problems. The problem you describe is solved in my local version which I will commit in the near future. I'm also working on unit tests to check residue names, atom ids, ... Original comment by: @timvdm",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/780#issuecomment-281793142:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/780#issuecomment-281793142,2,"['Log', 'test']","['Logged', 'tests']"
Testability,"Logged In: YES ; user_id=1682851; Originator: NO. It doesn't explode here... see attached log file. the size of g1g1 shouldn't be a problem since the vector is later normalized in LineSearch(). LineSearch only accepts steps that lower the energy, so I don't realy see how the explosion can happen. Tim; File Added: log. Original comment by: @timvdm",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778332:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778332,3,"['Log', 'log']","['Logged', 'log']"
Testability,Logged In: YES ; user_id=1682851; Originator: NO. LineSearch seems to return large steps. I don't really see how this could happen since it only steps that lower the energy... Could the x.xf notation cause problems?. Original comment by: @timvdm,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778347:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778347,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1682851; Originator: NO. No segfault here, but when I use the following script I get:; $python bug.py; 180.0; -159.798511251; $cat bug.py; import pybel; import openbabel as ob. mol = pybel.readstring(""smi"", ""CCCC""); mol.make3D(). atoms = [x.OBAtom for x in mol.atoms]. for i in range(3):; assert atoms[i].IsConnected(atoms[i+1]), ""Not connected!!"". print mol.OBMol.GetTorsion(atoms[0], atoms[1], atoms[2], atoms[3]). assert mol.OBMol.GetTorsion(atoms[0], atoms[1], atoms[2], atoms[3])==180.0; mol.OBMol.SetTorsion(atoms[0], atoms[1], atoms[2], atoms[3], 170.0); # Segfault. print mol.OBMol.GetTorsion(atoms[0], atoms[1], atoms[2], atoms[3]). I'll test in C++ too... Original comment by: @timvdm",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/755#issuecomment-281780940:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/755#issuecomment-281780940,4,"['Log', 'assert', 'test']","['Logged', 'assert', 'test']"
Testability,Logged In: YES ; user_id=1682851; Originator: NO. OBBuilder::Swap() can do this now. Original comment by: @timvdm,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1427#issuecomment-281810153:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1427#issuecomment-281810153,2,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1682851; Originator: NO. The attached strip.cpp file gives the following (correct) output with trunk r2614:. nrings = 1; CC(=C)C(=O)OCCN(C)C.C=CN1CCCC1=O	TIM|OVS2573256; CC(=C)C(=O)OCCN(C)C	TIM|OVS2573256; nrings = 0. However, you use OBMol::StripSalts() which is replaced with OBMol::StripSalts(int threshold) in r2559. (OB 2.1.1?); File Added: strip.cpp. Original comment by: @timvdm",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/776#issuecomment-281786114:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/776#issuecomment-281786114,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1682851; Originator: NO. The openbabel/builder.h file is in svn... Did you update to the last version?. Original comment by: @timvdm,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/696#issuecomment-281779819:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/696#issuecomment-281779819,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1682851; Originator: NO. The problem seems to be the triple bond '#'. . For example: C#CCC will be converted to:. OpenBabel09030803193D. 4 3 0 0 0 0 0 0 0 0999 V2000; 1.0000 0.0000 0.0000 C 0 0 0 0 0; 2.5000 0.0000 0.0000 C 0 0 0 0 0; 4.0000 0.0000 0.0000 C 0 0 0 0 0; -1.#IND -1.#IND -1.#IND C 0 0 0 0 0; 1 2 3 0 0 0; 2 3 1 0 0 0; 3 4 1 0 0 0; M END; $$$$. The first three atoms are linear (only x coordinate) and I think OBBuilder tries to find a torsion angle for the 4th atom and fails. I'll have a closer look at this... . Original comment by: @timvdm,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793437:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793437,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1682851; Originator: NO. The second call to Setup(mols[1].OBMol) returns false. This is because the 7th atom doesn't get a type. This atom is the nitrogen in R-N(=O)=O, changing this to R-N(=O)O solves the problem. Original comment by: @timvdm",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/809#issuecomment-281793691:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/809#issuecomment-281793691,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1682851; Originator: NO. There was a line missing in psa.txt (;heavy). This is now fixed in SVN. Original comment by: @timvdm,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/623#issuecomment-281778417:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/623#issuecomment-281778417,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1682851; Originator: NO. This bug is fixed (this was part of the win32 avogadro build):. 	* src/mol.cpp: OBMol::FindChildren was iterating over an atom's bonds; 	in a wrong way. . Original comment by: @timvdm,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/751#issuecomment-281780868:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/751#issuecomment-281780868,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1682851; Originator: NO. atomrecord.cpp now keeps the original chain identifier from the PDB file. For 1XAJ there are now three chains: 'A', 'B' and ' '. Original comment by: @timvdm",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/666#issuecomment-281779284:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/666#issuecomment-281779284,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1682851; Originator: NO. fixed in svn. Original comment by: @timvdm,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/668#issuecomment-281779311:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/668#issuecomment-281779311,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1682851; Originator: NO. make3D was calling localopt(), this called OBForceField::Setup. Setup() called SetupCalculations(), here an iteration over the torsion caused a segfault. This only happens in python, c++ programs using Setup don't have this behavior. If I use cout to print the indexes for the atoms, the index of the first atom is a very large number when printed unsigned and -1 when cast to signed int. Is there any chance that pybel sets the index for the first atom to 0? (OBTorsionIter decrements all indexes by 1). By deleting the TorsionData in the mol before using FOR_TORSIONS_OF_MOL, it works fine now. . Original comment by: @timvdm",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/755#issuecomment-281780944:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/755#issuecomment-281780944,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1682851; Originator: NO. problem 1 is fixed in current SVN trunk. See commit message for details. Original comment by: @timvdm,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/709#issuecomment-281780059:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/709#issuecomment-281780059,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1682851; Originator: YES. A bt located the problem (forgot the t... before :( ). DeleteResidue was not correctly updating the indices. bool OBMol::DeleteResidue(OBResidue *residue); {; unsigned short idx = residue->GetIdx();; _residue.erase(_residue.begin() + idx);. for ( unsigned short i = idx ; i < _residue.size() ; i++ ); _residue[i]->SetIdx(i);; //_residue[i]->SetIdx(i-1); // this would renumber starting from -1 (or a very large number to be correct, as this is unsigned). DestroyResidue(residue);. return(true);; }. Original comment by: @timvdm",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/725#issuecomment-281780350:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/725#issuecomment-281780350,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1682851; Originator: YES. ignore this please.. (can I delete this?). Original comment by: @timvdm,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/613#issuecomment-281778221:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/613#issuecomment-281778221,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=169818. Easy and good might be a difference to general and usefull ; for prototyping. Assign it to me, I have already some code ; for that I must 'only' transform to C++. @ARTICLE{bk73,; author = {C. Bron and J. Kerbosch},; title = {{F}inding all cliques of an undirected graph},; journal = {Communications of the ACM},; year = {1973},; volume = {16},; pages = {575--577},; owner = {wegner@users.sf.net},; groupsearch = {0},; url = {http://www.netlib.org/tomspdf/457.pdf},; }. @MISC{aj88,; author = {D. Applegate and D. S. Johnson},; title = {dfmax.c [{C} program, {O}nline], available at ; ftp://dimacs.rutgers.edu/pub/challenge/graph/solvers},; year = {1988},; owner = {wegner@users.sf.net},; url = ; {ftp://dimacs.rutgers.edu/pub/challenge/graph/solvers/dfmax.; c},; }. Original comment by: wegner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1404#issuecomment-281810027:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1404#issuecomment-281810027,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=169818. First, we need some basic graph algorithms like DFS (depth; first search) and BFS (breadth first search).; I think OpenBabel needs a redesign, but anyway we can work; on the actual atom, bond representation. An underlying graph; based node and edge representation would be just nicer;-). Original comment by: wegner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1421#issuecomment-281810115:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1421#issuecomment-281810115,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=169818. I like the Rarey et al. algorithm. @ARTICLE{fgr04,; author = {P. C. Fricker and M. Gastreich and M. Rarey},; title = {{A}utomated {D}rawing of {S}tructural {M}; olecular {F}ormulas under; 	{C}onstraints},; journal = {J. Chem. Inf. Comput. Sci.},; year = {2004},; volume = {44},; pages = {1065--1078},; abstract = {In this paper, we present a new algorithm for ; automated drawing of; 	2D structural formulas of molecules. The algorithm ; is based on the; 	classical scheme of a drawing queue placing the ; molecular fragments; 	in a sequential way. We extend the concept of so-; called prefabricated; 	units developed for complex ring systems to ; automatically created; 	drawing units for chains and rings which will then ; be assembled; 	in a sequential fashion. The approach is fast and ; can be naturally; 	extended to the problem of drawing molecules with ; common core structures.; 	Further on, we present an algorithm that allows the ; drawing of 2D; 	structural formulas under directional constraints ; assigned to a; 	subset of bonds. Since no numerical optimization is ; necessary, the; 	algorithm creates drawings of small organic ; molecules on the order; 	of 500 structures per second. The new algorithm is ; relevant for; 	all kinds of prediction and analysis software ; presenting a large; 	number of probably similar molecular structures to ; the user of the; 	software.},; doi = {10.1021/ci049958u},; owner = {wegner@users.sf.net},; }. Original comment by: wegner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809765:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809765,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=169818. The easiest way to deal with that is to use the Morgan ; algorithm to create a 'unique' renumbering of molecules. If ; this is done, the SMILES code can be generated with respect ; to this newly renumbered molecule. @ARTICLE{mor65,; author = {H. L. Morgan},; title = {{T}he {G}eneration of a {U}nique {M}achine {D}; escription for {C}hemical; 	{S}tructures -- {A} {T}echnique {D}eveloped at {C}; hemical {A}bstracts; 	{S}ervice.},; journal = {J. Chem. Doc.},; year = {1965},; volume = {5},; pages = {107--113},; }; . Original comment by: wegner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1421#issuecomment-281810114:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1421#issuecomment-281810114,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=169818. We need basic graph algorithms, e.g. using the Boost Graph; library; http://www.boost.org/; http://www.boost.org/libs/graph/doc/table_of_contents.html. Original comment by: wegner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1421#issuecomment-281810116:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1421#issuecomment-281810116,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=169818. You can convert the TPSA calculation to OpenBabel:; http://www-ra.informatik.uni-tuebingen.de/software/joelib/api2/joelib2/algo/contribution/package-summary.html; http://www-ra.informatik.uni-tuebingen.de/software/joelib/api2/joelib2/data/GroupContributionHolder.html. It is based on SMARTS and because OpenBabel uses the same; expert systems, the prediction should have the same quality. Kind regards, Joerg. Original comment by: wegner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1410#issuecomment-281810054:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1410#issuecomment-281810054,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=169818. ftp://dimacs.rutgers.edu/pub/challenge/graph/solvers/; http://portal.acm.org/citation.cfm?id=362367&coll=Portal&dl=GUIDE&CFID=69760523&CFTOKEN=72640023. Original comment by: wegner,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1404#issuecomment-281810028:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1404#issuecomment-281810028,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=169818; Originator: NO. Thanks for the clustering links and I am more in favor of creating an appropriate output format based on fingerprints and/or molecular features. ; A comma or space delimited format should work, e.g. by extending obprop? Does anyone know the best input format for this cluster package?. Joerg. Original comment by: wegner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1444#issuecomment-281810327:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1444#issuecomment-281810327,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=169818; Originator: NO. Ups, I just did the same.; Geoff, do we need the ; if ( inchiString.length() == 0 ); statement ?. Otherwise you can just revert to the version you have fixed. Joerg. Original comment by: wegner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/630#issuecomment-281778588:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/630#issuecomment-281778588,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1699627; Originator: YES. Great...thanks. Apparently, I didn't have the atomtyp.txt file before, but with the file it seems to fix at least one of the test examples...I will try more and get back to you. In the meantime, I have come across a similar problem with silicon:; InChI=1/Si2/c1-2; SMILES=[SiH3-]#[SiH3+]. Original comment by: gmagoon",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/813#issuecomment-281793757:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/813#issuecomment-281793757,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=1700677; Originator: NO. I'm just including this comment since I was the originator but was not logged in at the time of the submission. My username is: dbower01. The parameters for the IUPAC InChI code I used is as follows (which happen to be the out-of-box defaults):. Options: Mobile H Perception ON; Isotopic ON, Absolute Stereo ON; Omit undefined/unknown stereogenic centers and bonds. I'm going to spend some time reading through the OpenBabel docs to see if I can find any differences or clues as to what may be causing this/these differences. Dave. Original comment by: dbower01",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/595#issuecomment-281777933:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/595#issuecomment-281777933,2,"['Log', 'log']","['Logged', 'logged']"
Testability,Logged In: YES ; user_id=1795260; Originator: NO. Just registered at sourceforge. Let me know if you need more info. . Ivo . Original comment by: isitech,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/643#issuecomment-281778917:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/643#issuecomment-281778917,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1818755; Originator: YES. There is another problem reading GAMESS-files.; Take this one (from: www.cscs.ch/molekel - see the data-folder:GAMESS_TS-ifolow.log):. INPUT CARD> $CONTRL SCFTYP=RHF MPLEVL=0 RUNTYP=SADPOINT EXETYP=RUN ECP=READ ; INPUT CARD> ICHARG=3 MULT=1 COORD=UNIQUE UNITS=ANGS MAXIT=200 molplt=.t. $END ; INPUT CARD> $SCF dirscf=.f. extrap=.t. damp=.t. shift=.t. dem=.t. rstrct=.t. ; INPUT CARD> diis=.t. soscf=.f. $END ; INPUT CARD> $SYSTEM TIMLIM=700 MEMORY=100000000 $END ; INPUT CARD> $STATPT nstep=60 opttol=1.e-4 dxmax=0.1 hess=read purify=.t. ; INPUT CARD> ifolow=1 npun=1 $END ; INPUT CARD> $ECP . crashes the WINDOWS-Version. If modified to:; INPUT CARD> $CONTRL SCFTYP=RHF MPLEVL=0 RUNTYP=SADPOINT EXETYP=RUN ECP=READ $END ; INPUT CARD> $ICHARG=3 MULT=1 COORD=UNIQUE UNITS=ANGS MAXIT=200 molplt=.t. $END ; INPUT CARD> $SCF dirscf=.f. extrap=.t. damp=.t. shift=.t. dem=.t. rstrct=.t. diis=.t. soscf=.f. $END ; INPUT CARD> $SYSTEM TIMLIM=700 MEMORY=100000000 $END ; INPUT CARD> $STATPT nstep=60 opttol=1.e-4 dxmax=0.1 hess=read purify=.t. ifolow=1 npun=1 $END ; INPUT CARD> $ECP . OpenBabel works fine. . Original comment by: yodah134,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/652#issuecomment-281779041:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/652#issuecomment-281779041,2,"['Log', 'log']","['Logged', 'log']"
Testability,"Logged In: YES ; user_id=1826769; Originator: YES. Chris,. Excellent! The compilation of the customized version worked like a charm. Conversion is perfect for my needs. Thanks a lot,. Reiner. Original comment by: reinerdieden",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/663#issuecomment-281779230:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/663#issuecomment-281779230,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1826769; Originator: YES. From the last message, I gather that I should have reacted to the previous one...; Maybe checked wether it works in the announced revision ? My problem is : how to get at it ?. Original comment by: reinerdieden",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/663#issuecomment-281779228:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/663#issuecomment-281779228,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1871725; Originator: NO. ""SMI"" format now has stereochemistry! Thank you.; The ""in"" and ""out"" of screen directions still look reversed to me, but that could be just ; my perception problem. Original comment by: igor_filippov",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779026:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779026,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1871725; Originator: NO. I tried it with the svn snapshot today, however I get segfault when running OSRA; compiled with this version of openbabel. This is the backtrace:; Program received signal SIGSEGV, Segmentation fault.; [Switching to Thread -1208826112 (LWP 24112)]; 0x008b5740 in freelocale () from /lib/libc.so.6; Missing separate debuginfos, use: debuginfo-install ImageMagick.i386 bzip2.i386 expat.i386 fontconfig.i386 freetype.i386 gcc.i386 glibc.i386 lcms.i386 libICE.i386 libSM.i386 libX11.i386 libXau.i386 libXdmcp.i386 libXext.i386 libXt.i386 libjpeg.i386 libtiff.i386 libxcb.i386 libxml2.i386 netpbm.i386 zlib.i386; (gdb) bt; #0 0x008b5740 in freelocale () from /lib/libc.so.6; #1 0x004f98d8 in OpenBabel::OBGlobalDataBase::Init (this=0x645a40); at data.cpp:928; #2 0x004faa88 in OpenBabel::OBTypeTable::GetFromType (this=0x645a40); at data.cpp:607; #3 0x004db7e5 in OpenBabel::OBAtom::GetType (this=0x8fb2a18) at atom.cpp:463; #4 0x004dba13 in OpenBabel::OBAtom::operator= (this=0x8fb2aa0, src=@0x8fb2a18); at atom.cpp:159; #5 0x00537ec4 in OpenBabel::OBMol::AddAtom (this=0xbfb63260, atom=@0x8fb2a18); at mol.cpp:1560; #6 0x080ae2d1 in get_smiles (atom=0xbfbe262c, real_atoms=28, bond=0xbfc7ea2c, ; n_bond=354, rotors=@0xbfb63420, confidence=@0xbfb633e8, ; num_fragments=@0xbfb63418, r56=@0xbfb63410, avg=45.187128051905447); at osra_openbabel.cpp:577; #7 0x0805d858 in resolve_bridge_bonds (atom=0xbfbe262c, n_atom=690, ; bond=0xbfc7ea2c, n_bond=354, thickness=4, real_atoms=@0xbfcb9fbc, ; avg=45.187128051905447) at osra.cpp:2568; #8 0x080626b1 in main (argc=2, argv=0xbfcba1e4) at osra.cpp:4082. Original comment by: igor_filippov",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779022:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779022,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1871725; Originator: NO. Oops, I meant 2.1.1 not 2.2 (as in - ""release after 2.1) !. Original comment by: igor_filippov",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779020:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779020,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1871725; Originator: NO. SMI format does not have it even in 2.2 release.; CAN format has it but the normalization procedure often makes it difficult to compare the resulting SMILES with the structure one wanted to generate - e.g. the directions ""in"" and ""out"" of the screen are often reversed etc. For complicated structures it is sometimes very non-trivial to check if the stereochemistry; has been correctly assigned.; The best option (for me) would be to have regular SMILES (not normalized to canonical format) reflect the stereoinformation conveyed by the OB_HASH_BOND and OB_WEDGE_BOND flags. Original comment by: igor_filippov",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779016:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779016,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1871725; Originator: YES. I was able to compile a functioning executable babel.exe under cygwin.; Here are the sequence of steps for 2.1.1:; tar -xzf openbabel-2.1.1.tar.gz; cd openbabel-2.1.1; ./configure; cd src/formats/inchi; make; cd ../../../tools; edit the Makefile to add the following lines ; (output of diff Makefile Makefile.orig):; ############# begin output ########################; 15c15; < formats_objects := $(wildcard ../src/formats/*.o) ../src/formats/inchi/.libs/libinchi.a; ---; > ; 52c52; < babel_DEPENDENCIES = ../src/libopenbabel.la $(formats_objects); ---; > babel_DEPENDENCIES = ../src/libopenbabel.la; 223c223; < babel_LDADD = ../src/libopenbabel.la $(formats_objects); ---; > babel_LDADD = ../src/libopenbabel.la ; ####################### end output ##############; (you will have to repeat the editing for the rest of the executables; if you need more than babel.exe); cd ..; make; make install. Original comment by: igor_filippov,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/710#issuecomment-281780069:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/710#issuecomment-281780069,2,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1875145; Originator: YES. I did not find a menu in my OpenBabel windows GUI. maybe my version is too old. the DOS prompt tells me it's ""Open Babel 2.0.0 -- Dec 1 2005 -- 13:55:06"". I don't know the versions I had at my summer project. I could not upload the file because it is bigger than the maximum allowed: the file can be found at http://www.rcsb.org/pdb/files/1g50.pdb; residues to look at are for example: Arg335 - both terminal nitrogens should be protonated (the residue is charged +); and His356 - only one ring nitrogen is protonated (the residue is neutral). Thanks. Felix. Original comment by: felix_p",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/670#issuecomment-281779326:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/670#issuecomment-281779326,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1900870; Originator: YES. Checked in src/bitvec.cpp and include/openbabel/bitvec.h; They compile and run on Linux gcc v4.1.2, Windows VC8 sp1, and Macintosh; gcc v4.0.1 with no warnings or errors (-Wall / -W4 -analyze ).; Conversion of several diverse test molecules produce identical results before ; and after the changes, (but take less time).; Fully doxygen documented.; svn revision 2159. Original comment by: kshepherd1",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1491#issuecomment-281810807:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1491#issuecomment-281810807,2,"['Log', 'test']","['Logged', 'test']"
Testability,Logged In: YES ; user_id=1918617; Originator: YES. 'odbccp32.libi' was a typo in CoreWin.vsprops; - probably a result of fat fingering with vim.; I will svn up and run through again. Original comment by: peterennis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781147:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781147,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1918617; Originator: YES. Build from FastSearch. LINK : fatal error LNK1181: cannot open input file 'obcommon.lib'. Another dependency?. Result:. ------ Build started: Project: OBDLL, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; pointgroup.cpp; ..\..\src\pointgroup.cpp(1087) : warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; phmodel.cpp; patty.cpp; parsmart.cpp; obutil.cpp; obiter.cpp; molchrg.cpp; mol.cpp; kekulize.cpp; griddata.cpp; grid.cpp; generic.cpp; data.cpp; chiral.cpp; chains.cpp; canon.cpp; ..\..\src\canon.cpp(188) : warning C4305: '+=' : truncation from 'double' to 'float'; builder.cpp; bondtyper.cpp; bond.cpp; atom.cpp; Generating Code...; Compiling...; alias.cpp; Generating Code...; Compiling...; typer.cpp; transform.cpp; rotor.cpp; rotamer.cpp; ring.cpp; Generating Code...; Linking...; Creating library ../OBDLL.lib and object ../OBDLL.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDLL\Release\BuildLog.htm""; OBDLL - 0 error(s), 2 warning(s); ------ Build started: Project: OBFPRT, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; forcefielduff.cpp; forcefieldmmff94.cpp; forcefieldghemical.cpp; forcefield.cpp; ..\..\src\forcefield.cpp(1828) : warning C4244: 'argument' : conversion from 'time_t' to 'unsigned int', possible loss of data; finger3.cpp; finger2.cpp; Generating Code...; Linking...; Creating library ../OBFPRT.lib and object ../OBFPRT.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFPRT\Release\BuildLog.htm""; OBFPRT - 0 error(s), 1 warning(s); ------ Build started: Project: FastSearch, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; fingerprint",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781148:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781148,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1918617; Originator: YES. Correct about compiling on VS2008; ref: bug 1985163 and others. I have a long term goal related to; building Avogadro, crystallography,; simulation and modelling (not just; chemistry). Real life work forces me to use MS; stuff 90% of the time and I have; lots of input (too much sometimes); on their long term roadmap.; VS2005 is not it. So this is more of ""breaking new ground"",; ""pushing the envelope"", ""challenging; the bleeding edge""... I have read most of the docs, wiki,; and other instructions but it all; seems somewhat hit and miss at; the moment. chrismorl mentioned some problems; in building with debug mode, so I; tried release and debug. I will read up on the devel mailing; list. I would like to build in Windows without having; to use the IDE but still compare results with; command line equivalents. Pointers; appreciated. Still researching... Original comment by: peterennis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/777#issuecomment-281786146:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/777#issuecomment-281786146,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1918617; Originator: YES. Error	1	fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such file or directory	c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel\reaction.h	26	OBMoreFormats; Error	23	error BK1506 : cannot open file '.\Debug\ArrayList.sbr': No such file or directory	BSCMAKE	OBMoreFormats. Results:; ------ Build started: Project: OBMoreFormats, Configuration: Debug Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; acrformat.cpp; adfformat.cpp; alchemyformat.cpp; amberformat.cpp; balstformat.cpp; bgfformat.cpp; boxformat.cpp; cacaoformat.cpp; cacheformat.cpp; carformat.cpp; cccformat.cpp; chem3dformat.cpp; chemdrawcdx.cpp; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such file or directory; chemdrawct.cpp; chemtoolformat.cpp; cifformat.cpp; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\xtree(161) : warning C4503: 'std::_Tree<_Traits>::_Key' : decorated name length exceeded, name was truncated; with; [; _Traits=std::_Tmap_traits<std::set<OpenBabel::ci_string>,std::map<OpenBabel::ci_string,std::vector<std::string>>,std::less<std::set<OpenBabel::ci_string>>,std::allocator<std::pair<const std::set<OpenBabel::ci_string>,std::map<OpenBabel::ci_string,std::vector<std::string>>>>,false>; ]; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\map(78) : see reference to class template instantiation 'std::_Tree<_Traits>' being compiled; with; [; _Traits=std::_Tmap_traits<std::set<OpenBabel::ci_string>,std::map<OpenBabel::ci_string,std::vector<std::string>>,std::less<std::set<OpenBabel::ci_string>>,std::allocator<std::pair<const std::set<OpenBabel::ci_string>,std::map<OpenBabel::ci_string,std::vector<std::string>>>>,false>; ]; ..\..\src\formats\cifformat.cpp(176) : see reference to class template instantiation 'std::map<_Kty,_Ty>' being compiled; with; [; _Kty=std::set",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781162:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781162,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1918617; Originator: YES. Errors Remaining:. OBMoreFormats:; ../../include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such . OBXMLFormats:; ../../include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such . Results for All OB Components: . FastSearch:. ------ Build started: Project: OBCommonFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; smilesformat.cpp; pdbformat.cpp; opendxformat.cpp; obmolecformat.cpp; mol2format.cpp; mdlformat.cpp; atomrecord.cpp; APIInterface.cpp; Generating Code...; Linking...; Creating library ../obcommon.lib and object ../obcommon.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCommonFormats\Release\BuildLog.htm""; OBCommonFormats - 0 error(s), 0 warning(s); ------ Build started: Project: FastSearch, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFS\Release\BuildLog.htm""; FastSearch - 0 error(s), 0 warning(s); ========== Build: 2 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. gen3D:. ------ Build started: Project: OBDESC, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; smartsdescriptors.cpp; optransform.cpp; groupcontrib.cpp; filters.cpp; cmpdfilter.cpp; Generating Code...; Linking...; Creating library ../OBDESC.lib and object ../OBDESC.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDESC\Release\BuildLog.htm""; OBDESC - 0 error(s), 0 warning(s); ------ Build started: Project: gen3D, Configuration: Release Win32 ------; Copying compiler-specific bab",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,2,"['Log', 'log']","['Logged', 'log']"
Testability,Logged In: YES ; user_id=1918617; Originator: YES. File Added: atom.h_08 Jun. 09 22.07.gif. Original comment by: peterennis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/772#issuecomment-281781272:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/772#issuecomment-281781272,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1918617; Originator: YES. I googled for ""odbccp32.libi"" and got back ZERO results.; Extremely suspicious!; My guess is that it is actually looking for; 'odbccp32.lib' and something causes an extra 'i'; to get added.; I will check tonight that CoreWin.vsprops does not; have anything strange. Original comment by: peterennis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781145:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781145,2,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1918617; Originator: YES. Looks like that squashed it. I will continue and try to build; all the other parts. Results:. ------ Build started: Project: OBCommonFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; smilesformat.cpp; pdbformat.cpp; opendxformat.cpp; obmolecformat.cpp; mol2format.cpp; mdlformat.cpp; atomrecord.cpp; APIInterface.cpp; Generating Code...; Linking...; Creating library ../obcommon.lib and object ../obcommon.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCommonFormats\Release\BuildLog.htm""; OBCommonFormats - 0 error(s), 0 warning(s); ------ Build started: Project: FastSearch, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFS\Release\BuildLog.htm""; FastSearch - 0 error(s), 0 warning(s); ========== Build: 2 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. Original comment by: peterennis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781150:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781150,3,"['Log', 'log']","['Logged', 'log']"
Testability,Logged In: YES ; user_id=1918617; Originator: YES. OpenBabelOBF revision 2585 Build.txt; File Added: OpenBabelOBF revision 2585 Build.txt. Original comment by: peterennis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/777#issuecomment-281786135:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/777#issuecomment-281786135,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1918617; Originator: YES. OpenBabelOBF revision 2607.txt attached. looks the same as previous tested revision. ...time to install gnuwin32... File Added: OpenBabelOBF revision 2607.txt. Original comment by: peterennis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786176:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786176,2,"['Log', 'test']","['Logged', 'tested']"
Testability,"Logged In: YES ; user_id=1918617; Originator: YES. building OBCommonFormats debug mode; 16 errors; error LNK2001: unresolved external symbol. results:. ------ Build started: Project: OBCommonFormats, Configuration: Debug Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; atomrecord.cpp; mdlformat.cpp; obmolecformat.cpp; opendxformat.cpp; smilesformat.cpp; Generating Code...; Compiling...; APIInterface.cpp; mol2format.cpp; pdbformat.cpp; Generating Code...; Linking...; Creating library ..\Debug/obcommonD.lib and object ..\Debug/obcommonD.exp; pdbformat.obj : error LNK2001: unresolved external symbol ""__declspec(dllimport) public: char const * __thiscall OpenBabel::OBMol::GetTitle(bool)const "" (__imp_?GetTitle@OBMol@OpenBabel@@QBEPBD_N@Z); smilesformat.obj : error LNK2001: unresolved external symbol ""__declspec(dllimport) public: char const * __thiscall OpenBabel::OBMol::GetTitle(bool)const "" (__imp_?GetTitle@OBMol@OpenBabel@@QBEPBD_N@Z); mdlformat.obj : error LNK2019: unresolved external symbol ""__declspec(dllimport) public: char const * __thiscall OpenBabel::OBMol::GetTitle(bool)const "" (__imp_?GetTitle@OBMol@OpenBabel@@QBEPBD_N@Z) referenced in function ""public: virtual bool __thiscall OpenBabel::MDLFormat::ReadMolecule(class OpenBabel::OBBase *,class OpenBabel::OBConversion *)"" (?ReadMolecule@MDLFormat@OpenBabel@@UAE_NPAVOBBase@2@PAVOBConversion@2@@Z); mol2format.obj : error LNK2001: unresolved external symbol ""__declspec(dllimport) public: char const * __thiscall OpenBabel::OBMol::GetTitle(bool)const "" (__imp_?GetTitle@OBMol@OpenBabel@@QBEPBD_N@Z); obmolecformat.obj : error LNK2001: unresolved external symbol ""__declspec(dllimport) public: char const * __thiscall OpenBabel::OBMol::GetTitle(bool)const "" (__imp_?GetTitle@OBMol@OpenBabel@@QBEPBD_N@Z); opendxformat.obj : error LNK2001: unresolved external symbol ""__declspec(dllimport) public: char const * __thiscall OpenBabel::OBMol::GetTitle(bool)const "" (__imp_?Ge",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/773#issuecomment-281786054:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/773#issuecomment-281786054,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1918617; Originator: YES. building OBMoreFormats in release mode gets rid of; Error	23	error BK1506 : cannot open file '.\Debug\ArrayList.sbr': . Original comment by: peterennis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781163:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781163,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1918617; Originator: YES. bump!. Original comment by: peterennis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781159:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781159,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1918617; Originator: YES. consider this the master bug; latest report from #1994744 shows some; promise and I will test with the latest svn. Original comment by: peterennis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781171:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781171,2,"['Log', 'test']","['Logged', 'test']"
Testability,Logged In: YES ; user_id=1918617; Originator: YES. did a search for all files with shared; in the name. results attached in shared.txt; File Added: shared.txt. Original comment by: peterennis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786180:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786180,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1918617; Originator: YES. did svn update. Build FastSearch. Result:. LINK : fatal error LNK1104: cannot open file 'odbccp32.libi'. log below:. ------ Build started: Project: OBError, Configuration: Debug Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Linking...; LINK : fatal error LNK1104: cannot open file 'odbccp32.libi'; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBError\Debug\BuildLog.htm""; OBError - 1 error(s), 0 warning(s); ------ Build started: Project: OBDLL, Configuration: Debug Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; atom.cpp; ..\..\src\atom.cpp(1111) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1111) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1111) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1168) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1168) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1168) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1213) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1213) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1213) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1241) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1241) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1241) : error C3861: '_finite': identifier not found; mol.cpp; ..\..\src\mol.cpp(1908) : error C3861: '_finite': identifier not found; ..\..\src\mol.cpp(1908) : error C3861: '_finite': identifier not found; ..\..\src\mol.cpp(1908) : error C3861: '_finite': identifier not found; residue.cpp; ring.cpp; rotamer.cpp; rotor.cpp; transform.cpp; typer.cpp; Generating Code...; Creating browse information file...; Microsoft Browse Information Maintenance Utility Version 9.00.2",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781138:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781138,3,"['Log', 'log']","['Logged', 'log']"
Testability,"Logged In: YES ; user_id=1918617; Originator: YES. doing some more tracing,; show include files and; boost/detail/workaround.hpp; is where it starts to go wrong. this file contains info related to; fixes for various compilers. the latest boost provides support; for VC9 (VS2008) but it seems; that it is not configured or; called in the application. (makes sense as the recommended; version is VS2005). hopefully someone with more knowledge; will be able to grok this file; and get it sorted. Original comment by: peterennis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786160:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786160,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1918617; Originator: YES. googled the error:. http://forums.microsoft.com/MSDN/ShowPost.aspx?PostID=367165&SiteID=1; http://www.freeorion.org/forum/viewtopic.php?f=9&t=47&p=28432; http://www.hmailserver.com/forum/viewtopic.php?f=10&t=2765&start=0&st=0&sk=t&sd=a; http://www.linuxquestions.org/questions/programming-9/do-we-have-regular-expression-in-c-422095/. Seems to me it could be related to losing the include boost dir when; svn update is done.; I have created a separate windows-vc2008 dir for this compilation that; was a copy of the windows-vc2005 but I am not familiar enough with; the details yet. Ideas and suggestions welcomed. Original comment by: peterennis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781153:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781153,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1918617; Originator: YES. no locations found for shared_ptr; under C:\Program Files\Microsoft Visual Studio 9.0\VC\include; and subfolders. tr1 found in the following files:. Start; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\comutil.h; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\functional; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\intrin.h; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\ios; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\mbstring.h; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\tchar.h; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\wchar.h; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\xhash; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\xiosbase; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\xlocale; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\xlocnum; Finished. Original comment by: peterennis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786191:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786191,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1918617; Originator: YES. openbabel solution revision 2585 debug.txt; File Added: OpenBabelOBF revision 2585 Build.txt. Original comment by: peterennis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/777#issuecomment-281786136:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/777#issuecomment-281786136,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1918617; Originator: YES. openbabel solution revision 2585 debug.txt; File Added: openbabel solution revision 2585 debug.txt. Original comment by: peterennis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/777#issuecomment-281786137:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/777#issuecomment-281786137,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1918617; Originator: YES. openbabel solution revision 2585 release.txt; File Added: openbabel solution revision 2585 release.txt. Original comment by: peterennis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/777#issuecomment-281786143:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/777#issuecomment-281786143,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1918617; Originator: YES. problems loading the file,; this one should be good. File Added: OBMoreFormats revision 2588 include files.txt. Original comment by: peterennis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786162:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786162,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1918617; Originator: YES. r2560 no change to either of the two files,; both dated 6/1/08 here. Original comment by: peterennis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/772#issuecomment-281781278:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/772#issuecomment-281781278,2,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1918617; Originator: YES. reaction.h has this code:. #ifdef USE_BOOST; #include <boost/shared_ptr.hpp>; namespace std{ namespace tr1=::boost; }; #else; #include <tr1/memory>; #endif. The locations of shared_ptr.hpp can be seen; in the attached file:; shared_ptr.hpp_06 Jun. 09 21.51.gif. File Added: shared_ptr.hpp_06 Jun. 09 21.51.gif. Original comment by: peterennis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781155:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781155,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1918617; Originator: YES. result for revision 2613 attached. File Added: OpenBabelOBF revision 2613.txt. Original comment by: peterennis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786184:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786184,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1918617; Originator: YES. results for revision 2717; File Added: OpenBabelOBF revision 2617.txt. Original comment by: peterennis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786189:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786189,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1918617; Originator: YES. revision 2578. refer to bug 1993613 . removing the file removes errors for; KFReader.c but OBMoreFormats still fails. Original comment by: peterennis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/774#issuecomment-281786084:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/774#issuecomment-281786084,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1918617; Originator: YES. revision 2578. the two files are consistent now; and the others checked out in this; rev were also OK. Original comment by: peterennis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/772#issuecomment-281781283:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/772#issuecomment-281781283,2,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1918617; Originator: YES. revision 2578; building OBCommonFormats release mode - success. results:. ------ Build started: Project: OBCommonFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Linking...; Creating library ../obcommon.lib and object ../obcommon.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCommonFormats\Release\BuildLog.htm""; OBCommonFormats - 0 error(s), 0 warning(s); ========== Build: 1 succeeded, 0 failed, 0 up-to-date, 0 skipped ==========. Original comment by: peterennis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/773#issuecomment-281786055:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/773#issuecomment-281786055,2,"['Log', 'log']","['Logged', 'log']"
Testability,"Logged In: YES ; user_id=1918617; Originator: YES. revision 2578; compiling OpenBabelOBF.sln now works:. Results:. ------ Build started: Project: OBError, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; cl : Command line warning D9035 : option 'Wp64' has been deprecated and will be removed in a future release; tokenst.cpp; plugin.cpp; loader.cpp; Linking...; Creating library ..\oberror.lib and object ..\oberror.exp; Generating code; Finished generating code; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBError\Release\BuildLog.htm""; OBError - 0 error(s), 1 warning(s); ------ Build started: Project: OBDLL, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; transform3d.cpp; ..\..\src\math\transform3d.cpp(58) : warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; transform.cpp; spacegroup.cpp; rotor.cpp; rotamer.cpp; ring.cpp; residue.cpp; rand.cpp; pointgroup.cpp; ..\..\src\pointgroup.cpp(1087) : warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; phmodel.cpp; patty.cpp; parsmart.cpp; obutil.cpp; obiter.cpp; molchrg.cpp; mol.cpp; matrix3x3.cpp; kekulize.cpp; griddata.cpp; grid.cpp; Generating Code...; Compiling...; generic.cpp; descriptor.cpp; data.cpp; chiral.cpp; chains.cpp; canon.cpp; ..\..\src\canon.cpp(188) : warning C4305: '+=' : truncation from 'double' to 'float'; builder.cpp; bondtyper.cpp; bond.cpp; base.cpp; atom.cpp; alias.cpp; Generating Code...; Compiling...; vector3.cpp; typer.cpp; Generating Code...; Linking...; Creating library ../OBDLL.lib and object ../OBDLL.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDLL\Release\BuildLog.htm""; OBDLL - 0 error(s), 3 warning(s); ------ Build started: Project: OBConv, Configuration: Release Win32 ----",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781167:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781167,2,"['Log', 'log']","['Logged', 'log']"
Testability,"Logged In: YES ; user_id=1918617; Originator: YES. revision 2600 report attached; removed boost, looks better; some error references to tr1/memory; some missing include files; I think you are getting close. too busy right now for another; mailing list. File Added: OpenBabelOBF revision 2600.txt. Original comment by: peterennis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786167:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786167,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1918617; Originator: YES. so this time I made sure it was release mode for all projects; (see attached screen from configuration manager). From http://openbabel.org/wiki/Install_(MSVC) Basic build; ""build all the projects except OBPythonOBF, OBJava, OBCSharp and OBGUI..."". LINK : fatal error LNK1181: cannot open input file 'odbccp32.libi'. Result when starting with Build by right click on FastSearch:. ------ Build started: Project: OBError, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; cl : Command line warning D9035 : option 'Wp64' has been deprecated and will be removed in a future release; tokenst.cpp; plugin.cpp; oberror.cpp; loader.cpp; dlhandler_win32.cpp; ..\..\src\dlhandler_win32.cpp(79) : warning C4267: 'return' : conversion from 'size_t' to 'int', possible loss of data; bitvec.cpp; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/bitvec.h(121) : warning C4267: 'return' : conversion from 'size_t' to 'unsigned int', possible loss of data; Linking...; LINK : fatal error LNK1181: cannot open input file 'odbccp32.libi'; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBError\Release\BuildLog.htm""; OBError - 1 error(s), 3 warning(s); ------ Build started: Project: OBDLL, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; transform3d.cpp; ..\..\src\math\transform3d.cpp(58) : warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; transform.cpp; spacegroup.cpp; rotor.cpp; rotamer.cpp; ring.cpp; residue.cpp; rand.cpp; pointgroup.cpp; ..\..\src\pointgroup.cpp(1087) : warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; phmodel.cpp; patty.cpp; parsmart.cpp; obutil.cpp; obiter.cpp; molchrg.cpp; mol.cpp; ..\..\src\mol.cpp(1908) : error C3861: '_finite': identifier not found; ..\..\src\mol.cpp(1908) : error C3861: '_f",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781141:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781141,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1918617; Originator: YES. the followng is found in; \include\openbabel\babelconfig.h. ...; // Visual Studio Express does not have the classes in namespace std::tr1, particularly; // shared_ptr. Use the Boost library instead. It is necessary to have download Boost; // and put its top level folder in the Include section of Visual Studio's VC++ Directories.; #define USE_BOOST; #define HAVE_SHARED_POINTER; ... Boost is installed, so how do I; ""put its top level folder in the Include section of Visual Studio's VC++ Directories""?. Original comment by: peterennis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781158:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781158,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1918617; Originator: YES. tracked down the IDE additional include directories; see attached gif. File Added: Additional Include Directories_02 Jun. 12 22.09.gif. Original comment by: peterennis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781166:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781166,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1918617; Originator: YES. typo in last message; s/2717/2617/; attached file is the correct one. Original comment by: peterennis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786190:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786190,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1918617; Originator: YES. updated all svn files revision 2600, log file OpenBabelOBF revision 2600-1.txt attached. ..\Debug/OBDLLD.dll : fatal error LNK1120: 3 unresolved externals. lots of:. obiter.h(330) : warning C4800:... ..\Debug/OBDESCD.obf : fatal error LNK1120: 3 unresolved externals. ..\Debug/OBFPRTD.obf : fatal error LNK1120: 3 unresolved externals. this one still exists:. cifformat.cpp; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/obiter.h(330) : warning C4800: 'unsigned int' : forcing value to bool 'true' or 'false' (performance warning); C:\Program Files\Microsoft Visual Studio 9.0\VC\include\xtree(161) : warning C4503: 'std::_Tree<_Traits>::_Key' : decorated name length exceeded, name was truncated; with... File Added: OpenBabelOBF revision 2600-1.txt. Original comment by: peterennis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786172:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786172,2,"['Log', 'log']","['Logged', 'log']"
Testability,"Logged In: YES ; user_id=1933558; Originator: YES. Alright, that fixes it for sure. Good work. Original comment by: scons",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/698#issuecomment-281779850:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/698#issuecomment-281779850,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1933558; Originator: YES. Sorry guys, the bug still still functions exactly as originally described. I checked out the trunk this morning.; Perhaps someone else should try test it to confirm?. Original comment by: scons",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/698#issuecomment-281779847:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/698#issuecomment-281779847,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=1933558; Originator: YES. Thanks Chris, that's great.; I had no idea that OB offered this plugin system... perhaps it should be mentioned on the wiki?. Original comment by: scons",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1502#issuecomment-281810959:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1502#issuecomment-281810959,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1933558; Originator: YES. Use of a debugger shows that OBPhModel::CorrectForPH is never even run when using a smiles file as input. Original comment by: scons,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/698#issuecomment-281779844:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/698#issuecomment-281779844,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1933558; Originator: YES. ugh, it doesn't work for me with the latest SVN version... maybe something is crazy with my system that has nothing to do with OB. Maybe I'll just throw a switch into babel.cpp, because that never seems to have any problems. Original comment by: scons",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/781#issuecomment-281793168:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/781#issuecomment-281793168,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1933558; Originator: YES. ya, I just shortened my code for readability (I'm always doing that :). I attached the script that I'm running. Open Babel version is 2.1.1. try playing around with the ; if(!conv.SetOutFormat(""CML"")); line, setting it to different formats.; File Added: readwrite.cpp. Original comment by: scons",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/781#issuecomment-281793166:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/781#issuecomment-281793166,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1934965; Originator: YES. Here is a little patch i wrote for generic.h.; It only renames GetValue into GetGenericValue ; (and I remove another minor bug in the constructor). 302c302; < OBGenericData(""PairData"", OBGenericDataType::PairData), ValueT() {};; ---; > OBGenericData(""PairData"", OBGenericDataType::PairData) {};; 304c304; < virtual const ValueT &GetValue() const { return(_value); }; ---; > virtual const ValueT &GetGenericValue() const { return(_value); }. Original comment by: mlasson",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/694#issuecomment-281779766:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/694#issuecomment-281779766,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1934965; Originator: YES. I attach the patch as a file.; File Added: bug_patch. Original comment by: mlasson,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/694#issuecomment-281779769:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/694#issuecomment-281779769,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1948648; Originator: YES. Issue was caused by improper linking with gcc. Fixed in r2232. Original comment by: jballanc,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/704#issuecomment-281779981:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/704#issuecomment-281779981,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1948648; Originator: YES. The command I used to rebuild the swig cpp files came from the README in the script/ruby directory. I only rebuilt from swig after the initial attempt to build from the openbabel_ruby.cpp included in the distribution failed. I just retried the build using --with-maintainer-mode, but I get the same set of errors. Original comment by: jballanc",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/704#issuecomment-281779980:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/704#issuecomment-281779980,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=196016. > Supporting CMake would make it much easier to integrate; KDE > programs and Open Babel. :-). What kind of things would it make possible which are not; possible and/or feasible right now?. Michael. Original comment by: @mbanck,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810560:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810560,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=196016. Are you sure you run make install as superuser/root? You ; cannot install stuff under /usr/local as a normal user. At least ; that's it for most unices, I guess Mac OS X is no different. ; Try su/sudo. Original comment by: @mbanck",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/427#issuecomment-281774820:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/427#issuecomment-281774820,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=196016. I guess we can destinguish between general properties (basis; set, electronic structure method) and job-specific; properties (single-point calculation, geometry optimization,; frequency analysis). As for a user-interface, I think it is more important to; have the library cover the various types and possibly be; able to convert between different QM inputs, than having a; UI to make up new input. I would argue that this is not the core of openbabel, and; might be easier done in a GUI like ghemical, but an elegant; implementation would be welcome, of course. Michael. Original comment by: @mbanck",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1437#issuecomment-281810214:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1437#issuecomment-281810214,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=196016. You need to be the system administrator in order to install; openbabel in a system-wide directory. Run 'sudo make install'. Michael. Original comment by: @mbanck,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/434#issuecomment-281774964:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/434#issuecomment-281774964,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=196016; Originator: NO. For the record, openbabel-2.2 seems to get the bond between 12 and 13; however, I think there's no bond between 13 and 14. This is the diff between a openbabel-2.2 generated txyz, and the file attached to this bug report:. --- JINGAO.txyz	2008-06-10 01:24:21.000000000 +0200; +++ JINGAO.txyz_	2008-06-10 01:25:51.000000000 +0200; @@ -10,8 +10,8 @@; 9 O 1.223000 -0.680000 3.866000 7 8; 10 N 0.367000 -2.631000 3.149000 9 8 11 14; 11 C 1.104000 -3.427000 4.125000 1 10 12 15 63; - 12 C 0.641000 -4.849000 3.852000 1 11 13 64 65; - 13 C -0.198000 -4.829000 2.735000 1 12 66 67; + 12 C 0.641000 -4.849000 3.852000 1 11 64 65; + 13 C -0.198000 -4.829000 2.735000 1 66 67; 14 C -0.538000 -3.458000 2.333000 1 10 68 69; 15 C 2.613000 -3.304000 4.089000 2 11 16 17; 16 O 3.260000 -3.651000 5.072000 7 15. Original comment by: @mbanck",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/685#issuecomment-281779598:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/685#issuecomment-281779598,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=196016; Originator: NO. I can reproduce the problem with the provided input:. crease~$ babel water.gzmat water.xyz; 1 molecule converted; 11 audit log messages; crease~$ cat water.xyz; 3; water.gzmat; O 0.00000 0.00000 0.00000; H 0.00000 0.00000 0.00000; H nan nan nan; crease~$ cat water.gzmat; #. water. 0 1; O; H 1 r; H 1 r 2 a. r 0.9572; a 104.52. Original comment by: @mbanck,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/808#issuecomment-281793679:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/808#issuecomment-281793679,2,"['Log', 'log']","['Logged', 'log']"
Testability,"Logged In: YES ; user_id=196016; Originator: NO. OK, I think I found the issue. The current code expects a lines ""Variables:"" to seperate the connectivity block from the variables block. So, the following input works for me:. #. water. 0 1; O; H 1 r; H 1 r 2 a; Variables:; r 0.9572; a 104.52. However, this is a bug, as the Gaussian manual says:. ""Variable definitions are separated from the atom position definitions by a blank line or a line like the following:; Variables: "". Furthermore, just putting the variables into the connectivity block like. #. water. 0 1; O; H 1 0.9572; H 1 0.9572 2 104.52. should work as well (at least Gaussian accepts it as input), however the gzmat format does not assign coordinates in this case either. Michael. Original comment by: @mbanck",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/808#issuecomment-281793681:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/808#issuecomment-281793681,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=196016; Originator: NO. Writing out the audit log messages, there is maybe a spurious second OpenBabel::Read molecule Gaussian Z-Matrix Input call. It might be trying to read in a second structure, and falss over; I don't have the source tree around currently to debug this. crease~$ babel ---errorlevel 20 -igzmat water.gzmat -oxyz water.xyz; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule Gaussian Z-Matrix Input; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in InternalToCartesian; Ran OpenBabel::InternalToCartesian; ==============================; *** Open Babel Audit Log in ConnectTheDots; Ran OpenBabel::ConnectTheDots; ==============================; *** Open Babel Audit Log in PerceiveBondOrders; Ran OpenBabel::PerceiveBondOrders; ==============================; *** Open Babel Audit Log in FindSSSR; Ran OpenBabel::FindSSSR; ==============================; *** Open Babel Audit Log in Kekulize; Ran OpenBabel::Kekulize; ==============================; *** Open Babel Audit Log in Kekulize; Ran OpenBabel::Kekulize; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule Gaussian Z-Matrix Input; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in WriteChemObjectImpl; OpenBabel::Write molecule XYZ cartesian coordinates format; 1 molecule converted; 11 audit log messages. Original comment by: @mbanck",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/808#issuecomment-281793680:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/808#issuecomment-281793680,14,"['Log', 'log']","['Log', 'Logged', 'log']"
Testability,"Logged In: YES ; user_id=1965159; Originator: YES. Thanks for this info. I could manage to read all the molecules from a single file using ReadFile for the first call then Read, as you wrote. There is still a little problem: Read doesn't return 'false' after it has reached the end of the file. As a consequence, I have to check against the number of atoms in the returned molecule and break the loop whenever it falls to zero (see below). However I'm not sure this is perfectly correct. # Quick'n'dirty; conv = openbabel.OBConversion(); conv.SetInAndOutFormats(""cdx"", ""smiles""); mol = openbabel.OBMol(); if conv.ReadFile(mol, ""test2.cdx""):; 	mol2 = openbabel.OBMol(); 	while conv.Read(mol2):; 		if mol2.NumAtoms() == 0:; 			break; 		mol2 = openbabel.OBMol(). Cheers; Stéphane. Original comment by: steffx",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/707#issuecomment-281780029:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/707#issuecomment-281780029,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1965159; Originator: YES. Yes it is specific to CDX. pybel.readfile works fine with a multimolecule SDF file. ; File Added: pybeltest_cdx.py. Original comment by: steffx,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/707#issuecomment-281780032:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/707#issuecomment-281780032,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1965159; Originator: YES. oops... sorry, I thought I could attach several files. Archive.zip contains the two python scripts (one for cdx, the other for sdf formats) and the two files I used (test.cdx and test.sdf). pybeltest_sdf.py works as expected whereas pybeltest_cdx.py blocks.; File Added: Archive.zip. Original comment by: steffx",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/707#issuecomment-281780036:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/707#issuecomment-281780036,3,"['Log', 'test']","['Logged', 'test']"
Testability,Logged In: YES ; user_id=1995332; Originator: YES. Just to follow up for users who have the same problem: thanks to Craig Knox from DrugBank this problem has been fixed. Please download the latest SDFs from DrugBank. Thank you Noel for asking to report this problem. Original comment by: sarkiss,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/760#issuecomment-281781041:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/760#issuecomment-281781041,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=2041613; Originator: YES. 2.2.0b6 seems to have fixed this for me. It now works fine from command line, anyway, which it didn't before.; Thanks!; Evan. Original comment by: eingersoll",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/744#issuecomment-281780742:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/744#issuecomment-281780742,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=2041613; Originator: YES. Conversion from PDB to MOL2 appears to work -- the same *format.so errors appear, but I also get a nice output file. A quick look suggests that OSX is supposed to come with libxml and libxslt installed. I don't, however, find them in /usr/lib where my xml2Conf suggests they should be. I also note that I have Maya installed on this system, with leftover directories that suggest it installed libxml2 somewhere. I'll see if re-installing libxml does the trick. Thanks,; Evan. Original comment by: eingersoll",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/744#issuecomment-281780732:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/744#issuecomment-281780732,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=2041613; Originator: YES. Semi-resolved: this is an intel-vs-ppc issue. I've tried updating/re-installing libxml2 on my intel laptop, no change in symptoms. However, my older PPC mac has no trouble converting cml files and produces no errors. Is it possible the whole issue is that the .so files in question are ppc-only binaries?. Thanks,; Evan. Original comment by: eingersoll",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/744#issuecomment-281780734:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/744#issuecomment-281780734,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=2128232; Originator: YES. File Added: dipep.pdb2xyz. Original comment by: hannes_m,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/780#issuecomment-281793137:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/780#issuecomment-281793137,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=2128232; Originator: YES. File Added: dipep.wrong.pdb2xyz. Original comment by: hannes_m,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/780#issuecomment-281793139:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/780#issuecomment-281793139,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=2128232; Originator: YES. I've just noticed that the bugfix did not make it in the latest babel release (2.2.0). can you estimate when your fixes will be available for download?; thanks; -h-. Original comment by: hannes_m,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/780#issuecomment-281793144:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/780#issuecomment-281793144,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=2128232; Originator: YES. what I meant to add: babel-1.6 does read the PDB records properly; File Added: atom.record. Original comment by: hannes_m,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/780#issuecomment-281793140:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/780#issuecomment-281793140,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. A good source of PDB files for testing is at:. http://people.ouc.bc.ca/woodcock/molecule/molecule.html. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/393#issuecomment-281774253:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/393#issuecomment-281774253,2,"['Log', 'test']","['Logged', 'testing']"
Testability,"Logged In: YES ; user_id=21420. A new tool ""obxyz"" has been added to the CVS tree for 2.1, which handles the ; first three points (rotation of an atom to a certain axis, centering on a certain ; atom, and/or rotation around the principal cartesian axes by specified angles). I suspect these are the three most useful features for such a tool -- other ; features can be requested and added in the future. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1420#issuecomment-281810108:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1420#issuecomment-281810108,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. A test mol2 file is attached. Code changes in src/mol2.cpp::ReadMol2. The sscanf; statement needs revision (to actually grab the string) and; then code to; add the OBResidue objects needs to go in. (It'd be similar; to the code at; the end of src/pdb.cpp::ParseAtomRecord.). -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1395#issuecomment-281809803:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1395#issuecomment-281809803,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=21420. Actually, I think the interesting question is also why the atoms seem to be ; renumbered every time. In the first case, the input goes from the nitrogen to the benzene ring. But the ; output goes from the nitrogen to the CH2 group and the dithiole-3-thione:; S=c1sscc1. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/550#issuecomment-281777040:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/550#issuecomment-281777040,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Actually, it just shouldn't happen. According to the PDB; spec, the current Open Babel code is just wrong. If I send you the current OpenBabel CVS code, would you give; it a try? AFAIK, it's correct. -Geoff; hutchisn@chem.northwestern.edu. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/408#issuecomment-281774505:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/408#issuecomment-281774505,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Actually, it's called from rotor.cpp. if (!sp-&gt;RestrictedMatch(mol,vpr,true)); 	 {; 		 swap(vpr[0].first,vpr[1].first);; 		 if (!sp-&gt;RestrictedMatch(mol,vpr,true)); 			 continue;; 	 }. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/394#issuecomment-281774266:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/394#issuecomment-281774266,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Actually, the simplified case, shows how the bug occurs:. [C@@]1(F)(C)C(=O)O.Br1; Br1.[C@@]1(F)(C)C(=O)O. These are identical SMILES (e.g., check at http://www.daylight.com/daycgi/; depict). But these end up as very different SMILES because the atom ordering isn't ; handled by Open Babel:. F[C@@](Br)(C)C(=O)O test.smi; Br[C@@](F)(C)C(=O)O test.smi. Personally, I don't like this use of ring closure bonds, but you're correct that ; this is a bug. (The other bug report is essentially a duplicate -- the problem ; is that the ring closure isn't being performed correctly.). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777258:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777258,5,"['Log', 'test']","['Logged', 'test']"
Testability,Logged In: YES ; user_id=21420. Added a special case in kekulize.cpp in repository. Solves problem for now. Marking this closed.; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/550#issuecomment-281777044:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/550#issuecomment-281777044,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Added to CVS. Thanks!; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/463#issuecomment-281775589:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/463#issuecomment-281775589,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Added, thanks!. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/467#issuecomment-281775634:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/467#issuecomment-281775634,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Added. Merci beaucoup!; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/471#issuecomment-281775689:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/471#issuecomment-281775689,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. After analyzing the test file (from PubChem: ftp://ftp.ncbi.nlm.nih.gov/; pubchem/Substance/SDF/) the problem became obvious. When reading the molecular properties, the INChI lines for large ; molecules were >1024 characters. The call to read a line (i.e. ; ifs.getline()) failed, making it look like the file had reached the EOF. This bug is currently fixed in the openbabel-new-framework CVS branch, ; the development code aimed for 2.0-release. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/444#issuecomment-281775171:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/444#issuecomment-281775171,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=21420. After much thought, I'm not sure an output filter makes any sense. By default, ; the end-of-line should be correct for the platform (now only \r\n for Windows, ; \n for everyone else). If line endings are corrected on input, everything works. Since there's now an input line filter, I'm marking this closed too.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1465#issuecomment-281810520:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1465#issuecomment-281810520,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. All fixes for this will be in CVS shortly. Marking this closed.; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/478#issuecomment-281775803:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/478#issuecomment-281775803,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Also fails on Mac OS X (10.1.5):. Reading specs from /usr/libexec/gcc/darwin/ppc/2.95.2/specs; Apple Computer, Inc. version gcc-937.2, based on gcc version; 2.95.2 ; 19991024 (release). [localhost:~/Documents/Build/openbabel] ghutchis% uname -a; Darwin localhost 5.5 Darwin Kernel Version 5.5: Thu May 30; 14:51:26 PDT ; 2002; root:xnu/xnu-201.42.3.obj~1/RELEASE_PPC Power; Macintosh powerpc. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/409#issuecomment-281774528:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/409#issuecomment-281774528,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Also fails on:. Alpha-Linux gcc-2.95.4:; Linux usf-cf-alpha-linux-1 2.2.20 #2 Wed Mar 20 19:57:28 EST; 2002 alpha unknown. Reading specs from /usr/lib/gcc-lib/alpha-linux/2.95.4/specs; gcc version 2.95.4 20011002 (Debian prerelease). Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/409#issuecomment-281774526:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/409#issuecomment-281774526,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Also there are calls to strcpy in:. data.h:92; mol.h:230; mol.h:231. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/398#issuecomment-281774330:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/398#issuecomment-281774330,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Alternatively, you can use one of the 2.0 beta snapshots. I can pretty ; much guarantee they work on Tiger -- that's what I'm using for ; development. Marking this closed.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/482#issuecomment-281775858:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/482#issuecomment-281775858,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Are these still a problem with the current CVS version?. I'd like to know if the current PerceiveBO code is &quot;good; enough&quot; for a release w/o massive, ugly bugs like you raised. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/405#issuecomment-281774470:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/405#issuecomment-281774470,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. As a follow-up:. http://www.daylight.com/dayhtml/doc/theory/theory.smarts.html#RTFToC39. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/552#issuecomment-281777230:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/552#issuecomment-281777230,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. As a temporary fix, the mm3format code is not compiled on UNIX. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/461#issuecomment-281775577:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/461#issuecomment-281775577,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. As an alternative solution, the API now specifies a; &quot;preferred&quot; 2D and/or 3D conformer. So for example, the; &quot;preferred&quot; 3D conformer would be the lowest energy in a; geometry optimization, etc. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/403#issuecomment-281774420:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/403#issuecomment-281774420,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. As discussed on the mailing list, the code now outputs an error/warning and ; stops after one molecule output. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/527#issuecomment-281776633:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/527#issuecomment-281776633,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. As per Chris Morley's comments, this is fixed in the 2.0 snapshots. http://sourceforge.net/mailarchive/forum.php?; thread_id=7706552&forum_id=3042. I'm marking this closed.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/456#issuecomment-281775378:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/456#issuecomment-281775378,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. At least for now, the new newlinebuf class seems to do this exactly. It needs ; more testing before I'm convinced it works perfectly. I'll mark this as ""pending"" -- it will auto-close after 2 weeks if the newlinebuf ; class seems to work. If anyone wants/needs the class, please check the SVN trunk, revision 1489. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/557#issuecomment-281777297:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/557#issuecomment-281777297,2,"['Log', 'test']","['Logged', 'testing']"
Testability,"Logged In: YES ; user_id=21420. At the moment, the quat.c code has been migrated into; obutil.cpp. Some consolidation may be needed, but quat.c is; removed from the CVS. Anything else needed or can this be closed?. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/388#issuecomment-281773554:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/388#issuecomment-281773554,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Attached is a patch that should solve this. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/392#issuecomment-281774236:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/392#issuecomment-281774236,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Attaching also the SDF file used to generate the problematic CML output. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/535#issuecomment-281776784:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/535#issuecomment-281776784,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Bug 1368223 now has an attached version of the dlhandler_win32.cpp file. And, of course, if you are having problems compiling and ""lots of unresolved ; symbols,"" it would be very helpful to have the exact error message and ; unresolved symbol listing. None of the active developers use MinGW, but we'd certainly be glad to help ; you solve this issue. The code should be portable to any platform. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/496#issuecomment-281776087:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/496#issuecomment-281776087,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Can't reproduce any bug -- just hadn't looked carefully at the code. It works ; fast enough that I hadn't witnessed the interleaving. :-). Marking this closed.; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1415#issuecomment-281810074:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1415#issuecomment-281810074,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Changing the summary title. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1424#issuecomment-281810139:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1424#issuecomment-281810139,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Chris Morley has added this feature to the CVS development code. It will be in ; version 2.1. Marking this closed. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1436#issuecomment-281810203:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1436#issuecomment-281810203,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Chris Morley has fixed this in the CVS head, which will eventually be part of 2.1. Closed, pending further comment. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/505#issuecomment-281776234:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/505#issuecomment-281776234,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Committing this change now. Hydrogen addition is turned on for SMILES ; input. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1407#issuecomment-281810041:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1407#issuecomment-281810041,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Currently in CVS version using '--' to indicate that read/write should come from a pipe rather than a file. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1377#issuecomment-281809526:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1377#issuecomment-281809526,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. D'oh. I should have read through the SMARTS parser more carefully. ; There's a big section that claims:. /*; need to handle these cases; ... I'm currently implementing ""up"" and ""down"" primitives and testing. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/447#issuecomment-281775229:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/447#issuecomment-281775229,2,"['Log', 'test']","['Logged', 'testing']"
Testability,"Logged In: YES ; user_id=21420. Debugging messages have been added to provide ""obInfo"" reports if the ; type table is incorrect. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/462#issuecomment-281775585:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/462#issuecomment-281775585,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Do you know if these files can be edited directly with a text editor? If so, I ; can make sure they're kept up-to-date with the Makefiles. But since none of ; the current developers have/use VC++, I can't verify that textual changes ; will be treated correctly. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/422#issuecomment-281774724:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/422#issuecomment-281774724,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Done!. Thanks very much for the contribution -- it'll definitely be in the next ; release. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1405#issuecomment-281810029:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1405#issuecomment-281810029,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Done. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1383#issuecomment-281809591:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1383#issuecomment-281809591,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Duplicate submission. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1394#issuecomment-281809783:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1394#issuecomment-281809783,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Duplicates feature request (1222443) -- marking duplicate and closing. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/455#issuecomment-281775360:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/455#issuecomment-281775360,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Essentially this is a duplicate -- I don't think the underlying bug is any different ; from the stereo bug PR#1508741. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/556#issuecomment-281777279:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/556#issuecomment-281777279,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Except for cleaning up the aromatic typing, there is an; implementation of the whole algorithm. (The aromatic typing; should really try handing off to the Kekulize code, but that; doesn't work correctly and it's not obvious why.). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1375#issuecomment-281809502:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1375#issuecomment-281809502,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Famous last words indeed!. I'm not sure if it's better to leave random numbers as the; coordinates (which at least prevents nasty divide-by-zero; problems) or 0.0000s. The &quot;solution&quot; will probably involve porting/adapting a SDG; from the LGPL'ed CDK project:; http://cdk.sf.net/; http://cvs.sourceforge.net/cgi-bin/viewcvs.cgi/cdk/cdk/src/org/openscience/cdk/layout/StructureDiagramGenerator.java. The code is about 700 lines of Java, some of which; implements classes already in Open Babel. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809761:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809761,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Finished an initial draft. Still need more specification URLs and data type ; support, etc. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1428#issuecomment-281810159:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1428#issuecomment-281810159,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Fixed as suggested. Now in CVS HEAD and 2.0.x branch. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/513#issuecomment-281776372:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/513#issuecomment-281776372,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Fixed by Bryan Herger, along with adding some nice Windows; GUI features. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/391#issuecomment-281774219:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/391#issuecomment-281774219,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Fixed in SVN now. Thanks to Noel for suggestion -- the functions were missing ; parens for evaluating the number of hydrogens. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/534#issuecomment-281776756:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/534#issuecomment-281776756,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Fixed in both 2-0-x branch and development HEAD. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/528#issuecomment-281776642:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/528#issuecomment-281776642,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Fixed in current CVS. OBTypeTable was being reset to other formats ; during WriteMolecule(). Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/449#issuecomment-281775266:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/449#issuecomment-281775266,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Fixed in current OpenBabel CVS version now. Test PDB file; still has strange X, Y, Z coords, but it will show all 26; bonds on translation. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/393#issuecomment-281774254:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/393#issuecomment-281774254,2,"['Log', 'Test']","['Logged', 'Test']"
Testability,"Logged In: YES ; user_id=21420. Fixed in the SVN repository (revision 1578 or later). This is now known as the ""molreport"" format. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1475#issuecomment-281810633:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1475#issuecomment-281810633,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Fixed this in the 2.1 trunk and the 2.0.x development repository now. The ; problem was in OBConversion::BatchFileName. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/547#issuecomment-281776991:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/547#issuecomment-281776991,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Fixed with current CVS version. (There was a mistake in the math/; Makefile.am.). -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/424#issuecomment-281774763:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/424#issuecomment-281774763,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Fixed with new Makefile adjustments. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/397#issuecomment-281774309:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/397#issuecomment-281774309,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Fixed, thanks to Chris Morley. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1402#issuecomment-281809880:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1402#issuecomment-281809880,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Fixed, thanks to contributions from Gerd Menche. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/430#issuecomment-281774886:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/430#issuecomment-281774886,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Fixed, thanks!; (Update added to the website as well.). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/468#issuecomment-281775659:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/468#issuecomment-281775659,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Fixed. Methods now exist to return the number of errors, warnings, etc. The new methods make it easy to alter the text or formatting of the messages, ; so any concerns about the new output can be easily revised. I'm marking this feature closed.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1453#issuecomment-281810452:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1453#issuecomment-281810452,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Fixed. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1370#issuecomment-281808299:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1370#issuecomment-281808299,2,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Fixed. Problem derives from numerical accuracy issues, and loosening the accuracy constraints to 2e-6 from 1e-6 seems to solve the problem. The matrix test also now reports more information for debugging. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/409#issuecomment-281774529:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/409#issuecomment-281774529,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=21420. Fixed. Root cause was that attempting to add alpha-peptide bonds was connecting long-range bonds. This should help performance as well. A new check also looks for long bonds causing very small angles, e.g. across a small ring. (As was the case in the indigo molecule that precipitated the bug report.). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/412#issuecomment-281774567:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/412#issuecomment-281774567,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Fixed. Should have caught this with the ReadFile fixes too.; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/529#issuecomment-281776654:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/529#issuecomment-281776654,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. For obvious reasons, I don't like that hack. IMHO, the real reason is that there isn't a ""default"" SMARTS pattern to ; fall back on. So I've added a variety of ""default"" patterns for carbon, ; nitrogen, etc. -- molecules matching more specific SMARTS patterns ; would use those since they come later in the file. Here's my patch, which seems to mark the imidazole ring correctly (it'll ; be in CVS in a few minutes):; In aromatic.txt:; #nitrogen patterns; + [#7rD2] 1 2; + [#7rD3] 1 2; [#7r](-@*)-@* 2 2; ... I'm not a nitrogen heterocycle expert, but I think both of those patterns ; are correct -- if you have two or three bonds to a nitrogen ring atom, it ; could contribute 1 or 2 electrons to the ring, depending on the other ; bonds, the charge, etc. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/469#issuecomment-281775664:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/469#issuecomment-281775664,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. For right now, this won't be &quot;fixed.&quot; It breaks too much; code and it's too important to see &quot;Babel 2.0&quot; released and; stable. This should be re-visited for post-2.0 release if it seems; useful/important. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1380#issuecomment-281809553:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1380#issuecomment-281809553,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. For the 2.0 release, this isn't relevant to fix, IMHO. I've removed mm3format.cpp from the CVS. It can be added back after the ; 2.0 release, but it won't be fixed easily before then. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/461#issuecomment-281775578:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/461#issuecomment-281775578,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. From Jean:; (seems to be due to global vector variables such as atomIdVector ; not being reset.). This is now fixed in the CVS version and is being tested. I'll ; forward a patch shortly.; -Geoff. Program received signal SIGSEGV, Segmentation fault.; [Switching to Thread 16384 (LWP 25081)]; 0x41051f22 in OpenBabel::OBBond::GetEndAtomIdx() const ; (this=0xbfffe350); at mol.h:444; 444 unsigned int GetEndAtomIdx() const ; {return(_end-&gt;GetIdx());}; (gdb) bt; #0 0x41051f22 in OpenBabel::OBBond::GetEndAtomIdx() const ; (this=0xbfffe350); at mol.h:444; #1 0x410a5035 in ; OpenBabel::OBMol::AddBond(OpenBabel::OBBond&amp;) (; this=0xbfffeaf0, bond=@0xbfffe350) at mol.cpp:2149; #2 0x41135a33 in OpenBabel::endBond() () at cml.cpp:1995; #3 0x4112efee in OpenBabel::endElement(std::string, ; std::string, std::string); (localName=Cannot access memory at address 0xb41a718; ) at cml.cpp:1175; #4 0x4112ede4 in OpenBabel::endElement(std::string) ; (name=Cannot access memory; at address 0xb41a718; ) at cml.cpp:1156; #5 0x4112b122 in OpenBabel::tag(std::string) (s=Cannot ; access memory at address 0xb41a718; ) at cml.cpp:702; #6 0x4112a0f2 in OpenBabel::ReadXML(std::istream&amp;) ; (ifs=@0xbfffeb60); at cml.cpp:626; #7 0x4113b186 in OpenBabel::ReadCML(std::istream&amp;, ; OpenBabel::OBMol&amp;, char const*) (ifs=@0xbfffeb60, ; mol=@0xbfffeaf0, title=0x808e2bd &quot;Untitled&quot;); at cml.cpp:2894; #8 0x411079fe in ; OpenBabel::OBFileFormat::ReadMolecule(std::istream&amp;, ; OpenBabel::OBMol&amp;, char const*) (ifs=@0xbfffeb60, ; mol=@0xbfffeaf0,; title=0x808e2bd &quot;Untitled&quot;) at fileformat.cpp:43; #9 0x0805fafb in do_open_with_babel(char const*, char ; const*, gcpDocument*, OpenBabel::io_type) ; (filename=0x84af870 &quot;/home/Jean/projects/GChemPaint/; 2.cml&quot;,; ext=0x84b65f0 &quot;\003&quot;, pDoc=0x0, Type=CML) at file.cc:294; #10 0x0805f1d2 in file_process(char const*, int, bool, ; gcpDocument*) (; filename=0x40e089e0 &quot;/home/Jean/p",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/420#issuecomment-281774687:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/420#issuecomment-281774687,2,"['Log', 'test']","['Logged', 'tested']"
Testability,Logged In: YES ; user_id=21420. Good fix. Thanks!. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/476#issuecomment-281775742:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/476#issuecomment-281775742,2,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Got it. Thanks. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/473#issuecomment-281775697:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/473#issuecomment-281775697,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Having a complete list of the aromatic rings which are incorrectly de-; aromatized would be very helpful. Pointing to one triazole ring doesn't really ; help -- we can fix this one system and still not solve your ""some aromatic ; rings."". Is this the only one, or can you give a more complete list. (E-mail me privately ; if you have confidential data.). Best,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/516#issuecomment-281776433:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/516#issuecomment-281776433,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Here's an alkane chain that shows the same problem:. CCC[C@@H](CCCCCCC)\C. WARNING: Incomplete EZ specification -- ignored (dy_ezanal); WARNING: CCC[C@@H](CCCCCCC)\C (dy_ezanal); WARNING: ^^^^^^ (dy_ezanal). Removing the \ in the SMILES string removes the errors. HOWEVER, the stereochemistry has been inverted (from R to S). The correct SMILES should be:; CCC[C@H](CCCCCCC)C. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/474#issuecomment-281775701:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/474#issuecomment-281775701,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Hi Alexander,. Thanks for the bug report, I just fixed it for the 2.0.x and development (2.1) ; trees. This will go into the upcoming 2.0.2 release. If you'd like me to send ; you an updated snapshot, please let me know. If you have some hin files that you can contribute for testing, it would be ; greatly appreciated. As far as I can tell, HIN is undocumented, so any ; examples from HyperChem (particularly multi-molecule files) would be very ; helpful. Thanks!; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/543#issuecomment-281776925:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/543#issuecomment-281776925,3,"['Log', 'test']","['Logged', 'testing']"
Testability,"Logged In: YES ; user_id=21420. I agree wholeheartedly with Jonathan -- the IUPAC recommendations are ; pretty extensive and do not generate a unique name. For now, I'm going to mark the priority pretty low on this. If someone ; would like to work on ""structure to name"" features for Open Babel, that's ; great and I can certainly help give direction. But I don't think any of the ; current core developers are interested in this task right now. It's also more of an API feature request. Some file formats may make ; use of it, but it's not a separate file format of its own. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1400#issuecomment-281809871:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1400#issuecomment-281809871,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I assume you're suggesting this needs to be changed to:. lftest = true;. Do you have some sample files supporting this, or at least a justification ; for this change? I'd hate to start making arbitrary changes in the ; SMARTS code. :-). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/473#issuecomment-281775694:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/473#issuecomment-281775694,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I believe Chris fixed this with his 2005-08-12 fix. If so, please mark this ""pending"" or ""closed"" with a ""Fixed"" resolution?. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/466#issuecomment-281775616:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/466#issuecomment-281775616,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I believe with Nick's updated chiral information, this particular bug (i.e., ; SMILES => MDL) is now fixed?. Marking this closed, pending further comment. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/466#issuecomment-281775617:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/466#issuecomment-281775617,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. I can verify that this problem is completely fixed in the current CVS ; code. Marking this bug closed.; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/439#issuecomment-281775056:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/439#issuecomment-281775056,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. I can't promise that the state of the CVS tree is tested in; any significant way at any particular point of time. It's a little strange b/c I can compile it just fine. But I; think right now the build environment is still using; gcc-2.95.2 since I spied a missing std:: in the header file. I'll fix that shortly. Thanks for the heads up.; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/406#issuecomment-281774486:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/406#issuecomment-281774486,2,"['Log', 'test']","['Logged', 'tested']"
Testability,"Logged In: YES ; user_id=21420. I certainly haven't reproduced a segfault on a SMILES to SDF conversion. So I'll need some additional information from you to debug this. (a) What version of Open Babel are you using?; (b) Can we have a copy of the SMILES file to reproduce the bug?. You can use the &quot;upload file&quot; feature in the bug tracker, or if the file needs to remain private, please e-mail me directly. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/415#issuecomment-281774609:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/415#issuecomment-281774609,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. I don't believe the .z and .Z format can be supported. But gzip support is pending and will be added soon. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1389#issuecomment-281809711:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1389#issuecomment-281809711,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I don't know Python, but certainly the C++ code works and does not crash. . From what you describe, the segfault comes from the python code:. map.front(). But here, map doesn't have any elements. Shouldn't your code check to see if ; map is empty before trying to get the first?. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/537#issuecomment-281776827:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/537#issuecomment-281776827,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I don't know if the CDK fingerprint method is different from Fabien's ; fingerprint and tanimoto code. If not, let's close this feature request. If not, the new fingerprint code in the CVS code should work fine. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1398#issuecomment-281809853:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1398#issuecomment-281809853,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I don't know why the tracker closed the thread -- indeed I wasn't notified that ; you posted a comment. Sorry about that. Out of curiosity, is the memory use increase (e.g., the regression line) ; somewhat similar for SDF as it is for fingerprint or other formats? In other ; words, it sounds like the leak is in the core library, rather than one particular ; format. That's helpful information. I'm still hunting--although it's weird that valgrind doesn't seem to find the ; leak. Thanks for all the help!; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776402:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776402,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I don't see this bug at all. (There isn't an XYZ file attached, but I created ; one I'm attaching myself.). I suspect this was fixed in the latest development code. I'd be glad to e-; mail a snapshot if you like, or you can grab the CVS openbabel-new-; framework branch. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/485#issuecomment-281775912:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/485#issuecomment-281775912,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I have *a* fix for this, but it's in your code, so I'm not sure it's absolutely ; correct. The problem is that the implicit valence for that carbon comes back as 1 ; based on the IMPVAL rules in atomtyp.txt. (I'll see if I can figure out ; what needs to happen there.). But in OBAtom::ImplicitHydrogenCount() the following happens:; int impval = _impval - GetHvyValence();; //Jan 05 Implicit valency now left alone; use spin multiplicity for ; implici\; t Hs; int mult = GetSpinMultiplicity();; if(mult==2) //radical; impval-=1;; else if(mult==1 || mult==3) //carbene; impval-=2;; return((impval>0)?impval:0);. But if impval != 0 and mult == 0, then the impval is returned. I don't ; think this is the intended behavior, so I added:; else; impval=0;. Please take a look. Thanks, -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/453#issuecomment-281775337:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/453#issuecomment-281775337,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I have a fix for this, I'm updating CVS tonight. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/506#issuecomment-281776255:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/506#issuecomment-281776255,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I have not been able to reproduce this, though the cml.cpp code ; unfortunately uses global variables, which is bad. The backtrace looks like it has been compiled with optimization ; turned on, which makes it a little hard to follow. If you have the ; time and can reproduce the bug after compiling with just ; CXXFLAGS=&quot;-g&quot; it would be appreciated. Alternatively, if you could come up with some small program that ; reproduces the bug, that would greatly help. As it stands, it could ; be that one of the global pointers in cml.cpp is getting clobbered, ; but I can't see why it would make it to that line before the ; segfault. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/420#issuecomment-281774685:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/420#issuecomment-281774685,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I have some test Perl and Python bindings, but they're incredibly sketchy. ; I'm looking for victims... I mean volunteers to help test them. There's ; probably not much ""coding"" needed to get this going faster, but some ; developer/debugging ability will be required. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1376#issuecomment-281809514:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1376#issuecomment-281809514,3,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=21420. I haven't seen a specification for the title field in SMILES files -- I'd be ; glad to take a look. In Open Babel, at least, the first space separates the SMILES string ; from a title -- any remaining spaces are ignored by ReadMolecule:; // added the following to allow spaces in compound names (titles).; // Essentially everything after the first space on a SMILES file line; // is treated as the name. It's easy enough to switch the delimiter when writing SMILES files -- and ; indeed I just checked in a change to make it a tab. However, I'd really ; like to see a specification on this. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/457#issuecomment-281775392:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/457#issuecomment-281775392,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I haven't tried compiling Open Babel with MinGW, but the following link looks ; interesting:. http://sebsauvage.net/python/mingw.html. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1450#issuecomment-281810420:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1450#issuecomment-281810420,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I honestly think the best current solution for this problem is to reject all ""."" ; SMARTS patterns. The dot matching behavior doesn't work correct in the ; current code at all, since there's no test to be sure that the individual ; components are actually separate (i.e. C.C can match an ethane molecule). ; This has been documented on the webpage for a while:. http://openbabel.sourceforge.net/wiki/SMARTS. I'll commit a patch for this shortly, it's basically just one line. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/551#issuecomment-281777206:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/551#issuecomment-281777206,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=21420. I now have contributed code (from Craig James, eMolecules.com) to do this. I'm marking this closed pending further comment. The code will probably take a few days to incorporate into the SVN trunk, but will ; definitely be in 2.1.0. I don't want anyone else working on this unless they wish to help with the integration of the contributed code. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1421#issuecomment-281810118:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1421#issuecomment-281810118,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I sent a message to this e-mail address. We'd certainly like to see your ; implementation. Please submit code (preferably in patch form) to the ; openbabel-discuss mailing list -- that's why it's there! :-). I'm marking this request ""pending"" since you say you have code to ; submit -- it's not really an ""open"" feature request. Thanks and cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1399#issuecomment-281809858:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1399#issuecomment-281809858,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I should comment that the correct sequence should be:. Ala-Gly-Pro-Ala-Cys-Pro-Gly-Ala-Ala-Ala. (Yes, I said it was a random sequence!). Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/515#issuecomment-281776423:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/515#issuecomment-281776423,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I should mention that I'm marking this ""pending"" and it will auto-close as being ; resolved, if there's no further comment within the next 2 weeks. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/551#issuecomment-281777209:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/551#issuecomment-281777209,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I still have no idea what this is supposed to do, so for; now, the call is going to be removed from the header. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/394#issuecomment-281774265:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/394#issuecomment-281774265,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I think the porph patterns still need some work (since they still match ; multiple times), but it's getting there. Thanks for the fixes!. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/475#issuecomment-281775725:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/475#issuecomment-281775725,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I think there are two different issues here. The first is a memory leak -- that's ; when a program runs for a while and continues to consume more and more ; memory. (e.g., after reading 1 SMILES, it consumes 1MB, but after 100,000 ; smiles, it consumes 140MB). The second is large memory use that does not ""leak"" or continue to increase ; over time. I'm pretty confident that what you describe falls in the second category. Craig ; and I have found a few *small* leaks, but nothing that would consume 140MB ; of leaks. I will check for leaks with your test file, thanks.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776395:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776395,2,"['Log', 'test']","['Logged', 'test']"
Testability,Logged In: YES ; user_id=21420. I will make sure the source is updated ASAP. I'm marking this bug closed.; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/495#issuecomment-281776069:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/495#issuecomment-281776069,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'd be glad to enhance SMILES support for canonical SMILES -- but I ; cannot find a definitive specification anywhere. If someone could supply ; a URL or specification file, I'd be glad to ensure that output SMILES can ; be canonical. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1396#issuecomment-281809815:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1396#issuecomment-281809815,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'd be glad to take a look, but I don't have any examples of multi-; structure .car files or information on the file format itself (e.g., a ; developer note of some sort). So if you have any example files that you can send me, or URLs to look ; up, it'd be greatly appreciated. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/437#issuecomment-281775025:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/437#issuecomment-281775025,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'd be happy to try this out, but without the file, it's unclear how to proceed. ; Certainly invalid files appear to be rejected by the HIN reader -- as tested ; during roundtrip testing. I'm not sure how the code could run infinitely, but would be glad to debug ; this ASAP. I'm marking this ""Pending"" further comment. Either the original submitter ; should post the file and a comment (to re-open it) or this will close (since we ; can't do anything to test the bug). Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/520#issuecomment-281776527:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/520#issuecomment-281776527,4,"['Log', 'test']","['Logged', 'test', 'tested', 'testing']"
Testability,"Logged In: YES ; user_id=21420. I'd definitely like to solve this bug, but w/o more; information, I'm going to mark it &quot;pending&quot; in a few days. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/415#issuecomment-281774611:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/415#issuecomment-281774611,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'd like to close this bug ASAP. I don't see why the *installed* headers ; need to keep babelconfig.h. None of the #defines in babelconfig.h are ; appropriate for installed headers. In short, I think babelconfig.h should *only* be #included in .cpp files ; and not .h files and would like to move in this direction soon. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774930:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774930,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'd like to make sure porphyrin rings (metallated or not) and ; phthalocyanines are typed correctly for the 2.0 final release. IMHO, these are the most common macrocyclic rings with significant ; conjugation. I see three possible (and independent) approaches:; 1) An explicit HEM ""residue"" in the PDB handling that adds bond orders ; correctly, much like other residues.; 2) Explicit typing rules in bondtyp.txt.; 3) Addition of a ring bond-order assignment step to the bondtyper.cpp ; code, independent of the functional group assignment. This can take ; aromaticity into account and propagate around a macrocycle ring. More examples of ligands would definitely help this effort. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/470#issuecomment-281775673:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/470#issuecomment-281775673,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'd love to fix all of these. I'll see if I can minimize the ""multimatch"" ; problem, but more bug reports like this would be helpful. I'll make sure to fix 'em as soon as I see the bug report. :-). Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/464#issuecomment-281775597:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/464#issuecomment-281775597,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'm assigning this to Fabien and attaching the test file for future ; reference. But it'd help a lot if you were a bit more specific about which bonds are ; assigned ""wrong."" Where should the double bonds be? Can you give ; atom numbers or example CONECT records that should be changed?. At the very least, the current CVS version (on the openbabel-new-; framework branch) looks OK to me, but I don't know what the typing ; should be on the nitrogens, for example. PDB files without explicit ; hydrogens are extremely hard to type ""correctly."". Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/446#issuecomment-281775216:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/446#issuecomment-281775216,2,"['Log', 'test']","['Logged', 'test']"
Testability,Logged In: YES ; user_id=21420. I'm closing my own submission -- the errors seem to be in the CygWin libraries ; themselves. All crashes happen at the *end* of processing. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/544#issuecomment-281776947:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/544#issuecomment-281776947,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'm closing this feature request. The Gasteiger model has clearly ; advanced, and new code is needed. (Adding other charge models would be ; helpful too.). I'll open a new feature request for updating the Gasteiger model.; -Geogg. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1371#issuecomment-281808308:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1371#issuecomment-281808308,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'm closing this. Many of these flags are either now supported in Open ; Babel or auxiliary obtools (e.g., obfit) or can safely be ignored, IMHO. If ; users request them, they can be added later. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1386#issuecomment-281809655:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1386#issuecomment-281809655,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'm considering this more of a feature request than a bug report. I'd like to see ; this fixed, but it won't go into 2.0.x, because I'm afraid that the fix might break ; other parts of SMARTS matching. (It shouldn't, but I'm intentionally pessimistic ; at making changes for a bug-fix release.). I agree with your interpretation of the @? pattern. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/494#issuecomment-281776040:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/494#issuecomment-281776040,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'm firmly marking this closed for now. If you're interested in dealing with ; names, check out http://wwmm.ch.cam.ac.uk/wikis/wwmm/index.php/Oscar3. If at a later point, there's more of a fixed recommendation for naming ; compounds, a new feature request should be opened. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1400#issuecomment-281809872:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1400#issuecomment-281809872,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'm game. That one's always bugged me, so let's give it a try. The worst ; thing that happens is that we find some counter-examples. Then we add ; appropriate SMARTS to work around them. Better to try this now, than after release. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/452#issuecomment-281775332:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/452#issuecomment-281775332,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'm going to assume this is resolved, since poster mentioned building a static ; library. If this is still an issue, please open a new bug. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/496#issuecomment-281776096:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/496#issuecomment-281776096,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'm marking this as fixed, and this will auto-close in 14 days unless further ; comment. As far as I can tell, the changes to OBConversion::SetLast solve this. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/560#issuecomment-281777338:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/560#issuecomment-281777338,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'm marking this as not a bug. There's no memory leak in the underlying C++ ; library, only in Perl's traditional, documented behavior. The same problem would exist in any similar code (i.e., reading in huge ; amounts of data).; -Geoff. P.S. This bug is being marked ""pending"" -- it will automatically close without ; further comments. If you have evidence that this is, in fact, a bug in the Open ; Babel perl interface, please present it and it will reopen. Otherwise, as ; mentioned by Craig (and myself), this does not appear to be a bug. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/565#issuecomment-281777440:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/565#issuecomment-281777440,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'm marking this bug closed and re-opening a new bug with; flawfinder-1.22 output, which is more useful to peruse. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/398#issuecomment-281774332:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/398#issuecomment-281774332,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'm marking this closed pending further comment. I have seen no concrete ; evidence of significant memory leaks in 2.0.x and I've been looking. Clearly we can do much to improve memory use, which is underway in the 2.1 ; development. But this goes more as a ""feature request"" than a bug report -- ; there isn't a bug to fix, but rather a variety of things we need to do to ; improve memory usage. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776397:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776397,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'm marking this closed, pending *someone* to point me to a definition of ; what canonical or unique SMILES should be. Everything I've read indicates ; that such a formal specification does not exist. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1396#issuecomment-281809817:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1396#issuecomment-281809817,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'm marking this closed, pending further comment or obvious bits that ; should be incorporated. I've perused the changes between the Open ; Babel fork and the last OELib iteration. The *vast* majority are changes in whitespace. Many others are changes that have been made in Open Babel (often ; with different approaches). Open Babel isn't OELib anymore -- it's evolved considerably.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1379#issuecomment-281809542:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1379#issuecomment-281809542,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'm marking this closed, since the initial report seems to be fixed. If we have more bond-order problems, let's reopen another bug. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/405#issuecomment-281774474:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/405#issuecomment-281774474,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'm marking this closed. I hadn't noticed the ParseLine output, but that's totally ; unrelated. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/559#issuecomment-281777324:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/559#issuecomment-281777324,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'm marking this closed. It's not a comprehensive test suite yet, but it's getting ; there. The functional tests on SMILES, SMARTS, and CML have uncovered a ; variety of bugs and this will continue to improve. For all intents and purposes, the framework is in good shape now, so this ; feature request is redundant. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1438#issuecomment-281810245:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1438#issuecomment-281810245,3,"['Log', 'test']","['Logged', 'test', 'tests']"
Testability,Logged In: YES ; user_id=21420. I'm marking this entry specifically for queries and adding an entry into the file ; format list for the file format. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1413#issuecomment-281810070:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1413#issuecomment-281810070,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'm marking this request closed. This may have been true of 1.x version of ; Open Babel, but the new error handler is much better. In particular, it's ; possible to redirect and log error messages, and particularly priority levels to ; errors. If there are *particular* complaints (e.g., some of the translators do not offer ; thorough error output), that's a useful feature request. But the feature requested here is certainly in 2.0. IMHO. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1432#issuecomment-281810172:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1432#issuecomment-281810172,2,"['Log', 'log']","['Logged', 'log']"
Testability,"Logged In: YES ; user_id=21420. I'm moving this to a bug report. The Read() method shouldn't segfault. Both methods as you describe should work just fine. So this is a bug, not a ; feature request. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/525#issuecomment-281776597:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/525#issuecomment-281776597,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'm not sure this is a good candidate to fix for 2.0.1. There seem to be a few problems. One is that the molecules you present all ; appear to have 4-bonded aromatic nitrogen. This implicitly has a formal ; charge of +1, which isn't correctly set. Another is that the current aromaticity patterns do not allow such nitrogens ; to be marked as aromatic. Finally, I think the kekulization routines do not properly handle 4-bonded ; aromatic N+. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/516#issuecomment-281776440:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/516#issuecomment-281776440,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. I'm not sure whether this is a silly idea or not. But I've added an initial ; porphyrin pattern to bondtyp.txt and will be committing it to CVS ; momentarily. This won't solve the hydrogen addition issue -- I think that needs a ; separate bug report. And I'll probably need to tinker with the pattern some -- it's currently ; written to assume normal pH -- but it should check to see if some of the ; nitrogens have expicit pH and assign bond orders accordingly. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/470#issuecomment-281775674:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/470#issuecomment-281775674,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'm not sure why obgrep crashes -- that's certainly a good question. However, if you're executing obgrep from a UNIX shell, the ""!"" character ; has a special function and probably isn't doing what you expect. So ""!c"" ; is an escape that's replaced by a string matching the last shell command ; beginning with ""c"" -- e.g.:. I type:. obgrep ""!c"" file.xyz. The shell passes:. obgrep ""cd .."" file.xyz. If you want to invert a SMARTS string, you can use the ""-v"" flag to ; obgrep, which inverts the matching. On the other hand, if you're actually getting obgrep to *crash* rather ; than giving a SMARTS error message, it would help to know more about ; your setup so we can fix the problem. The program should never crash. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/441#issuecomment-281775104:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/441#issuecomment-281775104,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'm now marking this closed. I tried adding that type previously and it ; seemed not to solve the problem -- my mistake, my system wasn't reading ; the updated data file. I've also added a series of IMPVAL for positive carbon atoms similarly. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/453#issuecomment-281775342:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/453#issuecomment-281775342,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'm really going to need the original file to debug this. Bus errors are a real ; problem, and I'd like to address this ASAP. But I could not reproduce this using ; various test files I had around. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/492#issuecomment-281776017:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/492#issuecomment-281776017,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=21420. I'm really wondering if this is some sort of bug with libxml2. There were ; weird errors on Fedora Core Linux 4 with libxml2 and I've been using v.2.6.19 ; on my Mac. I don't know if it's a miscompile with libxml2 (e.g., GCC causes ; problems?) or maybe a bug with the library itself. I'm trying to update to libxml2 2.6.22 now (it's available from a package ; manager) and might try compiling 2.6.24 (the latest) from scratch as well. I'll keep posting to this bug as I have more info. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/535#issuecomment-281776786:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/535#issuecomment-281776786,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. I'm renaming the summary for this. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809763:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809763,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'm seeing this as a feature-request than a bug report. The whitespace is part of ; the format used as a file (e.g., the tab character separates the SMILES title and ; the newline ends the file). So the string from OBConversion::WriteString can be ; sent to a file directly. I'll shortly add code to the CVS head (i.e. for 2.1) that adds an optional ; parameter to WriteString to trim off trailing whitespace at the end of the file/; string. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/507#issuecomment-281776266:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/507#issuecomment-281776266,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'm splitting this bug, otherwise this becomes a big dumping ground for all ; possible bugs in aromatic perception and kekulization. The bug submitter gave the original bug (which is now fixed) and then some ; follow-up examples with 4-valent N+. This bug is now restricted *ONLY* to aromaticity problems with 4-valent N+. Other problems will be opened as separate bugs -- otherwise it'll be ; impossible to track what's fixed and what isn't. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/516#issuecomment-281776444:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/516#issuecomment-281776444,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'm working on this--it's now pretty obvious what's happening, though it may require a few more days to have a fix. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/411#issuecomment-281774549:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/411#issuecomment-281774549,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I've added a comment to the documentation -- the use of the ""unsigned int ; type"" parameter is to allow access based on data type, defined in the ; OBGenericDataType namespace:. http://openbabel.sourceforge.net/api/; namespaceOpenBabel_1_1OBGenericDataType.shtml. If you access data by this means, you are current only going to get one item ; (i.e., the first matched) for OBPairData. If you think there should be a better ; way to do this, we'll need some sort of API change in 2.1 -- please feel free to ; comment on the mailing list. In short, I'm closing this bug -- I've fixed the documentation and the call is ; doing what it's supposed to do. Whether there should be alternative access ; methods is another subject. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/533#issuecomment-281776728:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/533#issuecomment-281776728,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I've committed the change to SetNegativeStereo() -- call it a cut-and-paste ; error on my part. I added the positive/negative flags -- if you think these are unnecessary, ; we can change that. Certainly, I'm not sure why nothing is using ; GetChirality() right now. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/479#issuecomment-281775816:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/479#issuecomment-281775816,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I've fixed this for 2.1 in the CVS development tree. I'd make the change in the ; 2.0.x tree as well, but I'm worried it might break something else. Thanks for the bug report!; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/493#issuecomment-281776024:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/493#issuecomment-281776024,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I've made considerable progress on this. I have the beginnings of a unit test ; set via the Perl module. I'm also working on a way to extend the current test suite into a more robust ; form using the Perl ""Test Anything Protocol"" (TAP). Basically the C++ ; programs will output results like Perl test scripts do (e.g., Perl's ; Test::Harness) and small perl scripts will analyze the output. The benefit is that results will be quite readable for humans, providing more ; detail if things go wrong. But where Perl is available (i.e., almost everywhere) ; the summaries will be much more useful. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1438#issuecomment-281810242:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1438#issuecomment-281810242,6,"['Log', 'Test', 'test']","['Logged', 'Test', 'test']"
Testability,"Logged In: YES ; user_id=21420. I've now added this to the 2.1 SVN trunk, revision 1491. The atom iterators can be specified with:; FOR_DFS_OF_MOL(atom, mol); FOR_BFS_OF_MOL(atom, mol). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1425#issuecomment-281810143:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1425#issuecomment-281810143,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I've thought the Rcov was too short, but don't have any good references, so ; large parts of the table is just as in the original Babel!. I think it's better to stick to a maximum of 5 bonds for phosphorus. I ; thought immediately of PF6- when I saw the max bond limit, but it's really ; an exceptional case, and you could easily argue it's a Lewis acid-base ; complex between F- and PF5 neutral. I worry that setting it to 6 might ; introduce bonding problems in covalent structures?. Not so long from now, I want to move to a OBBondTyper class that will ; gather the ConnectTheDots and PerceiveBondOrder code and can more ; easily have special cases like PF6- or PCl6-. I've changed the covalent radius and it should update soon. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/421#issuecomment-281774706:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/421#issuecomment-281774706,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Ian,. Thanks for all the feedback. I was able to track down the largest source of ; memory use in multi-molecule files. The developer CVS is down at the ; moment, but I'll make sure the fix is in 2.0.1. I'm not sure this will solve all ; memory issues, but it certainly should solve the ""slope"" you found. Many thanks for the persistent feedback -- it wasn't a ""leak"" but more a ; ""stupid memory use"" issue that I eventually was able to find with your ; example file. Best,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776403:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776403,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. In addition to SWIG, I found cxxwrap:. http://cxxwrap.sourceforge.net/. The SourceForge page is somewhat unused, but the linked page has source releases as recent as 2006-01. I've downloaded a ; version and will give it a try. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1429#issuecomment-281810161:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1429#issuecomment-281810161,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. In one case:; N1Cc2[s][s]c(c2c2ccccc12)=S. the BO sum for every S atom is 2. In the other case:; N1c2ccccc2c2c(ssc2C1)=S. the BO sum for the aromatic S atoms is 3. So in that case, it's a strange valence and it brackets the atom. Why does this ; happen? In this case, the bond order assignment places a double bond ; between the aromatic sulfur atoms. I'll investigate why it's doing that later -- I suspect something in kekulize.cpp ; -- it probably needs a special case rule that says that no double bond is ; needed between two aromatic sulfurs. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/550#issuecomment-281777042:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/550#issuecomment-281777042,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. In the CVS development branch openbabel-new-framework I have ; changed babelconfig.h to config.h and config.h is *NOT* installed. #if HAVE_CONFIG_H; #include config.h; #endif. This means that some #defines are needed by headers (e.g., ; HAVE_SSTREAM for the stringstream vs. strstream bits) and must be ; caught by user code. I think this seems to be the consensus solution on the automake/; autoconf mailing lists and with other library installations. I'm marking this bug report closed pending further comment. Ideally new ; comments should go in a new report to simplify bug tracking.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774932:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774932,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. In the current CVS code for the ob-new-framework code (which will ; become version 2.0) the dimensionality is fixed -- OBMol now has ; methods GetDimension() and SetDimension() and the appropriate file ; translators keep track of this (including CML). The ""fictitious C-C bond"" is caused by the call in endMolecule to ; ConnectTheDots() -- which should not be run on 2D data. (Honestly, the ; CML code shouldn't call ConnectTheDots if there's correct bonding data -- ; but that's up to you.) Now, the code property recognizes that the 2D ; molecule should not run ConnectTheDots(). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/439#issuecomment-281775055:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/439#issuecomment-281775055,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Initial wiki is up at http://openbabel.sf.net/wiki/. Need to figure out how to integrate API documentation into current setup, and ; lay out a roadmap to incorporate the existing formats database too. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1440#issuecomment-281810276:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1440#issuecomment-281810276,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. It seems nothing refers to BitGrid in the Open Babel project itself. So this is a ; leftover file from Open Eyes / OELib. I'll remove it. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/423#issuecomment-281774744:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/423#issuecomment-281774744,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. It would really help if I could get a stack backtrace from gdb, e.g. gdb /usr/local/bin/babel; ...; run #command-line options here; ...; bt. This was also reported by R. Guha, but I don't have much information:; http://sourceforge.net/mailarchive/forum.php?; thread_id=9599682&forum_id=47190. For example, have you tried the current CVS development version? Does this ; also happen on FC5?. Since I don't have access to a FC4 machine, it's very hard for me to debug. It ; certainly doesn't happen on the FC3 machine in the SourceForge compile ; farm. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/517#issuecomment-281776461:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/517#issuecomment-281776461,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. It's fixed for me. Marking this closed. Thanks a lot!; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/445#issuecomment-281775187:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/445#issuecomment-281775187,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. MIME command-line flags now exist. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1373#issuecomment-281809473:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1373#issuecomment-281809473,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Marking this closed as discussed below -- a workaround does exist. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/500#issuecomment-281776152:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/500#issuecomment-281776152,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Migrating this to API Feature requests. This also applies to a few other data.cpp methods. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1397#issuecomment-281809835:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1397#issuecomment-281809835,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Mm. That structure totally confused the chains parser. It ran into an infinite ; loop. Surprisingly, that never came up before -- there's no test to ensure an ; atom is never visited twice. I just added a test and while the result is a little strange (it thinks there are ; 3-4 unknown protein residues), it certainly doesn't crash now. I'll commit the change to SVN on the trunk and 2.0.2 branch shortly. I'm marking this as fixed, pending further comment. In two weeks it'll close ; automatically as fixed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/559#issuecomment-281777322:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/559#issuecomment-281777322,3,"['Log', 'test']","['Logged', 'test']"
Testability,Logged In: YES ; user_id=21420. Moving to feature requests.; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1407#issuecomment-281810039:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1407#issuecomment-281810039,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Nick's updated version of the SMILES parser, with OBChiralData output, ; appears to solve the problem. It is part of the 2.1 subversion repository, ; revision 1542 and later. I'm marking this bug ""pending."" Any comment in the next 2 weeks will reopen ; it, otherwise it will close as being fixed automatically. Nick, it'd be great to have more documentation on the OBChiralData code -- ; if you can contribute to that, it would be most appreciated!. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777264:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777264,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. No dtor was implemented for OBNode or OBEdge in the SMARTS; code (very BAD practice). Thus, few of the recursive calls; were properly unwound and freed. Currently, all SMARTS memory leaks are fixed and this seems; to solve overall leaks at this time. New leaks will be added; as new problem reports. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/389#issuecomment-281774192:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/389#issuecomment-281774192,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. No longer particularly useful. Still a good idea to check; warnings before the 2.0 release and clean things up. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/399#issuecomment-281774347:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/399#issuecomment-281774347,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. No, atomtyp.h is the ""fallback data"" which is used when the text files are not ; found. If you edit the atomtyp.txt in the source directory, the header will be ; automatically updated. You can also update the *installed* ""atomtyp.txt"" file, using something like ; this:. emacs /usr/local/share/openbabel/2.0.0/atomtyp.txt. (Or ""sudo emacs"" if the file is installed as root.). The whole reason for having text data files is that they can easily be fixed for ; bugs before the next release. :-). Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/508#issuecomment-281776311:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/508#issuecomment-281776311,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. No, better just to have links in obvious places to at least one location of the original Babel. (Currently the FAQ does.). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1374#issuecomment-281809486:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1374#issuecomment-281809486,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. No, component level grouping is not properly implemented, which *will* go ; in the documentation. What worries me is the crashing -- regardless of input, Open Babel ; shouldn't crash. It looks like I've solved the crash at least for the test cases I've had so far. ; I'd be glad to provide a patch and obviously the latest CVS version on the ; openbabel-new-framework branch will have this fix. I'm marking this PR as ""pending"" and will open a new ""Feature Request"" ; entry for component-level grouping and/or documentation and/or SMARTS ; errors from obgrep about component-level grouping. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775153:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775153,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=21420. No, we don't get a segfault if you misuse map.begin(). That's why I think we should file a SWIG bug report and close this one. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/537#issuecomment-281776835:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/537#issuecomment-281776835,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Nope, I was wrong -- this is a different bug (actually two). Initial [H] atoms were ignored, but they're sometimes needed for ""/"" or ""\"" ; specifications. Also, [H] atoms were omitted even when needed by a ""/"" or ""\"" specification. This is now fixed in the 2.1 SVN repository and will be backported for the ; 2.0.2 release. If you'd like a patch, please let me know. I'm marking this ""pending"" and will auto-close as fixed in 2 weeks if there is ; no further comment. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/556#issuecomment-281777280:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/556#issuecomment-281777280,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Not much code is using GetNumberOfElements() because it's a new ; function. However it *should* return element.size() which is the size of ; the OBElementTable. If your compiled version is returning an empty table, then there's a ; different problem. I don't like the idea of using fixed #s for the number of elements in code. ; The element table *will* change in the future, so the mol2format.cpp ; code needs to use GetNumberOfElements. Let's solve the core problem -- what is causing it to be empty? Does this ; occur with 2005-08-01 snapshot on Linux?. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/465#issuecomment-281775602:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/465#issuecomment-281775602,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. OBExtensionTable now supports this (in the CVS version). It would be ideal to have an -imime &lt;MIME-TYPE&gt; file flag, but this is not implemented yet. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1373#issuecomment-281809472:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1373#issuecomment-281809472,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. OBMol now has methods for getting/setting dimensionality and this is ; respected by ConnectTheDots, PerceiveBondOrders and other methods. It ; currently does not have support for marking the dimensionality of ; conformers or a ""preferred"" 2D or 3D conformer. But there are currently ; few formats that store both 2D and 3D coords -- and with the new ; OBConversion framework, the appropriate dimensionality can be picked ; by the user. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/403#issuecomment-281774424:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/403#issuecomment-281774424,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. OK, I added this to the 2.1 development SMARTS parser in the SVN repository, ; although I haven't tested it thoroughly. If you'd like a patch, please let me know.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/494#issuecomment-281776041:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/494#issuecomment-281776041,2,"['Log', 'test']","['Logged', 'tested']"
Testability,"Logged In: YES ; user_id=21420. OK, I've debugged the problem -- the ReadString() and ReadFile() methods were ; closing the input streams before the next Read() could occur. I've finished changes for 2.0.1 that address this and will commit to CVS now. Marking this closed, pending further comments.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/525#issuecomment-281776598:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/525#issuecomment-281776598,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. OK, a few things here.; 1) I'm not sure how you're treating things, but keep in mind; that Ghemical files use coordinates in nm, not Angstroms. If; I look at the two files attached, they have the same XYZ; coords even though they use different units. The PDB file is; missing a factor of 10x. &quot;Bonds&quot; that are very short are generally ignored, esp. in; PDB files which often have incorrect bond assignments. In any case, yes, it seems like the current PDB code doesn't; import the bonds quite correctly. If I had to take a guess,; it looks like except for bonds to hydrogens, all single; bonds are ignored, all higher-order bonds become single bonds. I'll try to follow up on this more. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/393#issuecomment-281774252:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/393#issuecomment-281774252,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. OK, it's a missing implicit valence rule. Try adding the following to the ; atomtyp.txt file:. IMPVAL [$([#15]=[#8])] 4 # phosphinate (double bond = one valence). That should solve the bug. I'm updating the CVS 2.0.x branch and 2.1.0 HEAD.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/508#issuecomment-281776307:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/508#issuecomment-281776307,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. OK, that was a stupid error and should have been caught sooner. UP was ; declared as the ""/"" specification, but smilesformat.cpp and parsmart.cpp had up ; for one and down for the other!. This is now fixed in the 2.1 SVN. I'm marking this ""pending"" -- if there is no ; further comment, this will close as being fixed in 14 days. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/553#issuecomment-281777243:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/553#issuecomment-281777243,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. OK, the documentation has been updated, so I'm going to move this to ""Feature ; Requests"" for 2.x. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1455#issuecomment-281810457:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1455#issuecomment-281810457,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. OK, this is much further along now. I have working Perl and Python ; bindings using SWIG. I'm hoping that others will take these and run with ; them further since I don't know what functionality needs to be wrapped, ; how to properly test them, etc. To that end, see the openbabel-scripting mailing list:; http://sourceforge.net/mailarchive/forum.php?forum_id=45398; http://lists.sourceforge.net/mailman/listinfo/openbabel-scripting. I'm marking this closed, pending further comment.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1376#issuecomment-281809516:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1376#issuecomment-281809516,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=21420. OK, this is now implemented in the 2.1 SVN repository -- anyone interested can ; ask for a patch (revision 1486). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1466#issuecomment-281810523:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1466#issuecomment-281810523,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. OK, this seems to work now. Marking this closed pending further comment from the submitter.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/447#issuecomment-281775231:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/447#issuecomment-281775231,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Of course the 2005-08-01 snapshot exists:; http://sourceforge.net/project/showfiles.php?; group_id=40728&package_id=154019&release_id=346276. But if you're using the latest CVS version, that's even more recent, ; obviously. I'm marking this fixed, since it seems to work for you now.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/465#issuecomment-281775606:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/465#issuecomment-281775606,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Oh, and if possible, links to example files. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1428#issuecomment-281810157:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1428#issuecomment-281810157,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. One advantage of CMake is that it generates build environments for Mac and ; Windows too. It's possible that this would allow better syncing of the ; Windows and UNIX build environments. But this is not a bug, so I'm switching it to ""Feature Requests."". I'd think it makes sense to offer CMake as an alternative build setup for 2.1 ; -- and let people use whichever they want. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810563:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810563,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Progress is being made on this -- complete documentation should be ; finished by the time of the 2.0 release. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1387#issuecomment-281809682:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1387#issuecomment-281809682,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Quoting from the Daylight SMARTS webpages:. All atomic expressions which are not simple primitives must be enclosed ; in brackets. The default operation is `&' (high precedence ""and""), i.e., ; two adjacent primitives without an intervening logical operator must both ; be true for the expression (or subexpression) to be true. Yes, '!C' is an invalid SMARTS expression. Marking this bug closed, though if you can get a gdb backtrace of the ; crash, I'd appreciate it. Even on invalid SMARTS strings, obgrep shouldn't ; crash. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/441#issuecomment-281775112:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/441#issuecomment-281775112,3,"['Log', 'log']","['Logged', 'logical']"
Testability,"Logged In: YES ; user_id=21420. Reading in a Gaussian zmat would be a bit difficult, as variable ; substitution can be used (and often is). Reading in a cartesian .com file ; might be possible. Reading Gaussian 98 or G03 output is already available in the CVS ; development version. I'd be happy to e-mail you a copy if you don't want ; to grab the CVS version yourself. -Geoff. ghutchis@users.sourceforge.net. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1401#issuecomment-281809875:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1401#issuecomment-281809875,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Relabeling title. Not limited to pharmacophores -- and hard to define ""pharma"" ; molecules algorithmically. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1447#issuecomment-281810378:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1447#issuecomment-281810378,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Rich's site should be:. http://depth-first.com/. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1470#issuecomment-281810573:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1470#issuecomment-281810573,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Richard Gillilan pointed out the following MOE article on bond order assignment.; Many of the concepts are covered by Roger's algorithm, but some of the comments on metals and other non-organic elements would be useful to incorporate. http://www.chemcomp.com/article/bond.htm. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1375#issuecomment-281809499:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1375#issuecomment-281809499,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Right now, testing indicates it's not a problem. The ""roundtrip"" testing ; suite that I use now has a variety of invalid files (including random data ; and size 0 files, files that end early, etc.). This indicates that this ; particular bug is solved. Furthermore, the test suite should indicate if ; this bug reoccurs in a different format. As you say, a format should be able to safely handle invalid files, ; including those with <= 0 atoms. Some of the invalid test files actually ; do claim to have -1 atoms. :-). Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/460#issuecomment-281775571:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/460#issuecomment-281775571,5,"['Log', 'test']","['Logged', 'test', 'testing']"
Testability,Logged In: YES ; user_id=21420. See patch posted:; http://sourceforge.net/mailarchive/forum.php?; thread_id=9412916&forum_id=47190. This will be fixed in a 2.0.1 release. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/509#issuecomment-281776320:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/509#issuecomment-281776320,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Seems to be resolved in the updated Open Eyes contributed; code. A new bug report will be reopened if this comes up again. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/396#issuecomment-281774305:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/396#issuecomment-281774305,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Several bugs have been fixed in the SMILES code. Without; further follow-up, this bug should be closed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/415#issuecomment-281774612:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/415#issuecomment-281774612,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Should be fixed in new code now in CVS -- starts adding &quot;const&quot; to char * variables in appropriate places (e.g. tokenize, GlobalDataBase data, etc.). -GRH. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/395#issuecomment-281774280:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/395#issuecomment-281774280,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Should be fixed with the sync from the last OE-contributed; GPL code. The revised SMARTS parser implements this call.; This should be updated later today, after I confirm it is; free of memory leaks. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/394#issuecomment-281774268:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/394#issuecomment-281774268,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Since the CML code provides some XML parsing, it might be a; better idea to have a minimal/light XML parser incorporated; into the OB codebase. This would make it easier to handle; formats like CRK and other XML-based files. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1390#issuecomment-281809733:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1390#issuecomment-281809733,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Solved. Currently in CVS. Report format now lists molecular mass, exact mass,; chirality and any comment data in the file. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1381#issuecomment-281809575:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1381#issuecomment-281809575,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Some of this seems to have been fixed with earlier bug-fixes (e.g., this PDB ; file has hydrogens, which not all do) related to residue parsing with ; hydrogens. The behavior of cutting to a smaller PDB is a side-effect of limiting bond ; order perception in PDB files >250 atoms, since it's a time-intensive ; behavior. In this case, I've patched the 2.0.x and development code to do this ; regardless -- benchmarking show that it's time-intensive, but hardly a ; significant slowdown in the scheme of things. If you'd like, I can send you a source copy of the latest 2.0.x development ; snapshot, which should solve the problem for you. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/539#issuecomment-281776861:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/539#issuecomment-281776861,2,"['Log', 'benchmark']","['Logged', 'benchmarking']"
Testability,"Logged In: YES ; user_id=21420. Steps 6 and 9 are now absolutely complete.; Step 7 is partially implemented, though a more flexible; system (i.e. reading SMARTS patterns from a file) would be; much more useful. I've compiled the file, but not written; the code.; Step 8 will be the most difficult. Still, the current CVS code does a pretty good job if all; the valences exist (i.e. hydrogens have been added).; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1375#issuecomment-281809501:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1375#issuecomment-281809501,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Thanks for the bug report -- obviously if there's a crash, it's because the ; underlying C++ code is dead, not just the scripting wrapper. :-). This one didn't take long to debug after that report. OBConversion::ReadFile() ; was checking pOutFormat (which was a NULL pointer) rather than pInFormat. Fixed in the CVS version shortly. I can send you a snapshot of the 2.0.1 code ; if you like. Thanks!; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/512#issuecomment-281776364:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/512#issuecomment-281776364,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Thanks for the bug report and fix. Added to openbabel-new-framework ; CVS branch which will form the 2.0-release. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/442#issuecomment-281775125:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/442#issuecomment-281775125,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Thanks for the note. The current CVS development code now mentions ; this and the babel.1 was updated via doxygen-autogeneration. So the next release will have an improved manpage.; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/440#issuecomment-281775075:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/440#issuecomment-281775075,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Thanks for the report. This is a duplicate.; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/502#issuecomment-281776187:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/502#issuecomment-281776187,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Thanks, I just fixed this in the development trunk and 2.0.x branch -- it'll ; definitely go into 2.0.2 soon. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/540#issuecomment-281776878:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/540#issuecomment-281776878,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Thanks. Fixed as soon as I commit to CVS momentarily. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/459#issuecomment-281775563:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/459#issuecomment-281775563,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. The ""Requested Atom Out of Range"" message will never appear in the ; current code since there's an assert right before it -- the code is set to ; kill itself before issuing that message. Interestingly on another test SMI file, if I switch the order of ; components to '([O&X1&-][O&X2]).([#6])' it doesn't crash. I'm still tracing the problem, but thanks for the report -- it's clear there ; are some bugs in the SMARTS code. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775149:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775149,5,"['Log', 'assert', 'test']","['Logged', 'assert', 'test']"
Testability,"Logged In: YES ; user_id=21420. The ""report"" format prints out more than the atomic partial charges, but it does ; do that:. http://openbabel.sourceforge.net/wiki/Open_Babel_report. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1423#issuecomment-281810131:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1423#issuecomment-281810131,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. The CVS code should be a start on this. I'm marking the; feature request &quot;pending&quot; until I can get a bit more; feedback on whether this works. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1395#issuecomment-281809806:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1395#issuecomment-281809806,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. The CVS smiles code now checks for neighboring double bonds before ; outputting ""\"" or ""/"" designations on bonds. I'm marking this bug as fixed.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/474#issuecomment-281775705:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/474#issuecomment-281775705,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. The HEAD was updated with the fixes from 2.0.1 and this seems to have fixed ; the issue. Marking this closed as the bug is fixed.; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/525#issuecomment-281776605:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/525#issuecomment-281776605,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. The Transformation code is used by the command-line babel program and ; isn't particularly intended for user code. (You can, but it's redundant, since ; every function in Transformation is available directly by other means.). As I e-mailed directly, OBMol::Center() certainly works for me in the 2.1 SVN ; trunk. For proof, I took a molecule, called:. m_molecule->Translate(vector3(-1.0f, 0.5f, 0.8f)); // or whatever vector you ; want; // Now I output the molecule, which shows a clear translation. Then:; obConversion.Write(&m_molecule, &cout);; m_molecule->Center();; obConversion.Write(&m_molecule, &cout);. After the call to OBMol::Center() the coordinates are indeed centered ; compared to the coords from the Translate() call. I'm marking this ""Works for Me."" What revision of the SVN code are you using?. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777311:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777311,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. The ViewMol program writes coordinates in Bohr, but the; format indicates the conversion factor between the; coordinates used and Angstrom. The Open Babel code continues to write coordinates in; Angstrom and reads the conversion factor, enabling correct; roundtrip behavior. This also ensures that any ViewMol files; written in Angstrom are read correctly. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/417#issuecomment-281774652:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/417#issuecomment-281774652,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. The Windows GUI binary distribution has been removed (temporarily) -- a ; number of issues were found and are being fixed. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/497#issuecomment-281776115:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/497#issuecomment-281776115,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. The attached atomtyp.txt (with changes in four lines) fixes this bug. No ; code changes are needed. I'm not sure if anyone is relying on previous behavior -- i.e. hydrogens ; are not added to acidic oxygen atoms. But I do believe this is the correct ; behavior -- regular hydrogen addition includes acidic oxygen atoms, but ; pH-corrected (-hpH) addition does not protonate acidic oxygen atoms, ; but does set the formal charge correctly. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/438#issuecomment-281775039:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/438#issuecomment-281775039,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. The code at least on the surface marks H and h as total and implicit counts, ; respectively. An underlying bug made implicit hydrogen count == total hydrogen count.; The current code is exposing H as the number of explicit hydrogens. ; (Whoops). I believe this should fix the bug, although I'm going to do considerable ; testing to be sure this doesn't break other bits before 2.0.1 is released. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/521#issuecomment-281776531:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/521#issuecomment-281776531,2,"['Log', 'test']","['Logged', 'testing']"
Testability,"Logged In: YES ; user_id=21420. The coordinates cannot be saved in SMILES format since this; format only specifies connectivity. However, there should be; non-zero coordinates given for the atoms. What needs to happen is after parsing the SMILES string and; deriving the correct connectivity, there should be a; two-step arrangement:; * Set atom geometries (i.e. bond angles); * Set bond lengths. This will require a bit more work, but I think I have the; beginnings of an &quot;easy&quot; implementation. (Famous last words,; probably.). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809758:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809758,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. The correct C++ code would be something like this:. sp = OBSmartsPattern();; sp.Init(""[#12]"");; sp.Match(obMol);; maplist = sp.GetUMapList();. if (maplist.empty()) {; exit;; }. // Find the matching atoms; for (i = maplist.begin(); i != maplist.end(); i++); {; ... I mean, I don't know enough Python to know why it's not returning a NULL or ; raising an Exception. It may be due to the SWIG wrapper (i.e, translating ; between the C++ vector and the Python structure), and I'm happy to raise ; that as a bug with SWIG. But it's not an underlying library bug because the C++ code works just fine ; IMHO. Is. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/537#issuecomment-281776829:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/537#issuecomment-281776829,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. The covalent radius has been fixed, but the max # bonds won't be fixed ; quite yet. After the bond-typer code goes in, special cases like PF6- and ; PCl6- can be added. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/421#issuecomment-281774708:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/421#issuecomment-281774708,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. The current 2.0.1 CVS version seems to have fixed this particular file, although ; more testing is needed before 2.0.1 is released. I'm marking this closed, pending further comment.; Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/526#issuecomment-281776621:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/526#issuecomment-281776621,2,"['Log', 'test']","['Logged', 'testing']"
Testability,"Logged In: YES ; user_id=21420. The current CVS version has a PerceiveBonds() call that implements steps 6 and 9 and does an OK job already at assigning bonds. Accuracy will improve with implementation of steps 7 &amp; 8, though more testing is certainly needed as this is an adaptation of Roger's described algorithm. Adding the PerceiveBonds() call to appropriate file translators (e.g XYZ, QM codes) will happen soon. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1375#issuecomment-281809498:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1375#issuecomment-281809498,2,"['Log', 'test']","['Logged', 'testing']"
Testability,"Logged In: YES ; user_id=21420. The final z-matrix doesn't seem to be significantly; different from the last cartesian matrix, so this will be; ignored. . Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/401#issuecomment-281774381:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/401#issuecomment-281774381,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. The first part of this ""@"" vs. ""@@"" specification in SMARTS was simply ; something that was apparently left unimplemented. It now works. As for cis/trans, I don't know what the problem is -- certainly the test for ; bond->IsUp and bond->IsDown are being run correctly. I'll debug that ; tomorrow. I suspect that it's trying to match in one direction and finding problems, ; since:; $ echo ""Cl/C=C/Cl"" | tools/obgrep ""Cl\C=C\Cl""; Cl/C=C/Cl. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/553#issuecomment-281777242:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/553#issuecomment-281777242,3,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=21420. The fix for this is now in the development trunk of SVN. The main problem was ; that the code searched for the valence of atoms, but ignored hydrogen atoms -- ; when explicit hydrogens were present, the atoms did not match the valence ; constraints. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/515#issuecomment-281776425:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/515#issuecomment-281776425,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. The internal routines should parse DOS or Mac or UNIX line endings ; without any problem. If there are files with Mac line endings (or anything ; else) that does not import into Open Babel, then that's a *BUG* and I'd ; like to see some example files (e.g., submitted to the test file tracker) or ; a bug report. Support for Mac or DOS line endings on *output* is not currently ; supported and is a good idea, though it may take some work since ; much of the code uses the ""\n"" character automatically. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1406#issuecomment-281810032:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1406#issuecomment-281810032,2,"['Log', 'test']","['Logged', 'test']"
Testability,Logged In: YES ; user_id=21420. The most recent snapshot appears to solve this. I'll be happy to send this to anyone for additional testing before the release of ; 2.0.1 and would prefer to confirm that the crashes are solved. Thanks for the bug report and all the help!; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/517#issuecomment-281776465:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/517#issuecomment-281776465,2,"['Log', 'test']","['Logged', 'testing']"
Testability,"Logged In: YES ; user_id=21420. The new OBMessageHandler class in the CVS code takes care of much of ; this. The format code (and others) need to take advantage of the new ; class more, but support exists to solve this PR. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1393#issuecomment-281809782:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1393#issuecomment-281809782,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. The patch by Richard Gillian adds -hpH that will turn on; adjustment for pH, but currently there's no flag to set the pH. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1385#issuecomment-281809622:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1385#issuecomment-281809622,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. The problem is that 2.0.x has a limit of 2^16 atoms (65536). So reading/; writing the PDB file is fine, but adding hydrogen atoms creates *far* more ; than can be stored in 2^16 atoms. The 2.1 development code will shortly remove this limitation (I'm currently ; coming back from the American Chemical Society meeting, but will handle ; this on Monday). If you'd like to try a beta, please let me know.; Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/568#issuecomment-281777472:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/568#issuecomment-281777472,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. The updated version works perfectly. I'm not sure at the moment why the XML ; formats aren't loading, but nothing crashes and a useful error message comes ; up. So I'm marking this closed.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/575#issuecomment-281777541:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/575#issuecomment-281777541,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. There is a workaround for this, as described in the Daylight manual. [#1] should also provide the functionality you describe and escape questions ; of handling total/implicit hydrogen handling in Open Babel. I'll try to fix this soon, although it won't be in 2.0.1 because such a change ; may likely break other code and needs considerable testing. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/522#issuecomment-281776552:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/522#issuecomment-281776552,2,"['Log', 'test']","['Logged', 'testing']"
Testability,"Logged In: YES ; user_id=21420. There's no error message here, so I have no idea what's going on. But I can attest that OB 2.0 2005-10-01 and 2005-11-16 (2.0.0rc1) *do* ; build cleanly with GCC-4.x on Mac OS X and Linux. If you'd like further help, please e-mail the openbabel-discuss mailing list. Right now, I'm marking this ""pending"" further comment in the next 14 days.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/488#issuecomment-281775968:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/488#issuecomment-281775968,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. There's not a big need for this to be a method itself. OBMol mol;; FOR_BONDS_OF_MOL(b, mol); {; if (b->IsAromatic()); b->SetBO(5); // aromatic bond order; }. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1422#issuecomment-281810129:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1422#issuecomment-281810129,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. There's two things here:; 1) The documentation for NumRotors() -- basically any non-ring bond with ; hybridization of sp2 or sp3 is considered a potentially rotatable bond. So ; there's no ""bond typing"" or anything like that. (There's a feature for generating conformers that can use a database of ; rotatable or non-rotatable bonds, but NumRotors() does not use that.). 2) In some sense, this is more of a feature request -- make NumRotors() a ; more intelligent function. :-). I'll make sure the documentation is updated for 2.0.1. Thanks!; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1455#issuecomment-281810456:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1455#issuecomment-281810456,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This *should* work -- the build environment is set correctly. But for some reason, the format code isn't loaded correctly. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/458#issuecomment-281775551:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/458#issuecomment-281775551,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This actually involved two bugs.; * The AssignFunctionalGroupBonds code in the bond typer was not ; working correctly. This now picks two of the oxygens and assigns ; double bonds.; * (Still to be resolved) The new Kekulize function is stripping bond ; orders off of bonds, once they've been assigned. This is Fabien's code, ; so I'm assigning the resolution of this bug to him and sending him a ; note. Thanks for the report -- hopefully, it'll be fixed soon. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/448#issuecomment-281775235:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/448#issuecomment-281775235,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This appears to be fixed. I will send a copy of the 2.0.1 pre-release to bug ; submitter to see if they agree. Setting this bug to ""pending"" further comment -- otherwise it will close ; automatically as being fixed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/521#issuecomment-281776532:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/521#issuecomment-281776532,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This bug is *closed*. Period. If you would like to report other SMARTS bugs, please, please open ; another bug report. Otherwise, you just complicate the tracking system ; and make it very hard for me to know what bugs remain to be fixed. Sswamida, if you cannot open a new bug report and give an example of ; input that gives you an error, I'm going to assume it's covered by the fix ; I already added that covers *this* bug report. Yes, invalid input should ; receive an error without accessing a NULL atom. That should be fixed ; by the changes I've already made to the development code. If you'd like ; a copy, use CVS or e-mail me. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775158:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775158,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This bug was fixed not long after 1.100.1 and is currently fixed in ; the CVS code (and will be in 1.100.2). So if you're a developer who wants to use libopenbabel, the CVS ; version is likely to work better for you. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/429#issuecomment-281774868:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/429#issuecomment-281774868,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This bug was fixed, correct? I'm marking this ""pending"" so it will close unless ; someone comments and re-opens it. I do believe this is now fixed in the development repository. (Almost typed CVS ; there -- now it's SVN...). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/532#issuecomment-281776720:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/532#issuecomment-281776720,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. This code is not used anywhere in the rest of the Open Babel; code. So let's fix this bug--it won't break our code. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/407#issuecomment-281774487:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/407#issuecomment-281774487,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. This does not seem to be a problem with the current CVS code. ; What version of Open Babel was showing this bug?. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/425#issuecomment-281774783:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/425#issuecomment-281774783,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This has been fixed in the CVS code for 2.1. An option (-xm) exists to produce ; the trailing $$$$ as requested, and the default is that $$$$ will be output only if ; properties exist (i.e., it's more an SDF rather than Molfile). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/498#issuecomment-281776130:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/498#issuecomment-281776130,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. This has been fixed. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/402#issuecomment-281774397:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/402#issuecomment-281774397,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. This has been solved in the current CVS code. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1382#issuecomment-281809577:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1382#issuecomment-281809577,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. This has now been done and the results incorporated into SVN trunk. Only a ; small number of changes have occurred from the original chemical MIME type ; data was input. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1472#issuecomment-281810595:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1472#issuecomment-281810595,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This has now been fixed in the 2.1 development trunk and I'll try to back-port ; the changes to the 2.0.x development as well for 2.0.2. I'm marking this ""pending"" -- if there isn't any further comment, this will ; automatically close as fixed within 2 weeks. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/549#issuecomment-281777023:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/549#issuecomment-281777023,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This is a bug, not a feature request. But it would be quite helpful to have ; the exact SD file you were using to test. If you would rather not post it ; publicly, please send it to me privately so I can resolve the bug. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/444#issuecomment-281775169:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/444#issuecomment-281775169,2,"['Log', 'test']","['Logged', 'test']"
Testability,Logged In: YES ; user_id=21420. This is a duplicate of PR#1229841. https://sourceforge.net/tracker/index.php?; func=detail&aid=1229841&group_id=40728&atid=447448. Marking this closed.; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1459#issuecomment-281810488:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1459#issuecomment-281810488,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This is a feature-request, not really a bug. In the worst-case scenario, 2D coordinates can be generated; using standard structure-diagram generation (SDG) code, e.g.; from the CDK project. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809762:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809762,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This is already done. The key is exactly that, an -xk command line option with a string or -xf with ; a filename will supply keywords to a QM input. One advantage is that GUI programs can set their keywords and use Open ; Babel to write the input file, rather than having to do both. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1437#issuecomment-281810215:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1437#issuecomment-281810215,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This is also true for strcpy -&gt; strncpy, strcat, and a; variety of other calls. Programs like its4, flawfinder and; RATS automate searching for these. I'm attaching its4 (v; 1.1.1) and flawfinder (0.22) output for the code and these; should be addressed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/398#issuecomment-281774326:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/398#issuecomment-281774326,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. This is also true in many of the OBGlobalDataBase classes. These *all* need to be made more bullet-proof. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/462#issuecomment-281775583:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/462#issuecomment-281775583,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This is an old bug. Either check the patch at:; http://sourceforge.net/mailarchive/forum.php? ; thread_id=9412916&forum_id=47190. or grab the snapshot of 2.0.1:; https://sourceforge.net/project/showfiles.php?; group_id=40728&package_id=154019. However, we have heard of other problems with FC4 -- evidently there is ; some sort of crash. (See bug #1447233.). I'm marking this particular bug closed, but if you experience the crash, please ; file comments in the other bug report. Thanks!; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/518#issuecomment-281776484:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/518#issuecomment-281776484,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. This is apparently not possible with the current automake / libtool. I will look ; into ways to handle it in the dlhandler_unix.cpp code itself. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/511#issuecomment-281776354:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/511#issuecomment-281776354,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This is basically resolved under the new conversion framework. The ; UNIX build does not currently handle dynamic loading, but it will not be ; too much more work. Marked ""pending"" since this will be resolved soon.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1372#issuecomment-281808324:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1372#issuecomment-281808324,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. This is being closed as it is superceded by PR#1499615. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1406#issuecomment-281810036:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1406#issuecomment-281810036,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This is being closed. It is now a duplicate -- Cygwin must run as a static ; library, and currently static builds fail on UNIX. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/481#issuecomment-281775830:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/481#issuecomment-281775830,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. This is duplicated in the &quot;task manager&quot; so I'm closing this. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1388#issuecomment-281809697:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1388#issuecomment-281809697,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. This is essentially solved. New CML code (including a full CMLDOM) has ; been contributed and will be integrated soon. The C++ CMLDOM is ; evidently autogenerated to some degree and will thus be updated as ; needed. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1391#issuecomment-281809737:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1391#issuecomment-281809737,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This is fixed in the CVS openbabel-2-0-x branch for incorporation into 2.0.1. ; Not sure if it's fixed yet in the CVS ""head"" but it will be soon. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/458#issuecomment-281775552:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/458#issuecomment-281775552,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This is fixed with an update to the InChI library, now contained in 2.1.0b1 and ; the 2.0 SVN branch. Peter noted this fix to me via e-mail. Marking this closed. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/566#issuecomment-281777443:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/566#issuecomment-281777443,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This is fixed. After Fabien's response, I did further debugging -- the ; problem was that the OBBondTyper was not calling SetKSingle, ; SetKDouble, etc. for functional group bond order assignment. Hence, after the new kekulize code ran through the rings, the ; OBMol::Kekulize() routine saw all remaining bonds as KSingle and set ; them to BO = 1. This is now fixed in CVS. Thanks Fabien!; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/448#issuecomment-281775239:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/448#issuecomment-281775239,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. This is fixed. Thanks very much for your contribution!; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/416#issuecomment-281774626:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/416#issuecomment-281774626,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. This is most decidedly fixed in the current CVS code. (Phew!); -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/404#issuecomment-281774440:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/404#issuecomment-281774440,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This is not a bug. If you want to change the directory of the installation, you can use the ; configure script. ./configure --help. In particular, you may want to use:. ./configure --prefix=/usr/bin. Or... you might just want to wait a few days for Michael to add a Debian ; package for OB-2.0. I suspect he'll do that as soon as he has a chance. In any case, this is not a bug in OB. If you compile your own software on a ; UNIX platform, it typically goes in /usr/local. The OB build environment tells ; you explicitly that you may need to add /usr/local to your library paths. On ; Debian, only packages are allowed to install into /usr. Not a bug, sorry.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/501#issuecomment-281776174:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/501#issuecomment-281776174,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This is not a problem in the current CVS code. It is now a SMARTS ; test case, but I cannot reproduce this with the smartstest code or ; the obgrep program. What version was showing this bug?. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/426#issuecomment-281774797:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/426#issuecomment-281774797,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=21420. This is now a bug. The current method of dealing w/2D molecules ; prevents running ConnectTheDots and PerceiveBondOrders, etc. on ; 2D structures, but 3D structures that are, in fact, flat are not ; handled correctly. So structures *must* be marked as 2D/3D correctly or this will ; continue to become a bigger problem. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/403#issuecomment-281774422:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/403#issuecomment-281774422,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This is now a duplicate, as mentioned by Craig. I'm marking this closed as Craig ; has opened reports for the separate issues. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/552#issuecomment-281777233:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/552#issuecomment-281777233,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This is now changed in the openbabel-new-framework CVS code, although ; it did not make the recent snapshot. Unfortunately, the change needed to support this uncovered a bug in the ; new conversion framework. Marking this closed ""pending"" further comment.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1402#issuecomment-281809879:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1402#issuecomment-281809879,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This is now fixed -- the coordinates are checked, and translated if needed to ; avoid this situation. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/499#issuecomment-281776139:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/499#issuecomment-281776139,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This is now fixed in CVS. To fix in your version, it's a simple edit ; of the atomtyp.txt file. (If this is under UNIX, make sure it's the ; *installed* atomtyp.txt file, as this is the one that's read on ; runtime.). Remove the &quot;#&quot; comment markers where it says &quot;Uncomment&quot; for ; Sybyl typing. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/428#issuecomment-281774845:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/428#issuecomment-281774845,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. This is now fixed in both the SVN trunk for 2.1 and the 2.0.x branch for 2.0.2. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/536#issuecomment-281776790:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/536#issuecomment-281776790,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This is now fixed in the CVS code. If you'd like, I can send you a copy of a snapshot for further testing?. Sorry for taking so long to fix this--pretty simple in the end. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/411#issuecomment-281774550:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/411#issuecomment-281774550,3,"['Log', 'test']","['Logged', 'testing']"
Testability,Logged In: YES ; user_id=21420. This is now fixed in the SVN repository for both 2.0.x and development trunk. ; The bug was caused by an incorrect code change on 5/24. (Oops!). -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/545#issuecomment-281776970:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/545#issuecomment-281776970,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. This is now fixed in the SVN trunk development code. I'd be glad to provide a ; patch to anyone who needs it (revision 1484). I'm now marking this closed.; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/522#issuecomment-281776553:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/522#issuecomment-281776553,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This is now fixed in the current CVS version. The main.cpp code ; uses OBMolVector to store multiple molecules and has code to ; pick a selection of molecules (or one, if firstMol == lastMol). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1384#issuecomment-281809595:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1384#issuecomment-281809595,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This is now possible in the build environment, since individual file ; formats are built separately. Any new file format requiring an XML library ; will be built conditionally. It doesn't make sense for Open Babel itself to write an XML library or ; include such code in the distribution -- such libraries are typically ; already available on a system or can be downloaded easily if an XML ; format is requested. As for the CML code, the full CML DOM is available for an updated ; cml.cpp. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1390#issuecomment-281809734:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1390#issuecomment-281809734,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This is now working. It needs some tinkering, but the current SVN trunk has a workable Ruby interface using SWIG. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1470#issuecomment-281810575:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1470#issuecomment-281810575,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This is pretty much completed. I'm marking this closed -- the ; documentation needs some improvement, but is basically in good shape. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1387#issuecomment-281809683:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1387#issuecomment-281809683,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This isn't a bug. The SMILES format does not contain coordinate ; information and the current version of Open Babel does not do any sort ; of coordinate generation. Other packages, including CORINA can do this.; http://www2.chemie.uni-erlangen.de/software/corina/free_struct.html. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/436#issuecomment-281775011:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/436#issuecomment-281775011,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This isn't an Open Babel error. You must be root to install in /usr/local. Try:; sudo make install. If you have other installation/compilation problems, please report them ; to the openbabel-discuss mailing list. :-). Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/435#issuecomment-281774986:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/435#issuecomment-281774986,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. This particular bug is fixed. It's probably worth revisiting positive/negative ; stereo later. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/479#issuecomment-281775817:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/479#issuecomment-281775817,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. This problem is now fixed. The bug originated with a change of coordinates ; from CDX to an approximate Angstrom scale. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/569#issuecomment-281777482:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/569#issuecomment-281777482,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This seems to be fixed in the current CVS code. I'm marking this report ; closed, pending comments. If similar SMARTS/obgrep errors occur, please open a new bug. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/451#issuecomment-281775322:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/451#issuecomment-281775322,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This should be fixed in the 2.1 SVN repository now. I've also added the ; suggested invalid SMARTS to the tests. I'm marking this ""pending"" -- if there is no other comment, this will be closed ; as fixed. If the bug is not, in fact, fixed, please comment on what's missing ; from the current revision. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/548#issuecomment-281777007:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/548#issuecomment-281777007,2,"['Log', 'test']","['Logged', 'tests']"
Testability,"Logged In: YES ; user_id=21420. This should be fixed in the current CVS tree for 2.0.x and 2.1 now. Marking closed, pending further comments. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/504#issuecomment-281776222:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/504#issuecomment-281776222,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. This should be fixed in the current ob-new-framework development CVS ; code. I'm marking this closed pending review from Jean. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/437#issuecomment-281775026:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/437#issuecomment-281775026,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. This should be fixed now. The problem was that the PDB read methods didn't ever bother to call mol.SetTitle()... this is now the case. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/413#issuecomment-281774593:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/413#issuecomment-281774593,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. This should be re-investigated before the next release and; I'll try to grab many of these along the way. I'm also wondering if some of the warnings have gone away; with the switch to double-precision floats. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/414#issuecomment-281774597:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/414#issuecomment-281774597,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This should now be fixed in the CVS code for 2.0.1. I will send a copy of the ; snapshot to submitter to verify that bug is fixed. I'm marking this bug ""pending"" further comments, otherwise it will be closed ; automatically as being fixed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/523#issuecomment-281776572:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/523#issuecomment-281776572,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. This should now be fixed in the Subversion repository (revision 1568 or later).; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/573#issuecomment-281777517:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/573#issuecomment-281777517,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This should now be fixed in the current development trunk (1393) and will be ; brought back to the 2.0.x branch as well. I'm marking this closed pending further comment. If no one comments, this will ; automatically close in 14 days. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/538#issuecomment-281776851:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/538#issuecomment-281776851,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This turned out to be a bug in the CML ReadMolecule() method in 2.1 ; development. The other file formats are unaffected. This is now fixed in the 2.1 trunk, as of revision 1534.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777312:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777312,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This turned out to be a bug in the CML ReadMolecule() method in 2.1 ; development. The other file formats are unaffected. This should now be fixed in the 2.1 trunk, as of revision 1534. I'm marking this ""pending"" as I was never able to reproduce the bug. If Benoît ; or anyone else posts a comment in the next 14 days, this will reopen. ; Otherwise, it will close automatically as being fixed.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/561#issuecomment-281777359:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/561#issuecomment-281777359,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This turned out to be a really minor change in the MDL format v3000 code in ; 2.0. It's not in the 2.0.0rc1, but it *will* be in 2.0 final, and I promise it'll work ; for MDL v3000. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/484#issuecomment-281775885:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/484#issuecomment-281775885,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. This turned out to be a small fix. Libxml2 is very unhappy attempting to read at ; the end of a file. I'm committing a change to SVN trunk and the 2.0.x branch that checks the state ; of the stream before reading. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/535#issuecomment-281776787:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/535#issuecomment-281776787,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. This was a bug in how the count of molecules was stored. This has been ; fixed in the CVS version now. Thanks for the report!; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/480#issuecomment-281775828:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/480#issuecomment-281775828,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This was probably easy enough that I shouldn't have bothered filing a bug. The configure/Makefile scripts for 2.0.1 should now fix this. If libinchi is ; installed, it will not be re-compiled. Otherwise, it will be compiled and ; installed. This will need some careful testing, but I think it's working correctly. Certainly ; on my developer copy, it doesn't recompile libinchi all the time anymore. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/524#issuecomment-281776581:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/524#issuecomment-281776581,2,"['Log', 'test']","['Logged', 'testing']"
Testability,"Logged In: YES ; user_id=21420. This will be fixed in the next CVS update. All atoms are; considered, and proper mass-weighted coordinates are used. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/407#issuecomment-281774488:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/407#issuecomment-281774488,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This works for me in both the latest 2.0.x development code and the ; development trunk. I believe this was fixed by recent SMILES/aromaticity bug-fixing and should ; be solved when 2.0.2 is released. I'm marking this closed as it works for me, and Craig verifies that his batch of ; aromaticity tests are working too. Any new aromaticity bugs should be ; opened as separate issues. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/546#issuecomment-281776980:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/546#issuecomment-281776980,2,"['Log', 'test']","['Logged', 'tests']"
Testability,"Logged In: YES ; user_id=21420. This works for me in the current CVS version at least on Mac OS X. I've added tests to the ""roundtrip"" suite for invalid molecules like an ; empty file, piles of random data, and eventually invalid formats (e.g., ; XYZ with negative numbers of atoms, etc.). I'd be glad to provide instructions on running the roundtrip suite on other ; platforms. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/460#issuecomment-281775568:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/460#issuecomment-281775568,2,"['Log', 'test']","['Logged', 'tests']"
Testability,"Logged In: YES ; user_id=21420. This would be a bug, as the current MOPAC reader does read charges from ; the output as partial charges. http://sourceforge.net/tracker/index.php?; func=detail&aid=660364&group_id=40728&atid=428740. Could you please e-mail me a test file or two?. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1449#issuecomment-281810403:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1449#issuecomment-281810403,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=21420. Typing problems fixed.; Buckyball kekulization problems fixed (and bonds look; &quot;perfect&quot;). 417 kekulization errors remain (unknown cause currently). SMI problems with 1HVC are from recursing too deeply.; For now, we probably should limit how large an SMI can be,; e.g. 1000 atoms. Mol and BIN problems with 1HVC come from reading the; resulting file.; MOL has a problem with the number of atoms--it stores this; in the file and 1HVC is too big. (Easy fix, we limit how; large a MOL can be!); BIN seems to have other problems. Not obvious where the; problem lies. SMI and FIX problems seem to stem from an underlying memory; corruption bug. --- Summary: ---; 417 kekulize unfixed; 1hvc BIN unfixed; Table SMI/FIX bugs unfixed; Table CACINT unfixed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/410#issuecomment-281774541:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/410#issuecomment-281774541,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Unfortunately, I can't reproduce this and am not allowed to see the original ; data file. The original bug reporter has not been able to give me debugging ; information, making this impossible to solve. For now, I'm marking this as ""Won't Fix"" and closing pending further ; comment. What would be really helpful is the result of:. gdb /usr/local/bin/babel; run /Users/user/Desktop/outputfile.fs -osmi /Users/user/Desktop/; outputfile.smi -s'C[NH2]'; bt. The ""gdb"" program is a debugging tool, the ""run"" command simply runs babel ; with the options listed (as if calling babel on the command-line) and the ""bt"" ; command will give a ""backtrace"" when the bus error occurs. The last bit is a ; sequence of function calls and sometimes line numbers in the code and is ; critical to debugging a problem like this. No confidential information should be passed. But unless we can get some sort of debugging information, I can't solve this ; bug. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/492#issuecomment-281776018:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/492#issuecomment-281776018,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Well, I'm certainly confused too. There's still OBMol::Center() which is the same ; as it ever was. It works for me. Carsten, could you post the code that you're using that's causing you problems? ; Again, I don't know what you mean by a std::map<>. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777309:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777309,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Well, the 2.1 development code now has a second (optional) parameter to ; WriteString to trim whitespace. However, if pybabel wants to be backwards-compatible with 2.0.x, it ; probably should be done inside python. (Besides, this makes the most sense ; with things like SMILES and InChI.). I'm marking this closed, since it's been addressed in the development CVS for ; 2.1.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/507#issuecomment-281776271:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/507#issuecomment-281776271,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Well, there's clearly a bug with www.chemistry-development-kit.org. The formulas are correct (although example 2 isn't in Hill Order, since F is ; last).; But I can pick any of several molecular weight calculators and show that those ; formulas do not give the masses calculated by c-d-k.org. I *can* confirm that before OBMol::AddHydrogens() the masses for the SMILES ; are correct from Open Babel. As of right now, I can't find the bug. But I'm attaching a PNG file with the ; three examples I gave, as well as the first four lines from attype.00.smi:; Oc1ccccc1c2nnco2 BIONET_10A-002 aryl; CC(=O)c1ccc(cc1)n2ccnc2 BIONET_10A-004 aryl; CN(C)/C=C/1\CCNC1=O BIONET_10A-007 hetatm; Cc1ccc(cc1)S(=O)(=O)Oc2ccccc2c3nnco3 BIONET_10A-008 aryl. As I said, OB calculates the formulas correctly (before and after ; AddHydrogens). But for whatever reason, the OBMol::GetMolWt() and OBMol::GetExactMass() ; do not return the correct values after AddHydrogens(). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/534#issuecomment-281776754:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/534#issuecomment-281776754,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. What I meant to say before the browser stopped allowing text... Is there a different resolution you'd like to see? I guess you'd rather see an ; exception or a NULL?. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/537#issuecomment-281776830:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/537#issuecomment-281776830,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Whether or not the file has 3D coordinates, the undefined ; stereochemistry should be respected (e.g., a racemic mixture, the 3D ; coordinates are unreliable, etc.). I think the best solution is to mark the atom as chiral but not with a ; specified stereochemistry:. if (atom.IsChiral() && !atom.HasChiralitySpecified()); ... assume undefined stereochemistry, don't try to perceive chirality. I'm not sure there's a perfect solution here -- we can't assume that every ; file from MDL has chirality perceived.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/484#issuecomment-281775882:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/484#issuecomment-281775882,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. While this is a bug report, let's discuss this on the development list. I'd be ; happy if part of the 2.1 development led to revisiting all the implicit valence ; rules. We certainly have time through the 2.1 release cycle to implement and ; test all these. If you can contribute a set of molecules (better yet a SMILES file) with the ; correct number of hydrogen atoms, I'd be glad to add a unit test and we can ; add to it over time. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/531#issuecomment-281776692:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/531#issuecomment-281776692,3,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=21420. With the new OBConversion framework, this request is obsolete. ; OBExtensionTable no longer exists and the new MIME methods *return* ; values rather than copying into a buffer. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1397#issuecomment-281809837:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1397#issuecomment-281809837,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Without using the Python wrapper, this seems to work for me. Can you verify that this is true on your system? In short, if you do something ; like:. babel test.sdf.gz test.smi. Does that work from the command-line? In short, is the problem with the ; Python wrapper or the library itself. (I'd guess perhaps something in the ; python, but I'm not sure.). Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/562#issuecomment-281777366:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/562#issuecomment-281777366,3,"['Log', 'test']","['Logged', 'test']"
Testability,Logged In: YES ; user_id=21420. Works fine for me when you install under &quot;sudo make install&quot; on ; every Mac OS X I've used on my laptop. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/427#issuecomment-281774823:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/427#issuecomment-281774823,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Works for me on OS X g++ v. 3.3:; gcc version 3.3 20030304 (Apple Computer, Inc. build 1809). Have you tried a ""make clean; make""?. I just added the std:: namespaces to the source file to match the header ; -- this makes it easier for doxygen to generate API documentation. Sometimes when I update a source file or header and the dates are out ; of sync, make will not properly re-compile or update a library, but a ; ""make clean; make"" will fix this. For now, I'm marking this as ""Works for me, close pending response in ; 14 days."". Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/454#issuecomment-281775346:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/454#issuecomment-281775346,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Works for me. I don't know when you checked out the CVS. The ; OBAtom::ClearBond() code is in mol.h and it's definitely compiling cleanly ; for me. Maybe try a ""make clean; make"" after running a ""cvs update"" now?. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/450#issuecomment-281775290:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/450#issuecomment-281775290,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Yes, I like this idea -- having an XML or text file that provides a mapping ; between the filename of a plugin and the format codes/extensions/mime ; types, etc. The file can also indicate if certain plugins are manditory (e.g., the ; API module right now). One way that I can see this working is that the installation process generates ; this file. If the file isn't present, the library can fall back on the current ; behavior. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810179:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810179,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Yes, STL iterators should be used wherever possible. Not all; parts of the code use iterators yet. Furthermore, some of; the internal data structures reference the atom vector; directly. These do things like atom[idx-1] and all of these; will need to be found and fixed. This should be a task for after the next interim beta; release--but definitely before the 2.0.0 release!. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1380#issuecomment-281809552:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1380#issuecomment-281809552,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Yes, the phosphorus should have have an additional hydrogen. I'll investigate ; the atom typing rules for P to see what's wrong here. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/508#issuecomment-281776306:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/508#issuecomment-281776306,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Yes, there was a bug where OBAtom::GetType() would realize an atom ; didn't have a set type and use OBTypeTable::Translate() but not reset it. So higher-level code (e.g., the format conversion code) would call ; OBAtom::GetType and it would screw up the type translation set for the ; format code. As I said, it's fixed in the current CVS code. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/485#issuecomment-281775918:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/485#issuecomment-281775918,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. [D], [v], and [X] are now supported, i.e., as a default of D1, v1, X1 for those ; primitives. Support for the [x#] primitive (i.e., number of ring bonds) has been moved to ; a separate feature request. This bug now focuses on support for the patterns:; [*~*]; [c:c]; [Caa(O)aN]; [Ca(aO)aaN]; [*@;!;*]. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/530#issuecomment-281776668:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/530#issuecomment-281776668,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. duplicate. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1378#issuecomment-281809535:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1378#issuecomment-281809535,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. (sigh). I think the only solution is to split the bindings into multiple pieces -- the source appears to be too big to compile in one piece. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780563:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780563,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. 4-valent nitrogens are no longer a problem in the 2.2. SVN trunk. I am marking this bug closed. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/516#issuecomment-281776445:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/516#issuecomment-281776445,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Actually, I think the question here is why the <NAME> field is being used for a title. Many other file formats expect the title to only be one line. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/766#issuecomment-281781125:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/766#issuecomment-281781125,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Actually, this works reasonably well in 2.1.x releases -- the next record can get lost, but babel recovers and outputs the rest of the file. Babel most certainly does not quit and certainly outputs everything else in the file. I'm marking this bug closed -- it's untrue. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/627#issuecomment-281778506:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/627#issuecomment-281778506,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Actually, you want this patch:. http://openbabel.svn.sourceforge.net/viewvc/openbabel/openbabel/branches/openbabel-2-1-x/src/formats/inchiformat.cpp?r1=1893&r2=1933. I found this bug in testing ChemSpotlight, and made a fix available on the 2-1-x branch. We haven't yet gathered enough bug fixes for a 2.1.1 release, but hopefully one will come soon. There are a few other issues that should be addressed soon. Thanks for your report, it's good because it focuses on a SMILES without chiral information.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/643#issuecomment-281778918:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/643#issuecomment-281778918,2,"['Log', 'test']","['Logged', 'testing']"
Testability,Logged In: YES ; user_id=21420; Originator: NO. All fixed. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/646#issuecomment-281778964:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/646#issuecomment-281778964,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. As Daniel mentioned, this is fixed in SVN trunk. So I'm marking this closed. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/737#issuecomment-281780593:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/737#issuecomment-281780593,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. As discussed below, this feature is now implemented. I'm closing this feature request. Thanks to Chris for adding this!. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1486#issuecomment-281810763:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1486#issuecomment-281810763,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. As far as I can tell, Noel has added this feature with his new OBPython file releases for Windows:. http://sourceforge.net/project/showfiles.php?group_id=40728&package_id=215445. I'm marking this to be closed automatically in 2 weeks if there are no further comments.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1450#issuecomment-281810421:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1450#issuecomment-281810421,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. As mentioned by dliedert, this is fixed for 2.2, so I'm closing this bug. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/724#issuecomment-281780326:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/724#issuecomment-281780326,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. As this bug stands, it affects reading. I did change the behavior for writing files with OBConversion::Write. However, this need not be the case. I'd be happy to say ""all programs should set the locale to C"" but I don't think that's a good solution either. Furthermore, it's a lot of work to change all calls to sscanf, atoi, atof, etc. before the 2.2. release. I think this is an OK workaround until a more complete solution is found. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779361:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779361,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Based on Chris's response, this seems like a duplicate of bug report 1596906, which should be corrected before the 2.1 release. I'm going to mark this one closed as a duplicate.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/615#issuecomment-281778259:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/615#issuecomment-281778259,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. Can someone check that this works for 2.2.0b7?. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780580:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780580,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Can we take this up on the mailing list? It's hard to track what are real bugs and what are questions about your VS2008 build. I believe this particular report is fixed, correct?. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/775#issuecomment-281786098:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/775#issuecomment-281786098,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Can you attach the PDB file? It can be gzip encoded to save space if you like. But without the exact file, it's impossible to know if/where there's a bug in the code. We obviously run many, many PDB files through to prevent crashes, etc. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/616#issuecomment-281778271:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/616#issuecomment-281778271,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. Can you check on these for 2.2.0?. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/720#issuecomment-281780273:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/720#issuecomment-281780273,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Chris addressed this with new changes and a --separate flag, starting with the SVN revision 1760 and later (for version 2.1 development). I'm marking this ""pending"" further comment. Otherwise, this will be marked as solved in 2 weeks. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1473#issuecomment-281810605:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1473#issuecomment-281810605,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Chris solved this in the SVN trunk, revision 1838 or later. I'm marking this closed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/531#issuecomment-281776694:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/531#issuecomment-281776694,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Chris, is there any way you can get a line number or stack backtrace from the debugger to elucidate this? As you say, it's probably a compiler issue. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/600#issuecomment-281778026:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/600#issuecomment-281778026,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Considering today's change (to disable / or \ recognition, I think this becomes a feature request, rather than a bug report. So I'm going to move this to ""Feature requests."" (i.e., need cis/trans support back). I'll also make a note on the wiki. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1479#issuecomment-281810662:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1479#issuecomment-281810662,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Craig and Chris, is this issue resolved? I'm going to mark it ""pending"" further comments from Craig. If it's a bug, please reply so we can resolve this one way or another before 2.2.0. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/743#issuecomment-281780711:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/743#issuecomment-281780711,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Craig, I'm marking this particular bug as closed. There are still cis/trans issues, but as the report is worded, this bug is fixed. Let's make sure to file particular issues, so we can track what's fixed, and what needs work for 2.1. I'd rather see 10 new specific bug reports which we can kill (e.g., like the past SMILES / SMARTS issues) than one overly-general report which is hard to test if every piece is solved yet. So I'm marking this report as ""pending"" further comment from Craig. Otherwise, it will automatically close as fixed in 2 weeks.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/578#issuecomment-281777589:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/578#issuecomment-281777589,2,"['Log', 'test']","['Logged', 'test']"
Testability,Logged In: YES ; user_id=21420; Originator: NO. Duplicates PR#1688251. I'm going to close this one. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/633#issuecomment-281778616:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/633#issuecomment-281778616,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Excellent. I'm going to mark this bug as closed. If Debian has an issue, I hope they will open a new bug. To be safe, can you tell me if any other bindings are still close to causing compile problems?. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780570:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780570,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. First off, the ""second flag"" is listed as deprecated in the MDL CT file documentation. As for the ""critical H0 flag,"" this is indicated as being relevant only to query files. On the other hand, it's probably worth extracting this -- if it's non-zero, it indicates the maximum number of implicit hydrogens + 1 (i.e., 1 => 0 hydrogens, 2=> 1 hydrogen, etc.). Essentially, this would just call OBAtom::SetImplicitValence() after making sure it's been perceived on the remaining atoms. It's certainly easy enough to also write to this field on output (i.e., implicit valence - 1). Whether other software actually reads it is unclear. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/628#issuecomment-281778547:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/628#issuecomment-281778547,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. Fixed in SVN revision 2571 or later. Thanks!. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/770#issuecomment-281781232:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/770#issuecomment-281781232,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Fixed. Switched to FOR_ATOMS_OF_MOL iterator instead -- no off-by-one errors. Ever. :-). Update to revision 1752 or later. I'm marking this closed, pending further comment. Otherwise, it will close automatically in 2 weeks. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/602#issuecomment-281778068:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/602#issuecomment-281778068,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. For reference:; Original InChI:; InChI=1/C16H21NO2/c1-12(2)17-10-14(18)11-19-16-9-5-7-13-6-3-4-8-15(13)16/h3-9,12,14,17-18H,10-11H2,1-2H3/t14-/m1/s1. Translated SMILES:; CC(C)NC[C@@H](COc1cccc2ccccc12)O. Final InChI:; InChI=1/C16H21NO2/c1-12(2)17-10-14(18)11-19-16-9-5-7-13-6-3-4-8-15(13)16/h3-9,12,14,17-18H,10-11H2,1-2H3/t14-/m0/s1. So the error appears to be on the side of reading the InChI. The error is in the SMILES -- the output from SMILES to InChI matches correct stereochemistry. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/657#issuecomment-281779098:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/657#issuecomment-281779098,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. From Craig:. Without even looking at the code (just the SMILES), I would not consider this a showstopper. I'm about 99% confident it's a weird SMILES that hits a O(N^2) or O(N^3) algorithm (not an actual infinite loop) in the symmetry analyzer or the ""tie breaker"" labeling code. The SMILES has dozens of identical or nearly-identical dot-disconnected fragments, and although the symmetry analysis should be fixed to handle this case, it's hardly something we'll encounter every day. It's not a real molecule, but rather some sort of mixture or ""pot of atoms and fragments"". Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/690#issuecomment-281779693:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/690#issuecomment-281779693,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Have you tried this with smaller input files (e.g., a few megs)?; Have you tried converting the huge file without SMARTS filtering?. I believe your issue is less with the Open Babel GUI and more that you're trying to deal with a huge amount of data. (For example, you may not have enough memory to deal with this.). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/615#issuecomment-281778256:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/615#issuecomment-281778256,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Hmm. I wonder if this is just limited to PDB format... But this is relatively easy to fix (it's now in SVN trunk, revision 2613 or later). // Clear all virtual bond data; vector<OBGenericData*> vbonds = mol.GetAllData(OBGenericDataType::VirtualBondData);; mol.DeleteData(vbonds);. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/768#issuecomment-281781207:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/768#issuecomment-281781207,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I believe Marcus has the right answer here -- these are old files from autotools. The name of the formats are different for Cmake and autotools. If there aren't comments, this bug will close as ""works for me."". Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/756#issuecomment-281780983:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/756#issuecomment-281780983,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. I believe Tim's recent changes to SVN trunk solve this -- the pH model will now recognize the separate pKas of each amino acid and will adjust accordingly. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/670#issuecomment-281779328:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/670#issuecomment-281779328,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. I believe that Tim handled this in the current SVN trunk (along with logP). Perhaps it's better to have a shared class for handling group contributions like this?; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1410#issuecomment-281810057:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1410#issuecomment-281810057,2,"['Log', 'log']","['Logged', 'logP']"
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I believe this has been fixed by Noel and Chris. I'm marking this ""pending"" further comment from either of them. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/695#issuecomment-281779786:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/695#issuecomment-281779786,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I can certainly translate from one format to the same format. There are several unit tests which do that. (e.g., SMILES to SMILES, MDL to MDL, etc.). So some more context would really help here. It may be the way you've coded this. You really should be testing the result from FormatFromExt because it might return NULL. So for example:. OBFormat *pFormat = conv.FormatFromExt(myInputFile);; if (!pFormat); // error handling here; if (conv.SetInFormat(pFormat) && conv.SetOutFormat(pFormat)) {; conv.Read(...);; conv.Write(...);; }. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/781#issuecomment-281793164:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/781#issuecomment-281793164,3,"['Log', 'test']","['Logged', 'testing', 'tests']"
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I can confirm this bug, although it's clearly a very recent regression in the 2.1 trunk -- I do roundtrip tests every 1-2 months on the development snapshots and before every full release. If no one else gets to this, I'll fix it tomorrow.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/582#issuecomment-281777667:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/582#issuecomment-281777667,3,"['Log', 'test']","['Logged', 'tests']"
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I can't reproduce this. I use obminimize just about every day. What platform are you using? How did you compile (or install) Open Babel trunk? Did you run ""make install"" before obminimize?. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/726#issuecomment-281780370:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/726#issuecomment-281780370,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I cannot reproduce this bug on the current 2.1 development code. I am marking this ""pending"" further comment. Ideally, it would be great if you could compile one of the latest development snapshots:; http://sourceforge.net/project/showfiles.php?group_id=40728&package_id=154019. If there is no comment on this bug in the next 2 weeks, it will be automatically closed as being fixed sometime in the 2.1 development. Thanks!; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/589#issuecomment-281777833:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/589#issuecomment-281777833,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I cannot reproduce this with the latest SVN trunk on Mac or Linux. I'm marking this ""pending."" Craig, if you can help me reproduce this, we can reopen the bug. Otherwise, I'm not sure that you're using the straight SVN trunk for this. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/582#issuecomment-281777668:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/582#issuecomment-281777668,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I don't actually get a segfault, although I do have plenty of NaN results. (Perhaps the Mac doesn't segfault on divide by zero?) So I can't verify your particular bug. Anyhow, the attached patch seems to fix the problem -- if the length is incredibly small, it pushes atoms 0.1 Ang apart and goes from there. I'm not sure if the angle or torsion or other parameters need similar fixes since this seems to be enough. Please give it a try and let me know if you still get a crash.; -Geoff; File Added: forcefield.patch. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/629#issuecomment-281778552:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/629#issuecomment-281778552,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I just committed a patch which removed the last of DOS-style line endings. But I'll also point out that SVN has ""native"" line endings set for all files:; http://openbabel.svn.sourceforge.net/viewvc/openbabel?view=rev&revision=2347. It's possible that some of your files haven't been otherwise updated. If you get a ""fresh"" checkout, is it better?. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/772#issuecomment-281781275:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/772#issuecomment-281781275,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I just tried on my Mac, and everything seems to work cleanly. Thanks Chris for jogging my memory about that bug. Maybe there's a buggy version of libxml2 on some Linux platforms?; * I have 2.6.16 on my Mac.; * Chris, what version is your pre-built libxml2 DLL?. Marcus, what are you running?. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/762#issuecomment-281781077:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/762#issuecomment-281781077,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I see there has been some compounding problems since this bug report. Here's what I need to know:; 1) Is this only in the Python binding? If so, the latest SVN trunk should fix this -- I can send a test snapshot.; 2) Do we have an idea for the upper bounds on the size of the SWIG code? It is generally large anyway. Thanks!. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780568:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780568,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I think cryos's suggestion is the best solution for now. Let's have OBConversion::Read change the locale to ""C"" during reading and then set it back after completion. A similar change in data.cpp should solve the data files as well. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779357:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779357,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. I think this seems like a good solution. I'm incorporating your fix into SVN trunk for 2.2. Thanks so much for the bug report and the fix!. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/699#issuecomment-281779876:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/699#issuecomment-281779876,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I think your goals are great. It's also very helpful to test the code against different compilers -- we often find errors when comparing Chris's VS2005 builds and the GCC builds. I think it might be easier for you to get quick replies on the mailing list than on the bug tracker. For example, I reply to e-mail generally several times a day, but rarely check in here to post comments. Why don't you just send a message with your recent build results and/or problems to openbabel-devel. We're all there to help you out! (And hopefully make it easier for you to get your long-term goal to happen.). Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/777#issuecomment-281786148:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/777#issuecomment-281786148,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I thought I posted to the bug. I attempted a fix. At the very least, it doesn't crash on Mac or Linux -- but I couldn't reproduce the bug on Mac previously. Does the current SVN trunk work for this?. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/779#issuecomment-281793124:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/779#issuecomment-281793124,1,['Log'],['Logged']
