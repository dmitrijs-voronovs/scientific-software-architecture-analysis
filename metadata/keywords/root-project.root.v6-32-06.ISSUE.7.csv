id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/pull/8372:64,Availability,down,downsteam,64,"Backport of https://github.com/root-project/root/pull/8364. The downsteam code, -- like RooAddPdf::getValV for example -- assume; that a nullptr is passed when no normalization is requested. The case of; an empty norm set is not handled correctly in RooAddPdf::getValV,; leading to wrong results. However, some calling code passes an empty norm set to; RooAbsReal::getVal instead of a `nullptr` in an attempt to disable; normalization. This commit suggests to solve this ambiguity at the highest possible; level: right at the beginning of RooAbsReal::getVal. If the; normalization set is empty, the pointer pointing to it will be set to; `nullptr`. This fixes issue #8307. To give some context: the code in RooAddPdf that doesn't handle the ambiguity correctly was introduced in f6d1543, which was also backported to 6.24. Hence, a backport to 6.24 is necessary also for this PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8372
https://github.com/root-project/root/pull/8373:504,Deployability,Update,Update,504,"`RAttrBox` had too many encapsulations. Use instead directly `RAttrFill` and newly introduced `RAttrBorder` for `RFrame`, `RBox`, `RPave`. Remove `RAttrOnFrame` class which was used in inheritance for the drawables, put ""onframe"" and ""clipping"" attributes directly in the classes where supported. Simplify naming convention. For every attributes aggregation like `RAttrLine` provide only two methods:. RAttrLine &AttrLine() { return fAttrLine; }; const RAttrLine &AttrLine() const { return fAttrLine; }. Update JSROOT to reflect changes on C++ side",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8373
https://github.com/root-project/root/pull/8373:185,Modifiability,inherit,inheritance,185,"`RAttrBox` had too many encapsulations. Use instead directly `RAttrFill` and newly introduced `RAttrBorder` for `RFrame`, `RBox`, `RPave`. Remove `RAttrOnFrame` class which was used in inheritance for the drawables, put ""onframe"" and ""clipping"" attributes directly in the classes where supported. Simplify naming convention. For every attributes aggregation like `RAttrLine` provide only two methods:. RAttrLine &AttrLine() { return fAttrLine; }; const RAttrLine &AttrLine() const { return fAttrLine; }. Update JSROOT to reflect changes on C++ side",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8373
https://github.com/root-project/root/pull/8373:297,Usability,Simpl,Simplify,297,"`RAttrBox` had too many encapsulations. Use instead directly `RAttrFill` and newly introduced `RAttrBorder` for `RFrame`, `RBox`, `RPave`. Remove `RAttrOnFrame` class which was used in inheritance for the drawables, put ""onframe"" and ""clipping"" attributes directly in the classes where supported. Simplify naming convention. For every attributes aggregation like `RAttrLine` provide only two methods:. RAttrLine &AttrLine() { return fAttrLine; }; const RAttrLine &AttrLine() const { return fAttrLine; }. Update JSROOT to reflect changes on C++ side",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8373
https://github.com/root-project/root/issues/8374:14,Availability,fault,fault,14,"It's not your fault, but you opened Pandora's box 🙂; - No c-style casts in any code that gets touched after 2018; - `assert(0)` is useless in production code. Please throw `std::invalid_argument`.; - Don't use legacy iterators and don't define variables outside of the loop.; - Instead, use something like this:; ```c++; for (unsigned int i = 0; i < inFuncList.size(); ++i) {; auto func = static_cast<RooAbsArg*>(inFuncList[i]);; auto coef = static_cast<RooAbsArg*>(inCoefList[i]);; ...; ```; or directly `dynamic_cast` to the required types. If one of those doesn't exist or has the wrong type, issue an error message and throw. _Originally posted by @hageboeck in https://github.com/root-project/root/pull/8368#discussion_r647458786_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8374
https://github.com/root-project/root/issues/8374:605,Availability,error,error,605,"It's not your fault, but you opened Pandora's box 🙂; - No c-style casts in any code that gets touched after 2018; - `assert(0)` is useless in production code. Please throw `std::invalid_argument`.; - Don't use legacy iterators and don't define variables outside of the loop.; - Instead, use something like this:; ```c++; for (unsigned int i = 0; i < inFuncList.size(); ++i) {; auto func = static_cast<RooAbsArg*>(inFuncList[i]);; auto coef = static_cast<RooAbsArg*>(inCoefList[i]);; ...; ```; or directly `dynamic_cast` to the required types. If one of those doesn't exist or has the wrong type, issue an error message and throw. _Originally posted by @hageboeck in https://github.com/root-project/root/pull/8368#discussion_r647458786_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8374
https://github.com/root-project/root/issues/8374:611,Integrability,message,message,611,"It's not your fault, but you opened Pandora's box 🙂; - No c-style casts in any code that gets touched after 2018; - `assert(0)` is useless in production code. Please throw `std::invalid_argument`.; - Don't use legacy iterators and don't define variables outside of the loop.; - Instead, use something like this:; ```c++; for (unsigned int i = 0; i < inFuncList.size(); ++i) {; auto func = static_cast<RooAbsArg*>(inFuncList[i]);; auto coef = static_cast<RooAbsArg*>(inCoefList[i]);; ...; ```; or directly `dynamic_cast` to the required types. If one of those doesn't exist or has the wrong type, issue an error message and throw. _Originally posted by @hageboeck in https://github.com/root-project/root/pull/8368#discussion_r647458786_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8374
https://github.com/root-project/root/issues/8374:244,Modifiability,variab,variables,244,"It's not your fault, but you opened Pandora's box 🙂; - No c-style casts in any code that gets touched after 2018; - `assert(0)` is useless in production code. Please throw `std::invalid_argument`.; - Don't use legacy iterators and don't define variables outside of the loop.; - Instead, use something like this:; ```c++; for (unsigned int i = 0; i < inFuncList.size(); ++i) {; auto func = static_cast<RooAbsArg*>(inFuncList[i]);; auto coef = static_cast<RooAbsArg*>(inCoefList[i]);; ...; ```; or directly `dynamic_cast` to the required types. If one of those doesn't exist or has the wrong type, issue an error message and throw. _Originally posted by @hageboeck in https://github.com/root-project/root/pull/8368#discussion_r647458786_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8374
https://github.com/root-project/root/issues/8374:117,Testability,assert,assert,117,"It's not your fault, but you opened Pandora's box 🙂; - No c-style casts in any code that gets touched after 2018; - `assert(0)` is useless in production code. Please throw `std::invalid_argument`.; - Don't use legacy iterators and don't define variables outside of the loop.; - Instead, use something like this:; ```c++; for (unsigned int i = 0; i < inFuncList.size(); ++i) {; auto func = static_cast<RooAbsArg*>(inFuncList[i]);; auto coef = static_cast<RooAbsArg*>(inCoefList[i]);; ...; ```; or directly `dynamic_cast` to the required types. If one of those doesn't exist or has the wrong type, issue an error message and throw. _Originally posted by @hageboeck in https://github.com/root-project/root/pull/8368#discussion_r647458786_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8374
https://github.com/root-project/root/pull/8375:683,Usability,simpl,simple,683,"Instead of TTree::AddClone + TTree::CopyAddresses, use the data-block; callback mechanism to reset addresses when needed.; We cannot trust TTree::CopyAddresses to do the right thing because; the output branch might be a different kind of branch than the input; branch (e.g. TBranch vs TBranchElement), which leads to the problem; described at #8295 . This fixes #8295 for what regards Snapshot. This PR also adds support for ""data-block"" callbacks, wired to `TChain`'s `TNotify` mechanism, to be able to react to changes of the underlying TTree (e.g. by resetting the input address of Snapshot's output branches). This is a pre-requisite for the fix, but it also makes it relatively simple to implement `DefinePerSample` as requested in #6745 . As a side-effect, since we now don't rely on `TTree::CopyAddresses` in `Snapshot` anymore, this PR should also fix #7727 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8375
https://github.com/root-project/root/pull/8376:375,Testability,test,tests,375,"Drawbacks:; - needs TBranchElement to list TTree as a friend; - only covers the case of TBranchElement/TBranch mismatches (the one; reported in #8295), there might be others; - does not fix other issues with RDF and warnings from CopyAddresses, e.g. #7727. This is an alternative to #8375 that is much more ad-hoc but it fixes the reported problem and should not break other tests, differently from #8375 which introduces an issue in case of clashing branch names.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8376
https://github.com/root-project/root/pull/8378:146,Modifiability,extend,extendedTerm,146,"* introduce new `RooAbsData::sumEntriesW2()` member function to; calculate sum of squared weights of RooDataHist or RooDataSet. * new `RooAbsPdf::extendedTerm(RooAbsData const&, bool weightSquared)`; overload to conveniently compute the extended term also outside the; the `RooNLLVar` class (intended for the new [RooFitDriver](https://github.com/root-project/root/pull/8240)). * always use the faster version of the squared weights summing that was; originally designed for the batch evaluations mode. * helper function in RooAbsPdf implementation to determine is extended; term is needed (also intended for fitting with the new RooFitDriver)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8378
https://github.com/root-project/root/pull/8378:237,Modifiability,extend,extended,237,"* introduce new `RooAbsData::sumEntriesW2()` member function to; calculate sum of squared weights of RooDataHist or RooDataSet. * new `RooAbsPdf::extendedTerm(RooAbsData const&, bool weightSquared)`; overload to conveniently compute the extended term also outside the; the `RooNLLVar` class (intended for the new [RooFitDriver](https://github.com/root-project/root/pull/8240)). * always use the faster version of the squared weights summing that was; originally designed for the batch evaluations mode. * helper function in RooAbsPdf implementation to determine is extended; term is needed (also intended for fitting with the new RooFitDriver)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8378
https://github.com/root-project/root/pull/8378:565,Modifiability,extend,extended,565,"* introduce new `RooAbsData::sumEntriesW2()` member function to; calculate sum of squared weights of RooDataHist or RooDataSet. * new `RooAbsPdf::extendedTerm(RooAbsData const&, bool weightSquared)`; overload to conveniently compute the extended term also outside the; the `RooNLLVar` class (intended for the new [RooFitDriver](https://github.com/root-project/root/pull/8240)). * always use the faster version of the squared weights summing that was; originally designed for the batch evaluations mode. * helper function in RooAbsPdf implementation to determine is extended; term is needed (also intended for fitting with the new RooFitDriver)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8378
https://github.com/root-project/root/pull/8379:418,Availability,error,error,418,"Addresses one of the issues on https://github.com/root-project/root/issues/8365. Namely, TThread::Printf() causing a data race with TApplication::Run(). ```; TApplication::IsRunning() const (TApplication.h:148); TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1029); This conflicts with a previous write of size 1 by thread #1; TApplication::Run(bool) (TApplication.cxx:1622); ```. After this fix, the error disappears from helgrind.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8382:44,Testability,test,tests,44,"Fixes #7584 . WIP, still need to adjust the tests to the new elements of the `Range` object.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8382
https://github.com/root-project/root/pull/8383:140,Modifiability,enhance,enhanced,140,"These engines can be used to obtain the same sequences of numbers as RANLUX generators using recursive subtract-with-borrow steps, but with enhanced performance. Apart from the choice of parameters, the main difference between the various implementations is the way of seeding the initial state of the generator. This commit includes engines for compatibility with:; * the original implementation by Fred James, with parameters for; - luxury level 3 (`p = 223`), also matching `gsl_rng_ranlux`; - luxury level 4 (`p = 389`), also matching `gsl_rng_ranlux389` producing floating point numbers from 24 bits of randomness;; * the family of generators using a second-generation version of the RANLUX algorithm as implemented in the GNU Scientific Library:; - `gsl_rng_ranlxs[012]` using 24 bits per floating point number, and; - `gsl_rng_ranlxd[12]` using 48 bits per floating point number;; * the implementation by Martin Lüscher written in C that uses four states per generator; similar to GSL, there are `ranlxs[012]` with 24 bits per number and `ranlxd[12]` with 48 bits per number; and; * the generators `std::ranlux{24,48}` defined by the C++ standard. The values in the tests were extracted directly from the mentioned implementations, showing that the LCG implementation is equivalent to the RANLUX algorithm. I am not adding compatibility engines for CLHEP because its semantics are very weird: While `CLHEP::RanluxEngine::setSeed` yields the same sequences as the original implementation by James, the seed is treated differently when passed as an argument to the constructor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:149,Performance,perform,performance,149,"These engines can be used to obtain the same sequences of numbers as RANLUX generators using recursive subtract-with-borrow steps, but with enhanced performance. Apart from the choice of parameters, the main difference between the various implementations is the way of seeding the initial state of the generator. This commit includes engines for compatibility with:; * the original implementation by Fred James, with parameters for; - luxury level 3 (`p = 223`), also matching `gsl_rng_ranlux`; - luxury level 4 (`p = 389`), also matching `gsl_rng_ranlux389` producing floating point numbers from 24 bits of randomness;; * the family of generators using a second-generation version of the RANLUX algorithm as implemented in the GNU Scientific Library:; - `gsl_rng_ranlxs[012]` using 24 bits per floating point number, and; - `gsl_rng_ranlxd[12]` using 48 bits per floating point number;; * the implementation by Martin Lüscher written in C that uses four states per generator; similar to GSL, there are `ranlxs[012]` with 24 bits per number and `ranlxd[12]` with 48 bits per number; and; * the generators `std::ranlux{24,48}` defined by the C++ standard. The values in the tests were extracted directly from the mentioned implementations, showing that the LCG implementation is equivalent to the RANLUX algorithm. I am not adding compatibility engines for CLHEP because its semantics are very weird: While `CLHEP::RanluxEngine::setSeed` yields the same sequences as the original implementation by James, the seed is treated differently when passed as an argument to the constructor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:1173,Testability,test,tests,1173,"These engines can be used to obtain the same sequences of numbers as RANLUX generators using recursive subtract-with-borrow steps, but with enhanced performance. Apart from the choice of parameters, the main difference between the various implementations is the way of seeding the initial state of the generator. This commit includes engines for compatibility with:; * the original implementation by Fred James, with parameters for; - luxury level 3 (`p = 223`), also matching `gsl_rng_ranlux`; - luxury level 4 (`p = 389`), also matching `gsl_rng_ranlux389` producing floating point numbers from 24 bits of randomness;; * the family of generators using a second-generation version of the RANLUX algorithm as implemented in the GNU Scientific Library:; - `gsl_rng_ranlxs[012]` using 24 bits per floating point number, and; - `gsl_rng_ranlxd[12]` using 48 bits per floating point number;; * the implementation by Martin Lüscher written in C that uses four states per generator; similar to GSL, there are `ranlxs[012]` with 24 bits per number and `ranlxd[12]` with 48 bits per number; and; * the generators `std::ranlux{24,48}` defined by the C++ standard. The values in the tests were extracted directly from the mentioned implementations, showing that the LCG implementation is equivalent to the RANLUX algorithm. I am not adding compatibility engines for CLHEP because its semantics are very weird: While `CLHEP::RanluxEngine::setSeed` yields the same sequences as the original implementation by James, the seed is treated differently when passed as an argument to the constructor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8385:200,Integrability,depend,dependency,200,"This PR is the second part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce ~three~ two packages: ~RooFit::MultiProcess,~ RooFitZMQ and a ZeroMQ builtin to ease dependency management. ~RooFit::MultiProcess is a task-based parallelization framework.~. ~It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are _partial derivatives_ -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize.~. Edit: We decided to keep this PR for ZeroMQ only, MultiProcess will come in a next PR. The communication between processes is done using ZeroMQ. The ZeroMQ dependency is wrapped in convenience classes contributed by @roelaaij which here are packaged as RooFitZMQ. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:1036,Integrability,depend,dependency,1036,"This PR is the second part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce ~three~ two packages: ~RooFit::MultiProcess,~ RooFitZMQ and a ZeroMQ builtin to ease dependency management. ~RooFit::MultiProcess is a task-based parallelization framework.~. ~It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are _partial derivatives_ -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize.~. Edit: We decided to keep this PR for ZeroMQ only, MultiProcess will come in a next PR. The communication between processes is done using ZeroMQ. The ZeroMQ dependency is wrapped in convenience classes contributed by @roelaaij which here are packaged as RooFitZMQ. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:1050,Integrability,wrap,wrapped,1050,"This PR is the second part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce ~three~ two packages: ~RooFit::MultiProcess,~ RooFitZMQ and a ZeroMQ builtin to ease dependency management. ~RooFit::MultiProcess is a task-based parallelization framework.~. ~It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are _partial derivatives_ -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize.~. Edit: We decided to keep this PR for ZeroMQ only, MultiProcess will come in a next PR. The communication between processes is done using ZeroMQ. The ZeroMQ dependency is wrapped in convenience classes contributed by @roelaaij which here are packaged as RooFitZMQ. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:599,Safety,safe,safety,599,"This PR is the second part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce ~three~ two packages: ~RooFit::MultiProcess,~ RooFitZMQ and a ZeroMQ builtin to ease dependency management. ~RooFit::MultiProcess is a task-based parallelization framework.~. ~It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are _partial derivatives_ -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize.~. Edit: We decided to keep this PR for ZeroMQ only, MultiProcess will come in a next PR. The communication between processes is done using ZeroMQ. The ZeroMQ dependency is wrapped in convenience classes contributed by @roelaaij which here are packaged as RooFitZMQ. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/issues/8387:253,Security,access,accessed,253,"- [x] Checked for duplicates. ### Describe the bug; We encounter a crash during dictionary creation via rootcling when building a specific package against the [ATLAS offline software -- Athena](https://gitlab.cern.ch/atlas/athena/).; The package can be accessed in this public [gitlab repository](https://gitlab.cern.ch/tdado/publiccustomeventsaver). Essentially, the package contains classes which derive from base classes within the Athena software repository, and we need to create dictionary for this package. ### Expected behavior; Build should succeed with dictionary creation. ### To Reproduce; We've been unable trigger this with a simple minimal example. I am attaching instead the log from the build, which contains the crash. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt). The following classes in the package are leading to the crash:; https://gitlab.cern.ch/tdado/publiccustomeventsaver/-/blob/master/HowtoExtendAnalysisTop/CustomEventSaver.h; https://gitlab.cern.ch/atlasphys-top/reco/howtoextendanalysistop/-/blob/master/HowtoExtendAnalysisTop/DynamicKeysEventSaver.h; Both of them derive from base class in athena:; https://gitlab.cern.ch/atlas/athena/-/blob/master/PhysicsAnalysis/TopPhys/xAOD/TopAnalysis/TopAnalysis/EventSaverFlatNtuple.h. ### Setup; <!--; 1. ROOT 6.24; 2. CentOS7; 3. CERN LCG builds, gcc8.; -->. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:691,Testability,log,log,691,"- [x] Checked for duplicates. ### Describe the bug; We encounter a crash during dictionary creation via rootcling when building a specific package against the [ATLAS offline software -- Athena](https://gitlab.cern.ch/atlas/athena/).; The package can be accessed in this public [gitlab repository](https://gitlab.cern.ch/tdado/publiccustomeventsaver). Essentially, the package contains classes which derive from base classes within the Athena software repository, and we need to create dictionary for this package. ### Expected behavior; Build should succeed with dictionary creation. ### To Reproduce; We've been unable trigger this with a simple minimal example. I am attaching instead the log from the build, which contains the crash. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt). The following classes in the package are leading to the crash:; https://gitlab.cern.ch/tdado/publiccustomeventsaver/-/blob/master/HowtoExtendAnalysisTop/CustomEventSaver.h; https://gitlab.cern.ch/atlasphys-top/reco/howtoextendanalysistop/-/blob/master/HowtoExtendAnalysisTop/DynamicKeysEventSaver.h; Both of them derive from base class in athena:; https://gitlab.cern.ch/atlas/athena/-/blob/master/PhysicsAnalysis/TopPhys/xAOD/TopAnalysis/TopAnalysis/EventSaverFlatNtuple.h. ### Setup; <!--; 1. ROOT 6.24; 2. CentOS7; 3. CERN LCG builds, gcc8.; -->. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:640,Usability,simpl,simple,640,"- [x] Checked for duplicates. ### Describe the bug; We encounter a crash during dictionary creation via rootcling when building a specific package against the [ATLAS offline software -- Athena](https://gitlab.cern.ch/atlas/athena/).; The package can be accessed in this public [gitlab repository](https://gitlab.cern.ch/tdado/publiccustomeventsaver). Essentially, the package contains classes which derive from base classes within the Athena software repository, and we need to create dictionary for this package. ### Expected behavior; Build should succeed with dictionary creation. ### To Reproduce; We've been unable trigger this with a simple minimal example. I am attaching instead the log from the build, which contains the crash. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt). The following classes in the package are leading to the crash:; https://gitlab.cern.ch/tdado/publiccustomeventsaver/-/blob/master/HowtoExtendAnalysisTop/CustomEventSaver.h; https://gitlab.cern.ch/atlasphys-top/reco/howtoextendanalysistop/-/blob/master/HowtoExtendAnalysisTop/DynamicKeysEventSaver.h; Both of them derive from base class in athena:; https://gitlab.cern.ch/atlas/athena/-/blob/master/PhysicsAnalysis/TopPhys/xAOD/TopAnalysis/TopAnalysis/EventSaverFlatNtuple.h. ### Setup; <!--; 1. ROOT 6.24; 2. CentOS7; 3. CERN LCG builds, gcc8.; -->. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/pull/8388:213,Availability,error,error,213,"Discovered when running `stressGUI`:; - Fix a couple of PATHs in `stressGUI.cxx`; - Fix the compilation of `Aclock`, `Hello`, and `Tetris` and add support for `Win64` in `test/Makefile.win32`; - Fix the following error with `tutorials/gui/Slider3Demo.C`:; ```; tutorials\gui\Slider3Demo.C:198:21: error: call to member function 'SetPosition' is ambiguous; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8388
https://github.com/root-project/root/pull/8388:297,Availability,error,error,297,"Discovered when running `stressGUI`:; - Fix a couple of PATHs in `stressGUI.cxx`; - Fix the compilation of `Aclock`, `Hello`, and `Tetris` and add support for `Win64` in `test/Makefile.win32`; - Fix the following error with `tutorials/gui/Slider3Demo.C`:; ```; tutorials\gui\Slider3Demo.C:198:21: error: call to member function 'SetPosition' is ambiguous; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8388
https://github.com/root-project/root/pull/8388:171,Testability,test,test,171,"Discovered when running `stressGUI`:; - Fix a couple of PATHs in `stressGUI.cxx`; - Fix the compilation of `Aclock`, `Hello`, and `Tetris` and add support for `Win64` in `test/Makefile.win32`; - Fix the following error with `tutorials/gui/Slider3Demo.C`:; ```; tutorials\gui\Slider3Demo.C:198:21: error: call to member function 'SetPosition' is ambiguous; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8388
https://github.com/root-project/root/issues/8389:288,Availability,error,error,288,"### Describe the bug; One time, I made a typo when writing something in the interpreter that made whole ROOT crash. ### Expected behavior; A warning is issued instead of crashing. ### To Reproduce; ```; root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;; ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rvalue of type 'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'; for(auto& p : pn9) cout << std::bitset<14>(p) << endl;; ^~~~; root.exe: /opt/root_src/interpreter/cling/lib/Interpreter/DynamicLookup.cpp:764: clang::Expr* cling::EvaluateTSynthesizer::BuildDynamicExprInfo(clang::Expr*, bool): Assertion `ExprAddresses && ""Could not build the void* array""' failed.; ```; ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |; | From heads/master@v6-25-01-1189-g1ca221f010 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. ```. ### Additional context; Not sure why, maybe cause I built in 'debug mode' or it is another version, but I have another computer where it does not crash.; ```; root -b; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |; | From heads/master@v6-25-01-1189-g1ca221f010 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;; ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rvalue of type 'basic_ost",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8389
https://github.com/root-project/root/issues/8389:1909,Availability,error,error,1909,"Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |; | From heads/master@v6-25-01-1189-g1ca221f010 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. ```. ### Additional context; Not sure why, maybe cause I built in 'debug mode' or it is another version, but I have another computer where it does not crash.; ```; root -b; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |; | From heads/master@v6-25-01-1189-g1ca221f010 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;; ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rvalue of type 'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'; for(auto& p : pn9) cout << std::bitset<14>(p) << endl;; ^~~~; ROOT_prompt_0:1:20: error: no viable conversion from 'std::basic_ostream<char, std::char_traits<char> >::__ostream_type' (aka 'basic_ostream<char, std::char_traits<char> >') to 'cling::runtime::internal::DynamicExprInfo *'; for(auto& p : pn9) cout << std::bitset<14>(p) << endl;; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/huesof/builds/build-root_src-Desktop-Debug/etc/cling/Interpreter/RuntimeUniverse.h:53:7: note: in instantiation of member function 'cling::runtime::internal::EvaluateT' requested here; int InterpreterGeneratedCodeDiagnosticsMaybeIncorrect;; ^; /home/huesof/builds/build-root_src-Desktop-Debug/etc/cling/Interpreter/DynamicLookupRuntimeUniverse.h:65:44: note: passing argument to parameter 'ExprInfo' here; inline void EvaluateT(DynamicExprInfo* ExprInfo, clang::DeclContext* DC ) {; ^; root [1] .q; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8389
https://github.com/root-project/root/issues/8389:2174,Availability,error,error,2174,"Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |; | From heads/master@v6-25-01-1189-g1ca221f010 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. ```. ### Additional context; Not sure why, maybe cause I built in 'debug mode' or it is another version, but I have another computer where it does not crash.; ```; root -b; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |; | From heads/master@v6-25-01-1189-g1ca221f010 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;; ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rvalue of type 'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'; for(auto& p : pn9) cout << std::bitset<14>(p) << endl;; ^~~~; ROOT_prompt_0:1:20: error: no viable conversion from 'std::basic_ostream<char, std::char_traits<char> >::__ostream_type' (aka 'basic_ostream<char, std::char_traits<char> >') to 'cling::runtime::internal::DynamicExprInfo *'; for(auto& p : pn9) cout << std::bitset<14>(p) << endl;; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/huesof/builds/build-root_src-Desktop-Debug/etc/cling/Interpreter/RuntimeUniverse.h:53:7: note: in instantiation of member function 'cling::runtime::internal::EvaluateT' requested here; int InterpreterGeneratedCodeDiagnosticsMaybeIncorrect;; ^; /home/huesof/builds/build-root_src-Desktop-Debug/etc/cling/Interpreter/DynamicLookupRuntimeUniverse.h:65:44: note: passing argument to parameter 'ExprInfo' here; inline void EvaluateT(DynamicExprInfo* ExprInfo, clang::DeclContext* DC ) {; ^; root [1] .q; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8389
https://github.com/root-project/root/issues/8389:698,Testability,Assert,Assertion,698,"### Describe the bug; One time, I made a typo when writing something in the interpreter that made whole ROOT crash. ### Expected behavior; A warning is issued instead of crashing. ### To Reproduce; ```; root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;; ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rvalue of type 'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'; for(auto& p : pn9) cout << std::bitset<14>(p) << endl;; ^~~~; root.exe: /opt/root_src/interpreter/cling/lib/Interpreter/DynamicLookup.cpp:764: clang::Expr* cling::EvaluateTSynthesizer::BuildDynamicExprInfo(clang::Expr*, bool): Assertion `ExprAddresses && ""Could not build the void* array""' failed.; ```; ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |; | From heads/master@v6-25-01-1189-g1ca221f010 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. ```. ### Additional context; Not sure why, maybe cause I built in 'debug mode' or it is another version, but I have another computer where it does not crash.; ```; root -b; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |; | From heads/master@v6-25-01-1189-g1ca221f010 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;; ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rvalue of type 'basic_ost",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8389
https://github.com/root-project/root/pull/8391:39,Modifiability,refactor,refactor,39,"fixes #7584 . This PR shows a possible refactor of the logic that finally creates the ranges to send to the distributed resources. It works in the following steps:; 1. Split the big HeadNode class in differente head node types according to the original data source (e.g. EntriesHeadNode, TreeHeadNode, in the future also RNTupleHeadNode). Use a factory to get the correct head node type according to user provided arguments to the RDataFrame constructor; 2. Create a different Range type per each head node type. This makes the passing of information more modular, allowing sending only a couple of integers in the case of empty RDF , or adding info about friend trees in the case of a tree based RDF; 3. Better support friends with the recently introduced `ROOT::Internal::TreeUtils` functions; 4. NEW: Cache the created `Range`s for reuse in the same python session. This still doesn't improve the initial startup time discussed in #8232",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8391
https://github.com/root-project/root/pull/8391:804,Performance,Cache,Cache,804,"fixes #7584 . This PR shows a possible refactor of the logic that finally creates the ranges to send to the distributed resources. It works in the following steps:; 1. Split the big HeadNode class in differente head node types according to the original data source (e.g. EntriesHeadNode, TreeHeadNode, in the future also RNTupleHeadNode). Use a factory to get the correct head node type according to user provided arguments to the RDataFrame constructor; 2. Create a different Range type per each head node type. This makes the passing of information more modular, allowing sending only a couple of integers in the case of empty RDF , or adding info about friend trees in the case of a tree based RDF; 3. Better support friends with the recently introduced `ROOT::Internal::TreeUtils` functions; 4. NEW: Cache the created `Range`s for reuse in the same python session. This still doesn't improve the initial startup time discussed in #8232",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8391
https://github.com/root-project/root/pull/8391:55,Testability,log,logic,55,"fixes #7584 . This PR shows a possible refactor of the logic that finally creates the ranges to send to the distributed resources. It works in the following steps:; 1. Split the big HeadNode class in differente head node types according to the original data source (e.g. EntriesHeadNode, TreeHeadNode, in the future also RNTupleHeadNode). Use a factory to get the correct head node type according to user provided arguments to the RDataFrame constructor; 2. Create a different Range type per each head node type. This makes the passing of information more modular, allowing sending only a couple of integers in the case of empty RDF , or adding info about friend trees in the case of a tree based RDF; 3. Better support friends with the recently introduced `ROOT::Internal::TreeUtils` functions; 4. NEW: Cache the created `Range`s for reuse in the same python session. This still doesn't improve the initial startup time discussed in #8232",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8391
https://github.com/root-project/root/pull/8393:45,Availability,failure,failures,45,"To help cling autoloading. Should fix [these failures in Jenkins](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/2889/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/testReport/junit/projectroot/runtutorials/tutorial_dataframe_df024_Display/).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8393
https://github.com/root-project/root/pull/8393:208,Testability,test,testReport,208,"To help cling autoloading. Should fix [these failures in Jenkins](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/2889/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/testReport/junit/projectroot/runtutorials/tutorial_dataframe_df024_Display/).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8393
https://github.com/root-project/root/pull/8397:18,Modifiability,extend,extends,18,"This pull-request extends `RPageSink` and `RPageSource` to provide a common set of performance counters that can be enabled in a subclass via `EnableDefaultMetrics()`. Afterward, the set might be extended in a subclass via a call to `fMetrics.MakeCounter<...>()`. This not only removes boilerplate code from subclasses, but also provides a useful set of regular/computed counters. A subclass, however, is still responsible for updating the base counters. Alternatively, subclasses may still ignore the default set of metrics and provide their own `RNTupleMetrics` object by overriding the `GetMetrics()` member function. Closes issue #8360.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8397
https://github.com/root-project/root/pull/8397:196,Modifiability,extend,extended,196,"This pull-request extends `RPageSink` and `RPageSource` to provide a common set of performance counters that can be enabled in a subclass via `EnableDefaultMetrics()`. Afterward, the set might be extended in a subclass via a call to `fMetrics.MakeCounter<...>()`. This not only removes boilerplate code from subclasses, but also provides a useful set of regular/computed counters. A subclass, however, is still responsible for updating the base counters. Alternatively, subclasses may still ignore the default set of metrics and provide their own `RNTupleMetrics` object by overriding the `GetMetrics()` member function. Closes issue #8360.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8397
https://github.com/root-project/root/pull/8397:83,Performance,perform,performance,83,"This pull-request extends `RPageSink` and `RPageSource` to provide a common set of performance counters that can be enabled in a subclass via `EnableDefaultMetrics()`. Afterward, the set might be extended in a subclass via a call to `fMetrics.MakeCounter<...>()`. This not only removes boilerplate code from subclasses, but also provides a useful set of regular/computed counters. A subclass, however, is still responsible for updating the base counters. Alternatively, subclasses may still ignore the default set of metrics and provide their own `RNTupleMetrics` object by overriding the `GetMetrics()` member function. Closes issue #8360.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8397
https://github.com/root-project/root/pull/8398:70,Modifiability,variab,variable,70,../tree/dataframe/test/dataframe_interface.cxx:451:28: warning: loop; variable ‘col’ of type ‘const string&’ {aka ‘const; std::__cxx11::basic_string<char>&’} binds to a temporary constructed; from type ‘const char* const’ [-Wrange-loop-construct]. I decided to backport this one because it's fixing a real use-after-delete bug in a test.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8398
https://github.com/root-project/root/pull/8398:18,Testability,test,test,18,../tree/dataframe/test/dataframe_interface.cxx:451:28: warning: loop; variable ‘col’ of type ‘const string&’ {aka ‘const; std::__cxx11::basic_string<char>&’} binds to a temporary constructed; from type ‘const char* const’ [-Wrange-loop-construct]. I decided to backport this one because it's fixing a real use-after-delete bug in a test.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8398
https://github.com/root-project/root/pull/8398:332,Testability,test,test,332,../tree/dataframe/test/dataframe_interface.cxx:451:28: warning: loop; variable ‘col’ of type ‘const string&’ {aka ‘const; std::__cxx11::basic_string<char>&’} binds to a temporary constructed; from type ‘const char* const’ [-Wrange-loop-construct]. I decided to backport this one because it's fixing a real use-after-delete bug in a test.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8398
https://github.com/root-project/root/pull/8402:182,Modifiability,extend,extended,182,"The first in the series of two pull-requests to allow users to customize the DAOS object class. This PR applies the required changes to the `RDaosXxx` classes. Also, libdaos_mock is extended to provide an implementation for the object class name to ID conversion functions.; Finally, unneeded `OC_xxx` constants were stripped from libdaos_mock/daos.h; this header should only contain declarations needed for testing. Related to issue #8205.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8402
https://github.com/root-project/root/pull/8402:408,Testability,test,testing,408,"The first in the series of two pull-requests to allow users to customize the DAOS object class. This PR applies the required changes to the `RDaosXxx` classes. Also, libdaos_mock is extended to provide an implementation for the object class name to ID conversion functions.; Finally, unneeded `OC_xxx` constants were stripped from libdaos_mock/daos.h; this header should only contain declarations needed for testing. Related to issue #8205.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8402
https://github.com/root-project/root/pull/8404:711,Testability,test,test,711,"Adds some `RNTupleReader` usage examples. I think a nice goal is that every method has at least one example. Each example should be self-contained and easily copy-pastable for users to tweak as required. Doc example structure:; ```cpp; ~~~ {.cpp}; #include <ROOT/RNTuple.hxx> // all required ROOT headers are included; using ROOT::Experimental::RNTupleReader; // using decls to make the code more readable. #include <iostream> // any other headers. // int main () { implied; auto ntuple = RNTupleReader::Open(""myNTuple"", ""some/file.root"");; std::cout << ""myNTuple has "" << ntuple->GetNEntries() << "" entries\n"";; // } implied; ~~~; ```. To make sure the examples compile and work, I have been writing each in a test repo: https://github.com/mxxo/rntuple-doctests before adding them to the right location. Rendered examples: ; ![image](https://user-images.githubusercontent.com/40000585/121554761-6c31ea80-c9e0-11eb-8540-ab35724d9de3.png); ![image](https://user-images.githubusercontent.com/40000585/121554975-9683a800-c9e0-11eb-8e9a-5320b814bbde.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8404
https://github.com/root-project/root/pull/8406:478,Availability,error,error,478,"Before, if one wanted to slice over mulitple categories in; `RooAbsReal::plotOn`, one had to repeatedly use the Slice command; argument. This is problematic for the keyword pythonizations in pyROOT,; because keyword arguments in python can't be repeated. With this change, it is also not necessary anymore to repeat any command; arguements in RooFit. This will help to solve Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784), as; we can just always throw an error (or issue a warning) if a RooCmdArg is repeated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8406
https://github.com/root-project/root/pull/8407:680,Availability,error,error,680,"gcc 4.8.5 says the template overload is ambiguous:; ```; .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx: In instantiation of 'ROOT::RDF::RResultPtr<typename Helper::Result_t> ROOT::RDF::RInterface<T, V>::Book(Helper&&, const ColumnNames_t&) [with FirstColumn = ROOT::Detail::RDF::RInferredType; OtherColumns = {}; Helper = CounterHelper; Proxied = ROOT::Detail::RDF::RLoopManager; DataSource = void; typename Helper::Result_t = std::__atomic_base<unsigned int>; ROOT::RDF::RInterface<T, V>::ColumnNames_t = std::vector<std::basic_string<char> >]':; .../tree/dataframe/test/dataframe_interface.cxx:765:4: required from here; .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2430:54: error: call of overloaded 'CallCreateActionWithoutColsIfPossible(std::shared_ptr<std::__atomic_base<unsigned int> >&, std::shared_ptr<CounterHelper>&, ROOT::TypeTraits::TypeList<ROOT::Detail::RDF::RInferredType>)' is ambiguous; return CallCreateActionWithoutColsIfPossible<Helper>(resPtr, hPtr, TTraits::TypeList<FirstColumn>{});; ^; .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2430:54: note: candidates are:; .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2738:9: note: decltype ((hPtr->.Exec(0u), ROOT::RDF::RResultPtr<T2>{})) ROOT::RDF::RInterface<T, V>::CallCreateActionWithoutColsIfPossible(const std::shared_ptr<ActionResultType>&, const std::shared_ptr<_Tp1>&, ROOT::TypeTraits::TypeList<ROOT::Detail::RDF::RInferredType>) [with Helper = CounterHelper; ActionResultType = std::__atomic_base<unsigned int>; Proxied = ROOT::Detail::RDF::RLoopManager; DataSource = void; decltype ((hPtr->.Exec(0u), ROOT::RDF::RResultPtr<T2>{})) = ROOT::RDF::RResultPtr<std::__atomic_base<unsigned int> >]; auto CallCreateActionWithoutColsIfPossible(const std::shared_ptr<ActionResultType> &resPtr,; ^; .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2748:4: note: ROOT::RDF::RResultPtr<T2> ROOT::RDF::RInterface<T, V>::CallCreateActionWithoutColsIfPossible(const std::shared_ptr<ActionResultType>&, Others ...) [with Helper = Count",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8407
https://github.com/root-project/root/pull/8407:568,Testability,test,test,568,"gcc 4.8.5 says the template overload is ambiguous:; ```; .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx: In instantiation of 'ROOT::RDF::RResultPtr<typename Helper::Result_t> ROOT::RDF::RInterface<T, V>::Book(Helper&&, const ColumnNames_t&) [with FirstColumn = ROOT::Detail::RDF::RInferredType; OtherColumns = {}; Helper = CounterHelper; Proxied = ROOT::Detail::RDF::RLoopManager; DataSource = void; typename Helper::Result_t = std::__atomic_base<unsigned int>; ROOT::RDF::RInterface<T, V>::ColumnNames_t = std::vector<std::basic_string<char> >]':; .../tree/dataframe/test/dataframe_interface.cxx:765:4: required from here; .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2430:54: error: call of overloaded 'CallCreateActionWithoutColsIfPossible(std::shared_ptr<std::__atomic_base<unsigned int> >&, std::shared_ptr<CounterHelper>&, ROOT::TypeTraits::TypeList<ROOT::Detail::RDF::RInferredType>)' is ambiguous; return CallCreateActionWithoutColsIfPossible<Helper>(resPtr, hPtr, TTraits::TypeList<FirstColumn>{});; ^; .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2430:54: note: candidates are:; .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2738:9: note: decltype ((hPtr->.Exec(0u), ROOT::RDF::RResultPtr<T2>{})) ROOT::RDF::RInterface<T, V>::CallCreateActionWithoutColsIfPossible(const std::shared_ptr<ActionResultType>&, const std::shared_ptr<_Tp1>&, ROOT::TypeTraits::TypeList<ROOT::Detail::RDF::RInferredType>) [with Helper = CounterHelper; ActionResultType = std::__atomic_base<unsigned int>; Proxied = ROOT::Detail::RDF::RLoopManager; DataSource = void; decltype ((hPtr->.Exec(0u), ROOT::RDF::RResultPtr<T2>{})) = ROOT::RDF::RResultPtr<std::__atomic_base<unsigned int> >]; auto CallCreateActionWithoutColsIfPossible(const std::shared_ptr<ActionResultType> &resPtr,; ^; .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2748:4: note: ROOT::RDF::RResultPtr<T2> ROOT::RDF::RInterface<T, V>::CallCreateActionWithoutColsIfPossible(const std::shared_ptr<ActionResultType>&, Others ...) [with Helper = Count",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8407
https://github.com/root-project/root/pull/8411:33,Energy Efficiency,adapt,adapt,33,"Following the changes for Win64, adapt the example in the documentation to use the proper `Longptr_t` type. Thanks @Sergey Linev",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8411
https://github.com/root-project/root/pull/8411:33,Modifiability,adapt,adapt,33,"Following the changes for Win64, adapt the example in the documentation to use the proper `Longptr_t` type. Thanks @Sergey Linev",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8411
https://github.com/root-project/root/pull/8412:1238,Deployability,update,updated,1238,"This PR is the third part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce the RooFit::MultiProcess package. RooFit::MultiProcess is a task-based parallelization framework that will be used to parallelize gradients in RooFit/Minuit2 fits. It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are partial derivatives -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize. The communication between processes is done using ZeroMQ, accessed through convenience functions in RooFitZMQ introduced in #8385. Notes:; - This PR branch is forked off of the branch in #8385, so until that is merged first, I may do some rebasing in this branch, so please be aware of that if you want to check this branch out locally.; - test_Job still fails, it has to be updated to the latest communication framework. With that in mind, this PR is ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8412
https://github.com/root-project/root/pull/8412:586,Safety,safe,safety,586,"This PR is the third part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce the RooFit::MultiProcess package. RooFit::MultiProcess is a task-based parallelization framework that will be used to parallelize gradients in RooFit/Minuit2 fits. It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are partial derivatives -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize. The communication between processes is done using ZeroMQ, accessed through convenience functions in RooFitZMQ introduced in #8385. Notes:; - This PR branch is forked off of the branch in #8385, so until that is merged first, I may do some rebasing in this branch, so please be aware of that if you want to check this branch out locally.; - test_Job still fails, it has to be updated to the latest communication framework. With that in mind, this PR is ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8412
https://github.com/root-project/root/pull/8412:921,Security,access,accessed,921,"This PR is the third part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce the RooFit::MultiProcess package. RooFit::MultiProcess is a task-based parallelization framework that will be used to parallelize gradients in RooFit/Minuit2 fits. It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are partial derivatives -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize. The communication between processes is done using ZeroMQ, accessed through convenience functions in RooFitZMQ introduced in #8385. Notes:; - This PR branch is forked off of the branch in #8385, so until that is merged first, I may do some rebasing in this branch, so please be aware of that if you want to check this branch out locally.; - test_Job still fails, it has to be updated to the latest communication framework. With that in mind, this PR is ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8412
https://github.com/root-project/root/pull/8414:170,Availability,error,error,170,"C++20 does not allow aggregate initialization, i.e. `{ ... }`, if a struct/class; has explicitly defaulted or deleted constructors. This fixes the following; compilation error:. ```; cannot convert ‘<brace-enclosed initializer list>’ to ‘const ROOT::Experimental::Detail::RPageStorage::RSealedPage&’; 411 | pageBuffer = UnsealPage({sealedPageBuffer, bytesOnStorage, pageInfo.fNElements}, *element);; | ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8414
https://github.com/root-project/root/pull/8416:531,Availability,failure,failures,531,"Make ConditionalObservables accept RooRealVars directly by perfect forwarding all arguments to the RooArgSet constructor. Using ConditionalObservables command argument failed with some Python 3; versions due to ownership problems with the RooArgSet. This commit suggests to always make a copy of (or move) the passed RooArgSet,; and at the same time to change the function signature such that; it can also accept an arbitrary number of observables directly via; variadic templates. This change is to fix the RooFit python tutorial failures in the current nightlies. Note, @Harshalzzzzzzz, that you can reuse this pattern also for the other RooGlobalFuncs, as it also makes calling them more pythonic. For example, with ConditionalObservables, you can now use a tuple (or list) of arguments:; ```Python; effPdf.fitTo(data, ConditionalObservables=(x, y)); ```; instead of:; ```Python; effPdf.fitTo(data, ConditionalObservables=ROOT.RooArgSet(x, y)); ```; although the latter syntax still works because it will use the RooArgSet copy constructor (or move constructor if it's a temporary and detected as such in Python). So we don't break any existing code. This example is from the [rf702_efficiencyfit_2D.py](https://github.com/root-project/root/blob/master/tutorials/roofit/rf702_efficiencyfit_2D.py) tutorial.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8416
https://github.com/root-project/root/pull/8416:1088,Safety,detect,detected,1088,"Make ConditionalObservables accept RooRealVars directly by perfect forwarding all arguments to the RooArgSet constructor. Using ConditionalObservables command argument failed with some Python 3; versions due to ownership problems with the RooArgSet. This commit suggests to always make a copy of (or move) the passed RooArgSet,; and at the same time to change the function signature such that; it can also accept an arbitrary number of observables directly via; variadic templates. This change is to fix the RooFit python tutorial failures in the current nightlies. Note, @Harshalzzzzzzz, that you can reuse this pattern also for the other RooGlobalFuncs, as it also makes calling them more pythonic. For example, with ConditionalObservables, you can now use a tuple (or list) of arguments:; ```Python; effPdf.fitTo(data, ConditionalObservables=(x, y)); ```; instead of:; ```Python; effPdf.fitTo(data, ConditionalObservables=ROOT.RooArgSet(x, y)); ```; although the latter syntax still works because it will use the RooArgSet copy constructor (or move constructor if it's a temporary and detected as such in Python). So we don't break any existing code. This example is from the [rf702_efficiencyfit_2D.py](https://github.com/root-project/root/blob/master/tutorials/roofit/rf702_efficiencyfit_2D.py) tutorial.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8416
https://github.com/root-project/root/pull/8417:20,Availability,failure,failures,20,This addresses test failures like:; ```; 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:497,Availability,Error,Error,497,This addresses test failures like:; ```; 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:602,Availability,error,error,602,This addresses test failures like:; ```; 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:1080,Availability,Error,Error,1080,This addresses test failures like:; ```; 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:1185,Availability,error,error,1185,This addresses test failures like:; ```; 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:1660,Availability,Error,Error,1660,This addresses test failures like:; ```; 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:1765,Availability,error,error,1765,This addresses test failures like:; ```; 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:337,Integrability,interface,interface,337,This addresses test failures like:; ```; 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:591,Integrability,message,message,591,This addresses test failures like:; ```; 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:920,Integrability,interface,interface,920,This addresses test failures like:; ```; 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:1174,Integrability,message,message,1174,This addresses test failures like:; ```; 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:1500,Integrability,interface,interface,1500,This addresses test failures like:; ```; 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:1754,Integrability,message,message,1754,This addresses test failures like:; ```; 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:451,Performance,load,load,451,This addresses test failures like:; ```; 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:1034,Performance,load,load,1034,This addresses test failures like:; ```; 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:1614,Performance,load,load,1614,This addresses test failures like:; ```; 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:15,Testability,test,test,15,This addresses test failures like:; ```; 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:50,Testability,Test,Test,50,This addresses test failures like:; ```; 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:627,Testability,Test,Test,627,This addresses test failures like:; ```; 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:1210,Testability,Test,Test,1210,This addresses test failures like:; ```; 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/issues/8418:941,Availability,error,error,941,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. scripts `aa1.cpp`. #include <cmath>; #include <iostream>; using namespace std;. void aa1(); {; cout<<""as""<<endl;; }. on Mac OS X 10.15; running with ; `root aa1.cpp` OK. ; `g++ aa1.cpp 'root-config --libs --cflags' ` OK. ; but ; `root aa1.cpp+` not OK. ; ```; root[000000]:>; Processing aa1.cpp+...; Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so; In file included from input_line_9:6:; In file included from ././aa1.cpp:1:; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace; using ::signbit;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace; using ::fpclassify;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace; using ::isfinite;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace; using ::isinf;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace; using ::isnan;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace; using ::isnormal;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no memb",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1115,Availability,error,error,1115,"ql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. scripts `aa1.cpp`. #include <cmath>; #include <iostream>; using namespace std;. void aa1(); {; cout<<""as""<<endl;; }. on Mac OS X 10.15; running with ; `root aa1.cpp` OK. ; `g++ aa1.cpp 'root-config --libs --cflags' ` OK. ; but ; `root aa1.cpp+` not OK. ; ```; root[000000]:>; Processing aa1.cpp+...; Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so; In file included from input_line_9:6:; In file included from ././aa1.cpp:1:; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace; using ::signbit;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace; using ::fpclassify;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace; using ::isfinite;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace; using ::isinf;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace; using ::isnan;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace; using ::isnormal;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace; using ::isgreater;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1295,Availability,error,error,1295,".; -->. ### Describe the bug. scripts `aa1.cpp`. #include <cmath>; #include <iostream>; using namespace std;. void aa1(); {; cout<<""as""<<endl;; }. on Mac OS X 10.15; running with ; `root aa1.cpp` OK. ; `g++ aa1.cpp 'root-config --libs --cflags' ` OK. ; but ; `root aa1.cpp+` not OK. ; ```; root[000000]:>; Processing aa1.cpp+...; Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so; In file included from input_line_9:6:; In file included from ././aa1.cpp:1:; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace; using ::signbit;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace; using ::fpclassify;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace; using ::isfinite;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace; using ::isinf;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace; using ::isnan;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace; using ::isnormal;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace; using ::isgreater;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace; using ::isgreaterequal;; ...; Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1471,Availability,error,error,1471," with ; `root aa1.cpp` OK. ; `g++ aa1.cpp 'root-config --libs --cflags' ` OK. ; but ; `root aa1.cpp+` not OK. ; ```; root[000000]:>; Processing aa1.cpp+...; Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so; In file included from input_line_9:6:; In file included from ././aa1.cpp:1:; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace; using ::signbit;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace; using ::fpclassify;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace; using ::isfinite;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace; using ::isinf;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace; using ::isnan;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace; using ::isnormal;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace; using ::isgreater;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace; using ::isgreaterequal;; ...; Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1641,Availability,error,error,1641,"OSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so; In file included from input_line_9:6:; In file included from ././aa1.cpp:1:; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace; using ::signbit;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace; using ::fpclassify;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace; using ::isfinite;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace; using ::isinf;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace; using ::isnan;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace; using ::isnormal;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace; using ::isgreater;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace; using ::isgreaterequal;; ...; Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1811,Availability,error,error,1811,"e/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace; using ::signbit;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace; using ::fpclassify;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace; using ::isfinite;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace; using ::isinf;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace; using ::isnan;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace; using ::isnormal;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace; using ::isgreater;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace; using ::isgreaterequal;; ...; Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I""/Users/chenxu/software/install2/include/healpix_cxx/"" ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1987,Availability,error,error,1987,"onda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace; using ::fpclassify;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace; using ::isfinite;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace; using ::isinf;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace; using ::isnan;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace; using ::isnormal;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace; using ::isgreater;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace; using ::isgreaterequal;; ...; Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed!; ```. ### Expect",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2165,Availability,error,error,2165," ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace; using ::isfinite;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace; using ::isinf;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace; using ::isnan;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace; using ::isnormal;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace; using ::isgreater;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace; using ::isgreaterequal;; ...; Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed!; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2260,Availability,Error,Error,2260,"::isfinite;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace; using ::isinf;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace; using ::isnan;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace; using ::isnormal;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace; using ::isgreater;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace; using ::isgreaterequal;; ...; Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed!; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run you",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:3479,Deployability,install,install,3479,"conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace; using ::isnan;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace; using ::isnormal;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace; using ::isgreater;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace; using ::isgreaterequal;; ...; Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed!; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup. 1. ROOT version 6.24.00; 2. OS X 10.15; 3. conda install. ### Additional context; It's a bug for Mac for a long time even in other softwares.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:574,Modifiability,config,config,574,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. scripts `aa1.cpp`. #include <cmath>; #include <iostream>; using namespace std;. void aa1(); {; cout<<""as""<<endl;; }. on Mac OS X 10.15; running with ; `root aa1.cpp` OK. ; `g++ aa1.cpp 'root-config --libs --cflags' ` OK. ; but ; `root aa1.cpp+` not OK. ; ```; root[000000]:>; Processing aa1.cpp+...; Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so; In file included from input_line_9:6:; In file included from ././aa1.cpp:1:; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace; using ::signbit;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace; using ::fpclassify;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace; using ::isfinite;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace; using ::isinf;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace; using ::isnan;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace; using ::isnormal;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no memb",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:3068,Usability,clear,clear,3068,"conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace; using ::isnan;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace; using ::isnormal;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace; using ::isgreater;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace; using ::isgreaterequal;; ...; Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed!; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup. 1. ROOT version 6.24.00; 2. OS X 10.15; 3. conda install. ### Additional context; It's a bug for Mac for a long time even in other softwares.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/pull/8420:165,Availability,error,errors,165,"Do not allow to start sandbox or zygote processes, disable extensions.; Reduce from 9 to 4 number of required processes with chromium 90. May help to solve sporadic errors with `webgui_ping` test on ` pcepsft11`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8420
https://github.com/root-project/root/pull/8420:72,Energy Efficiency,Reduce,Reduce,72,"Do not allow to start sandbox or zygote processes, disable extensions.; Reduce from 9 to 4 number of required processes with chromium 90. May help to solve sporadic errors with `webgui_ping` test on ` pcepsft11`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8420
https://github.com/root-project/root/pull/8420:22,Modifiability,sandbox,sandbox,22,"Do not allow to start sandbox or zygote processes, disable extensions.; Reduce from 9 to 4 number of required processes with chromium 90. May help to solve sporadic errors with `webgui_ping` test on ` pcepsft11`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8420
https://github.com/root-project/root/pull/8420:22,Testability,sandbox,sandbox,22,"Do not allow to start sandbox or zygote processes, disable extensions.; Reduce from 9 to 4 number of required processes with chromium 90. May help to solve sporadic errors with `webgui_ping` test on ` pcepsft11`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8420
https://github.com/root-project/root/pull/8420:191,Testability,test,test,191,"Do not allow to start sandbox or zygote processes, disable extensions.; Reduce from 9 to 4 number of required processes with chromium 90. May help to solve sporadic errors with `webgui_ping` test on ` pcepsft11`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8420
https://github.com/root-project/root/issues/8422:76,Usability,clear,clear,76,"### Is your feature request related to a problem? Please describe.; <!--; A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]""; -->; I think it would be cool to have support for Vector Fields in the Graphics and math libraries. Where you enter a vector field equation f(x, y) or f(x, y, z) and get a visualisation of a that vector field. ; ### Describe the solution you'd like; <!--; A clear and concise description of what you want to happen.; -->; If it's okay, i'd like to try and make this. I think it would be a cool addition.; ### Describe alternatives you've considered; <!--; Can you think of alternative solutions or features?; -->; A cobination of TF2 and other ROOT native libraries such as TLine, TArrow, TVector2, TVector3 etc.; ### Additional context; <!--; Add any other context or screenshots about the feature requested here.; -->; I couldn't find anything like this existing so I just assume that it doesn't exist. Let me know if I'm wrong. ![image](https://user-images.githubusercontent.com/62119114/121907935-d1614500-cd2c-11eb-8d34-2cfc6b049d10.png); Something like this is the image I have in my brain.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8422
https://github.com/root-project/root/issues/8422:439,Usability,clear,clear,439,"### Is your feature request related to a problem? Please describe.; <!--; A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]""; -->; I think it would be cool to have support for Vector Fields in the Graphics and math libraries. Where you enter a vector field equation f(x, y) or f(x, y, z) and get a visualisation of a that vector field. ; ### Describe the solution you'd like; <!--; A clear and concise description of what you want to happen.; -->; If it's okay, i'd like to try and make this. I think it would be a cool addition.; ### Describe alternatives you've considered; <!--; Can you think of alternative solutions or features?; -->; A cobination of TF2 and other ROOT native libraries such as TLine, TArrow, TVector2, TVector3 etc.; ### Additional context; <!--; Add any other context or screenshots about the feature requested here.; -->; I couldn't find anything like this existing so I just assume that it doesn't exist. Let me know if I'm wrong. ![image](https://user-images.githubusercontent.com/62119114/121907935-d1614500-cd2c-11eb-8d34-2cfc6b049d10.png); Something like this is the image I have in my brain.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8422
https://github.com/root-project/root/issues/8424:596,Availability,down,download,596,"```; ROOT Version: root-5-34-00-patches; Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa); Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5); ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:; ```; ./configure --prefix=/software/root/5.34; ```; But it fails to find the LZ4 library as shown below in the output of the `configure` command:; ```; Checking whether to build included lz4 ... yes; ```; Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:; ```; ./configure --prefix=/software/root/5.34 --disable-builtin-lz4; ```; But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):; ```; Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml.; ```; I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:; ```; cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>; ```; Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,; Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:863,Availability,down,download,863,"```; ROOT Version: root-5-34-00-patches; Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa); Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5); ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:; ```; ./configure --prefix=/software/root/5.34; ```; But it fails to find the LZ4 library as shown below in the output of the `configure` command:; ```; Checking whether to build included lz4 ... yes; ```; Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:; ```; ./configure --prefix=/software/root/5.34 --disable-builtin-lz4; ```; But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):; ```; Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml.; ```; I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:; ```; cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>; ```; Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,; Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:32,Deployability,patch,patches,32,"```; ROOT Version: root-5-34-00-patches; Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa); Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5); ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:; ```; ./configure --prefix=/software/root/5.34; ```; But it fails to find the LZ4 library as shown below in the output of the `configure` command:; ```; Checking whether to build included lz4 ... yes; ```; Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:; ```; ./configure --prefix=/software/root/5.34 --disable-builtin-lz4; ```; But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):; ```; Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml.; ```; I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:; ```; cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>; ```; Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,; Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:177,Deployability,install,install,177,"```; ROOT Version: root-5-34-00-patches; Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa); Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5); ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:; ```; ./configure --prefix=/software/root/5.34; ```; But it fails to find the LZ4 library as shown below in the output of the `configure` command:; ```; Checking whether to build included lz4 ... yes; ```; Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:; ```; ./configure --prefix=/software/root/5.34 --disable-builtin-lz4; ```; But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):; ```; Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml.; ```; I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:; ```; cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>; ```; Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,; Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:1588,Deployability,install,installation-without-internet-access,1588,"```; ROOT Version: root-5-34-00-patches; Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa); Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5); ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:; ```; ./configure --prefix=/software/root/5.34; ```; But it fails to find the LZ4 library as shown below in the output of the `configure` command:; ```; Checking whether to build included lz4 ... yes; ```; Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:; ```; ./configure --prefix=/software/root/5.34 --disable-builtin-lz4; ```; But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):; ```; Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml.; ```; I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:; ```; cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>; ```; Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,; Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:255,Modifiability,config,configure,255,"```; ROOT Version: root-5-34-00-patches; Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa); Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5); ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:; ```; ./configure --prefix=/software/root/5.34; ```; But it fails to find the LZ4 library as shown below in the output of the `configure` command:; ```; Checking whether to build included lz4 ... yes; ```; Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:; ```; ./configure --prefix=/software/root/5.34 --disable-builtin-lz4; ```; But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):; ```; Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml.; ```; I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:; ```; cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>; ```; Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,; Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:282,Modifiability,config,configure,282,"```; ROOT Version: root-5-34-00-patches; Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa); Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5); ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:; ```; ./configure --prefix=/software/root/5.34; ```; But it fails to find the LZ4 library as shown below in the output of the `configure` command:; ```; Checking whether to build included lz4 ... yes; ```; Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:; ```; ./configure --prefix=/software/root/5.34 --disable-builtin-lz4; ```; But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):; ```; Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml.; ```; I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:; ```; cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>; ```; Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,; Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:401,Modifiability,config,configure,401,"```; ROOT Version: root-5-34-00-patches; Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa); Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5); ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:; ```; ./configure --prefix=/software/root/5.34; ```; But it fails to find the LZ4 library as shown below in the output of the `configure` command:; ```; Checking whether to build included lz4 ... yes; ```; Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:; ```; ./configure --prefix=/software/root/5.34 --disable-builtin-lz4; ```; But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):; ```; Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml.; ```; I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:; ```; cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>; ```; Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,; Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:658,Modifiability,config,configure,658,"```; ROOT Version: root-5-34-00-patches; Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa); Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5); ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:; ```; ./configure --prefix=/software/root/5.34; ```; But it fails to find the LZ4 library as shown below in the output of the `configure` command:; ```; Checking whether to build included lz4 ... yes; ```; Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:; ```; ./configure --prefix=/software/root/5.34 --disable-builtin-lz4; ```; But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):; ```; Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml.; ```; I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:; ```; cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>; ```; Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,; Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:682,Modifiability,config,configure,682,"```; ROOT Version: root-5-34-00-patches; Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa); Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5); ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:; ```; ./configure --prefix=/software/root/5.34; ```; But it fails to find the LZ4 library as shown below in the output of the `configure` command:; ```; Checking whether to build included lz4 ... yes; ```; Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:; ```; ./configure --prefix=/software/root/5.34 --disable-builtin-lz4; ```; But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):; ```; Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml.; ```; I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:; ```; cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>; ```; Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,; Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:797,Modifiability,config,configure,797,"```; ROOT Version: root-5-34-00-patches; Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa); Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5); ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:; ```; ./configure --prefix=/software/root/5.34; ```; But it fails to find the LZ4 library as shown below in the output of the `configure` command:; ```; Checking whether to build included lz4 ... yes; ```; Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:; ```; ./configure --prefix=/software/root/5.34 --disable-builtin-lz4; ```; But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):; ```; Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml.; ```; I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:; ```; cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>; ```; Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,; Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:1618,Security,access,access,1618,"```; ROOT Version: root-5-34-00-patches; Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa); Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5); ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:; ```; ./configure --prefix=/software/root/5.34; ```; But it fails to find the LZ4 library as shown below in the output of the `configure` command:; ```; Checking whether to build included lz4 ... yes; ```; Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:; ```; ./configure --prefix=/software/root/5.34 --disable-builtin-lz4; ```; But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):; ```; Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml.; ```; I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:; ```; cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>; ```; Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,; Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/pull/8425:274,Deployability,update,updated,274,"# This Pull request:. ## Changes or fixes:. I fixed the issue, where if no value for entry was provided, it would automatically set to 0. This has the result that the user has many outputs that correspond to the 0th entry. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #8300",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:244,Testability,test,tested,244,"# This Pull request:. ## Changes or fixes:. I fixed the issue, where if no value for entry was provided, it would automatically set to 0. This has the result that the user has many outputs that correspond to the 0th entry. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #8300",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8427:1593,Deployability,update,update,1593,"### More detailed description of main commit (1st commit). This commit addresses Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784) (from 2010, oldest open RooFit ""bug""!). Emit warning message in RooCmdConfig when multiple named arguments of; the same type are encountered, for which no chaining behavior is; defined. To make the warning message more clear, a map is implemeted to look up; the name of the function in the `RooFit` namespace that is used to; create the repeated RooCmdArg. Usually, the names of the argument and; the name of the function that created it are identical, but there are; exceptions that are hardcoded in this map. Furthermore, a warning message is also emitted for the commands that; have a defined chaining behavior (`Import`, `Link`, and `Slice`), where; the alternatives that take a `std::map` with the multiple commands is; suggested. This is done to encourage RooFit code that can be easily; ported to Python if desired, because chainig command arguments with the; same name is not possible in Python RooFit (commands are passed as; keyword arguments, which can't be repeated). Having such a warning message also helps users that try to chain more; commands than `RooAbsReal::plotOn` can digest. They will get the; solution in the warning message instead of having to ask in the forum,; which happend for example in [this forum post](https://root-forum.cern.ch/t/simultaneous-fit-with-8-pdfs-using-roosimultaneous-and-roodataset/45331). ### Quick description of other commits. * commit 1:; * main commit explianed above; * commit 2 - 4:; * update RooFit code to not trigger the warnings; * commit 5:; * update RooFit C tutorial files to not trigger the warnings; * Python tutorials can only be updated after pythonizations for `Import`, `Link`, and `Slice`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8427
https://github.com/root-project/root/pull/8427:1656,Deployability,update,update,1656,"### More detailed description of main commit (1st commit). This commit addresses Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784) (from 2010, oldest open RooFit ""bug""!). Emit warning message in RooCmdConfig when multiple named arguments of; the same type are encountered, for which no chaining behavior is; defined. To make the warning message more clear, a map is implemeted to look up; the name of the function in the `RooFit` namespace that is used to; create the repeated RooCmdArg. Usually, the names of the argument and; the name of the function that created it are identical, but there are; exceptions that are hardcoded in this map. Furthermore, a warning message is also emitted for the commands that; have a defined chaining behavior (`Import`, `Link`, and `Slice`), where; the alternatives that take a `std::map` with the multiple commands is; suggested. This is done to encourage RooFit code that can be easily; ported to Python if desired, because chainig command arguments with the; same name is not possible in Python RooFit (commands are passed as; keyword arguments, which can't be repeated). Having such a warning message also helps users that try to chain more; commands than `RooAbsReal::plotOn` can digest. They will get the; solution in the warning message instead of having to ask in the forum,; which happend for example in [this forum post](https://root-forum.cern.ch/t/simultaneous-fit-with-8-pdfs-using-roosimultaneous-and-roodataset/45331). ### Quick description of other commits. * commit 1:; * main commit explianed above; * commit 2 - 4:; * update RooFit code to not trigger the warnings; * commit 5:; * update RooFit C tutorial files to not trigger the warnings; * Python tutorials can only be updated after pythonizations for `Import`, `Link`, and `Slice`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8427
https://github.com/root-project/root/pull/8427:1747,Deployability,update,updated,1747,"### More detailed description of main commit (1st commit). This commit addresses Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784) (from 2010, oldest open RooFit ""bug""!). Emit warning message in RooCmdConfig when multiple named arguments of; the same type are encountered, for which no chaining behavior is; defined. To make the warning message more clear, a map is implemeted to look up; the name of the function in the `RooFit` namespace that is used to; create the repeated RooCmdArg. Usually, the names of the argument and; the name of the function that created it are identical, but there are; exceptions that are hardcoded in this map. Furthermore, a warning message is also emitted for the commands that; have a defined chaining behavior (`Import`, `Link`, and `Slice`), where; the alternatives that take a `std::map` with the multiple commands is; suggested. This is done to encourage RooFit code that can be easily; ported to Python if desired, because chainig command arguments with the; same name is not possible in Python RooFit (commands are passed as; keyword arguments, which can't be repeated). Having such a warning message also helps users that try to chain more; commands than `RooAbsReal::plotOn` can digest. They will get the; solution in the warning message instead of having to ask in the forum,; which happend for example in [this forum post](https://root-forum.cern.ch/t/simultaneous-fit-with-8-pdfs-using-roosimultaneous-and-roodataset/45331). ### Quick description of other commits. * commit 1:; * main commit explianed above; * commit 2 - 4:; * update RooFit code to not trigger the warnings; * commit 5:; * update RooFit C tutorial files to not trigger the warnings; * Python tutorials can only be updated after pythonizations for `Import`, `Link`, and `Slice`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8427
https://github.com/root-project/root/pull/8427:204,Integrability,message,message,204,"### More detailed description of main commit (1st commit). This commit addresses Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784) (from 2010, oldest open RooFit ""bug""!). Emit warning message in RooCmdConfig when multiple named arguments of; the same type are encountered, for which no chaining behavior is; defined. To make the warning message more clear, a map is implemeted to look up; the name of the function in the `RooFit` namespace that is used to; create the repeated RooCmdArg. Usually, the names of the argument and; the name of the function that created it are identical, but there are; exceptions that are hardcoded in this map. Furthermore, a warning message is also emitted for the commands that; have a defined chaining behavior (`Import`, `Link`, and `Slice`), where; the alternatives that take a `std::map` with the multiple commands is; suggested. This is done to encourage RooFit code that can be easily; ported to Python if desired, because chainig command arguments with the; same name is not possible in Python RooFit (commands are passed as; keyword arguments, which can't be repeated). Having such a warning message also helps users that try to chain more; commands than `RooAbsReal::plotOn` can digest. They will get the; solution in the warning message instead of having to ask in the forum,; which happend for example in [this forum post](https://root-forum.cern.ch/t/simultaneous-fit-with-8-pdfs-using-roosimultaneous-and-roodataset/45331). ### Quick description of other commits. * commit 1:; * main commit explianed above; * commit 2 - 4:; * update RooFit code to not trigger the warnings; * commit 5:; * update RooFit C tutorial files to not trigger the warnings; * Python tutorials can only be updated after pythonizations for `Import`, `Link`, and `Slice`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8427
https://github.com/root-project/root/pull/8427:357,Integrability,message,message,357,"### More detailed description of main commit (1st commit). This commit addresses Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784) (from 2010, oldest open RooFit ""bug""!). Emit warning message in RooCmdConfig when multiple named arguments of; the same type are encountered, for which no chaining behavior is; defined. To make the warning message more clear, a map is implemeted to look up; the name of the function in the `RooFit` namespace that is used to; create the repeated RooCmdArg. Usually, the names of the argument and; the name of the function that created it are identical, but there are; exceptions that are hardcoded in this map. Furthermore, a warning message is also emitted for the commands that; have a defined chaining behavior (`Import`, `Link`, and `Slice`), where; the alternatives that take a `std::map` with the multiple commands is; suggested. This is done to encourage RooFit code that can be easily; ported to Python if desired, because chainig command arguments with the; same name is not possible in Python RooFit (commands are passed as; keyword arguments, which can't be repeated). Having such a warning message also helps users that try to chain more; commands than `RooAbsReal::plotOn` can digest. They will get the; solution in the warning message instead of having to ask in the forum,; which happend for example in [this forum post](https://root-forum.cern.ch/t/simultaneous-fit-with-8-pdfs-using-roosimultaneous-and-roodataset/45331). ### Quick description of other commits. * commit 1:; * main commit explianed above; * commit 2 - 4:; * update RooFit code to not trigger the warnings; * commit 5:; * update RooFit C tutorial files to not trigger the warnings; * Python tutorials can only be updated after pythonizations for `Import`, `Link`, and `Slice`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8427
https://github.com/root-project/root/pull/8427:685,Integrability,message,message,685,"### More detailed description of main commit (1st commit). This commit addresses Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784) (from 2010, oldest open RooFit ""bug""!). Emit warning message in RooCmdConfig when multiple named arguments of; the same type are encountered, for which no chaining behavior is; defined. To make the warning message more clear, a map is implemeted to look up; the name of the function in the `RooFit` namespace that is used to; create the repeated RooCmdArg. Usually, the names of the argument and; the name of the function that created it are identical, but there are; exceptions that are hardcoded in this map. Furthermore, a warning message is also emitted for the commands that; have a defined chaining behavior (`Import`, `Link`, and `Slice`), where; the alternatives that take a `std::map` with the multiple commands is; suggested. This is done to encourage RooFit code that can be easily; ported to Python if desired, because chainig command arguments with the; same name is not possible in Python RooFit (commands are passed as; keyword arguments, which can't be repeated). Having such a warning message also helps users that try to chain more; commands than `RooAbsReal::plotOn` can digest. They will get the; solution in the warning message instead of having to ask in the forum,; which happend for example in [this forum post](https://root-forum.cern.ch/t/simultaneous-fit-with-8-pdfs-using-roosimultaneous-and-roodataset/45331). ### Quick description of other commits. * commit 1:; * main commit explianed above; * commit 2 - 4:; * update RooFit code to not trigger the warnings; * commit 5:; * update RooFit C tutorial files to not trigger the warnings; * Python tutorials can only be updated after pythonizations for `Import`, `Link`, and `Slice`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8427
https://github.com/root-project/root/pull/8427:1153,Integrability,message,message,1153,"### More detailed description of main commit (1st commit). This commit addresses Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784) (from 2010, oldest open RooFit ""bug""!). Emit warning message in RooCmdConfig when multiple named arguments of; the same type are encountered, for which no chaining behavior is; defined. To make the warning message more clear, a map is implemeted to look up; the name of the function in the `RooFit` namespace that is used to; create the repeated RooCmdArg. Usually, the names of the argument and; the name of the function that created it are identical, but there are; exceptions that are hardcoded in this map. Furthermore, a warning message is also emitted for the commands that; have a defined chaining behavior (`Import`, `Link`, and `Slice`), where; the alternatives that take a `std::map` with the multiple commands is; suggested. This is done to encourage RooFit code that can be easily; ported to Python if desired, because chainig command arguments with the; same name is not possible in Python RooFit (commands are passed as; keyword arguments, which can't be repeated). Having such a warning message also helps users that try to chain more; commands than `RooAbsReal::plotOn` can digest. They will get the; solution in the warning message instead of having to ask in the forum,; which happend for example in [this forum post](https://root-forum.cern.ch/t/simultaneous-fit-with-8-pdfs-using-roosimultaneous-and-roodataset/45331). ### Quick description of other commits. * commit 1:; * main commit explianed above; * commit 2 - 4:; * update RooFit code to not trigger the warnings; * commit 5:; * update RooFit C tutorial files to not trigger the warnings; * Python tutorials can only be updated after pythonizations for `Import`, `Link`, and `Slice`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8427
https://github.com/root-project/root/pull/8427:1292,Integrability,message,message,1292,"### More detailed description of main commit (1st commit). This commit addresses Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784) (from 2010, oldest open RooFit ""bug""!). Emit warning message in RooCmdConfig when multiple named arguments of; the same type are encountered, for which no chaining behavior is; defined. To make the warning message more clear, a map is implemeted to look up; the name of the function in the `RooFit` namespace that is used to; create the repeated RooCmdArg. Usually, the names of the argument and; the name of the function that created it are identical, but there are; exceptions that are hardcoded in this map. Furthermore, a warning message is also emitted for the commands that; have a defined chaining behavior (`Import`, `Link`, and `Slice`), where; the alternatives that take a `std::map` with the multiple commands is; suggested. This is done to encourage RooFit code that can be easily; ported to Python if desired, because chainig command arguments with the; same name is not possible in Python RooFit (commands are passed as; keyword arguments, which can't be repeated). Having such a warning message also helps users that try to chain more; commands than `RooAbsReal::plotOn` can digest. They will get the; solution in the warning message instead of having to ask in the forum,; which happend for example in [this forum post](https://root-forum.cern.ch/t/simultaneous-fit-with-8-pdfs-using-roosimultaneous-and-roodataset/45331). ### Quick description of other commits. * commit 1:; * main commit explianed above; * commit 2 - 4:; * update RooFit code to not trigger the warnings; * commit 5:; * update RooFit C tutorial files to not trigger the warnings; * Python tutorials can only be updated after pythonizations for `Import`, `Link`, and `Slice`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8427
https://github.com/root-project/root/pull/8427:370,Usability,clear,clear,370,"### More detailed description of main commit (1st commit). This commit addresses Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784) (from 2010, oldest open RooFit ""bug""!). Emit warning message in RooCmdConfig when multiple named arguments of; the same type are encountered, for which no chaining behavior is; defined. To make the warning message more clear, a map is implemeted to look up; the name of the function in the `RooFit` namespace that is used to; create the repeated RooCmdArg. Usually, the names of the argument and; the name of the function that created it are identical, but there are; exceptions that are hardcoded in this map. Furthermore, a warning message is also emitted for the commands that; have a defined chaining behavior (`Import`, `Link`, and `Slice`), where; the alternatives that take a `std::map` with the multiple commands is; suggested. This is done to encourage RooFit code that can be easily; ported to Python if desired, because chainig command arguments with the; same name is not possible in Python RooFit (commands are passed as; keyword arguments, which can't be repeated). Having such a warning message also helps users that try to chain more; commands than `RooAbsReal::plotOn` can digest. They will get the; solution in the warning message instead of having to ask in the forum,; which happend for example in [this forum post](https://root-forum.cern.ch/t/simultaneous-fit-with-8-pdfs-using-roosimultaneous-and-roodataset/45331). ### Quick description of other commits. * commit 1:; * main commit explianed above; * commit 2 - 4:; * update RooFit code to not trigger the warnings; * commit 5:; * update RooFit C tutorial files to not trigger the warnings; * Python tutorials can only be updated after pythonizations for `Import`, `Link`, and `Slice`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8427
https://github.com/root-project/root/issues/8428:192,Usability,simpl,simple,192,"This is seen in https://cdcvs.fnal.gov/redmine/issues/25893 and is triggered by a change in CLHEP::Hep3Vector (from 3 individual members to a single array) that is stored in a sub-object of a simple object (no collection involved, it works in that case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8428
https://github.com/root-project/root/pull/8429:0,Modifiability,Extend,Extend,0,"Extend the support for a rule that applies to several data members (and thus currently is applied as the 'object level') to; the case of a split object embedded within a split subobject of an object (previous it worked only for the collection case). This fixes issue #8428 , see also https://cdcvs.fnal.gov/redmine/issues/25893. This PR fixes #8428",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8429
https://github.com/root-project/root/pull/8430:990,Deployability,Configurat,Configuration,990,"## Description; Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress; - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries; - [x] Parser function for extracting the model information and weights and instantiate a RModel Object ; - [x] Support for Keras Sequential API Models ; - [x] Support for Keras Functional API Models ; - [x] Supports Dense (with relu activation),ReLU and Permute Layers ; - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root); - [x] Header file for the function ; - [x] Function implementation ; ; ## Checklist:; - [x] tested changes locally; - [x] Parser. ## Tests; - [x] Emit Files for generating header files; - [x] Tests for Parser; - [x] CMake Configuration for tests. ## Documentation ; - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:358,Integrability,depend,dependency,358,"## Description; Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress; - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries; - [x] Parser function for extracting the model information and weights and instantiate a RModel Object ; - [x] Support for Keras Sequential API Models ; - [x] Support for Keras Functional API Models ; - [x] Supports Dense (with relu activation),ReLU and Permute Layers ; - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root); - [x] Header file for the function ; - [x] Function implementation ; ; ## Checklist:; - [x] tested changes locally; - [x] Parser. ## Tests; - [x] Emit Files for generating header files; - [x] Tests for Parser; - [x] CMake Configuration for tests. ## Documentation ; - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:677,Modifiability,Layers,Layers,677,"## Description; Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress; - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries; - [x] Parser function for extracting the model information and weights and instantiate a RModel Object ; - [x] Support for Keras Sequential API Models ; - [x] Support for Keras Functional API Models ; - [x] Supports Dense (with relu activation),ReLU and Permute Layers ; - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root); - [x] Header file for the function ; - [x] Function implementation ; ; ## Checklist:; - [x] tested changes locally; - [x] Parser. ## Tests; - [x] Emit Files for generating header files; - [x] Tests for Parser; - [x] CMake Configuration for tests. ## Documentation ; - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:990,Modifiability,Config,Configuration,990,"## Description; Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress; - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries; - [x] Parser function for extracting the model information and weights and instantiate a RModel Object ; - [x] Support for Keras Sequential API Models ; - [x] Support for Keras Functional API Models ; - [x] Supports Dense (with relu activation),ReLU and Permute Layers ; - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root); - [x] Header file for the function ; - [x] Function implementation ; ; ## Checklist:; - [x] tested changes locally; - [x] Parser. ## Tests; - [x] Emit Files for generating header files; - [x] Tests for Parser; - [x] CMake Configuration for tests. ## Documentation ; - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:352,Safety,avoid,avoid,352,"## Description; Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress; - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries; - [x] Parser function for extracting the model information and weights and instantiate a RModel Object ; - [x] Support for Keras Sequential API Models ; - [x] Support for Keras Functional API Models ; - [x] Supports Dense (with relu activation),ReLU and Permute Layers ; - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root); - [x] Header file for the function ; - [x] Function implementation ; ; ## Checklist:; - [x] tested changes locally; - [x] Parser. ## Tests; - [x] Emit Files for generating header files; - [x] Tests for Parser; - [x] CMake Configuration for tests. ## Documentation ; - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:860,Testability,test,tested,860,"## Description; Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress; - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries; - [x] Parser function for extracting the model information and weights and instantiate a RModel Object ; - [x] Support for Keras Sequential API Models ; - [x] Support for Keras Functional API Models ; - [x] Supports Dense (with relu activation),ReLU and Permute Layers ; - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root); - [x] Header file for the function ; - [x] Function implementation ; ; ## Checklist:; - [x] tested changes locally; - [x] Parser. ## Tests; - [x] Emit Files for generating header files; - [x] Tests for Parser; - [x] CMake Configuration for tests. ## Documentation ; - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:901,Testability,Test,Tests,901,"## Description; Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress; - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries; - [x] Parser function for extracting the model information and weights and instantiate a RModel Object ; - [x] Support for Keras Sequential API Models ; - [x] Support for Keras Functional API Models ; - [x] Supports Dense (with relu activation),ReLU and Permute Layers ; - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root); - [x] Header file for the function ; - [x] Function implementation ; ; ## Checklist:; - [x] tested changes locally; - [x] Parser. ## Tests; - [x] Emit Files for generating header files; - [x] Tests for Parser; - [x] CMake Configuration for tests. ## Documentation ; - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:960,Testability,Test,Tests,960,"## Description; Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress; - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries; - [x] Parser function for extracting the model information and weights and instantiate a RModel Object ; - [x] Support for Keras Sequential API Models ; - [x] Support for Keras Functional API Models ; - [x] Supports Dense (with relu activation),ReLU and Permute Layers ; - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root); - [x] Header file for the function ; - [x] Function implementation ; ; ## Checklist:; - [x] tested changes locally; - [x] Parser. ## Tests; - [x] Emit Files for generating header files; - [x] Tests for Parser; - [x] CMake Configuration for tests. ## Documentation ; - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:1008,Testability,test,tests,1008,"## Description; Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress; - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries; - [x] Parser function for extracting the model information and weights and instantiate a RModel Object ; - [x] Support for Keras Sequential API Models ; - [x] Support for Keras Functional API Models ; - [x] Supports Dense (with relu activation),ReLU and Permute Layers ; - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root); - [x] Header file for the function ; - [x] Function implementation ; ; ## Checklist:; - [x] tested changes locally; - [x] Parser. ## Tests; - [x] Emit Files for generating header files; - [x] Tests for Parser; - [x] CMake Configuration for tests. ## Documentation ; - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:176,Usability,Learn,Learning,176,"## Description; Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress; - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries; - [x] Parser function for extracting the model information and weights and instantiate a RModel Object ; - [x] Support for Keras Sequential API Models ; - [x] Support for Keras Functional API Models ; - [x] Supports Dense (with relu activation),ReLU and Permute Layers ; - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root); - [x] Header file for the function ; - [x] Function implementation ; ; ## Checklist:; - [x] tested changes locally; - [x] Parser. ## Tests; - [x] Emit Files for generating header files; - [x] Tests for Parser; - [x] CMake Configuration for tests. ## Documentation ; - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8432:735,Deployability,update,updated,735,"`pdf` is `RooAbsPdf*`, and `RooAbsPdf` inherits from `RooAbsReal`,; so the check can only fail if `pdf` is a nullptr, in which case; `pdf->GetName()` would be a nullptr dereference. This fixes the following warning in gcc11:. ```; ../roofit/roofitcore/src/RooAddModel.cxx: In constructor ‘RooAddModel::RooAddModel(const char*, const char*, const RooArgList&, const RooArgList&, Bool_t)’:; ../roofit/roofitcore/src/RooAddModel.cxx:125:106: warning: ‘this’ pointer is null [-Wnonnull]; 125 | coutE(InputArguments) << ""RooAddModel::RooAddModel("" << GetName() << "") pdf "" << pdf->GetName() << "" is not of type RooAbsPdf, ignored"" << endl ;; ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [] tested changes locally; - [] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8432
https://github.com/root-project/root/pull/8432:39,Modifiability,inherit,inherits,39,"`pdf` is `RooAbsPdf*`, and `RooAbsPdf` inherits from `RooAbsReal`,; so the check can only fail if `pdf` is a nullptr, in which case; `pdf->GetName()` would be a nullptr dereference. This fixes the following warning in gcc11:. ```; ../roofit/roofitcore/src/RooAddModel.cxx: In constructor ‘RooAddModel::RooAddModel(const char*, const char*, const RooArgList&, const RooArgList&, Bool_t)’:; ../roofit/roofitcore/src/RooAddModel.cxx:125:106: warning: ‘this’ pointer is null [-Wnonnull]; 125 | coutE(InputArguments) << ""RooAddModel::RooAddModel("" << GetName() << "") pdf "" << pdf->GetName() << "" is not of type RooAbsPdf, ignored"" << endl ;; ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [] tested changes locally; - [] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8432
https://github.com/root-project/root/pull/8432:706,Testability,test,tested,706,"`pdf` is `RooAbsPdf*`, and `RooAbsPdf` inherits from `RooAbsReal`,; so the check can only fail if `pdf` is a nullptr, in which case; `pdf->GetName()` would be a nullptr dereference. This fixes the following warning in gcc11:. ```; ../roofit/roofitcore/src/RooAddModel.cxx: In constructor ‘RooAddModel::RooAddModel(const char*, const char*, const RooArgList&, const RooArgList&, Bool_t)’:; ../roofit/roofitcore/src/RooAddModel.cxx:125:106: warning: ‘this’ pointer is null [-Wnonnull]; 125 | coutE(InputArguments) << ""RooAddModel::RooAddModel("" << GetName() << "") pdf "" << pdf->GetName() << "" is not of type RooAbsPdf, ignored"" << endl ;; ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [] tested changes locally; - [] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8432
https://github.com/root-project/root/pull/8433:127,Deployability,update,updated,127,Currently it displays like this:. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [] tested changes locally; - [] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8433
https://github.com/root-project/root/pull/8433:98,Testability,test,tested,98,Currently it displays like this:. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [] tested changes locally; - [] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8433
https://github.com/root-project/root/pull/8434:102,Availability,error,error,102,"* replace wrong `dynamic_cast<RooAbsReal*>` with; `dynamic_cast<RooAbsPdf*>` (presumably a copy-paste error). * use `TIter` and range-based loop instead of `TIterator*`. * avoid C-style casts. * replace `assert(0)` with `std::runtime_error`, as asserts only work in; debug buils. * replace one orrurence of `coef->GetName()` with `pdf->GetName()`,; which was probably also a copy-paste error. This fixes the following warning in gcc11:. ```; ../roofit/roofitcore/src/RooAddModel.cxx: In constructor ‘RooAddModel::RooAddModel(const char*, const char*, const RooArgList&, const RooArgList&, Bool_t)’:; ../roofit/roofitcore/src/RooAddModel.cxx:125:106: warning: ‘this’ pointer is null [-Wnonnull]; 125 | coutE(InputArguments) << ""RooAddModel::RooAddModel("" << GetName() << "") pdf "" << pdf->GetName() << "" is not of type RooAbsPdf, ignored"" << endl ;; ```. This PR superseeds PR https://github.com/root-project/root/pull/8432 and addresses issue https://github.com/root-project/root/issues/8129.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8434
https://github.com/root-project/root/pull/8434:386,Availability,error,error,386,"* replace wrong `dynamic_cast<RooAbsReal*>` with; `dynamic_cast<RooAbsPdf*>` (presumably a copy-paste error). * use `TIter` and range-based loop instead of `TIterator*`. * avoid C-style casts. * replace `assert(0)` with `std::runtime_error`, as asserts only work in; debug buils. * replace one orrurence of `coef->GetName()` with `pdf->GetName()`,; which was probably also a copy-paste error. This fixes the following warning in gcc11:. ```; ../roofit/roofitcore/src/RooAddModel.cxx: In constructor ‘RooAddModel::RooAddModel(const char*, const char*, const RooArgList&, const RooArgList&, Bool_t)’:; ../roofit/roofitcore/src/RooAddModel.cxx:125:106: warning: ‘this’ pointer is null [-Wnonnull]; 125 | coutE(InputArguments) << ""RooAddModel::RooAddModel("" << GetName() << "") pdf "" << pdf->GetName() << "" is not of type RooAbsPdf, ignored"" << endl ;; ```. This PR superseeds PR https://github.com/root-project/root/pull/8432 and addresses issue https://github.com/root-project/root/issues/8129.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8434
https://github.com/root-project/root/pull/8434:172,Safety,avoid,avoid,172,"* replace wrong `dynamic_cast<RooAbsReal*>` with; `dynamic_cast<RooAbsPdf*>` (presumably a copy-paste error). * use `TIter` and range-based loop instead of `TIterator*`. * avoid C-style casts. * replace `assert(0)` with `std::runtime_error`, as asserts only work in; debug buils. * replace one orrurence of `coef->GetName()` with `pdf->GetName()`,; which was probably also a copy-paste error. This fixes the following warning in gcc11:. ```; ../roofit/roofitcore/src/RooAddModel.cxx: In constructor ‘RooAddModel::RooAddModel(const char*, const char*, const RooArgList&, const RooArgList&, Bool_t)’:; ../roofit/roofitcore/src/RooAddModel.cxx:125:106: warning: ‘this’ pointer is null [-Wnonnull]; 125 | coutE(InputArguments) << ""RooAddModel::RooAddModel("" << GetName() << "") pdf "" << pdf->GetName() << "" is not of type RooAbsPdf, ignored"" << endl ;; ```. This PR superseeds PR https://github.com/root-project/root/pull/8432 and addresses issue https://github.com/root-project/root/issues/8129.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8434
https://github.com/root-project/root/pull/8434:204,Testability,assert,assert,204,"* replace wrong `dynamic_cast<RooAbsReal*>` with; `dynamic_cast<RooAbsPdf*>` (presumably a copy-paste error). * use `TIter` and range-based loop instead of `TIterator*`. * avoid C-style casts. * replace `assert(0)` with `std::runtime_error`, as asserts only work in; debug buils. * replace one orrurence of `coef->GetName()` with `pdf->GetName()`,; which was probably also a copy-paste error. This fixes the following warning in gcc11:. ```; ../roofit/roofitcore/src/RooAddModel.cxx: In constructor ‘RooAddModel::RooAddModel(const char*, const char*, const RooArgList&, const RooArgList&, Bool_t)’:; ../roofit/roofitcore/src/RooAddModel.cxx:125:106: warning: ‘this’ pointer is null [-Wnonnull]; 125 | coutE(InputArguments) << ""RooAddModel::RooAddModel("" << GetName() << "") pdf "" << pdf->GetName() << "" is not of type RooAbsPdf, ignored"" << endl ;; ```. This PR superseeds PR https://github.com/root-project/root/pull/8432 and addresses issue https://github.com/root-project/root/issues/8129.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8434
https://github.com/root-project/root/pull/8434:245,Testability,assert,asserts,245,"* replace wrong `dynamic_cast<RooAbsReal*>` with; `dynamic_cast<RooAbsPdf*>` (presumably a copy-paste error). * use `TIter` and range-based loop instead of `TIterator*`. * avoid C-style casts. * replace `assert(0)` with `std::runtime_error`, as asserts only work in; debug buils. * replace one orrurence of `coef->GetName()` with `pdf->GetName()`,; which was probably also a copy-paste error. This fixes the following warning in gcc11:. ```; ../roofit/roofitcore/src/RooAddModel.cxx: In constructor ‘RooAddModel::RooAddModel(const char*, const char*, const RooArgList&, const RooArgList&, Bool_t)’:; ../roofit/roofitcore/src/RooAddModel.cxx:125:106: warning: ‘this’ pointer is null [-Wnonnull]; 125 | coutE(InputArguments) << ""RooAddModel::RooAddModel("" << GetName() << "") pdf "" << pdf->GetName() << "" is not of type RooAbsPdf, ignored"" << endl ;; ```. This PR superseeds PR https://github.com/root-project/root/pull/8432 and addresses issue https://github.com/root-project/root/issues/8129.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8434
https://github.com/root-project/root/issues/8435:1475,Availability,error,error,1475,"/bin/thisroot.fish` sets `JUPYTER*` environment variables as follows:; ```; JUPYTER_PATH=ROOTSYS/etc/notebook; JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook; ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; The correct environment variables would be; ```; JUPYTER_PATH=/usr/local/etc/root/notebook; JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook; ```; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; 1. Build and install `latest-stable` branch; 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51; 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`; 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; 1. ROOT version: 6.24/00; 2. Operating system: openSUSE Tumbleweed -- release: 20210606; 3. Compiler version: gcc (SUSE Linux) 11.1.1 20210510 [revision 23855a176609fe8dda6abaf2b21846b4517966eb]; 3. ROOT built for linuxx8664gcc on Jun 12 2021, 01:11:00, from heads/latest-stable@e6a04a86, with options:; a. `gnuinstall=ON`; b. `imt=ON`; c. `minuit2=ON`; d. `rpath=ON`; e. `pyroot=ON`; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; Post on ROOT forum: [link](https://root-forum.cern.ch/t/rootsys-folder-created-starting-jupyterlab/45358); <!--; Add any other context about the problem h",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:2301,Availability,down,download,2301,"root.fish` sets `JUPYTER*` environment variables as follows:; ```; JUPYTER_PATH=ROOTSYS/etc/notebook; JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook; ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; The correct environment variables would be; ```; JUPYTER_PATH=/usr/local/etc/root/notebook; JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook; ```; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; 1. Build and install `latest-stable` branch; 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51; 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`; 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; 1. ROOT version: 6.24/00; 2. Operating system: openSUSE Tumbleweed -- release: 20210606; 3. Compiler version: gcc (SUSE Linux) 11.1.1 20210510 [revision 23855a176609fe8dda6abaf2b21846b4517966eb]; 3. ROOT built for linuxx8664gcc on Jun 12 2021, 01:11:00, from heads/latest-stable@e6a04a86, with options:; a. `gnuinstall=ON`; b. `imt=ON`; c. `minuit2=ON`; d. `rpath=ON`; e. `pyroot=ON`; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; Post on ROOT forum: [link](https://root-forum.cern.ch/t/rootsys-folder-created-starting-jupyterlab/45358); <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:484,Deployability,install,installation,484,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; I built ROOT from source using option `gnuinstall=ON` and cloning `latest-stable` branch.; After the installation the script `/usr/local/bin/thisroot.fish` sets `JUPYTER*` environment variables as follows:; ```; JUPYTER_PATH=ROOTSYS/etc/notebook; JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook; ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; The correct environment variables would be; ```; JUPYTER_PATH=/usr/local/etc/root/notebook; JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook; ```; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; 1. Build and install `latest-stable` branch; 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51; 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`; 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; 1. ROOT version: 6.24/00; 2. Operating system: openSUSE Tumbleweed -- release: 20210606; 3. Compiler version: gcc (SUSE Linux) 11.1.1 20210510 [revision 23855a176609fe8dda6abaf2b21846b45",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:1268,Deployability,install,install,1268,"o the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; I built ROOT from source using option `gnuinstall=ON` and cloning `latest-stable` branch.; After the installation the script `/usr/local/bin/thisroot.fish` sets `JUPYTER*` environment variables as follows:; ```; JUPYTER_PATH=ROOTSYS/etc/notebook; JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook; ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; The correct environment variables would be; ```; JUPYTER_PATH=/usr/local/etc/root/notebook; JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook; ```; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; 1. Build and install `latest-stable` branch; 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51; 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`; 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; 1. ROOT version: 6.24/00; 2. Operating system: openSUSE Tumbleweed -- release: 20210606; 3. Compiler version: gcc (SUSE Linux) 11.1.1 20210510 [revision 23855a176609fe8dda6abaf2b21846b4517966eb]; 3. ROOT built for linuxx8664gcc on Jun 12 2021, 01:11:00, from heads/latest-stable@e6a04a86, with options:; a. `gnuinstall=ON`; b. `imt=ON`; c. `minuit2=ON`; d. `rpath=ON`; e. `pyroot=ON`; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:1885,Deployability,release,release,1885,"root.fish` sets `JUPYTER*` environment variables as follows:; ```; JUPYTER_PATH=ROOTSYS/etc/notebook; JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook; ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; The correct environment variables would be; ```; JUPYTER_PATH=/usr/local/etc/root/notebook; JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook; ```; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; 1. Build and install `latest-stable` branch; 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51; 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`; 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; 1. ROOT version: 6.24/00; 2. Operating system: openSUSE Tumbleweed -- release: 20210606; 3. Compiler version: gcc (SUSE Linux) 11.1.1 20210510 [revision 23855a176609fe8dda6abaf2b21846b4517966eb]; 3. ROOT built for linuxx8664gcc on Jun 12 2021, 01:11:00, from heads/latest-stable@e6a04a86, with options:; a. `gnuinstall=ON`; b. `imt=ON`; c. `minuit2=ON`; d. `rpath=ON`; e. `pyroot=ON`; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; Post on ROOT forum: [link](https://root-forum.cern.ch/t/rootsys-folder-created-starting-jupyterlab/45358); <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:2283,Deployability,install,install,2283,"root.fish` sets `JUPYTER*` environment variables as follows:; ```; JUPYTER_PATH=ROOTSYS/etc/notebook; JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook; ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; The correct environment variables would be; ```; JUPYTER_PATH=/usr/local/etc/root/notebook; JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook; ```; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; 1. Build and install `latest-stable` branch; 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51; 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`; 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; 1. ROOT version: 6.24/00; 2. Operating system: openSUSE Tumbleweed -- release: 20210606; 3. Compiler version: gcc (SUSE Linux) 11.1.1 20210510 [revision 23855a176609fe8dda6abaf2b21846b4517966eb]; 3. ROOT built for linuxx8664gcc on Jun 12 2021, 01:11:00, from heads/latest-stable@e6a04a86, with options:; a. `gnuinstall=ON`; b. `imt=ON`; c. `minuit2=ON`; d. `rpath=ON`; e. `pyroot=ON`; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; Post on ROOT forum: [link](https://root-forum.cern.ch/t/rootsys-folder-created-starting-jupyterlab/45358); <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:567,Modifiability,variab,variables,567,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; I built ROOT from source using option `gnuinstall=ON` and cloning `latest-stable` branch.; After the installation the script `/usr/local/bin/thisroot.fish` sets `JUPYTER*` environment variables as follows:; ```; JUPYTER_PATH=ROOTSYS/etc/notebook; JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook; ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; The correct environment variables would be; ```; JUPYTER_PATH=/usr/local/etc/root/notebook; JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook; ```; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; 1. Build and install `latest-stable` branch; 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51; 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`; 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; 1. ROOT version: 6.24/00; 2. Operating system: openSUSE Tumbleweed -- release: 20210606; 3. Compiler version: gcc (SUSE Linux) 11.1.1 20210510 [revision 23855a176609fe8dda6abaf2b21846b45",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:1039,Modifiability,variab,variables,1039,"=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; I built ROOT from source using option `gnuinstall=ON` and cloning `latest-stable` branch.; After the installation the script `/usr/local/bin/thisroot.fish` sets `JUPYTER*` environment variables as follows:; ```; JUPYTER_PATH=ROOTSYS/etc/notebook; JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook; ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; The correct environment variables would be; ```; JUPYTER_PATH=/usr/local/etc/root/notebook; JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook; ```; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; 1. Build and install `latest-stable` branch; 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51; 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`; 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; 1. ROOT version: 6.24/00; 2. Operating system: openSUSE Tumbleweed -- release: 20210606; 3. Compiler version: gcc (SUSE Linux) 11.1.1 20210510 [revision 23855a176609fe8dda6abaf2b21846b4517966eb]; 3. ROOT built for linuxx8664gcc on Jun 12 2021, 01:11:00, from heads/latest-stable@e6a04a86, with op",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:925,Usability,clear,clear,925,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; I built ROOT from source using option `gnuinstall=ON` and cloning `latest-stable` branch.; After the installation the script `/usr/local/bin/thisroot.fish` sets `JUPYTER*` environment variables as follows:; ```; JUPYTER_PATH=ROOTSYS/etc/notebook; JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook; ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; The correct environment variables would be; ```; JUPYTER_PATH=/usr/local/etc/root/notebook; JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook; ```; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; 1. Build and install `latest-stable` branch; 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51; 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`; 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; 1. ROOT version: 6.24/00; 2. Operating system: openSUSE Tumbleweed -- release: 20210606; 3. Compiler version: gcc (SUSE Linux) 11.1.1 20210510 [revision 23855a176609fe8dda6abaf2b21846b45",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:1169,Usability,clear,clear,1169,"=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; I built ROOT from source using option `gnuinstall=ON` and cloning `latest-stable` branch.; After the installation the script `/usr/local/bin/thisroot.fish` sets `JUPYTER*` environment variables as follows:; ```; JUPYTER_PATH=ROOTSYS/etc/notebook; JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook; ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; The correct environment variables would be; ```; JUPYTER_PATH=/usr/local/etc/root/notebook; JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook; ```; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; 1. Build and install `latest-stable` branch; 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51; 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`; 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; 1. ROOT version: 6.24/00; 2. Operating system: openSUSE Tumbleweed -- release: 20210606; 3. Compiler version: gcc (SUSE Linux) 11.1.1 20210510 [revision 23855a176609fe8dda6abaf2b21846b4517966eb]; 3. ROOT built for linuxx8664gcc on Jun 12 2021, 01:11:00, from heads/latest-stable@e6a04a86, with op",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/pull/8436:410,Availability,error,errors,410,"1. Provide return types in `RPadBase::Draw` methods instead of `auto` - PyROOT is not able to deduce type. Modify several other signatures to let use PyROOT without extra casting ; 2. Improve `TObjectDrawable` - it can extract `Color_t` values and sends actual value to client, no need to always send full colors lists; 3. Let handle `TH1`, `TF1` and `THStack` in TObjectDrawable; 4. Improve `RLegend` to draw errors marker; 5. Provide modified version of `df104.py` macro which works with ROOT7 graphics.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8436
https://github.com/root-project/root/pull/8437:72,Availability,error,errors,72,"Calling `RooCmdArg::take` in `RooGlobalFunc.h` header can cause linker; errors, because it accesses a static data member. That's unsupported; across DLL boundaries on Windows. This should fix the Windows 10 test errors that appeard after #8416.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8437
https://github.com/root-project/root/pull/8437:212,Availability,error,errors,212,"Calling `RooCmdArg::take` in `RooGlobalFunc.h` header can cause linker; errors, because it accesses a static data member. That's unsupported; across DLL boundaries on Windows. This should fix the Windows 10 test errors that appeard after #8416.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8437
https://github.com/root-project/root/pull/8437:91,Security,access,accesses,91,"Calling `RooCmdArg::take` in `RooGlobalFunc.h` header can cause linker; errors, because it accesses a static data member. That's unsupported; across DLL boundaries on Windows. This should fix the Windows 10 test errors that appeard after #8416.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8437
https://github.com/root-project/root/pull/8437:207,Testability,test,test,207,"Calling `RooCmdArg::take` in `RooGlobalFunc.h` header can cause linker; errors, because it accesses a static data member. That's unsupported; across DLL boundaries on Windows. This should fix the Windows 10 test errors that appeard after #8416.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8437
https://github.com/root-project/root/issues/8438:178,Availability,error,error,178,"### Describe the bug. Reported in https://root-forum.cern.ch/t/new-pyroot-cant-pickle-derived-class-types/45415. ### Expected behavior. That the derived class is pickled without error / a proper error message appears. ### To Reproduce. In Derived.py:; ```python; import ROOT. class Derived(ROOT.TH1F):; def __reduce__(self):; return (self.__class__, ()); ```; In test.py:; ```python; from Derived import Derived; import pickle; pickle.dumps(Derived()); ```. Running test.py throws a segfault in the `__reduce__` implementation:; ```; #7 0x00007f6aeb43a8ac in TClass::StreamerTObject(TClass const*, void*, TBuffer&, TClass const*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so; #8 0x00007f6aeaaba5a6 in TBufferFile::WriteObjectClass(void const*, TClass const*, bool) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libRIO.so; #9 0x00007f6aeaac1b74 in TBufferIO::WriteObjectAny(void const*, TClass const*, bool) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libRIO.so; #10 0x00007f6add1ca55f in op_reduce(CPyCppyy::CPPInstance*, _object*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libROOTPythonizations3_8.so; #11 0x00007f6af8cab364 in cfunction_vectorcall_NOARGS () from /lib64/libpython3.8.so.1.0; #12 0x00007f6af8cb58e4 in PyVectorcall_Call () from /lib64/libpython3.8.so.1.0; #13 0x00007f6aeb6c8bf5 in CPyCppyy::im_call(_object*, _object*, _object*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libcppyy3_8.so; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8438
https://github.com/root-project/root/issues/8438:195,Availability,error,error,195,"### Describe the bug. Reported in https://root-forum.cern.ch/t/new-pyroot-cant-pickle-derived-class-types/45415. ### Expected behavior. That the derived class is pickled without error / a proper error message appears. ### To Reproduce. In Derived.py:; ```python; import ROOT. class Derived(ROOT.TH1F):; def __reduce__(self):; return (self.__class__, ()); ```; In test.py:; ```python; from Derived import Derived; import pickle; pickle.dumps(Derived()); ```. Running test.py throws a segfault in the `__reduce__` implementation:; ```; #7 0x00007f6aeb43a8ac in TClass::StreamerTObject(TClass const*, void*, TBuffer&, TClass const*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so; #8 0x00007f6aeaaba5a6 in TBufferFile::WriteObjectClass(void const*, TClass const*, bool) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libRIO.so; #9 0x00007f6aeaac1b74 in TBufferIO::WriteObjectAny(void const*, TClass const*, bool) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libRIO.so; #10 0x00007f6add1ca55f in op_reduce(CPyCppyy::CPPInstance*, _object*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libROOTPythonizations3_8.so; #11 0x00007f6af8cab364 in cfunction_vectorcall_NOARGS () from /lib64/libpython3.8.so.1.0; #12 0x00007f6af8cb58e4 in PyVectorcall_Call () from /lib64/libpython3.8.so.1.0; #13 0x00007f6aeb6c8bf5 in CPyCppyy::im_call(_object*, _object*, _object*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libcppyy3_8.so; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8438
https://github.com/root-project/root/issues/8438:201,Integrability,message,message,201,"### Describe the bug. Reported in https://root-forum.cern.ch/t/new-pyroot-cant-pickle-derived-class-types/45415. ### Expected behavior. That the derived class is pickled without error / a proper error message appears. ### To Reproduce. In Derived.py:; ```python; import ROOT. class Derived(ROOT.TH1F):; def __reduce__(self):; return (self.__class__, ()); ```; In test.py:; ```python; from Derived import Derived; import pickle; pickle.dumps(Derived()); ```. Running test.py throws a segfault in the `__reduce__` implementation:; ```; #7 0x00007f6aeb43a8ac in TClass::StreamerTObject(TClass const*, void*, TBuffer&, TClass const*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so; #8 0x00007f6aeaaba5a6 in TBufferFile::WriteObjectClass(void const*, TClass const*, bool) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libRIO.so; #9 0x00007f6aeaac1b74 in TBufferIO::WriteObjectAny(void const*, TClass const*, bool) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libRIO.so; #10 0x00007f6add1ca55f in op_reduce(CPyCppyy::CPPInstance*, _object*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libROOTPythonizations3_8.so; #11 0x00007f6af8cab364 in cfunction_vectorcall_NOARGS () from /lib64/libpython3.8.so.1.0; #12 0x00007f6af8cb58e4 in PyVectorcall_Call () from /lib64/libpython3.8.so.1.0; #13 0x00007f6aeb6c8bf5 in CPyCppyy::im_call(_object*, _object*, _object*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libcppyy3_8.so; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8438
https://github.com/root-project/root/issues/8438:363,Testability,test,test,363,"### Describe the bug. Reported in https://root-forum.cern.ch/t/new-pyroot-cant-pickle-derived-class-types/45415. ### Expected behavior. That the derived class is pickled without error / a proper error message appears. ### To Reproduce. In Derived.py:; ```python; import ROOT. class Derived(ROOT.TH1F):; def __reduce__(self):; return (self.__class__, ()); ```; In test.py:; ```python; from Derived import Derived; import pickle; pickle.dumps(Derived()); ```. Running test.py throws a segfault in the `__reduce__` implementation:; ```; #7 0x00007f6aeb43a8ac in TClass::StreamerTObject(TClass const*, void*, TBuffer&, TClass const*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so; #8 0x00007f6aeaaba5a6 in TBufferFile::WriteObjectClass(void const*, TClass const*, bool) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libRIO.so; #9 0x00007f6aeaac1b74 in TBufferIO::WriteObjectAny(void const*, TClass const*, bool) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libRIO.so; #10 0x00007f6add1ca55f in op_reduce(CPyCppyy::CPPInstance*, _object*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libROOTPythonizations3_8.so; #11 0x00007f6af8cab364 in cfunction_vectorcall_NOARGS () from /lib64/libpython3.8.so.1.0; #12 0x00007f6af8cb58e4 in PyVectorcall_Call () from /lib64/libpython3.8.so.1.0; #13 0x00007f6aeb6c8bf5 in CPyCppyy::im_call(_object*, _object*, _object*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libcppyy3_8.so; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8438
https://github.com/root-project/root/issues/8438:466,Testability,test,test,466,"### Describe the bug. Reported in https://root-forum.cern.ch/t/new-pyroot-cant-pickle-derived-class-types/45415. ### Expected behavior. That the derived class is pickled without error / a proper error message appears. ### To Reproduce. In Derived.py:; ```python; import ROOT. class Derived(ROOT.TH1F):; def __reduce__(self):; return (self.__class__, ()); ```; In test.py:; ```python; from Derived import Derived; import pickle; pickle.dumps(Derived()); ```. Running test.py throws a segfault in the `__reduce__` implementation:; ```; #7 0x00007f6aeb43a8ac in TClass::StreamerTObject(TClass const*, void*, TBuffer&, TClass const*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so; #8 0x00007f6aeaaba5a6 in TBufferFile::WriteObjectClass(void const*, TClass const*, bool) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libRIO.so; #9 0x00007f6aeaac1b74 in TBufferIO::WriteObjectAny(void const*, TClass const*, bool) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libRIO.so; #10 0x00007f6add1ca55f in op_reduce(CPyCppyy::CPPInstance*, _object*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libROOTPythonizations3_8.so; #11 0x00007f6af8cab364 in cfunction_vectorcall_NOARGS () from /lib64/libpython3.8.so.1.0; #12 0x00007f6af8cb58e4 in PyVectorcall_Call () from /lib64/libpython3.8.so.1.0; #13 0x00007f6aeb6c8bf5 in CPyCppyy::im_call(_object*, _object*, _object*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libcppyy3_8.so; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8438
https://github.com/root-project/root/issues/8444:1614,Availability,recover,recover,1614,"n be specified besides the compression level: this is https://github.com/root-project/root/issues/6438; - `ROOT:::CompressionSettings` is undocumented (I only just now realized that it does precisely this conversion). One of the overloads has one line of documentation that mention it is deprecated but it is not actually deprecated with `R__DEPRECATE` ; - expected usage of `RCompressionSetting::EAlgorithm::EValues` is unclear (see https://root.cern/doc/master/structROOT_1_1RCompressionSetting_1_1EAlgorithm.html), the docs should probably point to `ROOT::CompressionSettings`. The docstring ""Note: this is only temporarily a struct and will become a enum class hence the name. "" should probably not appear in Doxygen, seems to be a not for developers; - `ROOT::CompressionSettings` requires that the user mentions the desired compression level. most of the time users just want to use whatever ROOT's default is. IIRC there is an enum for that too, but I could not find it in Doxygen. I would suggest the following improvements:; - `hadd --help` should mention that `-f` can also be used to trigger the compression algorithm, and it could have an examples section that shows how to use it and mentions `ROOT::CompressionSettings` as the API to recover the required integer given the desired compression algorithm; - `RCompressionSetting` should be documented with an example usage and pointers to the enums/structs to be used in conjunction to it; - the deprecated `RCompressionSetting` should be actually deprecated; - `RCompressionSetting` should provide a default value for the second argument that simply provides ROOT's default compression level for the specified compression algorithm; - the `RCompressionSetting::EAlgorithm` enum (which is currently a struct) should be made an enum, and its docs should point to `RCompressionSetting`; - the deprecated [ECompressionAlgorithm](https://root.cern/doc/master/namespaceROOT.html#a60945f6fe634f9f3be9872e57bf87f2e) should actually be deprecated",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8444
https://github.com/root-project/root/issues/8444:1614,Safety,recover,recover,1614,"n be specified besides the compression level: this is https://github.com/root-project/root/issues/6438; - `ROOT:::CompressionSettings` is undocumented (I only just now realized that it does precisely this conversion). One of the overloads has one line of documentation that mention it is deprecated but it is not actually deprecated with `R__DEPRECATE` ; - expected usage of `RCompressionSetting::EAlgorithm::EValues` is unclear (see https://root.cern/doc/master/structROOT_1_1RCompressionSetting_1_1EAlgorithm.html), the docs should probably point to `ROOT::CompressionSettings`. The docstring ""Note: this is only temporarily a struct and will become a enum class hence the name. "" should probably not appear in Doxygen, seems to be a not for developers; - `ROOT::CompressionSettings` requires that the user mentions the desired compression level. most of the time users just want to use whatever ROOT's default is. IIRC there is an enum for that too, but I could not find it in Doxygen. I would suggest the following improvements:; - `hadd --help` should mention that `-f` can also be used to trigger the compression algorithm, and it could have an examples section that shows how to use it and mentions `ROOT::CompressionSettings` as the API to recover the required integer given the desired compression algorithm; - `RCompressionSetting` should be documented with an example usage and pointers to the enums/structs to be used in conjunction to it; - the deprecated `RCompressionSetting` should be actually deprecated; - `RCompressionSetting` should provide a default value for the second argument that simply provides ROOT's default compression level for the specified compression algorithm; - the `RCompressionSetting::EAlgorithm` enum (which is currently a struct) should be made an enum, and its docs should point to `RCompressionSetting`; - the deprecated [ECompressionAlgorithm](https://root.cern/doc/master/namespaceROOT.html#a60945f6fe634f9f3be9872e57bf87f2e) should actually be deprecated",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8444
https://github.com/root-project/root/issues/8444:504,Usability,undo,undocumented,504,"We have seen several times in the past that users (and also ROOT devs) have a hard time figuring out what integer corresponds to ""zstd with default compression level"" (and conversely what the integer 205 means in terms of compression settings). This is due to a combination of factors:. - `hadd --help` is wrong and does not mention that the compression algorithm can be specified besides the compression level: this is https://github.com/root-project/root/issues/6438; - `ROOT:::CompressionSettings` is undocumented (I only just now realized that it does precisely this conversion). One of the overloads has one line of documentation that mention it is deprecated but it is not actually deprecated with `R__DEPRECATE` ; - expected usage of `RCompressionSetting::EAlgorithm::EValues` is unclear (see https://root.cern/doc/master/structROOT_1_1RCompressionSetting_1_1EAlgorithm.html), the docs should probably point to `ROOT::CompressionSettings`. The docstring ""Note: this is only temporarily a struct and will become a enum class hence the name. "" should probably not appear in Doxygen, seems to be a not for developers; - `ROOT::CompressionSettings` requires that the user mentions the desired compression level. most of the time users just want to use whatever ROOT's default is. IIRC there is an enum for that too, but I could not find it in Doxygen. I would suggest the following improvements:; - `hadd --help` should mention that `-f` can also be used to trigger the compression algorithm, and it could have an examples section that shows how to use it and mentions `ROOT::CompressionSettings` as the API to recover the required integer given the desired compression algorithm; - `RCompressionSetting` should be documented with an example usage and pointers to the enums/structs to be used in conjunction to it; - the deprecated `RCompressionSetting` should be actually deprecated; - `RCompressionSetting` should provide a default value for the second argument that simply provides ROOT's defaul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8444
https://github.com/root-project/root/issues/8444:1972,Usability,simpl,simply,1972,"n be specified besides the compression level: this is https://github.com/root-project/root/issues/6438; - `ROOT:::CompressionSettings` is undocumented (I only just now realized that it does precisely this conversion). One of the overloads has one line of documentation that mention it is deprecated but it is not actually deprecated with `R__DEPRECATE` ; - expected usage of `RCompressionSetting::EAlgorithm::EValues` is unclear (see https://root.cern/doc/master/structROOT_1_1RCompressionSetting_1_1EAlgorithm.html), the docs should probably point to `ROOT::CompressionSettings`. The docstring ""Note: this is only temporarily a struct and will become a enum class hence the name. "" should probably not appear in Doxygen, seems to be a not for developers; - `ROOT::CompressionSettings` requires that the user mentions the desired compression level. most of the time users just want to use whatever ROOT's default is. IIRC there is an enum for that too, but I could not find it in Doxygen. I would suggest the following improvements:; - `hadd --help` should mention that `-f` can also be used to trigger the compression algorithm, and it could have an examples section that shows how to use it and mentions `ROOT::CompressionSettings` as the API to recover the required integer given the desired compression algorithm; - `RCompressionSetting` should be documented with an example usage and pointers to the enums/structs to be used in conjunction to it; - the deprecated `RCompressionSetting` should be actually deprecated; - `RCompressionSetting` should provide a default value for the second argument that simply provides ROOT's default compression level for the specified compression algorithm; - the `RCompressionSetting::EAlgorithm` enum (which is currently a struct) should be made an enum, and its docs should point to `RCompressionSetting`; - the deprecated [ECompressionAlgorithm](https://root.cern/doc/master/namespaceROOT.html#a60945f6fe634f9f3be9872e57bf87f2e) should actually be deprecated",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8444
https://github.com/root-project/root/issues/8446:1236,Integrability,contract,contract,1236,"### Explain what you would like to see improved; root executable emits a lot of non-requested output which:; 1. force the users to do workarounds just to make root print only what was instructed by user to do; 2. makes it harder to be used as interpreter (to be used in shebang). ### Optional: share how it could be improved; there should be NO output if it was not requested ... ; moreover, IMHO, it's kind of silly that there is a need for `root` and `root.exe`; and users that need to remove annoyances need to `alias root='root.exe -l'`; so, i would say, that all differences between non exe and exe should be removed and hidden under a flag; and all banners or any other text should be by default disabled (so `-l` in fact should enable the banner if requested); for compatibility the .exe files should be replaced with symlinks to the actual main executables. ### To Reproduce; just use it. ### Setup; any root version. ### Additional context; so, my argument is that, given the _interpreter_ profile of the root executable (the fact that it can execute a human text input make is an interpreter in the usage sense), there should be no actions performed that were not instructed by the user/developer; if so, there is a breach of contract like: `i told you to print a new line and this information and i got another newline and some other text beside what i wanted`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8446
https://github.com/root-project/root/issues/8446:1150,Performance,perform,performed,1150,"### Explain what you would like to see improved; root executable emits a lot of non-requested output which:; 1. force the users to do workarounds just to make root print only what was instructed by user to do; 2. makes it harder to be used as interpreter (to be used in shebang). ### Optional: share how it could be improved; there should be NO output if it was not requested ... ; moreover, IMHO, it's kind of silly that there is a need for `root` and `root.exe`; and users that need to remove annoyances need to `alias root='root.exe -l'`; so, i would say, that all differences between non exe and exe should be removed and hidden under a flag; and all banners or any other text should be by default disabled (so `-l` in fact should enable the banner if requested); for compatibility the .exe files should be replaced with symlinks to the actual main executables. ### To Reproduce; just use it. ### Setup; any root version. ### Additional context; so, my argument is that, given the _interpreter_ profile of the root executable (the fact that it can execute a human text input make is an interpreter in the usage sense), there should be no actions performed that were not instructed by the user/developer; if so, there is a breach of contract like: `i told you to print a new line and this information and i got another newline and some other text beside what i wanted`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8446
https://github.com/root-project/root/issues/8447:177,Usability,usab,usable,177,"### Explain what you would like to see improved; It is just a point of view but IMHO, it would be easier if all additional functionality (hadd, mkdir, cp, ls, etc...); would be usable as arguments/verbs to root: `root -hadd ...`, `root -ls ...` ; Moreover `--` token for end of global arguments would be useful in the following way:; * if verb is present (cp, ls, mv, hadd , etc...) whatever is after `--` are arguments for the verb (otherwise the verb should be the last); * if there is no verb present whatever is after `--` is text to be passed to root as code (replacement/addition to -e). this can become even more useful if these verbs are also converted to special commands (like `.pwd`, `.ls`); and if the line tokenization is also done for them (with the usual token of `;`)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8447
https://github.com/root-project/root/issues/8448:592,Availability,down,download,592,"- [X] Checked for duplicates. ### Describe the bug. I am compiling root including the `-DBUILD_SHARED_LIBS=OFF` option that according to https://root.cern/install/build_from_source/#relevant-cmake-variables should result in static libraries to be compiled. However, when running this, I still get shared libraries in the install location:. ### Expected behavior. Getting static libs in the install direction:. ```; ❯ ls static-root/lib/*.so | wc -l; 105; ❯ ls static-root/lib/*.a | wc -l; zsh: no matches found: static-root/lib/*.a; 0; ```. ### To Reproduce. ```; $ curl -L https://root.cern/download/root_v6.24.00.source.tar.gz | tar xz ; $ mkdir root-build; $ cmake -S ./root-6.24.00/ -B root-build \; 	-DCMAKE_INSTALL_PREFIX=$HOME/.local/static-root \; 	-DBUILD_SHARED_LIBS=off \; 	-Dxrootd=off -Dmysql=off -Dpgsql=off -Dpyroot=off \; 	-Droofit=off -Ddataframe=off -Dspectrum=off -Dtmva=off \; 	-Dfitsio=off -Dfftw3=off; $ cmake --build root-build -- -j 8; $ cmake --install root-build; ```. ### Setup; Manjaro using gcc 11.1, root version 6.24.0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:155,Deployability,install,install,155,"- [X] Checked for duplicates. ### Describe the bug. I am compiling root including the `-DBUILD_SHARED_LIBS=OFF` option that according to https://root.cern/install/build_from_source/#relevant-cmake-variables should result in static libraries to be compiled. However, when running this, I still get shared libraries in the install location:. ### Expected behavior. Getting static libs in the install direction:. ```; ❯ ls static-root/lib/*.so | wc -l; 105; ❯ ls static-root/lib/*.a | wc -l; zsh: no matches found: static-root/lib/*.a; 0; ```. ### To Reproduce. ```; $ curl -L https://root.cern/download/root_v6.24.00.source.tar.gz | tar xz ; $ mkdir root-build; $ cmake -S ./root-6.24.00/ -B root-build \; 	-DCMAKE_INSTALL_PREFIX=$HOME/.local/static-root \; 	-DBUILD_SHARED_LIBS=off \; 	-Dxrootd=off -Dmysql=off -Dpgsql=off -Dpyroot=off \; 	-Droofit=off -Ddataframe=off -Dspectrum=off -Dtmva=off \; 	-Dfitsio=off -Dfftw3=off; $ cmake --build root-build -- -j 8; $ cmake --install root-build; ```. ### Setup; Manjaro using gcc 11.1, root version 6.24.0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:321,Deployability,install,install,321,"- [X] Checked for duplicates. ### Describe the bug. I am compiling root including the `-DBUILD_SHARED_LIBS=OFF` option that according to https://root.cern/install/build_from_source/#relevant-cmake-variables should result in static libraries to be compiled. However, when running this, I still get shared libraries in the install location:. ### Expected behavior. Getting static libs in the install direction:. ```; ❯ ls static-root/lib/*.so | wc -l; 105; ❯ ls static-root/lib/*.a | wc -l; zsh: no matches found: static-root/lib/*.a; 0; ```. ### To Reproduce. ```; $ curl -L https://root.cern/download/root_v6.24.00.source.tar.gz | tar xz ; $ mkdir root-build; $ cmake -S ./root-6.24.00/ -B root-build \; 	-DCMAKE_INSTALL_PREFIX=$HOME/.local/static-root \; 	-DBUILD_SHARED_LIBS=off \; 	-Dxrootd=off -Dmysql=off -Dpgsql=off -Dpyroot=off \; 	-Droofit=off -Ddataframe=off -Dspectrum=off -Dtmva=off \; 	-Dfitsio=off -Dfftw3=off; $ cmake --build root-build -- -j 8; $ cmake --install root-build; ```. ### Setup; Manjaro using gcc 11.1, root version 6.24.0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:390,Deployability,install,install,390,"- [X] Checked for duplicates. ### Describe the bug. I am compiling root including the `-DBUILD_SHARED_LIBS=OFF` option that according to https://root.cern/install/build_from_source/#relevant-cmake-variables should result in static libraries to be compiled. However, when running this, I still get shared libraries in the install location:. ### Expected behavior. Getting static libs in the install direction:. ```; ❯ ls static-root/lib/*.so | wc -l; 105; ❯ ls static-root/lib/*.a | wc -l; zsh: no matches found: static-root/lib/*.a; 0; ```. ### To Reproduce. ```; $ curl -L https://root.cern/download/root_v6.24.00.source.tar.gz | tar xz ; $ mkdir root-build; $ cmake -S ./root-6.24.00/ -B root-build \; 	-DCMAKE_INSTALL_PREFIX=$HOME/.local/static-root \; 	-DBUILD_SHARED_LIBS=off \; 	-Dxrootd=off -Dmysql=off -Dpgsql=off -Dpyroot=off \; 	-Droofit=off -Ddataframe=off -Dspectrum=off -Dtmva=off \; 	-Dfitsio=off -Dfftw3=off; $ cmake --build root-build -- -j 8; $ cmake --install root-build; ```. ### Setup; Manjaro using gcc 11.1, root version 6.24.0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:970,Deployability,install,install,970,"- [X] Checked for duplicates. ### Describe the bug. I am compiling root including the `-DBUILD_SHARED_LIBS=OFF` option that according to https://root.cern/install/build_from_source/#relevant-cmake-variables should result in static libraries to be compiled. However, when running this, I still get shared libraries in the install location:. ### Expected behavior. Getting static libs in the install direction:. ```; ❯ ls static-root/lib/*.so | wc -l; 105; ❯ ls static-root/lib/*.a | wc -l; zsh: no matches found: static-root/lib/*.a; 0; ```. ### To Reproduce. ```; $ curl -L https://root.cern/download/root_v6.24.00.source.tar.gz | tar xz ; $ mkdir root-build; $ cmake -S ./root-6.24.00/ -B root-build \; 	-DCMAKE_INSTALL_PREFIX=$HOME/.local/static-root \; 	-DBUILD_SHARED_LIBS=off \; 	-Dxrootd=off -Dmysql=off -Dpgsql=off -Dpyroot=off \; 	-Droofit=off -Ddataframe=off -Dspectrum=off -Dtmva=off \; 	-Dfitsio=off -Dfftw3=off; $ cmake --build root-build -- -j 8; $ cmake --install root-build; ```. ### Setup; Manjaro using gcc 11.1, root version 6.24.0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:197,Modifiability,variab,variables,197,"- [X] Checked for duplicates. ### Describe the bug. I am compiling root including the `-DBUILD_SHARED_LIBS=OFF` option that according to https://root.cern/install/build_from_source/#relevant-cmake-variables should result in static libraries to be compiled. However, when running this, I still get shared libraries in the install location:. ### Expected behavior. Getting static libs in the install direction:. ```; ❯ ls static-root/lib/*.so | wc -l; 105; ❯ ls static-root/lib/*.a | wc -l; zsh: no matches found: static-root/lib/*.a; 0; ```. ### To Reproduce. ```; $ curl -L https://root.cern/download/root_v6.24.00.source.tar.gz | tar xz ; $ mkdir root-build; $ cmake -S ./root-6.24.00/ -B root-build \; 	-DCMAKE_INSTALL_PREFIX=$HOME/.local/static-root \; 	-DBUILD_SHARED_LIBS=off \; 	-Dxrootd=off -Dmysql=off -Dpgsql=off -Dpyroot=off \; 	-Droofit=off -Ddataframe=off -Dspectrum=off -Dtmva=off \; 	-Dfitsio=off -Dfftw3=off; $ cmake --build root-build -- -j 8; $ cmake --install root-build; ```. ### Setup; Manjaro using gcc 11.1, root version 6.24.0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8450:239,Deployability,update,update,239,"The following code:. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TFile.h>; #include <TTree.h>. int main() {; ROOT::RDataFrame(32).Define(""idx"", ""rdfentry_"").Snapshot(""t1"", ""f.root"");. ROOT::RDF::RSnapshotOptions opts;; opts.fMode = ""update"";; ROOT::RDataFrame(""t1"", ""f.root""); .Define(""x"", ""idx*idx""); .Snapshot(""t2"", ""f.root"", {""x"", ""idx""}, opts);. TFile f(""f.root"");; auto *tmain = f.Get<TTree>(""t1"");; auto *tfriend = f.Get<TTree>(""t2"");; tmain->AddFriend(tfriend);. ROOT::RDataFrame(*tmain).Display("".*"", 100)->Print();. return 0;; }; ```; prints. ```; idx | t2.x | x | t2.idx |; 0 | 0 | 0 | 0 |; 1 | 1 | 1 | 1 |; 2 | 4 | 4 | 2 |; 3 | 9 | 9 | 3 |; 4 | 16 | 16 | 4 |; 5 | 25 | 25 | 5 |; ```. where `idx` and `t2.idx` are actually two different columns (one in the main tree and the other in the friend tree) but `x` and `t2.x` are two valid spellings of the _same_ column, which should then be printed only once. I think `Display` gets tripped up by the output of `RLoopManager::GetColumnNames()`, which reports the two valid spellings of `x`. It should instead use the same logic as `Snapshot`, which removes duplicates.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8450
https://github.com/root-project/root/issues/8450:1084,Testability,log,logic,1084,"The following code:. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TFile.h>; #include <TTree.h>. int main() {; ROOT::RDataFrame(32).Define(""idx"", ""rdfentry_"").Snapshot(""t1"", ""f.root"");. ROOT::RDF::RSnapshotOptions opts;; opts.fMode = ""update"";; ROOT::RDataFrame(""t1"", ""f.root""); .Define(""x"", ""idx*idx""); .Snapshot(""t2"", ""f.root"", {""x"", ""idx""}, opts);. TFile f(""f.root"");; auto *tmain = f.Get<TTree>(""t1"");; auto *tfriend = f.Get<TTree>(""t2"");; tmain->AddFriend(tfriend);. ROOT::RDataFrame(*tmain).Display("".*"", 100)->Print();. return 0;; }; ```; prints. ```; idx | t2.x | x | t2.idx |; 0 | 0 | 0 | 0 |; 1 | 1 | 1 | 1 |; 2 | 4 | 4 | 2 |; 3 | 9 | 9 | 3 |; 4 | 16 | 16 | 4 |; 5 | 25 | 25 | 5 |; ```. where `idx` and `t2.idx` are actually two different columns (one in the main tree and the other in the friend tree) but `x` and `t2.x` are two valid spellings of the _same_ column, which should then be printed only once. I think `Display` gets tripped up by the output of `RLoopManager::GetColumnNames()`, which reports the two valid spellings of `x`. It should instead use the same logic as `Snapshot`, which removes duplicates.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8450
https://github.com/root-project/root/pull/8451:327,Usability,guid,guide,327,"With this PR the doxygen directory (./) is not included in the INPUT list of files. Only the top file `mainpage.md` is listed . This way we do not need to exclude the macros and scripts needed to build the documentation. Also the temporary file create in the doxygen directory do not pollute the list of files in the reference guide. Finally, the file `launcher.py` in the `tutorials` directory, is excluded from the reference guide.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8451
https://github.com/root-project/root/pull/8451:427,Usability,guid,guide,427,"With this PR the doxygen directory (./) is not included in the INPUT list of files. Only the top file `mainpage.md` is listed . This way we do not need to exclude the macros and scripts needed to build the documentation. Also the temporary file create in the doxygen directory do not pollute the list of files in the reference guide. Finally, the file `launcher.py` in the `tutorials` directory, is excluded from the reference guide.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8451
https://github.com/root-project/root/pull/8452:312,Integrability,depend,dependent,312,"This pull-request is a follow-up of #8402. `RNTupleWriteOptionsDaos`, i.e. a subclass of `RNTupleWriteOptions`, may now be used to provide DAOS-specific options. Currently, we only support setting the object class used for user data OIDs. ## Changes or fixes:; - Contains the required changes to support backend-dependent options: classes derived from `RNTupleWriteOptions` may carry additional options.; - String serialization/deserialization routines moved to the `ROOT::Experimental::Internal::RNTupleSerialization` namespace, where they can be reused.; - RPageStorageDaos: the provided object class, if given, is used for generating the OIDs that relate to user data. `OC_SX` is always used to store metadata (i.e. header/footer and anchor). The object class must be known to read the ntuple; thus, the object class name is stored in the anchor.; - Changed the default object class for user data to the more conservative `OC_SX` (before was `OC_RP_XSF`). `OC_SX` distributes data over all the targets and is probably a more sane default. This PR closes issue #8205.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8452
https://github.com/root-project/root/pull/8452:444,Integrability,rout,routines,444,"This pull-request is a follow-up of #8402. `RNTupleWriteOptionsDaos`, i.e. a subclass of `RNTupleWriteOptions`, may now be used to provide DAOS-specific options. Currently, we only support setting the object class used for user data OIDs. ## Changes or fixes:; - Contains the required changes to support backend-dependent options: classes derived from `RNTupleWriteOptions` may carry additional options.; - String serialization/deserialization routines moved to the `ROOT::Experimental::Internal::RNTupleSerialization` namespace, where they can be reused.; - RPageStorageDaos: the provided object class, if given, is used for generating the OIDs that relate to user data. `OC_SX` is always used to store metadata (i.e. header/footer and anchor). The object class must be known to read the ntuple; thus, the object class name is stored in the anchor.; - Changed the default object class for user data to the more conservative `OC_SX` (before was `OC_RP_XSF`). `OC_SX` distributes data over all the targets and is probably a more sane default. This PR closes issue #8205.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8452
https://github.com/root-project/root/issues/8453:952,Availability,down,download,952,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8453
https://github.com/root-project/root/issues/8453:934,Deployability,install,install,934,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8453
https://github.com/root-project/root/issues/8453:391,Usability,clear,clear,391,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8453
https://github.com/root-project/root/issues/8453:489,Usability,clear,clear,489,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8453
https://github.com/root-project/root/pull/8455:7,Availability,error,error,7,Syntax error in the markdown bullet list,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8455
https://github.com/root-project/root/pull/8457:171,Availability,avail,available,171,"The installation instructions in the README were outdated: they only; mentioned pre-compiled binaries, while https://root.cern/install offers; a more complete overview of available installation channels. The building instructions were misleading (see e.g.; https://root-forum.cern.ch/t/cmake-generate-step-failed-rhel8/45400/16); and incomplete (they don't mention pre-requisites and make certain; assumptions about `pwd` and directory names).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8457
https://github.com/root-project/root/pull/8457:4,Deployability,install,installation,4,"The installation instructions in the README were outdated: they only; mentioned pre-compiled binaries, while https://root.cern/install offers; a more complete overview of available installation channels. The building instructions were misleading (see e.g.; https://root-forum.cern.ch/t/cmake-generate-step-failed-rhel8/45400/16); and incomplete (they don't mention pre-requisites and make certain; assumptions about `pwd` and directory names).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8457
https://github.com/root-project/root/pull/8457:127,Deployability,install,install,127,"The installation instructions in the README were outdated: they only; mentioned pre-compiled binaries, while https://root.cern/install offers; a more complete overview of available installation channels. The building instructions were misleading (see e.g.; https://root-forum.cern.ch/t/cmake-generate-step-failed-rhel8/45400/16); and incomplete (they don't mention pre-requisites and make certain; assumptions about `pwd` and directory names).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8457
https://github.com/root-project/root/pull/8457:181,Deployability,install,installation,181,"The installation instructions in the README were outdated: they only; mentioned pre-compiled binaries, while https://root.cern/install offers; a more complete overview of available installation channels. The building instructions were misleading (see e.g.; https://root-forum.cern.ch/t/cmake-generate-step-failed-rhel8/45400/16); and incomplete (they don't mention pre-requisites and make certain; assumptions about `pwd` and directory names).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8457
https://github.com/root-project/root/issues/8458:978,Security,access,accessible,978,"- [x] Checked for duplicates. ### Describe the bug; When using ROOT::RFile in my projects, I get some compiler warnings:. ```; In file included from /opt/root_bld/include/ROOT/RDirectory.hxx:20,; from /opt/root_bld/include/ROOT/RFile.hxx:19,; from zdt-daq/gui/MainWindow.cpp:49:; /opt/root_bld/include/ROOT/RLogger.hxx: In member function ‘void ROOT::Experimental::RLogDiagCount::Increment(ROOT::Experimental::ELogLevel)’:; /opt/root_bld/include/ROOT/RLogger.hxx:72:14: warning: enumeration value ‘kUnset’ not handled in switch [-Wswitch-enum]; switch (severity) {; ^; /opt/root_bld/include/ROOT/RLogger.hxx:72:14: warning: enumeration value ‘kInfo’ not handled in switch [-Wswitch-enum]; /opt/root_bld/include/ROOT/RLogger.hxx:72:14: warning: enumeration value ‘kDebug’ not handled in switch [-Wswitch-enum]; /opt/root_bld/include/ROOT/RLogger.hxx: At global scope:; /opt/root_bld/include/ROOT/RLogger.hxx:136:7: warning: base class ‘class ROOT::Experimental::RLogChannel’ has accessible non-virtual destructor [-Wnon-virtual-dtor]; class RLogManager : public RLogChannel, public RLogHandler {; ^~~~~~~~~~~; ```. ### Expected behavior; No warnings are found. ### Setup; 1. ROOT master; 2. Ubuntu 19; 3. Self-built",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8458
https://github.com/root-project/root/issues/8459:203,Performance,load,loads,203,"- [ X] Checked for duplicates. ### Describe the bug. Right now JupyROOT/helpers/utils.py checks if it is in a jupyterlab environment by checking if requirejs exists. ; However, jupyterhub/jupyterlab 3.0 loads requirejs so that the check gets bypassed. ### Expected behavior. Jupyterhub/jupyterlab should load in the scripts/JSRoot.core.js file not does not. ### To Reproduce. Run jsroot in jupyterlab/jupyterhub 3.0. ### Setup. Root 6.22.08. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8459
https://github.com/root-project/root/issues/8459:304,Performance,load,load,304,"- [ X] Checked for duplicates. ### Describe the bug. Right now JupyROOT/helpers/utils.py checks if it is in a jupyterlab environment by checking if requirejs exists. ; However, jupyterhub/jupyterlab 3.0 loads requirejs so that the check gets bypassed. ### Expected behavior. Jupyterhub/jupyterlab should load in the scripts/JSRoot.core.js file not does not. ### To Reproduce. Run jsroot in jupyterlab/jupyterhub 3.0. ### Setup. Root 6.22.08. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8459
https://github.com/root-project/root/pull/8462:19,Availability,failure,failures,19,"It causes randomic failures in our nightlies, and being in legacy; code we are happy with disabling the tutorial altogether. As per the discussion at https://mattermost.web.cern.ch/root/pl/g8m58haqp7fejmn3wjumbur78y",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8462
https://github.com/root-project/root/pull/8463:8,Deployability,integrat,integrates,8,"This PR integrates the remaining tutorial translations that were still missing after https://github.com/root-project/root/pull/8091. After this PR, Jira issue [ROOT-10966](https://sft.its.cern.ch/jira/browse/ROOT-10966) can be resolved.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8463
https://github.com/root-project/root/pull/8463:8,Integrability,integrat,integrates,8,"This PR integrates the remaining tutorial translations that were still missing after https://github.com/root-project/root/pull/8091. After this PR, Jira issue [ROOT-10966](https://sft.its.cern.ch/jira/browse/ROOT-10966) can be resolved.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8463
https://github.com/root-project/root/pull/8464:429,Testability,log,logical,429,"1. Let use non-owned object in `TObjectDrawable`. This is the only way to provide support of objects like `THStack` and `TLegend` in PyROOT. Provide `TObjectDrawable::Set()` method - PyROOT fails with constructors template arguments evaluation.; 2. Provide `Add()`, `AddPad()`, `AddFrame()` methods in RPadBase. All should add new drawable ; 3. Make `RPad` constructors private - only RPadBase::AddPad can create new pad. Solves logical problem with `pad->SetParent(this)` calls; 4. Provide `v7/df105.py` tutorial which uses `THStack` and `TLegend`. Demonstrates that custom colors of histogram from THStack can be extracted and transported to client. ; 5. Improve original `dataframe/df105_WBosonAnalysis.py` macro to properly use draw options",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8464
https://github.com/root-project/root/issues/8465:89,Usability,Simpl,SimpleFiller,89,"This does not compile although it should:. ```cpp; #include <ROOT/RDataFrame.hxx>. class SimpleFiller {; TH1D fHisto;. public:; SimpleFiller() : fHisto("""", """", 128, 0., 0.) {}; SimpleFiller(const SimpleFiller &) = default;; SimpleFiller(SimpleFiller &&) = default;. void Fill(double x) { fHisto.Fill(x); }; void Merge(const std::vector<SimpleFiller *> &others); {; TList l;; for (auto *o : others); l.Add(&o->GetHisto());; fHisto.Merge(&l);; }. TH1D &GetHisto() { return fHisto; }; };. class MaxSlotHelper : public ROOT::Detail::RDF::RActionImpl<MaxSlotHelper> {; const std::shared_ptr<unsigned int> fMaxSlot; // final result; std::vector<unsigned int> fMaxSlots; // per-thread partial results; public:; MaxSlotHelper(unsigned int nSlots); : fMaxSlot(std::make_shared<unsigned int>(std::numeric_limits<unsigned int>::lowest())),; fMaxSlots(nSlots, std::numeric_limits<unsigned int>::lowest()); {; }; MaxSlotHelper(MaxSlotHelper &&) = default;; MaxSlotHelper(const MaxSlotHelper &) = delete;; using Result_t = unsigned int;; std::shared_ptr<unsigned int> GetResultPtr() const { return fMaxSlot; }; void Initialize() {}; void InitTask(TTreeReader *, unsigned int) {}; void Exec(unsigned int slot, unsigned int /*slot2*/) { fMaxSlots[slot] = std::max(fMaxSlots[slot], slot); }; void Finalize() { *fMaxSlot = *std::max_element(fMaxSlots.begin(), fMaxSlots.end()); }. std::string GetActionName() { return ""MaxSlot""; }; };. int main() {; auto df = ROOT::RDataFrame(1).Define(""x"", [] { return 1; });; SimpleFiller sf;; auto filled = df.Fill(sf, {""x""});; MaxSlotHelper ms(1);; auto max = df.Book<int>(ms, {""x""});; }; ```. The problem is with the template type deduction using forwarding references, we probably need to pass the `T` through `std::decay` to remove ref/const qualifiers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8465
https://github.com/root-project/root/issues/8465:128,Usability,Simpl,SimpleFiller,128,"This does not compile although it should:. ```cpp; #include <ROOT/RDataFrame.hxx>. class SimpleFiller {; TH1D fHisto;. public:; SimpleFiller() : fHisto("""", """", 128, 0., 0.) {}; SimpleFiller(const SimpleFiller &) = default;; SimpleFiller(SimpleFiller &&) = default;. void Fill(double x) { fHisto.Fill(x); }; void Merge(const std::vector<SimpleFiller *> &others); {; TList l;; for (auto *o : others); l.Add(&o->GetHisto());; fHisto.Merge(&l);; }. TH1D &GetHisto() { return fHisto; }; };. class MaxSlotHelper : public ROOT::Detail::RDF::RActionImpl<MaxSlotHelper> {; const std::shared_ptr<unsigned int> fMaxSlot; // final result; std::vector<unsigned int> fMaxSlots; // per-thread partial results; public:; MaxSlotHelper(unsigned int nSlots); : fMaxSlot(std::make_shared<unsigned int>(std::numeric_limits<unsigned int>::lowest())),; fMaxSlots(nSlots, std::numeric_limits<unsigned int>::lowest()); {; }; MaxSlotHelper(MaxSlotHelper &&) = default;; MaxSlotHelper(const MaxSlotHelper &) = delete;; using Result_t = unsigned int;; std::shared_ptr<unsigned int> GetResultPtr() const { return fMaxSlot; }; void Initialize() {}; void InitTask(TTreeReader *, unsigned int) {}; void Exec(unsigned int slot, unsigned int /*slot2*/) { fMaxSlots[slot] = std::max(fMaxSlots[slot], slot); }; void Finalize() { *fMaxSlot = *std::max_element(fMaxSlots.begin(), fMaxSlots.end()); }. std::string GetActionName() { return ""MaxSlot""; }; };. int main() {; auto df = ROOT::RDataFrame(1).Define(""x"", [] { return 1; });; SimpleFiller sf;; auto filled = df.Fill(sf, {""x""});; MaxSlotHelper ms(1);; auto max = df.Book<int>(ms, {""x""});; }; ```. The problem is with the template type deduction using forwarding references, we probably need to pass the `T` through `std::decay` to remove ref/const qualifiers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8465
https://github.com/root-project/root/issues/8465:177,Usability,Simpl,SimpleFiller,177,"This does not compile although it should:. ```cpp; #include <ROOT/RDataFrame.hxx>. class SimpleFiller {; TH1D fHisto;. public:; SimpleFiller() : fHisto("""", """", 128, 0., 0.) {}; SimpleFiller(const SimpleFiller &) = default;; SimpleFiller(SimpleFiller &&) = default;. void Fill(double x) { fHisto.Fill(x); }; void Merge(const std::vector<SimpleFiller *> &others); {; TList l;; for (auto *o : others); l.Add(&o->GetHisto());; fHisto.Merge(&l);; }. TH1D &GetHisto() { return fHisto; }; };. class MaxSlotHelper : public ROOT::Detail::RDF::RActionImpl<MaxSlotHelper> {; const std::shared_ptr<unsigned int> fMaxSlot; // final result; std::vector<unsigned int> fMaxSlots; // per-thread partial results; public:; MaxSlotHelper(unsigned int nSlots); : fMaxSlot(std::make_shared<unsigned int>(std::numeric_limits<unsigned int>::lowest())),; fMaxSlots(nSlots, std::numeric_limits<unsigned int>::lowest()); {; }; MaxSlotHelper(MaxSlotHelper &&) = default;; MaxSlotHelper(const MaxSlotHelper &) = delete;; using Result_t = unsigned int;; std::shared_ptr<unsigned int> GetResultPtr() const { return fMaxSlot; }; void Initialize() {}; void InitTask(TTreeReader *, unsigned int) {}; void Exec(unsigned int slot, unsigned int /*slot2*/) { fMaxSlots[slot] = std::max(fMaxSlots[slot], slot); }; void Finalize() { *fMaxSlot = *std::max_element(fMaxSlots.begin(), fMaxSlots.end()); }. std::string GetActionName() { return ""MaxSlot""; }; };. int main() {; auto df = ROOT::RDataFrame(1).Define(""x"", [] { return 1; });; SimpleFiller sf;; auto filled = df.Fill(sf, {""x""});; MaxSlotHelper ms(1);; auto max = df.Book<int>(ms, {""x""});; }; ```. The problem is with the template type deduction using forwarding references, we probably need to pass the `T` through `std::decay` to remove ref/const qualifiers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8465
https://github.com/root-project/root/issues/8465:196,Usability,Simpl,SimpleFiller,196,"This does not compile although it should:. ```cpp; #include <ROOT/RDataFrame.hxx>. class SimpleFiller {; TH1D fHisto;. public:; SimpleFiller() : fHisto("""", """", 128, 0., 0.) {}; SimpleFiller(const SimpleFiller &) = default;; SimpleFiller(SimpleFiller &&) = default;. void Fill(double x) { fHisto.Fill(x); }; void Merge(const std::vector<SimpleFiller *> &others); {; TList l;; for (auto *o : others); l.Add(&o->GetHisto());; fHisto.Merge(&l);; }. TH1D &GetHisto() { return fHisto; }; };. class MaxSlotHelper : public ROOT::Detail::RDF::RActionImpl<MaxSlotHelper> {; const std::shared_ptr<unsigned int> fMaxSlot; // final result; std::vector<unsigned int> fMaxSlots; // per-thread partial results; public:; MaxSlotHelper(unsigned int nSlots); : fMaxSlot(std::make_shared<unsigned int>(std::numeric_limits<unsigned int>::lowest())),; fMaxSlots(nSlots, std::numeric_limits<unsigned int>::lowest()); {; }; MaxSlotHelper(MaxSlotHelper &&) = default;; MaxSlotHelper(const MaxSlotHelper &) = delete;; using Result_t = unsigned int;; std::shared_ptr<unsigned int> GetResultPtr() const { return fMaxSlot; }; void Initialize() {}; void InitTask(TTreeReader *, unsigned int) {}; void Exec(unsigned int slot, unsigned int /*slot2*/) { fMaxSlots[slot] = std::max(fMaxSlots[slot], slot); }; void Finalize() { *fMaxSlot = *std::max_element(fMaxSlots.begin(), fMaxSlots.end()); }. std::string GetActionName() { return ""MaxSlot""; }; };. int main() {; auto df = ROOT::RDataFrame(1).Define(""x"", [] { return 1; });; SimpleFiller sf;; auto filled = df.Fill(sf, {""x""});; MaxSlotHelper ms(1);; auto max = df.Book<int>(ms, {""x""});; }; ```. The problem is with the template type deduction using forwarding references, we probably need to pass the `T` through `std::decay` to remove ref/const qualifiers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8465
https://github.com/root-project/root/issues/8465:224,Usability,Simpl,SimpleFiller,224,"This does not compile although it should:. ```cpp; #include <ROOT/RDataFrame.hxx>. class SimpleFiller {; TH1D fHisto;. public:; SimpleFiller() : fHisto("""", """", 128, 0., 0.) {}; SimpleFiller(const SimpleFiller &) = default;; SimpleFiller(SimpleFiller &&) = default;. void Fill(double x) { fHisto.Fill(x); }; void Merge(const std::vector<SimpleFiller *> &others); {; TList l;; for (auto *o : others); l.Add(&o->GetHisto());; fHisto.Merge(&l);; }. TH1D &GetHisto() { return fHisto; }; };. class MaxSlotHelper : public ROOT::Detail::RDF::RActionImpl<MaxSlotHelper> {; const std::shared_ptr<unsigned int> fMaxSlot; // final result; std::vector<unsigned int> fMaxSlots; // per-thread partial results; public:; MaxSlotHelper(unsigned int nSlots); : fMaxSlot(std::make_shared<unsigned int>(std::numeric_limits<unsigned int>::lowest())),; fMaxSlots(nSlots, std::numeric_limits<unsigned int>::lowest()); {; }; MaxSlotHelper(MaxSlotHelper &&) = default;; MaxSlotHelper(const MaxSlotHelper &) = delete;; using Result_t = unsigned int;; std::shared_ptr<unsigned int> GetResultPtr() const { return fMaxSlot; }; void Initialize() {}; void InitTask(TTreeReader *, unsigned int) {}; void Exec(unsigned int slot, unsigned int /*slot2*/) { fMaxSlots[slot] = std::max(fMaxSlots[slot], slot); }; void Finalize() { *fMaxSlot = *std::max_element(fMaxSlots.begin(), fMaxSlots.end()); }. std::string GetActionName() { return ""MaxSlot""; }; };. int main() {; auto df = ROOT::RDataFrame(1).Define(""x"", [] { return 1; });; SimpleFiller sf;; auto filled = df.Fill(sf, {""x""});; MaxSlotHelper ms(1);; auto max = df.Book<int>(ms, {""x""});; }; ```. The problem is with the template type deduction using forwarding references, we probably need to pass the `T` through `std::decay` to remove ref/const qualifiers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8465
https://github.com/root-project/root/issues/8465:237,Usability,Simpl,SimpleFiller,237,"This does not compile although it should:. ```cpp; #include <ROOT/RDataFrame.hxx>. class SimpleFiller {; TH1D fHisto;. public:; SimpleFiller() : fHisto("""", """", 128, 0., 0.) {}; SimpleFiller(const SimpleFiller &) = default;; SimpleFiller(SimpleFiller &&) = default;. void Fill(double x) { fHisto.Fill(x); }; void Merge(const std::vector<SimpleFiller *> &others); {; TList l;; for (auto *o : others); l.Add(&o->GetHisto());; fHisto.Merge(&l);; }. TH1D &GetHisto() { return fHisto; }; };. class MaxSlotHelper : public ROOT::Detail::RDF::RActionImpl<MaxSlotHelper> {; const std::shared_ptr<unsigned int> fMaxSlot; // final result; std::vector<unsigned int> fMaxSlots; // per-thread partial results; public:; MaxSlotHelper(unsigned int nSlots); : fMaxSlot(std::make_shared<unsigned int>(std::numeric_limits<unsigned int>::lowest())),; fMaxSlots(nSlots, std::numeric_limits<unsigned int>::lowest()); {; }; MaxSlotHelper(MaxSlotHelper &&) = default;; MaxSlotHelper(const MaxSlotHelper &) = delete;; using Result_t = unsigned int;; std::shared_ptr<unsigned int> GetResultPtr() const { return fMaxSlot; }; void Initialize() {}; void InitTask(TTreeReader *, unsigned int) {}; void Exec(unsigned int slot, unsigned int /*slot2*/) { fMaxSlots[slot] = std::max(fMaxSlots[slot], slot); }; void Finalize() { *fMaxSlot = *std::max_element(fMaxSlots.begin(), fMaxSlots.end()); }. std::string GetActionName() { return ""MaxSlot""; }; };. int main() {; auto df = ROOT::RDataFrame(1).Define(""x"", [] { return 1; });; SimpleFiller sf;; auto filled = df.Fill(sf, {""x""});; MaxSlotHelper ms(1);; auto max = df.Book<int>(ms, {""x""});; }; ```. The problem is with the template type deduction using forwarding references, we probably need to pass the `T` through `std::decay` to remove ref/const qualifiers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8465
https://github.com/root-project/root/issues/8465:336,Usability,Simpl,SimpleFiller,336,"This does not compile although it should:. ```cpp; #include <ROOT/RDataFrame.hxx>. class SimpleFiller {; TH1D fHisto;. public:; SimpleFiller() : fHisto("""", """", 128, 0., 0.) {}; SimpleFiller(const SimpleFiller &) = default;; SimpleFiller(SimpleFiller &&) = default;. void Fill(double x) { fHisto.Fill(x); }; void Merge(const std::vector<SimpleFiller *> &others); {; TList l;; for (auto *o : others); l.Add(&o->GetHisto());; fHisto.Merge(&l);; }. TH1D &GetHisto() { return fHisto; }; };. class MaxSlotHelper : public ROOT::Detail::RDF::RActionImpl<MaxSlotHelper> {; const std::shared_ptr<unsigned int> fMaxSlot; // final result; std::vector<unsigned int> fMaxSlots; // per-thread partial results; public:; MaxSlotHelper(unsigned int nSlots); : fMaxSlot(std::make_shared<unsigned int>(std::numeric_limits<unsigned int>::lowest())),; fMaxSlots(nSlots, std::numeric_limits<unsigned int>::lowest()); {; }; MaxSlotHelper(MaxSlotHelper &&) = default;; MaxSlotHelper(const MaxSlotHelper &) = delete;; using Result_t = unsigned int;; std::shared_ptr<unsigned int> GetResultPtr() const { return fMaxSlot; }; void Initialize() {}; void InitTask(TTreeReader *, unsigned int) {}; void Exec(unsigned int slot, unsigned int /*slot2*/) { fMaxSlots[slot] = std::max(fMaxSlots[slot], slot); }; void Finalize() { *fMaxSlot = *std::max_element(fMaxSlots.begin(), fMaxSlots.end()); }. std::string GetActionName() { return ""MaxSlot""; }; };. int main() {; auto df = ROOT::RDataFrame(1).Define(""x"", [] { return 1; });; SimpleFiller sf;; auto filled = df.Fill(sf, {""x""});; MaxSlotHelper ms(1);; auto max = df.Book<int>(ms, {""x""});; }; ```. The problem is with the template type deduction using forwarding references, we probably need to pass the `T` through `std::decay` to remove ref/const qualifiers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8465
https://github.com/root-project/root/issues/8465:1494,Usability,Simpl,SimpleFiller,1494,"This does not compile although it should:. ```cpp; #include <ROOT/RDataFrame.hxx>. class SimpleFiller {; TH1D fHisto;. public:; SimpleFiller() : fHisto("""", """", 128, 0., 0.) {}; SimpleFiller(const SimpleFiller &) = default;; SimpleFiller(SimpleFiller &&) = default;. void Fill(double x) { fHisto.Fill(x); }; void Merge(const std::vector<SimpleFiller *> &others); {; TList l;; for (auto *o : others); l.Add(&o->GetHisto());; fHisto.Merge(&l);; }. TH1D &GetHisto() { return fHisto; }; };. class MaxSlotHelper : public ROOT::Detail::RDF::RActionImpl<MaxSlotHelper> {; const std::shared_ptr<unsigned int> fMaxSlot; // final result; std::vector<unsigned int> fMaxSlots; // per-thread partial results; public:; MaxSlotHelper(unsigned int nSlots); : fMaxSlot(std::make_shared<unsigned int>(std::numeric_limits<unsigned int>::lowest())),; fMaxSlots(nSlots, std::numeric_limits<unsigned int>::lowest()); {; }; MaxSlotHelper(MaxSlotHelper &&) = default;; MaxSlotHelper(const MaxSlotHelper &) = delete;; using Result_t = unsigned int;; std::shared_ptr<unsigned int> GetResultPtr() const { return fMaxSlot; }; void Initialize() {}; void InitTask(TTreeReader *, unsigned int) {}; void Exec(unsigned int slot, unsigned int /*slot2*/) { fMaxSlots[slot] = std::max(fMaxSlots[slot], slot); }; void Finalize() { *fMaxSlot = *std::max_element(fMaxSlots.begin(), fMaxSlots.end()); }. std::string GetActionName() { return ""MaxSlot""; }; };. int main() {; auto df = ROOT::RDataFrame(1).Define(""x"", [] { return 1; });; SimpleFiller sf;; auto filled = df.Fill(sf, {""x""});; MaxSlotHelper ms(1);; auto max = df.Book<int>(ms, {""x""});; }; ```. The problem is with the template type deduction using forwarding references, we probably need to pass the `T` through `std::decay` to remove ref/const qualifiers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8465
https://github.com/root-project/root/pull/8467:95,Deployability,update,updated,95,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8467
https://github.com/root-project/root/pull/8467:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8467
https://github.com/root-project/root/pull/8468:8,Testability,test,tests,8,And add tests. This fixes #8465.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8468
https://github.com/root-project/root/issues/8470:2971,Integrability,rout,routine,2971,"., result=..., dropstd=true); at /home/pcanal/root_working/code/root/core/clingutils/src/TClingUtils.cxx:615; 615 {; (gdb) p tname.c_str(); $33 = 0x555556b67030 ""function<int(const Zyx*,const std::string&)>""; (gdb) bt; #0 ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x55555616cc10, tname=..., result=..., dropstd=true); at /home/pcanal/root_working/code/root/core/clingutils/src/TClingUtils.cxx:615; #1 0x00007ffff7ce30ea in TClassEdit::TSplitType::ShortType (this=0x7fffffffa780, answ=..., mode=3618) at /home/pcanal/root_working/code/root/core/foundation/src/TClassEdit.cxx:437; #2 0x00007ffff7ce48e9 in TClassEdit::GetNormalizedName (norm_name=..., name=...) at /home/pcanal/root_working/code/root/core/foundation/src/TClassEdit.cxx:854; #3 0x00007ffff7d0a5a3 in TClass::GetClass (name=0x7ffff78de000 ""vector<function<int(const Zyx*,const std::string&)> >"", load=true, silent=false, hint_pair_offset=0, hint_pair_size=0); at /home/pcanal/root_working/code/root/core/meta/src/TClass.cxx:3041; #4 0x00007ffff7d0a221 in TClass::GetClass (name=0x7ffff78de000 ""vector<function<int(const Zyx*,const std::string&)> >"", load=true, silent=false); at /home/pcanal/root_working/code/root/core/meta/src/TClass.cxx:2957; #5 0x00007ffff78df048 in ?? (); #6 0x0000000000000000 in ?? (); (gdb) n; .....; 633 const cling::LookupHelper& lh = fInterpreter->getLookupHelper();; (gdb); 634 clang::QualType t = lh.findType(tname.c_str(), ToLHDS(WantDiags()));; (gdb); 639 if (!t.isNull()) {; (gdb) p t.dump(); TemplateSpecializationType 0x555556b681d0 'function<int (const int *, const std::string &)>' sugar function; |-TemplateArgument type 'int (const int *, const std::string &)'; `-RecordType 0x555556b67b20 'class std::function<int (const int *, const class std::__cxx11::basic_string<char> &)>'; `-ClassTemplateSpecialization 0x555556b67a18 'function'; $34 = void; ```. (This likely involves the fact that Clang's type printing routine spell unknown type as 'int' :) ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8470
https://github.com/root-project/root/issues/8470:1916,Performance,load,load,1916,"tils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x55555616cc10, tname=..., result=..., dropstd=true); at /home/pcanal/root_working/code/root/core/clingutils/src/TClingUtils.cxx:615; 615 {; (gdb) p tname.c_str(); $33 = 0x555556b67030 ""function<int(const Zyx*,const std::string&)>""; (gdb) bt; #0 ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x55555616cc10, tname=..., result=..., dropstd=true); at /home/pcanal/root_working/code/root/core/clingutils/src/TClingUtils.cxx:615; #1 0x00007ffff7ce30ea in TClassEdit::TSplitType::ShortType (this=0x7fffffffa780, answ=..., mode=3618) at /home/pcanal/root_working/code/root/core/foundation/src/TClassEdit.cxx:437; #2 0x00007ffff7ce48e9 in TClassEdit::GetNormalizedName (norm_name=..., name=...) at /home/pcanal/root_working/code/root/core/foundation/src/TClassEdit.cxx:854; #3 0x00007ffff7d0a5a3 in TClass::GetClass (name=0x7ffff78de000 ""vector<function<int(const Zyx*,const std::string&)> >"", load=true, silent=false, hint_pair_offset=0, hint_pair_size=0); at /home/pcanal/root_working/code/root/core/meta/src/TClass.cxx:3041; #4 0x00007ffff7d0a221 in TClass::GetClass (name=0x7ffff78de000 ""vector<function<int(const Zyx*,const std::string&)> >"", load=true, silent=false); at /home/pcanal/root_working/code/root/core/meta/src/TClass.cxx:2957; #5 0x00007ffff78df048 in ?? (); #6 0x0000000000000000 in ?? (); (gdb) n; .....; 633 const cling::LookupHelper& lh = fInterpreter->getLookupHelper();; (gdb); 634 clang::QualType t = lh.findType(tname.c_str(), ToLHDS(WantDiags()));; (gdb); 639 if (!t.isNull()) {; (gdb) p t.dump(); TemplateSpecializationType 0x555556b681d0 'function<int (const int *, const std::string &)>' sugar function; |-TemplateArgument type 'int (const int *, const std::string &)'; `-RecordType 0x555556b67b20 'class std::function<int (const int *, const class std::__cxx11::basic_string<char> &)>'; `-ClassTemplateSpecialization 0x555556b67a18 'function'; $34 = void; ```. (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8470
https://github.com/root-project/root/issues/8470:2170,Performance,load,load,2170,"., result=..., dropstd=true); at /home/pcanal/root_working/code/root/core/clingutils/src/TClingUtils.cxx:615; 615 {; (gdb) p tname.c_str(); $33 = 0x555556b67030 ""function<int(const Zyx*,const std::string&)>""; (gdb) bt; #0 ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x55555616cc10, tname=..., result=..., dropstd=true); at /home/pcanal/root_working/code/root/core/clingutils/src/TClingUtils.cxx:615; #1 0x00007ffff7ce30ea in TClassEdit::TSplitType::ShortType (this=0x7fffffffa780, answ=..., mode=3618) at /home/pcanal/root_working/code/root/core/foundation/src/TClassEdit.cxx:437; #2 0x00007ffff7ce48e9 in TClassEdit::GetNormalizedName (norm_name=..., name=...) at /home/pcanal/root_working/code/root/core/foundation/src/TClassEdit.cxx:854; #3 0x00007ffff7d0a5a3 in TClass::GetClass (name=0x7ffff78de000 ""vector<function<int(const Zyx*,const std::string&)> >"", load=true, silent=false, hint_pair_offset=0, hint_pair_size=0); at /home/pcanal/root_working/code/root/core/meta/src/TClass.cxx:3041; #4 0x00007ffff7d0a221 in TClass::GetClass (name=0x7ffff78de000 ""vector<function<int(const Zyx*,const std::string&)> >"", load=true, silent=false); at /home/pcanal/root_working/code/root/core/meta/src/TClass.cxx:2957; #5 0x00007ffff78df048 in ?? (); #6 0x0000000000000000 in ?? (); (gdb) n; .....; 633 const cling::LookupHelper& lh = fInterpreter->getLookupHelper();; (gdb); 634 clang::QualType t = lh.findType(tname.c_str(), ToLHDS(WantDiags()));; (gdb); 639 if (!t.isNull()) {; (gdb) p t.dump(); TemplateSpecializationType 0x555556b681d0 'function<int (const int *, const std::string &)>' sugar function; |-TemplateArgument type 'int (const int *, const std::string &)'; `-RecordType 0x555556b67b20 'class std::function<int (const int *, const class std::__cxx11::basic_string<char> &)>'; `-ClassTemplateSpecialization 0x555556b67a18 'function'; $34 = void; ```. (This likely involves the fact that Clang's type printing routine spell unknown type as 'int' :) ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8470
https://github.com/root-project/root/issues/8471:76,Usability,clear,clear,76,"### Is your feature request related to a problem? Please describe.; <!--; A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]""; -->. I wanted to use the [Lambert W function](https://en.wikipedia.org/wiki/Lambert_W_function) to find a root of a function. ### Describe the solution you'd like; <!--; A clear and concise description of what you want to happen.; -->. Having a `TMath::LambertW(Double_t x, Int_t k, Double_t tol=1e-10)` and `TMath::LambertW(TComplex x, Int_t k, Double_t tol=1e-10)`. ### Describe alternatives you've considered; <!--; Can you think of alternative solutions or features?; -->. Of course one can just solve it numerically by finding a root. ### Additional context; <!--; Add any other context or screenshots about the feature requested here.; -->. [On the Lambert W function](https://cs.uwaterloo.ca/research/tr/1993/03/W.pdf) provides some theoretical background. I'm aware of two implementations of the Lambert W function in code:; https://github.com/fredrik-johansson/mpmath/blob/c11db84b3237bd8fc6721f5a0c5d7c0c98a24dc1/mpmath/functions/functions.py#L327-L490; and; https://github.com/scipy/scipy/blob/master/scipy/special/_lambertw.pxd; which is based on the first one.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8471
https://github.com/root-project/root/issues/8471:353,Usability,clear,clear,353,"### Is your feature request related to a problem? Please describe.; <!--; A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]""; -->. I wanted to use the [Lambert W function](https://en.wikipedia.org/wiki/Lambert_W_function) to find a root of a function. ### Describe the solution you'd like; <!--; A clear and concise description of what you want to happen.; -->. Having a `TMath::LambertW(Double_t x, Int_t k, Double_t tol=1e-10)` and `TMath::LambertW(TComplex x, Int_t k, Double_t tol=1e-10)`. ### Describe alternatives you've considered; <!--; Can you think of alternative solutions or features?; -->. Of course one can just solve it numerically by finding a root. ### Additional context; <!--; Add any other context or screenshots about the feature requested here.; -->. [On the Lambert W function](https://cs.uwaterloo.ca/research/tr/1993/03/W.pdf) provides some theoretical background. I'm aware of two implementations of the Lambert W function in code:; https://github.com/fredrik-johansson/mpmath/blob/c11db84b3237bd8fc6721f5a0c5d7c0c98a24dc1/mpmath/functions/functions.py#L327-L490; and; https://github.com/scipy/scipy/blob/master/scipy/special/_lambertw.pxd; which is based on the first one.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8471
https://github.com/root-project/root/issues/8474:163,Availability,fault,faults,163,"I am working with dev3 LCG nigthlies slot. ; Starting from this week, my PyROOT/RooFit scripts with complicated PDFs with multiple components produce segmentation faults for `plotOn` invocation. Unfortunately I can not reproduce the problem with simple PDFs. ; There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method.; Problem appears from the start of this week. There were no problem till with last week nightlies ; as well as there are no problems with any released versions of ROOT. . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. ROOT version 6.25.01 from dev3 nightlies slot ; 2. lxplus.cern.ch ; 3. LCG nightlies dev3 slot . ### Additional context; <!--; Add any other context about the problem here.; -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:847,Availability,fault,fault,847,"I am working with dev3 LCG nigthlies slot. ; Starting from this week, my PyROOT/RooFit scripts with complicated PDFs with multiple components produce segmentation faults for `plotOn` invocation. Unfortunately I can not reproduce the problem with simple PDFs. ; There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method.; Problem appears from the start of this week. There were no problem till with last week nightlies ; as well as there are no problems with any released versions of ROOT. . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. ROOT version 6.25.01 from dev3 nightlies slot ; 2. lxplus.cern.ch ; 3. LCG nightlies dev3 slot . ### Additional context; <!--; Add any other context about the problem here.; -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:1611,Availability,down,download,1611,"ortunately I can not reproduce the problem with simple PDFs. ; There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method.; Problem appears from the start of this week. There were no problem till with last week nightlies ; as well as there are no problems with any released versions of ROOT. . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. ROOT version 6.25.01 from dev3 nightlies slot ; 2. lxplus.cern.ch ; 3. LCG nightlies dev3 slot . ### Additional context; <!--; Add any other context about the problem here.; -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'venot run test Last Thursday and Friday). There are no problems with ""simple"" PDFs, and there is no problems with PDF-only plots.; Problem appears when I make plot of DATA with multicomponent PDFs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:349,Deployability,release,released,349,"I am working with dev3 LCG nigthlies slot. ; Starting from this week, my PyROOT/RooFit scripts with complicated PDFs with multiple components produce segmentation faults for `plotOn` invocation. Unfortunately I can not reproduce the problem with simple PDFs. ; There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method.; Problem appears from the start of this week. There were no problem till with last week nightlies ; as well as there are no problems with any released versions of ROOT. . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. ROOT version 6.25.01 from dev3 nightlies slot ; 2. lxplus.cern.ch ; 3. LCG nightlies dev3 slot . ### Additional context; <!--; Add any other context about the problem here.; -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:1088,Deployability,release,released,1088,"g from this week, my PyROOT/RooFit scripts with complicated PDFs with multiple components produce segmentation faults for `plotOn` invocation. Unfortunately I can not reproduce the problem with simple PDFs. ; There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method.; Problem appears from the start of this week. There were no problem till with last week nightlies ; as well as there are no problems with any released versions of ROOT. . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. ROOT version 6.25.01 from dev3 nightlies slot ; 2. lxplus.cern.ch ; 3. LCG nightlies dev3 slot . ### Additional context; <!--; Add any other context about the problem here.; -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'venot run test Last Thursday and Friday). There are ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:1593,Deployability,install,install,1593,"ortunately I can not reproduce the problem with simple PDFs. ; There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method.; Problem appears from the start of this week. There were no problem till with last week nightlies ; as well as there are no problems with any released versions of ROOT. . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. ROOT version 6.25.01 from dev3 nightlies slot ; 2. lxplus.cern.ch ; 3. LCG nightlies dev3 slot . ### Additional context; <!--; Add any other context about the problem here.; -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'venot run test Last Thursday and Friday). There are no problems with ""simple"" PDFs, and there is no problems with PDF-only plots.; Problem appears when I make plot of DATA with multicomponent PDFs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:1864,Deployability,release,released,1864,"ortunately I can not reproduce the problem with simple PDFs. ; There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method.; Problem appears from the start of this week. There were no problem till with last week nightlies ; as well as there are no problems with any released versions of ROOT. . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. ROOT version 6.25.01 from dev3 nightlies slot ; 2. lxplus.cern.ch ; 3. LCG nightlies dev3 slot . ### Additional context; <!--; Add any other context about the problem here.; -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'venot run test Last Thursday and Friday). There are no problems with ""simple"" PDFs, and there is no problems with PDF-only plots.; Problem appears when I make plot of DATA with multicomponent PDFs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:1895,Testability,test,tests,1895,"ortunately I can not reproduce the problem with simple PDFs. ; There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method.; Problem appears from the start of this week. There were no problem till with last week nightlies ; as well as there are no problems with any released versions of ROOT. . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. ROOT version 6.25.01 from dev3 nightlies slot ; 2. lxplus.cern.ch ; 3. LCG nightlies dev3 slot . ### Additional context; <!--; Add any other context about the problem here.; -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'venot run test Last Thursday and Friday). There are no problems with ""simple"" PDFs, and there is no problems with PDF-only plots.; Problem appears when I make plot of DATA with multicomponent PDFs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:2011,Testability,test,test,2011,"ortunately I can not reproduce the problem with simple PDFs. ; There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method.; Problem appears from the start of this week. There were no problem till with last week nightlies ; as well as there are no problems with any released versions of ROOT. . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. ROOT version 6.25.01 from dev3 nightlies slot ; 2. lxplus.cern.ch ; 3. LCG nightlies dev3 slot . ### Additional context; <!--; Add any other context about the problem here.; -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'venot run test Last Thursday and Friday). There are no problems with ""simple"" PDFs, and there is no problems with PDF-only plots.; Problem appears when I make plot of DATA with multicomponent PDFs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:246,Usability,simpl,simple,246,"I am working with dev3 LCG nigthlies slot. ; Starting from this week, my PyROOT/RooFit scripts with complicated PDFs with multiple components produce segmentation faults for `plotOn` invocation. Unfortunately I can not reproduce the problem with simple PDFs. ; There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method.; Problem appears from the start of this week. There were no problem till with last week nightlies ; as well as there are no problems with any released versions of ROOT. . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. ROOT version 6.25.01 from dev3 nightlies slot ; 2. lxplus.cern.ch ; 3. LCG nightlies dev3 slot . ### Additional context; <!--; Add any other context about the problem here.; -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:767,Usability,clear,clear,767,"I am working with dev3 LCG nigthlies slot. ; Starting from this week, my PyROOT/RooFit scripts with complicated PDFs with multiple components produce segmentation faults for `plotOn` invocation. Unfortunately I can not reproduce the problem with simple PDFs. ; There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method.; Problem appears from the start of this week. There were no problem till with last week nightlies ; as well as there are no problems with any released versions of ROOT. . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. ROOT version 6.25.01 from dev3 nightlies slot ; 2. lxplus.cern.ch ; 3. LCG nightlies dev3 slot . ### Additional context; <!--; Add any other context about the problem here.; -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:1148,Usability,clear,clear,1148," faults for `plotOn` invocation. Unfortunately I can not reproduce the problem with simple PDFs. ; There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method.; Problem appears from the start of this week. There were no problem till with last week nightlies ; as well as there are no problems with any released versions of ROOT. . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. ROOT version 6.25.01 from dev3 nightlies slot ; 2. lxplus.cern.ch ; 3. LCG nightlies dev3 slot . ### Additional context; <!--; Add any other context about the problem here.; -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'venot run test Last Thursday and Friday). There are no problems with ""simple"" PDFs, and there is no problems with PDF-only plots.; Problem appears when I make plo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:2071,Usability,simpl,simple,2071,"ortunately I can not reproduce the problem with simple PDFs. ; There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method.; Problem appears from the start of this week. There were no problem till with last week nightlies ; as well as there are no problems with any released versions of ROOT. . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. ROOT version 6.25.01 from dev3 nightlies slot ; 2. lxplus.cern.ch ; 3. LCG nightlies dev3 slot . ### Additional context; <!--; Add any other context about the problem here.; -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'venot run test Last Thursday and Friday). There are no problems with ""simple"" PDFs, and there is no problems with PDF-only plots.; Problem appears when I make plot of DATA with multicomponent PDFs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/pull/8476:496,Availability,error,error,496,"…eritance Python objects. When a Python class derives from a C++ class, cppyy jits a C++ wrapper class; that inherits from the base C++	class. Since I/O on jitted classes is not; supported by ROOT, trying to pickle a cross-inheritance Python object fails.; For this to work, dictionaries would need to be generated for the jitted class; before serialization, and they would need to be carried along for deserialization too. Therefore, this commit replaces the previous segfault by an explanatory error; message when the user tries to pickle a cross-inheritance Python object. It is; suggested in the message to define a custom `__reduce__` method for the derived; Python class. That `__reduce__` method can e.g. return a callable and some; arguments with which the derived object can be constructed during deserialization,; thus preventing any attempt to serialize the object itself. The old PyROOT did not jit any wrapper class during cross-inheritance (so it did; not suffer from the problem described above), but serialization/deserialization; of cross-inheritance Python objects was not properly supported anyway,; since the class of the unpickled object was the base C++ class, not the derived; Python class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8476
https://github.com/root-project/root/pull/8476:89,Integrability,wrap,wrapper,89,"…eritance Python objects. When a Python class derives from a C++ class, cppyy jits a C++ wrapper class; that inherits from the base C++	class. Since I/O on jitted classes is not; supported by ROOT, trying to pickle a cross-inheritance Python object fails.; For this to work, dictionaries would need to be generated for the jitted class; before serialization, and they would need to be carried along for deserialization too. Therefore, this commit replaces the previous segfault by an explanatory error; message when the user tries to pickle a cross-inheritance Python object. It is; suggested in the message to define a custom `__reduce__` method for the derived; Python class. That `__reduce__` method can e.g. return a callable and some; arguments with which the derived object can be constructed during deserialization,; thus preventing any attempt to serialize the object itself. The old PyROOT did not jit any wrapper class during cross-inheritance (so it did; not suffer from the problem described above), but serialization/deserialization; of cross-inheritance Python objects was not properly supported anyway,; since the class of the unpickled object was the base C++ class, not the derived; Python class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8476
https://github.com/root-project/root/pull/8476:503,Integrability,message,message,503,"…eritance Python objects. When a Python class derives from a C++ class, cppyy jits a C++ wrapper class; that inherits from the base C++	class. Since I/O on jitted classes is not; supported by ROOT, trying to pickle a cross-inheritance Python object fails.; For this to work, dictionaries would need to be generated for the jitted class; before serialization, and they would need to be carried along for deserialization too. Therefore, this commit replaces the previous segfault by an explanatory error; message when the user tries to pickle a cross-inheritance Python object. It is; suggested in the message to define a custom `__reduce__` method for the derived; Python class. That `__reduce__` method can e.g. return a callable and some; arguments with which the derived object can be constructed during deserialization,; thus preventing any attempt to serialize the object itself. The old PyROOT did not jit any wrapper class during cross-inheritance (so it did; not suffer from the problem described above), but serialization/deserialization; of cross-inheritance Python objects was not properly supported anyway,; since the class of the unpickled object was the base C++ class, not the derived; Python class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8476
https://github.com/root-project/root/pull/8476:600,Integrability,message,message,600,"…eritance Python objects. When a Python class derives from a C++ class, cppyy jits a C++ wrapper class; that inherits from the base C++	class. Since I/O on jitted classes is not; supported by ROOT, trying to pickle a cross-inheritance Python object fails.; For this to work, dictionaries would need to be generated for the jitted class; before serialization, and they would need to be carried along for deserialization too. Therefore, this commit replaces the previous segfault by an explanatory error; message when the user tries to pickle a cross-inheritance Python object. It is; suggested in the message to define a custom `__reduce__` method for the derived; Python class. That `__reduce__` method can e.g. return a callable and some; arguments with which the derived object can be constructed during deserialization,; thus preventing any attempt to serialize the object itself. The old PyROOT did not jit any wrapper class during cross-inheritance (so it did; not suffer from the problem described above), but serialization/deserialization; of cross-inheritance Python objects was not properly supported anyway,; since the class of the unpickled object was the base C++ class, not the derived; Python class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8476
https://github.com/root-project/root/pull/8476:915,Integrability,wrap,wrapper,915,"…eritance Python objects. When a Python class derives from a C++ class, cppyy jits a C++ wrapper class; that inherits from the base C++	class. Since I/O on jitted classes is not; supported by ROOT, trying to pickle a cross-inheritance Python object fails.; For this to work, dictionaries would need to be generated for the jitted class; before serialization, and they would need to be carried along for deserialization too. Therefore, this commit replaces the previous segfault by an explanatory error; message when the user tries to pickle a cross-inheritance Python object. It is; suggested in the message to define a custom `__reduce__` method for the derived; Python class. That `__reduce__` method can e.g. return a callable and some; arguments with which the derived object can be constructed during deserialization,; thus preventing any attempt to serialize the object itself. The old PyROOT did not jit any wrapper class during cross-inheritance (so it did; not suffer from the problem described above), but serialization/deserialization; of cross-inheritance Python objects was not properly supported anyway,; since the class of the unpickled object was the base C++ class, not the derived; Python class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8476
https://github.com/root-project/root/pull/8476:109,Modifiability,inherit,inherits,109,"…eritance Python objects. When a Python class derives from a C++ class, cppyy jits a C++ wrapper class; that inherits from the base C++	class. Since I/O on jitted classes is not; supported by ROOT, trying to pickle a cross-inheritance Python object fails.; For this to work, dictionaries would need to be generated for the jitted class; before serialization, and they would need to be carried along for deserialization too. Therefore, this commit replaces the previous segfault by an explanatory error; message when the user tries to pickle a cross-inheritance Python object. It is; suggested in the message to define a custom `__reduce__` method for the derived; Python class. That `__reduce__` method can e.g. return a callable and some; arguments with which the derived object can be constructed during deserialization,; thus preventing any attempt to serialize the object itself. The old PyROOT did not jit any wrapper class during cross-inheritance (so it did; not suffer from the problem described above), but serialization/deserialization; of cross-inheritance Python objects was not properly supported anyway,; since the class of the unpickled object was the base C++ class, not the derived; Python class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8476
https://github.com/root-project/root/pull/8476:223,Modifiability,inherit,inheritance,223,"…eritance Python objects. When a Python class derives from a C++ class, cppyy jits a C++ wrapper class; that inherits from the base C++	class. Since I/O on jitted classes is not; supported by ROOT, trying to pickle a cross-inheritance Python object fails.; For this to work, dictionaries would need to be generated for the jitted class; before serialization, and they would need to be carried along for deserialization too. Therefore, this commit replaces the previous segfault by an explanatory error; message when the user tries to pickle a cross-inheritance Python object. It is; suggested in the message to define a custom `__reduce__` method for the derived; Python class. That `__reduce__` method can e.g. return a callable and some; arguments with which the derived object can be constructed during deserialization,; thus preventing any attempt to serialize the object itself. The old PyROOT did not jit any wrapper class during cross-inheritance (so it did; not suffer from the problem described above), but serialization/deserialization; of cross-inheritance Python objects was not properly supported anyway,; since the class of the unpickled object was the base C++ class, not the derived; Python class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8476
https://github.com/root-project/root/pull/8476:549,Modifiability,inherit,inheritance,549,"…eritance Python objects. When a Python class derives from a C++ class, cppyy jits a C++ wrapper class; that inherits from the base C++	class. Since I/O on jitted classes is not; supported by ROOT, trying to pickle a cross-inheritance Python object fails.; For this to work, dictionaries would need to be generated for the jitted class; before serialization, and they would need to be carried along for deserialization too. Therefore, this commit replaces the previous segfault by an explanatory error; message when the user tries to pickle a cross-inheritance Python object. It is; suggested in the message to define a custom `__reduce__` method for the derived; Python class. That `__reduce__` method can e.g. return a callable and some; arguments with which the derived object can be constructed during deserialization,; thus preventing any attempt to serialize the object itself. The old PyROOT did not jit any wrapper class during cross-inheritance (so it did; not suffer from the problem described above), but serialization/deserialization; of cross-inheritance Python objects was not properly supported anyway,; since the class of the unpickled object was the base C++ class, not the derived; Python class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8476
https://github.com/root-project/root/pull/8476:942,Modifiability,inherit,inheritance,942,"…eritance Python objects. When a Python class derives from a C++ class, cppyy jits a C++ wrapper class; that inherits from the base C++	class. Since I/O on jitted classes is not; supported by ROOT, trying to pickle a cross-inheritance Python object fails.; For this to work, dictionaries would need to be generated for the jitted class; before serialization, and they would need to be carried along for deserialization too. Therefore, this commit replaces the previous segfault by an explanatory error; message when the user tries to pickle a cross-inheritance Python object. It is; suggested in the message to define a custom `__reduce__` method for the derived; Python class. That `__reduce__` method can e.g. return a callable and some; arguments with which the derived object can be constructed during deserialization,; thus preventing any attempt to serialize the object itself. The old PyROOT did not jit any wrapper class during cross-inheritance (so it did; not suffer from the problem described above), but serialization/deserialization; of cross-inheritance Python objects was not properly supported anyway,; since the class of the unpickled object was the base C++ class, not the derived; Python class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8476
https://github.com/root-project/root/pull/8476:1056,Modifiability,inherit,inheritance,1056,"…eritance Python objects. When a Python class derives from a C++ class, cppyy jits a C++ wrapper class; that inherits from the base C++	class. Since I/O on jitted classes is not; supported by ROOT, trying to pickle a cross-inheritance Python object fails.; For this to work, dictionaries would need to be generated for the jitted class; before serialization, and they would need to be carried along for deserialization too. Therefore, this commit replaces the previous segfault by an explanatory error; message when the user tries to pickle a cross-inheritance Python object. It is; suggested in the message to define a custom `__reduce__` method for the derived; Python class. That `__reduce__` method can e.g. return a callable and some; arguments with which the derived object can be constructed during deserialization,; thus preventing any attempt to serialize the object itself. The old PyROOT did not jit any wrapper class during cross-inheritance (so it did; not suffer from the problem described above), but serialization/deserialization; of cross-inheritance Python objects was not properly supported anyway,; since the class of the unpickled object was the base C++ class, not the derived; Python class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8476
https://github.com/root-project/root/pull/8477:57,Availability,error,errors,57,"The changes in this pull request fix several compilation errors when compiling with gcc 8.2 and c++17.; The errors are all of the type:; ```; tree/dataframe/src/RDFInterfaceUtils.cxx:155:39: error: call of overloaded ‘basic_string(std::remove_reference<TString&>::type)’ is ambiguous; return std::string(std::move(ss));; ^; tree/dataframe/src/RDFInterfaceUtils.cxx:179:63: error: call of overloaded ‘basic_string(std::remove_reference<TString&>::type)’ is ambiguous; return ParsedExpression{std::string(std::move(exprWithVars)), std::move(usedCols), std::move(varNames)};; ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8477
https://github.com/root-project/root/pull/8477:108,Availability,error,errors,108,"The changes in this pull request fix several compilation errors when compiling with gcc 8.2 and c++17.; The errors are all of the type:; ```; tree/dataframe/src/RDFInterfaceUtils.cxx:155:39: error: call of overloaded ‘basic_string(std::remove_reference<TString&>::type)’ is ambiguous; return std::string(std::move(ss));; ^; tree/dataframe/src/RDFInterfaceUtils.cxx:179:63: error: call of overloaded ‘basic_string(std::remove_reference<TString&>::type)’ is ambiguous; return ParsedExpression{std::string(std::move(exprWithVars)), std::move(usedCols), std::move(varNames)};; ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8477
https://github.com/root-project/root/pull/8477:191,Availability,error,error,191,"The changes in this pull request fix several compilation errors when compiling with gcc 8.2 and c++17.; The errors are all of the type:; ```; tree/dataframe/src/RDFInterfaceUtils.cxx:155:39: error: call of overloaded ‘basic_string(std::remove_reference<TString&>::type)’ is ambiguous; return std::string(std::move(ss));; ^; tree/dataframe/src/RDFInterfaceUtils.cxx:179:63: error: call of overloaded ‘basic_string(std::remove_reference<TString&>::type)’ is ambiguous; return ParsedExpression{std::string(std::move(exprWithVars)), std::move(usedCols), std::move(varNames)};; ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8477
https://github.com/root-project/root/pull/8477:373,Availability,error,error,373,"The changes in this pull request fix several compilation errors when compiling with gcc 8.2 and c++17.; The errors are all of the type:; ```; tree/dataframe/src/RDFInterfaceUtils.cxx:155:39: error: call of overloaded ‘basic_string(std::remove_reference<TString&>::type)’ is ambiguous; return std::string(std::move(ss));; ^; tree/dataframe/src/RDFInterfaceUtils.cxx:179:63: error: call of overloaded ‘basic_string(std::remove_reference<TString&>::type)’ is ambiguous; return ParsedExpression{std::string(std::move(exprWithVars)), std::move(usedCols), std::move(varNames)};; ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8477
https://github.com/root-project/root/pull/8478:131,Deployability,update,updated,131,# This Pull request:. ## Changes or fixes:; Clarify how to check for non existing file when using TFile Open. ## Checklist:. - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8478
https://github.com/root-project/root/pull/8480:79,Deployability,update,updated,79,# This Pull request:. ## Changes or fixes:; Typo in docu. ## Checklist:. - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8480
https://github.com/root-project/root/pull/8483:149,Energy Efficiency,reduce,reduce,149,"1.Split aggregation functionality into `RAttrAggregation` class.; It is base class for all kinds of `RAttrLine`, `RAttrFill`, ...; 2. Use `union` to reduce memory consumption in RAttrBase. ; Probably, one could use `variant` instead, but this requires c++17 and can be avoided.; 3. Use `const char *` for name storage in `RAttrBase`- it never changed.; If really necessary, one could create deep copy, but just by usage pattern it is not required at all.; 4. Use normal data type to keep default value for `RAttrValue`; 5. Let use value classes as `RAttrValue<int>` standalone. Finally reduce `sizeof(RAttrValue<int>)` from 120 to 40 bytes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8483
https://github.com/root-project/root/pull/8483:163,Energy Efficiency,consumption,consumption,163,"1.Split aggregation functionality into `RAttrAggregation` class.; It is base class for all kinds of `RAttrLine`, `RAttrFill`, ...; 2. Use `union` to reduce memory consumption in RAttrBase. ; Probably, one could use `variant` instead, but this requires c++17 and can be avoided.; 3. Use `const char *` for name storage in `RAttrBase`- it never changed.; If really necessary, one could create deep copy, but just by usage pattern it is not required at all.; 4. Use normal data type to keep default value for `RAttrValue`; 5. Let use value classes as `RAttrValue<int>` standalone. Finally reduce `sizeof(RAttrValue<int>)` from 120 to 40 bytes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8483
https://github.com/root-project/root/pull/8483:586,Energy Efficiency,reduce,reduce,586,"1.Split aggregation functionality into `RAttrAggregation` class.; It is base class for all kinds of `RAttrLine`, `RAttrFill`, ...; 2. Use `union` to reduce memory consumption in RAttrBase. ; Probably, one could use `variant` instead, but this requires c++17 and can be avoided.; 3. Use `const char *` for name storage in `RAttrBase`- it never changed.; If really necessary, one could create deep copy, but just by usage pattern it is not required at all.; 4. Use normal data type to keep default value for `RAttrValue`; 5. Let use value classes as `RAttrValue<int>` standalone. Finally reduce `sizeof(RAttrValue<int>)` from 120 to 40 bytes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8483
https://github.com/root-project/root/pull/8483:269,Safety,avoid,avoided,269,"1.Split aggregation functionality into `RAttrAggregation` class.; It is base class for all kinds of `RAttrLine`, `RAttrFill`, ...; 2. Use `union` to reduce memory consumption in RAttrBase. ; Probably, one could use `variant` instead, but this requires c++17 and can be avoided.; 3. Use `const char *` for name storage in `RAttrBase`- it never changed.; If really necessary, one could create deep copy, but just by usage pattern it is not required at all.; 4. Use normal data type to keep default value for `RAttrValue`; 5. Let use value classes as `RAttrValue<int>` standalone. Finally reduce `sizeof(RAttrValue<int>)` from 120 to 40 bytes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8483
https://github.com/root-project/root/pull/8486:241,Deployability,release,release,241,"This fixes a bug recently introduced by commit bdf7502. Fixes issue https://github.com/root-project/root/issues/8474. Thank you so much @VanyaBelyaev for using ROOT master, which was crucial for me to fix this bug before it made it into any release!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8486
https://github.com/root-project/root/issues/8487:14151,Availability,error,error,14151,"4pairIPN4llvm5ValueES4_EN5clang7CodeGen6LValueEb+0x39a): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicStore(clang::CodeGen::RValue, clang::CodeGen::LValue, bool)'; /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':; CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'; /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':; CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'; collect2: error: ld returned 1 exit status; make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1; make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2; make: *** [Makefile:152: all] Error 2; ```; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; It work?; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; I ran:; ```; mkdir rootinstall rootbuild; cd rootbuild; cmake -DCMAKE_INSTALL_PREFIX=../rootintstall ../root; cmake --build . -- -j4; ```; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:14313,Availability,Error,Error,14313,"src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':; CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'; /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':; CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'; collect2: error: ld returned 1 exit status; make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1; make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2; make: *** [Makefile:152: all] Error 2; ```; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; It work?; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; I ran:; ```; mkdir rootinstall rootbuild; cd rootbuild; cmake -DCMAKE_INSTALL_PREFIX=../rootintstall ../root; cmake --build . -- -j4; ```; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Master branch of root-project/root; ### Additional context; <!--; Add any other context about the probl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:14423,Availability,Error,Error,14423,"ngCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':; CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'; /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':; CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'; collect2: error: ld returned 1 exit status; make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1; make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2; make: *** [Makefile:152: all] Error 2; ```; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; It work?; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; I ran:; ```; mkdir rootinstall rootbuild; cd rootbuild; cmake -DCMAKE_INSTALL_PREFIX=../rootintstall ../root; cmake --build . -- -j4; ```; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Master branch of root-project/root; ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:14462,Availability,Error,Error,14462,"ngCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':; CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'; /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':; CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'; collect2: error: ld returned 1 exit status; make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1; make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2; make: *** [Makefile:152: all] Error 2; ```; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; It work?; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; I ran:; ```; mkdir rootinstall rootbuild; cd rootbuild; cmake -DCMAKE_INSTALL_PREFIX=../rootintstall ../root; cmake --build . -- -j4; ```; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Master branch of root-project/root; ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:15194,Availability,down,download,15194,"ngCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':; CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'; /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':; CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'; collect2: error: ld returned 1 exit status; make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1; make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2; make: *** [Makefile:152: all] Error 2; ```; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; It work?; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; I ran:; ```; mkdir rootinstall rootbuild; cd rootbuild; cmake -DCMAKE_INSTALL_PREFIX=../rootintstall ../root; cmake --build . -- -j4; ```; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Master branch of root-project/root; ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:15176,Deployability,install,install,15176,"ngCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':; CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'; /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':; CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'; collect2: error: ld returned 1 exit status; make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1; make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2; make: *** [Makefile:152: all] Error 2; ```; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; It work?; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; I ran:; ```; mkdir rootinstall rootbuild; cd rootbuild; cmake -DCMAKE_INSTALL_PREFIX=../rootintstall ../root; cmake --build . -- -j4; ```; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Master branch of root-project/root; ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:6428,Modifiability,rewrite,rewriteObjCRedundantCallWithLiteral,6428,")::BinOpInfo const&), llvm::Value*&) [clone .constprop.0]':; CGExprScalar.cpp:(.text._ZN12_GLOBAL__N_117ScalarExprEmitter24EmitCompoundAssignLValueEPKN5clang22CompoundAssignOperatorEMS0_FPN4llvm5ValueERKNS_9BinOpInfoEERS7_.constprop.0+0x67c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicCompareExchange(clang::CodeGen::LValue, clang::CodeGen::RValue, clang::CodeGen::RValue, clang::SourceLocation, llvm::AtomicOrdering, llvm::AtomicOrdering, bool, clang::CodeGen::AggValueSlot)'; /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangSema.a(SemaExprObjC.cpp.o): in function `applyCocoaAPICheck(clang::Sema&, clang::ObjCMessageExpr const*, unsigned int, bool (*)(clang::ObjCMessageExpr const*, clang::NSAPI const&, clang::edit::Commit&)) [clone .constprop.0]':; SemaExprObjC.cpp:(.text._ZL18applyCocoaAPICheckRN5clang4SemaEPKNS_15ObjCMessageExprEjPFbS4_RKNS_5NSAPIERNS_4edit6CommitEE.constprop.0+0x13c): undefined reference to `clang::edit::rewriteObjCRedundantCallWithLiteral(clang::ObjCMessageExpr const*, clang::NSAPI const&, clang::edit::Commit&)'; /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangSema.a(SemaType.cpp.o): in function `clang::Sema::hasStructuralCompatLayout(clang::Decl*, clang::Decl*)':; SemaType.cpp:(.text._ZN5clang4Sema25hasStructuralCompatLayoutEPNS_4DeclES2_+0x15b): undefined reference to `clang::StructuralEquivalenceContext::IsEquivalent(clang::Decl*, clang::Decl*)'; /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangAnalysis.a(AnalysisDeclContext.cpp.o): in function `clang::AnalysisDeclContext::getBody(bool&) const':; AnalysisDeclContext.cpp:(.text._ZNK5clang19AnalysisDeclContext7getBodyERb+0x117): undefined reference to `clang::BodyFarm::getBody(clang::ObjCMethodDecl const*)'; /usr/bin/ld: AnalysisDeclContext.cpp:(.text._ZNK5clang19AnalysisDeclContext7getBodyERb+0x148): undefined reference to `clang::BodyFarm::getBody(clang::FunctionDecl const*)'; /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangAST.a(ASTImporter.cpp.o): in functio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:14484,Usability,clear,clear,14484,"ngCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':; CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'; /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':; CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'; collect2: error: ld returned 1 exit status; make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1; make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2; make: *** [Makefile:152: all] Error 2; ```; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; It work?; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; I ran:; ```; mkdir rootinstall rootbuild; cd rootbuild; cmake -DCMAKE_INSTALL_PREFIX=../rootintstall ../root; cmake --build . -- -j4; ```; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Master branch of root-project/root; ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:14592,Usability,clear,clear,14592,"ngCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':; CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'; /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':; CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'; collect2: error: ld returned 1 exit status; make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1; make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2; make: *** [Makefile:152: all] Error 2; ```; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; It work?; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; I ran:; ```; mkdir rootinstall rootbuild; cd rootbuild; cmake -DCMAKE_INSTALL_PREFIX=../rootintstall ../root; cmake --build . -- -j4; ```; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Master branch of root-project/root; ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/pull/8489:373,Testability,test,test,373,"This PR should finally fix the build warnings in the master nightlies,; after the unsuccessful fix attempt in commit; 4ed5ea3976743d1206a8f8c7579adeb1818a9695. I have checked that the missing field initializer warnings go away with; this change by compiling the following example snippet under gcc48:. ```C++; // compile with g++ -Wmissing-field-initializers -std=c++11 -o test test.cc. struct A{. A(); : arr_{{}}; {}. std::array<int, 10> arr_ = {{}};; };. int main() {; A a{};; std::cout << a.arr_[0] << std::endl;; return 0;; }; ```. The warnings are reproduced, and can successfully be suppressed by; replacing `{}` with `{{}}`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8489
https://github.com/root-project/root/pull/8489:378,Testability,test,test,378,"This PR should finally fix the build warnings in the master nightlies,; after the unsuccessful fix attempt in commit; 4ed5ea3976743d1206a8f8c7579adeb1818a9695. I have checked that the missing field initializer warnings go away with; this change by compiling the following example snippet under gcc48:. ```C++; // compile with g++ -Wmissing-field-initializers -std=c++11 -o test test.cc. struct A{. A(); : arr_{{}}; {}. std::array<int, 10> arr_ = {{}};; };. int main() {; A a{};; std::cout << a.arr_[0] << std::endl;; return 0;; }; ```. The warnings are reproduced, and can successfully be suppressed by; replacing `{}` with `{{}}`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8489
https://github.com/root-project/root/issues/8490:91,Availability,fault,faulty,91,"### Describe the bug; The logic to retrieve the input files of a distributed RDataFrame is faulty at; https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L744-L748. Because the globbing done by `glob.glob` is not the same as that done by `TChain`, in general. ### Expected behavior. The list of input files is actually used to retrieve the clusters of all the trees used to create the distributed RDataFrame in; https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L363-L368. So in general this extra globbing step is not needed. A way to solve this is to directly create the TChain with whatever string the user passes (i.e. with globbing characters) and retrieve the clusters from the TChain rather than traversing the list of files coming out of the globbing. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8490
https://github.com/root-project/root/issues/8490:1325,Availability,down,download,1325,"### Describe the bug; The logic to retrieve the input files of a distributed RDataFrame is faulty at; https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L744-L748. Because the globbing done by `glob.glob` is not the same as that done by `TChain`, in general. ### Expected behavior. The list of input files is actually used to retrieve the clusters of all the trees used to create the distributed RDataFrame in; https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L363-L368. So in general this extra globbing step is not needed. A way to solve this is to directly create the TChain with whatever string the user passes (i.e. with globbing characters) and retrieve the clusters from the TChain rather than traversing the list of files coming out of the globbing. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8490
https://github.com/root-project/root/issues/8490:1307,Deployability,install,install,1307,"### Describe the bug; The logic to retrieve the input files of a distributed RDataFrame is faulty at; https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L744-L748. Because the globbing done by `glob.glob` is not the same as that done by `TChain`, in general. ### Expected behavior. The list of input files is actually used to retrieve the clusters of all the trees used to create the distributed RDataFrame in; https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L363-L368. So in general this extra globbing step is not needed. A way to solve this is to directly create the TChain with whatever string the user passes (i.e. with globbing characters) and retrieve the clusters from the TChain rather than traversing the list of files coming out of the globbing. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8490
https://github.com/root-project/root/issues/8490:26,Testability,log,logic,26,"### Describe the bug; The logic to retrieve the input files of a distributed RDataFrame is faulty at; https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L744-L748. Because the globbing done by `glob.glob` is not the same as that done by `TChain`, in general. ### Expected behavior. The list of input files is actually used to retrieve the clusters of all the trees used to create the distributed RDataFrame in; https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L363-L368. So in general this extra globbing step is not needed. A way to solve this is to directly create the TChain with whatever string the user passes (i.e. with globbing characters) and retrieve the clusters from the TChain rather than traversing the list of files coming out of the globbing. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8490
https://github.com/root-project/root/pull/8491:415,Availability,Failure,Failures,415,"The rf503_wspaceread tutorial mus be run after the rf502_wspacewrite; tutorial in the unit tests. This dependency was already defined for the; C++ tutorial tests. The lines added to `tutorials/CMakeLists.txt` in; this commit make the same definitions for the Python tutorials, and also; indicate that the Python tests rf502 and rf503 should be run after the; C++ tests to avoid a race condition on the output file. Failures caused by the dependencies not handled correctly were observed in the ROOT nightlies, and this commit should avoid them in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8491
https://github.com/root-project/root/pull/8491:103,Integrability,depend,dependency,103,"The rf503_wspaceread tutorial mus be run after the rf502_wspacewrite; tutorial in the unit tests. This dependency was already defined for the; C++ tutorial tests. The lines added to `tutorials/CMakeLists.txt` in; this commit make the same definitions for the Python tutorials, and also; indicate that the Python tests rf502 and rf503 should be run after the; C++ tests to avoid a race condition on the output file. Failures caused by the dependencies not handled correctly were observed in the ROOT nightlies, and this commit should avoid them in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8491
https://github.com/root-project/root/pull/8491:438,Integrability,depend,dependencies,438,"The rf503_wspaceread tutorial mus be run after the rf502_wspacewrite; tutorial in the unit tests. This dependency was already defined for the; C++ tutorial tests. The lines added to `tutorials/CMakeLists.txt` in; this commit make the same definitions for the Python tutorials, and also; indicate that the Python tests rf502 and rf503 should be run after the; C++ tests to avoid a race condition on the output file. Failures caused by the dependencies not handled correctly were observed in the ROOT nightlies, and this commit should avoid them in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8491
https://github.com/root-project/root/pull/8491:380,Performance,race condition,race condition,380,"The rf503_wspaceread tutorial mus be run after the rf502_wspacewrite; tutorial in the unit tests. This dependency was already defined for the; C++ tutorial tests. The lines added to `tutorials/CMakeLists.txt` in; this commit make the same definitions for the Python tutorials, and also; indicate that the Python tests rf502 and rf503 should be run after the; C++ tests to avoid a race condition on the output file. Failures caused by the dependencies not handled correctly were observed in the ROOT nightlies, and this commit should avoid them in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8491
https://github.com/root-project/root/pull/8491:372,Safety,avoid,avoid,372,"The rf503_wspaceread tutorial mus be run after the rf502_wspacewrite; tutorial in the unit tests. This dependency was already defined for the; C++ tutorial tests. The lines added to `tutorials/CMakeLists.txt` in; this commit make the same definitions for the Python tutorials, and also; indicate that the Python tests rf502 and rf503 should be run after the; C++ tests to avoid a race condition on the output file. Failures caused by the dependencies not handled correctly were observed in the ROOT nightlies, and this commit should avoid them in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8491
https://github.com/root-project/root/pull/8491:533,Safety,avoid,avoid,533,"The rf503_wspaceread tutorial mus be run after the rf502_wspacewrite; tutorial in the unit tests. This dependency was already defined for the; C++ tutorial tests. The lines added to `tutorials/CMakeLists.txt` in; this commit make the same definitions for the Python tutorials, and also; indicate that the Python tests rf502 and rf503 should be run after the; C++ tests to avoid a race condition on the output file. Failures caused by the dependencies not handled correctly were observed in the ROOT nightlies, and this commit should avoid them in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8491
https://github.com/root-project/root/pull/8491:91,Testability,test,tests,91,"The rf503_wspaceread tutorial mus be run after the rf502_wspacewrite; tutorial in the unit tests. This dependency was already defined for the; C++ tutorial tests. The lines added to `tutorials/CMakeLists.txt` in; this commit make the same definitions for the Python tutorials, and also; indicate that the Python tests rf502 and rf503 should be run after the; C++ tests to avoid a race condition on the output file. Failures caused by the dependencies not handled correctly were observed in the ROOT nightlies, and this commit should avoid them in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8491
https://github.com/root-project/root/pull/8491:156,Testability,test,tests,156,"The rf503_wspaceread tutorial mus be run after the rf502_wspacewrite; tutorial in the unit tests. This dependency was already defined for the; C++ tutorial tests. The lines added to `tutorials/CMakeLists.txt` in; this commit make the same definitions for the Python tutorials, and also; indicate that the Python tests rf502 and rf503 should be run after the; C++ tests to avoid a race condition on the output file. Failures caused by the dependencies not handled correctly were observed in the ROOT nightlies, and this commit should avoid them in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8491
https://github.com/root-project/root/pull/8491:312,Testability,test,tests,312,"The rf503_wspaceread tutorial mus be run after the rf502_wspacewrite; tutorial in the unit tests. This dependency was already defined for the; C++ tutorial tests. The lines added to `tutorials/CMakeLists.txt` in; this commit make the same definitions for the Python tutorials, and also; indicate that the Python tests rf502 and rf503 should be run after the; C++ tests to avoid a race condition on the output file. Failures caused by the dependencies not handled correctly were observed in the ROOT nightlies, and this commit should avoid them in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8491
https://github.com/root-project/root/pull/8491:363,Testability,test,tests,363,"The rf503_wspaceread tutorial mus be run after the rf502_wspacewrite; tutorial in the unit tests. This dependency was already defined for the; C++ tutorial tests. The lines added to `tutorials/CMakeLists.txt` in; this commit make the same definitions for the Python tutorials, and also; indicate that the Python tests rf502 and rf503 should be run after the; C++ tests to avoid a race condition on the output file. Failures caused by the dependencies not handled correctly were observed in the ROOT nightlies, and this commit should avoid them in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8491
https://github.com/root-project/root/pull/8492:0,Availability,error,error,0,"error: reference to 'Experimental' is ambiguous; Experimental::RH2D hist{{100, 0., 1.}, {{0., 1., 2., 3., 10.}}};; ^; ...root.../include/ROOT/RLogger.hxx:28:11: note: candidate found by name lookup is 'ROOT::Experimental'; namespace Experimental {; ^; ...root.../include/TMVA/RBDT.hxx:31:11: note: candidate found by name lookup is 'TMVA::Experimental'; namespace Experimental {. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8492
https://github.com/root-project/root/pull/8492:475,Deployability,update,updated,475,"error: reference to 'Experimental' is ambiguous; Experimental::RH2D hist{{100, 0., 1.}, {{0., 1., 2., 3., 10.}}};; ^; ...root.../include/ROOT/RLogger.hxx:28:11: note: candidate found by name lookup is 'ROOT::Experimental'; namespace Experimental {; ^; ...root.../include/TMVA/RBDT.hxx:31:11: note: candidate found by name lookup is 'TMVA::Experimental'; namespace Experimental {. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8492
https://github.com/root-project/root/pull/8492:445,Testability,test,tested,445,"error: reference to 'Experimental' is ambiguous; Experimental::RH2D hist{{100, 0., 1.}, {{0., 1., 2., 3., 10.}}};; ^; ...root.../include/ROOT/RLogger.hxx:28:11: note: candidate found by name lookup is 'ROOT::Experimental'; namespace Experimental {; ^; ...root.../include/TMVA/RBDT.hxx:31:11: note: candidate found by name lookup is 'TMVA::Experimental'; namespace Experimental {. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8492
https://github.com/root-project/root/pull/8496:502,Deployability,update,updated,502,"# This Pull request:. ## Changes or fixes:. Adds the Lambert W function to MathMore using GSL. One question: I'm not sure what some of the docstrings in the source file mean.; I copied these from other functions:; ```cxx; // [5.2.1.18] Laguerre polynomials; // (26.x.11); ```. Does the first one specify the version the function is introduced? What does the second number specify?. I tested it and it works, the only thing missing are the docstrings. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #8471. /cc @lmoneta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8496
https://github.com/root-project/root/pull/8496:384,Testability,test,tested,384,"# This Pull request:. ## Changes or fixes:. Adds the Lambert W function to MathMore using GSL. One question: I'm not sure what some of the docstrings in the source file mean.; I copied these from other functions:; ```cxx; // [5.2.1.18] Laguerre polynomials; // (26.x.11); ```. Does the first one specify the version the function is introduced? What does the second number specify?. I tested it and it works, the only thing missing are the docstrings. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #8471. /cc @lmoneta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8496
https://github.com/root-project/root/pull/8496:472,Testability,test,tested,472,"# This Pull request:. ## Changes or fixes:. Adds the Lambert W function to MathMore using GSL. One question: I'm not sure what some of the docstrings in the source file mean.; I copied these from other functions:; ```cxx; // [5.2.1.18] Laguerre polynomials; // (26.x.11); ```. Does the first one specify the version the function is introduced? What does the second number specify?. I tested it and it works, the only thing missing are the docstrings. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #8471. /cc @lmoneta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8496
https://github.com/root-project/root/issues/8497:456,Testability,test,tested,456,"### Describe the bug. I encounter a problem while using Project or Draw and I want to project a vector from TTree. Assume that all_particles_pt is a vector<double>, all_particles_m is a vector<double> and index is an integer, all of these are branches of a tree.; The command; `tree->Draw(""all_particles_pt"", ""all_particles_m[index] > 100"") `; returns 0 entries, independently on the actual value of the condition, so the histogram will always be empty. I tested with several files and in both with cases where all_particles_pt and all_particles_m are the same or different vectors. ### Expected behavior; I would expect that this would draw/project in an histogram all the entries of all_particles_pt for all the events passing the condition.; This works in ROOT versions <= 6.18.04. ### To Reproduce; I have posted at the end a small pyroot code that creates a tree with 2 vectors and an int and Draw it in an histogram. Both running in 6.20.06 and 6.18.04 should print on the terminal the content of an histogram, with 6.20.06 I see it empty. . ### Setup; ROOT version > 6.20.06 . ### Additional context. I have never seen this problem with ROOT versions <= 6.18.04; I tested 6.22.06 and the bug appears to be still there.; I have observed the same behavior opening the file with ROOT or pyroot, with files created with ROOT or pyroot. Thanks for your help!; Federica; ; =========CODE==================; ```; ##FFabbri 21/06/2021. import re, array, os; import ROOT; from ROOT import TFile, TTree, TH1F; import random. ## function to create a tree with vectors; def create_tree():. m=ROOT.std.vector('double')(); pt=ROOT.std.vector('double')(); index=array.array('i', [0]). f = TFile( 'VectorTree.root', 'RECREATE' ); tree = TTree( 'Tree', 'Tree' ); tree.Branch( 'all_particles_pt', pt); tree.Branch( 'all_particles_mass', m); tree.Branch( 'index', index,'index/I'); ; for i in range(0,500):. pt.clear(); m.clear(); ; number_of_particles=random.randint(1,5); index[0]=random.randint(1,number_of_part",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8497
https://github.com/root-project/root/issues/8497:1172,Testability,test,tested,1172,"icles_m is a vector<double> and index is an integer, all of these are branches of a tree.; The command; `tree->Draw(""all_particles_pt"", ""all_particles_m[index] > 100"") `; returns 0 entries, independently on the actual value of the condition, so the histogram will always be empty. I tested with several files and in both with cases where all_particles_pt and all_particles_m are the same or different vectors. ### Expected behavior; I would expect that this would draw/project in an histogram all the entries of all_particles_pt for all the events passing the condition.; This works in ROOT versions <= 6.18.04. ### To Reproduce; I have posted at the end a small pyroot code that creates a tree with 2 vectors and an int and Draw it in an histogram. Both running in 6.20.06 and 6.18.04 should print on the terminal the content of an histogram, with 6.20.06 I see it empty. . ### Setup; ROOT version > 6.20.06 . ### Additional context. I have never seen this problem with ROOT versions <= 6.18.04; I tested 6.22.06 and the bug appears to be still there.; I have observed the same behavior opening the file with ROOT or pyroot, with files created with ROOT or pyroot. Thanks for your help!; Federica; ; =========CODE==================; ```; ##FFabbri 21/06/2021. import re, array, os; import ROOT; from ROOT import TFile, TTree, TH1F; import random. ## function to create a tree with vectors; def create_tree():. m=ROOT.std.vector('double')(); pt=ROOT.std.vector('double')(); index=array.array('i', [0]). f = TFile( 'VectorTree.root', 'RECREATE' ); tree = TTree( 'Tree', 'Tree' ); tree.Branch( 'all_particles_pt', pt); tree.Branch( 'all_particles_mass', m); tree.Branch( 'index', index,'index/I'); ; for i in range(0,500):. pt.clear(); m.clear(); ; number_of_particles=random.randint(1,5); index[0]=random.randint(1,number_of_particles); ; for j in range(0,number_of_particles):; random_pt=random.random()*(975.)+25.; random_m=random.random()*(100.)+50.; ; pt.push_back(random_pt); m.push_back(random_m)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8497
https://github.com/root-project/root/issues/8497:1898,Usability,clear,clear,1898,"f all_particles_pt for all the events passing the condition.; This works in ROOT versions <= 6.18.04. ### To Reproduce; I have posted at the end a small pyroot code that creates a tree with 2 vectors and an int and Draw it in an histogram. Both running in 6.20.06 and 6.18.04 should print on the terminal the content of an histogram, with 6.20.06 I see it empty. . ### Setup; ROOT version > 6.20.06 . ### Additional context. I have never seen this problem with ROOT versions <= 6.18.04; I tested 6.22.06 and the bug appears to be still there.; I have observed the same behavior opening the file with ROOT or pyroot, with files created with ROOT or pyroot. Thanks for your help!; Federica; ; =========CODE==================; ```; ##FFabbri 21/06/2021. import re, array, os; import ROOT; from ROOT import TFile, TTree, TH1F; import random. ## function to create a tree with vectors; def create_tree():. m=ROOT.std.vector('double')(); pt=ROOT.std.vector('double')(); index=array.array('i', [0]). f = TFile( 'VectorTree.root', 'RECREATE' ); tree = TTree( 'Tree', 'Tree' ); tree.Branch( 'all_particles_pt', pt); tree.Branch( 'all_particles_mass', m); tree.Branch( 'index', index,'index/I'); ; for i in range(0,500):. pt.clear(); m.clear(); ; number_of_particles=random.randint(1,5); index[0]=random.randint(1,number_of_particles); ; for j in range(0,number_of_particles):; random_pt=random.random()*(975.)+25.; random_m=random.random()*(100.)+50.; ; pt.push_back(random_pt); m.push_back(random_m); ; ; tree.Fill(); ; tree.Print(); tree.Write(); f.Close(); ; ##################; ##Function to visualize the bug; def show_bug() :; ; f = TFile( 'VectorTree.root'); tree=f.Get(""Tree""); ; h=TH1F(""h"",""h"",20,25.,1000.); ##The same bug is observed also with projection; tree.Draw(""all_particles_pt >> h"",""all_particles_mass[index]>100""); h.Print(""all""); f.Close(). #####Call the functions; if __name__ == '__main__':; ###Function to create a tree; create_tree(); ###Function to reproduce the bug; show_bug(); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8497
https://github.com/root-project/root/issues/8497:1909,Usability,clear,clear,1909,"f all_particles_pt for all the events passing the condition.; This works in ROOT versions <= 6.18.04. ### To Reproduce; I have posted at the end a small pyroot code that creates a tree with 2 vectors and an int and Draw it in an histogram. Both running in 6.20.06 and 6.18.04 should print on the terminal the content of an histogram, with 6.20.06 I see it empty. . ### Setup; ROOT version > 6.20.06 . ### Additional context. I have never seen this problem with ROOT versions <= 6.18.04; I tested 6.22.06 and the bug appears to be still there.; I have observed the same behavior opening the file with ROOT or pyroot, with files created with ROOT or pyroot. Thanks for your help!; Federica; ; =========CODE==================; ```; ##FFabbri 21/06/2021. import re, array, os; import ROOT; from ROOT import TFile, TTree, TH1F; import random. ## function to create a tree with vectors; def create_tree():. m=ROOT.std.vector('double')(); pt=ROOT.std.vector('double')(); index=array.array('i', [0]). f = TFile( 'VectorTree.root', 'RECREATE' ); tree = TTree( 'Tree', 'Tree' ); tree.Branch( 'all_particles_pt', pt); tree.Branch( 'all_particles_mass', m); tree.Branch( 'index', index,'index/I'); ; for i in range(0,500):. pt.clear(); m.clear(); ; number_of_particles=random.randint(1,5); index[0]=random.randint(1,number_of_particles); ; for j in range(0,number_of_particles):; random_pt=random.random()*(975.)+25.; random_m=random.random()*(100.)+50.; ; pt.push_back(random_pt); m.push_back(random_m); ; ; tree.Fill(); ; tree.Print(); tree.Write(); f.Close(); ; ##################; ##Function to visualize the bug; def show_bug() :; ; f = TFile( 'VectorTree.root'); tree=f.Get(""Tree""); ; h=TH1F(""h"",""h"",20,25.,1000.); ##The same bug is observed also with projection; tree.Draw(""all_particles_pt >> h"",""all_particles_mass[index]>100""); h.Print(""all""); f.Close(). #####Call the functions; if __name__ == '__main__':; ###Function to create a tree; create_tree(); ###Function to reproduce the bug; show_bug(); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8497
https://github.com/root-project/root/issues/8499:97,Availability,error,error,97,"Reported by ALICE:. ```; G__O2DetectorsVertexing dictionary forward declarations' payload:16:53: error: no template named 'DCAFitterN'; namespace o2{namespace vertexing{using DCAFitter2 = DCAFitterN<2, o2::track::TrackParCov>;}}; ^; G__O2DetectorsVertexing dictionary forward declarations' payload:17:53: error: no template named 'DCAFitterN'; namespace o2{namespace vertexing{using DCAFitter3 = DCAFitterN<3, o2::track::TrackParCov>;}}; ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8499
https://github.com/root-project/root/issues/8499:305,Availability,error,error,305,"Reported by ALICE:. ```; G__O2DetectorsVertexing dictionary forward declarations' payload:16:53: error: no template named 'DCAFitterN'; namespace o2{namespace vertexing{using DCAFitter2 = DCAFitterN<2, o2::track::TrackParCov>;}}; ^; G__O2DetectorsVertexing dictionary forward declarations' payload:17:53: error: no template named 'DCAFitterN'; namespace o2{namespace vertexing{using DCAFitter3 = DCAFitterN<3, o2::track::TrackParCov>;}}; ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8499
https://github.com/root-project/root/pull/8500:373,Testability,test,test,373,"This PR should finally fix the build warnings in the master nightlies,; after the unsuccessful fix attempt in commit; 4ed5ea3976743d1206a8f8c7579adeb1818a9695. I have checked that the missing field initializer warnings go away with; this change by compiling the following example snippet under gcc48:. ```C++; // compile with g++ -Wmissing-field-initializers -std=c++11 -o test test.cc. struct A{. A(); : arr_{{}}; {}. std::array<int, 10> arr_ = {{}};; };. int main() {; A a{};; std::cout << a.arr_[0] << std::endl;; return 0;; }; ```. The warnings are reproduced, and can successfully be suppressed by; replacing `{}` with `{{}}`. This is a backport of 855fd44340e13161f88ca09a86e50abf5c1cd5a1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8500
https://github.com/root-project/root/pull/8500:378,Testability,test,test,378,"This PR should finally fix the build warnings in the master nightlies,; after the unsuccessful fix attempt in commit; 4ed5ea3976743d1206a8f8c7579adeb1818a9695. I have checked that the missing field initializer warnings go away with; this change by compiling the following example snippet under gcc48:. ```C++; // compile with g++ -Wmissing-field-initializers -std=c++11 -o test test.cc. struct A{. A(); : arr_{{}}; {}. std::array<int, 10> arr_ = {{}};; };. int main() {; A a{};; std::cout << a.arr_[0] << std::endl;; return 0;; }; ```. The warnings are reproduced, and can successfully be suppressed by; replacing `{}` with `{{}}`. This is a backport of 855fd44340e13161f88ca09a86e50abf5c1cd5a1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8500
https://github.com/root-project/root/pull/8501:373,Testability,test,test,373,"This PR should finally fix the build warnings in the master nightlies,; after the unsuccessful fix attempt in commit; 4ed5ea3976743d1206a8f8c7579adeb1818a9695. I have checked that the missing field initializer warnings go away with; this change by compiling the following example snippet under gcc48:. ```C++; // compile with g++ -Wmissing-field-initializers -std=c++11 -o test test.cc. struct A{. A(); : arr_{{}}; {}. std::array<int, 10> arr_ = {{}};; };. int main() {; A a{};; std::cout << a.arr_[0] << std::endl;; return 0;; }; ```. The warnings are reproduced, and can successfully be suppressed by; replacing `{}` with `{{}}`. This is a backport of 855fd44340e13161f88ca09a86e50abf5c1cd5a1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8501
https://github.com/root-project/root/pull/8501:378,Testability,test,test,378,"This PR should finally fix the build warnings in the master nightlies,; after the unsuccessful fix attempt in commit; 4ed5ea3976743d1206a8f8c7579adeb1818a9695. I have checked that the missing field initializer warnings go away with; this change by compiling the following example snippet under gcc48:. ```C++; // compile with g++ -Wmissing-field-initializers -std=c++11 -o test test.cc. struct A{. A(); : arr_{{}}; {}. std::array<int, 10> arr_ = {{}};; };. int main() {; A a{};; std::cout << a.arr_[0] << std::endl;; return 0;; }; ```. The warnings are reproduced, and can successfully be suppressed by; replacing `{}` with `{{}}`. This is a backport of 855fd44340e13161f88ca09a86e50abf5c1cd5a1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8501
https://github.com/root-project/root/pull/8502:373,Testability,test,test,373,"This PR should finally fix the build warnings in the master nightlies,; after the unsuccessful fix attempt in commit; 4ed5ea3976743d1206a8f8c7579adeb1818a9695. I have checked that the missing field initializer warnings go away with; this change by compiling the following example snippet under gcc48:. ```C++; // compile with g++ -Wmissing-field-initializers -std=c++11 -o test test.cc. struct A{. A(); : arr_{{}}; {}. std::array<int, 10> arr_ = {{}};; };. int main() {; A a{};; std::cout << a.arr_[0] << std::endl;; return 0;; }; ```. The warnings are reproduced, and can successfully be suppressed by; replacing `{}` with `{{}}`. This is a backport of 855fd44340e13161f88ca09a86e50abf5c1cd5a1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8502
https://github.com/root-project/root/pull/8502:378,Testability,test,test,378,"This PR should finally fix the build warnings in the master nightlies,; after the unsuccessful fix attempt in commit; 4ed5ea3976743d1206a8f8c7579adeb1818a9695. I have checked that the missing field initializer warnings go away with; this change by compiling the following example snippet under gcc48:. ```C++; // compile with g++ -Wmissing-field-initializers -std=c++11 -o test test.cc. struct A{. A(); : arr_{{}}; {}. std::array<int, 10> arr_ = {{}};; };. int main() {; A a{};; std::cout << a.arr_[0] << std::endl;; return 0;; }; ```. The warnings are reproduced, and can successfully be suppressed by; replacing `{}` with `{{}}`. This is a backport of 855fd44340e13161f88ca09a86e50abf5c1cd5a1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8502
https://github.com/root-project/root/issues/8503:357,Modifiability,rewrite,rewrite,357,"In ranluxpp code, there is a left shift of negative value (c == -1); https://github.com/root-project/root/blob/master/math/mathcore/src/ranluxpp/mulmod.h#L169. Please note that this behavior is undefined per the C standard. See for example:; https://stackoverflow.com/questions/8415895/is-left-and-right-shifting-negative-integers-defined-behavior. You can rewrite the code like this:; ```; int64_t t2 = t0 - (int64_t) ( (uint64_t)c << 48);; ```. to solve the problem. It has no performance impact (verified on i7-8650U CPU with GCC v10.3.1). Here is the code I have used:; https://github.com/jirka-h/ranluxpp-portable",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8503
https://github.com/root-project/root/issues/8503:610,Modifiability,portab,portable,610,"In ranluxpp code, there is a left shift of negative value (c == -1); https://github.com/root-project/root/blob/master/math/mathcore/src/ranluxpp/mulmod.h#L169. Please note that this behavior is undefined per the C standard. See for example:; https://stackoverflow.com/questions/8415895/is-left-and-right-shifting-negative-integers-defined-behavior. You can rewrite the code like this:; ```; int64_t t2 = t0 - (int64_t) ( (uint64_t)c << 48);; ```. to solve the problem. It has no performance impact (verified on i7-8650U CPU with GCC v10.3.1). Here is the code I have used:; https://github.com/jirka-h/ranluxpp-portable",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8503
https://github.com/root-project/root/issues/8503:479,Performance,perform,performance,479,"In ranluxpp code, there is a left shift of negative value (c == -1); https://github.com/root-project/root/blob/master/math/mathcore/src/ranluxpp/mulmod.h#L169. Please note that this behavior is undefined per the C standard. See for example:; https://stackoverflow.com/questions/8415895/is-left-and-right-shifting-negative-integers-defined-behavior. You can rewrite the code like this:; ```; int64_t t2 = t0 - (int64_t) ( (uint64_t)c << 48);; ```. to solve the problem. It has no performance impact (verified on i7-8650U CPU with GCC v10.3.1). Here is the code I have used:; https://github.com/jirka-h/ranluxpp-portable",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8503
https://github.com/root-project/root/issues/8504:154,Modifiability,portab,portable,154,FYI - I have created a standalone implementation of ranluxpp written in C based on your code. You can check it here:. https://github.com/jirka-h/ranluxpp-portable,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8504
https://github.com/root-project/root/issues/8505:2986,Availability,down,download,2986,"ry);; }. elists.Add(&elist1);; elists.Add(&elist2);. TChain chain{""entries""};; chain.Add(""file_20entries_1.root"");; chain.Add(""file_20entries_1.root"");. chain.SetEntryList(&elists);. ROOT::RDataFrame df{chain};. std::cout << df.Count().GetValue() << ""\n"";; }; ```; Will output the following; ```; vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: g++ -o tentrylist_emptysource_twofiles tentrylist_emptysource_twofiles.cpp `root-config --cflags --glibs`; vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: ./tentrylist_emptysource_twofiles ; 20; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The expected result of the above snippet is 30, that is 20 entries from the first TEntryList and 10 entries from the second. Note that, if I create a second file identical to the first one and call it `file_20entries_2.root`, changing the above snippet with; ```diff; - TEntryList elist2{""e"",""e"",""entries"",""file_20entries_1.root""};; + TEntryList elist2{""e"",""e"",""entries"",""file_20entries_2.root""};; ...; TChain chain{""entries""};; chain.Add(""file_20entries_1.root"");; - chain.Add(""file_20entries_1.root"");; + chain.Add(""file_20entries_2.root"");; ```; yields the correct result:; ```; vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: g++ -o tentrylist_emptysource_twofiles tentrylist_emptysource_twofiles.cpp `root-config --cflags --glibs`; vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: ./tentrylist_emptysource_twofiles; 30; ```. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Everything above should be enough. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT master built from source on Fedora32",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8505
https://github.com/root-project/root/issues/8505:2968,Deployability,install,install,2968,"ry);; }. elists.Add(&elist1);; elists.Add(&elist2);. TChain chain{""entries""};; chain.Add(""file_20entries_1.root"");; chain.Add(""file_20entries_1.root"");. chain.SetEntryList(&elists);. ROOT::RDataFrame df{chain};. std::cout << df.Count().GetValue() << ""\n"";; }; ```; Will output the following; ```; vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: g++ -o tentrylist_emptysource_twofiles tentrylist_emptysource_twofiles.cpp `root-config --cflags --glibs`; vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: ./tentrylist_emptysource_twofiles ; 20; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The expected result of the above snippet is 30, that is 20 entries from the first TEntryList and 10 entries from the second. Note that, if I create a second file identical to the first one and call it `file_20entries_2.root`, changing the above snippet with; ```diff; - TEntryList elist2{""e"",""e"",""entries"",""file_20entries_1.root""};; + TEntryList elist2{""e"",""e"",""entries"",""file_20entries_2.root""};; ...; TChain chain{""entries""};; chain.Add(""file_20entries_1.root"");; - chain.Add(""file_20entries_1.root"");; + chain.Add(""file_20entries_2.root"");; ```; yields the correct result:; ```; vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: g++ -o tentrylist_emptysource_twofiles tentrylist_emptysource_twofiles.cpp `root-config --cflags --glibs`; vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: ./tentrylist_emptysource_twofiles; 30; ```. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Everything above should be enough. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT master built from source on Fedora32",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8505
https://github.com/root-project/root/issues/8505:1497,Modifiability,config,config,1497,"e_20entries_1.root""); ```. Then the following snippet; ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TChain.h>; #include <TEntryList.h>; #include <iostream>. int main(){; auto start_1{0};; auto start_2{0};; auto end_1{20};; auto end_2{10};. TEntryList elists;; TEntryList elist1{""e"",""e"",""entries"",""file_20entries_1.root""};; TEntryList elist2{""e"",""e"",""entries"",""file_20entries_1.root""};. for(auto entry = start_1; entry < end_1; entry++){; elist1.Enter(entry);; }. for(auto entry = start_2; entry < end_2; entry++){; elist2.Enter(entry);; }. elists.Add(&elist1);; elists.Add(&elist2);. TChain chain{""entries""};; chain.Add(""file_20entries_1.root"");; chain.Add(""file_20entries_1.root"");. chain.SetEntryList(&elists);. ROOT::RDataFrame df{chain};. std::cout << df.Count().GetValue() << ""\n"";; }; ```; Will output the following; ```; vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: g++ -o tentrylist_emptysource_twofiles tentrylist_emptysource_twofiles.cpp `root-config --cflags --glibs`; vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: ./tentrylist_emptysource_twofiles ; 20; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The expected result of the above snippet is 30, that is 20 entries from the first TEntryList and 10 entries from the second. Note that, if I create a second file identical to the first one and call it `file_20entries_2.root`, changing the above snippet with; ```diff; - TEntryList elist2{""e"",""e"",""entries"",""file_20entries_1.root""};; + TEntryList elist2{""e"",""e"",""entries"",""file_20entries_2.root""};; ...; TChain chain{""entries""};; chain.Add(""file_20entries_1.root"");; - chain.Add(""file_20entries_1.root"");; + chain.Add(""file_20entries_2.root"");; ```; yields the correct result:; ```; vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: g++ -o tentrylist_emptysource_twofiles tentrylist_emptysource_twofiles.cpp `root-config --cflags --glibs`; vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: ./tentrylist_emptyso",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8505
https://github.com/root-project/root/issues/8505:2434,Modifiability,config,config,2434,"ry);; }. elists.Add(&elist1);; elists.Add(&elist2);. TChain chain{""entries""};; chain.Add(""file_20entries_1.root"");; chain.Add(""file_20entries_1.root"");. chain.SetEntryList(&elists);. ROOT::RDataFrame df{chain};. std::cout << df.Count().GetValue() << ""\n"";; }; ```; Will output the following; ```; vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: g++ -o tentrylist_emptysource_twofiles tentrylist_emptysource_twofiles.cpp `root-config --cflags --glibs`; vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: ./tentrylist_emptysource_twofiles ; 20; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The expected result of the above snippet is 30, that is 20 entries from the first TEntryList and 10 entries from the second. Note that, if I create a second file identical to the first one and call it `file_20entries_2.root`, changing the above snippet with; ```diff; - TEntryList elist2{""e"",""e"",""entries"",""file_20entries_1.root""};; + TEntryList elist2{""e"",""e"",""entries"",""file_20entries_2.root""};; ...; TChain chain{""entries""};; chain.Add(""file_20entries_1.root"");; - chain.Add(""file_20entries_1.root"");; + chain.Add(""file_20entries_2.root"");; ```; yields the correct result:; ```; vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: g++ -o tentrylist_emptysource_twofiles tentrylist_emptysource_twofiles.cpp `root-config --cflags --glibs`; vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: ./tentrylist_emptysource_twofiles; 30; ```. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Everything above should be enough. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT master built from source on Fedora32",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8505
https://github.com/root-project/root/issues/8505:60,Usability,clear,clear,60,"- [x] Checked for duplicates. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; It is possible to construct a TChain that reads the same tree from the same file twice. It appears that if I create a TEntryList for said chain, it will only read the entries the first time, while the second read of the same file will be ignored. Let's create a file with a tree and 20 entries. Something like this is enough; ```python; ROOT.RDataFrame(20).Define(""x"",""rdfentry_"").Snapshot(""entries"",""file_20entries_1.root""); ```. Then the following snippet; ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TChain.h>; #include <TEntryList.h>; #include <iostream>. int main(){; auto start_1{0};; auto start_2{0};; auto end_1{20};; auto end_2{10};. TEntryList elists;; TEntryList elist1{""e"",""e"",""entries"",""file_20entries_1.root""};; TEntryList elist2{""e"",""e"",""entries"",""file_20entries_1.root""};. for(auto entry = start_1; entry < end_1; entry++){; elist1.Enter(entry);; }. for(auto entry = start_2; entry < end_2; entry++){; elist2.Enter(entry);; }. elists.Add(&elist1);; elists.Add(&elist2);. TChain chain{""entries""};; chain.Add(""file_20entries_1.root"");; chain.Add(""file_20entries_1.root"");. chain.SetEntryList(&elists);. ROOT::RDataFrame df{chain};. std::cout << df.Count().GetValue() << ""\n"";; }; ```; Will output the following; ```; vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: g++ -o tentrylist_emptysource_twofiles tentrylist_emptysource_twofiles.cpp `root-config --cflags --glibs`; vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: ./tentrylist_emptysource_twofiles ; 20; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The expected result of the above snippet is 30, that is 20 entries from the first TEntryList and 10 entries from the second. Note that, if I create a second file identical to the first one and call it `file_20entries_2.root`, changing the above snippet with; ```diff; - TEntryList e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8505
https://github.com/root-project/root/issues/8505:1651,Usability,clear,clear,1651,"st.h>; #include <iostream>. int main(){; auto start_1{0};; auto start_2{0};; auto end_1{20};; auto end_2{10};. TEntryList elists;; TEntryList elist1{""e"",""e"",""entries"",""file_20entries_1.root""};; TEntryList elist2{""e"",""e"",""entries"",""file_20entries_1.root""};. for(auto entry = start_1; entry < end_1; entry++){; elist1.Enter(entry);; }. for(auto entry = start_2; entry < end_2; entry++){; elist2.Enter(entry);; }. elists.Add(&elist1);; elists.Add(&elist2);. TChain chain{""entries""};; chain.Add(""file_20entries_1.root"");; chain.Add(""file_20entries_1.root"");. chain.SetEntryList(&elists);. ROOT::RDataFrame df{chain};. std::cout << df.Count().GetValue() << ""\n"";; }; ```; Will output the following; ```; vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: g++ -o tentrylist_emptysource_twofiles tentrylist_emptysource_twofiles.cpp `root-config --cflags --glibs`; vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: ./tentrylist_emptysource_twofiles ; 20; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The expected result of the above snippet is 30, that is 20 entries from the first TEntryList and 10 entries from the second. Note that, if I create a second file identical to the first one and call it `file_20entries_2.root`, changing the above snippet with; ```diff; - TEntryList elist2{""e"",""e"",""entries"",""file_20entries_1.root""};; + TEntryList elist2{""e"",""e"",""entries"",""file_20entries_2.root""};; ...; TChain chain{""entries""};; chain.Add(""file_20entries_1.root"");; - chain.Add(""file_20entries_1.root"");; + chain.Add(""file_20entries_2.root"");; ```; yields the correct result:; ```; vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: g++ -o tentrylist_emptysource_twofiles tentrylist_emptysource_twofiles.cpp `root-config --cflags --glibs`; vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: ./tentrylist_emptysource_twofiles; 30; ```. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a par",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8505
https://github.com/root-project/root/issues/8507:776,Usability,simpl,simple,776,"### Explain what you would like to see improved. It would be great to add documentation for several [RooKeysPdf](https://root.cern.ch/doc/master/classRooKeysPdf.html) parameters.; In particular, there is a parameter *rho* in two constructors, which has no explanation. Constructors descriptions are very unclear. However, *rho* is explained in the article. There is a parameter Mirror, which I could not find in the article (it has more options than there). From the code it looks like usually it is just reflecting pdf around the border:. if (_mirrorLeft) {; p.x = 2. * _lo - x;. But from the [source code, line 261](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooKeysPdf.cxx#L261) I can't understand the meaning of *_asymLeft* option (the code is not simple or intuitive, and has no comments). ### Additional context. Maybe it would be worth to give a link to [RooNDKeysPdf](https://root.cern.ch/doc/master/classRooNDKeysPdf.html) as a closely related class?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8507
https://github.com/root-project/root/issues/8507:786,Usability,intuit,intuitive,786,"### Explain what you would like to see improved. It would be great to add documentation for several [RooKeysPdf](https://root.cern.ch/doc/master/classRooKeysPdf.html) parameters.; In particular, there is a parameter *rho* in two constructors, which has no explanation. Constructors descriptions are very unclear. However, *rho* is explained in the article. There is a parameter Mirror, which I could not find in the article (it has more options than there). From the code it looks like usually it is just reflecting pdf around the border:. if (_mirrorLeft) {; p.x = 2. * _lo - x;. But from the [source code, line 261](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooKeysPdf.cxx#L261) I can't understand the meaning of *_asymLeft* option (the code is not simple or intuitive, and has no comments). ### Additional context. Maybe it would be worth to give a link to [RooNDKeysPdf](https://root.cern.ch/doc/master/classRooNDKeysPdf.html) as a closely related class?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8507
https://github.com/root-project/root/pull/8509:60,Safety,avoid,avoid,60,* provide proper list of pythonization files for RootFit; * avoid empty string with extra . in produce file name,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8509
https://github.com/root-project/root/pull/8510:802,Deployability,update,updated,802,"As reported in https://root-forum.cern.ch/t/how-can-i-set-the-tuning-parameters-for-gslsimanminimizer-when-using-root-fitter/45497 the setting of the specific options for the GSLSimAnMinimizer does not work from the Fitter class or the base Minimizer class. This is happening also for other minimizers. This is now fixed in this PR by removing SetOptions() and Options() derived methods (one can use the base class ones) ; and correctly set the options in the solver class before minimizing.; The setting of the options through the Fitter class is fixed by adding a Minimizer::SetExtraOptions method and calling it from FItConfig::CreateMinimizer; ; In addition when not using Minuit or Minuit2 do not have Migrad as default algorithm in MinimizerOptions. An example on how to set the options has been updated in the doc. ; This code example also shows that now setting of the options works:; ```; {; TH1D h1(""h1"",""h1"",100,-3,4) ; ; h1.FillRandom(""gaus""); ; ROOT::Math::MinimizerOptions::SetDefaultMinimizer(""GSLSimAn"") ; ; ROOT::Math::GenAlgoOptions simanOpt; ; ; simanOpt.SetValue(""n_tries"", 1000); ; ROOT::Math::MinimizerOptions::SetDefaultExtraOptions(&simanOpt) ; ; ROOT::Math::MinimizerOptions::SetDefaultPrintLevel(1) ; // options ar enow printed when level is >=1 ; h1.Fit(""gaus"") ;; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8510
https://github.com/root-project/root/pull/8511:66,Availability,failure,failure,66,"In the case of the storage location, this change turns an assert; failure into an exception:. Before:; ```; Fatal: fileStream violated at line 1145 of `ntuple/v7/src/RMiniFile.cxx'; ```. After:; ```; C++ exception with description ""empty storage location""; ```. For the RNTuple name, the empty string only caused issues when added to; a TFile (but that's enough to ban it):. ```cpp; std::string path = ""some_file.root""; auto file = TFile::Open(path.c_str(), ""RECREATE"");; {; auto model = RNTupleModel::Create();; auto fieldPt = model->MakeField<float>(""pt"", 42.0);; auto ntuple = RNTupleWriter::Append(std::move(model), """", *file);; ntuple->Fill();; }; file->Close();; delete file;. // throws; auto ntuple = RNTupleReader::Open("""", path);; ```; ```; C++ exception with description ""no RNTuple named '' in file 'test_ntuple_empty_filename.root' (unchecked RResult access!); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8511
https://github.com/root-project/root/pull/8511:863,Security,access,access,863,"In the case of the storage location, this change turns an assert; failure into an exception:. Before:; ```; Fatal: fileStream violated at line 1145 of `ntuple/v7/src/RMiniFile.cxx'; ```. After:; ```; C++ exception with description ""empty storage location""; ```. For the RNTuple name, the empty string only caused issues when added to; a TFile (but that's enough to ban it):. ```cpp; std::string path = ""some_file.root""; auto file = TFile::Open(path.c_str(), ""RECREATE"");; {; auto model = RNTupleModel::Create();; auto fieldPt = model->MakeField<float>(""pt"", 42.0);; auto ntuple = RNTupleWriter::Append(std::move(model), """", *file);; ntuple->Fill();; }; file->Close();; delete file;. // throws; auto ntuple = RNTupleReader::Open("""", path);; ```; ```; C++ exception with description ""no RNTuple named '' in file 'test_ntuple_empty_filename.root' (unchecked RResult access!); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8511
https://github.com/root-project/root/pull/8511:58,Testability,assert,assert,58,"In the case of the storage location, this change turns an assert; failure into an exception:. Before:; ```; Fatal: fileStream violated at line 1145 of `ntuple/v7/src/RMiniFile.cxx'; ```. After:; ```; C++ exception with description ""empty storage location""; ```. For the RNTuple name, the empty string only caused issues when added to; a TFile (but that's enough to ban it):. ```cpp; std::string path = ""some_file.root""; auto file = TFile::Open(path.c_str(), ""RECREATE"");; {; auto model = RNTupleModel::Create();; auto fieldPt = model->MakeField<float>(""pt"", 42.0);; auto ntuple = RNTupleWriter::Append(std::move(model), """", *file);; ntuple->Fill();; }; file->Close();; delete file;. // throws; auto ntuple = RNTupleReader::Open("""", path);; ```; ```; C++ exception with description ""no RNTuple named '' in file 'test_ntuple_empty_filename.root' (unchecked RResult access!); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8511
https://github.com/root-project/root/issues/8513:61,Availability,Error,Error,61,"In gcc 11, core/meta/src/TEnumConstant.cxx cannot be built.; Error message:; ```; /tmp/root-6.22.06/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^~~~~~~~~~~~~~; ```; This is because <limits> is not explicitly included by core/foundation/inc/ROOT/libcpp_string_view.h. It can be built if the header is included.; https://github.com/root-project/root/blob/71e0b990b889ff292be5bfa79d1f85e15440eaa5/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h#L40-L45",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8513
https://github.com/root-project/root/issues/8513:154,Availability,error,error,154,"In gcc 11, core/meta/src/TEnumConstant.cxx cannot be built.; Error message:; ```; /tmp/root-6.22.06/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^~~~~~~~~~~~~~; ```; This is because <limits> is not explicitly included by core/foundation/inc/ROOT/libcpp_string_view.h. It can be built if the header is included.; https://github.com/root-project/root/blob/71e0b990b889ff292be5bfa79d1f85e15440eaa5/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h#L40-L45",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8513
https://github.com/root-project/root/issues/8513:67,Integrability,message,message,67,"In gcc 11, core/meta/src/TEnumConstant.cxx cannot be built.; Error message:; ```; /tmp/root-6.22.06/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^~~~~~~~~~~~~~; ```; This is because <limits> is not explicitly included by core/foundation/inc/ROOT/libcpp_string_view.h. It can be built if the header is included.; https://github.com/root-project/root/blob/71e0b990b889ff292be5bfa79d1f85e15440eaa5/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h#L40-L45",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8513
https://github.com/root-project/root/issues/8517:693,Availability,error,error,693,"### Is your feature request related to a problem? Please describe.; I'd like to store a vector of integers in a TFile. Rene Brun suggested using [TVectorD for doubles](https://root-forum.cern.ch/t/writing-simple-variable-in-root-files/11094/2?u=ynikitenko), but I'd like to store integers (to store them in the vector of doubles is possible, but less convenient). [TVectorT](https://root.cern.ch/doc/master/classTVectorT.html) has support only for floats and doubles. [As of 2011, it doesn't support integers](https://root-forum.cern.ch/t/tvectort-int/12041/2?u=ynikitenko).; But I think it would be nice to add that support. When I try to use TVectorT\<int\> in `ROOT 6.24/00`, `ld` gives an error:. > undefined reference to `TVectorT<int>::TVectorT(int)'. ### Describe the solution you'd like; Add support for TVectorT\<int\> and a `TVectorI` shortcut (would be easier to use that from Python). ### Describe alternatives you've considered; @pcanal [proposed](https://root-forum.cern.ch/t/tvectort-int/12041/4?u=ynikitenko) such a code,. struct VectorWrapper : public TObject {; std::vector<int> fContent;; ClassDef(VectorWrapper, 2);; };. and to generate, compile and link a dictionary for that. However, it would take much more time than to use a ready class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8517
https://github.com/root-project/root/issues/8517:212,Modifiability,variab,variable-in-root-files,212,"### Is your feature request related to a problem? Please describe.; I'd like to store a vector of integers in a TFile. Rene Brun suggested using [TVectorD for doubles](https://root-forum.cern.ch/t/writing-simple-variable-in-root-files/11094/2?u=ynikitenko), but I'd like to store integers (to store them in the vector of doubles is possible, but less convenient). [TVectorT](https://root.cern.ch/doc/master/classTVectorT.html) has support only for floats and doubles. [As of 2011, it doesn't support integers](https://root-forum.cern.ch/t/tvectort-int/12041/2?u=ynikitenko).; But I think it would be nice to add that support. When I try to use TVectorT\<int\> in `ROOT 6.24/00`, `ld` gives an error:. > undefined reference to `TVectorT<int>::TVectorT(int)'. ### Describe the solution you'd like; Add support for TVectorT\<int\> and a `TVectorI` shortcut (would be easier to use that from Python). ### Describe alternatives you've considered; @pcanal [proposed](https://root-forum.cern.ch/t/tvectort-int/12041/4?u=ynikitenko) such a code,. struct VectorWrapper : public TObject {; std::vector<int> fContent;; ClassDef(VectorWrapper, 2);; };. and to generate, compile and link a dictionary for that. However, it would take much more time than to use a ready class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8517
https://github.com/root-project/root/issues/8517:205,Usability,simpl,simple-variable-in-root-files,205,"### Is your feature request related to a problem? Please describe.; I'd like to store a vector of integers in a TFile. Rene Brun suggested using [TVectorD for doubles](https://root-forum.cern.ch/t/writing-simple-variable-in-root-files/11094/2?u=ynikitenko), but I'd like to store integers (to store them in the vector of doubles is possible, but less convenient). [TVectorT](https://root.cern.ch/doc/master/classTVectorT.html) has support only for floats and doubles. [As of 2011, it doesn't support integers](https://root-forum.cern.ch/t/tvectort-int/12041/2?u=ynikitenko).; But I think it would be nice to add that support. When I try to use TVectorT\<int\> in `ROOT 6.24/00`, `ld` gives an error:. > undefined reference to `TVectorT<int>::TVectorT(int)'. ### Describe the solution you'd like; Add support for TVectorT\<int\> and a `TVectorI` shortcut (would be easier to use that from Python). ### Describe alternatives you've considered; @pcanal [proposed](https://root-forum.cern.ch/t/tvectort-int/12041/4?u=ynikitenko) such a code,. struct VectorWrapper : public TObject {; std::vector<int> fContent;; ClassDef(VectorWrapper, 2);; };. and to generate, compile and link a dictionary for that. However, it would take much more time than to use a ready class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8517
https://github.com/root-project/root/issues/8518:1667,Availability,recover,recover,1667,"ems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash; $ root; input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]; #include <new>; ^; input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]; input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]; #include ""cling/Interpreter/RuntimeUniverse.h""; ^; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:3:; /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]; #include ""cling/Interpreter/DynamicExprInfo.h""; ^; ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash; <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]; While building module 'MathCore':; In file included from <module-includes>:3:; In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:; /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'; std::vector<double> ones{1, 1, 1, 1};; ^ ~~~~~~~~~~~~~~~~; ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:2265,Availability,error,error,2265,"ludes>:3:; /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]; #include ""cling/Interpreter/DynamicExprInfo.h""; ^; ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash; <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]; While building module 'MathCore':; In file included from <module-includes>:3:; In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:; /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'; std::vector<double> ones{1, 1, 1, 1};; ^ ~~~~~~~~~~~~~~~~; ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```; <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]; Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found.; Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found.; Module includeit.pcm not found.; Module lib not found.; Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found.; Module ���2V@)����2V not found.; Module TFitter not found.; Module; )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found.; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4573,Availability,Error,Error,4573, ���2V8���2V not found.; Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found.; Module Ц~�����2V D not found.; Module mi not found.; Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found.; Module 9.0 not found.; ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found.; Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found.; Module !p�w��:�2 not found.; Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found.; Module not found.; Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found.; Module not found.; Module GeneticMinimizer not found.; Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found.; Module �� not found.; Module module not found.; Module base_1621��7VP\�2Vl_khr_f not found.; Module not found.; Module not found.; Module �'��&E'��'�Q|�~ not found.; Module Q����2V�; ��2V����a3 not found.; Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```. on the third:. ```; <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]; (truncated but it's similar to above); ```. on the **fourteenth**:. ```; <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]; Module FitterBase not found.; Module (�;cU! ��;cUpJ��� not found.; Module TMVA.pcmoRTTI not found.; Module not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pc,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4685,Availability,Error,Error,4685, D not found.; Module mi not found.; Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found.; Module 9.0 not found.; ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found.; Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found.; Module !p�w��:�2 not found.; Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found.; Module not found.; Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found.; Module not found.; Module GeneticMinimizer not found.; Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found.; Module �� not found.; Module module not found.; Module base_1621��7VP\�2Vl_khr_f not found.; Module not found.; Module not found.; Module �'��&E'��'�Q|�~ not found.; Module Q����2V�; ��2V����a3 not found.; Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```. on the third:. ```; <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]; (truncated but it's similar to above); ```. on the **fourteenth**:. ```; <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]; Module FitterBase not found.; Module (�;cU! ��;cUpJ��� not found.; Module TMVA.pcmoRTTI not found.; Module not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMat,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5527,Availability,Error,Error,5527,n?�ʾ��v� �z�� not found.; Module not found.; Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found.; Module not found.; Module GeneticMinimizer not found.; Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found.; Module �� not found.; Module module not found.; Module base_1621��7VP\�2Vl_khr_f not found.; Module not found.; Module not found.; Module �'��&E'��'�Q|�~ not found.; Module Q����2V�; ��2V����a3 not found.; Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```. on the third:. ```; <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]; (truncated but it's similar to above); ```. on the **fourteenth**:. ```; <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]; Module FitterBase not found.; Module (�;cU! ��;cUpJ��� not found.; Module TMVA.pcmoRTTI not found.; Module not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```. on the **fifteenth** run it finally becomes stable with this output:. ```; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5639,Availability,Error,Error,5639,n?�ʾ��v� �z�� not found.; Module not found.; Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found.; Module not found.; Module GeneticMinimizer not found.; Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found.; Module �� not found.; Module module not found.; Module base_1621��7VP\�2Vl_khr_f not found.; Module not found.; Module not found.; Module �'��&E'��'�Q|�~ not found.; Module Q����2V�; ��2V����a3 not found.; Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```. on the third:. ```; <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]; (truncated but it's similar to above); ```. on the **fourteenth**:. ```; <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]; Module FitterBase not found.; Module (�;cU! ��;cUpJ��� not found.; Module TMVA.pcmoRTTI not found.; Module not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```. on the **fifteenth** run it finally becomes stable with this output:. ```; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5845,Availability,Error,Error,5845,n?�ʾ��v� �z�� not found.; Module not found.; Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found.; Module not found.; Module GeneticMinimizer not found.; Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found.; Module �� not found.; Module module not found.; Module base_1621��7VP\�2Vl_khr_f not found.; Module not found.; Module not found.; Module �'��&E'��'�Q|�~ not found.; Module Q����2V�; ��2V����a3 not found.; Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```. on the third:. ```; <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]; (truncated but it's similar to above); ```. on the **fourteenth**:. ```; <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]; Module FitterBase not found.; Module (�;cU! ��;cUpJ��� not found.; Module TMVA.pcmoRTTI not found.; Module not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```. on the **fifteenth** run it finally becomes stable with this output:. ```; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5957,Availability,Error,Error,5957,n?�ʾ��v� �z�� not found.; Module not found.; Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found.; Module not found.; Module GeneticMinimizer not found.; Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found.; Module �� not found.; Module module not found.; Module base_1621��7VP\�2Vl_khr_f not found.; Module not found.; Module not found.; Module �'��&E'��'�Q|�~ not found.; Module Q����2V�; ��2V����a3 not found.; Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```. on the third:. ```; <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]; (truncated but it's similar to above); ```. on the **fourteenth**:. ```; <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]; Module FitterBase not found.; Module (�;cU! ��;cUpJ��� not found.; Module TMVA.pcmoRTTI not found.; Module not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```. on the **fifteenth** run it finally becomes stable with this output:. ```; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:423,Deployability,update,updated,423,"### Is your feature request related to a problem? Please describe. Currently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash; $ root; input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]; #include <new>; ^; input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]; input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]; #include ""cling/Interpreter/RuntimeUniverse.h""; ^; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:3:; /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]; #include ""cling/Interpreter/DynamicExprInfo.h""; ^; ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash; <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:629,Deployability,install,installing,629,"### Is your feature request related to a problem? Please describe. Currently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash; $ root; input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]; #include <new>; ^; input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]; input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]; #include ""cling/Interpreter/RuntimeUniverse.h""; ^; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:3:; /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]; #include ""cling/Interpreter/DynamicExprInfo.h""; ^; ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash; <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:1806,Deployability,patch,patch,1806,"to be rebuilt:. ```bash; $ root; input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]; #include <new>; ^; input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]; input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]; #include ""cling/Interpreter/RuntimeUniverse.h""; ^; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:3:; /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]; #include ""cling/Interpreter/DynamicExprInfo.h""; ^; ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash; <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]; While building module 'MathCore':; In file included from <module-includes>:3:; In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:; /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'; std::vector<double> ones{1, 1, 1, 1};; ^ ~~~~~~~~~~~~~~~~; ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```; <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:1812,Deployability,release,release,1812,"to be rebuilt:. ```bash; $ root; input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]; #include <new>; ^; input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]; input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]; #include ""cling/Interpreter/RuntimeUniverse.h""; ^; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:3:; /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]; #include ""cling/Interpreter/DynamicExprInfo.h""; ^; ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash; <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]; While building module 'MathCore':; In file included from <module-includes>:3:; In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:; /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'; std::vector<double> ones{1, 1, 1, 1};; ^ ~~~~~~~~~~~~~~~~; ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```; <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:662,Integrability,depend,dependencies,662,"### Is your feature request related to a problem? Please describe. Currently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash; $ root; input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]; #include <new>; ^; input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]; input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]; #include ""cling/Interpreter/RuntimeUniverse.h""; ^; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:3:; /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]; #include ""cling/Interpreter/DynamicExprInfo.h""; ^; ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash; <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:1744,Integrability,depend,dependency,1744,"ems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash; $ root; input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]; #include <new>; ^; input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]; input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]; #include ""cling/Interpreter/RuntimeUniverse.h""; ^; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:3:; /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]; #include ""cling/Interpreter/DynamicExprInfo.h""; ^; ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash; <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]; While building module 'MathCore':; In file included from <module-includes>:3:; In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:; /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'; std::vector<double> ones{1, 1, 1, 1};; ^ ~~~~~~~~~~~~~~~~; ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4591,Performance,Load,LoadPCM,4591, ���2V8���2V not found.; Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found.; Module Ц~�����2V D not found.; Module mi not found.; Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found.; Module 9.0 not found.; ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found.; Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found.; Module !p�w��:�2 not found.; Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found.; Module not found.; Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found.; Module not found.; Module GeneticMinimizer not found.; Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found.; Module �� not found.; Module module not found.; Module base_1621��7VP\�2Vl_khr_f not found.; Module not found.; Module not found.; Module �'��&E'��'�Q|�~ not found.; Module Q����2V�; ��2V����a3 not found.; Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```. on the third:. ```; <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]; (truncated but it's similar to above); ```. on the **fourteenth**:. ```; <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]; Module FitterBase not found.; Module (�;cU! ��;cUpJ��� not found.; Module TMVA.pcmoRTTI not found.; Module not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pc,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4703,Performance,Load,LoadPCM,4703, D not found.; Module mi not found.; Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found.; Module 9.0 not found.; ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found.; Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found.; Module !p�w��:�2 not found.; Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found.; Module not found.; Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found.; Module not found.; Module GeneticMinimizer not found.; Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found.; Module �� not found.; Module module not found.; Module base_1621��7VP\�2Vl_khr_f not found.; Module not found.; Module not found.; Module �'��&E'��'�Q|�~ not found.; Module Q����2V�; ��2V����a3 not found.; Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```. on the third:. ```; <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]; (truncated but it's similar to above); ```. on the **fourteenth**:. ```; <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]; Module FitterBase not found.; Module (�;cU! ��;cUpJ��� not found.; Module TMVA.pcmoRTTI not found.; Module not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMat,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5545,Performance,Load,LoadPCM,5545,n?�ʾ��v� �z�� not found.; Module not found.; Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found.; Module not found.; Module GeneticMinimizer not found.; Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found.; Module �� not found.; Module module not found.; Module base_1621��7VP\�2Vl_khr_f not found.; Module not found.; Module not found.; Module �'��&E'��'�Q|�~ not found.; Module Q����2V�; ��2V����a3 not found.; Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```. on the third:. ```; <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]; (truncated but it's similar to above); ```. on the **fourteenth**:. ```; <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]; Module FitterBase not found.; Module (�;cU! ��;cUpJ��� not found.; Module TMVA.pcmoRTTI not found.; Module not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```. on the **fifteenth** run it finally becomes stable with this output:. ```; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5657,Performance,Load,LoadPCM,5657,n?�ʾ��v� �z�� not found.; Module not found.; Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found.; Module not found.; Module GeneticMinimizer not found.; Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found.; Module �� not found.; Module module not found.; Module base_1621��7VP\�2Vl_khr_f not found.; Module not found.; Module not found.; Module �'��&E'��'�Q|�~ not found.; Module Q����2V�; ��2V����a3 not found.; Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```. on the third:. ```; <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]; (truncated but it's similar to above); ```. on the **fourteenth**:. ```; <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]; Module FitterBase not found.; Module (�;cU! ��;cUpJ��� not found.; Module TMVA.pcmoRTTI not found.; Module not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```. on the **fifteenth** run it finally becomes stable with this output:. ```; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5863,Performance,Load,LoadPCM,5863,n?�ʾ��v� �z�� not found.; Module not found.; Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found.; Module not found.; Module GeneticMinimizer not found.; Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found.; Module �� not found.; Module module not found.; Module base_1621��7VP\�2Vl_khr_f not found.; Module not found.; Module not found.; Module �'��&E'��'�Q|�~ not found.; Module Q����2V�; ��2V����a3 not found.; Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```. on the third:. ```; <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]; (truncated but it's similar to above); ```. on the **fourteenth**:. ```; <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]; Module FitterBase not found.; Module (�;cU! ��;cUpJ��� not found.; Module TMVA.pcmoRTTI not found.; Module not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```. on the **fifteenth** run it finally becomes stable with this output:. ```; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5975,Performance,Load,LoadPCM,5975,n?�ʾ��v� �z�� not found.; Module not found.; Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found.; Module not found.; Module GeneticMinimizer not found.; Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found.; Module �� not found.; Module module not found.; Module base_1621��7VP\�2Vl_khr_f not found.; Module not found.; Module not found.; Module �'��&E'��'�Q|�~ not found.; Module Q����2V�; ��2V����a3 not found.; Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```. on the third:. ```; <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]; (truncated but it's similar to above); ```. on the **fourteenth**:. ```; <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]; Module FitterBase not found.; Module (�;cU! ��;cUpJ��� not found.; Module TMVA.pcmoRTTI not found.; Module not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```. on the **fifteenth** run it finally becomes stable with this output:. ```; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:1667,Safety,recover,recover,1667,"ems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash; $ root; input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]; #include <new>; ^; input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]; input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]; #include ""cling/Interpreter/RuntimeUniverse.h""; ^; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:3:; /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]; #include ""cling/Interpreter/DynamicExprInfo.h""; ^; ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash; <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]; While building module 'MathCore':; In file included from <module-includes>:3:; In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:; /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'; std::vector<double> ones{1, 1, 1, 1};; ^ ~~~~~~~~~~~~~~~~; ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:908,Testability,test,test,908,"### Is your feature request related to a problem? Please describe. Currently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash; $ root; input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]; #include <new>; ^; input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]; input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]; #include ""cling/Interpreter/RuntimeUniverse.h""; ^; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:3:; /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]; #include ""cling/Interpreter/DynamicExprInfo.h""; ^; ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash; <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:1130,Testability,test,test,1130,"o a problem? Please describe. Currently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash; $ root; input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]; #include <new>; ^; input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]; input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]; #include ""cling/Interpreter/RuntimeUniverse.h""; ^; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:3:; /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]; #include ""cling/Interpreter/DynamicExprInfo.h""; ^; ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash; <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:1368,Testability,test,test,1368,"n you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash; $ root; input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]; #include <new>; ^; input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]; input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]; #include ""cling/Interpreter/RuntimeUniverse.h""; ^; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:3:; /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]; #include ""cling/Interpreter/DynamicExprInfo.h""; ^; ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash; <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]; While building module 'MathCore':; In file included from <module-includes>:3:; In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:; /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:1512,Testability,test,test,1512,"ves you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash; $ root; input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]; #include <new>; ^; input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]; input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]; #include ""cling/Interpreter/RuntimeUniverse.h""; ^; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:3:; /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]; #include ""cling/Interpreter/DynamicExprInfo.h""; ^; ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash; <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]; While building module 'MathCore':; In file included from <module-includes>:3:; In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:; /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'; std::vector<double> ones{1, 1, 1, 1};; ^ ~~~~~~~~~~~~~~~~; ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:2000,Testability,test,test,2000,"de <new>; ^; input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]; input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]; #include ""cling/Interpreter/RuntimeUniverse.h""; ^; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:3:; /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]; #include ""cling/Interpreter/DynamicExprInfo.h""; ^; ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash; <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]; While building module 'MathCore':; In file included from <module-includes>:3:; In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:; /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'; std::vector<double> ones{1, 1, 1, 1};; ^ ~~~~~~~~~~~~~~~~; ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```; <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]; Module a��",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:2170,Testability,test,test,2170,"e/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]; #include ""cling/Interpreter/RuntimeUniverse.h""; ^; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:3:; /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]; #include ""cling/Interpreter/DynamicExprInfo.h""; ^; ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash; <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]; While building module 'MathCore':; In file included from <module-includes>:3:; In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:; /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'; std::vector<double> ones{1, 1, 1, 1};; ^ ~~~~~~~~~~~~~~~~; ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```; <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]; Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found.; Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found.; Module includeit.pcm not",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:2230,Testability,test,test,2230,"; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:3:; /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]; #include ""cling/Interpreter/DynamicExprInfo.h""; ^; ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash; <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]; While building module 'MathCore':; In file included from <module-includes>:3:; In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:; /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'; std::vector<double> ones{1, 1, 1, 1};; ^ ~~~~~~~~~~~~~~~~; ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```; <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]; Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found.; Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found.; Module includeit.pcm not found.; Module lib not found.; Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found.; Module ���2V@)��",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:2800,Testability,test,test,2800,"cy issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash; <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]; While building module 'MathCore':; In file included from <module-includes>:3:; In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:; /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'; std::vector<double> ones{1, 1, 1, 1};; ^ ~~~~~~~~~~~~~~~~; ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```; <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]; Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found.; Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found.; Module includeit.pcm not found.; Module lib not found.; Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found.; Module ���2V@)����2V not found.; Module TFitter not found.; Module; )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found.; <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]; Module ROOTGpadv7 not found.; Module ���2V8���2V not found.; Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found.; Module Ц~�����2V D not found.; Module mi not found",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3437,Testability,test,test,3437,"~~~~~~~; ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```; <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]; Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found.; Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found.; Module includeit.pcm not found.; Module lib not found.; Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found.; Module ���2V@)����2V not found.; Module TFitter not found.; Module; )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found.; <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]; Module ROOTGpadv7 not found.; Module ���2V8���2V not found.; Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found.; Module Ц~�����2V D not found.; Module mi not found.; Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found.; Module 9.0 not found.; ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found.; Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found.; Module !p�w��:�2 not found.; Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found.; Module not found.; Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found.; Module not found.; Module GeneticMinimizer not found.; Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found.; Module �� not found.; Module module not found.; Module base_1621��7VP\�2Vl_khr_f not found.; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4638,Testability,test,test,4638, ���2V8���2V not found.; Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found.; Module Ц~�����2V D not found.; Module mi not found.; Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found.; Module 9.0 not found.; ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found.; Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found.; Module !p�w��:�2 not found.; Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found.; Module not found.; Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found.; Module not found.; Module GeneticMinimizer not found.; Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found.; Module �� not found.; Module module not found.; Module base_1621��7VP\�2Vl_khr_f not found.; Module not found.; Module not found.; Module �'��&E'��'�Q|�~ not found.; Module Q����2V�; ��2V����a3 not found.; Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```. on the third:. ```; <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]; (truncated but it's similar to above); ```. on the **fourteenth**:. ```; <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]; Module FitterBase not found.; Module (�;cU! ��;cUpJ��� not found.; Module TMVA.pcmoRTTI not found.; Module not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pc,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4750,Testability,test,test,4750, D not found.; Module mi not found.; Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found.; Module 9.0 not found.; ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found.; Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found.; Module !p�w��:�2 not found.; Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found.; Module not found.; Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found.; Module not found.; Module GeneticMinimizer not found.; Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found.; Module �� not found.; Module module not found.; Module base_1621��7VP\�2Vl_khr_f not found.; Module not found.; Module not found.; Module �'��&E'��'�Q|�~ not found.; Module Q����2V�; ��2V����a3 not found.; Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```. on the third:. ```; <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]; (truncated but it's similar to above); ```. on the **fourteenth**:. ```; <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]; Module FitterBase not found.; Module (�;cU! ��;cUpJ��� not found.; Module TMVA.pcmoRTTI not found.; Module not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMat,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4946,Testability,test,test,4946,V ��2V�v�2V��2V ��2V 	��2V not found.; Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found.; Module !p�w��:�2 not found.; Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found.; Module not found.; Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found.; Module not found.; Module GeneticMinimizer not found.; Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found.; Module �� not found.; Module module not found.; Module base_1621��7VP\�2Vl_khr_f not found.; Module not found.; Module not found.; Module �'��&E'��'�Q|�~ not found.; Module Q����2V�; ��2V����a3 not found.; Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```. on the third:. ```; <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]; (truncated but it's similar to above); ```. on the **fourteenth**:. ```; <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]; Module FitterBase not found.; Module (�;cU! ��;cUpJ��� not found.; Module TMVA.pcmoRTTI not found.; Module not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```. on the **fifteenth** run it finally becomes stable with this output:. ```; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/mini,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5271,Testability,test,test,5271,n?�ʾ��v� �z�� not found.; Module not found.; Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found.; Module not found.; Module GeneticMinimizer not found.; Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found.; Module �� not found.; Module module not found.; Module base_1621��7VP\�2Vl_khr_f not found.; Module not found.; Module not found.; Module �'��&E'��'�Q|�~ not found.; Module Q����2V�; ��2V����a3 not found.; Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```. on the third:. ```; <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]; (truncated but it's similar to above); ```. on the **fourteenth**:. ```; <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]; Module FitterBase not found.; Module (�;cU! ��;cUpJ��� not found.; Module TMVA.pcmoRTTI not found.; Module not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```. on the **fifteenth** run it finally becomes stable with this output:. ```; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5592,Testability,test,test,5592,n?�ʾ��v� �z�� not found.; Module not found.; Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found.; Module not found.; Module GeneticMinimizer not found.; Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found.; Module �� not found.; Module module not found.; Module base_1621��7VP\�2Vl_khr_f not found.; Module not found.; Module not found.; Module �'��&E'��'�Q|�~ not found.; Module Q����2V�; ��2V����a3 not found.; Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```. on the third:. ```; <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]; (truncated but it's similar to above); ```. on the **fourteenth**:. ```; <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]; Module FitterBase not found.; Module (�;cU! ��;cUpJ��� not found.; Module TMVA.pcmoRTTI not found.; Module not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```. on the **fifteenth** run it finally becomes stable with this output:. ```; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5704,Testability,test,test,5704,n?�ʾ��v� �z�� not found.; Module not found.; Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found.; Module not found.; Module GeneticMinimizer not found.; Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found.; Module �� not found.; Module module not found.; Module base_1621��7VP\�2Vl_khr_f not found.; Module not found.; Module not found.; Module �'��&E'��'�Q|�~ not found.; Module Q����2V�; ��2V����a3 not found.; Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```. on the third:. ```; <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]; (truncated but it's similar to above); ```. on the **fourteenth**:. ```; <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]; Module FitterBase not found.; Module (�;cU! ��;cUpJ��� not found.; Module TMVA.pcmoRTTI not found.; Module not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```. on the **fifteenth** run it finally becomes stable with this output:. ```; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5910,Testability,test,test,5910,n?�ʾ��v� �z�� not found.; Module not found.; Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found.; Module not found.; Module GeneticMinimizer not found.; Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found.; Module �� not found.; Module module not found.; Module base_1621��7VP\�2Vl_khr_f not found.; Module not found.; Module not found.; Module �'��&E'��'�Q|�~ not found.; Module Q����2V�; ��2V����a3 not found.; Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```. on the third:. ```; <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]; (truncated but it's similar to above); ```. on the **fourteenth**:. ```; <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]; Module FitterBase not found.; Module (�;cU! ��;cUpJ��� not found.; Module TMVA.pcmoRTTI not found.; Module not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```. on the **fifteenth** run it finally becomes stable with this output:. ```; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:6022,Testability,test,test,6022,n?�ʾ��v� �z�� not found.; Module not found.; Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found.; Module not found.; Module GeneticMinimizer not found.; Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found.; Module �� not found.; Module module not found.; Module base_1621��7VP\�2Vl_khr_f not found.; Module not found.; Module not found.; Module �'��&E'��'�Q|�~ not found.; Module Q����2V�; ��2V����a3 not found.; Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```. on the third:. ```; <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]; (truncated but it's similar to above); ```. on the **fourteenth**:. ```; <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]; Module FitterBase not found.; Module (�;cU! ��;cUpJ��� not found.; Module TMVA.pcmoRTTI not found.; Module not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```. on the **fifteenth** run it finally becomes stable with this output:. ```; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8519:378,Availability,down,downloaded,378,"- [github] Checked for duplicates; ### Describe the bug; On the page. https://root.cern.ch/doc/master/classRooChi2Var.html. there is only one block:. PyROOT; Constructor of RooChi2Var takes a RooCmdArg as argument also supports keyword arguments. In the [source code](https://root.cern.ch/doc/master/RooChi2Var_8cxx_source.html) (and previous documentation versions, e.g. in my downloaded html documentation archive for v. 6.24 and v. 6.22), you can see that there is a lot of documentation for that class (at least more than can be seen now).; Which is funny, there is no reference to PyROOT in the docstrings. ### Expected behavior; Documentation should be present. ### To Reproduce; Visit documentation site.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8519
https://github.com/root-project/root/issues/8524:551,Availability,error,error,551,"### Describe the bug; ROOT crashes when trying to compile a file where I add a tstring with a c string with a c++ string. ```; root.exe: /opt/root_src/core/metacling/src/TCling.cxx:2326: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const FwdDeclArgsToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""Payload code of a dictionary could not be parsed correctly.""' failed.; ```; ### Expected behavior; No crash, just a compiler error. ### To Reproduce; - Download this test [test.txt](https://github.com/root-project/root/files/6702369/test.txt); - Rename it to .cpp; - `root -l test.cpp+`. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |; | From heads/master@v6-25-01-1189-g1ca221f010 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8524
https://github.com/root-project/root/issues/8524:578,Availability,Down,Download,578,"### Describe the bug; ROOT crashes when trying to compile a file where I add a tstring with a c string with a c++ string. ```; root.exe: /opt/root_src/core/metacling/src/TCling.cxx:2326: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const FwdDeclArgsToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""Payload code of a dictionary could not be parsed correctly.""' failed.; ```; ### Expected behavior; No crash, just a compiler error. ### To Reproduce; - Download this test [test.txt](https://github.com/root-project/root/files/6702369/test.txt); - Rename it to .cpp; - `root -l test.cpp+`. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |; | From heads/master@v6-25-01-1189-g1ca221f010 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8524
https://github.com/root-project/root/issues/8524:371,Testability,Assert,Assertion,371,"### Describe the bug; ROOT crashes when trying to compile a file where I add a tstring with a c string with a c++ string. ```; root.exe: /opt/root_src/core/metacling/src/TCling.cxx:2326: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const FwdDeclArgsToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""Payload code of a dictionary could not be parsed correctly.""' failed.; ```; ### Expected behavior; No crash, just a compiler error. ### To Reproduce; - Download this test [test.txt](https://github.com/root-project/root/files/6702369/test.txt); - Rename it to .cpp; - `root -l test.cpp+`. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |; | From heads/master@v6-25-01-1189-g1ca221f010 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8524
https://github.com/root-project/root/issues/8524:592,Testability,test,test,592,"### Describe the bug; ROOT crashes when trying to compile a file where I add a tstring with a c string with a c++ string. ```; root.exe: /opt/root_src/core/metacling/src/TCling.cxx:2326: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const FwdDeclArgsToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""Payload code of a dictionary could not be parsed correctly.""' failed.; ```; ### Expected behavior; No crash, just a compiler error. ### To Reproduce; - Download this test [test.txt](https://github.com/root-project/root/files/6702369/test.txt); - Rename it to .cpp; - `root -l test.cpp+`. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |; | From heads/master@v6-25-01-1189-g1ca221f010 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8524
https://github.com/root-project/root/issues/8524:598,Testability,test,test,598,"### Describe the bug; ROOT crashes when trying to compile a file where I add a tstring with a c string with a c++ string. ```; root.exe: /opt/root_src/core/metacling/src/TCling.cxx:2326: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const FwdDeclArgsToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""Payload code of a dictionary could not be parsed correctly.""' failed.; ```; ### Expected behavior; No crash, just a compiler error. ### To Reproduce; - Download this test [test.txt](https://github.com/root-project/root/files/6702369/test.txt); - Rename it to .cpp; - `root -l test.cpp+`. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |; | From heads/master@v6-25-01-1189-g1ca221f010 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8524
https://github.com/root-project/root/issues/8524:659,Testability,test,test,659,"### Describe the bug; ROOT crashes when trying to compile a file where I add a tstring with a c string with a c++ string. ```; root.exe: /opt/root_src/core/metacling/src/TCling.cxx:2326: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const FwdDeclArgsToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""Payload code of a dictionary could not be parsed correctly.""' failed.; ```; ### Expected behavior; No crash, just a compiler error. ### To Reproduce; - Download this test [test.txt](https://github.com/root-project/root/files/6702369/test.txt); - Rename it to .cpp; - `root -l test.cpp+`. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |; | From heads/master@v6-25-01-1189-g1ca221f010 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8524
https://github.com/root-project/root/issues/8524:702,Testability,test,test,702,"### Describe the bug; ROOT crashes when trying to compile a file where I add a tstring with a c string with a c++ string. ```; root.exe: /opt/root_src/core/metacling/src/TCling.cxx:2326: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const FwdDeclArgsToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""Payload code of a dictionary could not be parsed correctly.""' failed.; ```; ### Expected behavior; No crash, just a compiler error. ### To Reproduce; - Download this test [test.txt](https://github.com/root-project/root/files/6702369/test.txt); - Rename it to .cpp; - `root -l test.cpp+`. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |; | From heads/master@v6-25-01-1189-g1ca221f010 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8524
https://github.com/root-project/root/pull/8525:1066,Energy Efficiency,allocate,allocated,1066,"Add a new page source and sink that use S3 as the backing store. Davix; is used as the S3 interface. The implementation is nearly identical; to the DAOS backend and there is a lot of duplicated code. ```cpp; std::string s3Uri(""s3://$(S3_BUCKET).$(S3_HOST)"");; {; auto model = RNTupleModel::Create();; auto pt = model->MakeField<float>(""pt"");; auto vec = model->MakeField<std::vector<int>>(""vec"");; // create a new RNTuple named `my_ntuple`; // -- objects are written to /bucket/my_ntuple/; auto writer = RNTupleWriter::Recreate(std::move(model), ""my_ntuple"", s3Uri);; for (int i = 0; i < 100; i++) {; *pt = 42.0;; *vec = {1, 2, 3};; writer->Fill();; }; }. // opens the RNTuple at the path /bucket/my_ntuple/; auto ntuple = RNTupleReader::Open(""my_ntuple"", s3Uri);; ```; results in the following objects stored in the bucket:; ```shell; my_ntuple/0 # page 0, 1, ... ; my_ntuple/1; my_ntuple/18446744073709551613 # footer; my_ntuple/18446744073709551614 # header; my_ntuple/18446744073709551615 # anchor; my_ntuple/2; ```; Like the current DAOS backend, one object is allocated for every page,; plus three for the header, footer, and anchor. Performance will not be; very good yet as only a single request at a time is issued. Pages are issued keys sequentially from 0, like the DAOS backend. There; are three reserved keys:; * anchor: u64(-1); * header: u64(-2); * footer: u64(-3). S3 access is controlled using the (ROOT & Davix-compatible) envvars:; * S3_REGION; * S3_SECRET_KEY; * S3_ACCESS_KEY. Perhaps these should be changed to the official AWS envvars. Todo:; - [ ] re-add cluster caching functionality to `PopulatePageFromCluster`; - [ ] implement `LoadCluster`; - [ ] test mocks; - [ ] test with real RNTuples; - [ ] issue concurrent requests to S3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8525
https://github.com/root-project/root/pull/8525:90,Integrability,interface,interface,90,"Add a new page source and sink that use S3 as the backing store. Davix; is used as the S3 interface. The implementation is nearly identical; to the DAOS backend and there is a lot of duplicated code. ```cpp; std::string s3Uri(""s3://$(S3_BUCKET).$(S3_HOST)"");; {; auto model = RNTupleModel::Create();; auto pt = model->MakeField<float>(""pt"");; auto vec = model->MakeField<std::vector<int>>(""vec"");; // create a new RNTuple named `my_ntuple`; // -- objects are written to /bucket/my_ntuple/; auto writer = RNTupleWriter::Recreate(std::move(model), ""my_ntuple"", s3Uri);; for (int i = 0; i < 100; i++) {; *pt = 42.0;; *vec = {1, 2, 3};; writer->Fill();; }; }. // opens the RNTuple at the path /bucket/my_ntuple/; auto ntuple = RNTupleReader::Open(""my_ntuple"", s3Uri);; ```; results in the following objects stored in the bucket:; ```shell; my_ntuple/0 # page 0, 1, ... ; my_ntuple/1; my_ntuple/18446744073709551613 # footer; my_ntuple/18446744073709551614 # header; my_ntuple/18446744073709551615 # anchor; my_ntuple/2; ```; Like the current DAOS backend, one object is allocated for every page,; plus three for the header, footer, and anchor. Performance will not be; very good yet as only a single request at a time is issued. Pages are issued keys sequentially from 0, like the DAOS backend. There; are three reserved keys:; * anchor: u64(-1); * header: u64(-2); * footer: u64(-3). S3 access is controlled using the (ROOT & Davix-compatible) envvars:; * S3_REGION; * S3_SECRET_KEY; * S3_ACCESS_KEY. Perhaps these should be changed to the official AWS envvars. Todo:; - [ ] re-add cluster caching functionality to `PopulatePageFromCluster`; - [ ] implement `LoadCluster`; - [ ] test mocks; - [ ] test with real RNTuples; - [ ] issue concurrent requests to S3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8525
https://github.com/root-project/root/pull/8525:1140,Performance,Perform,Performance,1140,"Add a new page source and sink that use S3 as the backing store. Davix; is used as the S3 interface. The implementation is nearly identical; to the DAOS backend and there is a lot of duplicated code. ```cpp; std::string s3Uri(""s3://$(S3_BUCKET).$(S3_HOST)"");; {; auto model = RNTupleModel::Create();; auto pt = model->MakeField<float>(""pt"");; auto vec = model->MakeField<std::vector<int>>(""vec"");; // create a new RNTuple named `my_ntuple`; // -- objects are written to /bucket/my_ntuple/; auto writer = RNTupleWriter::Recreate(std::move(model), ""my_ntuple"", s3Uri);; for (int i = 0; i < 100; i++) {; *pt = 42.0;; *vec = {1, 2, 3};; writer->Fill();; }; }. // opens the RNTuple at the path /bucket/my_ntuple/; auto ntuple = RNTupleReader::Open(""my_ntuple"", s3Uri);; ```; results in the following objects stored in the bucket:; ```shell; my_ntuple/0 # page 0, 1, ... ; my_ntuple/1; my_ntuple/18446744073709551613 # footer; my_ntuple/18446744073709551614 # header; my_ntuple/18446744073709551615 # anchor; my_ntuple/2; ```; Like the current DAOS backend, one object is allocated for every page,; plus three for the header, footer, and anchor. Performance will not be; very good yet as only a single request at a time is issued. Pages are issued keys sequentially from 0, like the DAOS backend. There; are three reserved keys:; * anchor: u64(-1); * header: u64(-2); * footer: u64(-3). S3 access is controlled using the (ROOT & Davix-compatible) envvars:; * S3_REGION; * S3_SECRET_KEY; * S3_ACCESS_KEY. Perhaps these should be changed to the official AWS envvars. Todo:; - [ ] re-add cluster caching functionality to `PopulatePageFromCluster`; - [ ] implement `LoadCluster`; - [ ] test mocks; - [ ] test with real RNTuples; - [ ] issue concurrent requests to S3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8525
https://github.com/root-project/root/pull/8525:1656,Performance,Load,LoadCluster,1656,"Add a new page source and sink that use S3 as the backing store. Davix; is used as the S3 interface. The implementation is nearly identical; to the DAOS backend and there is a lot of duplicated code. ```cpp; std::string s3Uri(""s3://$(S3_BUCKET).$(S3_HOST)"");; {; auto model = RNTupleModel::Create();; auto pt = model->MakeField<float>(""pt"");; auto vec = model->MakeField<std::vector<int>>(""vec"");; // create a new RNTuple named `my_ntuple`; // -- objects are written to /bucket/my_ntuple/; auto writer = RNTupleWriter::Recreate(std::move(model), ""my_ntuple"", s3Uri);; for (int i = 0; i < 100; i++) {; *pt = 42.0;; *vec = {1, 2, 3};; writer->Fill();; }; }. // opens the RNTuple at the path /bucket/my_ntuple/; auto ntuple = RNTupleReader::Open(""my_ntuple"", s3Uri);; ```; results in the following objects stored in the bucket:; ```shell; my_ntuple/0 # page 0, 1, ... ; my_ntuple/1; my_ntuple/18446744073709551613 # footer; my_ntuple/18446744073709551614 # header; my_ntuple/18446744073709551615 # anchor; my_ntuple/2; ```; Like the current DAOS backend, one object is allocated for every page,; plus three for the header, footer, and anchor. Performance will not be; very good yet as only a single request at a time is issued. Pages are issued keys sequentially from 0, like the DAOS backend. There; are three reserved keys:; * anchor: u64(-1); * header: u64(-2); * footer: u64(-3). S3 access is controlled using the (ROOT & Davix-compatible) envvars:; * S3_REGION; * S3_SECRET_KEY; * S3_ACCESS_KEY. Perhaps these should be changed to the official AWS envvars. Todo:; - [ ] re-add cluster caching functionality to `PopulatePageFromCluster`; - [ ] implement `LoadCluster`; - [ ] test mocks; - [ ] test with real RNTuples; - [ ] issue concurrent requests to S3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8525
https://github.com/root-project/root/pull/8525:1731,Performance,concurren,concurrent,1731,"Add a new page source and sink that use S3 as the backing store. Davix; is used as the S3 interface. The implementation is nearly identical; to the DAOS backend and there is a lot of duplicated code. ```cpp; std::string s3Uri(""s3://$(S3_BUCKET).$(S3_HOST)"");; {; auto model = RNTupleModel::Create();; auto pt = model->MakeField<float>(""pt"");; auto vec = model->MakeField<std::vector<int>>(""vec"");; // create a new RNTuple named `my_ntuple`; // -- objects are written to /bucket/my_ntuple/; auto writer = RNTupleWriter::Recreate(std::move(model), ""my_ntuple"", s3Uri);; for (int i = 0; i < 100; i++) {; *pt = 42.0;; *vec = {1, 2, 3};; writer->Fill();; }; }. // opens the RNTuple at the path /bucket/my_ntuple/; auto ntuple = RNTupleReader::Open(""my_ntuple"", s3Uri);; ```; results in the following objects stored in the bucket:; ```shell; my_ntuple/0 # page 0, 1, ... ; my_ntuple/1; my_ntuple/18446744073709551613 # footer; my_ntuple/18446744073709551614 # header; my_ntuple/18446744073709551615 # anchor; my_ntuple/2; ```; Like the current DAOS backend, one object is allocated for every page,; plus three for the header, footer, and anchor. Performance will not be; very good yet as only a single request at a time is issued. Pages are issued keys sequentially from 0, like the DAOS backend. There; are three reserved keys:; * anchor: u64(-1); * header: u64(-2); * footer: u64(-3). S3 access is controlled using the (ROOT & Davix-compatible) envvars:; * S3_REGION; * S3_SECRET_KEY; * S3_ACCESS_KEY. Perhaps these should be changed to the official AWS envvars. Todo:; - [ ] re-add cluster caching functionality to `PopulatePageFromCluster`; - [ ] implement `LoadCluster`; - [ ] test mocks; - [ ] test with real RNTuples; - [ ] issue concurrent requests to S3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8525
https://github.com/root-project/root/pull/8525:1384,Security,access,access,1384,"Add a new page source and sink that use S3 as the backing store. Davix; is used as the S3 interface. The implementation is nearly identical; to the DAOS backend and there is a lot of duplicated code. ```cpp; std::string s3Uri(""s3://$(S3_BUCKET).$(S3_HOST)"");; {; auto model = RNTupleModel::Create();; auto pt = model->MakeField<float>(""pt"");; auto vec = model->MakeField<std::vector<int>>(""vec"");; // create a new RNTuple named `my_ntuple`; // -- objects are written to /bucket/my_ntuple/; auto writer = RNTupleWriter::Recreate(std::move(model), ""my_ntuple"", s3Uri);; for (int i = 0; i < 100; i++) {; *pt = 42.0;; *vec = {1, 2, 3};; writer->Fill();; }; }. // opens the RNTuple at the path /bucket/my_ntuple/; auto ntuple = RNTupleReader::Open(""my_ntuple"", s3Uri);; ```; results in the following objects stored in the bucket:; ```shell; my_ntuple/0 # page 0, 1, ... ; my_ntuple/1; my_ntuple/18446744073709551613 # footer; my_ntuple/18446744073709551614 # header; my_ntuple/18446744073709551615 # anchor; my_ntuple/2; ```; Like the current DAOS backend, one object is allocated for every page,; plus three for the header, footer, and anchor. Performance will not be; very good yet as only a single request at a time is issued. Pages are issued keys sequentially from 0, like the DAOS backend. There; are three reserved keys:; * anchor: u64(-1); * header: u64(-2); * footer: u64(-3). S3 access is controlled using the (ROOT & Davix-compatible) envvars:; * S3_REGION; * S3_SECRET_KEY; * S3_ACCESS_KEY. Perhaps these should be changed to the official AWS envvars. Todo:; - [ ] re-add cluster caching functionality to `PopulatePageFromCluster`; - [ ] implement `LoadCluster`; - [ ] test mocks; - [ ] test with real RNTuples; - [ ] issue concurrent requests to S3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8525
https://github.com/root-project/root/pull/8525:1676,Testability,test,test,1676,"Add a new page source and sink that use S3 as the backing store. Davix; is used as the S3 interface. The implementation is nearly identical; to the DAOS backend and there is a lot of duplicated code. ```cpp; std::string s3Uri(""s3://$(S3_BUCKET).$(S3_HOST)"");; {; auto model = RNTupleModel::Create();; auto pt = model->MakeField<float>(""pt"");; auto vec = model->MakeField<std::vector<int>>(""vec"");; // create a new RNTuple named `my_ntuple`; // -- objects are written to /bucket/my_ntuple/; auto writer = RNTupleWriter::Recreate(std::move(model), ""my_ntuple"", s3Uri);; for (int i = 0; i < 100; i++) {; *pt = 42.0;; *vec = {1, 2, 3};; writer->Fill();; }; }. // opens the RNTuple at the path /bucket/my_ntuple/; auto ntuple = RNTupleReader::Open(""my_ntuple"", s3Uri);; ```; results in the following objects stored in the bucket:; ```shell; my_ntuple/0 # page 0, 1, ... ; my_ntuple/1; my_ntuple/18446744073709551613 # footer; my_ntuple/18446744073709551614 # header; my_ntuple/18446744073709551615 # anchor; my_ntuple/2; ```; Like the current DAOS backend, one object is allocated for every page,; plus three for the header, footer, and anchor. Performance will not be; very good yet as only a single request at a time is issued. Pages are issued keys sequentially from 0, like the DAOS backend. There; are three reserved keys:; * anchor: u64(-1); * header: u64(-2); * footer: u64(-3). S3 access is controlled using the (ROOT & Davix-compatible) envvars:; * S3_REGION; * S3_SECRET_KEY; * S3_ACCESS_KEY. Perhaps these should be changed to the official AWS envvars. Todo:; - [ ] re-add cluster caching functionality to `PopulatePageFromCluster`; - [ ] implement `LoadCluster`; - [ ] test mocks; - [ ] test with real RNTuples; - [ ] issue concurrent requests to S3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8525
https://github.com/root-project/root/pull/8525:1681,Testability,mock,mocks,1681,"Add a new page source and sink that use S3 as the backing store. Davix; is used as the S3 interface. The implementation is nearly identical; to the DAOS backend and there is a lot of duplicated code. ```cpp; std::string s3Uri(""s3://$(S3_BUCKET).$(S3_HOST)"");; {; auto model = RNTupleModel::Create();; auto pt = model->MakeField<float>(""pt"");; auto vec = model->MakeField<std::vector<int>>(""vec"");; // create a new RNTuple named `my_ntuple`; // -- objects are written to /bucket/my_ntuple/; auto writer = RNTupleWriter::Recreate(std::move(model), ""my_ntuple"", s3Uri);; for (int i = 0; i < 100; i++) {; *pt = 42.0;; *vec = {1, 2, 3};; writer->Fill();; }; }. // opens the RNTuple at the path /bucket/my_ntuple/; auto ntuple = RNTupleReader::Open(""my_ntuple"", s3Uri);; ```; results in the following objects stored in the bucket:; ```shell; my_ntuple/0 # page 0, 1, ... ; my_ntuple/1; my_ntuple/18446744073709551613 # footer; my_ntuple/18446744073709551614 # header; my_ntuple/18446744073709551615 # anchor; my_ntuple/2; ```; Like the current DAOS backend, one object is allocated for every page,; plus three for the header, footer, and anchor. Performance will not be; very good yet as only a single request at a time is issued. Pages are issued keys sequentially from 0, like the DAOS backend. There; are three reserved keys:; * anchor: u64(-1); * header: u64(-2); * footer: u64(-3). S3 access is controlled using the (ROOT & Davix-compatible) envvars:; * S3_REGION; * S3_SECRET_KEY; * S3_ACCESS_KEY. Perhaps these should be changed to the official AWS envvars. Todo:; - [ ] re-add cluster caching functionality to `PopulatePageFromCluster`; - [ ] implement `LoadCluster`; - [ ] test mocks; - [ ] test with real RNTuples; - [ ] issue concurrent requests to S3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8525
https://github.com/root-project/root/pull/8525:1694,Testability,test,test,1694,"Add a new page source and sink that use S3 as the backing store. Davix; is used as the S3 interface. The implementation is nearly identical; to the DAOS backend and there is a lot of duplicated code. ```cpp; std::string s3Uri(""s3://$(S3_BUCKET).$(S3_HOST)"");; {; auto model = RNTupleModel::Create();; auto pt = model->MakeField<float>(""pt"");; auto vec = model->MakeField<std::vector<int>>(""vec"");; // create a new RNTuple named `my_ntuple`; // -- objects are written to /bucket/my_ntuple/; auto writer = RNTupleWriter::Recreate(std::move(model), ""my_ntuple"", s3Uri);; for (int i = 0; i < 100; i++) {; *pt = 42.0;; *vec = {1, 2, 3};; writer->Fill();; }; }. // opens the RNTuple at the path /bucket/my_ntuple/; auto ntuple = RNTupleReader::Open(""my_ntuple"", s3Uri);; ```; results in the following objects stored in the bucket:; ```shell; my_ntuple/0 # page 0, 1, ... ; my_ntuple/1; my_ntuple/18446744073709551613 # footer; my_ntuple/18446744073709551614 # header; my_ntuple/18446744073709551615 # anchor; my_ntuple/2; ```; Like the current DAOS backend, one object is allocated for every page,; plus three for the header, footer, and anchor. Performance will not be; very good yet as only a single request at a time is issued. Pages are issued keys sequentially from 0, like the DAOS backend. There; are three reserved keys:; * anchor: u64(-1); * header: u64(-2); * footer: u64(-3). S3 access is controlled using the (ROOT & Davix-compatible) envvars:; * S3_REGION; * S3_SECRET_KEY; * S3_ACCESS_KEY. Perhaps these should be changed to the official AWS envvars. Todo:; - [ ] re-add cluster caching functionality to `PopulatePageFromCluster`; - [ ] implement `LoadCluster`; - [ ] test mocks; - [ ] test with real RNTuples; - [ ] issue concurrent requests to S3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8525
https://github.com/root-project/root/pull/8526:4,Testability,log,logic,4,"The logic to create the constraint sum for a given pdf is moved to the; `RooConstraintSum` class as a static member function. This makes the remaining code in RooAbsPdf easier to understand and also; allows for easy creation of the constraint sum outside of; `RooAbsPdf::createNL`, which is useful for debugging and manually creating likelihoods. And for reusing the; constraint term in other placed (intended for the new RooFit batch mode). This change also makes it easier to see which command args go into the constraint term.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8526
https://github.com/root-project/root/pull/8528:155,Energy Efficiency,reduce,reduces,155,"1. Specify several JSROOT locations when using with `require.js`; 2. Use fully qualified functions names to avoid conflicts; 3. Increase JSON compression, reduces json files",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8528
https://github.com/root-project/root/pull/8528:108,Safety,avoid,avoid,108,"1. Specify several JSROOT locations when using with `require.js`; 2. Use fully qualified functions names to avoid conflicts; 3. Increase JSON compression, reduces json files",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8528
https://github.com/root-project/root/pull/8529:480,Availability,avail,available,480,"Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`; 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc.; 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out.; I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:1130,Availability,avail,available,1130,"Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`; 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc.; 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out.; I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:12,Deployability,patch,patch,12,"Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`; 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc.; 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out.; I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:954,Deployability,patch,patch,954,"Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`; 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc.; 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out.; I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:1605,Modifiability,refactor,refactoring,1605,"Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`; 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc.; 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out.; I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:608,Security,validat,validate,608,"Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`; 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc.; 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out.; I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:228,Testability,test,test,228,"Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`; 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc.; 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out.; I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:375,Testability,log,logic,375,"Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`; 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc.; 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out.; I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8529:1638,Testability,log,logic,1638,"Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`; 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc.; 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out.; I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8529
https://github.com/root-project/root/pull/8530:540,Deployability,update,updated,540,# This Pull request:; Adds a GitHub Actions workflow that runs clang-format on pull requests. Could be extended with jobs to also run the clang-tidy checks that Travis currently runs. ## Changes or fixes:; - Adds a GH Actions workflow that runs on pull requests; - Modifies one line of the format_script.sh so that both Travis and GH Actions can run it.; - Modifies the .travis.yml to pass in the base ref SHA hash to the format_script.sh. ## Checklist:. - [x] tested changes locally (see https://github.com/roofit-dev/root/pull/23); - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8530
https://github.com/root-project/root/pull/8530:103,Modifiability,extend,extended,103,# This Pull request:; Adds a GitHub Actions workflow that runs clang-format on pull requests. Could be extended with jobs to also run the clang-tidy checks that Travis currently runs. ## Changes or fixes:; - Adds a GH Actions workflow that runs on pull requests; - Modifies one line of the format_script.sh so that both Travis and GH Actions can run it.; - Modifies the .travis.yml to pass in the base ref SHA hash to the format_script.sh. ## Checklist:. - [x] tested changes locally (see https://github.com/roofit-dev/root/pull/23); - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8530
https://github.com/root-project/root/pull/8530:410,Security,hash,hash,410,# This Pull request:; Adds a GitHub Actions workflow that runs clang-format on pull requests. Could be extended with jobs to also run the clang-tidy checks that Travis currently runs. ## Changes or fixes:; - Adds a GH Actions workflow that runs on pull requests; - Modifies one line of the format_script.sh so that both Travis and GH Actions can run it.; - Modifies the .travis.yml to pass in the base ref SHA hash to the format_script.sh. ## Checklist:. - [x] tested changes locally (see https://github.com/roofit-dev/root/pull/23); - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8530
https://github.com/root-project/root/pull/8530:461,Testability,test,tested,461,# This Pull request:; Adds a GitHub Actions workflow that runs clang-format on pull requests. Could be extended with jobs to also run the clang-tidy checks that Travis currently runs. ## Changes or fixes:; - Adds a GH Actions workflow that runs on pull requests; - Modifies one line of the format_script.sh so that both Travis and GH Actions can run it.; - Modifies the .travis.yml to pass in the base ref SHA hash to the format_script.sh. ## Checklist:. - [x] tested changes locally (see https://github.com/roofit-dev/root/pull/23); - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8530
https://github.com/root-project/root/issues/8532:18,Deployability,install,install,18,https://root.cern/install/build_from_source/#relevant-cmake-variables mentions `-DBUILD_SHARED_LIBS` but this isn't actually supported. We should remove the option. See https://github.com/root-project/root/issues/8448 for additional background,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8532
https://github.com/root-project/root/issues/8532:60,Modifiability,variab,variables,60,https://root.cern/install/build_from_source/#relevant-cmake-variables mentions `-DBUILD_SHARED_LIBS` but this isn't actually supported. We should remove the option. See https://github.com/root-project/root/issues/8448 for additional background,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8532
https://github.com/root-project/root/pull/8535:254,Deployability,update,updated,254,# This Pull request:. Adds a note that states that TTree:.GetEntry() and TTree::GetEvent() no longer have 0 as the default value for the first parameter. . ## Changes or fixes:. Just added a small note. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8535
https://github.com/root-project/root/pull/8535:224,Testability,test,tested,224,# This Pull request:. Adds a note that states that TTree:.GetEntry() and TTree::GetEvent() no longer have 0 as the default value for the first parameter. . ## Changes or fixes:. Just added a small note. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8535
https://github.com/root-project/root/pull/8536:204,Deployability,update,updated,204,# This Pull request:; - Pythonization of RooGlobalFunc Functions; - Implementing matplotlib Color/style conventions ; - Pythonization of Tutorial files. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8536
https://github.com/root-project/root/pull/8536:174,Testability,test,tested,174,# This Pull request:; - Pythonization of RooGlobalFunc Functions; - Implementing matplotlib Color/style conventions ; - Pythonization of Tutorial files. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8536
https://github.com/root-project/root/issues/8537:1116,Deployability,install,installed,1116,"- [x] Checked for duplicates. ### Describe the bug; Configuring with `-DCUDA=ON` leads to; ```; -- Detecting CUDA compile features; -- Detecting CUDA compile features - done; CMake Warning (dev) at /opt/cmake-3.19/share/cmake-3.19/Modules/FindPackageHandleStandardArgs.cmake:426 (message):; The package name passed to `find_package_handle_standard_args` (CUDNN) does; not match the name of the calling package (CuDNN). This can lead to; problems in calling code that expects `find_package` result variables; (e.g., `_FOUND`) to follow a certain pattern.; Call Stack (most recent call first):; cmake/modules/FindCuDNN.cmake:40 (find_package_handle_standard_args); cmake/modules/SearchInstalledSoftware.cmake:17 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1669 (find_package); CMakeLists.txt:219 (include); This warning is for project developers. Use -Wno-dev to suppress it. -- Found CUDNN: /usr/include ; -- Found cuDNN: v? (include: /usr/include, library: /usr/lib64/libcudnn.so); ```. ### Expected behavior; Don't warn. ### To Reproduce; `cmake -Dcuda=ON <src>`. ### Setup; - centos8; - cuda 11.3 installed via yum.; - Manos' master branch. It branched off from master on 22. Jun @ d026b4918a . ### Additional context; --",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8537
https://github.com/root-project/root/issues/8537:280,Integrability,message,message,280,"- [x] Checked for duplicates. ### Describe the bug; Configuring with `-DCUDA=ON` leads to; ```; -- Detecting CUDA compile features; -- Detecting CUDA compile features - done; CMake Warning (dev) at /opt/cmake-3.19/share/cmake-3.19/Modules/FindPackageHandleStandardArgs.cmake:426 (message):; The package name passed to `find_package_handle_standard_args` (CUDNN) does; not match the name of the calling package (CuDNN). This can lead to; problems in calling code that expects `find_package` result variables; (e.g., `_FOUND`) to follow a certain pattern.; Call Stack (most recent call first):; cmake/modules/FindCuDNN.cmake:40 (find_package_handle_standard_args); cmake/modules/SearchInstalledSoftware.cmake:17 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1669 (find_package); CMakeLists.txt:219 (include); This warning is for project developers. Use -Wno-dev to suppress it. -- Found CUDNN: /usr/include ; -- Found cuDNN: v? (include: /usr/include, library: /usr/lib64/libcudnn.so); ```. ### Expected behavior; Don't warn. ### To Reproduce; `cmake -Dcuda=ON <src>`. ### Setup; - centos8; - cuda 11.3 installed via yum.; - Manos' master branch. It branched off from master on 22. Jun @ d026b4918a . ### Additional context; --",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8537
https://github.com/root-project/root/issues/8537:52,Modifiability,Config,Configuring,52,"- [x] Checked for duplicates. ### Describe the bug; Configuring with `-DCUDA=ON` leads to; ```; -- Detecting CUDA compile features; -- Detecting CUDA compile features - done; CMake Warning (dev) at /opt/cmake-3.19/share/cmake-3.19/Modules/FindPackageHandleStandardArgs.cmake:426 (message):; The package name passed to `find_package_handle_standard_args` (CUDNN) does; not match the name of the calling package (CuDNN). This can lead to; problems in calling code that expects `find_package` result variables; (e.g., `_FOUND`) to follow a certain pattern.; Call Stack (most recent call first):; cmake/modules/FindCuDNN.cmake:40 (find_package_handle_standard_args); cmake/modules/SearchInstalledSoftware.cmake:17 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1669 (find_package); CMakeLists.txt:219 (include); This warning is for project developers. Use -Wno-dev to suppress it. -- Found CUDNN: /usr/include ; -- Found cuDNN: v? (include: /usr/include, library: /usr/lib64/libcudnn.so); ```. ### Expected behavior; Don't warn. ### To Reproduce; `cmake -Dcuda=ON <src>`. ### Setup; - centos8; - cuda 11.3 installed via yum.; - Manos' master branch. It branched off from master on 22. Jun @ d026b4918a . ### Additional context; --",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8537
https://github.com/root-project/root/issues/8537:497,Modifiability,variab,variables,497,"- [x] Checked for duplicates. ### Describe the bug; Configuring with `-DCUDA=ON` leads to; ```; -- Detecting CUDA compile features; -- Detecting CUDA compile features - done; CMake Warning (dev) at /opt/cmake-3.19/share/cmake-3.19/Modules/FindPackageHandleStandardArgs.cmake:426 (message):; The package name passed to `find_package_handle_standard_args` (CUDNN) does; not match the name of the calling package (CuDNN). This can lead to; problems in calling code that expects `find_package` result variables; (e.g., `_FOUND`) to follow a certain pattern.; Call Stack (most recent call first):; cmake/modules/FindCuDNN.cmake:40 (find_package_handle_standard_args); cmake/modules/SearchInstalledSoftware.cmake:17 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1669 (find_package); CMakeLists.txt:219 (include); This warning is for project developers. Use -Wno-dev to suppress it. -- Found CUDNN: /usr/include ; -- Found cuDNN: v? (include: /usr/include, library: /usr/lib64/libcudnn.so); ```. ### Expected behavior; Don't warn. ### To Reproduce; `cmake -Dcuda=ON <src>`. ### Setup; - centos8; - cuda 11.3 installed via yum.; - Manos' master branch. It branched off from master on 22. Jun @ d026b4918a . ### Additional context; --",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8537
https://github.com/root-project/root/issues/8537:99,Safety,Detect,Detecting,99,"- [x] Checked for duplicates. ### Describe the bug; Configuring with `-DCUDA=ON` leads to; ```; -- Detecting CUDA compile features; -- Detecting CUDA compile features - done; CMake Warning (dev) at /opt/cmake-3.19/share/cmake-3.19/Modules/FindPackageHandleStandardArgs.cmake:426 (message):; The package name passed to `find_package_handle_standard_args` (CUDNN) does; not match the name of the calling package (CuDNN). This can lead to; problems in calling code that expects `find_package` result variables; (e.g., `_FOUND`) to follow a certain pattern.; Call Stack (most recent call first):; cmake/modules/FindCuDNN.cmake:40 (find_package_handle_standard_args); cmake/modules/SearchInstalledSoftware.cmake:17 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1669 (find_package); CMakeLists.txt:219 (include); This warning is for project developers. Use -Wno-dev to suppress it. -- Found CUDNN: /usr/include ; -- Found cuDNN: v? (include: /usr/include, library: /usr/lib64/libcudnn.so); ```. ### Expected behavior; Don't warn. ### To Reproduce; `cmake -Dcuda=ON <src>`. ### Setup; - centos8; - cuda 11.3 installed via yum.; - Manos' master branch. It branched off from master on 22. Jun @ d026b4918a . ### Additional context; --",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8537
https://github.com/root-project/root/issues/8537:135,Safety,Detect,Detecting,135,"- [x] Checked for duplicates. ### Describe the bug; Configuring with `-DCUDA=ON` leads to; ```; -- Detecting CUDA compile features; -- Detecting CUDA compile features - done; CMake Warning (dev) at /opt/cmake-3.19/share/cmake-3.19/Modules/FindPackageHandleStandardArgs.cmake:426 (message):; The package name passed to `find_package_handle_standard_args` (CUDNN) does; not match the name of the calling package (CuDNN). This can lead to; problems in calling code that expects `find_package` result variables; (e.g., `_FOUND`) to follow a certain pattern.; Call Stack (most recent call first):; cmake/modules/FindCuDNN.cmake:40 (find_package_handle_standard_args); cmake/modules/SearchInstalledSoftware.cmake:17 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1669 (find_package); CMakeLists.txt:219 (include); This warning is for project developers. Use -Wno-dev to suppress it. -- Found CUDNN: /usr/include ; -- Found cuDNN: v? (include: /usr/include, library: /usr/lib64/libcudnn.so); ```. ### Expected behavior; Don't warn. ### To Reproduce; `cmake -Dcuda=ON <src>`. ### Setup; - centos8; - cuda 11.3 installed via yum.; - Manos' master branch. It branched off from master on 22. Jun @ d026b4918a . ### Additional context; --",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8537
https://github.com/root-project/root/pull/8538:10,Deployability,configurat,configuration,10,"Only then configuration of ""static"" paths is really used.; Small fix in utility.py, which only important with older JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8538
https://github.com/root-project/root/pull/8538:10,Modifiability,config,configuration,10,"Only then configuration of ""static"" paths is really used.; Small fix in utility.py, which only important with older JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8538
https://github.com/root-project/root/pull/8540:474,Deployability,update,updated,474,"This Pull request adds a missing period in a member-function description for better readability. Changes or fixes: cosmetic change in the description of the `TH1::LabelsInflate()`. Without this change there is no newline between ""Refill histogram"" and ""This function is called by..."" as shown in this screenshot:; ![image](https://user-images.githubusercontent.com/7541582/123423509-4dc71400-d5c8-11eb-8ea5-ca6ebad9dfe7.png). Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8540
https://github.com/root-project/root/pull/8540:444,Testability,test,tested,444,"This Pull request adds a missing period in a member-function description for better readability. Changes or fixes: cosmetic change in the description of the `TH1::LabelsInflate()`. Without this change there is no newline between ""Refill histogram"" and ""This function is called by..."" as shown in this screenshot:; ![image](https://user-images.githubusercontent.com/7541582/123423509-4dc71400-d5c8-11eb-8ea5-ca6ebad9dfe7.png). Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8540
https://github.com/root-project/root/pull/8541:231,Deployability,update,updated,231,It causes a clash of a macro defined in stdatomic with an identifier in boost.; Fixes https://github.com/root-project/root/issues/6454. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8541
https://github.com/root-project/root/pull/8541:201,Testability,test,tested,201,It causes a clash of a macro defined in stdatomic with an identifier in boost.; Fixes https://github.com/root-project/root/issues/6454. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8541
https://github.com/root-project/root/pull/8544:95,Performance,load,load,95,"1. Let use ""static"" folder correctly in `jupyter lab`; 2. If local JSROOT not found, correctly load remote version; 3. Let use produced notebooks in nbviewer; 4. Includes JSROOT bugfix",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8544
https://github.com/root-project/root/pull/8546:148,Deployability,update,updated,148,# This Pull request:. ## Changes or fixes:; Adds support for long64_t as histogram cell content. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8481,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8546
https://github.com/root-project/root/pull/8546:118,Testability,test,tested,118,# This Pull request:. ## Changes or fixes:; Adds support for long64_t as histogram cell content. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8481,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8546
https://github.com/root-project/root/issues/8547:251,Availability,Error,Error,251,"Following simple code crashes:. ```cpp; TClass *cl = gROOT->GetClass(""ROOT::Experimental::RBox"");; TDataMember *m = cl->GetDataMember(""fAttrBorder"");; printf(""offset = %d\n"", (int) m->GetOffsetCint());; ```. Method is crucial, while used in PyROOT. ; Error trace:; ```; #7 0x00007f261b3a1bc7 in cling::DeclCollector::HandleInterestingDecl(clang::DeclGroupRef) () from /home/linev/build/json/lib/libCling.so; #8 0x00007f261bb1b661 in clang::ASTReader::PassInterestingDeclsToConsumer() () from /home/linev/build/json/lib/libCling.so; #9 0x00007f261bb02876 in clang::ASTReader::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so; #10 0x00007f261bbf3038 in clang::MultiplexExternalSemaSource::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so; #11 0x00007f261d7d8e5a in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so; #12 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so; #13 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so; #14 0x00007f261d7c5ccf in clang::TagDecl::getMostRecentDeclImpl() () from /home/linev/build/json/lib/libCling.so; #15 0x00007f261d7d8da2 in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so; #16 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so; #17 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so; #18 0x00007f261bafa0cf in clang::ASTReader::FinishedDeserializing() [clone .part.0] () from /home/linev/build/json/lib/libCling.so; #19 0x00007f261bbf330d in clang:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8547
https://github.com/root-project/root/issues/8547:10,Usability,simpl,simple,10,"Following simple code crashes:. ```cpp; TClass *cl = gROOT->GetClass(""ROOT::Experimental::RBox"");; TDataMember *m = cl->GetDataMember(""fAttrBorder"");; printf(""offset = %d\n"", (int) m->GetOffsetCint());; ```. Method is crucial, while used in PyROOT. ; Error trace:; ```; #7 0x00007f261b3a1bc7 in cling::DeclCollector::HandleInterestingDecl(clang::DeclGroupRef) () from /home/linev/build/json/lib/libCling.so; #8 0x00007f261bb1b661 in clang::ASTReader::PassInterestingDeclsToConsumer() () from /home/linev/build/json/lib/libCling.so; #9 0x00007f261bb02876 in clang::ASTReader::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so; #10 0x00007f261bbf3038 in clang::MultiplexExternalSemaSource::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so; #11 0x00007f261d7d8e5a in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so; #12 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so; #13 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so; #14 0x00007f261d7c5ccf in clang::TagDecl::getMostRecentDeclImpl() () from /home/linev/build/json/lib/libCling.so; #15 0x00007f261d7d8da2 in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so; #16 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so; #17 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so; #18 0x00007f261bafa0cf in clang::ASTReader::FinishedDeserializing() [clone .part.0] () from /home/linev/build/json/lib/libCling.so; #19 0x00007f261bbf330d in clang:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8547
https://github.com/root-project/root/pull/8548:40,Modifiability,config,config,40,CUDNN was spelled CuDNN in ROOT's cmake config. This lead to warnings.; Fix #8537.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8548
https://github.com/root-project/root/issues/8549:834,Availability,avail,available,834,"This bug report is the result of the initial report at https://root-forum.cern.ch/t/crashes-when-reading-a-ttree-with-a-friend. Initially a tree t2 has a friend t1, and both are stored to a TFile, t2 with t1 stored as a friend. When opening both t2 and t1 from the file, then calling TFile::Close(), there is a crash. Most likely it is a matter of deletion order, where a tree already deleted is deleted again due to ""friendliness"". . Please find attached C++ and PyROOT scripts that reproduce the bug. The bug can be worked around by calling t2.RemoveFriend(t1) before calling TFile::Close(). Fixing this bug is important in a PyROOT workflow, where the branches values are accessible as attributes of the TTree. In such a case t2.GetEntry(x) also gets an entry in t1. If t1 is read from the file, both t1 and t2 branches values are available through their attributes - the most convenient way to access them in PyROOT. This behaviour does not exist in C++, thus I suspect in C++ hardly anyone opens both t1 and t2 and encounter this bug. Encountered on ROOT 6.24.00 compiled from sources on Fedora 34.; [test_friends.zip](https://github.com/root-project/root/files/6725477/test_friends.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8549
https://github.com/root-project/root/issues/8549:675,Security,access,accessible,675,"This bug report is the result of the initial report at https://root-forum.cern.ch/t/crashes-when-reading-a-ttree-with-a-friend. Initially a tree t2 has a friend t1, and both are stored to a TFile, t2 with t1 stored as a friend. When opening both t2 and t1 from the file, then calling TFile::Close(), there is a crash. Most likely it is a matter of deletion order, where a tree already deleted is deleted again due to ""friendliness"". . Please find attached C++ and PyROOT scripts that reproduce the bug. The bug can be worked around by calling t2.RemoveFriend(t1) before calling TFile::Close(). Fixing this bug is important in a PyROOT workflow, where the branches values are accessible as attributes of the TTree. In such a case t2.GetEntry(x) also gets an entry in t1. If t1 is read from the file, both t1 and t2 branches values are available through their attributes - the most convenient way to access them in PyROOT. This behaviour does not exist in C++, thus I suspect in C++ hardly anyone opens both t1 and t2 and encounter this bug. Encountered on ROOT 6.24.00 compiled from sources on Fedora 34.; [test_friends.zip](https://github.com/root-project/root/files/6725477/test_friends.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8549
https://github.com/root-project/root/issues/8549:898,Security,access,access,898,"This bug report is the result of the initial report at https://root-forum.cern.ch/t/crashes-when-reading-a-ttree-with-a-friend. Initially a tree t2 has a friend t1, and both are stored to a TFile, t2 with t1 stored as a friend. When opening both t2 and t1 from the file, then calling TFile::Close(), there is a crash. Most likely it is a matter of deletion order, where a tree already deleted is deleted again due to ""friendliness"". . Please find attached C++ and PyROOT scripts that reproduce the bug. The bug can be worked around by calling t2.RemoveFriend(t1) before calling TFile::Close(). Fixing this bug is important in a PyROOT workflow, where the branches values are accessible as attributes of the TTree. In such a case t2.GetEntry(x) also gets an entry in t1. If t1 is read from the file, both t1 and t2 branches values are available through their attributes - the most convenient way to access them in PyROOT. This behaviour does not exist in C++, thus I suspect in C++ hardly anyone opens both t1 and t2 and encounter this bug. Encountered on ROOT 6.24.00 compiled from sources on Fedora 34.; [test_friends.zip](https://github.com/root-project/root/files/6725477/test_friends.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8549
https://github.com/root-project/root/pull/8550:95,Deployability,release,released,95,"Sorry, I thought these were already merged into the 6.24 branch, but now that 6.24/02 has been released, I realized that they were not. None of these changes are essential to have, but it would be nice to have them as part of 6.24/04 in any case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8550
https://github.com/root-project/root/pull/8552:18,Modifiability,extend,extends,18,"This pull-request extends the support in `RClassField` to load/store arbitrary types by correctly handling inheritance. See below for the list of changes. ## Changes or fixes:; - An internal subfield named `:XXX` is created for each inherited `XXX` class; additional fields are recursively generated for data members/base classes.; - Reading/writing an object of the derived class includes both, direct and inherited data members. Non-persistent data members, i.e. `//!`, are not stored. This PR closes issue #7856.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8552
https://github.com/root-project/root/pull/8552:107,Modifiability,inherit,inheritance,107,"This pull-request extends the support in `RClassField` to load/store arbitrary types by correctly handling inheritance. See below for the list of changes. ## Changes or fixes:; - An internal subfield named `:XXX` is created for each inherited `XXX` class; additional fields are recursively generated for data members/base classes.; - Reading/writing an object of the derived class includes both, direct and inherited data members. Non-persistent data members, i.e. `//!`, are not stored. This PR closes issue #7856.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8552
https://github.com/root-project/root/pull/8552:233,Modifiability,inherit,inherited,233,"This pull-request extends the support in `RClassField` to load/store arbitrary types by correctly handling inheritance. See below for the list of changes. ## Changes or fixes:; - An internal subfield named `:XXX` is created for each inherited `XXX` class; additional fields are recursively generated for data members/base classes.; - Reading/writing an object of the derived class includes both, direct and inherited data members. Non-persistent data members, i.e. `//!`, are not stored. This PR closes issue #7856.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8552
https://github.com/root-project/root/pull/8552:407,Modifiability,inherit,inherited,407,"This pull-request extends the support in `RClassField` to load/store arbitrary types by correctly handling inheritance. See below for the list of changes. ## Changes or fixes:; - An internal subfield named `:XXX` is created for each inherited `XXX` class; additional fields are recursively generated for data members/base classes.; - Reading/writing an object of the derived class includes both, direct and inherited data members. Non-persistent data members, i.e. `//!`, are not stored. This PR closes issue #7856.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8552
https://github.com/root-project/root/pull/8552:58,Performance,load,load,58,"This pull-request extends the support in `RClassField` to load/store arbitrary types by correctly handling inheritance. See below for the list of changes. ## Changes or fixes:; - An internal subfield named `:XXX` is created for each inherited `XXX` class; additional fields are recursively generated for data members/base classes.; - Reading/writing an object of the derived class includes both, direct and inherited data members. Non-persistent data members, i.e. `//!`, are not stored. This PR closes issue #7856.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8552
https://github.com/root-project/root/pull/8553:162,Deployability,update,updated,162,# This Pull request:. ## Changes or fixes:; Fixes the incorrect parsing of the gcc version on Ubuntu 18 or 20. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8551,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8553
https://github.com/root-project/root/pull/8553:132,Testability,test,tested,132,# This Pull request:. ## Changes or fixes:; Fixes the incorrect parsing of the gcc version on Ubuntu 18 or 20. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8551,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8553
https://github.com/root-project/root/pull/8555:43,Availability,redundant,redundant,43,"Enable `-Wredundant-parens`, to warn about redundant parentheses in declarators whose parsing might not match the user intent, e.g.; ```; root [0] int i = 1;; root [1] (bool)i; (bool) true; root [2] bool(i); ROOT_prompt_1:1:5: redundant parentheses surrounding declarator [-Wredundant-parens]; bool(i); ^~~; (bool) false; ```. For more information see the discussion [here](http://github.com/root-project/issues/8304).; This PR fixes issue #8304.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8555
https://github.com/root-project/root/pull/8555:227,Availability,redundant,redundant,227,"Enable `-Wredundant-parens`, to warn about redundant parentheses in declarators whose parsing might not match the user intent, e.g.; ```; root [0] int i = 1;; root [1] (bool)i; (bool) true; root [2] bool(i); ROOT_prompt_1:1:5: redundant parentheses surrounding declarator [-Wredundant-parens]; bool(i); ^~~; (bool) false; ```. For more information see the discussion [here](http://github.com/root-project/issues/8304).; This PR fixes issue #8304.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8555
https://github.com/root-project/root/pull/8555:43,Safety,redund,redundant,43,"Enable `-Wredundant-parens`, to warn about redundant parentheses in declarators whose parsing might not match the user intent, e.g.; ```; root [0] int i = 1;; root [1] (bool)i; (bool) true; root [2] bool(i); ROOT_prompt_1:1:5: redundant parentheses surrounding declarator [-Wredundant-parens]; bool(i); ^~~; (bool) false; ```. For more information see the discussion [here](http://github.com/root-project/issues/8304).; This PR fixes issue #8304.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8555
https://github.com/root-project/root/pull/8555:227,Safety,redund,redundant,227,"Enable `-Wredundant-parens`, to warn about redundant parentheses in declarators whose parsing might not match the user intent, e.g.; ```; root [0] int i = 1;; root [1] (bool)i; (bool) true; root [2] bool(i); ROOT_prompt_1:1:5: redundant parentheses surrounding declarator [-Wredundant-parens]; bool(i); ^~~; (bool) false; ```. For more information see the discussion [here](http://github.com/root-project/issues/8304).; This PR fixes issue #8304.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8555
https://github.com/root-project/root/pull/8556:479,Deployability,update,updated,479,"# This Pull request:; Fixes creation of mixtures made of isomere elements having the same A and Z. The previous behavior was to compact such elements into a single one, which is wrong in the case of such mixtures. Printing mixture defined by elements calls now the Print method of the elements. ## Changes or fixes:; Fixes issue reported in the forum: https://root-forum.cern.ch/t/tgeomixture-cannot-distinguish-isomers/45451 . ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8556
https://github.com/root-project/root/pull/8556:449,Testability,test,tested,449,"# This Pull request:; Fixes creation of mixtures made of isomere elements having the same A and Z. The previous behavior was to compact such elements into a single one, which is wrong in the case of such mixtures. Printing mixture defined by elements calls now the Print method of the elements. ## Changes or fixes:; Fixes issue reported in the forum: https://root-forum.cern.ch/t/tgeomixture-cannot-distinguish-isomers/45451 . ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8556
https://github.com/root-project/root/pull/8557:158,Deployability,update,updated,158,# This Pull request:. ## Changes or fixes:; Allows associating a TThread run with a specific CPU on Linux. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8557
https://github.com/root-project/root/pull/8557:128,Testability,test,tested,128,# This Pull request:. ## Changes or fixes:; Allows associating a TThread run with a specific CPU on Linux. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8557
https://github.com/root-project/root/pull/8558:420,Deployability,update,updated,420,"# This Pull request:. Backstory:. During my internship in January 2021, I had to convert between Sphericla and Cartesian Coordinates a lot and while this is possible in GenVector, it is not in TVector3. This should add that functionality. Furthermore I also added a Sign() function to mathcore as I couldnt find this elsewhere in ROOT. ## Changes or fixes:. See above. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8558
https://github.com/root-project/root/pull/8558:390,Testability,test,tested,390,"# This Pull request:. Backstory:. During my internship in January 2021, I had to convert between Sphericla and Cartesian Coordinates a lot and while this is possible in GenVector, it is not in TVector3. This should add that functionality. Furthermore I also added a Sign() function to mathcore as I couldnt find this elsewhere in ROOT. ## Changes or fixes:. See above. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8558
https://github.com/root-project/root/pull/8561:221,Deployability,update,updated,221,"# This Pull request:. ## Changes or fixes:; Let user stop internal timer, for performance reasons, when there is a priori knowledge that there is no remote check needed. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8269",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8561
https://github.com/root-project/root/pull/8561:78,Performance,perform,performance,78,"# This Pull request:. ## Changes or fixes:; Let user stop internal timer, for performance reasons, when there is a priori knowledge that there is no remote check needed. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8269",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8561
https://github.com/root-project/root/pull/8561:191,Testability,test,tested,191,"# This Pull request:. ## Changes or fixes:; Let user stop internal timer, for performance reasons, when there is a priori knowledge that there is no remote check needed. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8269",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8561
https://github.com/root-project/root/pull/8562:331,Deployability,update,updated,331,# This Pull request:. ## Changes or fixes:; Makes the list of timers thread-safe.; It attempts to fix some of the issues reported in https://github.com/root-project/root/issues/8365. This is a follow-up from: https://github.com/root-project/root/pull/8379#issuecomment-857765612. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8562
https://github.com/root-project/root/pull/8562:76,Safety,safe,safe,76,# This Pull request:. ## Changes or fixes:; Makes the list of timers thread-safe.; It attempts to fix some of the issues reported in https://github.com/root-project/root/issues/8365. This is a follow-up from: https://github.com/root-project/root/pull/8379#issuecomment-857765612. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8562
https://github.com/root-project/root/pull/8562:301,Testability,test,tested,301,# This Pull request:. ## Changes or fixes:; Makes the list of timers thread-safe.; It attempts to fix some of the issues reported in https://github.com/root-project/root/issues/8365. This is a follow-up from: https://github.com/root-project/root/pull/8379#issuecomment-857765612. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8562
https://github.com/root-project/root/pull/8563:17,Availability,avail,available,17,"cpu_set_t is not available on MacOS, only linux. # This Pull request:. ## Changes or fixes:; compilation error introduced in https://github.com/root-project/root/pull/8557",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8563
https://github.com/root-project/root/pull/8563:105,Availability,error,error,105,"cpu_set_t is not available on MacOS, only linux. # This Pull request:. ## Changes or fixes:; compilation error introduced in https://github.com/root-project/root/pull/8557",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8563
https://github.com/root-project/root/pull/8564:19,Availability,failure,failures,19,"It causes randomic failures in our nightlies, and being in legacy; code we are happy with disabling the tutorial altogether.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8564
https://github.com/root-project/root/pull/8565:1028,Deployability,patch,patch,1028,"When performing multi-thread reads of ROOT files, we need to pick the number; of TBB tasks among which we will divide the dataset. Our heuristic is ""try to produce around `T = N/ntrees` tasks per tree per; worker thread"": we don't know the number of clusters in each tree before; we open the files, so we don't know the total number of clusters upfront.; Instead we set a ""desired value"" of T tasks per tree and per thread, and; then when each thread opens a file it tries to make T tasks out of it (if; the file turns out to be too small, it might end up producing _less_ tasks than; desired. If we are processing `M > N` small files, we might end up producing; _more_ tasks per worker than N). N is a free parameter, and it represents the desired total number of; tasks per worker. If N is too low, parallelism will be too coarse-grained; and we might get imbalance/tails with bad parallelization.; The higher N is, the more CPU time we spend in task setup/teardown. Empirically, I believe we have set N too high (before this patch we set; it to 24). We often see runtime improvements in benchmarks by setting it; to a lower value, e.g. 10.; Again from experience, N == 10 should be a high-enough value to avoid; load imbalance between threads while it significantly reduces the amount; of tasks spawned (and the overhead that comes with it).; Therefore this patch sets N to 10. More discussion:; - https://mattermost.web.cern.ch/root/pl/8ay6my4pwbru7kzqs97f8xcdre; - https://docs.oneapi.com/versions/latest/onetbb/tbb_userguide/Task-Based_Programming.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8565
https://github.com/root-project/root/pull/8565:1361,Deployability,patch,patch,1361,"When performing multi-thread reads of ROOT files, we need to pick the number; of TBB tasks among which we will divide the dataset. Our heuristic is ""try to produce around `T = N/ntrees` tasks per tree per; worker thread"": we don't know the number of clusters in each tree before; we open the files, so we don't know the total number of clusters upfront.; Instead we set a ""desired value"" of T tasks per tree and per thread, and; then when each thread opens a file it tries to make T tasks out of it (if; the file turns out to be too small, it might end up producing _less_ tasks than; desired. If we are processing `M > N` small files, we might end up producing; _more_ tasks per worker than N). N is a free parameter, and it represents the desired total number of; tasks per worker. If N is too low, parallelism will be too coarse-grained; and we might get imbalance/tails with bad parallelization.; The higher N is, the more CPU time we spend in task setup/teardown. Empirically, I believe we have set N too high (before this patch we set; it to 24). We often see runtime improvements in benchmarks by setting it; to a lower value, e.g. 10.; Again from experience, N == 10 should be a high-enough value to avoid; load imbalance between threads while it significantly reduces the amount; of tasks spawned (and the overhead that comes with it).; Therefore this patch sets N to 10. More discussion:; - https://mattermost.web.cern.ch/root/pl/8ay6my4pwbru7kzqs97f8xcdre; - https://docs.oneapi.com/versions/latest/onetbb/tbb_userguide/Task-Based_Programming.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8565
https://github.com/root-project/root/pull/8565:1269,Energy Efficiency,reduce,reduces,1269,"When performing multi-thread reads of ROOT files, we need to pick the number; of TBB tasks among which we will divide the dataset. Our heuristic is ""try to produce around `T = N/ntrees` tasks per tree per; worker thread"": we don't know the number of clusters in each tree before; we open the files, so we don't know the total number of clusters upfront.; Instead we set a ""desired value"" of T tasks per tree and per thread, and; then when each thread opens a file it tries to make T tasks out of it (if; the file turns out to be too small, it might end up producing _less_ tasks than; desired. If we are processing `M > N` small files, we might end up producing; _more_ tasks per worker than N). N is a free parameter, and it represents the desired total number of; tasks per worker. If N is too low, parallelism will be too coarse-grained; and we might get imbalance/tails with bad parallelization.; The higher N is, the more CPU time we spend in task setup/teardown. Empirically, I believe we have set N too high (before this patch we set; it to 24). We often see runtime improvements in benchmarks by setting it; to a lower value, e.g. 10.; Again from experience, N == 10 should be a high-enough value to avoid; load imbalance between threads while it significantly reduces the amount; of tasks spawned (and the overhead that comes with it).; Therefore this patch sets N to 10. More discussion:; - https://mattermost.web.cern.ch/root/pl/8ay6my4pwbru7kzqs97f8xcdre; - https://docs.oneapi.com/versions/latest/onetbb/tbb_userguide/Task-Based_Programming.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8565
https://github.com/root-project/root/pull/8565:5,Performance,perform,performing,5,"When performing multi-thread reads of ROOT files, we need to pick the number; of TBB tasks among which we will divide the dataset. Our heuristic is ""try to produce around `T = N/ntrees` tasks per tree per; worker thread"": we don't know the number of clusters in each tree before; we open the files, so we don't know the total number of clusters upfront.; Instead we set a ""desired value"" of T tasks per tree and per thread, and; then when each thread opens a file it tries to make T tasks out of it (if; the file turns out to be too small, it might end up producing _less_ tasks than; desired. If we are processing `M > N` small files, we might end up producing; _more_ tasks per worker than N). N is a free parameter, and it represents the desired total number of; tasks per worker. If N is too low, parallelism will be too coarse-grained; and we might get imbalance/tails with bad parallelization.; The higher N is, the more CPU time we spend in task setup/teardown. Empirically, I believe we have set N too high (before this patch we set; it to 24). We often see runtime improvements in benchmarks by setting it; to a lower value, e.g. 10.; Again from experience, N == 10 should be a high-enough value to avoid; load imbalance between threads while it significantly reduces the amount; of tasks spawned (and the overhead that comes with it).; Therefore this patch sets N to 10. More discussion:; - https://mattermost.web.cern.ch/root/pl/8ay6my4pwbru7kzqs97f8xcdre; - https://docs.oneapi.com/versions/latest/onetbb/tbb_userguide/Task-Based_Programming.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8565
https://github.com/root-project/root/pull/8565:16,Performance,multi-thread,multi-thread,16,"When performing multi-thread reads of ROOT files, we need to pick the number; of TBB tasks among which we will divide the dataset. Our heuristic is ""try to produce around `T = N/ntrees` tasks per tree per; worker thread"": we don't know the number of clusters in each tree before; we open the files, so we don't know the total number of clusters upfront.; Instead we set a ""desired value"" of T tasks per tree and per thread, and; then when each thread opens a file it tries to make T tasks out of it (if; the file turns out to be too small, it might end up producing _less_ tasks than; desired. If we are processing `M > N` small files, we might end up producing; _more_ tasks per worker than N). N is a free parameter, and it represents the desired total number of; tasks per worker. If N is too low, parallelism will be too coarse-grained; and we might get imbalance/tails with bad parallelization.; The higher N is, the more CPU time we spend in task setup/teardown. Empirically, I believe we have set N too high (before this patch we set; it to 24). We often see runtime improvements in benchmarks by setting it; to a lower value, e.g. 10.; Again from experience, N == 10 should be a high-enough value to avoid; load imbalance between threads while it significantly reduces the amount; of tasks spawned (and the overhead that comes with it).; Therefore this patch sets N to 10. More discussion:; - https://mattermost.web.cern.ch/root/pl/8ay6my4pwbru7kzqs97f8xcdre; - https://docs.oneapi.com/versions/latest/onetbb/tbb_userguide/Task-Based_Programming.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8565
https://github.com/root-project/root/pull/8565:1215,Performance,load,load,1215,"When performing multi-thread reads of ROOT files, we need to pick the number; of TBB tasks among which we will divide the dataset. Our heuristic is ""try to produce around `T = N/ntrees` tasks per tree per; worker thread"": we don't know the number of clusters in each tree before; we open the files, so we don't know the total number of clusters upfront.; Instead we set a ""desired value"" of T tasks per tree and per thread, and; then when each thread opens a file it tries to make T tasks out of it (if; the file turns out to be too small, it might end up producing _less_ tasks than; desired. If we are processing `M > N` small files, we might end up producing; _more_ tasks per worker than N). N is a free parameter, and it represents the desired total number of; tasks per worker. If N is too low, parallelism will be too coarse-grained; and we might get imbalance/tails with bad parallelization.; The higher N is, the more CPU time we spend in task setup/teardown. Empirically, I believe we have set N too high (before this patch we set; it to 24). We often see runtime improvements in benchmarks by setting it; to a lower value, e.g. 10.; Again from experience, N == 10 should be a high-enough value to avoid; load imbalance between threads while it significantly reduces the amount; of tasks spawned (and the overhead that comes with it).; Therefore this patch sets N to 10. More discussion:; - https://mattermost.web.cern.ch/root/pl/8ay6my4pwbru7kzqs97f8xcdre; - https://docs.oneapi.com/versions/latest/onetbb/tbb_userguide/Task-Based_Programming.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8565
https://github.com/root-project/root/pull/8565:1208,Safety,avoid,avoid,1208,"When performing multi-thread reads of ROOT files, we need to pick the number; of TBB tasks among which we will divide the dataset. Our heuristic is ""try to produce around `T = N/ntrees` tasks per tree per; worker thread"": we don't know the number of clusters in each tree before; we open the files, so we don't know the total number of clusters upfront.; Instead we set a ""desired value"" of T tasks per tree and per thread, and; then when each thread opens a file it tries to make T tasks out of it (if; the file turns out to be too small, it might end up producing _less_ tasks than; desired. If we are processing `M > N` small files, we might end up producing; _more_ tasks per worker than N). N is a free parameter, and it represents the desired total number of; tasks per worker. If N is too low, parallelism will be too coarse-grained; and we might get imbalance/tails with bad parallelization.; The higher N is, the more CPU time we spend in task setup/teardown. Empirically, I believe we have set N too high (before this patch we set; it to 24). We often see runtime improvements in benchmarks by setting it; to a lower value, e.g. 10.; Again from experience, N == 10 should be a high-enough value to avoid; load imbalance between threads while it significantly reduces the amount; of tasks spawned (and the overhead that comes with it).; Therefore this patch sets N to 10. More discussion:; - https://mattermost.web.cern.ch/root/pl/8ay6my4pwbru7kzqs97f8xcdre; - https://docs.oneapi.com/versions/latest/onetbb/tbb_userguide/Task-Based_Programming.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8565
https://github.com/root-project/root/pull/8565:1090,Testability,benchmark,benchmarks,1090,"When performing multi-thread reads of ROOT files, we need to pick the number; of TBB tasks among which we will divide the dataset. Our heuristic is ""try to produce around `T = N/ntrees` tasks per tree per; worker thread"": we don't know the number of clusters in each tree before; we open the files, so we don't know the total number of clusters upfront.; Instead we set a ""desired value"" of T tasks per tree and per thread, and; then when each thread opens a file it tries to make T tasks out of it (if; the file turns out to be too small, it might end up producing _less_ tasks than; desired. If we are processing `M > N` small files, we might end up producing; _more_ tasks per worker than N). N is a free parameter, and it represents the desired total number of; tasks per worker. If N is too low, parallelism will be too coarse-grained; and we might get imbalance/tails with bad parallelization.; The higher N is, the more CPU time we spend in task setup/teardown. Empirically, I believe we have set N too high (before this patch we set; it to 24). We often see runtime improvements in benchmarks by setting it; to a lower value, e.g. 10.; Again from experience, N == 10 should be a high-enough value to avoid; load imbalance between threads while it significantly reduces the amount; of tasks spawned (and the overhead that comes with it).; Therefore this patch sets N to 10. More discussion:; - https://mattermost.web.cern.ch/root/pl/8ay6my4pwbru7kzqs97f8xcdre; - https://docs.oneapi.com/versions/latest/onetbb/tbb_userguide/Task-Based_Programming.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8565
https://github.com/root-project/root/pull/8566:887,Availability,error,error,887,"In most drawables and aggregations provide public access to the attributes.; One can directly assign value to such member like:; ```cpp; line->line.style = 12;; text->text.font.face = ""Arial"";; ```; And one always can check if attribute `Has()` value or `Clear()` it like:; ```cpp; if (!line->line.style.Has()) // do somthing;; text->text.font.face.Clear();; ```; Introduce several new aggregations like `RAttrAxisTitle`, `RAttrAxisLabels`, `RAttrAxisTicks`, `RAttrFont` to let provide syntax:; ```; frame->x.labels.font.size = 12;; frame->y.ticks.color = RColor::kRed;; ```; Sometime assign operator defined in aggregation to let assign value to whole aggregation like:; ```; frame->x.labels.font = 11;; ```; This will assign ROOT font type 11 to `RAttrFont` which is `face = ""Courier New""; style = ""oblique""; weight = ""bold"";`. Adjust all tests and tutorials. Waiting for fixing cling error https://github.com/root-project/root/issues/8547 - all python tests should fail now",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8566
https://github.com/root-project/root/pull/8566:50,Security,access,access,50,"In most drawables and aggregations provide public access to the attributes.; One can directly assign value to such member like:; ```cpp; line->line.style = 12;; text->text.font.face = ""Arial"";; ```; And one always can check if attribute `Has()` value or `Clear()` it like:; ```cpp; if (!line->line.style.Has()) // do somthing;; text->text.font.face.Clear();; ```; Introduce several new aggregations like `RAttrAxisTitle`, `RAttrAxisLabels`, `RAttrAxisTicks`, `RAttrFont` to let provide syntax:; ```; frame->x.labels.font.size = 12;; frame->y.ticks.color = RColor::kRed;; ```; Sometime assign operator defined in aggregation to let assign value to whole aggregation like:; ```; frame->x.labels.font = 11;; ```; This will assign ROOT font type 11 to `RAttrFont` which is `face = ""Courier New""; style = ""oblique""; weight = ""bold"";`. Adjust all tests and tutorials. Waiting for fixing cling error https://github.com/root-project/root/issues/8547 - all python tests should fail now",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8566
https://github.com/root-project/root/pull/8566:841,Testability,test,tests,841,"In most drawables and aggregations provide public access to the attributes.; One can directly assign value to such member like:; ```cpp; line->line.style = 12;; text->text.font.face = ""Arial"";; ```; And one always can check if attribute `Has()` value or `Clear()` it like:; ```cpp; if (!line->line.style.Has()) // do somthing;; text->text.font.face.Clear();; ```; Introduce several new aggregations like `RAttrAxisTitle`, `RAttrAxisLabels`, `RAttrAxisTicks`, `RAttrFont` to let provide syntax:; ```; frame->x.labels.font.size = 12;; frame->y.ticks.color = RColor::kRed;; ```; Sometime assign operator defined in aggregation to let assign value to whole aggregation like:; ```; frame->x.labels.font = 11;; ```; This will assign ROOT font type 11 to `RAttrFont` which is `face = ""Courier New""; style = ""oblique""; weight = ""bold"";`. Adjust all tests and tutorials. Waiting for fixing cling error https://github.com/root-project/root/issues/8547 - all python tests should fail now",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8566
https://github.com/root-project/root/pull/8566:955,Testability,test,tests,955,"In most drawables and aggregations provide public access to the attributes.; One can directly assign value to such member like:; ```cpp; line->line.style = 12;; text->text.font.face = ""Arial"";; ```; And one always can check if attribute `Has()` value or `Clear()` it like:; ```cpp; if (!line->line.style.Has()) // do somthing;; text->text.font.face.Clear();; ```; Introduce several new aggregations like `RAttrAxisTitle`, `RAttrAxisLabels`, `RAttrAxisTicks`, `RAttrFont` to let provide syntax:; ```; frame->x.labels.font.size = 12;; frame->y.ticks.color = RColor::kRed;; ```; Sometime assign operator defined in aggregation to let assign value to whole aggregation like:; ```; frame->x.labels.font = 11;; ```; This will assign ROOT font type 11 to `RAttrFont` which is `face = ""Courier New""; style = ""oblique""; weight = ""bold"";`. Adjust all tests and tutorials. Waiting for fixing cling error https://github.com/root-project/root/issues/8547 - all python tests should fail now",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8566
https://github.com/root-project/root/pull/8566:255,Usability,Clear,Clear,255,"In most drawables and aggregations provide public access to the attributes.; One can directly assign value to such member like:; ```cpp; line->line.style = 12;; text->text.font.face = ""Arial"";; ```; And one always can check if attribute `Has()` value or `Clear()` it like:; ```cpp; if (!line->line.style.Has()) // do somthing;; text->text.font.face.Clear();; ```; Introduce several new aggregations like `RAttrAxisTitle`, `RAttrAxisLabels`, `RAttrAxisTicks`, `RAttrFont` to let provide syntax:; ```; frame->x.labels.font.size = 12;; frame->y.ticks.color = RColor::kRed;; ```; Sometime assign operator defined in aggregation to let assign value to whole aggregation like:; ```; frame->x.labels.font = 11;; ```; This will assign ROOT font type 11 to `RAttrFont` which is `face = ""Courier New""; style = ""oblique""; weight = ""bold"";`. Adjust all tests and tutorials. Waiting for fixing cling error https://github.com/root-project/root/issues/8547 - all python tests should fail now",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8566
https://github.com/root-project/root/pull/8566:349,Usability,Clear,Clear,349,"In most drawables and aggregations provide public access to the attributes.; One can directly assign value to such member like:; ```cpp; line->line.style = 12;; text->text.font.face = ""Arial"";; ```; And one always can check if attribute `Has()` value or `Clear()` it like:; ```cpp; if (!line->line.style.Has()) // do somthing;; text->text.font.face.Clear();; ```; Introduce several new aggregations like `RAttrAxisTitle`, `RAttrAxisLabels`, `RAttrAxisTicks`, `RAttrFont` to let provide syntax:; ```; frame->x.labels.font.size = 12;; frame->y.ticks.color = RColor::kRed;; ```; Sometime assign operator defined in aggregation to let assign value to whole aggregation like:; ```; frame->x.labels.font = 11;; ```; This will assign ROOT font type 11 to `RAttrFont` which is `face = ""Courier New""; style = ""oblique""; weight = ""bold"";`. Adjust all tests and tutorials. Waiting for fixing cling error https://github.com/root-project/root/issues/8547 - all python tests should fail now",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8566
https://github.com/root-project/root/pull/8567:438,Deployability,update,updated,438,"This PR introduces the NumericalDerivatorMinuit2 class, based on original code by @lmoneta (https://github.com/lmoneta/root/blob/lvmini/math/mathcore/src/NumericalDerivator.cxx). It replicates the Minuit2 numerical derivator calculations, but in a a stand alone class. This allows it to be used from RooFit to manually calculate gradients outside of Minuit2, e.g. in a parallelized way. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8567
https://github.com/root-project/root/pull/8567:408,Testability,test,tested,408,"This PR introduces the NumericalDerivatorMinuit2 class, based on original code by @lmoneta (https://github.com/lmoneta/root/blob/lvmini/math/mathcore/src/NumericalDerivator.cxx). It replicates the Minuit2 numerical derivator calculations, but in a a stand alone class. This allows it to be used from RooFit to manually calculate gradients outside of Minuit2, e.g. in a parallelized way. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8567
https://github.com/root-project/root/pull/8569:618,Deployability,update,updated,618,"This PR refactors RooMinimizerFcn into two separate classes: RooAbsMinimizerFcn and a new RooMinimizerFcn derived from that. RooAbsMinimizerFcn contains all common synchronization ""logistics"" necessary between RooFit and Minuit function parameters. The implementations of this abstract base class are then expected to supply the actual function evaluation parts. This allows us to later implement classes that calculate the gradient outside of Minuit. We will provide both a serial implementation of this and later on a parallel one using the MultiProcess framework. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8569
https://github.com/root-project/root/pull/8569:164,Integrability,synchroniz,synchronization,164,"This PR refactors RooMinimizerFcn into two separate classes: RooAbsMinimizerFcn and a new RooMinimizerFcn derived from that. RooAbsMinimizerFcn contains all common synchronization ""logistics"" necessary between RooFit and Minuit function parameters. The implementations of this abstract base class are then expected to supply the actual function evaluation parts. This allows us to later implement classes that calculate the gradient outside of Minuit. We will provide both a serial implementation of this and later on a parallel one using the MultiProcess framework. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8569
https://github.com/root-project/root/pull/8569:8,Modifiability,refactor,refactors,8,"This PR refactors RooMinimizerFcn into two separate classes: RooAbsMinimizerFcn and a new RooMinimizerFcn derived from that. RooAbsMinimizerFcn contains all common synchronization ""logistics"" necessary between RooFit and Minuit function parameters. The implementations of this abstract base class are then expected to supply the actual function evaluation parts. This allows us to later implement classes that calculate the gradient outside of Minuit. We will provide both a serial implementation of this and later on a parallel one using the MultiProcess framework. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8569
https://github.com/root-project/root/pull/8569:181,Testability,log,logistics,181,"This PR refactors RooMinimizerFcn into two separate classes: RooAbsMinimizerFcn and a new RooMinimizerFcn derived from that. RooAbsMinimizerFcn contains all common synchronization ""logistics"" necessary between RooFit and Minuit function parameters. The implementations of this abstract base class are then expected to supply the actual function evaluation parts. This allows us to later implement classes that calculate the gradient outside of Minuit. We will provide both a serial implementation of this and later on a parallel one using the MultiProcess framework. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8569
https://github.com/root-project/root/pull/8569:588,Testability,test,tested,588,"This PR refactors RooMinimizerFcn into two separate classes: RooAbsMinimizerFcn and a new RooMinimizerFcn derived from that. RooAbsMinimizerFcn contains all common synchronization ""logistics"" necessary between RooFit and Minuit function parameters. The implementations of this abstract base class are then expected to supply the actual function evaluation parts. This allows us to later implement classes that calculate the gradient outside of Minuit. We will provide both a serial implementation of this and later on a parallel one using the MultiProcess framework. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8569
https://github.com/root-project/root/pull/8571:168,Availability,Error,Error,168,# This Pull request:; In EveManager::ImportSceneChangeJson remove REveElements objects which indices have been marked as deleted on the server. . ## Changes or fixes:; Error messages in delete of server elements on importSceneChangeJson. ## Checklist:. - [x ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8571
https://github.com/root-project/root/pull/8571:290,Deployability,update,updated,290,# This Pull request:; In EveManager::ImportSceneChangeJson remove REveElements objects which indices have been marked as deleted on the server. . ## Changes or fixes:; Error messages in delete of server elements on importSceneChangeJson. ## Checklist:. - [x ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8571
https://github.com/root-project/root/pull/8571:174,Integrability,message,messages,174,# This Pull request:; In EveManager::ImportSceneChangeJson remove REveElements objects which indices have been marked as deleted on the server. . ## Changes or fixes:; Error messages in delete of server elements on importSceneChangeJson. ## Checklist:. - [x ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8571
https://github.com/root-project/root/pull/8571:260,Testability,test,tested,260,# This Pull request:; In EveManager::ImportSceneChangeJson remove REveElements objects which indices have been marked as deleted on the server. . ## Changes or fixes:; Error messages in delete of server elements on importSceneChangeJson. ## Checklist:. - [x ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8571
https://github.com/root-project/root/pull/8572:190,Deployability,update,updated,190,# This Pull request:. ## Changes or fixes:; All (but one) of the data races described in https://github.com/root-project/root/issues/8365. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8572
https://github.com/root-project/root/pull/8572:160,Testability,test,tested,160,# This Pull request:. ## Changes or fixes:; All (but one) of the data races described in https://github.com/root-project/root/issues/8365. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8572
https://github.com/root-project/root/pull/8574:7,Safety,avoid,avoid,7,Should avoid problems on 32bit debian,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8574
https://github.com/root-project/root/pull/8576:23,Deployability,release,releases,23,"This allows our binary releases to be used without needing to `source thisroot.sh` by default on Linux as well as on macOS. The only setup required will be to `export PYTHONPATH=$(root-config --libdir)` with the `root-config` from the binary release, so that python knows where to get ROOT when the user tries to `import ROOT`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8576
https://github.com/root-project/root/pull/8576:242,Deployability,release,release,242,"This allows our binary releases to be used without needing to `source thisroot.sh` by default on Linux as well as on macOS. The only setup required will be to `export PYTHONPATH=$(root-config --libdir)` with the `root-config` from the binary release, so that python knows where to get ROOT when the user tries to `import ROOT`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8576
https://github.com/root-project/root/pull/8576:185,Modifiability,config,config,185,"This allows our binary releases to be used without needing to `source thisroot.sh` by default on Linux as well as on macOS. The only setup required will be to `export PYTHONPATH=$(root-config --libdir)` with the `root-config` from the binary release, so that python knows where to get ROOT when the user tries to `import ROOT`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8576
https://github.com/root-project/root/pull/8576:218,Modifiability,config,config,218,"This allows our binary releases to be used without needing to `source thisroot.sh` by default on Linux as well as on macOS. The only setup required will be to `export PYTHONPATH=$(root-config --libdir)` with the `root-config` from the binary release, so that python knows where to get ROOT when the user tries to `import ROOT`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8576
https://github.com/root-project/root/issues/8578:12234,Availability,down,download,12234,"ects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147; ...; ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The code should not encounter an assertion inside LLVM/Cling. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Unfortunately this would be pretty involved to describe. :frowning: Especially the setup that I used with Cling compiled in Debug mode. So I'm rather just hoping for input on how I myself could debug this further. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; - ROOT 6.24/00; - `x86_64-centos7-gcc8-dbg`; - ROOT built using: https://gitlab.cern.ch/atlas/atlasexternals/-/tree/master/External/ROOT. ### Additional context; <!--; Add any other context about the problem here.; -->. I guess my question is how I could get enough information out of of the `clang::DeclContext` object that the assertion fails on, to understand why the code ended up where it did...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:4343,Deployability,Update,UpdateArgsWithConversions,4343,"4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/TreeTransform.h:4252; #12 0x00007faf40c4d485 in clang::Sema::SubstType (this=0x14ab0b0, T=0xa0f3090, Args=..., Loc=..., Entity=..., AllowDeducedTST=false); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplateInstantiate.cpp:1605; #13 0x00007faf40b1c1f7 in SubstDefaultTemplateArgument (SemaRef=..., Template=0xcd78f48, TemplateLoc=..., RAngleLoc=..., Param=0xcd78e10, Converted=...); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:4710; #14 0x00007faf40b1e5d1 in clang::Sema::CheckTemplateArgumentList (this=0x14ab0b0, Template=0xcd78f48, TemplateLoc=..., TemplateArgs=..., PartialTemplateArgs=false, Converted=..., ; UpdateArgsWithConversions=true); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:5427; #15 0x00007faf40b16979 in clang::Sema::CheckTemplateIdType (this=0x14ab0b0, Name=..., TemplateLoc=..., TemplateArgs=...); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:3323; #16 0x00007faf4035f07a in clang::Sema::ActOnCXXNestedNameSpecifier (this=0x14ab0b0, S=0x17d2a80, SS=..., TemplateKWLoc=..., OpaqueTemplate=..., TemplateNameLoc=..., ; LAngleLoc=..., TemplateArgsIn=..., RAngleLoc=..., CCLoc=..., EnteringContext=false); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaCXXScopeSpec.cpp:980; #17 0x00007faf4007023d in clang::Parser::ParseOptionalCXXScopeSpecifier (this=0x1575b10, SS=..., ObjectType=..., EnteringContext=false, MayBePseudoDestructor=0x0, ; IsTypename=false, LastII=0x0, OnlyNamespace=false); at /data",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:12216,Deployability,install,install,12216,"ects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147; ...; ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The code should not encounter an assertion inside LLVM/Cling. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Unfortunately this would be pretty involved to describe. :frowning: Especially the setup that I used with Cling compiled in Debug mode. So I'm rather just hoping for input on how I myself could debug this further. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; - ROOT 6.24/00; - `x86_64-centos7-gcc8-dbg`; - ROOT built using: https://gitlab.cern.ch/atlas/atlasexternals/-/tree/master/External/ROOT. ### Additional context; <!--; Add any other context about the problem here.; -->. I guess my question is how I could get enough information out of of the `clang::DeclContext` object that the assertion fails on, to understand why the code ended up where it did...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:8118,Performance,optimiz,optimized,8118,"0x00007faf49952302 in Cppyy::ResolveName (cppitem_name=...); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:410; #25 0x00007faf49952db6 in Cppyy::GetScope (sname=...); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:510; #26 0x00007faf49cac9bc in CPyCppyy::CreateScopeProxy (name=..., parent=0x31c9c90); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:541; #27 0x00007faf49c84ccf in CPyCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324; #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978; #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140; #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449; #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422; #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>); at /data/hdd-4tb/projects",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:8336,Performance,optimiz,optimized,8336,"07faf49952db6 in Cppyy::GetScope (sname=...); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:510; #26 0x00007faf49cac9bc in CPyCppyy::CreateScopeProxy (name=..., parent=0x31c9c90); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:541; #27 0x00007faf49c84ccf in CPyCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324; #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978; #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140; #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449; #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422; #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820); at /data/hdd-4tb/projects/ATLASG",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:8358,Performance,optimiz,optimized,8358,"07faf49952db6 in Cppyy::GetScope (sname=...); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:510; #26 0x00007faf49cac9bc in CPyCppyy::CreateScopeProxy (name=..., parent=0x31c9c90); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:541; #27 0x00007faf49c84ccf in CPyCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324; #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978; #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140; #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449; #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422; #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820); at /data/hdd-4tb/projects/ATLASG",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:8379,Performance,optimiz,optimized,8379,"07faf49952db6 in Cppyy::GetScope (sname=...); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:510; #26 0x00007faf49cac9bc in CPyCppyy::CreateScopeProxy (name=..., parent=0x31c9c90); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:541; #27 0x00007faf49c84ccf in CPyCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324; #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978; #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140; #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449; #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422; #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820); at /data/hdd-4tb/projects/ATLASG",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:8539,Performance,optimiz,optimized,8539,"49cac9bc in CPyCppyy::CreateScopeProxy (name=..., parent=0x31c9c90); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:541; #27 0x00007faf49c84ccf in CPyCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324; #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978; #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140; #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449; #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422; #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963; #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseE",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:8583,Performance,optimiz,optimized,8583,"49cac9bc in CPyCppyy::CreateScopeProxy (name=..., parent=0x31c9c90); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:541; #27 0x00007faf49c84ccf in CPyCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324; #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978; #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140; #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449; #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422; #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963; #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseE",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:8806,Performance,optimiz,optimized,8806,"yCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324; #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978; #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140; #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449; #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422; #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963; #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500; #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExtern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:8830,Performance,optimiz,optimized,8830,"yCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324; #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978; #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140; #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449; #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422; #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963; #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500; #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExtern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:8855,Performance,optimiz,optimized,8855,"yCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324; #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978; #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140; #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449; #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422; #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963; #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500; #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExtern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:9044,Performance,optimiz,optimized,9044,"name=<optimized out>, result=result@entry=0x7ffdb628f638); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978; #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140; #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449; #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422; #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963; #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500; #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283; #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:9068,Performance,optimiz,optimized,9068,"name=<optimized out>, result=result@entry=0x7ffdb628f638); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978; #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140; #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449; #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422; #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963; #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500; #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283; #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:9090,Performance,optimiz,optimized,9090,"name=<optimized out>, result=result@entry=0x7ffdb628f638); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978; #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140; #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449; #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422; #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963; #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500; #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283; #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:9116,Performance,optimiz,optimized,9116,"name=<optimized out>, result=result@entry=0x7ffdb628f638); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978; #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140; #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449; #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422; #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963; #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500; #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283; #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:9291,Performance,optimiz,optimized,9291,", name=<optimized out>, obj=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140; #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449; #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422; #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963; #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500; #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283; #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89; #38 0x00007",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:9497,Performance,optimiz,optimized,9497," out>, args=0x7faf298e3388, nargs=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449; #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422; #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963; #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500; #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283; #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89; #38 0x00007faf4b42df36 in _PyObject_Vectorcall (kwnames=0x0, nargsf=1, args=0x7ffdb628f890, callable=0x7faf4b960e80); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Incl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:9524,Performance,optimiz,optimized,9524," out>, args=0x7faf298e3388, nargs=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449; #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422; #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963; #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500; #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283; #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89; #38 0x00007faf4b42df36 in _PyObject_Vectorcall (kwnames=0x0, nargsf=1, args=0x7ffdb628f890, callable=0x7faf4b960e80); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Incl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:9703,Performance,optimiz,optimized,9703,"vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422; #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963; #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500; #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283; #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89; #38 0x00007faf4b42df36 in _PyObject_Vectorcall (kwnames=0x0, nargsf=1, args=0x7ffdb628f890, callable=0x7faf4b960e80); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:9725,Performance,optimiz,optimized,9725,"vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422; #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963; #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500; #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283; #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89; #38 0x00007faf4b42df36 in _PyObject_Vectorcall (kwnames=0x0, nargsf=1, args=0x7ffdb628f890, callable=0x7faf4b960e80); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:9759,Performance,optimiz,optimized,9759,"vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422; #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963; #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500; #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283; #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89; #38 0x00007faf4b42df36 in _PyObject_Vectorcall (kwnames=0x0, nargsf=1, args=0x7ffdb628f890, callable=0x7faf4b960e80); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:10151,Performance,optimiz,optimized,10151,"lude/cpython/abstract.h:127; #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963; #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500; #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283; #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89; #38 0x00007faf4b42df36 in _PyObject_Vectorcall (kwnames=0x0, nargsf=1, args=0x7ffdb628f890, callable=0x7faf4b960e80); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147; ...; ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https:/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:10173,Performance,optimiz,optimized,10173,"lude/cpython/abstract.h:127; #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963; #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500; #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283; #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89; #38 0x00007faf4b42df36 in _PyObject_Vectorcall (kwnames=0x0, nargsf=1, args=0x7ffdb628f890, callable=0x7faf4b960e80); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147; ...; ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https:/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:10197,Performance,optimiz,optimized,10197,"lude/cpython/abstract.h:127; #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963; #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500; #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283; #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89; #38 0x00007faf4b42df36 in _PyObject_Vectorcall (kwnames=0x0, nargsf=1, args=0x7ffdb628f890, callable=0x7faf4b960e80); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147; ...; ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https:/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:910,Safety,abort,abort,910,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Another incarnation of the ATLAS xAOD EDM overwhelming ROOT is at foot. :frowning: I was trying to understand the issue better before turning to you guys, but I feel that I would need to learn much more about LLVM/Cling to get further than what I'm willing to do... So... in a particular PyROOT test I encounter the following assertion in a debug build:. ```; (gdb) bt; #0 0x00007faf4a49d3d7 in raise () from /lib64/libc.so.6; #1 0x00007faf4a49eac8 in abort () from /lib64/libc.so.6; #2 0x00007faf4a4961a6 in __assert_fail_base () from /lib64/libc.so.6; #3 0x00007faf4a496252 in __assert_fail () from /lib64/libc.so.6; #4 0x00007faf409453d0 in clang::Sema::LookupQualifiedName (this=0x14ab0b0, R=..., LookupCtx=0x3035ca0, InUnqualifiedLookup=false); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2128; #5 0x00007faf40945d1b in clang::Sema::LookupQualifiedName (this=0x14ab0b0, R=..., LookupCtx=0x3035ca0, SS=...); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2364; #6 0x00007faf40b30acf in clang::Sema::CheckTypenameType (this=0x14ab0b0, Keyword=clang::ETK_Typename, KeywordLoc=..., QualifierLoc=..., II=..., IILoc=...); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:10051; #7 0x00007faf40c7d53d in clang::TreeTransform<(anonymous namespace)::TemplateI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:10857,Security,access,accessing,10857,"als/src/Python/Objects/call.c:283; #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89; #38 0x00007faf4b42df36 in _PyObject_Vectorcall (kwnames=0x0, nargsf=1, args=0x7ffdb628f890, callable=0x7faf4b960e80); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147; ...; ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The code should not encounter an assertion inside LLVM/Cling. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run you",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:10922,Security,access,access,10922,"=0x7ffdb628f800, callable=0x7faf298dbaf0); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89; #38 0x00007faf4b42df36 in _PyObject_Vectorcall (kwnames=0x0, nargsf=1, args=0x7ffdb628f890, callable=0x7faf4b960e80); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147; ...; ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The code should not encounter an assertion inside LLVM/Cling. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Unfortunately this would be pretty involved to desc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:11144,Security,access,accessing,11144,"zed out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89; #38 0x00007faf4b42df36 in _PyObject_Vectorcall (kwnames=0x0, nargsf=1, args=0x7ffdb628f890, callable=0x7faf4b960e80); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147; ...; ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The code should not encounter an assertion inside LLVM/Cling. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Unfortunately this would be pretty involved to describe. :frowning: Especially the setup that I used with Cling compiled in Debug mode. So I'm rather just hoping for input on how I myself could debug this further. ### Setup; <!--; 1. ROOT version; 2.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:753,Testability,test,test,753,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Another incarnation of the ATLAS xAOD EDM overwhelming ROOT is at foot. :frowning: I was trying to understand the issue better before turning to you guys, but I feel that I would need to learn much more about LLVM/Cling to get further than what I'm willing to do... So... in a particular PyROOT test I encounter the following assertion in a debug build:. ```; (gdb) bt; #0 0x00007faf4a49d3d7 in raise () from /lib64/libc.so.6; #1 0x00007faf4a49eac8 in abort () from /lib64/libc.so.6; #2 0x00007faf4a4961a6 in __assert_fail_base () from /lib64/libc.so.6; #3 0x00007faf4a496252 in __assert_fail () from /lib64/libc.so.6; #4 0x00007faf409453d0 in clang::Sema::LookupQualifiedName (this=0x14ab0b0, R=..., LookupCtx=0x3035ca0, InUnqualifiedLookup=false); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2128; #5 0x00007faf40945d1b in clang::Sema::LookupQualifiedName (this=0x14ab0b0, R=..., LookupCtx=0x3035ca0, SS=...); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2364; #6 0x00007faf40b30acf in clang::Sema::CheckTypenameType (this=0x14ab0b0, Keyword=clang::ETK_Typename, KeywordLoc=..., QualifierLoc=..., II=..., IILoc=...); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:10051; #7 0x00007faf40c7d53d in clang::TreeTransform<(anonymous namespace)::TemplateI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:784,Testability,assert,assertion,784,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Another incarnation of the ATLAS xAOD EDM overwhelming ROOT is at foot. :frowning: I was trying to understand the issue better before turning to you guys, but I feel that I would need to learn much more about LLVM/Cling to get further than what I'm willing to do... So... in a particular PyROOT test I encounter the following assertion in a debug build:. ```; (gdb) bt; #0 0x00007faf4a49d3d7 in raise () from /lib64/libc.so.6; #1 0x00007faf4a49eac8 in abort () from /lib64/libc.so.6; #2 0x00007faf4a4961a6 in __assert_fail_base () from /lib64/libc.so.6; #3 0x00007faf4a496252 in __assert_fail () from /lib64/libc.so.6; #4 0x00007faf409453d0 in clang::Sema::LookupQualifiedName (this=0x14ab0b0, R=..., LookupCtx=0x3035ca0, InUnqualifiedLookup=false); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2128; #5 0x00007faf40945d1b in clang::Sema::LookupQualifiedName (this=0x14ab0b0, R=..., LookupCtx=0x3035ca0, SS=...); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2364; #6 0x00007faf40b30acf in clang::Sema::CheckTypenameType (this=0x14ab0b0, Keyword=clang::ETK_Typename, KeywordLoc=..., QualifierLoc=..., II=..., IILoc=...); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:10051; #7 0x00007faf40c7d53d in clang::TreeTransform<(anonymous namespace)::TemplateI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:11431,Testability,test,test,11431,"allable=0x7faf4b960e80); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147; ...; ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The code should not encounter an assertion inside LLVM/Cling. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Unfortunately this would be pretty involved to describe. :frowning: Especially the setup that I used with Cling compiled in Debug mode. So I'm rather just hoping for input on how I myself could debug this further. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; - ROOT 6.24/00; - `x86_64-centos7-gcc8-dbg`; - ROOT built using: https://gitlab.cern.ch/atlas/atlasexternals/-/tree/master/External/ROOT. ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:11596,Testability,assert,assertion,11596,"stCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147; ...; ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The code should not encounter an assertion inside LLVM/Cling. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Unfortunately this would be pretty involved to describe. :frowning: Especially the setup that I used with Cling compiled in Debug mode. So I'm rather just hoping for input on how I myself could debug this further. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; - ROOT 6.24/00; - `x86_64-centos7-gcc8-dbg`; - ROOT built using: https://gitlab.cern.ch/atlas/atlasexternals/-/tree/master/External/ROOT. ### Additional context; <!--; Add any other context about the problem here.; -->. I guess my question is how I could get enough information out of of the `clang::DeclContext` object",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:12603,Testability,assert,assertion,12603,"ects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147; ...; ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The code should not encounter an assertion inside LLVM/Cling. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Unfortunately this would be pretty involved to describe. :frowning: Especially the setup that I used with Cling compiled in Debug mode. So I'm rather just hoping for input on how I myself could debug this further. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; - ROOT 6.24/00; - `x86_64-centos7-gcc8-dbg`; - ROOT built using: https://gitlab.cern.ch/atlas/atlasexternals/-/tree/master/External/ROOT. ### Additional context; <!--; Add any other context about the problem here.; -->. I guess my question is how I could get enough information out of of the `clang::DeclContext` object that the assertion fails on, to understand why the code ended up where it did...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:391,Usability,clear,clear,391,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Another incarnation of the ATLAS xAOD EDM overwhelming ROOT is at foot. :frowning: I was trying to understand the issue better before turning to you guys, but I feel that I would need to learn much more about LLVM/Cling to get further than what I'm willing to do... So... in a particular PyROOT test I encounter the following assertion in a debug build:. ```; (gdb) bt; #0 0x00007faf4a49d3d7 in raise () from /lib64/libc.so.6; #1 0x00007faf4a49eac8 in abort () from /lib64/libc.so.6; #2 0x00007faf4a4961a6 in __assert_fail_base () from /lib64/libc.so.6; #3 0x00007faf4a496252 in __assert_fail () from /lib64/libc.so.6; #4 0x00007faf409453d0 in clang::Sema::LookupQualifiedName (this=0x14ab0b0, R=..., LookupCtx=0x3035ca0, InUnqualifiedLookup=false); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2128; #5 0x00007faf40945d1b in clang::Sema::LookupQualifiedName (this=0x14ab0b0, R=..., LookupCtx=0x3035ca0, SS=...); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2364; #6 0x00007faf40b30acf in clang::Sema::CheckTypenameType (this=0x14ab0b0, Keyword=clang::ETK_Typename, KeywordLoc=..., QualifierLoc=..., II=..., IILoc=...); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:10051; #7 0x00007faf40c7d53d in clang::TreeTransform<(anonymous namespace)::TemplateI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:645,Usability,learn,learn,645,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Another incarnation of the ATLAS xAOD EDM overwhelming ROOT is at foot. :frowning: I was trying to understand the issue better before turning to you guys, but I feel that I would need to learn much more about LLVM/Cling to get further than what I'm willing to do... So... in a particular PyROOT test I encounter the following assertion in a debug build:. ```; (gdb) bt; #0 0x00007faf4a49d3d7 in raise () from /lib64/libc.so.6; #1 0x00007faf4a49eac8 in abort () from /lib64/libc.so.6; #2 0x00007faf4a4961a6 in __assert_fail_base () from /lib64/libc.so.6; #3 0x00007faf4a496252 in __assert_fail () from /lib64/libc.so.6; #4 0x00007faf409453d0 in clang::Sema::LookupQualifiedName (this=0x14ab0b0, R=..., LookupCtx=0x3035ca0, InUnqualifiedLookup=false); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2128; #5 0x00007faf40945d1b in clang::Sema::LookupQualifiedName (this=0x14ab0b0, R=..., LookupCtx=0x3035ca0, SS=...); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2364; #6 0x00007faf40b30acf in clang::Sema::CheckTypenameType (this=0x14ab0b0, Keyword=clang::ETK_Typename, KeywordLoc=..., QualifierLoc=..., II=..., IILoc=...); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/interpreter/llvm/src/tools/clang/lib/Sema/SemaTemplate.cpp:10051; #7 0x00007faf40c7d53d in clang::TreeTransform<(anonymous namespace)::TemplateI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/issues/8578:11495,Usability,clear,clear,11495,"ld/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147; ...; ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The code should not encounter an assertion inside LLVM/Cling. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Unfortunately this would be pretty involved to describe. :frowning: Especially the setup that I used with Cling compiled in Debug mode. So I'm rather just hoping for input on how I myself could debug this further. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; - ROOT 6.24/00; - `x86_64-centos7-gcc8-dbg`; - ROOT built using: https://gitlab.cern.ch/atlas/atlasexternals/-/tree/master/External/ROOT. ### Additional context; <!--; Add any other context about the problem here.; -->. I guess my quest",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8578
https://github.com/root-project/root/pull/8579:1494,Deployability,patch,patch,1494,"Every RooFit pdf is evaluated with a set of variables to normalize over; (normalization set). A pointer to the last used normalization set is; stored in the pdf class. sometimes, pdfs are evaluated without a; normalization set in RooFit if the normalization doesn't matter. But for; a specific class the normalization always matters: the RooAddPdf Because; if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used; normalization set if you evaluate a RooAddPdf without a normalization; set. But since the pdf only has a *pointer* to the last-used; normalization set, it will have an invalid pointer if the actual; previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles; memory every 6000 RooArgSets, the invalid `_normSet` problem only gets; visible in large models, but if the model is large enough it causes; reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set; into the RooAddPdf, instead of only storing a pointer. Furthermore, the; logic to override the empty normalization set with the last-stored; normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding; the overload of `RooAbsPdf::getValV()`. This is a backport of https://github.com/root-project/root/pull/8580, minus the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8579
https://github.com/root-project/root/pull/8579:1500,Deployability,release,release,1500,"Every RooFit pdf is evaluated with a set of variables to normalize over; (normalization set). A pointer to the last used normalization set is; stored in the pdf class. sometimes, pdfs are evaluated without a; normalization set in RooFit if the normalization doesn't matter. But for; a specific class the normalization always matters: the RooAddPdf Because; if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used; normalization set if you evaluate a RooAddPdf without a normalization; set. But since the pdf only has a *pointer* to the last-used; normalization set, it will have an invalid pointer if the actual; previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles; memory every 6000 RooArgSets, the invalid `_normSet` problem only gets; visible in large models, but if the model is large enough it causes; reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set; into the RooAddPdf, instead of only storing a pointer. Furthermore, the; logic to override the empty normalization set with the last-stored; normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding; the overload of `RooAbsPdf::getValV()`. This is a backport of https://github.com/root-project/root/pull/8580, minus the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8579
https://github.com/root-project/root/pull/8579:44,Modifiability,variab,variables,44,"Every RooFit pdf is evaluated with a set of variables to normalize over; (normalization set). A pointer to the last used normalization set is; stored in the pdf class. sometimes, pdfs are evaluated without a; normalization set in RooFit if the normalization doesn't matter. But for; a specific class the normalization always matters: the RooAddPdf Because; if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used; normalization set if you evaluate a RooAddPdf without a normalization; set. But since the pdf only has a *pointer* to the last-used; normalization set, it will have an invalid pointer if the actual; previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles; memory every 6000 RooArgSets, the invalid `_normSet` problem only gets; visible in large models, but if the model is large enough it causes; reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set; into the RooAddPdf, instead of only storing a pointer. Furthermore, the; logic to override the empty normalization set with the last-stored; normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding; the overload of `RooAbsPdf::getValV()`. This is a backport of https://github.com/root-project/root/pull/8580, minus the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8579
https://github.com/root-project/root/pull/8579:1294,Safety,avoid,avoiding,1294,"Every RooFit pdf is evaluated with a set of variables to normalize over; (normalization set). A pointer to the last used normalization set is; stored in the pdf class. sometimes, pdfs are evaluated without a; normalization set in RooFit if the normalization doesn't matter. But for; a specific class the normalization always matters: the RooAddPdf Because; if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used; normalization set if you evaluate a RooAddPdf without a normalization; set. But since the pdf only has a *pointer* to the last-used; normalization set, it will have an invalid pointer if the actual; previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles; memory every 6000 RooArgSets, the invalid `_normSet` problem only gets; visible in large models, but if the model is large enough it causes; reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set; into the RooAddPdf, instead of only storing a pointer. Furthermore, the; logic to override the empty normalization set with the last-stored; normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding; the overload of `RooAbsPdf::getValV()`. This is a backport of https://github.com/root-project/root/pull/8580, minus the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8579
https://github.com/root-project/root/pull/8579:1424,Safety,safe,safer,1424,"Every RooFit pdf is evaluated with a set of variables to normalize over; (normalization set). A pointer to the last used normalization set is; stored in the pdf class. sometimes, pdfs are evaluated without a; normalization set in RooFit if the normalization doesn't matter. But for; a specific class the normalization always matters: the RooAddPdf Because; if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used; normalization set if you evaluate a RooAddPdf without a normalization; set. But since the pdf only has a *pointer* to the last-used; normalization set, it will have an invalid pointer if the actual; previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles; memory every 6000 RooArgSets, the invalid `_normSet` problem only gets; visible in large models, but if the model is large enough it causes; reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set; into the RooAddPdf, instead of only storing a pointer. Furthermore, the; logic to override the empty normalization set with the last-stored; normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding; the overload of `RooAbsPdf::getValV()`. This is a backport of https://github.com/root-project/root/pull/8580, minus the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8579
https://github.com/root-project/root/pull/8579:1164,Testability,log,logic,1164,"Every RooFit pdf is evaluated with a set of variables to normalize over; (normalization set). A pointer to the last used normalization set is; stored in the pdf class. sometimes, pdfs are evaluated without a; normalization set in RooFit if the normalization doesn't matter. But for; a specific class the normalization always matters: the RooAddPdf Because; if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used; normalization set if you evaluate a RooAddPdf without a normalization; set. But since the pdf only has a *pointer* to the last-used; normalization set, it will have an invalid pointer if the actual; previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles; memory every 6000 RooArgSets, the invalid `_normSet` problem only gets; visible in large models, but if the model is large enough it causes; reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set; into the RooAddPdf, instead of only storing a pointer. Furthermore, the; logic to override the empty normalization set with the last-stored; normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding; the overload of `RooAbsPdf::getValV()`. This is a backport of https://github.com/root-project/root/pull/8580, minus the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8579
https://github.com/root-project/root/pull/8580:1412,Deployability,update,updated,1412,"Every RooFit pdf is evaluated with a set of variables to normalize over; (normalization set). A pointer to the last used normalization set is; stored in the pdf class. sometimes, pdfs are evaluated without a; normalization set in RooFit if the normalization doesn't matter. But for; a specific class the normalization always matters: the RooAddPdf Because; if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used; normalization set if you evaluate a RooAddPdf without a normalization; set. But since the pdf only has a *pointer* to the last-used; normalization set, it will have an invalid pointer if the actual; previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles; memory every 6000 RooArgSets, the invalid `_normSet` problem only gets; visible in large models, but if the model is large enough it causes; reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set; into the RooAddPdf, instead of only storing a pointer. Furthermore, the; logic to override the empty normalization set with the last-stored; normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding; the overload of `RooAbsPdf::getValV()`. Initially, the check where the copied normalization set needs to be updated was done based on the address of the normalization set. However, comparisons by address should be avoided because they can lead to false positives if memory is recycled. That's why this PR also contains the UniqueId mechanism already proposed and reviewed in https://github.com/root-project/root/pull/8324. The backport of this PR to v624 is the PR https://github.com/root-project/root/pull/8579, which doesn't use the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8580
https://github.com/root-project/root/pull/8580:1909,Deployability,patch,patch,1909,"Every RooFit pdf is evaluated with a set of variables to normalize over; (normalization set). A pointer to the last used normalization set is; stored in the pdf class. sometimes, pdfs are evaluated without a; normalization set in RooFit if the normalization doesn't matter. But for; a specific class the normalization always matters: the RooAddPdf Because; if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used; normalization set if you evaluate a RooAddPdf without a normalization; set. But since the pdf only has a *pointer* to the last-used; normalization set, it will have an invalid pointer if the actual; previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles; memory every 6000 RooArgSets, the invalid `_normSet` problem only gets; visible in large models, but if the model is large enough it causes; reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set; into the RooAddPdf, instead of only storing a pointer. Furthermore, the; logic to override the empty normalization set with the last-stored; normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding; the overload of `RooAbsPdf::getValV()`. Initially, the check where the copied normalization set needs to be updated was done based on the address of the normalization set. However, comparisons by address should be avoided because they can lead to false positives if memory is recycled. That's why this PR also contains the UniqueId mechanism already proposed and reviewed in https://github.com/root-project/root/pull/8324. The backport of this PR to v624 is the PR https://github.com/root-project/root/pull/8579, which doesn't use the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8580
https://github.com/root-project/root/pull/8580:1915,Deployability,release,release,1915,"Every RooFit pdf is evaluated with a set of variables to normalize over; (normalization set). A pointer to the last used normalization set is; stored in the pdf class. sometimes, pdfs are evaluated without a; normalization set in RooFit if the normalization doesn't matter. But for; a specific class the normalization always matters: the RooAddPdf Because; if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used; normalization set if you evaluate a RooAddPdf without a normalization; set. But since the pdf only has a *pointer* to the last-used; normalization set, it will have an invalid pointer if the actual; previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles; memory every 6000 RooArgSets, the invalid `_normSet` problem only gets; visible in large models, but if the model is large enough it causes; reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set; into the RooAddPdf, instead of only storing a pointer. Furthermore, the; logic to override the empty normalization set with the last-stored; normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding; the overload of `RooAbsPdf::getValV()`. Initially, the check where the copied normalization set needs to be updated was done based on the address of the normalization set. However, comparisons by address should be avoided because they can lead to false positives if memory is recycled. That's why this PR also contains the UniqueId mechanism already proposed and reviewed in https://github.com/root-project/root/pull/8324. The backport of this PR to v624 is the PR https://github.com/root-project/root/pull/8579, which doesn't use the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8580
https://github.com/root-project/root/pull/8580:44,Modifiability,variab,variables,44,"Every RooFit pdf is evaluated with a set of variables to normalize over; (normalization set). A pointer to the last used normalization set is; stored in the pdf class. sometimes, pdfs are evaluated without a; normalization set in RooFit if the normalization doesn't matter. But for; a specific class the normalization always matters: the RooAddPdf Because; if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used; normalization set if you evaluate a RooAddPdf without a normalization; set. But since the pdf only has a *pointer* to the last-used; normalization set, it will have an invalid pointer if the actual; previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles; memory every 6000 RooArgSets, the invalid `_normSet` problem only gets; visible in large models, but if the model is large enough it causes; reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set; into the RooAddPdf, instead of only storing a pointer. Furthermore, the; logic to override the empty normalization set with the last-stored; normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding; the overload of `RooAbsPdf::getValV()`. Initially, the check where the copied normalization set needs to be updated was done based on the address of the normalization set. However, comparisons by address should be avoided because they can lead to false positives if memory is recycled. That's why this PR also contains the UniqueId mechanism already proposed and reviewed in https://github.com/root-project/root/pull/8324. The backport of this PR to v624 is the PR https://github.com/root-project/root/pull/8579, which doesn't use the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8580
https://github.com/root-project/root/pull/8580:1294,Safety,avoid,avoiding,1294,"Every RooFit pdf is evaluated with a set of variables to normalize over; (normalization set). A pointer to the last used normalization set is; stored in the pdf class. sometimes, pdfs are evaluated without a; normalization set in RooFit if the normalization doesn't matter. But for; a specific class the normalization always matters: the RooAddPdf Because; if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used; normalization set if you evaluate a RooAddPdf without a normalization; set. But since the pdf only has a *pointer* to the last-used; normalization set, it will have an invalid pointer if the actual; previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles; memory every 6000 RooArgSets, the invalid `_normSet` problem only gets; visible in large models, but if the model is large enough it causes; reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set; into the RooAddPdf, instead of only storing a pointer. Furthermore, the; logic to override the empty normalization set with the last-stored; normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding; the overload of `RooAbsPdf::getValV()`. Initially, the check where the copied normalization set needs to be updated was done based on the address of the normalization set. However, comparisons by address should be avoided because they can lead to false positives if memory is recycled. That's why this PR also contains the UniqueId mechanism already proposed and reviewed in https://github.com/root-project/root/pull/8324. The backport of this PR to v624 is the PR https://github.com/root-project/root/pull/8579, which doesn't use the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8580
https://github.com/root-project/root/pull/8580:1518,Safety,avoid,avoided,1518,"Every RooFit pdf is evaluated with a set of variables to normalize over; (normalization set). A pointer to the last used normalization set is; stored in the pdf class. sometimes, pdfs are evaluated without a; normalization set in RooFit if the normalization doesn't matter. But for; a specific class the normalization always matters: the RooAddPdf Because; if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used; normalization set if you evaluate a RooAddPdf without a normalization; set. But since the pdf only has a *pointer* to the last-used; normalization set, it will have an invalid pointer if the actual; previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles; memory every 6000 RooArgSets, the invalid `_normSet` problem only gets; visible in large models, but if the model is large enough it causes; reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set; into the RooAddPdf, instead of only storing a pointer. Furthermore, the; logic to override the empty normalization set with the last-stored; normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding; the overload of `RooAbsPdf::getValV()`. Initially, the check where the copied normalization set needs to be updated was done based on the address of the normalization set. However, comparisons by address should be avoided because they can lead to false positives if memory is recycled. That's why this PR also contains the UniqueId mechanism already proposed and reviewed in https://github.com/root-project/root/pull/8324. The backport of this PR to v624 is the PR https://github.com/root-project/root/pull/8579, which doesn't use the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8580
https://github.com/root-project/root/pull/8580:1839,Safety,safe,safer,1839,"Every RooFit pdf is evaluated with a set of variables to normalize over; (normalization set). A pointer to the last used normalization set is; stored in the pdf class. sometimes, pdfs are evaluated without a; normalization set in RooFit if the normalization doesn't matter. But for; a specific class the normalization always matters: the RooAddPdf Because; if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used; normalization set if you evaluate a RooAddPdf without a normalization; set. But since the pdf only has a *pointer* to the last-used; normalization set, it will have an invalid pointer if the actual; previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles; memory every 6000 RooArgSets, the invalid `_normSet` problem only gets; visible in large models, but if the model is large enough it causes; reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set; into the RooAddPdf, instead of only storing a pointer. Furthermore, the; logic to override the empty normalization set with the last-stored; normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding; the overload of `RooAbsPdf::getValV()`. Initially, the check where the copied normalization set needs to be updated was done based on the address of the normalization set. However, comparisons by address should be avoided because they can lead to false positives if memory is recycled. That's why this PR also contains the UniqueId mechanism already proposed and reviewed in https://github.com/root-project/root/pull/8324. The backport of this PR to v624 is the PR https://github.com/root-project/root/pull/8579, which doesn't use the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8580
https://github.com/root-project/root/pull/8580:1164,Testability,log,logic,1164,"Every RooFit pdf is evaluated with a set of variables to normalize over; (normalization set). A pointer to the last used normalization set is; stored in the pdf class. sometimes, pdfs are evaluated without a; normalization set in RooFit if the normalization doesn't matter. But for; a specific class the normalization always matters: the RooAddPdf Because; if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used; normalization set if you evaluate a RooAddPdf without a normalization; set. But since the pdf only has a *pointer* to the last-used; normalization set, it will have an invalid pointer if the actual; previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles; memory every 6000 RooArgSets, the invalid `_normSet` problem only gets; visible in large models, but if the model is large enough it causes; reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set; into the RooAddPdf, instead of only storing a pointer. Furthermore, the; logic to override the empty normalization set with the last-stored; normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding; the overload of `RooAbsPdf::getValV()`. Initially, the check where the copied normalization set needs to be updated was done based on the address of the normalization set. However, comparisons by address should be avoided because they can lead to false positives if memory is recycled. That's why this PR also contains the UniqueId mechanism already proposed and reviewed in https://github.com/root-project/root/pull/8324. The backport of this PR to v624 is the PR https://github.com/root-project/root/pull/8579, which doesn't use the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8580
https://github.com/root-project/root/issues/8581:708,Energy Efficiency,allocate,allocated,708,"- [x] Checked for duplicates. ### Describe the bug. The following code causes a crash:; ```cpp; // sink is destroyed before model; auto model = RNTupleModel::Create();; auto fieldPt = model->MakeField<float>(""pt"", 42.0);; {; RPageSinkFile sink(""myNTuple"", ""file.root"", RNTupleWriteOptions());; sink.Create(*model.get());; // uncomment to run successfully; // model = nullptr; ; } ; ```; ```; pure virtual method called; terminate called without an active exception; Aborted (core dumped); ```; The following sequence is seemingly to blame (worked out with @jblomer):; 1. The model owns fields; 2. On `sink.Create()`, these fields get their columns connected to the page sink ; 3. The columns get their pages allocated from the page sink; 4. On destruction, the columns ask the page sink to help the free the pages; 5. So the columns (i.e. fields, i.e. model) must not be deconstructed after the page sink they are connected to. Note: the user-level `RNTupleWriter` API is immune to this issue because of class member destruction order: ; https://github.com/root-project/root/blob/f7df9d527f121ca5f00690dc49f4911dd356cb1c/tree/ntuple/v7/inc/ROOT/RNTuple.hxx#L356-L358; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Setup; ROOT master. ### Additional context; This bug is surprising, but low-severity because users will likely use the higher-level `RNTupleReader` and `Writer` APIs. The workaround is straightforward when the root cause is known.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8581
https://github.com/root-project/root/issues/8581:466,Safety,Abort,Aborted,466,"- [x] Checked for duplicates. ### Describe the bug. The following code causes a crash:; ```cpp; // sink is destroyed before model; auto model = RNTupleModel::Create();; auto fieldPt = model->MakeField<float>(""pt"", 42.0);; {; RPageSinkFile sink(""myNTuple"", ""file.root"", RNTupleWriteOptions());; sink.Create(*model.get());; // uncomment to run successfully; // model = nullptr; ; } ; ```; ```; pure virtual method called; terminate called without an active exception; Aborted (core dumped); ```; The following sequence is seemingly to blame (worked out with @jblomer):; 1. The model owns fields; 2. On `sink.Create()`, these fields get their columns connected to the page sink ; 3. The columns get their pages allocated from the page sink; 4. On destruction, the columns ask the page sink to help the free the pages; 5. So the columns (i.e. fields, i.e. model) must not be deconstructed after the page sink they are connected to. Note: the user-level `RNTupleWriter` API is immune to this issue because of class member destruction order: ; https://github.com/root-project/root/blob/f7df9d527f121ca5f00690dc49f4911dd356cb1c/tree/ntuple/v7/inc/ROOT/RNTuple.hxx#L356-L358; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Setup; ROOT master. ### Additional context; This bug is surprising, but low-severity because users will likely use the higher-level `RNTupleReader` and `Writer` APIs. The workaround is straightforward when the root cause is known.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8581
https://github.com/root-project/root/issues/8581:1176,Usability,clear,clear,1176,"- [x] Checked for duplicates. ### Describe the bug. The following code causes a crash:; ```cpp; // sink is destroyed before model; auto model = RNTupleModel::Create();; auto fieldPt = model->MakeField<float>(""pt"", 42.0);; {; RPageSinkFile sink(""myNTuple"", ""file.root"", RNTupleWriteOptions());; sink.Create(*model.get());; // uncomment to run successfully; // model = nullptr; ; } ; ```; ```; pure virtual method called; terminate called without an active exception; Aborted (core dumped); ```; The following sequence is seemingly to blame (worked out with @jblomer):; 1. The model owns fields; 2. On `sink.Create()`, these fields get their columns connected to the page sink ; 3. The columns get their pages allocated from the page sink; 4. On destruction, the columns ask the page sink to help the free the pages; 5. So the columns (i.e. fields, i.e. model) must not be deconstructed after the page sink they are connected to. Note: the user-level `RNTupleWriter` API is immune to this issue because of class member destruction order: ; https://github.com/root-project/root/blob/f7df9d527f121ca5f00690dc49f4911dd356cb1c/tree/ntuple/v7/inc/ROOT/RNTuple.hxx#L356-L358; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Setup; ROOT master. ### Additional context; This bug is surprising, but low-severity because users will likely use the higher-level `RNTupleReader` and `Writer` APIs. The workaround is straightforward when the root cause is known.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8581
https://github.com/root-project/root/issues/8582:3602,Availability,Down,Download,3602,"8. If I remove the `+ 10` ms and recompile ROOT, I get better results, (except for the first iteration):; ```; Chunk: 0 Time/ms: 0; Chunk: 1 Time/ms: 111; Chunk: 2 Time/ms: 161; Chunk: 3 Time/ms: 211; Chunk: 4 Time/ms: 262; Chunk: 5 Time/ms: 312; Chunk: 6 Time/ms: 362; Chunk: 7 Time/ms: 415; Chunk: 8 Time/ms: 469; Chunk: 9 Time/ms: 521; ```. ### Optional: share how it could be improved; It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at runtime, and `TThreadTimer` timeout is not configurable by the user, thus the only solution is a fork and recompile. ### To Reproduce. 1. cd /opt/ && git clone https://github.com/CLIUtils/CLI11; 2. Download [zdt2.zip](https://github.com/root-project/root/files/6744587/zdt2.zip) and unzip it, cd into it; 3. mkdir build && cd build; 4. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../; 5. make; 6. gui/runGUI --prbs 26 -q. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 28 2021, 13:40:49 |; | From heads/th1_long@v6-25-01-1451-gaed0c8868c |; | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; If you run the full example, you might find a deadlock at the end, just press CTRL+C to exit. The lock is maybe due to `TList` data race, see https://github.com/root-project/root/issues/8365#issuecomment-871005764 See also https://root-forum.ce",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:3447,Modifiability,config,configurable,3447,".cxx#L1043, there is a timer being created, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/inc/TThread.h#L208. If I remove the `+ 10` ms and recompile ROOT, I get better results, (except for the first iteration):; ```; Chunk: 0 Time/ms: 0; Chunk: 1 Time/ms: 111; Chunk: 2 Time/ms: 161; Chunk: 3 Time/ms: 211; Chunk: 4 Time/ms: 262; Chunk: 5 Time/ms: 312; Chunk: 6 Time/ms: 362; Chunk: 7 Time/ms: 415; Chunk: 8 Time/ms: 469; Chunk: 9 Time/ms: 521; ```. ### Optional: share how it could be improved; It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at runtime, and `TThreadTimer` timeout is not configurable by the user, thus the only solution is a fork and recompile. ### To Reproduce. 1. cd /opt/ && git clone https://github.com/CLIUtils/CLI11; 2. Download [zdt2.zip](https://github.com/root-project/root/files/6744587/zdt2.zip) and unzip it, cd into it; 3. mkdir build && cd build; 4. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../; 5. make; 6. gui/runGUI --prbs 26 -q. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 28 2021, 13:40:49 |; | From heads/th1_long@v6-25-01-1451-gaed0c8868c |; | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; If you run the full example, you might find a deadlock at the e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:3048,Performance,tune,tune,3048,"Time/ms: 470; Chunk: 8 Time/ms: 531; Chunk: 9 Time/ms: 592; ```; (In contrast, if I use `std::cout` instead of `Printf`, every step is perfectly 50 ms). I found out that on line https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/src/TThread.cxx#L1043, there is a timer being created, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/inc/TThread.h#L208. If I remove the `+ 10` ms and recompile ROOT, I get better results, (except for the first iteration):; ```; Chunk: 0 Time/ms: 0; Chunk: 1 Time/ms: 111; Chunk: 2 Time/ms: 161; Chunk: 3 Time/ms: 211; Chunk: 4 Time/ms: 262; Chunk: 5 Time/ms: 312; Chunk: 6 Time/ms: 362; Chunk: 7 Time/ms: 415; Chunk: 8 Time/ms: 469; Chunk: 9 Time/ms: 521; ```. ### Optional: share how it could be improved; It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at runtime, and `TThreadTimer` timeout is not configurable by the user, thus the only solution is a fork and recompile. ### To Reproduce. 1. cd /opt/ && git clone https://github.com/CLIUtils/CLI11; 2. Download [zdt2.zip](https://github.com/root-project/root/files/6744587/zdt2.zip) and unzip it, cd into it; 3. mkdir build && cd build; 4. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../; 5. make; 6. gui/runGUI --prbs 26 -q. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 28 2021, 13:40:49 |; | From heads/th1_long@v6-25-01-1451-gaed0c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:3166,Performance,perform,performance,3166,"Time/ms: 470; Chunk: 8 Time/ms: 531; Chunk: 9 Time/ms: 592; ```; (In contrast, if I use `std::cout` instead of `Printf`, every step is perfectly 50 ms). I found out that on line https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/src/TThread.cxx#L1043, there is a timer being created, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/inc/TThread.h#L208. If I remove the `+ 10` ms and recompile ROOT, I get better results, (except for the first iteration):; ```; Chunk: 0 Time/ms: 0; Chunk: 1 Time/ms: 111; Chunk: 2 Time/ms: 161; Chunk: 3 Time/ms: 211; Chunk: 4 Time/ms: 262; Chunk: 5 Time/ms: 312; Chunk: 6 Time/ms: 362; Chunk: 7 Time/ms: 415; Chunk: 8 Time/ms: 469; Chunk: 9 Time/ms: 521; ```. ### Optional: share how it could be improved; It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at runtime, and `TThreadTimer` timeout is not configurable by the user, thus the only solution is a fork and recompile. ### To Reproduce. 1. cd /opt/ && git clone https://github.com/CLIUtils/CLI11; 2. Download [zdt2.zip](https://github.com/root-project/root/files/6744587/zdt2.zip) and unzip it, cd into it; 3. mkdir build && cd build; 4. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../; 5. make; 6. gui/runGUI --prbs 26 -q. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 28 2021, 13:40:49 |; | From heads/th1_long@v6-25-01-1451-gaed0c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:4617,Performance,perform,performance-effects-in-a-root-based-data-acquisition,4617,"lts, (except for the first iteration):; ```; Chunk: 0 Time/ms: 0; Chunk: 1 Time/ms: 111; Chunk: 2 Time/ms: 161; Chunk: 3 Time/ms: 211; Chunk: 4 Time/ms: 262; Chunk: 5 Time/ms: 312; Chunk: 6 Time/ms: 362; Chunk: 7 Time/ms: 415; Chunk: 8 Time/ms: 469; Chunk: 9 Time/ms: 521; ```. ### Optional: share how it could be improved; It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at runtime, and `TThreadTimer` timeout is not configurable by the user, thus the only solution is a fork and recompile. ### To Reproduce. 1. cd /opt/ && git clone https://github.com/CLIUtils/CLI11; 2. Download [zdt2.zip](https://github.com/root-project/root/files/6744587/zdt2.zip) and unzip it, cd into it; 3. mkdir build && cd build; 4. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../; 5. make; 6. gui/runGUI --prbs 26 -q. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 28 2021, 13:40:49 |; | From heads/th1_long@v6-25-01-1451-gaed0c8868c |; | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; If you run the full example, you might find a deadlock at the end, just press CTRL+C to exit. The lock is maybe due to `TList` data race, see https://github.com/root-project/root/issues/8365#issuecomment-871005764 See also https://root-forum.cern.ch/t/performance-effects-in-a-root-based-data-acquisition/45519",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:2479,Safety,timeout,timeout,2479,"k: 3 Time/ms: 150; Chunk: 4 Time/ms: 200; Chunk: 5 Time/ms: 250; Chunk: 6 Time/ms: 301; Chunk: 7 Time/ms: 352; Chunk: 8 Time/ms: 402; Chunk: 9 Time/ms: 453; ```; (A similar result is obtained if I use the `std::cout` statement instead of the `TThread::Printf`.). Now the problem. If I run this same loop in an application with a GUI window and a `TThread` (full reproducer code is below), then I get quite weird results. The first step takes 107 ms ! And the later steps take 60 ms instead of 50 ms.; ```; Chunk: 0 Time/ms: 0; Chunk: 1 Time/ms: 107; Chunk: 2 Time/ms: 167; Chunk: 3 Time/ms: 226; Chunk: 4 Time/ms: 287; Chunk: 5 Time/ms: 347; Chunk: 6 Time/ms: 409; Chunk: 7 Time/ms: 470; Chunk: 8 Time/ms: 531; Chunk: 9 Time/ms: 592; ```; (In contrast, if I use `std::cout` instead of `Printf`, every step is perfectly 50 ms). I found out that on line https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/src/TThread.cxx#L1043, there is a timer being created, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/inc/TThread.h#L208. If I remove the `+ 10` ms and recompile ROOT, I get better results, (except for the first iteration):; ```; Chunk: 0 Time/ms: 0; Chunk: 1 Time/ms: 111; Chunk: 2 Time/ms: 161; Chunk: 3 Time/ms: 211; Chunk: 4 Time/ms: 262; Chunk: 5 Time/ms: 312; Chunk: 6 Time/ms: 362; Chunk: 7 Time/ms: 415; Chunk: 8 Time/ms: 469; Chunk: 9 Time/ms: 521; ```. ### Optional: share how it could be improved; It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at runtime, and `TThreadTimer` timeout is not configurable by the user",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/issues/8582:3432,Safety,timeout,timeout,3432,".cxx#L1043, there is a timer being created, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/inc/TThread.h#L208. If I remove the `+ 10` ms and recompile ROOT, I get better results, (except for the first iteration):; ```; Chunk: 0 Time/ms: 0; Chunk: 1 Time/ms: 111; Chunk: 2 Time/ms: 161; Chunk: 3 Time/ms: 211; Chunk: 4 Time/ms: 262; Chunk: 5 Time/ms: 312; Chunk: 6 Time/ms: 362; Chunk: 7 Time/ms: 415; Chunk: 8 Time/ms: 469; Chunk: 9 Time/ms: 521; ```. ### Optional: share how it could be improved; It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at runtime, and `TThreadTimer` timeout is not configurable by the user, thus the only solution is a fork and recompile. ### To Reproduce. 1. cd /opt/ && git clone https://github.com/CLIUtils/CLI11; 2. Download [zdt2.zip](https://github.com/root-project/root/files/6744587/zdt2.zip) and unzip it, cd into it; 3. mkdir build && cd build; 4. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../; 5. make; 6. gui/runGUI --prbs 26 -q. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 28 2021, 13:40:49 |; | From heads/th1_long@v6-25-01-1451-gaed0c8868c |; | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; If you run the full example, you might find a deadlock at the e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8582
https://github.com/root-project/root/pull/8584:204,Deployability,update,updated,204,# This Pull request:; - Translation of RooFit tutorial files based on this issue https://github.com/root-project/root/issues/8523. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8584
https://github.com/root-project/root/pull/8584:174,Testability,test,tested,174,# This Pull request:; - Translation of RooFit tutorial files based on this issue https://github.com/root-project/root/issues/8523. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8584
https://github.com/root-project/root/pull/8585:91,Testability,test,tested,91,# This Pull request:. ## Changes or fixes:; gGlobalMutex memory leak. ## Checklist:. - [x] tested changes locally. This PR fixes https://github.com/root-project/root/issues/8297,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8585
https://github.com/root-project/root/pull/8586:92,Availability,ping,ping,92,Remove --single-process which may fail on some special platforms. Trying to resolve `webgui-ping` problem on some platforms while this should be basic test for batch / headless functionality of; web-based gui,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8586
https://github.com/root-project/root/pull/8586:151,Testability,test,test,151,Remove --single-process which may fail on some special platforms. Trying to resolve `webgui-ping` problem on some platforms while this should be basic test for batch / headless functionality of; web-based gui,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8586
https://github.com/root-project/root/pull/8587:120,Testability,assert,assert,120,"Given the name, the expectation seems to be that `R__ASSERT(e)` will not; evaluate `e` if NDEBUG is defined, just like `assert()`. Use `(void)0` such that `R__ASSERT` can be followed by a semicolon, yet; the compiler knows that there is no instruction to be emitted. Even with this, `R__ASSERT` and `assert` provide different functionality,; with the former calling `::Fatal()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8587
https://github.com/root-project/root/pull/8587:300,Testability,assert,assert,300,"Given the name, the expectation seems to be that `R__ASSERT(e)` will not; evaluate `e` if NDEBUG is defined, just like `assert()`. Use `(void)0` such that `R__ASSERT` can be followed by a semicolon, yet; the compiler knows that there is no instruction to be emitted. Even with this, `R__ASSERT` and `assert` provide different functionality,; with the former calling `::Fatal()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8587
https://github.com/root-project/root/pull/8590:103,Availability,failure,failure,103,"The `TestGauss` unit tests in roottest are failing with Jonas' ROOT; build (gcc 10 on Arch Linux). The failure was tracked down to a; `nullptr` dereferencing in when accessing `RunContext::spans`. The origin of the `nullptr` is in `RooVectorDataStore::getBatches`,; where the `unordered_map` with pointers to the variables is filled via; `unordered_map::emplace`. For some reason, the key becomes a nullptr; *right after emplacing* ([link to code](https://github.com/root-project/root/blob/https://github.com/root-project/root/blob/9296e5ed912b3010456fa4b50db77f2c4c97a09a/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345)). For some other reason, wrapping the `RooAbsReal const*` pointer in a; struct that is used as the key for `RunContext::spans` solves the; problem. This is implemented in this commit. This PR is more of a draft PR for now, because before merging I would really like to understand what's going on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8590
https://github.com/root-project/root/pull/8590:123,Availability,down,down,123,"The `TestGauss` unit tests in roottest are failing with Jonas' ROOT; build (gcc 10 on Arch Linux). The failure was tracked down to a; `nullptr` dereferencing in when accessing `RunContext::spans`. The origin of the `nullptr` is in `RooVectorDataStore::getBatches`,; where the `unordered_map` with pointers to the variables is filled via; `unordered_map::emplace`. For some reason, the key becomes a nullptr; *right after emplacing* ([link to code](https://github.com/root-project/root/blob/https://github.com/root-project/root/blob/9296e5ed912b3010456fa4b50db77f2c4c97a09a/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345)). For some other reason, wrapping the `RooAbsReal const*` pointer in a; struct that is used as the key for `RunContext::spans` solves the; problem. This is implemented in this commit. This PR is more of a draft PR for now, because before merging I would really like to understand what's going on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8590
https://github.com/root-project/root/pull/8590:701,Integrability,wrap,wrapping,701,"The `TestGauss` unit tests in roottest are failing with Jonas' ROOT; build (gcc 10 on Arch Linux). The failure was tracked down to a; `nullptr` dereferencing in when accessing `RunContext::spans`. The origin of the `nullptr` is in `RooVectorDataStore::getBatches`,; where the `unordered_map` with pointers to the variables is filled via; `unordered_map::emplace`. For some reason, the key becomes a nullptr; *right after emplacing* ([link to code](https://github.com/root-project/root/blob/https://github.com/root-project/root/blob/9296e5ed912b3010456fa4b50db77f2c4c97a09a/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345)). For some other reason, wrapping the `RooAbsReal const*` pointer in a; struct that is used as the key for `RunContext::spans` solves the; problem. This is implemented in this commit. This PR is more of a draft PR for now, because before merging I would really like to understand what's going on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8590
https://github.com/root-project/root/pull/8590:313,Modifiability,variab,variables,313,"The `TestGauss` unit tests in roottest are failing with Jonas' ROOT; build (gcc 10 on Arch Linux). The failure was tracked down to a; `nullptr` dereferencing in when accessing `RunContext::spans`. The origin of the `nullptr` is in `RooVectorDataStore::getBatches`,; where the `unordered_map` with pointers to the variables is filled via; `unordered_map::emplace`. For some reason, the key becomes a nullptr; *right after emplacing* ([link to code](https://github.com/root-project/root/blob/https://github.com/root-project/root/blob/9296e5ed912b3010456fa4b50db77f2c4c97a09a/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345)). For some other reason, wrapping the `RooAbsReal const*` pointer in a; struct that is used as the key for `RunContext::spans` solves the; problem. This is implemented in this commit. This PR is more of a draft PR for now, because before merging I would really like to understand what's going on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8590
https://github.com/root-project/root/pull/8590:166,Security,access,accessing,166,"The `TestGauss` unit tests in roottest are failing with Jonas' ROOT; build (gcc 10 on Arch Linux). The failure was tracked down to a; `nullptr` dereferencing in when accessing `RunContext::spans`. The origin of the `nullptr` is in `RooVectorDataStore::getBatches`,; where the `unordered_map` with pointers to the variables is filled via; `unordered_map::emplace`. For some reason, the key becomes a nullptr; *right after emplacing* ([link to code](https://github.com/root-project/root/blob/https://github.com/root-project/root/blob/9296e5ed912b3010456fa4b50db77f2c4c97a09a/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345)). For some other reason, wrapping the `RooAbsReal const*` pointer in a; struct that is used as the key for `RunContext::spans` solves the; problem. This is implemented in this commit. This PR is more of a draft PR for now, because before merging I would really like to understand what's going on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8590
https://github.com/root-project/root/pull/8590:5,Testability,Test,TestGauss,5,"The `TestGauss` unit tests in roottest are failing with Jonas' ROOT; build (gcc 10 on Arch Linux). The failure was tracked down to a; `nullptr` dereferencing in when accessing `RunContext::spans`. The origin of the `nullptr` is in `RooVectorDataStore::getBatches`,; where the `unordered_map` with pointers to the variables is filled via; `unordered_map::emplace`. For some reason, the key becomes a nullptr; *right after emplacing* ([link to code](https://github.com/root-project/root/blob/https://github.com/root-project/root/blob/9296e5ed912b3010456fa4b50db77f2c4c97a09a/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345)). For some other reason, wrapping the `RooAbsReal const*` pointer in a; struct that is used as the key for `RunContext::spans` solves the; problem. This is implemented in this commit. This PR is more of a draft PR for now, because before merging I would really like to understand what's going on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8590
https://github.com/root-project/root/pull/8590:21,Testability,test,tests,21,"The `TestGauss` unit tests in roottest are failing with Jonas' ROOT; build (gcc 10 on Arch Linux). The failure was tracked down to a; `nullptr` dereferencing in when accessing `RunContext::spans`. The origin of the `nullptr` is in `RooVectorDataStore::getBatches`,; where the `unordered_map` with pointers to the variables is filled via; `unordered_map::emplace`. For some reason, the key becomes a nullptr; *right after emplacing* ([link to code](https://github.com/root-project/root/blob/https://github.com/root-project/root/blob/9296e5ed912b3010456fa4b50db77f2c4c97a09a/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345)). For some other reason, wrapping the `RooAbsReal const*` pointer in a; struct that is used as the key for `RunContext::spans` solves the; problem. This is implemented in this commit. This PR is more of a draft PR for now, because before merging I would really like to understand what's going on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8590
https://github.com/root-project/root/pull/8593:208,Deployability,update,updated,208,# This Pull request:. This tutorial demonstrates the use of factorials and infinite series on a cool example. ## Changes or fixes:. Added the tutorial file. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8593
https://github.com/root-project/root/pull/8593:178,Testability,test,tested,178,# This Pull request:. This tutorial demonstrates the use of factorials and infinite series on a cool example. ## Changes or fixes:. Added the tutorial file. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8593
https://github.com/root-project/root/pull/8594:110,Integrability,depend,depends,110,"## Description; This PR restructures SOFIE by separating the RModelParser_ONNX to a different directory which depends on Protobuf. . Keeping the RModelParser_ONNX in a different directory prevents any clash or segmentation violation which may happen while using the Converters for translating external models like Keras into RModel, as they can have dependency issues with Protobuf. ## Checklist:; - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8594
https://github.com/root-project/root/pull/8594:350,Integrability,depend,dependency,350,"## Description; This PR restructures SOFIE by separating the RModelParser_ONNX to a different directory which depends on Protobuf. . Keeping the RModelParser_ONNX in a different directory prevents any clash or segmentation violation which may happen while using the Converters for translating external models like Keras into RModel, as they can have dependency issues with Protobuf. ## Checklist:; - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8594
https://github.com/root-project/root/pull/8594:404,Testability,test,tested,404,"## Description; This PR restructures SOFIE by separating the RModelParser_ONNX to a different directory which depends on Protobuf. . Keeping the RModelParser_ONNX in a different directory prevents any clash or segmentation violation which may happen while using the Converters for translating external models like Keras into RModel, as they can have dependency issues with Protobuf. ## Checklist:; - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8594
https://github.com/root-project/root/pull/8595:114,Energy Efficiency,reduce,reduces,114,"Part of the RooProdPdf modernization with the intention of eventually; deprecating the RooLinkedList. This change reduces the size of a RooProdPdf from 1600 to 1496 bytes. A manual schema evolution rule to test the reading of older RooProdPdfs; is implemented in the `LinkDef.h`. The schma evolution is tested by; the stressRooFit tests, which are reading some RooProdPdfs from the; reference files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8595
https://github.com/root-project/root/pull/8595:206,Testability,test,test,206,"Part of the RooProdPdf modernization with the intention of eventually; deprecating the RooLinkedList. This change reduces the size of a RooProdPdf from 1600 to 1496 bytes. A manual schema evolution rule to test the reading of older RooProdPdfs; is implemented in the `LinkDef.h`. The schma evolution is tested by; the stressRooFit tests, which are reading some RooProdPdfs from the; reference files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8595
https://github.com/root-project/root/pull/8595:303,Testability,test,tested,303,"Part of the RooProdPdf modernization with the intention of eventually; deprecating the RooLinkedList. This change reduces the size of a RooProdPdf from 1600 to 1496 bytes. A manual schema evolution rule to test the reading of older RooProdPdfs; is implemented in the `LinkDef.h`. The schma evolution is tested by; the stressRooFit tests, which are reading some RooProdPdfs from the; reference files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8595
https://github.com/root-project/root/pull/8595:331,Testability,test,tests,331,"Part of the RooProdPdf modernization with the intention of eventually; deprecating the RooLinkedList. This change reduces the size of a RooProdPdf from 1600 to 1496 bytes. A manual schema evolution rule to test the reading of older RooProdPdfs; is implemented in the `LinkDef.h`. The schma evolution is tested by; the stressRooFit tests, which are reading some RooProdPdfs from the; reference files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8595
https://github.com/root-project/root/pull/8596:2650,Deployability,integrat,integrate,2650,"ut default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing to that makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of course, a review is already most welcome. Just make sure to only look at the diff from the final commit: https://github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:3626,Deployability,Update,Update,3626,"ore sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of course, a review is already most welcome. Just make sure to only look at the diff from the final commit: https://github.com/root-project/root/commit/6b129bedf5f6fe2e971c0a24fce0bf53e6c40284~~. **Update**: two of the above dependency PRs were merged. Only #8567 still needs to be merged and hence is also still included in this PR to make it compile. I have marked these three `math/minuit2` files with a review comment. All the other files actually do belong to this PR. So, in short: ready for review!. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:3986,Deployability,update,updated,3986,"ore sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of course, a review is already most welcome. Just make sure to only look at the diff from the final commit: https://github.com/root-project/root/commit/6b129bedf5f6fe2e971c0a24fce0bf53e6c40284~~. **Update**: two of the above dependency PRs were merged. Only #8567 still needs to be merged and hence is also still included in this PR to make it compile. I have marked these three `math/minuit2` files with a review comment. All the other files actually do belong to this PR. So, in short: ready for review!. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:2650,Integrability,integrat,integrate,2650,"ut default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing to that makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of course, a review is already most welcome. Just make sure to only look at the diff from the final commit: https://github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:3002,Integrability,depend,depends,3002,"kes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of course, a review is already most welcome. Just make sure to only look at the diff from the final commit: https://github.com/root-project/root/commit/6b129bedf5f6fe2e971c0a24fce0bf53e6c40284~~. **Update**: two of the above dependency PRs were merged. Only #8567 still needs to be merged and hence is also still included in this PR to make it compile. I have marked these three `math/minuit2` files with a review comment. All the other files actually do belong to this PR. So, in short: ready for review!. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necess",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:3653,Integrability,depend,dependency,3653,"ore sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of course, a review is already most welcome. Just make sure to only look at the diff from the final commit: https://github.com/root-project/root/commit/6b129bedf5f6fe2e971c0a24fce0bf53e6c40284~~. **Update**: two of the above dependency PRs were merged. Only #8567 still needs to be merged and hence is also still included in this PR to make it compile. I have marked these three `math/minuit2` files with a review comment. All the other files actually do belong to this PR. So, in short: ready for review!. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:209,Modifiability,refactor,refactored,209,"This PR adds `RooGradMinimizerFcn`, an alternative to `RooMinimizerFcn` that calculates gradient itself outside of Minuit during minimization. To be able to use `RooGradMinimizerFcn`, `RooMinimizer` had to be refactored to be able to use `RooAbsMinimizerFcn` instead of the concrete RooMinimizerFcn class. To accomodate this change, several other changes had to be made:; - `_optConst` and `_func` members were removed, since these are now managed by the `*MinimizerFcn`.; - This means also things like function name and title, but also optimization switches, were moved to `RooAbsMinimizerFcn` as well.; - Functions `getMultiGenFcn`, `fitterFcn` and `fitFcn` were added which are used in several places as convenience functions to access the concrete `RooAbsMinimizerFcn` object with its proper type. The concrete type matters, for instance, when passing the class to the derivator, because a gradient enabled `*MinimizerFcn` needs to take different overloads than the classic function-value-only `RooMinimizerFcn`. A `FcnMode` enum class was added for this disambiguation as well.; - Construction of a `RooMinimizer` can be done the same as always when using a classic `RooMinimizerFcn`. However, to activate `RooGradMinimizerFcn`, a new create function can be used with the proper type as template parameter. In a later PR, this pattern will be extended with another gradient-enabled `RooAbsMinimizerFcn` instantiation that will also include multi-processing implementations. Since we had to refactor construction, we took the opportunity to also put default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:1348,Modifiability,extend,extended,1348,"nc` members were removed, since these are now managed by the `*MinimizerFcn`.; - This means also things like function name and title, but also optimization switches, were moved to `RooAbsMinimizerFcn` as well.; - Functions `getMultiGenFcn`, `fitterFcn` and `fitFcn` were added which are used in several places as convenience functions to access the concrete `RooAbsMinimizerFcn` object with its proper type. The concrete type matters, for instance, when passing the class to the derivator, because a gradient enabled `*MinimizerFcn` needs to take different overloads than the classic function-value-only `RooMinimizerFcn`. A `FcnMode` enum class was added for this disambiguation as well.; - Construction of a `RooMinimizer` can be done the same as always when using a classic `RooMinimizerFcn`. However, to activate `RooGradMinimizerFcn`, a new create function can be used with the proper type as template parameter. In a later PR, this pattern will be extended with another gradient-enabled `RooAbsMinimizerFcn` instantiation that will also include multi-processing implementations. Since we had to refactor construction, we took the opportunity to also put default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing to that makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementation",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:1495,Modifiability,refactor,refactor,1495,"e moved to `RooAbsMinimizerFcn` as well.; - Functions `getMultiGenFcn`, `fitterFcn` and `fitFcn` were added which are used in several places as convenience functions to access the concrete `RooAbsMinimizerFcn` object with its proper type. The concrete type matters, for instance, when passing the class to the derivator, because a gradient enabled `*MinimizerFcn` needs to take different overloads than the classic function-value-only `RooMinimizerFcn`. A `FcnMode` enum class was added for this disambiguation as well.; - Construction of a `RooMinimizer` can be done the same as always when using a classic `RooMinimizerFcn`. However, to activate `RooGradMinimizerFcn`, a new create function can be used with the proper type as template parameter. In a later PR, this pattern will be extended with another gradient-enabled `RooAbsMinimizerFcn` instantiation that will also include multi-processing implementations. Since we had to refactor construction, we took the opportunity to also put default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing to that makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerF",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:537,Performance,optimiz,optimization,537,"This PR adds `RooGradMinimizerFcn`, an alternative to `RooMinimizerFcn` that calculates gradient itself outside of Minuit during minimization. To be able to use `RooGradMinimizerFcn`, `RooMinimizer` had to be refactored to be able to use `RooAbsMinimizerFcn` instead of the concrete RooMinimizerFcn class. To accomodate this change, several other changes had to be made:; - `_optConst` and `_func` members were removed, since these are now managed by the `*MinimizerFcn`.; - This means also things like function name and title, but also optimization switches, were moved to `RooAbsMinimizerFcn` as well.; - Functions `getMultiGenFcn`, `fitterFcn` and `fitFcn` were added which are used in several places as convenience functions to access the concrete `RooAbsMinimizerFcn` object with its proper type. The concrete type matters, for instance, when passing the class to the derivator, because a gradient enabled `*MinimizerFcn` needs to take different overloads than the classic function-value-only `RooMinimizerFcn`. A `FcnMode` enum class was added for this disambiguation as well.; - Construction of a `RooMinimizer` can be done the same as always when using a classic `RooMinimizerFcn`. However, to activate `RooGradMinimizerFcn`, a new create function can be used with the proper type as template parameter. In a later PR, this pattern will be extended with another gradient-enabled `RooAbsMinimizerFcn` instantiation that will also include multi-processing implementations. Since we had to refactor construction, we took the opportunity to also put default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:732,Security,access,access,732,"This PR adds `RooGradMinimizerFcn`, an alternative to `RooMinimizerFcn` that calculates gradient itself outside of Minuit during minimization. To be able to use `RooGradMinimizerFcn`, `RooMinimizer` had to be refactored to be able to use `RooAbsMinimizerFcn` instead of the concrete RooMinimizerFcn class. To accomodate this change, several other changes had to be made:; - `_optConst` and `_func` members were removed, since these are now managed by the `*MinimizerFcn`.; - This means also things like function name and title, but also optimization switches, were moved to `RooAbsMinimizerFcn` as well.; - Functions `getMultiGenFcn`, `fitterFcn` and `fitFcn` were added which are used in several places as convenience functions to access the concrete `RooAbsMinimizerFcn` object with its proper type. The concrete type matters, for instance, when passing the class to the derivator, because a gradient enabled `*MinimizerFcn` needs to take different overloads than the classic function-value-only `RooMinimizerFcn`. A `FcnMode` enum class was added for this disambiguation as well.; - Construction of a `RooMinimizer` can be done the same as always when using a classic `RooMinimizerFcn`. However, to activate `RooGradMinimizerFcn`, a new create function can be used with the proper type as template parameter. In a later PR, this pattern will be extended with another gradient-enabled `RooAbsMinimizerFcn` instantiation that will also include multi-processing implementations. Since we had to refactor construction, we took the opportunity to also put default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:2054,Testability,test,tested,2054,"ll.; - Construction of a `RooMinimizer` can be done the same as always when using a classic `RooMinimizerFcn`. However, to activate `RooGradMinimizerFcn`, a new create function can be used with the proper type as template parameter. In a later PR, this pattern will be extended with another gradient-enabled `RooAbsMinimizerFcn` instantiation that will also include multi-processing implementations. Since we had to refactor construction, we took the opportunity to also put default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing to that makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they curren",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:2222,Testability,test,test,2222,"to activate `RooGradMinimizerFcn`, a new create function can be used with the proper type as template parameter. In a later PR, this pattern will be extended with another gradient-enabled `RooAbsMinimizerFcn` instantiation that will also include multi-processing implementations. Since we had to refactor construction, we took the opportunity to also put default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing to that makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not mer",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:2245,Testability,test,testRooGradMinimizer,2245,"to activate `RooGradMinimizerFcn`, a new create function can be used with the proper type as template parameter. In a later PR, this pattern will be extended with another gradient-enabled `RooAbsMinimizerFcn` instantiation that will also include multi-processing implementations. Since we had to refactor construction, we took the opportunity to also put default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing to that makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not mer",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:2338,Testability,test,tests,2338,"be extended with another gradient-enabled `RooAbsMinimizerFcn` instantiation that will also include multi-processing implementations. Since we had to refactor construction, we took the opportunity to also put default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing to that makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probab",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:2417,Testability,test,test,2417,"tion that will also include multi-processing implementations. Since we had to refactor construction, we took the opportunity to also put default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing to that makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/pull/8596:3956,Testability,test,tested,3956,"ore sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of course, a review is already most welcome. Just make sure to only look at the diff from the final commit: https://github.com/root-project/root/commit/6b129bedf5f6fe2e971c0a24fce0bf53e6c40284~~. **Update**: two of the above dependency PRs were merged. Only #8567 still needs to be merged and hence is also still included in this PR to make it compile. I have marked these three `math/minuit2` files with a review comment. All the other files actually do belong to this PR. So, in short: ready for review!. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8596
https://github.com/root-project/root/issues/8597:1164,Performance,load,load,1164,"### Describe the bug; I have a script drawing a TH2 histogram, which by default plots in Bird format.; Sometimes, I activate in the script also a TGLViewer (TEve window) on a separate window. When I do that, the palette of the TH2 histogram changes. I checked and someone else saw the same issue, see http://nuclear.korea.ac.kr/~lamps/kebi_doc/KBRun_8cc_source.html line 1595. ### Expected behavior; The default palette is not changed, or a warning is issued (or it's documented in the Doxygen-HTML code). ### To Reproduce; 1. Draw a TH2 using COLZ, with and without having a separate window with a TGLViewer / TEveWindow. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 17 2021, 10:49:42 |; | From heads/master@v6-25-01-861-g5ea261143f |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; My current workaround is to call gSytle->SetPalette(kBird) after I load the 3D viewer:. ```; TGLViewer* v = eM->GetDefaultGLViewer();; v->SetClearColor(kWhite);; v->SetGuideState(2,true,false,NULL);; v->SetResetCamerasOnUpdate(false);; eM->GetMainWindow()->MoveResize(1200,57,700,600);; eM->FullRedraw3D(kTRUE);. gStyle->SetPalette(kBird);; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8597
https://github.com/root-project/root/issues/8599:307,Safety,safe,safe,307,"Starting from current master, we generate JSON for different v7 tutorials and embed them into HTML pages to; provide interactive images like:. https://root.cern/doc/master/draw__rh1__twoaxes_8cxx.html. For these images we are using https://root.cern/js/dev/ version, which constantly changes.; To be on the safe side, we should preserve JSROOT version with generated reference guide.; Most easy way - just copy JSROOT from ROOT sources into directory with doxygen HTML files ; and use that version of JSROOT in reference guide.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8599
https://github.com/root-project/root/issues/8599:377,Usability,guid,guide,377,"Starting from current master, we generate JSON for different v7 tutorials and embed them into HTML pages to; provide interactive images like:. https://root.cern/doc/master/draw__rh1__twoaxes_8cxx.html. For these images we are using https://root.cern/js/dev/ version, which constantly changes.; To be on the safe side, we should preserve JSROOT version with generated reference guide.; Most easy way - just copy JSROOT from ROOT sources into directory with doxygen HTML files ; and use that version of JSROOT in reference guide.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8599
https://github.com/root-project/root/issues/8599:521,Usability,guid,guide,521,"Starting from current master, we generate JSON for different v7 tutorials and embed them into HTML pages to; provide interactive images like:. https://root.cern/doc/master/draw__rh1__twoaxes_8cxx.html. For these images we are using https://root.cern/js/dev/ version, which constantly changes.; To be on the safe side, we should preserve JSROOT version with generated reference guide.; Most easy way - just copy JSROOT from ROOT sources into directory with doxygen HTML files ; and use that version of JSROOT in reference guide.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8599
https://github.com/root-project/root/pull/8600:4,Modifiability,config,configure,4,Let configure custom font - either as woff/woff2 files or just url to external resource.; Provide demo in `draw_pave.cxx` macro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8600
https://github.com/root-project/root/issues/8610:328,Availability,error,error,328,"https://github.com/root-project/root/blob/30fcf1f071d36a4142daf9f2e75aa6c1338fec38/core/foundation/inc/ROOT/libcpp_string_view.h#L10. During the execution of `cmake --build . -- install` per [this wiki's instruction](https://root.cern/install/#build-from-source) on branch v6-22-08: cmake crashes at 26%, throwing the following error:. `[ 26%] Building CXX object core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RConversionRuleParser.cxx.o; In file included from[REDACTED]/root/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h:545,; from [REDACTED]/root/core/foundation/inc/ROOT/RStringView.hxx:26,; from [REDACTED]root/core/foundation/inc/TClassEdit.h:65,; from[REDACTED]/root/core/foundation/src/RConversionRuleParser.cxx:18:; [REDACTED]root/core/foundation/inc/ROOT/libcpp_string_view.h: In member function ‘constexpr std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::size_type std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::max_size() const’:; [REDACTED]/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’; 275 | pe max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; |`. The following insertion at the reference above fixes this behaviour:. `#include <limits>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8610
https://github.com/root-project/root/issues/8610:1055,Availability,error,error,1055,"https://github.com/root-project/root/blob/30fcf1f071d36a4142daf9f2e75aa6c1338fec38/core/foundation/inc/ROOT/libcpp_string_view.h#L10. During the execution of `cmake --build . -- install` per [this wiki's instruction](https://root.cern/install/#build-from-source) on branch v6-22-08: cmake crashes at 26%, throwing the following error:. `[ 26%] Building CXX object core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RConversionRuleParser.cxx.o; In file included from[REDACTED]/root/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h:545,; from [REDACTED]/root/core/foundation/inc/ROOT/RStringView.hxx:26,; from [REDACTED]root/core/foundation/inc/TClassEdit.h:65,; from[REDACTED]/root/core/foundation/src/RConversionRuleParser.cxx:18:; [REDACTED]root/core/foundation/inc/ROOT/libcpp_string_view.h: In member function ‘constexpr std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::size_type std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::max_size() const’:; [REDACTED]/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’; 275 | pe max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; |`. The following insertion at the reference above fixes this behaviour:. `#include <limits>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8610
https://github.com/root-project/root/issues/8610:178,Deployability,install,install,178,"https://github.com/root-project/root/blob/30fcf1f071d36a4142daf9f2e75aa6c1338fec38/core/foundation/inc/ROOT/libcpp_string_view.h#L10. During the execution of `cmake --build . -- install` per [this wiki's instruction](https://root.cern/install/#build-from-source) on branch v6-22-08: cmake crashes at 26%, throwing the following error:. `[ 26%] Building CXX object core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RConversionRuleParser.cxx.o; In file included from[REDACTED]/root/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h:545,; from [REDACTED]/root/core/foundation/inc/ROOT/RStringView.hxx:26,; from [REDACTED]root/core/foundation/inc/TClassEdit.h:65,; from[REDACTED]/root/core/foundation/src/RConversionRuleParser.cxx:18:; [REDACTED]root/core/foundation/inc/ROOT/libcpp_string_view.h: In member function ‘constexpr std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::size_type std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::max_size() const’:; [REDACTED]/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’; 275 | pe max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; |`. The following insertion at the reference above fixes this behaviour:. `#include <limits>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8610
https://github.com/root-project/root/issues/8610:235,Deployability,install,install,235,"https://github.com/root-project/root/blob/30fcf1f071d36a4142daf9f2e75aa6c1338fec38/core/foundation/inc/ROOT/libcpp_string_view.h#L10. During the execution of `cmake --build . -- install` per [this wiki's instruction](https://root.cern/install/#build-from-source) on branch v6-22-08: cmake crashes at 26%, throwing the following error:. `[ 26%] Building CXX object core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RConversionRuleParser.cxx.o; In file included from[REDACTED]/root/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h:545,; from [REDACTED]/root/core/foundation/inc/ROOT/RStringView.hxx:26,; from [REDACTED]root/core/foundation/inc/TClassEdit.h:65,; from[REDACTED]/root/core/foundation/src/RConversionRuleParser.cxx:18:; [REDACTED]root/core/foundation/inc/ROOT/libcpp_string_view.h: In member function ‘constexpr std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::size_type std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::max_size() const’:; [REDACTED]/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’; 275 | pe max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; |`. The following insertion at the reference above fixes this behaviour:. `#include <limits>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8610
https://github.com/root-project/root/pull/8611:278,Deployability,integrat,integrator,278,"This is to avoid output that doesn't indicate any problem and only makes; the test output harder to interpret. That's how the output of test 27 was before this commit:; ```; [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]) using numeric integrator RooIntegrator1D to calculate Int(y); Test 27 : Integration over non-rectangular regions...............OK; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8611
https://github.com/root-project/root/pull/8611:336,Deployability,Integrat,Integration,336,"This is to avoid output that doesn't indicate any problem and only makes; the test output harder to interpret. That's how the output of test 27 was before this commit:; ```; [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]) using numeric integrator RooIntegrator1D to calculate Int(y); Test 27 : Integration over non-rectangular regions...............OK; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8611
https://github.com/root-project/root/pull/8611:278,Integrability,integrat,integrator,278,"This is to avoid output that doesn't indicate any problem and only makes; the test output harder to interpret. That's how the output of test 27 was before this commit:; ```; [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]) using numeric integrator RooIntegrator1D to calculate Int(y); Test 27 : Integration over non-rectangular regions...............OK; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8611
https://github.com/root-project/root/pull/8611:336,Integrability,Integrat,Integration,336,"This is to avoid output that doesn't indicate any problem and only makes; the test output harder to interpret. That's how the output of test 27 was before this commit:; ```; [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]) using numeric integrator RooIntegrator1D to calculate Int(y); Test 27 : Integration over non-rectangular regions...............OK; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8611
https://github.com/root-project/root/pull/8611:11,Safety,avoid,avoid,11,"This is to avoid output that doesn't indicate any problem and only makes; the test output harder to interpret. That's how the output of test 27 was before this commit:; ```; [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]) using numeric integrator RooIntegrator1D to calculate Int(y); Test 27 : Integration over non-rectangular regions...............OK; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8611
https://github.com/root-project/root/pull/8611:78,Testability,test,test,78,"This is to avoid output that doesn't indicate any problem and only makes; the test output harder to interpret. That's how the output of test 27 was before this commit:; ```; [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]) using numeric integrator RooIntegrator1D to calculate Int(y); Test 27 : Integration over non-rectangular regions...............OK; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8611
https://github.com/root-project/root/pull/8611:136,Testability,test,test,136,"This is to avoid output that doesn't indicate any problem and only makes; the test output harder to interpret. That's how the output of test 27 was before this commit:; ```; [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]) using numeric integrator RooIntegrator1D to calculate Int(y); Test 27 : Integration over non-rectangular regions...............OK; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8611
https://github.com/root-project/root/pull/8611:326,Testability,Test,Test,326,"This is to avoid output that doesn't indicate any problem and only makes; the test output harder to interpret. That's how the output of test 27 was before this commit:; ```; [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]) using numeric integrator RooIntegrator1D to calculate Int(y); Test 27 : Integration over non-rectangular regions...............OK; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8611
https://github.com/root-project/root/pull/8613:169,Deployability,update,updated,169,# This Pull request:. Adds a tutorial demonstrating the 7 ways to normalize a histogram. ## Changes or fixes:. Above. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8613
https://github.com/root-project/root/pull/8613:139,Testability,test,tested,139,# This Pull request:. Adds a tutorial demonstrating the 7 ways to normalize a histogram. ## Changes or fixes:. Above. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8613
https://github.com/root-project/root/pull/8614:1555,Availability,error,error,1555,"ccepts a C-style string. In most cases, cppyy will just; tell you that the arguments don't match the function signature, but; there are corner cases in which an uninterpretable stack trace is; created. Here is a reproducer for that, inspired by the; RooAbsDataHelper that cannot be used from pyROOT without this commit:. ```Python; import ROOT. ROOT.gInterpreter.ProcessLine("""""". struct MyClass {. std::shared_ptr<RooAbsData> _dataset;. template<typename... Args_t>; MyClass(Args_t&&... args); : _dataset{ new RooDataSet(std::forward<Args_t>(args)...) }; {; _dataset->Print();; }. };. """"""). x = ROOT.RooRealVar(""x"", ""x"", -5., 5.); y = ROOT.RooRealVar(""y"", ""y"", -50., 50.). argSet = ROOT.RooArgSet(x, y); helper = ROOT.MyClass(""dataset"",""Title of dataset"", argSet); ```. This change should not break much user code, because a; `std::string_view` can also be implicitely constructed from a C-style; string or a TString. There is one problem if one passed a `nullptr` before, a; `std::string_view` can't be constructed from a `nullptr`. But a; `nullptr` for name and title is a mistake anyway, so it can be expected; from the users the fix these error that are caught at compile-time. The other backwards incompatibility is that for builds with the C++14; standard, the `TString` to `string_view` conversion does not work.; However, this problem is solved by templated constructors that take; `ROOT::Internal::TStringView` instead. Here is some code to test that the `RooDataSetHelper` doesn't work without this PR, but works with the PR:; ```Python; import ROOT. ROOT.ROOT.EnableImplicitMT(). d = ROOT.RDataFrame(2000000); dd = d.Define(""x"", ""gRandom->Uniform(-5., 5.)"") \; .Define(""y"", ""gRandom->Gaus(1., 3.)""). x = ROOT.RooRealVar(""x"", ""x"", -5., 5.); y = ROOT.RooRealVar(""y"", ""y"", -50., 50.); x.setBins(10); y.setBins(20). rdhMaker = ROOT.RooDataSetHelper(""dataset"",""Title of dataset"", ROOT.RooArgSet(x, y)); rooDataSet = dd.Book(ROOT.std.move(rdhMaker), (""x"", ""y"")); rooDataSet.GetPtr().Print(); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8614
https://github.com/root-project/root/pull/8614:1862,Testability,test,test,1862,"ccepts a C-style string. In most cases, cppyy will just; tell you that the arguments don't match the function signature, but; there are corner cases in which an uninterpretable stack trace is; created. Here is a reproducer for that, inspired by the; RooAbsDataHelper that cannot be used from pyROOT without this commit:. ```Python; import ROOT. ROOT.gInterpreter.ProcessLine("""""". struct MyClass {. std::shared_ptr<RooAbsData> _dataset;. template<typename... Args_t>; MyClass(Args_t&&... args); : _dataset{ new RooDataSet(std::forward<Args_t>(args)...) }; {; _dataset->Print();; }. };. """"""). x = ROOT.RooRealVar(""x"", ""x"", -5., 5.); y = ROOT.RooRealVar(""y"", ""y"", -50., 50.). argSet = ROOT.RooArgSet(x, y); helper = ROOT.MyClass(""dataset"",""Title of dataset"", argSet); ```. This change should not break much user code, because a; `std::string_view` can also be implicitely constructed from a C-style; string or a TString. There is one problem if one passed a `nullptr` before, a; `std::string_view` can't be constructed from a `nullptr`. But a; `nullptr` for name and title is a mistake anyway, so it can be expected; from the users the fix these error that are caught at compile-time. The other backwards incompatibility is that for builds with the C++14; standard, the `TString` to `string_view` conversion does not work.; However, this problem is solved by templated constructors that take; `ROOT::Internal::TStringView` instead. Here is some code to test that the `RooDataSetHelper` doesn't work without this PR, but works with the PR:; ```Python; import ROOT. ROOT.ROOT.EnableImplicitMT(). d = ROOT.RDataFrame(2000000); dd = d.Define(""x"", ""gRandom->Uniform(-5., 5.)"") \; .Define(""y"", ""gRandom->Gaus(1., 3.)""). x = ROOT.RooRealVar(""x"", ""x"", -5., 5.); y = ROOT.RooRealVar(""y"", ""y"", -50., 50.); x.setBins(10); y.setBins(20). rdhMaker = ROOT.RooDataSetHelper(""dataset"",""Title of dataset"", ROOT.RooArgSet(x, y)); rooDataSet = dd.Book(ROOT.std.move(rdhMaker), (""x"", ""y"")); rooDataSet.GetPtr().Print(); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8614
https://github.com/root-project/root/issues/8615:269,Availability,Error,ErrorType,269,"### Explain what you would like to see improved. When I do a chi-2 calculation in RooFit, with [RooAbsPdf::createChi2](https://root.cern.ch/doc/master/classRooAbsPdf.html#a37b90418e779e3ecd92d43c42745d672), there is an option `DataError`, which is of type [RooAbsData::ErrorType](https://root.cern.ch/doc/master/classRooAbsData.html#a3f1b47ae0cc4e217f514a8e4331f7e88). There are options Expected error [RooAbsData::Expected], and also Poisson interval [RooAbsData::Poisson]. This is a bit confusing: how exactly do you calculate the expected error? Is it just the square root of the pdf (that is Poisson, but for the function, not data)? Could you please add that to the documentation?. I could not find it on the forum or in the source code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8615
https://github.com/root-project/root/issues/8615:396,Availability,error,error,396,"### Explain what you would like to see improved. When I do a chi-2 calculation in RooFit, with [RooAbsPdf::createChi2](https://root.cern.ch/doc/master/classRooAbsPdf.html#a37b90418e779e3ecd92d43c42745d672), there is an option `DataError`, which is of type [RooAbsData::ErrorType](https://root.cern.ch/doc/master/classRooAbsData.html#a3f1b47ae0cc4e217f514a8e4331f7e88). There are options Expected error [RooAbsData::Expected], and also Poisson interval [RooAbsData::Poisson]. This is a bit confusing: how exactly do you calculate the expected error? Is it just the square root of the pdf (that is Poisson, but for the function, not data)? Could you please add that to the documentation?. I could not find it on the forum or in the source code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8615
https://github.com/root-project/root/issues/8615:542,Availability,error,error,542,"### Explain what you would like to see improved. When I do a chi-2 calculation in RooFit, with [RooAbsPdf::createChi2](https://root.cern.ch/doc/master/classRooAbsPdf.html#a37b90418e779e3ecd92d43c42745d672), there is an option `DataError`, which is of type [RooAbsData::ErrorType](https://root.cern.ch/doc/master/classRooAbsData.html#a3f1b47ae0cc4e217f514a8e4331f7e88). There are options Expected error [RooAbsData::Expected], and also Poisson interval [RooAbsData::Poisson]. This is a bit confusing: how exactly do you calculate the expected error? Is it just the square root of the pdf (that is Poisson, but for the function, not data)? Could you please add that to the documentation?. I could not find it on the forum or in the source code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8615
https://github.com/root-project/root/pull/8616:393,Testability,test,test,393,"evaluateSpan() is a fallback for classes that don't implement an optimised; version of the batch computation function. It used to visit the entire; subtree in single-value mode to compute a batch of values.; Using RooAbsReal::writeToCache(), one should be able to get away with; visiting only the next level. This should speed up computations, because; less nodes are visited. Also: Silence a test that was printing useless things.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8616
https://github.com/root-project/root/pull/8617:97,Deployability,update,update,97,Disable the silly workaround for cling not being able to parse the STL headers anymore after the update of Visual Studio v16.7.0. Works now with the upgrade of LLVM and Visual Studio 16.10.3.; This workaround had side effects when trying to use code supporting CUDA (e.g. boost) inside the interpreter.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8617
https://github.com/root-project/root/pull/8617:149,Deployability,upgrade,upgrade,149,Disable the silly workaround for cling not being able to parse the STL headers anymore after the update of Visual Studio v16.7.0. Works now with the upgrade of LLVM and Visual Studio 16.10.3.; This workaround had side effects when trying to use code supporting CUDA (e.g. boost) inside the interpreter.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8617
https://github.com/root-project/root/issues/8618:506,Availability,Down,Download,506,"- [x] Checked for duplicates. ### Describe the bug; In a divided canvas, after some filling and ""update"", I see some weird horizontal lines of the color palette reaching over a TH2:. ![image](https://user-images.githubusercontent.com/10653970/124624102-dec9a500-de7c-11eb-9784-d65c87d26679.png). ### Expected behavior; Palette lines stay were they were in the beginning.; ![image](https://user-images.githubusercontent.com/10653970/124624297-0e78ad00-de7d-11eb-82f8-a27d2d7222b3.png). ### To Reproduce; 1. Download [bugpalette.zip](https://github.com/root-project/root/files/6771012/bugpalette.zip); 2. Run as `root -l compton_reco.cpp+(2,0,true,true)`; 3. Click one on the ""next event arrow""; 4. Click again, artefact appears; 5. If you keep clicking, you will see that the lines move with the palette as the scale gets recalculated. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 17 2021, 10:49:42 |; | From heads/master@v6-25-01-861-g5ea261143f |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8618
https://github.com/root-project/root/issues/8618:97,Deployability,update,update,97,"- [x] Checked for duplicates. ### Describe the bug; In a divided canvas, after some filling and ""update"", I see some weird horizontal lines of the color palette reaching over a TH2:. ![image](https://user-images.githubusercontent.com/10653970/124624102-dec9a500-de7c-11eb-9784-d65c87d26679.png). ### Expected behavior; Palette lines stay were they were in the beginning.; ![image](https://user-images.githubusercontent.com/10653970/124624297-0e78ad00-de7d-11eb-82f8-a27d2d7222b3.png). ### To Reproduce; 1. Download [bugpalette.zip](https://github.com/root-project/root/files/6771012/bugpalette.zip); 2. Run as `root -l compton_reco.cpp+(2,0,true,true)`; 3. Click one on the ""next event arrow""; 4. Click again, artefact appears; 5. If you keep clicking, you will see that the lines move with the palette as the scale gets recalculated. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 17 2021, 10:49:42 |; | From heads/master@v6-25-01-861-g5ea261143f |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8618
https://github.com/root-project/root/pull/8620:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [X] tested changes locally. This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8620
https://github.com/root-project/root/issues/8624:229,Integrability,depend,depend,229,"### Explain what you would like to see improved; When modifying ROOT source code (and even when not), it takes quite some time to recompile, even with ccache enabled. It seems that many things are re-compiled even if they do not depend directly on each other. ### Optional: share how it could be improved; Remove unneeded dependencies. ### To Reproduce; No-modification at all of the source code, ccache ON.; 1. cd into build directory; 2. Call `time make`; 3. Takes 59 seconds with 1 core; 4. Takes 7 seconds with 32 cores. Quite some time is spent on these lines, they seem to be rebuilt even if nothing was changed:; ```; [ 76%] Built target X86CommonTableGen; [ 76%] Built target LLVMX86Info; [ 76%] Built target LLVMX86AsmParser; [ 76%] Built target LLVMX86Utils; [ 76%] Built target LLVMX86Disassembler; [ 76%] Built target LLVMX86Desc; [ 76%] Built target LLVMX86CodeGen; ```. Now, an example with modification:; 1. cd into build directory; 2. Call `touch sourceDir/core/base/src/TROOT.cxx`; 3. Call `time make`; 4. Takes 485 seconds in 1 core; 5. Takes 102 seconds in 32 cores. Many dictionaries `G__.cxx`, `.pcm` objects are being rebuilt and libraries relinked even if no header changed. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 07 2021, 12:59:42 |; | From heads/master@v6-25-01-1572-gaa21d63ca3 |; | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; Maybe related https://github.com/root-project/root/pull/791",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8624
https://github.com/root-project/root/issues/8624:322,Integrability,depend,dependencies,322,"### Explain what you would like to see improved; When modifying ROOT source code (and even when not), it takes quite some time to recompile, even with ccache enabled. It seems that many things are re-compiled even if they do not depend directly on each other. ### Optional: share how it could be improved; Remove unneeded dependencies. ### To Reproduce; No-modification at all of the source code, ccache ON.; 1. cd into build directory; 2. Call `time make`; 3. Takes 59 seconds with 1 core; 4. Takes 7 seconds with 32 cores. Quite some time is spent on these lines, they seem to be rebuilt even if nothing was changed:; ```; [ 76%] Built target X86CommonTableGen; [ 76%] Built target LLVMX86Info; [ 76%] Built target LLVMX86AsmParser; [ 76%] Built target LLVMX86Utils; [ 76%] Built target LLVMX86Disassembler; [ 76%] Built target LLVMX86Desc; [ 76%] Built target LLVMX86CodeGen; ```. Now, an example with modification:; 1. cd into build directory; 2. Call `touch sourceDir/core/base/src/TROOT.cxx`; 3. Call `time make`; 4. Takes 485 seconds in 1 core; 5. Takes 102 seconds in 32 cores. Many dictionaries `G__.cxx`, `.pcm` objects are being rebuilt and libraries relinked even if no header changed. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 07 2021, 12:59:42 |; | From heads/master@v6-25-01-1572-gaa21d63ca3 |; | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; Maybe related https://github.com/root-project/root/pull/791",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8624
https://github.com/root-project/root/pull/8625:278,Deployability,update,updated,278,# This Pull request:. ## Changes or fixes:. Adds a tutorial demonstrating how the changing of the range can zoom into the histogram. As discussed in [this](https://root-forum.cern.ch/t/histogram-x-axis-range/12815) forum post. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8625
https://github.com/root-project/root/pull/8625:248,Testability,test,tested,248,# This Pull request:. ## Changes or fixes:. Adds a tutorial demonstrating how the changing of the range can zoom into the histogram. As discussed in [this](https://root-forum.cern.ch/t/histogram-x-axis-range/12815) forum post. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8625
https://github.com/root-project/root/pull/8627:63,Usability,guid,guide-broken,63,As suggested here: https://root-forum.cern.ch/t/root-reference-guide-broken/45741,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8627
https://github.com/root-project/root/pull/8629:138,Modifiability,config,configure,138,"- fill style in `RAttrFill`; - line style in `RAttrLine`; - font kind in `RAttrFont`; - text align in `RAttrText`. Provide possibility to configure custom line pattern directly in `RAttrLine`. Shown in `rline_style.cxx` macro. Improve positioning of `RPave` and all derived classes. ; One can select any corner (default is `kTopRight`) and specify `offsetX` and `offsetY` relative to that corner.; By default frame corners are used, but if set `onFrame = false`, pad corners are used. Let mark `RFont` instance as default for the pad - in this case font will be used as default for any text output on the pad if font was not configured for that text.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8629
https://github.com/root-project/root/pull/8629:625,Modifiability,config,configured,625,"- fill style in `RAttrFill`; - line style in `RAttrLine`; - font kind in `RAttrFont`; - text align in `RAttrText`. Provide possibility to configure custom line pattern directly in `RAttrLine`. Shown in `rline_style.cxx` macro. Improve positioning of `RPave` and all derived classes. ; One can select any corner (default is `kTopRight`) and specify `offsetX` and `offsetY` relative to that corner.; By default frame corners are used, but if set `onFrame = false`, pad corners are used. Let mark `RFont` instance as default for the pad - in this case font will be used as default for any text output on the pad if font was not configured for that text.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8629
https://github.com/root-project/root/pull/8630:81,Integrability,interface,interface,81,"This Pull request adds several improvements to use UNU.RAN using the DistSampler interface; (through the TUnuranSampler class). This is to fix issue #7332 adding functionality as requested. ; ; The major improvements are:; - Improvements in using directly the string API from `DistSampler`; - Better support for setting method and method options using the `DistSamplerOptions` class; - Support for setting dpdf, cdf and multi-sim mode in the DistSampler interface; - Add test program for all the new DistSampler functionality. This PR fixes #7332",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8630
https://github.com/root-project/root/pull/8630:454,Integrability,interface,interface,454,"This Pull request adds several improvements to use UNU.RAN using the DistSampler interface; (through the TUnuranSampler class). This is to fix issue #7332 adding functionality as requested. ; ; The major improvements are:; - Improvements in using directly the string API from `DistSampler`; - Better support for setting method and method options using the `DistSamplerOptions` class; - Support for setting dpdf, cdf and multi-sim mode in the DistSampler interface; - Add test program for all the new DistSampler functionality. This PR fixes #7332",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8630
https://github.com/root-project/root/pull/8630:471,Testability,test,test,471,"This Pull request adds several improvements to use UNU.RAN using the DistSampler interface; (through the TUnuranSampler class). This is to fix issue #7332 adding functionality as requested. ; ; The major improvements are:; - Improvements in using directly the string API from `DistSampler`; - Better support for setting method and method options using the `DistSamplerOptions` class; - Support for setting dpdf, cdf and multi-sim mode in the DistSampler interface; - Add test program for all the new DistSampler functionality. This PR fixes #7332",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8630
https://github.com/root-project/root/pull/8632:80,Integrability,message,messages,80,"Various small fixes and improvements to RooFit, described further in the commit messages.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8632
https://github.com/root-project/root/issues/8633:3029,Availability,Error,Error,3029," info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""); -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""); -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed); Reason given by package:; Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h; -- Looking for pthread.h - not found; -- Found Threads: TRUE; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed; -- ROOT Platform: win32; -- ROOT Compiler: MSVC 19.29.30037.0; -- ROOT Processor: AMD64; -- ROOT Architecture: win32; -- Build Type: '' (flags = ''); -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS; -- ROOT default compression algorithm: zlib; -- PyROOT will be built for version 3.9.2; -- Looking for ZLib; CMake Error at D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:693 (set):; Maximum recursion depth of 1000 exceeded; Call Stack (most recent call first):; D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package); ... // many stack frames; D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:16 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:55 (find_package); CMakeLists.txt:220 (include); ```. ### Setup. ROOT master cloned today on Windows 10.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:625,Deployability,install,installed,625,"- [x] Checked for duplicates. ### Describe the bug. ROOT overrides CMake's `find_package` in `cmake/modules/SearchInstalledSoftware.cmake`, which is not uncommon, but relies on undocumented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:; ```; PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake ..; -- Building for: Visual Studio 16 2019; -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042.; -- The C compiler identification is MSVC 19.29.30037.0; -- The CXX compiler identification is MSVC 19.29.30037.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""); -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Could NOT find Python3 (mi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:528,Integrability,inject,inject,528,"- [x] Checked for duplicates. ### Describe the bug. ROOT overrides CMake's `find_package` in `cmake/modules/SearchInstalledSoftware.cmake`, which is not uncommon, but relies on undocumented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:; ```; PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake ..; -- Building for: Visual Studio 16 2019; -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042.; -- The C compiler identification is MSVC 19.29.30037.0; -- The CXX compiler identification is MSVC 19.29.30037.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""); -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Could NOT find Python3 (mi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:535,Integrability,depend,dependencies,535,"- [x] Checked for duplicates. ### Describe the bug. ROOT overrides CMake's `find_package` in `cmake/modules/SearchInstalledSoftware.cmake`, which is not uncommon, but relies on undocumented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:; ```; PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake ..; -- Building for: Visual Studio 16 2019; -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042.; -- The C compiler identification is MSVC 19.29.30037.0; -- The CXX compiler identification is MSVC 19.29.30037.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""); -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Could NOT find Python3 (mi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:635,Integrability,depend,dependencies,635,"- [x] Checked for duplicates. ### Describe the bug. ROOT overrides CMake's `find_package` in `cmake/modules/SearchInstalledSoftware.cmake`, which is not uncommon, but relies on undocumented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:; ```; PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake ..; -- Building for: Visual Studio 16 2019; -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042.; -- The C compiler identification is MSVC 19.29.30037.0; -- The CXX compiler identification is MSVC 19.29.30037.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""); -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Could NOT find Python3 (mi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:684,Modifiability,config,configured,684,"- [x] Checked for duplicates. ### Describe the bug. ROOT overrides CMake's `find_package` in `cmake/modules/SearchInstalledSoftware.cmake`, which is not uncommon, but relies on undocumented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:; ```; PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake ..; -- Building for: Visual Studio 16 2019; -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042.; -- The C compiler identification is MSVC 19.29.30037.0; -- The CXX compiler identification is MSVC 19.29.30037.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""); -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Could NOT find Python3 (mi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:2467,Performance,Perform,Performing,2467,"e; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""); -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""); -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed); Reason given by package:; Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h; -- Looking for pthread.h - not found; -- Found Threads: TRUE; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed; -- ROOT Platform: win32; -- ROOT Compiler: MSVC 19.29.30037.0; -- ROOT Processor: AMD64; -- ROOT Architecture: win32; -- Build Type: '' (flags = ''); -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS; -- ROOT default compression algorithm: zlib; -- PyROOT will be built for version 3.9.2; -- Looking for ZLib; CMake Error at D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:693 (set):; Maximum recursion depth of 1000 exceeded; Call Stack (most recent call first):; D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package); ... // many stack frames; D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:16 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:55 (find_package); CMakeLists.txt:220 (include); ```. ### Setup. ROOT mas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:2509,Performance,Perform,Performing,2509,"e; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""); -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""); -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed); Reason given by package:; Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h; -- Looking for pthread.h - not found; -- Found Threads: TRUE; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed; -- ROOT Platform: win32; -- ROOT Compiler: MSVC 19.29.30037.0; -- ROOT Processor: AMD64; -- ROOT Architecture: win32; -- Build Type: '' (flags = ''); -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS; -- ROOT default compression algorithm: zlib; -- PyROOT will be built for version 3.9.2; -- Looking for ZLib; CMake Error at D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:693 (set):; Maximum recursion depth of 1000 exceeded; Call Stack (most recent call first):; D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package); ... // many stack frames; D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:16 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:55 (find_package); CMakeLists.txt:220 (include); ```. ### Setup. ROOT mas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:1219,Safety,Detect,Detecting,1219," tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:; ```; PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake ..; -- Building for: Visual Studio 16 2019; -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042.; -- The C compiler identification is MSVC 19.29.30037.0; -- The CXX compiler identification is MSVC 19.29.30037.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""); -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""); -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed); Reason given by package:; Interpreter: Wrong major ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:1253,Safety,Detect,Detecting,1253," tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:; ```; PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake ..; -- Building for: Visual Studio 16 2019; -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042.; -- The C compiler identification is MSVC 19.29.30037.0; -- The CXX compiler identification is MSVC 19.29.30037.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""); -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""); -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed); Reason given by package:; Interpreter: Wrong major ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:1449,Safety,Detect,Detecting,1449,"eeds to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:; ```; PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake ..; -- Building for: Visual Studio 16 2019; -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042.; -- The C compiler identification is MSVC 19.29.30037.0; -- The CXX compiler identification is MSVC 19.29.30037.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""); -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""); -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed); Reason given by package:; Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h; -- Looking for pthread.h - not found; -- Found Threads: TRUE; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed; -- ROOT Platfor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:1482,Safety,Detect,Detecting,1482,"eeds to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:; ```; PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake ..; -- Building for: Visual Studio 16 2019; -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042.; -- The C compiler identification is MSVC 19.29.30037.0; -- The CXX compiler identification is MSVC 19.29.30037.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""); -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""); -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed); Reason given by package:; Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h; -- Looking for pthread.h - not found; -- Found Threads: TRUE; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed; -- ROOT Platfor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:1522,Safety,Detect,Detecting,1522,"eeds to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:; ```; PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake ..; -- Building for: Visual Studio 16 2019; -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042.; -- The C compiler identification is MSVC 19.29.30037.0; -- The CXX compiler identification is MSVC 19.29.30037.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""); -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""); -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed); Reason given by package:; Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h; -- Looking for pthread.h - not found; -- Found Threads: TRUE; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed; -- ROOT Platfor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:1558,Safety,Detect,Detecting,1558,"eeds to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:; ```; PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake ..; -- Building for: Visual Studio 16 2019; -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042.; -- The C compiler identification is MSVC 19.29.30037.0; -- The CXX compiler identification is MSVC 19.29.30037.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""); -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""); -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed); Reason given by package:; Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h; -- Looking for pthread.h - not found; -- Found Threads: TRUE; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed; -- ROOT Platfor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:1758,Safety,Detect,Detecting,1758,"ge`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:; ```; PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake ..; -- Building for: Visual Studio 16 2019; -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042.; -- The C compiler identification is MSVC 19.29.30037.0; -- The CXX compiler identification is MSVC 19.29.30037.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""); -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""); -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed); Reason given by package:; Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h; -- Looking for pthread.h - not found; -- Found Threads: TRUE; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed; -- ROOT Platform: win32; -- ROOT Compiler: MSVC 19.29.30037.0; -- ROOT Processor: AMD64; -- ROOT Architecture: win32; -- Build Type: '' (flags = ''); -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:1793,Safety,Detect,Detecting,1793,"ge`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:; ```; PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake ..; -- Building for: Visual Studio 16 2019; -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042.; -- The C compiler identification is MSVC 19.29.30037.0; -- The CXX compiler identification is MSVC 19.29.30037.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""); -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""); -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed); Reason given by package:; Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h; -- Looking for pthread.h - not found; -- Found Threads: TRUE; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed; -- ROOT Platform: win32; -- ROOT Compiler: MSVC 19.29.30037.0; -- ROOT Processor: AMD64; -- ROOT Architecture: win32; -- Build Type: '' (flags = ''); -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:1918,Safety,Detect,Detected,1918,"AIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake ..; -- Building for: Visual Studio 16 2019; -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042.; -- The C compiler identification is MSVC 19.29.30037.0; -- The CXX compiler identification is MSVC 19.29.30037.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""); -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""); -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed); Reason given by package:; Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h; -- Looking for pthread.h - not found; -- Found Threads: TRUE; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed; -- ROOT Platform: win32; -- ROOT Compiler: MSVC 19.29.30037.0; -- ROOT Processor: AMD64; -- ROOT Architecture: win32; -- Build Type: '' (flags = ''); -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS; -- ROOT defa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:528,Security,inject,inject,528,"- [x] Checked for duplicates. ### Describe the bug. ROOT overrides CMake's `find_package` in `cmake/modules/SearchInstalledSoftware.cmake`, which is not uncommon, but relies on undocumented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:; ```; PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake ..; -- Building for: Visual Studio 16 2019; -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042.; -- The C compiler identification is MSVC 19.29.30037.0; -- The CXX compiler identification is MSVC 19.29.30037.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""); -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Could NOT find Python3 (mi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:2478,Testability,Test,Test,2478,"e; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""); -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""); -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed); Reason given by package:; Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h; -- Looking for pthread.h - not found; -- Found Threads: TRUE; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed; -- ROOT Platform: win32; -- ROOT Compiler: MSVC 19.29.30037.0; -- ROOT Processor: AMD64; -- ROOT Architecture: win32; -- Build Type: '' (flags = ''); -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS; -- ROOT default compression algorithm: zlib; -- PyROOT will be built for version 3.9.2; -- Looking for ZLib; CMake Error at D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:693 (set):; Maximum recursion depth of 1000 exceeded; Call Stack (most recent call first):; D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package); ... // many stack frames; D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:16 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:55 (find_package); CMakeLists.txt:220 (include); ```. ### Setup. ROOT mas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:2520,Testability,Test,Test,2520,"e; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""); -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""); -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed); Reason given by package:; Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h; -- Looking for pthread.h - not found; -- Found Threads: TRUE; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed; -- ROOT Platform: win32; -- ROOT Compiler: MSVC 19.29.30037.0; -- ROOT Processor: AMD64; -- ROOT Architecture: win32; -- Build Type: '' (flags = ''); -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS; -- ROOT default compression algorithm: zlib; -- PyROOT will be built for version 3.9.2; -- Looking for ZLib; CMake Error at D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:693 (set):; Maximum recursion depth of 1000 exceeded; Call Stack (most recent call first):; D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package); ... // many stack frames; D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:16 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:55 (find_package); CMakeLists.txt:220 (include); ```. ### Setup. ROOT mas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/issues/8633:177,Usability,undo,undocumented,177,"- [x] Checked for duplicates. ### Describe the bug. ROOT overrides CMake's `find_package` in `cmake/modules/SearchInstalledSoftware.cmake`, which is not uncommon, but relies on undocumented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:; ```; PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake ..; -- Building for: Visual Studio 16 2019; -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042.; -- The C compiler identification is MSVC 19.29.30037.0; -- The CXX compiler identification is MSVC 19.29.30037.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""); -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Could NOT find Python3 (mi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8633
https://github.com/root-project/root/pull/8634:491,Performance,perform,performed,491,"Profiles of RNTuple benchmarks (`iotools/cms, lhcb`) showed ~10-20% of; total runtime is due to allocations in `RPageSource::UnsealPage`. One typical RNTuple use case is an event loop over a fixed number of; columns. Columns are divided into pages with a fixed size, e.g. ```; Events | Column 0 | Column 1 | Column 2; -------+----------+----------+----------; 1-10 p0(40kB) p1(80kB) p2(80kB); 11-20 p3(40kB) p4(80kB) p5(80kB); ... ... ... ...; ```. Before this change, page allocations were performed every time a page; is flushed from a column:. ```; Events | Column 0 | Column 1 | Column 2; -------+----------+----------+----------; [alloc] [alloc] [alloc]; 1-10 p0(40kB) p1(80kB) p2(80kB); [dealloc] [dealloc] [dealloc]; [alloc] [alloc] [alloc]; 11-20 p3(40kB) p4(80kB) p5(80kB); ... ... ... ...; [dealloc] [dealloc] [dealloc]; ```. After this change, allocations are held onto and reused if possible; (up to a certain limit, which for now is hard-coded to be 32 pages). ```; Events | Column 0 | Column 1 | Column 2; -------+----------+----------+----------; [alloc] [alloc] [alloc]; 1-10 p0(40kB) p1(80kB) p2(80kB); 11-20 p3(40kB) p4(80kB) p5(80kB); ... ... ... ...; [dealloc] [dealloc] [dealloc]; ```. On SSD, the following serial results were obtained for the lhcb and cms; benchmarks (average of ten cold runs, 95% confidence interval):. ```; cms. Before: 105145us +- 1338us; After: 93669us +- 2077us; %diff: 10.9%. lhcb. Before: 2111977us +- 8371us; After: 1770781us +- 11185us; %diff: 16.2%; ```. Todo: ; - [x] Handle non-mappable case in `PopulatePage`; - [x] Investigate multi-threaded case. For multithreading, the current implementation just uses the existing `UnsealPage` mechanism and is unaffected by these changes -- deleted pages are returned to the cache which deallocates them properly. . I tried adding an internal mutex to `RPageCache` and bumping the number of cached pages to 128 on the benchmark machine but the runtime was about the same as the existing cache-less implementa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8634
https://github.com/root-project/root/pull/8634:1582,Performance,multi-thread,multi-threaded,1582,"----------+----------; 1-10 p0(40kB) p1(80kB) p2(80kB); 11-20 p3(40kB) p4(80kB) p5(80kB); ... ... ... ...; ```. Before this change, page allocations were performed every time a page; is flushed from a column:. ```; Events | Column 0 | Column 1 | Column 2; -------+----------+----------+----------; [alloc] [alloc] [alloc]; 1-10 p0(40kB) p1(80kB) p2(80kB); [dealloc] [dealloc] [dealloc]; [alloc] [alloc] [alloc]; 11-20 p3(40kB) p4(80kB) p5(80kB); ... ... ... ...; [dealloc] [dealloc] [dealloc]; ```. After this change, allocations are held onto and reused if possible; (up to a certain limit, which for now is hard-coded to be 32 pages). ```; Events | Column 0 | Column 1 | Column 2; -------+----------+----------+----------; [alloc] [alloc] [alloc]; 1-10 p0(40kB) p1(80kB) p2(80kB); 11-20 p3(40kB) p4(80kB) p5(80kB); ... ... ... ...; [dealloc] [dealloc] [dealloc]; ```. On SSD, the following serial results were obtained for the lhcb and cms; benchmarks (average of ten cold runs, 95% confidence interval):. ```; cms. Before: 105145us +- 1338us; After: 93669us +- 2077us; %diff: 10.9%. lhcb. Before: 2111977us +- 8371us; After: 1770781us +- 11185us; %diff: 16.2%; ```. Todo: ; - [x] Handle non-mappable case in `PopulatePage`; - [x] Investigate multi-threaded case. For multithreading, the current implementation just uses the existing `UnsealPage` mechanism and is unaffected by these changes -- deleted pages are returned to the cache which deallocates them properly. . I tried adding an internal mutex to `RPageCache` and bumping the number of cached pages to 128 on the benchmark machine but the runtime was about the same as the existing cache-less implementation. Further cache size increases did not show improvements, but as expected only having 32 cached pages for 128 threads was much slower. ```; ./lhcb -m (64-cores, 10 cold runs, 95% confidence interval); no cache: 776188us +- 9918us; cache (128): 780214us +- 11888us; %diff: -0.5%; cache (32): 1369689us +- 33365us; %diff: -76.46%; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8634
https://github.com/root-project/root/pull/8634:1768,Performance,cache,cache,1768,"----------+----------; 1-10 p0(40kB) p1(80kB) p2(80kB); 11-20 p3(40kB) p4(80kB) p5(80kB); ... ... ... ...; ```. Before this change, page allocations were performed every time a page; is flushed from a column:. ```; Events | Column 0 | Column 1 | Column 2; -------+----------+----------+----------; [alloc] [alloc] [alloc]; 1-10 p0(40kB) p1(80kB) p2(80kB); [dealloc] [dealloc] [dealloc]; [alloc] [alloc] [alloc]; 11-20 p3(40kB) p4(80kB) p5(80kB); ... ... ... ...; [dealloc] [dealloc] [dealloc]; ```. After this change, allocations are held onto and reused if possible; (up to a certain limit, which for now is hard-coded to be 32 pages). ```; Events | Column 0 | Column 1 | Column 2; -------+----------+----------+----------; [alloc] [alloc] [alloc]; 1-10 p0(40kB) p1(80kB) p2(80kB); 11-20 p3(40kB) p4(80kB) p5(80kB); ... ... ... ...; [dealloc] [dealloc] [dealloc]; ```. On SSD, the following serial results were obtained for the lhcb and cms; benchmarks (average of ten cold runs, 95% confidence interval):. ```; cms. Before: 105145us +- 1338us; After: 93669us +- 2077us; %diff: 10.9%. lhcb. Before: 2111977us +- 8371us; After: 1770781us +- 11185us; %diff: 16.2%; ```. Todo: ; - [x] Handle non-mappable case in `PopulatePage`; - [x] Investigate multi-threaded case. For multithreading, the current implementation just uses the existing `UnsealPage` mechanism and is unaffected by these changes -- deleted pages are returned to the cache which deallocates them properly. . I tried adding an internal mutex to `RPageCache` and bumping the number of cached pages to 128 on the benchmark machine but the runtime was about the same as the existing cache-less implementation. Further cache size increases did not show improvements, but as expected only having 32 cached pages for 128 threads was much slower. ```; ./lhcb -m (64-cores, 10 cold runs, 95% confidence interval); no cache: 776188us +- 9918us; cache (128): 780214us +- 11888us; %diff: -0.5%; cache (32): 1369689us +- 33365us; %diff: -76.46%; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8634
https://github.com/root-project/root/pull/8634:1884,Performance,cache,cached,1884,"----------+----------; 1-10 p0(40kB) p1(80kB) p2(80kB); 11-20 p3(40kB) p4(80kB) p5(80kB); ... ... ... ...; ```. Before this change, page allocations were performed every time a page; is flushed from a column:. ```; Events | Column 0 | Column 1 | Column 2; -------+----------+----------+----------; [alloc] [alloc] [alloc]; 1-10 p0(40kB) p1(80kB) p2(80kB); [dealloc] [dealloc] [dealloc]; [alloc] [alloc] [alloc]; 11-20 p3(40kB) p4(80kB) p5(80kB); ... ... ... ...; [dealloc] [dealloc] [dealloc]; ```. After this change, allocations are held onto and reused if possible; (up to a certain limit, which for now is hard-coded to be 32 pages). ```; Events | Column 0 | Column 1 | Column 2; -------+----------+----------+----------; [alloc] [alloc] [alloc]; 1-10 p0(40kB) p1(80kB) p2(80kB); 11-20 p3(40kB) p4(80kB) p5(80kB); ... ... ... ...; [dealloc] [dealloc] [dealloc]; ```. On SSD, the following serial results were obtained for the lhcb and cms; benchmarks (average of ten cold runs, 95% confidence interval):. ```; cms. Before: 105145us +- 1338us; After: 93669us +- 2077us; %diff: 10.9%. lhcb. Before: 2111977us +- 8371us; After: 1770781us +- 11185us; %diff: 16.2%; ```. Todo: ; - [x] Handle non-mappable case in `PopulatePage`; - [x] Investigate multi-threaded case. For multithreading, the current implementation just uses the existing `UnsealPage` mechanism and is unaffected by these changes -- deleted pages are returned to the cache which deallocates them properly. . I tried adding an internal mutex to `RPageCache` and bumping the number of cached pages to 128 on the benchmark machine but the runtime was about the same as the existing cache-less implementation. Further cache size increases did not show improvements, but as expected only having 32 cached pages for 128 threads was much slower. ```; ./lhcb -m (64-cores, 10 cold runs, 95% confidence interval); no cache: 776188us +- 9918us; cache (128): 780214us +- 11888us; %diff: -0.5%; cache (32): 1369689us +- 33365us; %diff: -76.46%; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8634
https://github.com/root-project/root/pull/8634:1980,Performance,cache,cache-less,1980,"----------+----------; 1-10 p0(40kB) p1(80kB) p2(80kB); 11-20 p3(40kB) p4(80kB) p5(80kB); ... ... ... ...; ```. Before this change, page allocations were performed every time a page; is flushed from a column:. ```; Events | Column 0 | Column 1 | Column 2; -------+----------+----------+----------; [alloc] [alloc] [alloc]; 1-10 p0(40kB) p1(80kB) p2(80kB); [dealloc] [dealloc] [dealloc]; [alloc] [alloc] [alloc]; 11-20 p3(40kB) p4(80kB) p5(80kB); ... ... ... ...; [dealloc] [dealloc] [dealloc]; ```. After this change, allocations are held onto and reused if possible; (up to a certain limit, which for now is hard-coded to be 32 pages). ```; Events | Column 0 | Column 1 | Column 2; -------+----------+----------+----------; [alloc] [alloc] [alloc]; 1-10 p0(40kB) p1(80kB) p2(80kB); 11-20 p3(40kB) p4(80kB) p5(80kB); ... ... ... ...; [dealloc] [dealloc] [dealloc]; ```. On SSD, the following serial results were obtained for the lhcb and cms; benchmarks (average of ten cold runs, 95% confidence interval):. ```; cms. Before: 105145us +- 1338us; After: 93669us +- 2077us; %diff: 10.9%. lhcb. Before: 2111977us +- 8371us; After: 1770781us +- 11185us; %diff: 16.2%; ```. Todo: ; - [x] Handle non-mappable case in `PopulatePage`; - [x] Investigate multi-threaded case. For multithreading, the current implementation just uses the existing `UnsealPage` mechanism and is unaffected by these changes -- deleted pages are returned to the cache which deallocates them properly. . I tried adding an internal mutex to `RPageCache` and bumping the number of cached pages to 128 on the benchmark machine but the runtime was about the same as the existing cache-less implementation. Further cache size increases did not show improvements, but as expected only having 32 cached pages for 128 threads was much slower. ```; ./lhcb -m (64-cores, 10 cold runs, 95% confidence interval); no cache: 776188us +- 9918us; cache (128): 780214us +- 11888us; %diff: -0.5%; cache (32): 1369689us +- 33365us; %diff: -76.46%; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8634
https://github.com/root-project/root/pull/8634:2015,Performance,cache,cache,2015,"----------+----------; 1-10 p0(40kB) p1(80kB) p2(80kB); 11-20 p3(40kB) p4(80kB) p5(80kB); ... ... ... ...; ```. Before this change, page allocations were performed every time a page; is flushed from a column:. ```; Events | Column 0 | Column 1 | Column 2; -------+----------+----------+----------; [alloc] [alloc] [alloc]; 1-10 p0(40kB) p1(80kB) p2(80kB); [dealloc] [dealloc] [dealloc]; [alloc] [alloc] [alloc]; 11-20 p3(40kB) p4(80kB) p5(80kB); ... ... ... ...; [dealloc] [dealloc] [dealloc]; ```. After this change, allocations are held onto and reused if possible; (up to a certain limit, which for now is hard-coded to be 32 pages). ```; Events | Column 0 | Column 1 | Column 2; -------+----------+----------+----------; [alloc] [alloc] [alloc]; 1-10 p0(40kB) p1(80kB) p2(80kB); 11-20 p3(40kB) p4(80kB) p5(80kB); ... ... ... ...; [dealloc] [dealloc] [dealloc]; ```. On SSD, the following serial results were obtained for the lhcb and cms; benchmarks (average of ten cold runs, 95% confidence interval):. ```; cms. Before: 105145us +- 1338us; After: 93669us +- 2077us; %diff: 10.9%. lhcb. Before: 2111977us +- 8371us; After: 1770781us +- 11185us; %diff: 16.2%; ```. Todo: ; - [x] Handle non-mappable case in `PopulatePage`; - [x] Investigate multi-threaded case. For multithreading, the current implementation just uses the existing `UnsealPage` mechanism and is unaffected by these changes -- deleted pages are returned to the cache which deallocates them properly. . I tried adding an internal mutex to `RPageCache` and bumping the number of cached pages to 128 on the benchmark machine but the runtime was about the same as the existing cache-less implementation. Further cache size increases did not show improvements, but as expected only having 32 cached pages for 128 threads was much slower. ```; ./lhcb -m (64-cores, 10 cold runs, 95% confidence interval); no cache: 776188us +- 9918us; cache (128): 780214us +- 11888us; %diff: -0.5%; cache (32): 1369689us +- 33365us; %diff: -76.46%; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8634
https://github.com/root-project/root/pull/8634:2094,Performance,cache,cached,2094,"----------+----------; 1-10 p0(40kB) p1(80kB) p2(80kB); 11-20 p3(40kB) p4(80kB) p5(80kB); ... ... ... ...; ```. Before this change, page allocations were performed every time a page; is flushed from a column:. ```; Events | Column 0 | Column 1 | Column 2; -------+----------+----------+----------; [alloc] [alloc] [alloc]; 1-10 p0(40kB) p1(80kB) p2(80kB); [dealloc] [dealloc] [dealloc]; [alloc] [alloc] [alloc]; 11-20 p3(40kB) p4(80kB) p5(80kB); ... ... ... ...; [dealloc] [dealloc] [dealloc]; ```. After this change, allocations are held onto and reused if possible; (up to a certain limit, which for now is hard-coded to be 32 pages). ```; Events | Column 0 | Column 1 | Column 2; -------+----------+----------+----------; [alloc] [alloc] [alloc]; 1-10 p0(40kB) p1(80kB) p2(80kB); 11-20 p3(40kB) p4(80kB) p5(80kB); ... ... ... ...; [dealloc] [dealloc] [dealloc]; ```. On SSD, the following serial results were obtained for the lhcb and cms; benchmarks (average of ten cold runs, 95% confidence interval):. ```; cms. Before: 105145us +- 1338us; After: 93669us +- 2077us; %diff: 10.9%. lhcb. Before: 2111977us +- 8371us; After: 1770781us +- 11185us; %diff: 16.2%; ```. Todo: ; - [x] Handle non-mappable case in `PopulatePage`; - [x] Investigate multi-threaded case. For multithreading, the current implementation just uses the existing `UnsealPage` mechanism and is unaffected by these changes -- deleted pages are returned to the cache which deallocates them properly. . I tried adding an internal mutex to `RPageCache` and bumping the number of cached pages to 128 on the benchmark machine but the runtime was about the same as the existing cache-less implementation. Further cache size increases did not show improvements, but as expected only having 32 cached pages for 128 threads was much slower. ```; ./lhcb -m (64-cores, 10 cold runs, 95% confidence interval); no cache: 776188us +- 9918us; cache (128): 780214us +- 11888us; %diff: -0.5%; cache (32): 1369689us +- 33365us; %diff: -76.46%; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8634
https://github.com/root-project/root/pull/8634:2209,Performance,cache,cache,2209,"----------+----------; 1-10 p0(40kB) p1(80kB) p2(80kB); 11-20 p3(40kB) p4(80kB) p5(80kB); ... ... ... ...; ```. Before this change, page allocations were performed every time a page; is flushed from a column:. ```; Events | Column 0 | Column 1 | Column 2; -------+----------+----------+----------; [alloc] [alloc] [alloc]; 1-10 p0(40kB) p1(80kB) p2(80kB); [dealloc] [dealloc] [dealloc]; [alloc] [alloc] [alloc]; 11-20 p3(40kB) p4(80kB) p5(80kB); ... ... ... ...; [dealloc] [dealloc] [dealloc]; ```. After this change, allocations are held onto and reused if possible; (up to a certain limit, which for now is hard-coded to be 32 pages). ```; Events | Column 0 | Column 1 | Column 2; -------+----------+----------+----------; [alloc] [alloc] [alloc]; 1-10 p0(40kB) p1(80kB) p2(80kB); 11-20 p3(40kB) p4(80kB) p5(80kB); ... ... ... ...; [dealloc] [dealloc] [dealloc]; ```. On SSD, the following serial results were obtained for the lhcb and cms; benchmarks (average of ten cold runs, 95% confidence interval):. ```; cms. Before: 105145us +- 1338us; After: 93669us +- 2077us; %diff: 10.9%. lhcb. Before: 2111977us +- 8371us; After: 1770781us +- 11185us; %diff: 16.2%; ```. Todo: ; - [x] Handle non-mappable case in `PopulatePage`; - [x] Investigate multi-threaded case. For multithreading, the current implementation just uses the existing `UnsealPage` mechanism and is unaffected by these changes -- deleted pages are returned to the cache which deallocates them properly. . I tried adding an internal mutex to `RPageCache` and bumping the number of cached pages to 128 on the benchmark machine but the runtime was about the same as the existing cache-less implementation. Further cache size increases did not show improvements, but as expected only having 32 cached pages for 128 threads was much slower. ```; ./lhcb -m (64-cores, 10 cold runs, 95% confidence interval); no cache: 776188us +- 9918us; cache (128): 780214us +- 11888us; %diff: -0.5%; cache (32): 1369689us +- 33365us; %diff: -76.46%; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8634
https://github.com/root-project/root/pull/8634:2236,Performance,cache,cache,2236,"----------+----------; 1-10 p0(40kB) p1(80kB) p2(80kB); 11-20 p3(40kB) p4(80kB) p5(80kB); ... ... ... ...; ```. Before this change, page allocations were performed every time a page; is flushed from a column:. ```; Events | Column 0 | Column 1 | Column 2; -------+----------+----------+----------; [alloc] [alloc] [alloc]; 1-10 p0(40kB) p1(80kB) p2(80kB); [dealloc] [dealloc] [dealloc]; [alloc] [alloc] [alloc]; 11-20 p3(40kB) p4(80kB) p5(80kB); ... ... ... ...; [dealloc] [dealloc] [dealloc]; ```. After this change, allocations are held onto and reused if possible; (up to a certain limit, which for now is hard-coded to be 32 pages). ```; Events | Column 0 | Column 1 | Column 2; -------+----------+----------+----------; [alloc] [alloc] [alloc]; 1-10 p0(40kB) p1(80kB) p2(80kB); 11-20 p3(40kB) p4(80kB) p5(80kB); ... ... ... ...; [dealloc] [dealloc] [dealloc]; ```. On SSD, the following serial results were obtained for the lhcb and cms; benchmarks (average of ten cold runs, 95% confidence interval):. ```; cms. Before: 105145us +- 1338us; After: 93669us +- 2077us; %diff: 10.9%. lhcb. Before: 2111977us +- 8371us; After: 1770781us +- 11185us; %diff: 16.2%; ```. Todo: ; - [x] Handle non-mappable case in `PopulatePage`; - [x] Investigate multi-threaded case. For multithreading, the current implementation just uses the existing `UnsealPage` mechanism and is unaffected by these changes -- deleted pages are returned to the cache which deallocates them properly. . I tried adding an internal mutex to `RPageCache` and bumping the number of cached pages to 128 on the benchmark machine but the runtime was about the same as the existing cache-less implementation. Further cache size increases did not show improvements, but as expected only having 32 cached pages for 128 threads was much slower. ```; ./lhcb -m (64-cores, 10 cold runs, 95% confidence interval); no cache: 776188us +- 9918us; cache (128): 780214us +- 11888us; %diff: -0.5%; cache (32): 1369689us +- 33365us; %diff: -76.46%; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8634
https://github.com/root-project/root/pull/8634:2284,Performance,cache,cache,2284,"----------+----------; 1-10 p0(40kB) p1(80kB) p2(80kB); 11-20 p3(40kB) p4(80kB) p5(80kB); ... ... ... ...; ```. Before this change, page allocations were performed every time a page; is flushed from a column:. ```; Events | Column 0 | Column 1 | Column 2; -------+----------+----------+----------; [alloc] [alloc] [alloc]; 1-10 p0(40kB) p1(80kB) p2(80kB); [dealloc] [dealloc] [dealloc]; [alloc] [alloc] [alloc]; 11-20 p3(40kB) p4(80kB) p5(80kB); ... ... ... ...; [dealloc] [dealloc] [dealloc]; ```. After this change, allocations are held onto and reused if possible; (up to a certain limit, which for now is hard-coded to be 32 pages). ```; Events | Column 0 | Column 1 | Column 2; -------+----------+----------+----------; [alloc] [alloc] [alloc]; 1-10 p0(40kB) p1(80kB) p2(80kB); 11-20 p3(40kB) p4(80kB) p5(80kB); ... ... ... ...; [dealloc] [dealloc] [dealloc]; ```. On SSD, the following serial results were obtained for the lhcb and cms; benchmarks (average of ten cold runs, 95% confidence interval):. ```; cms. Before: 105145us +- 1338us; After: 93669us +- 2077us; %diff: 10.9%. lhcb. Before: 2111977us +- 8371us; After: 1770781us +- 11185us; %diff: 16.2%; ```. Todo: ; - [x] Handle non-mappable case in `PopulatePage`; - [x] Investigate multi-threaded case. For multithreading, the current implementation just uses the existing `UnsealPage` mechanism and is unaffected by these changes -- deleted pages are returned to the cache which deallocates them properly. . I tried adding an internal mutex to `RPageCache` and bumping the number of cached pages to 128 on the benchmark machine but the runtime was about the same as the existing cache-less implementation. Further cache size increases did not show improvements, but as expected only having 32 cached pages for 128 threads was much slower. ```; ./lhcb -m (64-cores, 10 cold runs, 95% confidence interval); no cache: 776188us +- 9918us; cache (128): 780214us +- 11888us; %diff: -0.5%; cache (32): 1369689us +- 33365us; %diff: -76.46%; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8634
https://github.com/root-project/root/pull/8634:20,Testability,benchmark,benchmarks,20,"Profiles of RNTuple benchmarks (`iotools/cms, lhcb`) showed ~10-20% of; total runtime is due to allocations in `RPageSource::UnsealPage`. One typical RNTuple use case is an event loop over a fixed number of; columns. Columns are divided into pages with a fixed size, e.g. ```; Events | Column 0 | Column 1 | Column 2; -------+----------+----------+----------; 1-10 p0(40kB) p1(80kB) p2(80kB); 11-20 p3(40kB) p4(80kB) p5(80kB); ... ... ... ...; ```. Before this change, page allocations were performed every time a page; is flushed from a column:. ```; Events | Column 0 | Column 1 | Column 2; -------+----------+----------+----------; [alloc] [alloc] [alloc]; 1-10 p0(40kB) p1(80kB) p2(80kB); [dealloc] [dealloc] [dealloc]; [alloc] [alloc] [alloc]; 11-20 p3(40kB) p4(80kB) p5(80kB); ... ... ... ...; [dealloc] [dealloc] [dealloc]; ```. After this change, allocations are held onto and reused if possible; (up to a certain limit, which for now is hard-coded to be 32 pages). ```; Events | Column 0 | Column 1 | Column 2; -------+----------+----------+----------; [alloc] [alloc] [alloc]; 1-10 p0(40kB) p1(80kB) p2(80kB); 11-20 p3(40kB) p4(80kB) p5(80kB); ... ... ... ...; [dealloc] [dealloc] [dealloc]; ```. On SSD, the following serial results were obtained for the lhcb and cms; benchmarks (average of ten cold runs, 95% confidence interval):. ```; cms. Before: 105145us +- 1338us; After: 93669us +- 2077us; %diff: 10.9%. lhcb. Before: 2111977us +- 8371us; After: 1770781us +- 11185us; %diff: 16.2%; ```. Todo: ; - [x] Handle non-mappable case in `PopulatePage`; - [x] Investigate multi-threaded case. For multithreading, the current implementation just uses the existing `UnsealPage` mechanism and is unaffected by these changes -- deleted pages are returned to the cache which deallocates them properly. . I tried adding an internal mutex to `RPageCache` and bumping the number of cached pages to 128 on the benchmark machine but the runtime was about the same as the existing cache-less implementa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8634
https://github.com/root-project/root/pull/8634:1280,Testability,benchmark,benchmarks,1280,"; Events | Column 0 | Column 1 | Column 2; -------+----------+----------+----------; 1-10 p0(40kB) p1(80kB) p2(80kB); 11-20 p3(40kB) p4(80kB) p5(80kB); ... ... ... ...; ```. Before this change, page allocations were performed every time a page; is flushed from a column:. ```; Events | Column 0 | Column 1 | Column 2; -------+----------+----------+----------; [alloc] [alloc] [alloc]; 1-10 p0(40kB) p1(80kB) p2(80kB); [dealloc] [dealloc] [dealloc]; [alloc] [alloc] [alloc]; 11-20 p3(40kB) p4(80kB) p5(80kB); ... ... ... ...; [dealloc] [dealloc] [dealloc]; ```. After this change, allocations are held onto and reused if possible; (up to a certain limit, which for now is hard-coded to be 32 pages). ```; Events | Column 0 | Column 1 | Column 2; -------+----------+----------+----------; [alloc] [alloc] [alloc]; 1-10 p0(40kB) p1(80kB) p2(80kB); 11-20 p3(40kB) p4(80kB) p5(80kB); ... ... ... ...; [dealloc] [dealloc] [dealloc]; ```. On SSD, the following serial results were obtained for the lhcb and cms; benchmarks (average of ten cold runs, 95% confidence interval):. ```; cms. Before: 105145us +- 1338us; After: 93669us +- 2077us; %diff: 10.9%. lhcb. Before: 2111977us +- 8371us; After: 1770781us +- 11185us; %diff: 16.2%; ```. Todo: ; - [x] Handle non-mappable case in `PopulatePage`; - [x] Investigate multi-threaded case. For multithreading, the current implementation just uses the existing `UnsealPage` mechanism and is unaffected by these changes -- deleted pages are returned to the cache which deallocates them properly. . I tried adding an internal mutex to `RPageCache` and bumping the number of cached pages to 128 on the benchmark machine but the runtime was about the same as the existing cache-less implementation. Further cache size increases did not show improvements, but as expected only having 32 cached pages for 128 threads was much slower. ```; ./lhcb -m (64-cores, 10 cold runs, 95% confidence interval); no cache: 776188us +- 9918us; cache (128): 780214us +- 11888us; %diff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8634
https://github.com/root-project/root/pull/8634:1911,Testability,benchmark,benchmark,1911,"----------+----------; 1-10 p0(40kB) p1(80kB) p2(80kB); 11-20 p3(40kB) p4(80kB) p5(80kB); ... ... ... ...; ```. Before this change, page allocations were performed every time a page; is flushed from a column:. ```; Events | Column 0 | Column 1 | Column 2; -------+----------+----------+----------; [alloc] [alloc] [alloc]; 1-10 p0(40kB) p1(80kB) p2(80kB); [dealloc] [dealloc] [dealloc]; [alloc] [alloc] [alloc]; 11-20 p3(40kB) p4(80kB) p5(80kB); ... ... ... ...; [dealloc] [dealloc] [dealloc]; ```. After this change, allocations are held onto and reused if possible; (up to a certain limit, which for now is hard-coded to be 32 pages). ```; Events | Column 0 | Column 1 | Column 2; -------+----------+----------+----------; [alloc] [alloc] [alloc]; 1-10 p0(40kB) p1(80kB) p2(80kB); 11-20 p3(40kB) p4(80kB) p5(80kB); ... ... ... ...; [dealloc] [dealloc] [dealloc]; ```. On SSD, the following serial results were obtained for the lhcb and cms; benchmarks (average of ten cold runs, 95% confidence interval):. ```; cms. Before: 105145us +- 1338us; After: 93669us +- 2077us; %diff: 10.9%. lhcb. Before: 2111977us +- 8371us; After: 1770781us +- 11185us; %diff: 16.2%; ```. Todo: ; - [x] Handle non-mappable case in `PopulatePage`; - [x] Investigate multi-threaded case. For multithreading, the current implementation just uses the existing `UnsealPage` mechanism and is unaffected by these changes -- deleted pages are returned to the cache which deallocates them properly. . I tried adding an internal mutex to `RPageCache` and bumping the number of cached pages to 128 on the benchmark machine but the runtime was about the same as the existing cache-less implementation. Further cache size increases did not show improvements, but as expected only having 32 cached pages for 128 threads was much slower. ```; ./lhcb -m (64-cores, 10 cold runs, 95% confidence interval); no cache: 776188us +- 9918us; cache (128): 780214us +- 11888us; %diff: -0.5%; cache (32): 1369689us +- 33365us; %diff: -76.46%; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8634
https://github.com/root-project/root/pull/8636:220,Deployability,update,updated,220,thanks to Aaradhya and Federico for notifying this bug. # This Pull request:. ## Changes or fixes:. a bug reported in the codegen of infer function signature in RModel. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8636
https://github.com/root-project/root/pull/8636:190,Testability,test,tested,190,thanks to Aaradhya and Federico for notifying this bug. # This Pull request:. ## Changes or fixes:. a bug reported in the codegen of infer function signature in RModel. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8636
https://github.com/root-project/root/pull/8637:47,Security,hash,hashable,47,"The FileAndIndex class needs to be ordered and hashable because in `get_clustered_ranges` objects of this class are stored in a set and sorted to find, per each partition of the distributed RDataFrame, what files need to be considered.; Python classes get `__eq__` and `__hash__` methods by default, but not the ordering ones. Without this commit, `filelist` members of the `TreeRange` objects resulting from `get_clustered_ranges` would just be a 1:1 copy of the filenames that each cluster in the chain of that partition belongs to.; For example, given a tree with ten thousand entries and ten clusters split in two partitions, one would get:. Partition 0; Range of entries [0, 5000]; Filelist of the partition ['tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root']. Partition 1; Range of entries [5000, 10000]; Filelist of the partition ['tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root']. So effectively we would be sending ranges with one filename per cluster in the range, which would lead to wrong reads.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8637
https://github.com/root-project/root/pull/8638:139,Safety,detect,detect,139,"Add several methods to RCanvas like `IsShown`, `ClearShown`, `CreateJSON`. In python part:; * set special ""jupyter"" kind of web display; * detect if RCanvas compiled; * like with TCanvas, extract list of RCanvas after each cell; * use RCanvas methods to create JSON and then display it. This enables offline functionality of `RCanvas` like for `TCanvas`. As next step, one could try real __online__ mode - `jupyter` provides communication channel between cells and server.; But lets do first step",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8638
https://github.com/root-project/root/pull/8638:48,Usability,Clear,ClearShown,48,"Add several methods to RCanvas like `IsShown`, `ClearShown`, `CreateJSON`. In python part:; * set special ""jupyter"" kind of web display; * detect if RCanvas compiled; * like with TCanvas, extract list of RCanvas after each cell; * use RCanvas methods to create JSON and then display it. This enables offline functionality of `RCanvas` like for `TCanvas`. As next step, one could try real __online__ mode - `jupyter` provides communication channel between cells and server.; But lets do first step",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8638
https://github.com/root-project/root/issues/8639:1790,Availability,down,download,1790,"an run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->. ```python. >>> import ROOT; >>> rdf = ROOT.RDataFrame(100).Define(""bool_branch"", ""(int)rdfentry_ > 50"").AsNumpy([""bool_branch""]); >>> rdf; {'bool_branch': ndarray([False, False, False, False, False, False, False, False, False,; False, False, False, False, False, False, False, False, False,; False, False, False, False, False, False, False, False, False,; False, False, False, False, False, False, False, False, False,; False, False, False, False, False, False, False, False, False,; False, False, False, False, False, False, True, True, True, True,; True, True, True, True, True, True, True, True, True, True, True,; True, True, True, True, True, True, True, True, True, True, True,; True, True, True, True, True, True, True, True, True, True, True,; True, True, True, True, True, True, True, True, True, True, True,; True], dtype=object)}; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Conda:; ```; - root=6.24.0=py39hde0f152_0; - root_base=6.24.0=py39h9c0239e_0; ```. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.24/00 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Apr 20 2021, 16:07:00 |; | From tag , 14 April 2021 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. Operating system (running inside singularity); ```; (/conda_prefix/4579f7cd229dff884e79648a22bf1fbc) Singularity> cat /etc/*release; DISTRIB_ID=Ubuntu; DISTRIB_RELEASE=20.10; DISTRIB_CODENAME=groovy; DISTRIB_DESCRIPTION=""Ubuntu 20.10""; ```. ### Additional context; <!--; Add any other context about the problem here.; -->. I also reproduced the issue on macos.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8639
https://github.com/root-project/root/issues/8639:1772,Deployability,install,install,1772,"an run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->. ```python. >>> import ROOT; >>> rdf = ROOT.RDataFrame(100).Define(""bool_branch"", ""(int)rdfentry_ > 50"").AsNumpy([""bool_branch""]); >>> rdf; {'bool_branch': ndarray([False, False, False, False, False, False, False, False, False,; False, False, False, False, False, False, False, False, False,; False, False, False, False, False, False, False, False, False,; False, False, False, False, False, False, False, False, False,; False, False, False, False, False, False, False, False, False,; False, False, False, False, False, False, True, True, True, True,; True, True, True, True, True, True, True, True, True, True, True,; True, True, True, True, True, True, True, True, True, True, True,; True, True, True, True, True, True, True, True, True, True, True,; True, True, True, True, True, True, True, True, True, True, True,; True], dtype=object)}; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Conda:; ```; - root=6.24.0=py39hde0f152_0; - root_base=6.24.0=py39h9c0239e_0; ```. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.24/00 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Apr 20 2021, 16:07:00 |; | From tag , 14 April 2021 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. Operating system (running inside singularity); ```; (/conda_prefix/4579f7cd229dff884e79648a22bf1fbc) Singularity> cat /etc/*release; DISTRIB_ID=Ubuntu; DISTRIB_RELEASE=20.10; DISTRIB_CODENAME=groovy; DISTRIB_DESCRIPTION=""Ubuntu 20.10""; ```. ### Additional context; <!--; Add any other context about the problem here.; -->. I also reproduced the issue on macos.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8639
https://github.com/root-project/root/issues/8639:2458,Deployability,release,release,2458,"an run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->. ```python. >>> import ROOT; >>> rdf = ROOT.RDataFrame(100).Define(""bool_branch"", ""(int)rdfentry_ > 50"").AsNumpy([""bool_branch""]); >>> rdf; {'bool_branch': ndarray([False, False, False, False, False, False, False, False, False,; False, False, False, False, False, False, False, False, False,; False, False, False, False, False, False, False, False, False,; False, False, False, False, False, False, False, False, False,; False, False, False, False, False, False, False, False, False,; False, False, False, False, False, False, True, True, True, True,; True, True, True, True, True, True, True, True, True, True, True,; True, True, True, True, True, True, True, True, True, True, True,; True, True, True, True, True, True, True, True, True, True, True,; True, True, True, True, True, True, True, True, True, True, True,; True], dtype=object)}; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Conda:; ```; - root=6.24.0=py39hde0f152_0; - root_base=6.24.0=py39h9c0239e_0; ```. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.24/00 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Apr 20 2021, 16:07:00 |; | From tag , 14 April 2021 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. Operating system (running inside singularity); ```; (/conda_prefix/4579f7cd229dff884e79648a22bf1fbc) Singularity> cat /etc/*release; DISTRIB_ID=Ubuntu; DISTRIB_RELEASE=20.10; DISTRIB_CODENAME=groovy; DISTRIB_DESCRIPTION=""Ubuntu 20.10""; ```. ### Additional context; <!--; Add any other context about the problem here.; -->. I also reproduced the issue on macos.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8639
https://github.com/root-project/root/pull/8640:216,Testability,test,tested,216,## Description; This PR modifies the AddOutputTensorNameList() function present in RModel.hxx to use the UTILITY::Clean_name() function to process the strings before adding them into the RModel. ## Checklist:; - [x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8640
https://github.com/root-project/root/issues/8641:1635,Availability,down,download,1635,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; In RooStats::HypoTestInverterResult::FindIndex( x ), if x == 1 then the return value is always -1 rather than the index of that xvalue. The problem is on L571-573 (in current master) of HypoTestInverterResult.cxx where the following if statement is used:; <pre>; if ( (std::abs(xvalue) > 1 && TMath::AreEqualRel( xvalue, xpoint, tol) ) ||; (std::abs(xvalue) < 1 && TMath::AreEqualAbs( xvalue, xpoint, tol) ) ); return i; ; </pre>. Please change the first piece of one of these two statements to include xvalue==1 (i.e. from &gt; to &ge; or &lt; to &le;). I don't think it matters which is changed. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; FindIndex should return the index of requested xvalue in the internal results array. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; I am using ROOT 6.22/00 from LCG_98python3 but this is still in issue in the master branch (per online documentation). ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8641
https://github.com/root-project/root/issues/8641:1617,Deployability,install,install,1617,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; In RooStats::HypoTestInverterResult::FindIndex( x ), if x == 1 then the return value is always -1 rather than the index of that xvalue. The problem is on L571-573 (in current master) of HypoTestInverterResult.cxx where the following if statement is used:; <pre>; if ( (std::abs(xvalue) > 1 && TMath::AreEqualRel( xvalue, xpoint, tol) ) ||; (std::abs(xvalue) < 1 && TMath::AreEqualAbs( xvalue, xpoint, tol) ) ); return i; ; </pre>. Please change the first piece of one of these two statements to include xvalue==1 (i.e. from &gt; to &ge; or &lt; to &le;). I don't think it matters which is changed. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; FindIndex should return the index of requested xvalue in the internal results array. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; I am using ROOT 6.22/00 from LCG_98python3 but this is still in issue in the master branch (per online documentation). ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8641
https://github.com/root-project/root/issues/8641:391,Usability,clear,clear,391,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; In RooStats::HypoTestInverterResult::FindIndex( x ), if x == 1 then the return value is always -1 rather than the index of that xvalue. The problem is on L571-573 (in current master) of HypoTestInverterResult.cxx where the following if statement is used:; <pre>; if ( (std::abs(xvalue) > 1 && TMath::AreEqualRel( xvalue, xpoint, tol) ) ||; (std::abs(xvalue) < 1 && TMath::AreEqualAbs( xvalue, xpoint, tol) ) ); return i; ; </pre>. Please change the first piece of one of these two statements to include xvalue==1 (i.e. from &gt; to &ge; or &lt; to &le;). I don't think it matters which is changed. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; FindIndex should return the index of requested xvalue in the internal results array. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; I am using ROOT 6.22/00 from LCG_98python3 but this is still in issue in the master branch (per online documentation). ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8641
https://github.com/root-project/root/issues/8641:1087,Usability,clear,clear,1087,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; In RooStats::HypoTestInverterResult::FindIndex( x ), if x == 1 then the return value is always -1 rather than the index of that xvalue. The problem is on L571-573 (in current master) of HypoTestInverterResult.cxx where the following if statement is used:; <pre>; if ( (std::abs(xvalue) > 1 && TMath::AreEqualRel( xvalue, xpoint, tol) ) ||; (std::abs(xvalue) < 1 && TMath::AreEqualAbs( xvalue, xpoint, tol) ) ); return i; ; </pre>. Please change the first piece of one of these two statements to include xvalue==1 (i.e. from &gt; to &ge; or &lt; to &le;). I don't think it matters which is changed. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; FindIndex should return the index of requested xvalue in the internal results array. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; I am using ROOT 6.22/00 from LCG_98python3 but this is still in issue in the master branch (per online documentation). ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8641
https://github.com/root-project/root/issues/8642:32,Availability,error,errors,32,"### Describe the bug; The build errors when switching from `CMAKE_CXX_STANDARD=14` (the default with GCC 8.4.1 on CentOS 8) to `CMAKE_CXX_STANDARD=17` (for example to get ROOT7).; ```; FAILED: tree/treeplayer/G__TreePlayer.cxx lib/TreePlayer.pcm; [...]; In module 'std' imported from input_line_1:1:; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable.h:2084:4: error: no matching member function for call to '_M_rehash_aux'; _M_rehash_aux(__n, __unique_keys());; ^~~~~~~~~~~~~; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable.h:1730:8: note: in instantiation of member function 'std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_rehash' requested here; _M_rehash(__do_rehash.second, __saved_state);; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable_policy.h:739:16: note: in instantiation of member function 'std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::st",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8642
https://github.com/root-project/root/issues/8642:387,Availability,error,error,387,"### Describe the bug; The build errors when switching from `CMAKE_CXX_STANDARD=14` (the default with GCC 8.4.1 on CentOS 8) to `CMAKE_CXX_STANDARD=17` (for example to get ROOT7).; ```; FAILED: tree/treeplayer/G__TreePlayer.cxx lib/TreePlayer.pcm; [...]; In module 'std' imported from input_line_1:1:; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable.h:2084:4: error: no matching member function for call to '_M_rehash_aux'; _M_rehash_aux(__n, __unique_keys());; ^~~~~~~~~~~~~; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable.h:1730:8: note: in instantiation of member function 'std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_rehash' requested here; _M_rehash(__do_rehash.second, __saved_state);; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable_policy.h:739:16: note: in instantiation of member function 'std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::st",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8642
https://github.com/root-project/root/issues/8642:4309,Availability,Error,Error,4309,":TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> >, std::hash<std::__cxx11::string>, std::equal_to<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > > > >::operator[]' requested here; fProxies[bpName].reset(p);; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable.h:915:12: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument; void _M_rehash_aux(size_type __n, std::true_type);; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable.h:918:12: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd argument; void _M_rehash_aux(size_type __n, std::false_type);; ^; Error: /home/jhahnfel/ROOT/build/bin/rootcling: compilation failure (/home/jhahnfel/ROOT/build/lib/libTreePlayer8033212c3f_dictUmbrella.h); ```; and; ```; FAILED: montecarlo/pythia8/G__EGPythia8.cxx lib/EGPythia8.pcm; [...]; In module 'std' imported from input_line_1:1:; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:601:2: error: no matching member function for call to '_M_move_assign'; _M_move_assign(std::move(__x), __bool_constant<__move_storage>());; ^~~~~~~~~~~~~~; /usr/include/Pythia8/LHEF3.h:212:25: note: in instantiation of member function 'std::vector<Pythia8::XMLTag *, std::allocator<Pythia8::XMLTag *> >::operator=' requested here; tags.back()->tags = findXMLTags(tags.back()->contents, &leftovers);; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1677:7: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument; _M_move_assign(vector&& __x, std::true_type) noexcep",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8642
https://github.com/root-project/root/issues/8642:4369,Availability,failure,failure,4369,":TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> >, std::hash<std::__cxx11::string>, std::equal_to<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > > > >::operator[]' requested here; fProxies[bpName].reset(p);; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable.h:915:12: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument; void _M_rehash_aux(size_type __n, std::true_type);; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable.h:918:12: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd argument; void _M_rehash_aux(size_type __n, std::false_type);; ^; Error: /home/jhahnfel/ROOT/build/bin/rootcling: compilation failure (/home/jhahnfel/ROOT/build/lib/libTreePlayer8033212c3f_dictUmbrella.h); ```; and; ```; FAILED: montecarlo/pythia8/G__EGPythia8.cxx lib/EGPythia8.pcm; [...]; In module 'std' imported from input_line_1:1:; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:601:2: error: no matching member function for call to '_M_move_assign'; _M_move_assign(std::move(__x), __bool_constant<__move_storage>());; ^~~~~~~~~~~~~~; /usr/include/Pythia8/LHEF3.h:212:25: note: in instantiation of member function 'std::vector<Pythia8::XMLTag *, std::allocator<Pythia8::XMLTag *> >::operator=' requested here; tags.back()->tags = findXMLTags(tags.back()->contents, &leftovers);; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1677:7: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument; _M_move_assign(vector&& __x, std::true_type) noexcep",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8642
https://github.com/root-project/root/issues/8642:4667,Availability,error,error,4667,"_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable.h:915:12: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument; void _M_rehash_aux(size_type __n, std::true_type);; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable.h:918:12: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd argument; void _M_rehash_aux(size_type __n, std::false_type);; ^; Error: /home/jhahnfel/ROOT/build/bin/rootcling: compilation failure (/home/jhahnfel/ROOT/build/lib/libTreePlayer8033212c3f_dictUmbrella.h); ```; and; ```; FAILED: montecarlo/pythia8/G__EGPythia8.cxx lib/EGPythia8.pcm; [...]; In module 'std' imported from input_line_1:1:; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:601:2: error: no matching member function for call to '_M_move_assign'; _M_move_assign(std::move(__x), __bool_constant<__move_storage>());; ^~~~~~~~~~~~~~; /usr/include/Pythia8/LHEF3.h:212:25: note: in instantiation of member function 'std::vector<Pythia8::XMLTag *, std::allocator<Pythia8::XMLTag *> >::operator=' requested here; tags.back()->tags = findXMLTags(tags.back()->contents, &leftovers);; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1677:7: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument; _M_move_assign(vector&& __x, std::true_type) noexcept; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1688:7: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd argument; _M_move_assign(vector&& __x, std::false_type); ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:601:2: error: no matching member fu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8642
https://github.com/root-project/root/issues/8642:5723,Availability,error,error,5723,"~~~~~~; /usr/include/Pythia8/LHEF3.h:212:25: note: in instantiation of member function 'std::vector<Pythia8::XMLTag *, std::allocator<Pythia8::XMLTag *> >::operator=' requested here; tags.back()->tags = findXMLTags(tags.back()->contents, &leftovers);; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1677:7: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument; _M_move_assign(vector&& __x, std::true_type) noexcept; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1688:7: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd argument; _M_move_assign(vector&& __x, std::false_type); ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:601:2: error: no matching member function for call to '_M_move_assign'; _M_move_assign(std::move(__x), __bool_constant<__move_storage>());; ^~~~~~~~~~~~~~; /usr/include/Pythia8/Settings.h:129:7: note: in instantiation of member function 'std::vector<int, std::allocator<int> >::operator=' requested here; class MVec {; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1677:7: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument; _M_move_assign(vector&& __x, std::true_type) noexcept; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1688:7: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd argument; _M_move_assign(vector&& __x, std::false_type); ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:601:2: error: no matching member function for call to '_M_move_assign'; _M_move_assign(std::move(__x), __bool_constan",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8642
https://github.com/root-project/root/issues/8642:6698,Availability,error,error,6698,"gn'; _M_move_assign(std::move(__x), __bool_constant<__move_storage>());; ^~~~~~~~~~~~~~; /usr/include/Pythia8/Settings.h:129:7: note: in instantiation of member function 'std::vector<int, std::allocator<int> >::operator=' requested here; class MVec {; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1677:7: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument; _M_move_assign(vector&& __x, std::true_type) noexcept; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1688:7: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd argument; _M_move_assign(vector&& __x, std::false_type); ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:601:2: error: no matching member function for call to '_M_move_assign'; _M_move_assign(std::move(__x), __bool_constant<__move_storage>());; ^~~~~~~~~~~~~~; /usr/include/Pythia8/Settings.h:152:7: note: in instantiation of member function 'std::vector<double, std::allocator<double> >::operator=' requested here; class PVec {; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1677:7: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument; _M_move_assign(vector&& __x, std::true_type) noexcept; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1688:7: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd ar; gument; _M_move_assign(vector&& __x, std::false_type); ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:601:2: error: no matching member function for call to '_M_move_assign'; _M_move_assign(std::move(__x), __bool",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8642
https://github.com/root-project/root/issues/8642:7681,Availability,error,error,7681,"move_assign(std::move(__x), __bool_constant<__move_storage>());; ^~~~~~~~~~~~~~; /usr/include/Pythia8/Settings.h:152:7: note: in instantiation of member function 'std::vector<double, std::allocator<double> >::operator=' requested here; class PVec {; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1677:7: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument; _M_move_assign(vector&& __x, std::true_type) noexcept; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1688:7: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd ar; gument; _M_move_assign(vector&& __x, std::false_type); ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:601:2: error: no matching member function for call to '_M_move_assign'; _M_move_assign(std::move(__x), __bool_constant<__move_storage>());; ^~~~~~~~~~~~~~; /usr/include/Pythia8/Settings.h:175:7: note: in instantiation of member function 'std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::operator=' requested here; class WVec {; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1677:7: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument; _M_move_assign(vector&& __x, std::true_type) noexcept; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1688:7: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd argument; _M_move_assign(vector&& __x, std::false_type); ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:601:2: error: no matching member function for call to '_M_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8642
https://github.com/root-project/root/issues/8642:8715,Availability,error,error,8715,"rage>());; ^~~~~~~~~~~~~~; /usr/include/Pythia8/Settings.h:175:7: note: in instantiation of member function 'std::vector<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::operator=' requested here; class WVec {; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1677:7: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument; _M_move_assign(vector&& __x, std::true_type) noexcept; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1688:7: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd argument; _M_move_assign(vector&& __x, std::false_type); ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:601:2: error: no matching member function for call to '_M_move_assign'; _M_move_assign(std::move(__x), __bool_constant<__move_storage>());; ^~~~~~~~~~~~~~; /usr/include/Pythia8/HelicityBasics.h:240:9: note: in instantiation of member function 'std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double> > >, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double> > > > >::operator=' requested here; rho = vector< vector<complex> >(spinStates(),; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1677:7: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument; _M_move_assign(vector&& __x, std::true_type) noexcept; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1688:7: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd argument; _M_move_assign(vector&& __x, std::false_type); ^; Error: /home/jhahnf",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8642
https://github.com/root-project/root/issues/8642:9784,Availability,Error,Error,9784,"unction not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument; _M_move_assign(vector&& __x, std::true_type) noexcept; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1688:7: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd argument; _M_move_assign(vector&& __x, std::false_type); ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:601:2: error: no matching member function for call to '_M_move_assign'; _M_move_assign(std::move(__x), __bool_constant<__move_storage>());; ^~~~~~~~~~~~~~; /usr/include/Pythia8/HelicityBasics.h:240:9: note: in instantiation of member function 'std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double> > >, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double> > > > >::operator=' requested here; rho = vector< vector<complex> >(spinStates(),; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1677:7: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument; _M_move_assign(vector&& __x, std::true_type) noexcept; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1688:7: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd argument; _M_move_assign(vector&& __x, std::false_type); ^; Error: /home/jhahnfel/ROOT/build/bin/rootcling: compilation failure (/home/jhahnfel/ROOT/build/lib/libEGPythia898309100d9_dictUmbrella.h); ```. ### Expected behavior; The build should succeed. ### To Reproduce; Configure current `master` with `cmake -DCMAKE_CXX_STANDARD=14` (or on a platform where this is detected as the default) and then switch to `CMAKE_CXX_STANDARD=17`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8642
https://github.com/root-project/root/issues/8642:9844,Availability,failure,failure,9844,"unction not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument; _M_move_assign(vector&& __x, std::true_type) noexcept; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1688:7: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd argument; _M_move_assign(vector&& __x, std::false_type); ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:601:2: error: no matching member function for call to '_M_move_assign'; _M_move_assign(std::move(__x), __bool_constant<__move_storage>());; ^~~~~~~~~~~~~~; /usr/include/Pythia8/HelicityBasics.h:240:9: note: in instantiation of member function 'std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double> > >, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double> > > > >::operator=' requested here; rho = vector< vector<complex> >(spinStates(),; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1677:7: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument; _M_move_assign(vector&& __x, std::true_type) noexcept; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1688:7: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd argument; _M_move_assign(vector&& __x, std::false_type); ^; Error: /home/jhahnfel/ROOT/build/bin/rootcling: compilation failure (/home/jhahnfel/ROOT/build/lib/libEGPythia898309100d9_dictUmbrella.h); ```. ### Expected behavior; The build should succeed. ### To Reproduce; Configure current `master` with `cmake -DCMAKE_CXX_STANDARD=14` (or on a platform where this is detected as the default) and then switch to `CMAKE_CXX_STANDARD=17`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8642
https://github.com/root-project/root/issues/8642:9995,Modifiability,Config,Configure,9995,"unction not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument; _M_move_assign(vector&& __x, std::true_type) noexcept; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1688:7: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd argument; _M_move_assign(vector&& __x, std::false_type); ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:601:2: error: no matching member function for call to '_M_move_assign'; _M_move_assign(std::move(__x), __bool_constant<__move_storage>());; ^~~~~~~~~~~~~~; /usr/include/Pythia8/HelicityBasics.h:240:9: note: in instantiation of member function 'std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double> > >, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double> > > > >::operator=' requested here; rho = vector< vector<complex> >(spinStates(),; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1677:7: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument; _M_move_assign(vector&& __x, std::true_type) noexcept; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1688:7: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd argument; _M_move_assign(vector&& __x, std::false_type); ^; Error: /home/jhahnfel/ROOT/build/bin/rootcling: compilation failure (/home/jhahnfel/ROOT/build/lib/libEGPythia898309100d9_dictUmbrella.h); ```. ### Expected behavior; The build should succeed. ### To Reproduce; Configure current `master` with `cmake -DCMAKE_CXX_STANDARD=14` (or on a platform where this is detected as the default) and then switch to `CMAKE_CXX_STANDARD=17`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8642
https://github.com/root-project/root/issues/8642:10091,Safety,detect,detected,10091,"unction not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument; _M_move_assign(vector&& __x, std::true_type) noexcept; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1688:7: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd argument; _M_move_assign(vector&& __x, std::false_type); ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:601:2: error: no matching member function for call to '_M_move_assign'; _M_move_assign(std::move(__x), __bool_constant<__move_storage>());; ^~~~~~~~~~~~~~; /usr/include/Pythia8/HelicityBasics.h:240:9: note: in instantiation of member function 'std::vector<std::vector<std::complex<double>, std::allocator<std::complex<double> > >, std::allocator<std::vector<std::complex<double>, std::allocator<std::complex<double> > > > >::operator=' requested here; rho = vector< vector<complex> >(spinStates(),; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1677:7: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument; _M_move_assign(vector&& __x, std::true_type) noexcept; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1688:7: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd argument; _M_move_assign(vector&& __x, std::false_type); ^; Error: /home/jhahnfel/ROOT/build/bin/rootcling: compilation failure (/home/jhahnfel/ROOT/build/lib/libEGPythia898309100d9_dictUmbrella.h); ```. ### Expected behavior; The build should succeed. ### To Reproduce; Configure current `master` with `cmake -DCMAKE_CXX_STANDARD=14` (or on a platform where this is detected as the default) and then switch to `CMAKE_CXX_STANDARD=17`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8642
https://github.com/root-project/root/issues/8642:367,Security,hash,hashtable,367,"### Describe the bug; The build errors when switching from `CMAKE_CXX_STANDARD=14` (the default with GCC 8.4.1 on CentOS 8) to `CMAKE_CXX_STANDARD=17` (for example to get ROOT7).; ```; FAILED: tree/treeplayer/G__TreePlayer.cxx lib/TreePlayer.pcm; [...]; In module 'std' imported from input_line_1:1:; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable.h:2084:4: error: no matching member function for call to '_M_rehash_aux'; _M_rehash_aux(__n, __unique_keys());; ^~~~~~~~~~~~~; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable.h:1730:8: note: in instantiation of member function 'std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_rehash' requested here; _M_rehash(__do_rehash.second, __saved_state);; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable_policy.h:739:16: note: in instantiation of member function 'std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::st",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8642
https://github.com/root-project/root/issues/8642:570,Security,hash,hashtable,570,"### Describe the bug; The build errors when switching from `CMAKE_CXX_STANDARD=14` (the default with GCC 8.4.1 on CentOS 8) to `CMAKE_CXX_STANDARD=17` (for example to get ROOT7).; ```; FAILED: tree/treeplayer/G__TreePlayer.cxx lib/TreePlayer.pcm; [...]; In module 'std' imported from input_line_1:1:; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable.h:2084:4: error: no matching member function for call to '_M_rehash_aux'; _M_rehash_aux(__n, __unique_keys());; ^~~~~~~~~~~~~; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable.h:1730:8: note: in instantiation of member function 'std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_rehash' requested here; _M_rehash(__do_rehash.second, __saved_state);; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable_policy.h:739:16: note: in instantiation of member function 'std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::st",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8642
https://github.com/root-project/root/issues/8642:1104,Security,hash,hash,1104,"### Describe the bug; The build errors when switching from `CMAKE_CXX_STANDARD=14` (the default with GCC 8.4.1 on CentOS 8) to `CMAKE_CXX_STANDARD=17` (for example to get ROOT7).; ```; FAILED: tree/treeplayer/G__TreePlayer.cxx lib/TreePlayer.pcm; [...]; In module 'std' imported from input_line_1:1:; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable.h:2084:4: error: no matching member function for call to '_M_rehash_aux'; _M_rehash_aux(__n, __unique_keys());; ^~~~~~~~~~~~~; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable.h:1730:8: note: in instantiation of member function 'std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_rehash' requested here; _M_rehash(__do_rehash.second, __saved_state);; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable_policy.h:739:16: note: in instantiation of member function 'std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::st",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8642
https://github.com/root-project/root/issues/8642:1980,Security,hash,hash,1980,"x11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_rehash' requested here; _M_rehash(__do_rehash.second, __saved_state);; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable_policy.h:739:16: note: in instantiation of member function 'std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node' requested here; return __h->_M_insert_unique_node(__n, __code, __p)->second;; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/unordered_map.h:978:16: note: in instantiation of member function 'std::__detail::_Map_base<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8642
https://github.com/root-project/root/issues/8642:2889,Security,hash,hash,2889,"g<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node' requested here; return __h->_M_insert_unique_node(__n, __code, __p)->second;; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/unordered_map.h:978:16: note: in instantiation of member function 'std::__detail::_Map_base<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[]' requested here; { return _M_h[std::move(__k)]; }; ^; /home/jhahnfel/ROOT/build/include/TTreeReader.h:264:15: note: in instantiation of member function 'std::unordered_map<std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> >, std::hash<std::__cxx11::string>, std::equal_to<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > > > >::operator[]' requested here; fProxies[bpName].reset(p);; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../..",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8642
https://github.com/root-project/root/issues/8642:3417,Security,hash,hash,3417,"ng<char>, std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[]' requested here; { return _M_h[std::move(__k)]; }; ^; /home/jhahnfel/ROOT/build/include/TTreeReader.h:264:15: note: in instantiation of member function 'std::unordered_map<std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> >, std::hash<std::__cxx11::string>, std::equal_to<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > > > >::operator[]' requested here; fProxies[bpName].reset(p);; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable.h:915:12: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument; void _M_rehash_aux(size_type __n, std::true_type);; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable.h:918:12: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd argument; void _M_rehash_aux(size_type __n, std::false_type);; ^; Error: /home/jhahnfel/ROOT/build/bin/rootcling: compilation failure (/home/jhahnfel/ROOT/build/lib/libTreePlayer8033212c3f_dictUmbrella.h); ```; and; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8642
https://github.com/root-project/root/issues/8642:3800,Security,hash,hashtable,3800,"oxy> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[]' requested here; { return _M_h[std::move(__k)]; }; ^; /home/jhahnfel/ROOT/build/include/TTreeReader.h:264:15: note: in instantiation of member function 'std::unordered_map<std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> >, std::hash<std::__cxx11::string>, std::equal_to<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > > > >::operator[]' requested here; fProxies[bpName].reset(p);; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable.h:915:12: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument; void _M_rehash_aux(size_type __n, std::true_type);; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable.h:918:12: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd argument; void _M_rehash_aux(size_type __n, std::false_type);; ^; Error: /home/jhahnfel/ROOT/build/bin/rootcling: compilation failure (/home/jhahnfel/ROOT/build/lib/libTreePlayer8033212c3f_dictUmbrella.h); ```; and; ```; FAILED: montecarlo/pythia8/G__EGPythia8.cxx lib/EGPythia8.pcm; [...]; In module 'std' imported from input_line_1:1:; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:601:2: error: no matching member function for call to '_M_move_assign'; _M_move_assign(std::move(__x), __bool_constant<__move_storage>(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8642
https://github.com/root-project/root/issues/8642:4074,Security,hash,hashtable,4074,"e, true>, true>::operator[]' requested here; { return _M_h[std::move(__k)]; }; ^; /home/jhahnfel/ROOT/build/include/TTreeReader.h:264:15: note: in instantiation of member function 'std::unordered_map<std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> >, std::hash<std::__cxx11::string>, std::equal_to<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > > > >::operator[]' requested here; fProxies[bpName].reset(p);; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable.h:915:12: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument; void _M_rehash_aux(size_type __n, std::true_type);; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable.h:918:12: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd argument; void _M_rehash_aux(size_type __n, std::false_type);; ^; Error: /home/jhahnfel/ROOT/build/bin/rootcling: compilation failure (/home/jhahnfel/ROOT/build/lib/libTreePlayer8033212c3f_dictUmbrella.h); ```; and; ```; FAILED: montecarlo/pythia8/G__EGPythia8.cxx lib/EGPythia8.pcm; [...]; In module 'std' imported from input_line_1:1:; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:601:2: error: no matching member function for call to '_M_move_assign'; _M_move_assign(std::move(__x), __bool_constant<__move_storage>());; ^~~~~~~~~~~~~~; /usr/include/Pythia8/LHEF3.h:212:25: note: in instantiation of member function 'std::vector<Pythia8::XMLTag *, std::allocator<Pythia8::XMLTag *> >::operator=' requested here; tags.back()->tags = findXMLTags(tags.back()->contents, &leftovers);; ^; /usr/l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8642
https://github.com/root-project/root/issues/8643:377,Modifiability,config,config,377,The minimum version is C++14 since #8583. https://github.com/root-project/root/blob/8341e59956b08e78aea43bdcdb0ada478be7018b/core/foundation/inc/ROOT/RConfig.hxx#L47-L52. https://github.com/root-project/root/blob/8341e59956b08e78aea43bdcdb0ada478be7018b/documentation/doxygen/Makefile#L27-L28. https://github.com/root-project/root/blob/8341e59956b08e78aea43bdcdb0ada478be7018b/config/root-config.in#L348-L350. Possibly more in `pyroot` / `cppyy`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8643
https://github.com/root-project/root/issues/8643:389,Modifiability,config,config,389,The minimum version is C++14 since #8583. https://github.com/root-project/root/blob/8341e59956b08e78aea43bdcdb0ada478be7018b/core/foundation/inc/ROOT/RConfig.hxx#L47-L52. https://github.com/root-project/root/blob/8341e59956b08e78aea43bdcdb0ada478be7018b/documentation/doxygen/Makefile#L27-L28. https://github.com/root-project/root/blob/8341e59956b08e78aea43bdcdb0ada478be7018b/config/root-config.in#L348-L350. Possibly more in `pyroot` / `cppyy`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8643
https://github.com/root-project/root/issues/8644:1213,Deployability,integrat,integration,1213," their concrete type, or convert the TClonesArray to a type-aware container (for reference: first brought up in https://root-forum.cern.ch/t/reading-tclonesarray-in-jitted-rdf/45784, thanks to @eguiraud for explaining why my naive code did not work). ### Optional: share how it could be improved. The type information is stored, so an automatic conversion could be done. ### To Reproduce. ```python; import ROOT as gbl; gbl.gSystem.Load(""/afs/cern.ch/user/p/piedavid/public/delphes_bamboo/DelphesIO/libDelphesIO.so""); gbl.Electron; f = gbl.TFile.Open(""/afs/cern.ch/user/a/atalierc/public/snowmass/delphes_lhe_file_47_14TeV.lhe.root""); tree = f.Get(""Delphes""); df = gbl.ROOT.RDataFrame(tree); df.Define(""leadElPT"", ""Electron[0]->PT""); ```; where the last statement needs this to work (the typedef to distinguish the column and type name):; ```python; gbl.gInterpreter.Declare(""using delphes_electron = Electron;""); df.Define(""leadElPT1"", ""static_cast<delphes_electron*>(Electron[0])->PT""); ```; but for integration in an analysis framework, converting the container is more convenient. What I came up with is this:; ```C++; #include <TObjArray.h>; #include <ROOT/RVec.hxx>. namespace rdfhelpers {; template<typename OBJ>; ROOT::VecOps::RVec<OBJ*> objArrayToRVec(const TObjArray& arr) {; ROOT::VecOps::RVec<OBJ*> out{reinterpret_cast<OBJ**>(arr.GetObjectRef()), static_cast<std::size_t>(arr.GetEntries())};; auto it = *dynamic_cast<TObjArrayIter*>(arr.MakeIterator());; std::size_t i = 0;; while ( ( i != out.size() ) && ( out[i] == *it ) ) {; it.Next();; ++i;; }; if ( i != out.size() ) { // not equal to contiguous array, copy pointers; it.Reset();; const auto n = out.size();; out = ROOT::VecOps::RVec<OBJ*>();; out.reserve(n);; do {; out.push_back(static_cast<OBJ*>(*it));; } while ( it.Next() );; }; return out;; }; };; ```; then I can add a set of defines and use those containers instead:; ```python; df = df.Define(""myElectrons"", ""rdfhelpers::objArrayToRVec<delphes_electron>(Electron)""); df.Def",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8644
https://github.com/root-project/root/issues/8644:2374,Deployability,upgrade,upgrade,2374,"onal: share how it could be improved. The type information is stored, so an automatic conversion could be done. ### To Reproduce. ```python; import ROOT as gbl; gbl.gSystem.Load(""/afs/cern.ch/user/p/piedavid/public/delphes_bamboo/DelphesIO/libDelphesIO.so""); gbl.Electron; f = gbl.TFile.Open(""/afs/cern.ch/user/a/atalierc/public/snowmass/delphes_lhe_file_47_14TeV.lhe.root""); tree = f.Get(""Delphes""); df = gbl.ROOT.RDataFrame(tree); df.Define(""leadElPT"", ""Electron[0]->PT""); ```; where the last statement needs this to work (the typedef to distinguish the column and type name):; ```python; gbl.gInterpreter.Declare(""using delphes_electron = Electron;""); df.Define(""leadElPT1"", ""static_cast<delphes_electron*>(Electron[0])->PT""); ```; but for integration in an analysis framework, converting the container is more convenient. What I came up with is this:; ```C++; #include <TObjArray.h>; #include <ROOT/RVec.hxx>. namespace rdfhelpers {; template<typename OBJ>; ROOT::VecOps::RVec<OBJ*> objArrayToRVec(const TObjArray& arr) {; ROOT::VecOps::RVec<OBJ*> out{reinterpret_cast<OBJ**>(arr.GetObjectRef()), static_cast<std::size_t>(arr.GetEntries())};; auto it = *dynamic_cast<TObjArrayIter*>(arr.MakeIterator());; std::size_t i = 0;; while ( ( i != out.size() ) && ( out[i] == *it ) ) {; it.Next();; ++i;; }; if ( i != out.size() ) { // not equal to contiguous array, copy pointers; it.Reset();; const auto n = out.size();; out = ROOT::VecOps::RVec<OBJ*>();; out.reserve(n);; do {; out.push_back(static_cast<OBJ*>(*it));; } while ( it.Next() );; }; return out;; }; };; ```; then I can add a set of defines and use those containers instead:; ```python; df = df.Define(""myElectrons"", ""rdfhelpers::objArrayToRVec<delphes_electron>(Electron)""); df.Define(""leadElPT"", ""myElectrons[0]->PT""); ```. ### Setup; ROOT 6.24/00 from LCG_100 (x86_64-centos7-gcc10-opt) on lxplus. CC: @jnsandhya @selvaggi @pavel-demin (CMS upgrade performance study tools experts and Delphes maintainers, they may be interested as well)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8644
https://github.com/root-project/root/issues/8644:1213,Integrability,integrat,integration,1213," their concrete type, or convert the TClonesArray to a type-aware container (for reference: first brought up in https://root-forum.cern.ch/t/reading-tclonesarray-in-jitted-rdf/45784, thanks to @eguiraud for explaining why my naive code did not work). ### Optional: share how it could be improved. The type information is stored, so an automatic conversion could be done. ### To Reproduce. ```python; import ROOT as gbl; gbl.gSystem.Load(""/afs/cern.ch/user/p/piedavid/public/delphes_bamboo/DelphesIO/libDelphesIO.so""); gbl.Electron; f = gbl.TFile.Open(""/afs/cern.ch/user/a/atalierc/public/snowmass/delphes_lhe_file_47_14TeV.lhe.root""); tree = f.Get(""Delphes""); df = gbl.ROOT.RDataFrame(tree); df.Define(""leadElPT"", ""Electron[0]->PT""); ```; where the last statement needs this to work (the typedef to distinguish the column and type name):; ```python; gbl.gInterpreter.Declare(""using delphes_electron = Electron;""); df.Define(""leadElPT1"", ""static_cast<delphes_electron*>(Electron[0])->PT""); ```; but for integration in an analysis framework, converting the container is more convenient. What I came up with is this:; ```C++; #include <TObjArray.h>; #include <ROOT/RVec.hxx>. namespace rdfhelpers {; template<typename OBJ>; ROOT::VecOps::RVec<OBJ*> objArrayToRVec(const TObjArray& arr) {; ROOT::VecOps::RVec<OBJ*> out{reinterpret_cast<OBJ**>(arr.GetObjectRef()), static_cast<std::size_t>(arr.GetEntries())};; auto it = *dynamic_cast<TObjArrayIter*>(arr.MakeIterator());; std::size_t i = 0;; while ( ( i != out.size() ) && ( out[i] == *it ) ) {; it.Next();; ++i;; }; if ( i != out.size() ) { // not equal to contiguous array, copy pointers; it.Reset();; const auto n = out.size();; out = ROOT::VecOps::RVec<OBJ*>();; out.reserve(n);; do {; out.push_back(static_cast<OBJ*>(*it));; } while ( it.Next() );; }; return out;; }; };; ```; then I can add a set of defines and use those containers instead:; ```python; df = df.Define(""myElectrons"", ""rdfhelpers::objArrayToRVec<delphes_electron>(Electron)""); df.Def",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8644
https://github.com/root-project/root/issues/8644:643,Performance,Load,Load,643,"### Explain what you would like to see improved. Reading [Delphes](https://github.com/delphes/delphes) trees (which use TClonesArray) with RDF is a bit complicated (see below) due to the need to cast elements to their concrete type, or convert the TClonesArray to a type-aware container (for reference: first brought up in https://root-forum.cern.ch/t/reading-tclonesarray-in-jitted-rdf/45784, thanks to @eguiraud for explaining why my naive code did not work). ### Optional: share how it could be improved. The type information is stored, so an automatic conversion could be done. ### To Reproduce. ```python; import ROOT as gbl; gbl.gSystem.Load(""/afs/cern.ch/user/p/piedavid/public/delphes_bamboo/DelphesIO/libDelphesIO.so""); gbl.Electron; f = gbl.TFile.Open(""/afs/cern.ch/user/a/atalierc/public/snowmass/delphes_lhe_file_47_14TeV.lhe.root""); tree = f.Get(""Delphes""); df = gbl.ROOT.RDataFrame(tree); df.Define(""leadElPT"", ""Electron[0]->PT""); ```; where the last statement needs this to work (the typedef to distinguish the column and type name):; ```python; gbl.gInterpreter.Declare(""using delphes_electron = Electron;""); df.Define(""leadElPT1"", ""static_cast<delphes_electron*>(Electron[0])->PT""); ```; but for integration in an analysis framework, converting the container is more convenient. What I came up with is this:; ```C++; #include <TObjArray.h>; #include <ROOT/RVec.hxx>. namespace rdfhelpers {; template<typename OBJ>; ROOT::VecOps::RVec<OBJ*> objArrayToRVec(const TObjArray& arr) {; ROOT::VecOps::RVec<OBJ*> out{reinterpret_cast<OBJ**>(arr.GetObjectRef()), static_cast<std::size_t>(arr.GetEntries())};; auto it = *dynamic_cast<TObjArrayIter*>(arr.MakeIterator());; std::size_t i = 0;; while ( ( i != out.size() ) && ( out[i] == *it ) ) {; it.Next();; ++i;; }; if ( i != out.size() ) { // not equal to contiguous array, copy pointers; it.Reset();; const auto n = out.size();; out = ROOT::VecOps::RVec<OBJ*>();; out.reserve(n);; do {; out.push_back(static_cast<OBJ*>(*it));; } while ( it.N",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8644
https://github.com/root-project/root/issues/8644:2382,Performance,perform,performance,2382,"onal: share how it could be improved. The type information is stored, so an automatic conversion could be done. ### To Reproduce. ```python; import ROOT as gbl; gbl.gSystem.Load(""/afs/cern.ch/user/p/piedavid/public/delphes_bamboo/DelphesIO/libDelphesIO.so""); gbl.Electron; f = gbl.TFile.Open(""/afs/cern.ch/user/a/atalierc/public/snowmass/delphes_lhe_file_47_14TeV.lhe.root""); tree = f.Get(""Delphes""); df = gbl.ROOT.RDataFrame(tree); df.Define(""leadElPT"", ""Electron[0]->PT""); ```; where the last statement needs this to work (the typedef to distinguish the column and type name):; ```python; gbl.gInterpreter.Declare(""using delphes_electron = Electron;""); df.Define(""leadElPT1"", ""static_cast<delphes_electron*>(Electron[0])->PT""); ```; but for integration in an analysis framework, converting the container is more convenient. What I came up with is this:; ```C++; #include <TObjArray.h>; #include <ROOT/RVec.hxx>. namespace rdfhelpers {; template<typename OBJ>; ROOT::VecOps::RVec<OBJ*> objArrayToRVec(const TObjArray& arr) {; ROOT::VecOps::RVec<OBJ*> out{reinterpret_cast<OBJ**>(arr.GetObjectRef()), static_cast<std::size_t>(arr.GetEntries())};; auto it = *dynamic_cast<TObjArrayIter*>(arr.MakeIterator());; std::size_t i = 0;; while ( ( i != out.size() ) && ( out[i] == *it ) ) {; it.Next();; ++i;; }; if ( i != out.size() ) { // not equal to contiguous array, copy pointers; it.Reset();; const auto n = out.size();; out = ROOT::VecOps::RVec<OBJ*>();; out.reserve(n);; do {; out.push_back(static_cast<OBJ*>(*it));; } while ( it.Next() );; }; return out;; }; };; ```; then I can add a set of defines and use those containers instead:; ```python; df = df.Define(""myElectrons"", ""rdfhelpers::objArrayToRVec<delphes_electron>(Electron)""); df.Define(""leadElPT"", ""myElectrons[0]->PT""); ```. ### Setup; ROOT 6.24/00 from LCG_100 (x86_64-centos7-gcc10-opt) on lxplus. CC: @jnsandhya @selvaggi @pavel-demin (CMS upgrade performance study tools experts and Delphes maintainers, they may be interested as well)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8644
https://github.com/root-project/root/pull/8646:1666,Energy Efficiency,adapt,adapted,1666,"This commit changes the way in which the input dataset is split in logical ranges of entries. It also changes the subsequent creation of an RDataFrame instance inside a distributed task.; For a TTree based dataset, this happens through the creation of a TChain that represents the subset of the original dataset that contains the entries in the range. Before this commit:; For the TTree based case, the entries of the range are global with respect to the TChain created inside the distributed task.; `TChain.SetCacheEntryRange` is called with the start and end entries of the range to make sure we don't read more than needed; An RDataFrame is created with the chain as argument. The `Range` operation is used to select only the entries of the TChain in the current task that are inside the input entry range. After this commit:; For the TTree based case, the input range will report global entries with respect to the TChain of the task. But it will also report local entries with respect to each single file of the TChain in the current task.; A global TEntryList is created and filled with one sub-TEntryList per file in the chain. This allows to do a preselection directly in the TChain of the entries that should be processed or not.; `SetCacheEntryRange` is still called to ensure we don't read more than needed (hence the need to still keep global entries in the range object); The TChain (with the TEntryList) is passed as argument to an RDataFrame constructor. ## TODOs. - [x] ~add some check against using multiple times the same filename, to prevent hitting https://github.com/root-project/root/issues/8505~ No longer needed after #8660 ; - [x] Old tests adapted to new logic; - [x] Added one new test to check against reading the wrong number of entries depending on the number of partitions (a result of using TEntryList with multiple times the same treename and filename)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8646
https://github.com/root-project/root/pull/8646:1766,Integrability,depend,depending,1766,"This commit changes the way in which the input dataset is split in logical ranges of entries. It also changes the subsequent creation of an RDataFrame instance inside a distributed task.; For a TTree based dataset, this happens through the creation of a TChain that represents the subset of the original dataset that contains the entries in the range. Before this commit:; For the TTree based case, the entries of the range are global with respect to the TChain created inside the distributed task.; `TChain.SetCacheEntryRange` is called with the start and end entries of the range to make sure we don't read more than needed; An RDataFrame is created with the chain as argument. The `Range` operation is used to select only the entries of the TChain in the current task that are inside the input entry range. After this commit:; For the TTree based case, the input range will report global entries with respect to the TChain of the task. But it will also report local entries with respect to each single file of the TChain in the current task.; A global TEntryList is created and filled with one sub-TEntryList per file in the chain. This allows to do a preselection directly in the TChain of the entries that should be processed or not.; `SetCacheEntryRange` is still called to ensure we don't read more than needed (hence the need to still keep global entries in the range object); The TChain (with the TEntryList) is passed as argument to an RDataFrame constructor. ## TODOs. - [x] ~add some check against using multiple times the same filename, to prevent hitting https://github.com/root-project/root/issues/8505~ No longer needed after #8660 ; - [x] Old tests adapted to new logic; - [x] Added one new test to check against reading the wrong number of entries depending on the number of partitions (a result of using TEntryList with multiple times the same treename and filename)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8646
https://github.com/root-project/root/pull/8646:1666,Modifiability,adapt,adapted,1666,"This commit changes the way in which the input dataset is split in logical ranges of entries. It also changes the subsequent creation of an RDataFrame instance inside a distributed task.; For a TTree based dataset, this happens through the creation of a TChain that represents the subset of the original dataset that contains the entries in the range. Before this commit:; For the TTree based case, the entries of the range are global with respect to the TChain created inside the distributed task.; `TChain.SetCacheEntryRange` is called with the start and end entries of the range to make sure we don't read more than needed; An RDataFrame is created with the chain as argument. The `Range` operation is used to select only the entries of the TChain in the current task that are inside the input entry range. After this commit:; For the TTree based case, the input range will report global entries with respect to the TChain of the task. But it will also report local entries with respect to each single file of the TChain in the current task.; A global TEntryList is created and filled with one sub-TEntryList per file in the chain. This allows to do a preselection directly in the TChain of the entries that should be processed or not.; `SetCacheEntryRange` is still called to ensure we don't read more than needed (hence the need to still keep global entries in the range object); The TChain (with the TEntryList) is passed as argument to an RDataFrame constructor. ## TODOs. - [x] ~add some check against using multiple times the same filename, to prevent hitting https://github.com/root-project/root/issues/8505~ No longer needed after #8660 ; - [x] Old tests adapted to new logic; - [x] Added one new test to check against reading the wrong number of entries depending on the number of partitions (a result of using TEntryList with multiple times the same treename and filename)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8646
https://github.com/root-project/root/pull/8646:67,Testability,log,logical,67,"This commit changes the way in which the input dataset is split in logical ranges of entries. It also changes the subsequent creation of an RDataFrame instance inside a distributed task.; For a TTree based dataset, this happens through the creation of a TChain that represents the subset of the original dataset that contains the entries in the range. Before this commit:; For the TTree based case, the entries of the range are global with respect to the TChain created inside the distributed task.; `TChain.SetCacheEntryRange` is called with the start and end entries of the range to make sure we don't read more than needed; An RDataFrame is created with the chain as argument. The `Range` operation is used to select only the entries of the TChain in the current task that are inside the input entry range. After this commit:; For the TTree based case, the input range will report global entries with respect to the TChain of the task. But it will also report local entries with respect to each single file of the TChain in the current task.; A global TEntryList is created and filled with one sub-TEntryList per file in the chain. This allows to do a preselection directly in the TChain of the entries that should be processed or not.; `SetCacheEntryRange` is still called to ensure we don't read more than needed (hence the need to still keep global entries in the range object); The TChain (with the TEntryList) is passed as argument to an RDataFrame constructor. ## TODOs. - [x] ~add some check against using multiple times the same filename, to prevent hitting https://github.com/root-project/root/issues/8505~ No longer needed after #8660 ; - [x] Old tests adapted to new logic; - [x] Added one new test to check against reading the wrong number of entries depending on the number of partitions (a result of using TEntryList with multiple times the same treename and filename)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8646
https://github.com/root-project/root/pull/8646:1660,Testability,test,tests,1660,"This commit changes the way in which the input dataset is split in logical ranges of entries. It also changes the subsequent creation of an RDataFrame instance inside a distributed task.; For a TTree based dataset, this happens through the creation of a TChain that represents the subset of the original dataset that contains the entries in the range. Before this commit:; For the TTree based case, the entries of the range are global with respect to the TChain created inside the distributed task.; `TChain.SetCacheEntryRange` is called with the start and end entries of the range to make sure we don't read more than needed; An RDataFrame is created with the chain as argument. The `Range` operation is used to select only the entries of the TChain in the current task that are inside the input entry range. After this commit:; For the TTree based case, the input range will report global entries with respect to the TChain of the task. But it will also report local entries with respect to each single file of the TChain in the current task.; A global TEntryList is created and filled with one sub-TEntryList per file in the chain. This allows to do a preselection directly in the TChain of the entries that should be processed or not.; `SetCacheEntryRange` is still called to ensure we don't read more than needed (hence the need to still keep global entries in the range object); The TChain (with the TEntryList) is passed as argument to an RDataFrame constructor. ## TODOs. - [x] ~add some check against using multiple times the same filename, to prevent hitting https://github.com/root-project/root/issues/8505~ No longer needed after #8660 ; - [x] Old tests adapted to new logic; - [x] Added one new test to check against reading the wrong number of entries depending on the number of partitions (a result of using TEntryList with multiple times the same treename and filename)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8646
https://github.com/root-project/root/pull/8646:1681,Testability,log,logic,1681,"This commit changes the way in which the input dataset is split in logical ranges of entries. It also changes the subsequent creation of an RDataFrame instance inside a distributed task.; For a TTree based dataset, this happens through the creation of a TChain that represents the subset of the original dataset that contains the entries in the range. Before this commit:; For the TTree based case, the entries of the range are global with respect to the TChain created inside the distributed task.; `TChain.SetCacheEntryRange` is called with the start and end entries of the range to make sure we don't read more than needed; An RDataFrame is created with the chain as argument. The `Range` operation is used to select only the entries of the TChain in the current task that are inside the input entry range. After this commit:; For the TTree based case, the input range will report global entries with respect to the TChain of the task. But it will also report local entries with respect to each single file of the TChain in the current task.; A global TEntryList is created and filled with one sub-TEntryList per file in the chain. This allows to do a preselection directly in the TChain of the entries that should be processed or not.; `SetCacheEntryRange` is still called to ensure we don't read more than needed (hence the need to still keep global entries in the range object); The TChain (with the TEntryList) is passed as argument to an RDataFrame constructor. ## TODOs. - [x] ~add some check against using multiple times the same filename, to prevent hitting https://github.com/root-project/root/issues/8505~ No longer needed after #8660 ; - [x] Old tests adapted to new logic; - [x] Added one new test to check against reading the wrong number of entries depending on the number of partitions (a result of using TEntryList with multiple times the same treename and filename)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8646
https://github.com/root-project/root/pull/8646:1708,Testability,test,test,1708,"This commit changes the way in which the input dataset is split in logical ranges of entries. It also changes the subsequent creation of an RDataFrame instance inside a distributed task.; For a TTree based dataset, this happens through the creation of a TChain that represents the subset of the original dataset that contains the entries in the range. Before this commit:; For the TTree based case, the entries of the range are global with respect to the TChain created inside the distributed task.; `TChain.SetCacheEntryRange` is called with the start and end entries of the range to make sure we don't read more than needed; An RDataFrame is created with the chain as argument. The `Range` operation is used to select only the entries of the TChain in the current task that are inside the input entry range. After this commit:; For the TTree based case, the input range will report global entries with respect to the TChain of the task. But it will also report local entries with respect to each single file of the TChain in the current task.; A global TEntryList is created and filled with one sub-TEntryList per file in the chain. This allows to do a preselection directly in the TChain of the entries that should be processed or not.; `SetCacheEntryRange` is still called to ensure we don't read more than needed (hence the need to still keep global entries in the range object); The TChain (with the TEntryList) is passed as argument to an RDataFrame constructor. ## TODOs. - [x] ~add some check against using multiple times the same filename, to prevent hitting https://github.com/root-project/root/issues/8505~ No longer needed after #8660 ; - [x] Old tests adapted to new logic; - [x] Added one new test to check against reading the wrong number of entries depending on the number of partitions (a result of using TEntryList with multiple times the same treename and filename)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8646
https://github.com/root-project/root/issues/8647:170,Availability,Error,Error,170,"### Explain what you would like to see improved; TGHtml objects can be stored into a TFile. However, when opening a TBrowser, right click or double click leads to:; ```; Error in <TQClass::New>: cannot create object of class TGHtml; Error in <TKey::ReadObj>: Cannot create new object of class TGHtml; ```. It would be nice if it would be supported in the TBrowser. ### Optional: share how it could be improved; - Right click, dump, prints the HTML code to terminal; - Double click reproduces the TGHtml on a canvas?. ### To Reproduce; 1. Store TGHtml object to TFile; 2. Open TFile with TBrowser and double-click. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 17 2021, 10:49:42 |; | From heads/master@v6-25-01-861-g5ea261143f |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8647
https://github.com/root-project/root/issues/8647:233,Availability,Error,Error,233,"### Explain what you would like to see improved; TGHtml objects can be stored into a TFile. However, when opening a TBrowser, right click or double click leads to:; ```; Error in <TQClass::New>: cannot create object of class TGHtml; Error in <TKey::ReadObj>: Cannot create new object of class TGHtml; ```. It would be nice if it would be supported in the TBrowser. ### Optional: share how it could be improved; - Right click, dump, prints the HTML code to terminal; - Double click reproduces the TGHtml on a canvas?. ### To Reproduce; 1. Store TGHtml object to TFile; 2. Open TFile with TBrowser and double-click. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 17 2021, 10:49:42 |; | From heads/master@v6-25-01-861-g5ea261143f |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8647
https://github.com/root-project/root/pull/8651:95,Deployability,update,updated,95,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8651
https://github.com/root-project/root/pull/8651:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8651
https://github.com/root-project/root/pull/8653:151,Usability,guid,guides,151,"#8569 set the ClassDef version to 1, while it was zero before. Zero was a special value meaning ""no I/O needed"" (see https://root.cern.ch/root/html534/guides/users-guide/AddingaClass.html#motivation). This PR/commit resets it to zero. Fixes #8652.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8653
https://github.com/root-project/root/pull/8653:164,Usability,guid,guide,164,"#8569 set the ClassDef version to 1, while it was zero before. Zero was a special value meaning ""no I/O needed"" (see https://root.cern.ch/root/html534/guides/users-guide/AddingaClass.html#motivation). This PR/commit resets it to zero. Fixes #8652.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8653
https://github.com/root-project/root/pull/8654:84,Deployability,integrat,integration,84,"I tested this in a private repository, but unfortunately I can only check the final integration after merging...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8654
https://github.com/root-project/root/pull/8654:84,Integrability,integrat,integration,84,"I tested this in a private repository, but unfortunately I can only check the final integration after merging...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8654
https://github.com/root-project/root/pull/8654:2,Testability,test,tested,2,"I tested this in a private repository, but unfortunately I can only check the final integration after merging...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8654
https://github.com/root-project/root/issues/8655:61,Deployability,install,install,61,"- [x] Checked for duplicates. ### Describe the bug; When you install a ROOT with builtins, it also installs the builtin headers (+ libraries probably) into the system directory.; This might be at least surprising, if not annoying. ### Expected behavior; If builtins are needed, they could go into `${CMAKE_INSTALL_PREFIX}/include/ROOT_builtins}` or similar. This unfortunately requires going through all builtins, and changing their install locations, but I don't see a way around that. ### To Reproduce; ```; cmake -DCMAKE_INSTALL_PREFIX=/tmp/dummyInstallation <path/to/root>; make -j install; ```. ### Setup; Master, linux.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8655
https://github.com/root-project/root/issues/8655:99,Deployability,install,installs,99,"- [x] Checked for duplicates. ### Describe the bug; When you install a ROOT with builtins, it also installs the builtin headers (+ libraries probably) into the system directory.; This might be at least surprising, if not annoying. ### Expected behavior; If builtins are needed, they could go into `${CMAKE_INSTALL_PREFIX}/include/ROOT_builtins}` or similar. This unfortunately requires going through all builtins, and changing their install locations, but I don't see a way around that. ### To Reproduce; ```; cmake -DCMAKE_INSTALL_PREFIX=/tmp/dummyInstallation <path/to/root>; make -j install; ```. ### Setup; Master, linux.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8655
https://github.com/root-project/root/issues/8655:433,Deployability,install,install,433,"- [x] Checked for duplicates. ### Describe the bug; When you install a ROOT with builtins, it also installs the builtin headers (+ libraries probably) into the system directory.; This might be at least surprising, if not annoying. ### Expected behavior; If builtins are needed, they could go into `${CMAKE_INSTALL_PREFIX}/include/ROOT_builtins}` or similar. This unfortunately requires going through all builtins, and changing their install locations, but I don't see a way around that. ### To Reproduce; ```; cmake -DCMAKE_INSTALL_PREFIX=/tmp/dummyInstallation <path/to/root>; make -j install; ```. ### Setup; Master, linux.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8655
https://github.com/root-project/root/issues/8655:586,Deployability,install,install,586,"- [x] Checked for duplicates. ### Describe the bug; When you install a ROOT with builtins, it also installs the builtin headers (+ libraries probably) into the system directory.; This might be at least surprising, if not annoying. ### Expected behavior; If builtins are needed, they could go into `${CMAKE_INSTALL_PREFIX}/include/ROOT_builtins}` or similar. This unfortunately requires going through all builtins, and changing their install locations, but I don't see a way around that. ### To Reproduce; ```; cmake -DCMAKE_INSTALL_PREFIX=/tmp/dummyInstallation <path/to/root>; make -j install; ```. ### Setup; Master, linux.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8655
https://github.com/root-project/root/pull/8657:18,Availability,error,errors,18,"- Fix compilation errors with `/std:c++17` (and later) option on Windows; - Add `/std:c++17` flag for ACLiC; - Add the `-wd4146` compiler flag to ignore the warning C4146: unary minus operator applied to unsigned type, result still unsigned (in LLVM); - Add a the missing `#include <typeinfo>` and `#include <stdexcept>` with `/std:c++17`; - Don't add the `-fPIC` flag with MSVC (prevent the command line warning D9002: ignoring unknown option '-fPIC')",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8657
https://github.com/root-project/root/pull/8658:44,Availability,ping,pinging,44,"Nudge about those issues without a project, pinging the person who closed and all assignees. (new version of #8654 which runs daily instead of immediately after closing an issue)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8658
https://github.com/root-project/root/pull/8659:165,Deployability,Update,Update,165,"1. When doing interactive zooming, do not reset zoom range from TCanvas range; 2. When apply changes from client, avoid `TPad::Modified()` if nothing is changed; 3. Update JSROOT with code of 6.2.0 release",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8659
https://github.com/root-project/root/pull/8659:198,Deployability,release,release,198,"1. When doing interactive zooming, do not reset zoom range from TCanvas range; 2. When apply changes from client, avoid `TPad::Modified()` if nothing is changed; 3. Update JSROOT with code of 6.2.0 release",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8659
https://github.com/root-project/root/pull/8659:114,Safety,avoid,avoid,114,"1. When doing interactive zooming, do not reset zoom range from TCanvas range; 2. When apply changes from client, avoid `TPad::Modified()` if nothing is changed; 3. Update JSROOT with code of 6.2.0 release",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8659
https://github.com/root-project/root/pull/8660:269,Safety,avoid,avoid,269,"This PR shows the ingredients needed to provide a fix (or more like a workaround) to https://github.com/root-project/root/issues/8505. * A new function `TEntryList::AddSubList` which purpose is specifically of adding a sub list to the main TEntryList. With this we can avoid the logic of `TEntryList::Add` that merges multiple TEntryList referring to the same tree into a global list.; * A slight modification in `TChain::SetEntryList` to grab the sub-TEntryList with the same index as the current sub-tree in the chain. Currently, this is done instead with `GetEntryList(treename, filename, opt)` that will always report the same sub-TEntryList referring to the ""first"" file (because all files of the sublists of the global TEntryList have the same name). The changes are not definitive at all. I wanted to ask your opinion if it's a valid way forward. If so, I will polish the code and prepare it for a real PR. With this commit, the following snippet; ```cpp; int main(){; auto start_1{0};; auto start_2{0};; auto end_1{20};; auto end_2{10};. TEntryList elists;; TEntryList elist1{""e"",""e"",""entries"",""file_20entries_1.root""};; TEntryList elist2{""e"",""e"",""entries"",""file_20entries_1.root""};. for(auto entry = start_1; entry < end_1; entry++){; elist1.Enter(entry);; }. for(auto entry = start_2; entry < end_2; entry++){; elist2.Enter(entry);; }. elists.AddSubList(&elist1);; elists.AddSubList(&elist2);. TChain chain{""entries""};; chain.Add(""file_20entries_1.root"");; chain.Add(""file_20entries_1.root"");. chain.SetEntryList(&elists, ""sync"");. ROOT::RDataFrame df{chain};. std::cout << df.Count().GetValue() << ""\n"";; }; ```; Outputs the correct result:; ```; $: ./tentrylist_emptysource_addsublist ; 30; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8660
https://github.com/root-project/root/pull/8660:279,Testability,log,logic,279,"This PR shows the ingredients needed to provide a fix (or more like a workaround) to https://github.com/root-project/root/issues/8505. * A new function `TEntryList::AddSubList` which purpose is specifically of adding a sub list to the main TEntryList. With this we can avoid the logic of `TEntryList::Add` that merges multiple TEntryList referring to the same tree into a global list.; * A slight modification in `TChain::SetEntryList` to grab the sub-TEntryList with the same index as the current sub-tree in the chain. Currently, this is done instead with `GetEntryList(treename, filename, opt)` that will always report the same sub-TEntryList referring to the ""first"" file (because all files of the sublists of the global TEntryList have the same name). The changes are not definitive at all. I wanted to ask your opinion if it's a valid way forward. If so, I will polish the code and prepare it for a real PR. With this commit, the following snippet; ```cpp; int main(){; auto start_1{0};; auto start_2{0};; auto end_1{20};; auto end_2{10};. TEntryList elists;; TEntryList elist1{""e"",""e"",""entries"",""file_20entries_1.root""};; TEntryList elist2{""e"",""e"",""entries"",""file_20entries_1.root""};. for(auto entry = start_1; entry < end_1; entry++){; elist1.Enter(entry);; }. for(auto entry = start_2; entry < end_2; entry++){; elist2.Enter(entry);; }. elists.AddSubList(&elist1);; elists.AddSubList(&elist2);. TChain chain{""entries""};; chain.Add(""file_20entries_1.root"");; chain.Add(""file_20entries_1.root"");. chain.SetEntryList(&elists, ""sync"");. ROOT::RDataFrame df{chain};. std::cout << df.Count().GetValue() << ""\n"";; }; ```; Outputs the correct result:; ```; $: ./tentrylist_emptysource_addsublist ; 30; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8660
https://github.com/root-project/root/pull/8661:138,Availability,avail,available,138,"They were picked up as side effects of classes, but not forward declared as; and by themselves. This fixes namespaces and enums not being available / known at the ROOT prompt despite their dictionary being loaded:; https://root-forum.cern.ch/t/enum-in-namespace-not-available-after-loading-dictionary/45757",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8661
https://github.com/root-project/root/pull/8661:266,Availability,avail,available-after-loading-dictionary,266,"They were picked up as side effects of classes, but not forward declared as; and by themselves. This fixes namespaces and enums not being available / known at the ROOT prompt despite their dictionary being loaded:; https://root-forum.cern.ch/t/enum-in-namespace-not-available-after-loading-dictionary/45757",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8661
https://github.com/root-project/root/pull/8661:206,Performance,load,loaded,206,"They were picked up as side effects of classes, but not forward declared as; and by themselves. This fixes namespaces and enums not being available / known at the ROOT prompt despite their dictionary being loaded:; https://root-forum.cern.ch/t/enum-in-namespace-not-available-after-loading-dictionary/45757",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8661
https://github.com/root-project/root/pull/8661:282,Performance,load,loading-dictionary,282,"They were picked up as side effects of classes, but not forward declared as; and by themselves. This fixes namespaces and enums not being available / known at the ROOT prompt despite their dictionary being loaded:; https://root-forum.cern.ch/t/enum-in-namespace-not-available-after-loading-dictionary/45757",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8661
https://github.com/root-project/root/pull/8666:214,Testability,test,tested,214,"### Description; This PR implements serialisation of RModel by adding a custom streamer in class RModel and modifying the definition of structure TMVA::Experimental::SOFIE::InitializedTensor. ### Checklist:; - [x] tested changes locally; ; ### Tests ; - [x] Tests for Serialisation of Custom Models . ### Example usage ; **Writing the RModel object** ; ```; using namespace TMVA::Experimental;; TFile file(""model.root"",""CREATE"");; SOFIE::RModelParser_ONNX parser;; SOFIE::RModel model = parser.Parse(""Linear_2.onnx"");; model.Write(""model"");; file.Close();; ```. **Reading the RModel object**; ```; using namespace TMVA::Experimental;; TFile file(""model.root"",""READ"");; SOFIE::RModel *model;; file.GetObject(""model"",model);; file.Close();; model->Generate();; model->OutputGenerated(""model.hxx"");; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8666
https://github.com/root-project/root/pull/8666:244,Testability,Test,Tests,244,"### Description; This PR implements serialisation of RModel by adding a custom streamer in class RModel and modifying the definition of structure TMVA::Experimental::SOFIE::InitializedTensor. ### Checklist:; - [x] tested changes locally; ; ### Tests ; - [x] Tests for Serialisation of Custom Models . ### Example usage ; **Writing the RModel object** ; ```; using namespace TMVA::Experimental;; TFile file(""model.root"",""CREATE"");; SOFIE::RModelParser_ONNX parser;; SOFIE::RModel model = parser.Parse(""Linear_2.onnx"");; model.Write(""model"");; file.Close();; ```. **Reading the RModel object**; ```; using namespace TMVA::Experimental;; TFile file(""model.root"",""READ"");; SOFIE::RModel *model;; file.GetObject(""model"",model);; file.Close();; model->Generate();; model->OutputGenerated(""model.hxx"");; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8666
https://github.com/root-project/root/pull/8666:258,Testability,Test,Tests,258,"### Description; This PR implements serialisation of RModel by adding a custom streamer in class RModel and modifying the definition of structure TMVA::Experimental::SOFIE::InitializedTensor. ### Checklist:; - [x] tested changes locally; ; ### Tests ; - [x] Tests for Serialisation of Custom Models . ### Example usage ; **Writing the RModel object** ; ```; using namespace TMVA::Experimental;; TFile file(""model.root"",""CREATE"");; SOFIE::RModelParser_ONNX parser;; SOFIE::RModel model = parser.Parse(""Linear_2.onnx"");; model.Write(""model"");; file.Close();; ```. **Reading the RModel object**; ```; using namespace TMVA::Experimental;; TFile file(""model.root"",""READ"");; SOFIE::RModel *model;; file.GetObject(""model"",model);; file.Close();; model->Generate();; model->OutputGenerated(""model.hxx"");; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8666
https://github.com/root-project/root/pull/8667:1606,Deployability,update,updated,1606,"# This Pull request:. ## Changes or fixes:. TGMainFrame::HandleKey stops prematurely, see https://github.com/root-project/root/blob/master/gui/gui/src/TGFrame.cxx#L1593, if any TGTextButton with a hotkey shortcut (`""&Sort data""`) is used in a GUI, even if the actual Key is CTRL+S instead of Alt+S or even if button is disabled. ## Reproducer; Based on @bellenot from https://github.com/root-project/root/issues/8665. To try it, press CTRL+S, it should open a file dialog to save the frame. Instead, it thinks it is Alt+S and stops the function too early.; ```; #include ""KeySymbols.h""; #include ""TGFrame.h""; #include <iostream>; #include ""TVirtualX.h""; #include ""TGButton.h""; //______________________________________________________________________________; //; //; //______________________________________________________________________________; class MyMainFrame : public TGMainFrame {; public:; MyMainFrame(const TGWindow *p, UInt_t w, UInt_t h);; virtual ~MyMainFrame() { Cleanup(); }; void CloseWindow() { delete this; }. ClassDef(MyMainFrame, 0); };. //______________________________________________________________________________; MyMainFrame::MyMainFrame(const TGWindow *p, UInt_t w, UInt_t h) : TGMainFrame(p, w, h); {; auto sortdata = new TGTextButton(this, ""&Sort data"");; AddFrame(sortdata);. MapSubwindows();; Layout();; MapWindow();; Resize(150,100);; }. //______________________________________________________________________________; void test_grab_key(); {; MyMainFrame *main = new MyMainFrame(gClient->GetRoot(), 150, 100);; }. ```. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8667
https://github.com/root-project/root/pull/8667:1576,Testability,test,tested,1576,"# This Pull request:. ## Changes or fixes:. TGMainFrame::HandleKey stops prematurely, see https://github.com/root-project/root/blob/master/gui/gui/src/TGFrame.cxx#L1593, if any TGTextButton with a hotkey shortcut (`""&Sort data""`) is used in a GUI, even if the actual Key is CTRL+S instead of Alt+S or even if button is disabled. ## Reproducer; Based on @bellenot from https://github.com/root-project/root/issues/8665. To try it, press CTRL+S, it should open a file dialog to save the frame. Instead, it thinks it is Alt+S and stops the function too early.; ```; #include ""KeySymbols.h""; #include ""TGFrame.h""; #include <iostream>; #include ""TVirtualX.h""; #include ""TGButton.h""; //______________________________________________________________________________; //; //; //______________________________________________________________________________; class MyMainFrame : public TGMainFrame {; public:; MyMainFrame(const TGWindow *p, UInt_t w, UInt_t h);; virtual ~MyMainFrame() { Cleanup(); }; void CloseWindow() { delete this; }. ClassDef(MyMainFrame, 0); };. //______________________________________________________________________________; MyMainFrame::MyMainFrame(const TGWindow *p, UInt_t w, UInt_t h) : TGMainFrame(p, w, h); {; auto sortdata = new TGTextButton(this, ""&Sort data"");; AddFrame(sortdata);. MapSubwindows();; Layout();; MapWindow();; Resize(150,100);; }. //______________________________________________________________________________; void test_grab_key(); {; MyMainFrame *main = new MyMainFrame(gClient->GetRoot(), 150, 100);; }. ```. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8667
https://github.com/root-project/root/pull/8669:229,Deployability,update,updated,229,"# This Pull request:. ## Changes or fixes:; - Dictionary pythonizations for std::map constructors ( RooDataHist, RooCategory) ; - Pythonization and formatting of tutorial files. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8669
https://github.com/root-project/root/pull/8669:199,Testability,test,tested,199,"# This Pull request:. ## Changes or fixes:; - Dictionary pythonizations for std::map constructors ( RooDataHist, RooCategory) ; - Pythonization and formatting of tutorial files. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8669
https://github.com/root-project/root/pull/8670:100,Testability,log,logical,100,The warning is visible e.g. with cmake 3.11:. CMake Warning (dev) in interpreter/CMakeLists.txt:; A logical block opening on the line. /data/ssdext4/rvec2/root/interpreter/CMakeLists.txt:477 (if). closes on the line. /data/ssdext4/rvec2/root/interpreter/CMakeLists.txt:483 (endif). with mis-matching arguments.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8670
https://github.com/root-project/root/pull/8672:95,Deployability,update,updated,95,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8672
https://github.com/root-project/root/pull/8672:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8672
https://github.com/root-project/root/pull/8673:208,Deployability,update,updated,208,"# This Pull request:. ## Changes or fixes:. Adds an option to call SaveFrame from batch script, without having to interact, giving the filename as argument. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8673
https://github.com/root-project/root/pull/8673:178,Testability,test,tested,178,"# This Pull request:. ## Changes or fixes:. Adds an option to call SaveFrame from batch script, without having to interact, giving the filename as argument. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8673
https://github.com/root-project/root/pull/8675:1242,Deployability,integrat,integrate,1242,"# This Pull request:; ProgressHelper is a class that offers callback functions for RDataFrame,; and can compute and print event statistics and a progress bar. With a change like this:; ```diff; --- a/tutorials/dataframe/df102_NanoAODDimuonAnalysis.C; +++ b/tutorials/dataframe/df102_NanoAODDimuonAnalysis.C; @@ -28,6 +28,7 @@; #include ""TLatex.h""; #include ""Math/Vector4D.h""; #include ""TStyle.h""; +#include ""ROOT/RDFHelpers.hxx""; ; using namespace ROOT::VecOps;; ; @@ -52,6 +53,9 @@ void df102_NanoAODDimuonAnalysis(); // Request cut-flow report; auto report = df_mass.Report();; ; + ROOT::RDF::ProgressHelper progress(10000, ROOT::RDF::CountEvents(""Events"", ""root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root""));; + h.OnPartialResultSlot(10000, [&progress](unsigned int slot, TH1D& histo){ progress(slot, histo); });; +; // Produce plot; gStyle->SetOptStat(0); gStyle->SetTextFont(42);; auto c = new TCanvas(""c"", """", 800, 700);; ```. one gets:; `bin/root -q ~/code/root-src/tutorials/dataframe/df102_NanoAODDimuonAnalysis.C+O`; ![image](https://user-images.githubusercontent.com/16205615/125669114-03ebfeb1-96e4-4dcc-afd9-b6690aafb4a1.png). ## TODO; - [ ] Write helpers that integrate this into the head node of RDF, preferably with a single line of code.; - [ ] *Optional*: Finalise callbacks for RDF, since a carriage return is always missing. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8675
https://github.com/root-project/root/pull/8675:1464,Deployability,update,updated,1464,"# This Pull request:; ProgressHelper is a class that offers callback functions for RDataFrame,; and can compute and print event statistics and a progress bar. With a change like this:; ```diff; --- a/tutorials/dataframe/df102_NanoAODDimuonAnalysis.C; +++ b/tutorials/dataframe/df102_NanoAODDimuonAnalysis.C; @@ -28,6 +28,7 @@; #include ""TLatex.h""; #include ""Math/Vector4D.h""; #include ""TStyle.h""; +#include ""ROOT/RDFHelpers.hxx""; ; using namespace ROOT::VecOps;; ; @@ -52,6 +53,9 @@ void df102_NanoAODDimuonAnalysis(); // Request cut-flow report; auto report = df_mass.Report();; ; + ROOT::RDF::ProgressHelper progress(10000, ROOT::RDF::CountEvents(""Events"", ""root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root""));; + h.OnPartialResultSlot(10000, [&progress](unsigned int slot, TH1D& histo){ progress(slot, histo); });; +; // Produce plot; gStyle->SetOptStat(0); gStyle->SetTextFont(42);; auto c = new TCanvas(""c"", """", 800, 700);; ```. one gets:; `bin/root -q ~/code/root-src/tutorials/dataframe/df102_NanoAODDimuonAnalysis.C+O`; ![image](https://user-images.githubusercontent.com/16205615/125669114-03ebfeb1-96e4-4dcc-afd9-b6690aafb4a1.png). ## TODO; - [ ] Write helpers that integrate this into the head node of RDF, preferably with a single line of code.; - [ ] *Optional*: Finalise callbacks for RDF, since a carriage return is always missing. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8675
https://github.com/root-project/root/pull/8675:1242,Integrability,integrat,integrate,1242,"# This Pull request:; ProgressHelper is a class that offers callback functions for RDataFrame,; and can compute and print event statistics and a progress bar. With a change like this:; ```diff; --- a/tutorials/dataframe/df102_NanoAODDimuonAnalysis.C; +++ b/tutorials/dataframe/df102_NanoAODDimuonAnalysis.C; @@ -28,6 +28,7 @@; #include ""TLatex.h""; #include ""Math/Vector4D.h""; #include ""TStyle.h""; +#include ""ROOT/RDFHelpers.hxx""; ; using namespace ROOT::VecOps;; ; @@ -52,6 +53,9 @@ void df102_NanoAODDimuonAnalysis(); // Request cut-flow report; auto report = df_mass.Report();; ; + ROOT::RDF::ProgressHelper progress(10000, ROOT::RDF::CountEvents(""Events"", ""root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root""));; + h.OnPartialResultSlot(10000, [&progress](unsigned int slot, TH1D& histo){ progress(slot, histo); });; +; // Produce plot; gStyle->SetOptStat(0); gStyle->SetTextFont(42);; auto c = new TCanvas(""c"", """", 800, 700);; ```. one gets:; `bin/root -q ~/code/root-src/tutorials/dataframe/df102_NanoAODDimuonAnalysis.C+O`; ![image](https://user-images.githubusercontent.com/16205615/125669114-03ebfeb1-96e4-4dcc-afd9-b6690aafb4a1.png). ## TODO; - [ ] Write helpers that integrate this into the head node of RDF, preferably with a single line of code.; - [ ] *Optional*: Finalise callbacks for RDF, since a carriage return is always missing. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8675
https://github.com/root-project/root/pull/8675:1434,Testability,test,tested,1434,"# This Pull request:; ProgressHelper is a class that offers callback functions for RDataFrame,; and can compute and print event statistics and a progress bar. With a change like this:; ```diff; --- a/tutorials/dataframe/df102_NanoAODDimuonAnalysis.C; +++ b/tutorials/dataframe/df102_NanoAODDimuonAnalysis.C; @@ -28,6 +28,7 @@; #include ""TLatex.h""; #include ""Math/Vector4D.h""; #include ""TStyle.h""; +#include ""ROOT/RDFHelpers.hxx""; ; using namespace ROOT::VecOps;; ; @@ -52,6 +53,9 @@ void df102_NanoAODDimuonAnalysis(); // Request cut-flow report; auto report = df_mass.Report();; ; + ROOT::RDF::ProgressHelper progress(10000, ROOT::RDF::CountEvents(""Events"", ""root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root""));; + h.OnPartialResultSlot(10000, [&progress](unsigned int slot, TH1D& histo){ progress(slot, histo); });; +; // Produce plot; gStyle->SetOptStat(0); gStyle->SetTextFont(42);; auto c = new TCanvas(""c"", """", 800, 700);; ```. one gets:; `bin/root -q ~/code/root-src/tutorials/dataframe/df102_NanoAODDimuonAnalysis.C+O`; ![image](https://user-images.githubusercontent.com/16205615/125669114-03ebfeb1-96e4-4dcc-afd9-b6690aafb4a1.png). ## TODO; - [ ] Write helpers that integrate this into the head node of RDF, preferably with a single line of code.; - [ ] *Optional*: Finalise callbacks for RDF, since a carriage return is always missing. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8675
https://github.com/root-project/root/pull/8675:145,Usability,progress bar,progress bar,145,"# This Pull request:; ProgressHelper is a class that offers callback functions for RDataFrame,; and can compute and print event statistics and a progress bar. With a change like this:; ```diff; --- a/tutorials/dataframe/df102_NanoAODDimuonAnalysis.C; +++ b/tutorials/dataframe/df102_NanoAODDimuonAnalysis.C; @@ -28,6 +28,7 @@; #include ""TLatex.h""; #include ""Math/Vector4D.h""; #include ""TStyle.h""; +#include ""ROOT/RDFHelpers.hxx""; ; using namespace ROOT::VecOps;; ; @@ -52,6 +53,9 @@ void df102_NanoAODDimuonAnalysis(); // Request cut-flow report; auto report = df_mass.Report();; ; + ROOT::RDF::ProgressHelper progress(10000, ROOT::RDF::CountEvents(""Events"", ""root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root""));; + h.OnPartialResultSlot(10000, [&progress](unsigned int slot, TH1D& histo){ progress(slot, histo); });; +; // Produce plot; gStyle->SetOptStat(0); gStyle->SetTextFont(42);; auto c = new TCanvas(""c"", """", 800, 700);; ```. one gets:; `bin/root -q ~/code/root-src/tutorials/dataframe/df102_NanoAODDimuonAnalysis.C+O`; ![image](https://user-images.githubusercontent.com/16205615/125669114-03ebfeb1-96e4-4dcc-afd9-b6690aafb4a1.png). ## TODO; - [ ] Write helpers that integrate this into the head node of RDF, preferably with a single line of code.; - [ ] *Optional*: Finalise callbacks for RDF, since a carriage return is always missing. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8675
https://github.com/root-project/root/pull/8676:366,Deployability,update,updated,366,"## Changes or fixes:; * Add XZ,YZ, ZX, and ZY projection types; * Zero version of Lego view type; * Add energy scaling in REveDataProxyBuilderBase; * Ability to set camera type through REveViewer; * Corrections in reuse of compounds in REveDataSimpleProxyBuilder; * Fix selection/highlight in REveStraightLineSet. ## Checklist:. - [ x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8676
https://github.com/root-project/root/pull/8676:104,Energy Efficiency,energy,energy,104,"## Changes or fixes:; * Add XZ,YZ, ZX, and ZY projection types; * Zero version of Lego view type; * Add energy scaling in REveDataProxyBuilderBase; * Ability to set camera type through REveViewer; * Corrections in reuse of compounds in REveDataSimpleProxyBuilder; * Fix selection/highlight in REveStraightLineSet. ## Checklist:. - [ x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8676
https://github.com/root-project/root/pull/8676:336,Testability,test,tested,336,"## Changes or fixes:; * Add XZ,YZ, ZX, and ZY projection types; * Zero version of Lego view type; * Add energy scaling in REveDataProxyBuilderBase; * Ability to set camera type through REveViewer; * Corrections in reuse of compounds in REveDataSimpleProxyBuilder; * Fix selection/highlight in REveStraightLineSet. ## Checklist:. - [ x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8676
https://github.com/root-project/root/pull/8677:159,Deployability,update,updated,159,# This Pull request:. ## Changes or fixes:; CTRL shortcuts X11Grab were not working if NumLock was enabled. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8665,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8677
https://github.com/root-project/root/pull/8677:129,Testability,test,tested,129,# This Pull request:. ## Changes or fixes:; CTRL shortcuts X11Grab were not working if NumLock was enabled. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8665,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8677
https://github.com/root-project/root/pull/8678:67,Availability,error,errors,67,# This Pull request:. ## Changes or fixes:. This fixes both of the errors seen when trying to build with builtin_llvm=off; https://root-forum.cern.ch/t/compiling-root-6-24-with-external-llvm-but-built-in-clang/45258. ## Checklist:. - [x] tested changes locally; - updated the docs (if necessary). This PR fixes #8141,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8678
https://github.com/root-project/root/pull/8678:264,Deployability,update,updated,264,# This Pull request:. ## Changes or fixes:. This fixes both of the errors seen when trying to build with builtin_llvm=off; https://root-forum.cern.ch/t/compiling-root-6-24-with-external-llvm-but-built-in-clang/45258. ## Checklist:. - [x] tested changes locally; - updated the docs (if necessary). This PR fixes #8141,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8678
https://github.com/root-project/root/pull/8678:238,Testability,test,tested,238,# This Pull request:. ## Changes or fixes:. This fixes both of the errors seen when trying to build with builtin_llvm=off; https://root-forum.cern.ch/t/compiling-root-6-24-with-external-llvm-but-built-in-clang/45258. ## Checklist:. - [x] tested changes locally; - updated the docs (if necessary). This PR fixes #8141,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8678
https://github.com/root-project/root/pull/8679:76,Availability,error,error,76,"Disable rf316_llratioplot.py which is failing on Windows with the following error:; ```; Unhandled exception at 0x55176657 (libcppyy3_8.pyd) in python.exe: 0xC00000FD: Stack overflow (parameters: 0x00000000, 0x01002000); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8679
https://github.com/root-project/root/pull/8680:57,Integrability,message,message,57,"The UI says:; > Input 'version' has been deprecated with message: The version property will not be supported after October 1, 2019. Use node-version instead. Also bump to the latest NodeJS version 16.x which will become the next LTS version in October and be supported until 2024 (12.x will go EOL in April 2022, next year).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8680
https://github.com/root-project/root/pull/8681:501,Deployability,update,updated,501,"# This Pull request:. ## Changes or fixes:; XCreateImage bitmap_pad argument was not being set properly. It caused problems with depths of e.g. 30, see https://github.com/root-project/root/issues/8086#issuecomment-850620085 by @juw. Now it matches the behaviour of:; https://github.com/root-project/root/blob/master/graf2d/x11/src/GX11Gui.cxx#L2612; https://github.com/root-project/root/blob/master/graf2d/asimage/src/libAfterImage/asvisual.c#L1549. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8086",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8681
https://github.com/root-project/root/pull/8681:471,Testability,test,tested,471,"# This Pull request:. ## Changes or fixes:; XCreateImage bitmap_pad argument was not being set properly. It caused problems with depths of e.g. 30, see https://github.com/root-project/root/issues/8086#issuecomment-850620085 by @juw. Now it matches the behaviour of:; https://github.com/root-project/root/blob/master/graf2d/x11/src/GX11Gui.cxx#L2612; https://github.com/root-project/root/blob/master/graf2d/asimage/src/libAfterImage/asvisual.c#L1549. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8086",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8681
https://github.com/root-project/root/pull/8682:30,Availability,failure,failures,30,This should fix some sporadic failures in cling's symbol resolution; in builds without runtime cxx modules.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8682
https://github.com/root-project/root/pull/8684:1199,Deployability,Configurat,Configuration,1199,"## Description; Development of the functionality for parsing a PyTorch PT file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress; - [x] Parser function for extracting the model information and weights and instantiate a RModel Object; - [x] Support for PyTorch nn.Module, nn.Sequential, nn.ModuleList containers.; - [x] Supports Linear, ReLU and Transpose Layers/operations.; - [x] Header file for the function; - [x] Function implementation . ## Interface; The parser requires the shape and data type of the input tensors. Shape is a mandatory parameter, whereas the function defaults to Float data-type for the input tensors, if not explicitly mentioned.; ; **Example usage**; ```; std::vector<size_t> s1{120,1};; std::vector<std::vector<size_t>> inputShape{s1};; auto model = TMVA::Experimental::SOFIE::PyTorch::Parse(""trained_model_dense.pt"",inputShape);; ```; ; ## Checklist:; - [x] tested changes locally; - [x] Parser. ## Tests ; - [x] Emit Files for generating header files; - [x] Tests for Parser; - [x] CMake Configuration for tests . ## Documentation; - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8684
https://github.com/root-project/root/pull/8684:627,Integrability,Interface,Interface,627,"## Description; Development of the functionality for parsing a PyTorch PT file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress; - [x] Parser function for extracting the model information and weights and instantiate a RModel Object; - [x] Support for PyTorch nn.Module, nn.Sequential, nn.ModuleList containers.; - [x] Supports Linear, ReLU and Transpose Layers/operations.; - [x] Header file for the function; - [x] Function implementation . ## Interface; The parser requires the shape and data type of the input tensors. Shape is a mandatory parameter, whereas the function defaults to Float data-type for the input tensors, if not explicitly mentioned.; ; **Example usage**; ```; std::vector<size_t> s1{120,1};; std::vector<std::vector<size_t>> inputShape{s1};; auto model = TMVA::Experimental::SOFIE::PyTorch::Parse(""trained_model_dense.pt"",inputShape);; ```; ; ## Checklist:; - [x] tested changes locally; - [x] Parser. ## Tests ; - [x] Emit Files for generating header files; - [x] Tests for Parser; - [x] CMake Configuration for tests . ## Documentation; - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8684
https://github.com/root-project/root/pull/8684:536,Modifiability,Layers,Layers,536,"## Description; Development of the functionality for parsing a PyTorch PT file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress; - [x] Parser function for extracting the model information and weights and instantiate a RModel Object; - [x] Support for PyTorch nn.Module, nn.Sequential, nn.ModuleList containers.; - [x] Supports Linear, ReLU and Transpose Layers/operations.; - [x] Header file for the function; - [x] Function implementation . ## Interface; The parser requires the shape and data type of the input tensors. Shape is a mandatory parameter, whereas the function defaults to Float data-type for the input tensors, if not explicitly mentioned.; ; **Example usage**; ```; std::vector<size_t> s1{120,1};; std::vector<std::vector<size_t>> inputShape{s1};; auto model = TMVA::Experimental::SOFIE::PyTorch::Parse(""trained_model_dense.pt"",inputShape);; ```; ; ## Checklist:; - [x] tested changes locally; - [x] Parser. ## Tests ; - [x] Emit Files for generating header files; - [x] Tests for Parser; - [x] CMake Configuration for tests . ## Documentation; - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8684
https://github.com/root-project/root/pull/8684:1199,Modifiability,Config,Configuration,1199,"## Description; Development of the functionality for parsing a PyTorch PT file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress; - [x] Parser function for extracting the model information and weights and instantiate a RModel Object; - [x] Support for PyTorch nn.Module, nn.Sequential, nn.ModuleList containers.; - [x] Supports Linear, ReLU and Transpose Layers/operations.; - [x] Header file for the function; - [x] Function implementation . ## Interface; The parser requires the shape and data type of the input tensors. Shape is a mandatory parameter, whereas the function defaults to Float data-type for the input tensors, if not explicitly mentioned.; ; **Example usage**; ```; std::vector<size_t> s1{120,1};; std::vector<std::vector<size_t>> inputShape{s1};; auto model = TMVA::Experimental::SOFIE::PyTorch::Parse(""trained_model_dense.pt"",inputShape);; ```; ; ## Checklist:; - [x] tested changes locally; - [x] Parser. ## Tests ; - [x] Emit Files for generating header files; - [x] Tests for Parser; - [x] CMake Configuration for tests . ## Documentation; - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8684
https://github.com/root-project/root/pull/8684:1068,Testability,test,tested,1068,"## Description; Development of the functionality for parsing a PyTorch PT file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress; - [x] Parser function for extracting the model information and weights and instantiate a RModel Object; - [x] Support for PyTorch nn.Module, nn.Sequential, nn.ModuleList containers.; - [x] Supports Linear, ReLU and Transpose Layers/operations.; - [x] Header file for the function; - [x] Function implementation . ## Interface; The parser requires the shape and data type of the input tensors. Shape is a mandatory parameter, whereas the function defaults to Float data-type for the input tensors, if not explicitly mentioned.; ; **Example usage**; ```; std::vector<size_t> s1{120,1};; std::vector<std::vector<size_t>> inputShape{s1};; auto model = TMVA::Experimental::SOFIE::PyTorch::Parse(""trained_model_dense.pt"",inputShape);; ```; ; ## Checklist:; - [x] tested changes locally; - [x] Parser. ## Tests ; - [x] Emit Files for generating header files; - [x] Tests for Parser; - [x] CMake Configuration for tests . ## Documentation; - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8684
https://github.com/root-project/root/pull/8684:1109,Testability,Test,Tests,1109,"## Description; Development of the functionality for parsing a PyTorch PT file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress; - [x] Parser function for extracting the model information and weights and instantiate a RModel Object; - [x] Support for PyTorch nn.Module, nn.Sequential, nn.ModuleList containers.; - [x] Supports Linear, ReLU and Transpose Layers/operations.; - [x] Header file for the function; - [x] Function implementation . ## Interface; The parser requires the shape and data type of the input tensors. Shape is a mandatory parameter, whereas the function defaults to Float data-type for the input tensors, if not explicitly mentioned.; ; **Example usage**; ```; std::vector<size_t> s1{120,1};; std::vector<std::vector<size_t>> inputShape{s1};; auto model = TMVA::Experimental::SOFIE::PyTorch::Parse(""trained_model_dense.pt"",inputShape);; ```; ; ## Checklist:; - [x] tested changes locally; - [x] Parser. ## Tests ; - [x] Emit Files for generating header files; - [x] Tests for Parser; - [x] CMake Configuration for tests . ## Documentation; - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8684
https://github.com/root-project/root/pull/8684:1169,Testability,Test,Tests,1169,"## Description; Development of the functionality for parsing a PyTorch PT file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress; - [x] Parser function for extracting the model information and weights and instantiate a RModel Object; - [x] Support for PyTorch nn.Module, nn.Sequential, nn.ModuleList containers.; - [x] Supports Linear, ReLU and Transpose Layers/operations.; - [x] Header file for the function; - [x] Function implementation . ## Interface; The parser requires the shape and data type of the input tensors. Shape is a mandatory parameter, whereas the function defaults to Float data-type for the input tensors, if not explicitly mentioned.; ; **Example usage**; ```; std::vector<size_t> s1{120,1};; std::vector<std::vector<size_t>> inputShape{s1};; auto model = TMVA::Experimental::SOFIE::PyTorch::Parse(""trained_model_dense.pt"",inputShape);; ```; ; ## Checklist:; - [x] tested changes locally; - [x] Parser. ## Tests ; - [x] Emit Files for generating header files; - [x] Tests for Parser; - [x] CMake Configuration for tests . ## Documentation; - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8684
https://github.com/root-project/root/pull/8684:1217,Testability,test,tests,1217,"## Description; Development of the functionality for parsing a PyTorch PT file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress; - [x] Parser function for extracting the model information and weights and instantiate a RModel Object; - [x] Support for PyTorch nn.Module, nn.Sequential, nn.ModuleList containers.; - [x] Supports Linear, ReLU and Transpose Layers/operations.; - [x] Header file for the function; - [x] Function implementation . ## Interface; The parser requires the shape and data type of the input tensors. Shape is a mandatory parameter, whereas the function defaults to Float data-type for the input tensors, if not explicitly mentioned.; ; **Example usage**; ```; std::vector<size_t> s1{120,1};; std::vector<std::vector<size_t>> inputShape{s1};; auto model = TMVA::Experimental::SOFIE::PyTorch::Parse(""trained_model_dense.pt"",inputShape);; ```; ; ## Checklist:; - [x] tested changes locally; - [x] Parser. ## Tests ; - [x] Emit Files for generating header files; - [x] Tests for Parser; - [x] CMake Configuration for tests . ## Documentation; - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8684
https://github.com/root-project/root/pull/8684:163,Usability,Learn,Learning,163,"## Description; Development of the functionality for parsing a PyTorch PT file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress; - [x] Parser function for extracting the model information and weights and instantiate a RModel Object; - [x] Support for PyTorch nn.Module, nn.Sequential, nn.ModuleList containers.; - [x] Supports Linear, ReLU and Transpose Layers/operations.; - [x] Header file for the function; - [x] Function implementation . ## Interface; The parser requires the shape and data type of the input tensors. Shape is a mandatory parameter, whereas the function defaults to Float data-type for the input tensors, if not explicitly mentioned.; ; **Example usage**; ```; std::vector<size_t> s1{120,1};; std::vector<std::vector<size_t>> inputShape{s1};; auto model = TMVA::Experimental::SOFIE::PyTorch::Parse(""trained_model_dense.pt"",inputShape);; ```; ; ## Checklist:; - [x] tested changes locally; - [x] Parser. ## Tests ; - [x] Emit Files for generating header files; - [x] Tests for Parser; - [x] CMake Configuration for tests . ## Documentation; - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8684
https://github.com/root-project/root/issues/8685:95,Usability,progress bar,progress bar,95,"### Is your feature request related to a problem? Please describe. It would be great to have a progress bar for RDF, one that does not need to open all files before giving an estimate on the remaining processing time. ### Describe the solution you'd like. Similar to https://github.com/root-project/root/pull/8675 but with the approach sketched in https://github.com/root-project/root/pull/8675#discussion_r670348181",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8685
https://github.com/root-project/root/pull/8686:100,Modifiability,config,configure,100,"No any other dimension kinds are supported, therefore simplify API; Use canvas size in `jupyter` to configure output container",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8686
https://github.com/root-project/root/pull/8686:54,Usability,simpl,simplify,54,"No any other dimension kinds are supported, therefore simplify API; Use canvas size in `jupyter` to configure output container",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8686
https://github.com/root-project/root/pull/8688:91,Performance,multi-thread,multi-threaded,91,# This Pull request:; Add `RNTupleWriter::CreateEntry()` and uses it in a demonstration on multi-threaded writing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8688
https://github.com/root-project/root/pull/8689:121,Integrability,depend,depends,121,This PR sets Minuit2 building to ON by default in the make ROOT build option file. . This is needed now since Roofit now depends on Minuit2,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8689
https://github.com/root-project/root/pull/8690:20,Modifiability,Variab,Variable,20,Implementation of a Variable Plotter for RNode and RTensor inputs.; See [PR 4211](https://github.com/root-project/root/pull/4211) for a first attempt / inspiration. . ## Changes or fixes:; Created main class: ; * /tmva/tmvagui/src/RVariablePlotter.cxx; * /tmva/tmvagui/inc/RVariablePlotter.hxx. Created two tutorials: ; * /tutorials/tmva/tmva005_RVariablePlotter.C ; * /tutorials/tmva/tmva005_RVariablePlotter_RTensor.C . ## Checklist:. - [ ✅] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8690
https://github.com/root-project/root/pull/8690:444,Testability,test,tested,444,Implementation of a Variable Plotter for RNode and RTensor inputs.; See [PR 4211](https://github.com/root-project/root/pull/4211) for a first attempt / inspiration. . ## Changes or fixes:; Created main class: ; * /tmva/tmvagui/src/RVariablePlotter.cxx; * /tmva/tmvagui/inc/RVariablePlotter.hxx. Created two tutorials: ; * /tutorials/tmva/tmva005_RVariablePlotter.C ; * /tutorials/tmva/tmva005_RVariablePlotter_RTensor.C . ## Checklist:. - [ ✅] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8690
https://github.com/root-project/root/pull/8694:673,Security,access,access,673,"This PR reactivates and fixes the test for RooGradMinimizerFcn (introduced in #8596). The first commit provides a way for external gradient calculators to use previous gradient information (gradient itself, second derivatives, step size) to calculate the next gradient values. Simultaneously, it allows the external calculator to pass back (via the same arrays to keep the redesign as minimal as possible, in anticipation of planned dedicated Hessian support) the second derivative and step sizes, so they can also be reused in the next gradient calculation. All of this reuse was already going on in Numerical2PGradientCalculator, but external gradient calculators had no access to this data, because the FCNGradAdaptor and IMultiGradFunction had no support for passing it back and forth. The commit also implements use of this mechanism in ExternalInternalGradientCalculator and in RooGradMinimizerFcn. The second commit reactivates the (already existing) test, and fixes it, because it turned out it had a small remaining bug. The bug was fixed by removing an unused parameter from `NumericalGradient::SetInitialGradient`, so that was two birds with one stone.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8694
https://github.com/root-project/root/pull/8694:34,Testability,test,test,34,"This PR reactivates and fixes the test for RooGradMinimizerFcn (introduced in #8596). The first commit provides a way for external gradient calculators to use previous gradient information (gradient itself, second derivatives, step size) to calculate the next gradient values. Simultaneously, it allows the external calculator to pass back (via the same arrays to keep the redesign as minimal as possible, in anticipation of planned dedicated Hessian support) the second derivative and step sizes, so they can also be reused in the next gradient calculation. All of this reuse was already going on in Numerical2PGradientCalculator, but external gradient calculators had no access to this data, because the FCNGradAdaptor and IMultiGradFunction had no support for passing it back and forth. The commit also implements use of this mechanism in ExternalInternalGradientCalculator and in RooGradMinimizerFcn. The second commit reactivates the (already existing) test, and fixes it, because it turned out it had a small remaining bug. The bug was fixed by removing an unused parameter from `NumericalGradient::SetInitialGradient`, so that was two birds with one stone.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8694
https://github.com/root-project/root/pull/8694:958,Testability,test,test,958,"This PR reactivates and fixes the test for RooGradMinimizerFcn (introduced in #8596). The first commit provides a way for external gradient calculators to use previous gradient information (gradient itself, second derivatives, step size) to calculate the next gradient values. Simultaneously, it allows the external calculator to pass back (via the same arrays to keep the redesign as minimal as possible, in anticipation of planned dedicated Hessian support) the second derivative and step sizes, so they can also be reused in the next gradient calculation. All of this reuse was already going on in Numerical2PGradientCalculator, but external gradient calculators had no access to this data, because the FCNGradAdaptor and IMultiGradFunction had no support for passing it back and forth. The commit also implements use of this mechanism in ExternalInternalGradientCalculator and in RooGradMinimizerFcn. The second commit reactivates the (already existing) test, and fixes it, because it turned out it had a small remaining bug. The bug was fixed by removing an unused parameter from `NumericalGradient::SetInitialGradient`, so that was two birds with one stone.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8694
https://github.com/root-project/root/issues/8695:255,Availability,mainten,maintenance,255,"A commit from earlier this year (https://github.com/root-project/root/commit/3d545273d7763e09aa85449ba86be5d2493f7f13) adjusted the handling of default units in ROOT's geometry system. Although this commit is an ostensible improvement, reducing points of maintenance, there are some consequences that were maybe not anticipated. I refer to the [units README file](https://github.com/root-project/root/blob/master/geom/geom/README_units.md). In that file it states:. > To ensure backwards compatibility ROOT's default system of units is - as it was before - based on centimeters, seconds and GigaElectronVolts, ie. the defaults are equivalent to:; > ; > ```c++; > TGeoManager::SetDefaultUnits(kRootUnits);; > ```. Unfortunately, this statement is not true. As you see from the definition of the `TGeoManager::fgDefaultUnits` static data member https://github.com/root-project/root/blob/49d0be0b9455e026e6d68e2e651113af3f1e4654/geom/geom/src/TGeoManager.cxx#L302 the default units are G4 units, which it has been for some time (perhaps the beginning?). There was thus an inconsistency with the default units and with those assumed by TGDMLParse, which, before the above commit, made an unconditional assumption of ROOT units. The above commit addresses this inconsistency, but the neutrino community at Fermilab (specifically the LArSoft project and the experiments it supports) experienced an [unintended consequence](https://github.com/LArSoft/larcorealg/pull/18)--the default units are now honored by the TGDML parser, but they are simply G4 units instead of ROOT units. In order to make ROOT units the default, we use the workaround:. ```c++; TGeoManager::LockDefaultUnits(false);; TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);; TGeoManager::LockDefaultUnits(true);; ```. as the units are locked upon library load: https://github.com/root-project/root/blob/612b68ea1f70c3f5ce7deb8a6b664b8a08987991/geom/geom/src/TGeoManager.cxx#L304. This issue requests two things:. - Please correct the RE",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8695
https://github.com/root-project/root/issues/8695:1820,Performance,load,load,1820,"ndling of default units in ROOT's geometry system. Although this commit is an ostensible improvement, reducing points of maintenance, there are some consequences that were maybe not anticipated. I refer to the [units README file](https://github.com/root-project/root/blob/master/geom/geom/README_units.md). In that file it states:. > To ensure backwards compatibility ROOT's default system of units is - as it was before - based on centimeters, seconds and GigaElectronVolts, ie. the defaults are equivalent to:; > ; > ```c++; > TGeoManager::SetDefaultUnits(kRootUnits);; > ```. Unfortunately, this statement is not true. As you see from the definition of the `TGeoManager::fgDefaultUnits` static data member https://github.com/root-project/root/blob/49d0be0b9455e026e6d68e2e651113af3f1e4654/geom/geom/src/TGeoManager.cxx#L302 the default units are G4 units, which it has been for some time (perhaps the beginning?). There was thus an inconsistency with the default units and with those assumed by TGDMLParse, which, before the above commit, made an unconditional assumption of ROOT units. The above commit addresses this inconsistency, but the neutrino community at Fermilab (specifically the LArSoft project and the experiments it supports) experienced an [unintended consequence](https://github.com/LArSoft/larcorealg/pull/18)--the default units are now honored by the TGDML parser, but they are simply G4 units instead of ROOT units. In order to make ROOT units the default, we use the workaround:. ```c++; TGeoManager::LockDefaultUnits(false);; TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);; TGeoManager::LockDefaultUnits(true);; ```. as the units are locked upon library load: https://github.com/root-project/root/blob/612b68ea1f70c3f5ce7deb8a6b664b8a08987991/geom/geom/src/TGeoManager.cxx#L304. This issue requests two things:. - Please correct the README file to accurately state the default units (G4).; - Suggest a better mechanism to allow the user to establish the default units.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8695
https://github.com/root-project/root/issues/8695:1533,Usability,simpl,simply,1533,"ndling of default units in ROOT's geometry system. Although this commit is an ostensible improvement, reducing points of maintenance, there are some consequences that were maybe not anticipated. I refer to the [units README file](https://github.com/root-project/root/blob/master/geom/geom/README_units.md). In that file it states:. > To ensure backwards compatibility ROOT's default system of units is - as it was before - based on centimeters, seconds and GigaElectronVolts, ie. the defaults are equivalent to:; > ; > ```c++; > TGeoManager::SetDefaultUnits(kRootUnits);; > ```. Unfortunately, this statement is not true. As you see from the definition of the `TGeoManager::fgDefaultUnits` static data member https://github.com/root-project/root/blob/49d0be0b9455e026e6d68e2e651113af3f1e4654/geom/geom/src/TGeoManager.cxx#L302 the default units are G4 units, which it has been for some time (perhaps the beginning?). There was thus an inconsistency with the default units and with those assumed by TGDMLParse, which, before the above commit, made an unconditional assumption of ROOT units. The above commit addresses this inconsistency, but the neutrino community at Fermilab (specifically the LArSoft project and the experiments it supports) experienced an [unintended consequence](https://github.com/LArSoft/larcorealg/pull/18)--the default units are now honored by the TGDML parser, but they are simply G4 units instead of ROOT units. In order to make ROOT units the default, we use the workaround:. ```c++; TGeoManager::LockDefaultUnits(false);; TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);; TGeoManager::LockDefaultUnits(true);; ```. as the units are locked upon library load: https://github.com/root-project/root/blob/612b68ea1f70c3f5ce7deb8a6b664b8a08987991/geom/geom/src/TGeoManager.cxx#L304. This issue requests two things:. - Please correct the README file to accurately state the default units (G4).; - Suggest a better mechanism to allow the user to establish the default units.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8695
https://github.com/root-project/root/issues/8697:57,Testability,test,testRooGradMinimizerFcn,57,Commit fb2e642952c2163e7f1c0cf0f4c18de53d9877b5 disabled testRooGradMinimizerFcn; this needs to be reenabled. (This is just a reminder.),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8697
https://github.com/root-project/root/pull/8698:20,Modifiability,Variab,Variable,20,Implementation of a Variable Plotter for RNode and RTensor inputs.; See [PR 4211](https://github.com/root-project/root/pull/4211) for a first attempt / inspiration. . ## Changes or fixes:; Created main class: ; * /tmva/tmvagui/src/RVariablePlotter.cxx; * /tmva/tmvagui/inc/RVariablePlotter.hxx. Created two tutorials: ; * /tutorials/tmva/tmva005_RVariablePlotter.C ; * /tutorials/tmva/tmva005_RVariablePlotter_RTensor.C . ## Checklist:. - [ ✅] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8698
https://github.com/root-project/root/pull/8698:444,Testability,test,tested,444,Implementation of a Variable Plotter for RNode and RTensor inputs.; See [PR 4211](https://github.com/root-project/root/pull/4211) for a first attempt / inspiration. . ## Changes or fixes:; Created main class: ; * /tmva/tmvagui/src/RVariablePlotter.cxx; * /tmva/tmvagui/inc/RVariablePlotter.hxx. Created two tutorials: ; * /tutorials/tmva/tmva005_RVariablePlotter.C ; * /tutorials/tmva/tmva005_RVariablePlotter_RTensor.C . ## Checklist:. - [ ✅] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8698
https://github.com/root-project/root/pull/8699:244,Deployability,update,updated,244,# This Pull request:. ## Changes or fixes:. Adds a tutorial demonstrating how a Histogram can be read from a ROOT File. I also added one that demos how a rootfile with a histogram can be made. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). As mentioned in [this](https://root-forum.cern.ch/t/read-a-histogram-from-a-root-file/8930) forum post.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8699
https://github.com/root-project/root/pull/8699:214,Testability,test,tested,214,# This Pull request:. ## Changes or fixes:. Adds a tutorial demonstrating how a Histogram can be read from a ROOT File. I also added one that demos how a rootfile with a histogram can be made. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). As mentioned in [this](https://root-forum.cern.ch/t/read-a-histogram-from-a-root-file/8930) forum post.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8699
https://github.com/root-project/root/pull/8700:2058,Deployability,configurat,configuration,2058,"ation based on `RooFit::MultiProcess`. Other possible implementations could use the GPU or external tools like TensorFlow. The coupling of all these classes to `RooMinimizer` is made via the `MinuitFcnGrad` class, which owns the `...Wrappers` that calculate the likelihood components. ## Todo:. There are still a couple of things that require attention, which I hope the reviewers can help me with:. 1. I have a Kahan summation helper class. This should probably be replaced with the new Kahan summation class in ROOT itself, but I didn't get to this yet. Maybe it is not urgent to do now, up for discussion.; 2. `likelihood_builders.cxx` is still missing the top level entry point function. This should be quite a simple function: it should just check whether the pdf is binned, unbinned or sum and has subsidiary terms. All the building blocks are already present, so it is just a matter of building it, but didn't get to it yet.; 3. `optional_parameter_types.h`: maybe we could replace this with @guitargeek's new configuration structs.; 4. `testRooRealL.getValRooAddition` fails because it doesn't know `RooFormulaVar`... I'm not sure what this means, but I vaguely remember that (I think) @hageboeck and @cburgard were talking about this, so I was hoping you may be able to help me out with fixing that test. Finally, one thing that in an ideal world I would have liked to do is add a serial implementation of the `LikelihoodGradientWrapper` class. Probably, we can reuse a lot of `RooGradMinimizerFcn` for this and it should be rather straightforward. However, I'm rather short on time right now, and these things almost always tend to take longer than one expects, so I'm hesitant to build it now. The **advantage** would be that we could add a test to this PR that covers all that is added, basically by just running a minimization. Note that I do have such a full-coverage test, but only for the `MultiProcess` minimization, where I implemented `LikelihoodGradientWrapper` in the parallel `Li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8700
https://github.com/root-project/root/pull/8700:3350,Deployability,integrat,integration,3350,"n help me with:. 1. I have a Kahan summation helper class. This should probably be replaced with the new Kahan summation class in ROOT itself, but I didn't get to this yet. Maybe it is not urgent to do now, up for discussion.; 2. `likelihood_builders.cxx` is still missing the top level entry point function. This should be quite a simple function: it should just check whether the pdf is binned, unbinned or sum and has subsidiary terms. All the building blocks are already present, so it is just a matter of building it, but didn't get to it yet.; 3. `optional_parameter_types.h`: maybe we could replace this with @guitargeek's new configuration structs.; 4. `testRooRealL.getValRooAddition` fails because it doesn't know `RooFormulaVar`... I'm not sure what this means, but I vaguely remember that (I think) @hageboeck and @cburgard were talking about this, so I was hoping you may be able to help me out with fixing that test. Finally, one thing that in an ideal world I would have liked to do is add a serial implementation of the `LikelihoodGradientWrapper` class. Probably, we can reuse a lot of `RooGradMinimizerFcn` for this and it should be rather straightforward. However, I'm rather short on time right now, and these things almost always tend to take longer than one expects, so I'm hesitant to build it now. The **advantage** would be that we could add a test to this PR that covers all that is added, basically by just running a minimization. Note that I do have such a full-coverage test, but only for the `MultiProcess` minimization, where I implemented `LikelihoodGradientWrapper` in the parallel `LikelihoodGradientJob` class. So this test will come in [""PR 7"" (see overview)](https://whimsical.com/roofit-multiprocess-teststatistics-pr-dependencies-QP47k9PyS24VuboQUP5W6P). So, up for discussion, two choices: **A:** add ""`LikelihoodGradientSerial`"" class (based on `RooGradMinimizerFcn`) so we can add an integration test in this PR; **B:** wait for the integration test in PR 7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8700
https://github.com/root-project/root/pull/8700:3399,Deployability,integrat,integration,3399,"n help me with:. 1. I have a Kahan summation helper class. This should probably be replaced with the new Kahan summation class in ROOT itself, but I didn't get to this yet. Maybe it is not urgent to do now, up for discussion.; 2. `likelihood_builders.cxx` is still missing the top level entry point function. This should be quite a simple function: it should just check whether the pdf is binned, unbinned or sum and has subsidiary terms. All the building blocks are already present, so it is just a matter of building it, but didn't get to it yet.; 3. `optional_parameter_types.h`: maybe we could replace this with @guitargeek's new configuration structs.; 4. `testRooRealL.getValRooAddition` fails because it doesn't know `RooFormulaVar`... I'm not sure what this means, but I vaguely remember that (I think) @hageboeck and @cburgard were talking about this, so I was hoping you may be able to help me out with fixing that test. Finally, one thing that in an ideal world I would have liked to do is add a serial implementation of the `LikelihoodGradientWrapper` class. Probably, we can reuse a lot of `RooGradMinimizerFcn` for this and it should be rather straightforward. However, I'm rather short on time right now, and these things almost always tend to take longer than one expects, so I'm hesitant to build it now. The **advantage** would be that we could add a test to this PR that covers all that is added, basically by just running a minimization. Note that I do have such a full-coverage test, but only for the `MultiProcess` minimization, where I implemented `LikelihoodGradientWrapper` in the parallel `LikelihoodGradientJob` class. So this test will come in [""PR 7"" (see overview)](https://whimsical.com/roofit-multiprocess-teststatistics-pr-dependencies-QP47k9PyS24VuboQUP5W6P). So, up for discussion, two choices: **A:** add ""`LikelihoodGradientSerial`"" class (based on `RooGradMinimizerFcn`) so we can add an integration test in this PR; **B:** wait for the integration test in PR 7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8700
https://github.com/root-project/root/pull/8700:799,Integrability,Wrap,Wrapper,799,"## Changes:. This PR introduces a major refactoring of the `RooAbs(Opt)TestStatistic`-`RooNLLVar` inheritance tree into:. 1. statistics-based classes on the one hand;; 2. calculation/evaluation/optimization based classes on the other hand. The likelihood is the central unit on the statistics side. The `RooAbsL` class is implemented for four kinds of likelihoods: binned, unbinned, ""subsidiary"" (an optimization for numerical stability that gathers components like global observables) and ""sum"" (over multiple components of the other types). These classes provide ways to compute their components in parallelizable chunks that can be used by the calculator classes as they see fit. On top of the likelihood classes, we also provide for convenience a set of likelihood builders. The calculator ""`...Wrapper`"" classes are abstract interfaces. These can be implemented for different kinds of algorithms, or with different kinds of optimization ""back-ends"" in mind. In an upcoming PR, we will introduce the fork-based multi-processing implementation based on `RooFit::MultiProcess`. Other possible implementations could use the GPU or external tools like TensorFlow. The coupling of all these classes to `RooMinimizer` is made via the `MinuitFcnGrad` class, which owns the `...Wrappers` that calculate the likelihood components. ## Todo:. There are still a couple of things that require attention, which I hope the reviewers can help me with:. 1. I have a Kahan summation helper class. This should probably be replaced with the new Kahan summation class in ROOT itself, but I didn't get to this yet. Maybe it is not urgent to do now, up for discussion.; 2. `likelihood_builders.cxx` is still missing the top level entry point function. This should be quite a simple function: it should just check whether the pdf is binned, unbinned or sum and has subsidiary terms. All the building blocks are already present, so it is just a matter of building it, but didn't get to it yet.; 3. `optional_parameter_type",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8700
https://github.com/root-project/root/pull/8700:830,Integrability,interface,interfaces,830,"## Changes:. This PR introduces a major refactoring of the `RooAbs(Opt)TestStatistic`-`RooNLLVar` inheritance tree into:. 1. statistics-based classes on the one hand;; 2. calculation/evaluation/optimization based classes on the other hand. The likelihood is the central unit on the statistics side. The `RooAbsL` class is implemented for four kinds of likelihoods: binned, unbinned, ""subsidiary"" (an optimization for numerical stability that gathers components like global observables) and ""sum"" (over multiple components of the other types). These classes provide ways to compute their components in parallelizable chunks that can be used by the calculator classes as they see fit. On top of the likelihood classes, we also provide for convenience a set of likelihood builders. The calculator ""`...Wrapper`"" classes are abstract interfaces. These can be implemented for different kinds of algorithms, or with different kinds of optimization ""back-ends"" in mind. In an upcoming PR, we will introduce the fork-based multi-processing implementation based on `RooFit::MultiProcess`. Other possible implementations could use the GPU or external tools like TensorFlow. The coupling of all these classes to `RooMinimizer` is made via the `MinuitFcnGrad` class, which owns the `...Wrappers` that calculate the likelihood components. ## Todo:. There are still a couple of things that require attention, which I hope the reviewers can help me with:. 1. I have a Kahan summation helper class. This should probably be replaced with the new Kahan summation class in ROOT itself, but I didn't get to this yet. Maybe it is not urgent to do now, up for discussion.; 2. `likelihood_builders.cxx` is still missing the top level entry point function. This should be quite a simple function: it should just check whether the pdf is binned, unbinned or sum and has subsidiary terms. All the building blocks are already present, so it is just a matter of building it, but didn't get to it yet.; 3. `optional_parameter_type",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8700
https://github.com/root-project/root/pull/8700:1274,Integrability,Wrap,Wrappers,1274,"The `RooAbsL` class is implemented for four kinds of likelihoods: binned, unbinned, ""subsidiary"" (an optimization for numerical stability that gathers components like global observables) and ""sum"" (over multiple components of the other types). These classes provide ways to compute their components in parallelizable chunks that can be used by the calculator classes as they see fit. On top of the likelihood classes, we also provide for convenience a set of likelihood builders. The calculator ""`...Wrapper`"" classes are abstract interfaces. These can be implemented for different kinds of algorithms, or with different kinds of optimization ""back-ends"" in mind. In an upcoming PR, we will introduce the fork-based multi-processing implementation based on `RooFit::MultiProcess`. Other possible implementations could use the GPU or external tools like TensorFlow. The coupling of all these classes to `RooMinimizer` is made via the `MinuitFcnGrad` class, which owns the `...Wrappers` that calculate the likelihood components. ## Todo:. There are still a couple of things that require attention, which I hope the reviewers can help me with:. 1. I have a Kahan summation helper class. This should probably be replaced with the new Kahan summation class in ROOT itself, but I didn't get to this yet. Maybe it is not urgent to do now, up for discussion.; 2. `likelihood_builders.cxx` is still missing the top level entry point function. This should be quite a simple function: it should just check whether the pdf is binned, unbinned or sum and has subsidiary terms. All the building blocks are already present, so it is just a matter of building it, but didn't get to it yet.; 3. `optional_parameter_types.h`: maybe we could replace this with @guitargeek's new configuration structs.; 4. `testRooRealL.getValRooAddition` fails because it doesn't know `RooFormulaVar`... I'm not sure what this means, but I vaguely remember that (I think) @hageboeck and @cburgard were talking about this, so I was hoping",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8700
https://github.com/root-project/root/pull/8700:3180,Integrability,depend,dependencies-,3180,"n help me with:. 1. I have a Kahan summation helper class. This should probably be replaced with the new Kahan summation class in ROOT itself, but I didn't get to this yet. Maybe it is not urgent to do now, up for discussion.; 2. `likelihood_builders.cxx` is still missing the top level entry point function. This should be quite a simple function: it should just check whether the pdf is binned, unbinned or sum and has subsidiary terms. All the building blocks are already present, so it is just a matter of building it, but didn't get to it yet.; 3. `optional_parameter_types.h`: maybe we could replace this with @guitargeek's new configuration structs.; 4. `testRooRealL.getValRooAddition` fails because it doesn't know `RooFormulaVar`... I'm not sure what this means, but I vaguely remember that (I think) @hageboeck and @cburgard were talking about this, so I was hoping you may be able to help me out with fixing that test. Finally, one thing that in an ideal world I would have liked to do is add a serial implementation of the `LikelihoodGradientWrapper` class. Probably, we can reuse a lot of `RooGradMinimizerFcn` for this and it should be rather straightforward. However, I'm rather short on time right now, and these things almost always tend to take longer than one expects, so I'm hesitant to build it now. The **advantage** would be that we could add a test to this PR that covers all that is added, basically by just running a minimization. Note that I do have such a full-coverage test, but only for the `MultiProcess` minimization, where I implemented `LikelihoodGradientWrapper` in the parallel `LikelihoodGradientJob` class. So this test will come in [""PR 7"" (see overview)](https://whimsical.com/roofit-multiprocess-teststatistics-pr-dependencies-QP47k9PyS24VuboQUP5W6P). So, up for discussion, two choices: **A:** add ""`LikelihoodGradientSerial`"" class (based on `RooGradMinimizerFcn`) so we can add an integration test in this PR; **B:** wait for the integration test in PR 7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8700
https://github.com/root-project/root/pull/8700:3350,Integrability,integrat,integration,3350,"n help me with:. 1. I have a Kahan summation helper class. This should probably be replaced with the new Kahan summation class in ROOT itself, but I didn't get to this yet. Maybe it is not urgent to do now, up for discussion.; 2. `likelihood_builders.cxx` is still missing the top level entry point function. This should be quite a simple function: it should just check whether the pdf is binned, unbinned or sum and has subsidiary terms. All the building blocks are already present, so it is just a matter of building it, but didn't get to it yet.; 3. `optional_parameter_types.h`: maybe we could replace this with @guitargeek's new configuration structs.; 4. `testRooRealL.getValRooAddition` fails because it doesn't know `RooFormulaVar`... I'm not sure what this means, but I vaguely remember that (I think) @hageboeck and @cburgard were talking about this, so I was hoping you may be able to help me out with fixing that test. Finally, one thing that in an ideal world I would have liked to do is add a serial implementation of the `LikelihoodGradientWrapper` class. Probably, we can reuse a lot of `RooGradMinimizerFcn` for this and it should be rather straightforward. However, I'm rather short on time right now, and these things almost always tend to take longer than one expects, so I'm hesitant to build it now. The **advantage** would be that we could add a test to this PR that covers all that is added, basically by just running a minimization. Note that I do have such a full-coverage test, but only for the `MultiProcess` minimization, where I implemented `LikelihoodGradientWrapper` in the parallel `LikelihoodGradientJob` class. So this test will come in [""PR 7"" (see overview)](https://whimsical.com/roofit-multiprocess-teststatistics-pr-dependencies-QP47k9PyS24VuboQUP5W6P). So, up for discussion, two choices: **A:** add ""`LikelihoodGradientSerial`"" class (based on `RooGradMinimizerFcn`) so we can add an integration test in this PR; **B:** wait for the integration test in PR 7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8700
https://github.com/root-project/root/pull/8700:3399,Integrability,integrat,integration,3399,"n help me with:. 1. I have a Kahan summation helper class. This should probably be replaced with the new Kahan summation class in ROOT itself, but I didn't get to this yet. Maybe it is not urgent to do now, up for discussion.; 2. `likelihood_builders.cxx` is still missing the top level entry point function. This should be quite a simple function: it should just check whether the pdf is binned, unbinned or sum and has subsidiary terms. All the building blocks are already present, so it is just a matter of building it, but didn't get to it yet.; 3. `optional_parameter_types.h`: maybe we could replace this with @guitargeek's new configuration structs.; 4. `testRooRealL.getValRooAddition` fails because it doesn't know `RooFormulaVar`... I'm not sure what this means, but I vaguely remember that (I think) @hageboeck and @cburgard were talking about this, so I was hoping you may be able to help me out with fixing that test. Finally, one thing that in an ideal world I would have liked to do is add a serial implementation of the `LikelihoodGradientWrapper` class. Probably, we can reuse a lot of `RooGradMinimizerFcn` for this and it should be rather straightforward. However, I'm rather short on time right now, and these things almost always tend to take longer than one expects, so I'm hesitant to build it now. The **advantage** would be that we could add a test to this PR that covers all that is added, basically by just running a minimization. Note that I do have such a full-coverage test, but only for the `MultiProcess` minimization, where I implemented `LikelihoodGradientWrapper` in the parallel `LikelihoodGradientJob` class. So this test will come in [""PR 7"" (see overview)](https://whimsical.com/roofit-multiprocess-teststatistics-pr-dependencies-QP47k9PyS24VuboQUP5W6P). So, up for discussion, two choices: **A:** add ""`LikelihoodGradientSerial`"" class (based on `RooGradMinimizerFcn`) so we can add an integration test in this PR; **B:** wait for the integration test in PR 7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8700
https://github.com/root-project/root/pull/8700:40,Modifiability,refactor,refactoring,40,"## Changes:. This PR introduces a major refactoring of the `RooAbs(Opt)TestStatistic`-`RooNLLVar` inheritance tree into:. 1. statistics-based classes on the one hand;; 2. calculation/evaluation/optimization based classes on the other hand. The likelihood is the central unit on the statistics side. The `RooAbsL` class is implemented for four kinds of likelihoods: binned, unbinned, ""subsidiary"" (an optimization for numerical stability that gathers components like global observables) and ""sum"" (over multiple components of the other types). These classes provide ways to compute their components in parallelizable chunks that can be used by the calculator classes as they see fit. On top of the likelihood classes, we also provide for convenience a set of likelihood builders. The calculator ""`...Wrapper`"" classes are abstract interfaces. These can be implemented for different kinds of algorithms, or with different kinds of optimization ""back-ends"" in mind. In an upcoming PR, we will introduce the fork-based multi-processing implementation based on `RooFit::MultiProcess`. Other possible implementations could use the GPU or external tools like TensorFlow. The coupling of all these classes to `RooMinimizer` is made via the `MinuitFcnGrad` class, which owns the `...Wrappers` that calculate the likelihood components. ## Todo:. There are still a couple of things that require attention, which I hope the reviewers can help me with:. 1. I have a Kahan summation helper class. This should probably be replaced with the new Kahan summation class in ROOT itself, but I didn't get to this yet. Maybe it is not urgent to do now, up for discussion.; 2. `likelihood_builders.cxx` is still missing the top level entry point function. This should be quite a simple function: it should just check whether the pdf is binned, unbinned or sum and has subsidiary terms. All the building blocks are already present, so it is just a matter of building it, but didn't get to it yet.; 3. `optional_parameter_type",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8700
https://github.com/root-project/root/pull/8700:98,Modifiability,inherit,inheritance,98,"## Changes:. This PR introduces a major refactoring of the `RooAbs(Opt)TestStatistic`-`RooNLLVar` inheritance tree into:. 1. statistics-based classes on the one hand;; 2. calculation/evaluation/optimization based classes on the other hand. The likelihood is the central unit on the statistics side. The `RooAbsL` class is implemented for four kinds of likelihoods: binned, unbinned, ""subsidiary"" (an optimization for numerical stability that gathers components like global observables) and ""sum"" (over multiple components of the other types). These classes provide ways to compute their components in parallelizable chunks that can be used by the calculator classes as they see fit. On top of the likelihood classes, we also provide for convenience a set of likelihood builders. The calculator ""`...Wrapper`"" classes are abstract interfaces. These can be implemented for different kinds of algorithms, or with different kinds of optimization ""back-ends"" in mind. In an upcoming PR, we will introduce the fork-based multi-processing implementation based on `RooFit::MultiProcess`. Other possible implementations could use the GPU or external tools like TensorFlow. The coupling of all these classes to `RooMinimizer` is made via the `MinuitFcnGrad` class, which owns the `...Wrappers` that calculate the likelihood components. ## Todo:. There are still a couple of things that require attention, which I hope the reviewers can help me with:. 1. I have a Kahan summation helper class. This should probably be replaced with the new Kahan summation class in ROOT itself, but I didn't get to this yet. Maybe it is not urgent to do now, up for discussion.; 2. `likelihood_builders.cxx` is still missing the top level entry point function. This should be quite a simple function: it should just check whether the pdf is binned, unbinned or sum and has subsidiary terms. All the building blocks are already present, so it is just a matter of building it, but didn't get to it yet.; 3. `optional_parameter_type",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8700
https://github.com/root-project/root/pull/8700:1168,Modifiability,coupling,coupling,1168,"ses on the other hand. The likelihood is the central unit on the statistics side. The `RooAbsL` class is implemented for four kinds of likelihoods: binned, unbinned, ""subsidiary"" (an optimization for numerical stability that gathers components like global observables) and ""sum"" (over multiple components of the other types). These classes provide ways to compute their components in parallelizable chunks that can be used by the calculator classes as they see fit. On top of the likelihood classes, we also provide for convenience a set of likelihood builders. The calculator ""`...Wrapper`"" classes are abstract interfaces. These can be implemented for different kinds of algorithms, or with different kinds of optimization ""back-ends"" in mind. In an upcoming PR, we will introduce the fork-based multi-processing implementation based on `RooFit::MultiProcess`. Other possible implementations could use the GPU or external tools like TensorFlow. The coupling of all these classes to `RooMinimizer` is made via the `MinuitFcnGrad` class, which owns the `...Wrappers` that calculate the likelihood components. ## Todo:. There are still a couple of things that require attention, which I hope the reviewers can help me with:. 1. I have a Kahan summation helper class. This should probably be replaced with the new Kahan summation class in ROOT itself, but I didn't get to this yet. Maybe it is not urgent to do now, up for discussion.; 2. `likelihood_builders.cxx` is still missing the top level entry point function. This should be quite a simple function: it should just check whether the pdf is binned, unbinned or sum and has subsidiary terms. All the building blocks are already present, so it is just a matter of building it, but didn't get to it yet.; 3. `optional_parameter_types.h`: maybe we could replace this with @guitargeek's new configuration structs.; 4. `testRooRealL.getValRooAddition` fails because it doesn't know `RooFormulaVar`... I'm not sure what this means, but I vaguely remembe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8700
https://github.com/root-project/root/pull/8700:2058,Modifiability,config,configuration,2058,"ation based on `RooFit::MultiProcess`. Other possible implementations could use the GPU or external tools like TensorFlow. The coupling of all these classes to `RooMinimizer` is made via the `MinuitFcnGrad` class, which owns the `...Wrappers` that calculate the likelihood components. ## Todo:. There are still a couple of things that require attention, which I hope the reviewers can help me with:. 1. I have a Kahan summation helper class. This should probably be replaced with the new Kahan summation class in ROOT itself, but I didn't get to this yet. Maybe it is not urgent to do now, up for discussion.; 2. `likelihood_builders.cxx` is still missing the top level entry point function. This should be quite a simple function: it should just check whether the pdf is binned, unbinned or sum and has subsidiary terms. All the building blocks are already present, so it is just a matter of building it, but didn't get to it yet.; 3. `optional_parameter_types.h`: maybe we could replace this with @guitargeek's new configuration structs.; 4. `testRooRealL.getValRooAddition` fails because it doesn't know `RooFormulaVar`... I'm not sure what this means, but I vaguely remember that (I think) @hageboeck and @cburgard were talking about this, so I was hoping you may be able to help me out with fixing that test. Finally, one thing that in an ideal world I would have liked to do is add a serial implementation of the `LikelihoodGradientWrapper` class. Probably, we can reuse a lot of `RooGradMinimizerFcn` for this and it should be rather straightforward. However, I'm rather short on time right now, and these things almost always tend to take longer than one expects, so I'm hesitant to build it now. The **advantage** would be that we could add a test to this PR that covers all that is added, basically by just running a minimization. Note that I do have such a full-coverage test, but only for the `MultiProcess` minimization, where I implemented `LikelihoodGradientWrapper` in the parallel `Li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8700
https://github.com/root-project/root/pull/8700:194,Performance,optimiz,optimization,194,"## Changes:. This PR introduces a major refactoring of the `RooAbs(Opt)TestStatistic`-`RooNLLVar` inheritance tree into:. 1. statistics-based classes on the one hand;; 2. calculation/evaluation/optimization based classes on the other hand. The likelihood is the central unit on the statistics side. The `RooAbsL` class is implemented for four kinds of likelihoods: binned, unbinned, ""subsidiary"" (an optimization for numerical stability that gathers components like global observables) and ""sum"" (over multiple components of the other types). These classes provide ways to compute their components in parallelizable chunks that can be used by the calculator classes as they see fit. On top of the likelihood classes, we also provide for convenience a set of likelihood builders. The calculator ""`...Wrapper`"" classes are abstract interfaces. These can be implemented for different kinds of algorithms, or with different kinds of optimization ""back-ends"" in mind. In an upcoming PR, we will introduce the fork-based multi-processing implementation based on `RooFit::MultiProcess`. Other possible implementations could use the GPU or external tools like TensorFlow. The coupling of all these classes to `RooMinimizer` is made via the `MinuitFcnGrad` class, which owns the `...Wrappers` that calculate the likelihood components. ## Todo:. There are still a couple of things that require attention, which I hope the reviewers can help me with:. 1. I have a Kahan summation helper class. This should probably be replaced with the new Kahan summation class in ROOT itself, but I didn't get to this yet. Maybe it is not urgent to do now, up for discussion.; 2. `likelihood_builders.cxx` is still missing the top level entry point function. This should be quite a simple function: it should just check whether the pdf is binned, unbinned or sum and has subsidiary terms. All the building blocks are already present, so it is just a matter of building it, but didn't get to it yet.; 3. `optional_parameter_type",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8700
https://github.com/root-project/root/pull/8700:400,Performance,optimiz,optimization,400,"## Changes:. This PR introduces a major refactoring of the `RooAbs(Opt)TestStatistic`-`RooNLLVar` inheritance tree into:. 1. statistics-based classes on the one hand;; 2. calculation/evaluation/optimization based classes on the other hand. The likelihood is the central unit on the statistics side. The `RooAbsL` class is implemented for four kinds of likelihoods: binned, unbinned, ""subsidiary"" (an optimization for numerical stability that gathers components like global observables) and ""sum"" (over multiple components of the other types). These classes provide ways to compute their components in parallelizable chunks that can be used by the calculator classes as they see fit. On top of the likelihood classes, we also provide for convenience a set of likelihood builders. The calculator ""`...Wrapper`"" classes are abstract interfaces. These can be implemented for different kinds of algorithms, or with different kinds of optimization ""back-ends"" in mind. In an upcoming PR, we will introduce the fork-based multi-processing implementation based on `RooFit::MultiProcess`. Other possible implementations could use the GPU or external tools like TensorFlow. The coupling of all these classes to `RooMinimizer` is made via the `MinuitFcnGrad` class, which owns the `...Wrappers` that calculate the likelihood components. ## Todo:. There are still a couple of things that require attention, which I hope the reviewers can help me with:. 1. I have a Kahan summation helper class. This should probably be replaced with the new Kahan summation class in ROOT itself, but I didn't get to this yet. Maybe it is not urgent to do now, up for discussion.; 2. `likelihood_builders.cxx` is still missing the top level entry point function. This should be quite a simple function: it should just check whether the pdf is binned, unbinned or sum and has subsidiary terms. All the building blocks are already present, so it is just a matter of building it, but didn't get to it yet.; 3. `optional_parameter_type",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8700
https://github.com/root-project/root/pull/8700:929,Performance,optimiz,optimization,929,"## Changes:. This PR introduces a major refactoring of the `RooAbs(Opt)TestStatistic`-`RooNLLVar` inheritance tree into:. 1. statistics-based classes on the one hand;; 2. calculation/evaluation/optimization based classes on the other hand. The likelihood is the central unit on the statistics side. The `RooAbsL` class is implemented for four kinds of likelihoods: binned, unbinned, ""subsidiary"" (an optimization for numerical stability that gathers components like global observables) and ""sum"" (over multiple components of the other types). These classes provide ways to compute their components in parallelizable chunks that can be used by the calculator classes as they see fit. On top of the likelihood classes, we also provide for convenience a set of likelihood builders. The calculator ""`...Wrapper`"" classes are abstract interfaces. These can be implemented for different kinds of algorithms, or with different kinds of optimization ""back-ends"" in mind. In an upcoming PR, we will introduce the fork-based multi-processing implementation based on `RooFit::MultiProcess`. Other possible implementations could use the GPU or external tools like TensorFlow. The coupling of all these classes to `RooMinimizer` is made via the `MinuitFcnGrad` class, which owns the `...Wrappers` that calculate the likelihood components. ## Todo:. There are still a couple of things that require attention, which I hope the reviewers can help me with:. 1. I have a Kahan summation helper class. This should probably be replaced with the new Kahan summation class in ROOT itself, but I didn't get to this yet. Maybe it is not urgent to do now, up for discussion.; 2. `likelihood_builders.cxx` is still missing the top level entry point function. This should be quite a simple function: it should just check whether the pdf is binned, unbinned or sum and has subsidiary terms. All the building blocks are already present, so it is just a matter of building it, but didn't get to it yet.; 3. `optional_parameter_type",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8700
https://github.com/root-project/root/pull/8700:71,Testability,Test,TestStatistic,71,"## Changes:. This PR introduces a major refactoring of the `RooAbs(Opt)TestStatistic`-`RooNLLVar` inheritance tree into:. 1. statistics-based classes on the one hand;; 2. calculation/evaluation/optimization based classes on the other hand. The likelihood is the central unit on the statistics side. The `RooAbsL` class is implemented for four kinds of likelihoods: binned, unbinned, ""subsidiary"" (an optimization for numerical stability that gathers components like global observables) and ""sum"" (over multiple components of the other types). These classes provide ways to compute their components in parallelizable chunks that can be used by the calculator classes as they see fit. On top of the likelihood classes, we also provide for convenience a set of likelihood builders. The calculator ""`...Wrapper`"" classes are abstract interfaces. These can be implemented for different kinds of algorithms, or with different kinds of optimization ""back-ends"" in mind. In an upcoming PR, we will introduce the fork-based multi-processing implementation based on `RooFit::MultiProcess`. Other possible implementations could use the GPU or external tools like TensorFlow. The coupling of all these classes to `RooMinimizer` is made via the `MinuitFcnGrad` class, which owns the `...Wrappers` that calculate the likelihood components. ## Todo:. There are still a couple of things that require attention, which I hope the reviewers can help me with:. 1. I have a Kahan summation helper class. This should probably be replaced with the new Kahan summation class in ROOT itself, but I didn't get to this yet. Maybe it is not urgent to do now, up for discussion.; 2. `likelihood_builders.cxx` is still missing the top level entry point function. This should be quite a simple function: it should just check whether the pdf is binned, unbinned or sum and has subsidiary terms. All the building blocks are already present, so it is just a matter of building it, but didn't get to it yet.; 3. `optional_parameter_type",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8700
https://github.com/root-project/root/pull/8700:2086,Testability,test,testRooRealL,2086,"ble implementations could use the GPU or external tools like TensorFlow. The coupling of all these classes to `RooMinimizer` is made via the `MinuitFcnGrad` class, which owns the `...Wrappers` that calculate the likelihood components. ## Todo:. There are still a couple of things that require attention, which I hope the reviewers can help me with:. 1. I have a Kahan summation helper class. This should probably be replaced with the new Kahan summation class in ROOT itself, but I didn't get to this yet. Maybe it is not urgent to do now, up for discussion.; 2. `likelihood_builders.cxx` is still missing the top level entry point function. This should be quite a simple function: it should just check whether the pdf is binned, unbinned or sum and has subsidiary terms. All the building blocks are already present, so it is just a matter of building it, but didn't get to it yet.; 3. `optional_parameter_types.h`: maybe we could replace this with @guitargeek's new configuration structs.; 4. `testRooRealL.getValRooAddition` fails because it doesn't know `RooFormulaVar`... I'm not sure what this means, but I vaguely remember that (I think) @hageboeck and @cburgard were talking about this, so I was hoping you may be able to help me out with fixing that test. Finally, one thing that in an ideal world I would have liked to do is add a serial implementation of the `LikelihoodGradientWrapper` class. Probably, we can reuse a lot of `RooGradMinimizerFcn` for this and it should be rather straightforward. However, I'm rather short on time right now, and these things almost always tend to take longer than one expects, so I'm hesitant to build it now. The **advantage** would be that we could add a test to this PR that covers all that is added, basically by just running a minimization. Note that I do have such a full-coverage test, but only for the `MultiProcess` minimization, where I implemented `LikelihoodGradientWrapper` in the parallel `LikelihoodGradientJob` class. So this test will come",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8700
https://github.com/root-project/root/pull/8700:2349,Testability,test,test,2349," owns the `...Wrappers` that calculate the likelihood components. ## Todo:. There are still a couple of things that require attention, which I hope the reviewers can help me with:. 1. I have a Kahan summation helper class. This should probably be replaced with the new Kahan summation class in ROOT itself, but I didn't get to this yet. Maybe it is not urgent to do now, up for discussion.; 2. `likelihood_builders.cxx` is still missing the top level entry point function. This should be quite a simple function: it should just check whether the pdf is binned, unbinned or sum and has subsidiary terms. All the building blocks are already present, so it is just a matter of building it, but didn't get to it yet.; 3. `optional_parameter_types.h`: maybe we could replace this with @guitargeek's new configuration structs.; 4. `testRooRealL.getValRooAddition` fails because it doesn't know `RooFormulaVar`... I'm not sure what this means, but I vaguely remember that (I think) @hageboeck and @cburgard were talking about this, so I was hoping you may be able to help me out with fixing that test. Finally, one thing that in an ideal world I would have liked to do is add a serial implementation of the `LikelihoodGradientWrapper` class. Probably, we can reuse a lot of `RooGradMinimizerFcn` for this and it should be rather straightforward. However, I'm rather short on time right now, and these things almost always tend to take longer than one expects, so I'm hesitant to build it now. The **advantage** would be that we could add a test to this PR that covers all that is added, basically by just running a minimization. Note that I do have such a full-coverage test, but only for the `MultiProcess` minimization, where I implemented `LikelihoodGradientWrapper` in the parallel `LikelihoodGradientJob` class. So this test will come in [""PR 7"" (see overview)](https://whimsical.com/roofit-multiprocess-teststatistics-pr-dependencies-QP47k9PyS24VuboQUP5W6P). So, up for discussion, two choices: **A:**",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8700
https://github.com/root-project/root/pull/8700:2793,Testability,test,test,2793,"n help me with:. 1. I have a Kahan summation helper class. This should probably be replaced with the new Kahan summation class in ROOT itself, but I didn't get to this yet. Maybe it is not urgent to do now, up for discussion.; 2. `likelihood_builders.cxx` is still missing the top level entry point function. This should be quite a simple function: it should just check whether the pdf is binned, unbinned or sum and has subsidiary terms. All the building blocks are already present, so it is just a matter of building it, but didn't get to it yet.; 3. `optional_parameter_types.h`: maybe we could replace this with @guitargeek's new configuration structs.; 4. `testRooRealL.getValRooAddition` fails because it doesn't know `RooFormulaVar`... I'm not sure what this means, but I vaguely remember that (I think) @hageboeck and @cburgard were talking about this, so I was hoping you may be able to help me out with fixing that test. Finally, one thing that in an ideal world I would have liked to do is add a serial implementation of the `LikelihoodGradientWrapper` class. Probably, we can reuse a lot of `RooGradMinimizerFcn` for this and it should be rather straightforward. However, I'm rather short on time right now, and these things almost always tend to take longer than one expects, so I'm hesitant to build it now. The **advantage** would be that we could add a test to this PR that covers all that is added, basically by just running a minimization. Note that I do have such a full-coverage test, but only for the `MultiProcess` minimization, where I implemented `LikelihoodGradientWrapper` in the parallel `LikelihoodGradientJob` class. So this test will come in [""PR 7"" (see overview)](https://whimsical.com/roofit-multiprocess-teststatistics-pr-dependencies-QP47k9PyS24VuboQUP5W6P). So, up for discussion, two choices: **A:** add ""`LikelihoodGradientSerial`"" class (based on `RooGradMinimizerFcn`) so we can add an integration test in this PR; **B:** wait for the integration test in PR 7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8700
https://github.com/root-project/root/pull/8700:2923,Testability,test,test,2923,"n help me with:. 1. I have a Kahan summation helper class. This should probably be replaced with the new Kahan summation class in ROOT itself, but I didn't get to this yet. Maybe it is not urgent to do now, up for discussion.; 2. `likelihood_builders.cxx` is still missing the top level entry point function. This should be quite a simple function: it should just check whether the pdf is binned, unbinned or sum and has subsidiary terms. All the building blocks are already present, so it is just a matter of building it, but didn't get to it yet.; 3. `optional_parameter_types.h`: maybe we could replace this with @guitargeek's new configuration structs.; 4. `testRooRealL.getValRooAddition` fails because it doesn't know `RooFormulaVar`... I'm not sure what this means, but I vaguely remember that (I think) @hageboeck and @cburgard were talking about this, so I was hoping you may be able to help me out with fixing that test. Finally, one thing that in an ideal world I would have liked to do is add a serial implementation of the `LikelihoodGradientWrapper` class. Probably, we can reuse a lot of `RooGradMinimizerFcn` for this and it should be rather straightforward. However, I'm rather short on time right now, and these things almost always tend to take longer than one expects, so I'm hesitant to build it now. The **advantage** would be that we could add a test to this PR that covers all that is added, basically by just running a minimization. Note that I do have such a full-coverage test, but only for the `MultiProcess` minimization, where I implemented `LikelihoodGradientWrapper` in the parallel `LikelihoodGradientJob` class. So this test will come in [""PR 7"" (see overview)](https://whimsical.com/roofit-multiprocess-teststatistics-pr-dependencies-QP47k9PyS24VuboQUP5W6P). So, up for discussion, two choices: **A:** add ""`LikelihoodGradientSerial`"" class (based on `RooGradMinimizerFcn`) so we can add an integration test in this PR; **B:** wait for the integration test in PR 7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8700
https://github.com/root-project/root/pull/8700:3078,Testability,test,test,3078,"n help me with:. 1. I have a Kahan summation helper class. This should probably be replaced with the new Kahan summation class in ROOT itself, but I didn't get to this yet. Maybe it is not urgent to do now, up for discussion.; 2. `likelihood_builders.cxx` is still missing the top level entry point function. This should be quite a simple function: it should just check whether the pdf is binned, unbinned or sum and has subsidiary terms. All the building blocks are already present, so it is just a matter of building it, but didn't get to it yet.; 3. `optional_parameter_types.h`: maybe we could replace this with @guitargeek's new configuration structs.; 4. `testRooRealL.getValRooAddition` fails because it doesn't know `RooFormulaVar`... I'm not sure what this means, but I vaguely remember that (I think) @hageboeck and @cburgard were talking about this, so I was hoping you may be able to help me out with fixing that test. Finally, one thing that in an ideal world I would have liked to do is add a serial implementation of the `LikelihoodGradientWrapper` class. Probably, we can reuse a lot of `RooGradMinimizerFcn` for this and it should be rather straightforward. However, I'm rather short on time right now, and these things almost always tend to take longer than one expects, so I'm hesitant to build it now. The **advantage** would be that we could add a test to this PR that covers all that is added, basically by just running a minimization. Note that I do have such a full-coverage test, but only for the `MultiProcess` minimization, where I implemented `LikelihoodGradientWrapper` in the parallel `LikelihoodGradientJob` class. So this test will come in [""PR 7"" (see overview)](https://whimsical.com/roofit-multiprocess-teststatistics-pr-dependencies-QP47k9PyS24VuboQUP5W6P). So, up for discussion, two choices: **A:** add ""`LikelihoodGradientSerial`"" class (based on `RooGradMinimizerFcn`) so we can add an integration test in this PR; **B:** wait for the integration test in PR 7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8700
https://github.com/root-project/root/pull/8700:3162,Testability,test,teststatistics-pr-dependencies-,3162,"n help me with:. 1. I have a Kahan summation helper class. This should probably be replaced with the new Kahan summation class in ROOT itself, but I didn't get to this yet. Maybe it is not urgent to do now, up for discussion.; 2. `likelihood_builders.cxx` is still missing the top level entry point function. This should be quite a simple function: it should just check whether the pdf is binned, unbinned or sum and has subsidiary terms. All the building blocks are already present, so it is just a matter of building it, but didn't get to it yet.; 3. `optional_parameter_types.h`: maybe we could replace this with @guitargeek's new configuration structs.; 4. `testRooRealL.getValRooAddition` fails because it doesn't know `RooFormulaVar`... I'm not sure what this means, but I vaguely remember that (I think) @hageboeck and @cburgard were talking about this, so I was hoping you may be able to help me out with fixing that test. Finally, one thing that in an ideal world I would have liked to do is add a serial implementation of the `LikelihoodGradientWrapper` class. Probably, we can reuse a lot of `RooGradMinimizerFcn` for this and it should be rather straightforward. However, I'm rather short on time right now, and these things almost always tend to take longer than one expects, so I'm hesitant to build it now. The **advantage** would be that we could add a test to this PR that covers all that is added, basically by just running a minimization. Note that I do have such a full-coverage test, but only for the `MultiProcess` minimization, where I implemented `LikelihoodGradientWrapper` in the parallel `LikelihoodGradientJob` class. So this test will come in [""PR 7"" (see overview)](https://whimsical.com/roofit-multiprocess-teststatistics-pr-dependencies-QP47k9PyS24VuboQUP5W6P). So, up for discussion, two choices: **A:** add ""`LikelihoodGradientSerial`"" class (based on `RooGradMinimizerFcn`) so we can add an integration test in this PR; **B:** wait for the integration test in PR 7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8700
https://github.com/root-project/root/pull/8700:3362,Testability,test,test,3362,"n help me with:. 1. I have a Kahan summation helper class. This should probably be replaced with the new Kahan summation class in ROOT itself, but I didn't get to this yet. Maybe it is not urgent to do now, up for discussion.; 2. `likelihood_builders.cxx` is still missing the top level entry point function. This should be quite a simple function: it should just check whether the pdf is binned, unbinned or sum and has subsidiary terms. All the building blocks are already present, so it is just a matter of building it, but didn't get to it yet.; 3. `optional_parameter_types.h`: maybe we could replace this with @guitargeek's new configuration structs.; 4. `testRooRealL.getValRooAddition` fails because it doesn't know `RooFormulaVar`... I'm not sure what this means, but I vaguely remember that (I think) @hageboeck and @cburgard were talking about this, so I was hoping you may be able to help me out with fixing that test. Finally, one thing that in an ideal world I would have liked to do is add a serial implementation of the `LikelihoodGradientWrapper` class. Probably, we can reuse a lot of `RooGradMinimizerFcn` for this and it should be rather straightforward. However, I'm rather short on time right now, and these things almost always tend to take longer than one expects, so I'm hesitant to build it now. The **advantage** would be that we could add a test to this PR that covers all that is added, basically by just running a minimization. Note that I do have such a full-coverage test, but only for the `MultiProcess` minimization, where I implemented `LikelihoodGradientWrapper` in the parallel `LikelihoodGradientJob` class. So this test will come in [""PR 7"" (see overview)](https://whimsical.com/roofit-multiprocess-teststatistics-pr-dependencies-QP47k9PyS24VuboQUP5W6P). So, up for discussion, two choices: **A:** add ""`LikelihoodGradientSerial`"" class (based on `RooGradMinimizerFcn`) so we can add an integration test in this PR; **B:** wait for the integration test in PR 7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8700
https://github.com/root-project/root/pull/8700:3411,Testability,test,test,3411,"n help me with:. 1. I have a Kahan summation helper class. This should probably be replaced with the new Kahan summation class in ROOT itself, but I didn't get to this yet. Maybe it is not urgent to do now, up for discussion.; 2. `likelihood_builders.cxx` is still missing the top level entry point function. This should be quite a simple function: it should just check whether the pdf is binned, unbinned or sum and has subsidiary terms. All the building blocks are already present, so it is just a matter of building it, but didn't get to it yet.; 3. `optional_parameter_types.h`: maybe we could replace this with @guitargeek's new configuration structs.; 4. `testRooRealL.getValRooAddition` fails because it doesn't know `RooFormulaVar`... I'm not sure what this means, but I vaguely remember that (I think) @hageboeck and @cburgard were talking about this, so I was hoping you may be able to help me out with fixing that test. Finally, one thing that in an ideal world I would have liked to do is add a serial implementation of the `LikelihoodGradientWrapper` class. Probably, we can reuse a lot of `RooGradMinimizerFcn` for this and it should be rather straightforward. However, I'm rather short on time right now, and these things almost always tend to take longer than one expects, so I'm hesitant to build it now. The **advantage** would be that we could add a test to this PR that covers all that is added, basically by just running a minimization. Note that I do have such a full-coverage test, but only for the `MultiProcess` minimization, where I implemented `LikelihoodGradientWrapper` in the parallel `LikelihoodGradientJob` class. So this test will come in [""PR 7"" (see overview)](https://whimsical.com/roofit-multiprocess-teststatistics-pr-dependencies-QP47k9PyS24VuboQUP5W6P). So, up for discussion, two choices: **A:** add ""`LikelihoodGradientSerial`"" class (based on `RooGradMinimizerFcn`) so we can add an integration test in this PR; **B:** wait for the integration test in PR 7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8700
https://github.com/root-project/root/pull/8700:1756,Usability,simpl,simple,1756,"..Wrapper`"" classes are abstract interfaces. These can be implemented for different kinds of algorithms, or with different kinds of optimization ""back-ends"" in mind. In an upcoming PR, we will introduce the fork-based multi-processing implementation based on `RooFit::MultiProcess`. Other possible implementations could use the GPU or external tools like TensorFlow. The coupling of all these classes to `RooMinimizer` is made via the `MinuitFcnGrad` class, which owns the `...Wrappers` that calculate the likelihood components. ## Todo:. There are still a couple of things that require attention, which I hope the reviewers can help me with:. 1. I have a Kahan summation helper class. This should probably be replaced with the new Kahan summation class in ROOT itself, but I didn't get to this yet. Maybe it is not urgent to do now, up for discussion.; 2. `likelihood_builders.cxx` is still missing the top level entry point function. This should be quite a simple function: it should just check whether the pdf is binned, unbinned or sum and has subsidiary terms. All the building blocks are already present, so it is just a matter of building it, but didn't get to it yet.; 3. `optional_parameter_types.h`: maybe we could replace this with @guitargeek's new configuration structs.; 4. `testRooRealL.getValRooAddition` fails because it doesn't know `RooFormulaVar`... I'm not sure what this means, but I vaguely remember that (I think) @hageboeck and @cburgard were talking about this, so I was hoping you may be able to help me out with fixing that test. Finally, one thing that in an ideal world I would have liked to do is add a serial implementation of the `LikelihoodGradientWrapper` class. Probably, we can reuse a lot of `RooGradMinimizerFcn` for this and it should be rather straightforward. However, I'm rather short on time right now, and these things almost always tend to take longer than one expects, so I'm hesitant to build it now. The **advantage** would be that we could add a test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8700
https://github.com/root-project/root/pull/8701:20,Modifiability,Variab,Variable,20,Implementation of a Variable Plotter for RNode and RTensor inputs.; See [PR 4211](https://github.com/root-project/root/pull/4211) for a first attempt / inspiration. . ## Changes or fixes:; Created main class: ; * /tmva/tmvagui/src/RVariablePlotter.cxx; * /tmva/tmvagui/inc/RVariablePlotter.hxx. Created two tutorials: ; * /tutorials/tmva/tmva005_RVariablePlotter.C ; * /tutorials/tmva/tmva005_RVariablePlotter_RTensor.C . ## Checklist:. - [ ✅] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8701
https://github.com/root-project/root/pull/8701:444,Testability,test,tested,444,Implementation of a Variable Plotter for RNode and RTensor inputs.; See [PR 4211](https://github.com/root-project/root/pull/4211) for a first attempt / inspiration. . ## Changes or fixes:; Created main class: ; * /tmva/tmvagui/src/RVariablePlotter.cxx; * /tmva/tmvagui/inc/RVariablePlotter.hxx. Created two tutorials: ; * /tutorials/tmva/tmva005_RVariablePlotter.C ; * /tutorials/tmva/tmva005_RVariablePlotter_RTensor.C . ## Checklist:. - [ ✅] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8701
https://github.com/root-project/root/pull/8703:1079,Energy Efficiency,reduce,reduce,1079,"e of RNTuple. The default should work well in the majority of cases but can be adjusted if needed. The idea is to give target sizes for clusters and pages (measured in bytes). RNTuple will try make good decisions and approximate the target sizes. The PR replaces previous defaults for cluster size and page size given in number of entries and number of elements resp. ## Changes or fixes:; The PR sets three new defaults:; - Target size for compressed clusters of 50MB. In general, larger clusters provide room for more and larger pages and should improve compression ratio and speed. However, clusters also need to be buffered during write and (partially) during read, so larger cluster increase the memory footprint.; - Maximum size for uncompressed clusters of 512MiB. Prevents very compressible clusters from growing too large. That is mostly a problem for writing.; - Target size for uncompressed pages of 64KiB. In general, larger pages give better compression ratios. Smaller pages, however, reduce the memory footprint. When reading, every active column requires at least one page buffer. For the number of read requests, the page size does not matter because pages of the same column are written consecutively and therefore read in one go. Given the three settings, writing works as follows: when the current cluster is larger than the maximum uncompressed size, it will be flushed unconditionally. When the current cluster size reaches the estimate for the compressed cluster size, it will be flushed, too. The estimated compression ratio for the first cluster is 0.5 if compression is used, and 1 otherwise. The following clusters use the compression ratio of the last cluster as estimate. Pages are filled until the target size and then flushed. If a column has enough elements to fill at least half a page, there is a mechanism to prevent undersized tail pages: writing uses two page buffers in turns and flushes the previous buffer only once the next buffer is at least at 50%. If the cl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8703
https://github.com/root-project/root/pull/8705:271,Deployability,update,updated,271,# This Pull request:. - Translated rf_408_RDataFrameToRooFit.C; - Changed signature of constructor to take RooAbsArg by reference.; - Changed ROOT.RooArgList in args to accept a simple Python list. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8705
https://github.com/root-project/root/pull/8705:241,Testability,test,tested,241,# This Pull request:. - Translated rf_408_RDataFrameToRooFit.C; - Changed signature of constructor to take RooAbsArg by reference.; - Changed ROOT.RooArgList in args to accept a simple Python list. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8705
https://github.com/root-project/root/pull/8705:178,Usability,simpl,simple,178,# This Pull request:. - Translated rf_408_RDataFrameToRooFit.C; - Changed signature of constructor to take RooAbsArg by reference.; - Changed ROOT.RooArgList in args to accept a simple Python list. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8705
https://github.com/root-project/root/issues/8706:425,Availability,avail,available,425,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->; On [Zenodo](https://zenodo.org/search?q=conceptrecid:""848818""&sort=-publication_date&all_versions=True), only 10 releases are currently listed and the reason of selection is not obvious. None of ROOT 5 are there whereas there are still some usages of that legacy versions. Even the most of ROOT 6 releases are not available. As a result, citing ""the DOI specific to your ROOT version"" is practically difficult. It would be great if every new release is available on Zenodo. Publishing historical releases, ex. all ROOT 6 and recent ROOT 5 used by major projects, will be a plus. Ancient releases like ROOT 3 and 4 may not be worth doing, though. ### Optional: share how it could be improved; <!--; If you already have an idea what we could improve, then please tell us.; -->. Publishing a new release on Zenodo (automatically) as part of the release process?. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->; N/A. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; N/A. ### Additional context; <!--; Add any other context about the problem here.; -->; N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8706
https://github.com/root-project/root/issues/8706:564,Availability,avail,available,564,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->; On [Zenodo](https://zenodo.org/search?q=conceptrecid:""848818""&sort=-publication_date&all_versions=True), only 10 releases are currently listed and the reason of selection is not obvious. None of ROOT 5 are there whereas there are still some usages of that legacy versions. Even the most of ROOT 6 releases are not available. As a result, citing ""the DOI specific to your ROOT version"" is practically difficult. It would be great if every new release is available on Zenodo. Publishing historical releases, ex. all ROOT 6 and recent ROOT 5 used by major projects, will be a plus. Ancient releases like ROOT 3 and 4 may not be worth doing, though. ### Optional: share how it could be improved; <!--; If you already have an idea what we could improve, then please tell us.; -->. Publishing a new release on Zenodo (automatically) as part of the release process?. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->; N/A. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; N/A. ### Additional context; <!--; Add any other context about the problem here.; -->; N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8706
https://github.com/root-project/root/issues/8706:1360,Availability,down,download,1360,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->; On [Zenodo](https://zenodo.org/search?q=conceptrecid:""848818""&sort=-publication_date&all_versions=True), only 10 releases are currently listed and the reason of selection is not obvious. None of ROOT 5 are there whereas there are still some usages of that legacy versions. Even the most of ROOT 6 releases are not available. As a result, citing ""the DOI specific to your ROOT version"" is practically difficult. It would be great if every new release is available on Zenodo. Publishing historical releases, ex. all ROOT 6 and recent ROOT 5 used by major projects, will be a plus. Ancient releases like ROOT 3 and 4 may not be worth doing, though. ### Optional: share how it could be improved; <!--; If you already have an idea what we could improve, then please tell us.; -->. Publishing a new release on Zenodo (automatically) as part of the release process?. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->; N/A. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; N/A. ### Additional context; <!--; Add any other context about the problem here.; -->; N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8706
https://github.com/root-project/root/issues/8706:224,Deployability,release,releases,224,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->; On [Zenodo](https://zenodo.org/search?q=conceptrecid:""848818""&sort=-publication_date&all_versions=True), only 10 releases are currently listed and the reason of selection is not obvious. None of ROOT 5 are there whereas there are still some usages of that legacy versions. Even the most of ROOT 6 releases are not available. As a result, citing ""the DOI specific to your ROOT version"" is practically difficult. It would be great if every new release is available on Zenodo. Publishing historical releases, ex. all ROOT 6 and recent ROOT 5 used by major projects, will be a plus. Ancient releases like ROOT 3 and 4 may not be worth doing, though. ### Optional: share how it could be improved; <!--; If you already have an idea what we could improve, then please tell us.; -->. Publishing a new release on Zenodo (automatically) as part of the release process?. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->; N/A. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; N/A. ### Additional context; <!--; Add any other context about the problem here.; -->; N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8706
https://github.com/root-project/root/issues/8706:408,Deployability,release,releases,408,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->; On [Zenodo](https://zenodo.org/search?q=conceptrecid:""848818""&sort=-publication_date&all_versions=True), only 10 releases are currently listed and the reason of selection is not obvious. None of ROOT 5 are there whereas there are still some usages of that legacy versions. Even the most of ROOT 6 releases are not available. As a result, citing ""the DOI specific to your ROOT version"" is practically difficult. It would be great if every new release is available on Zenodo. Publishing historical releases, ex. all ROOT 6 and recent ROOT 5 used by major projects, will be a plus. Ancient releases like ROOT 3 and 4 may not be worth doing, though. ### Optional: share how it could be improved; <!--; If you already have an idea what we could improve, then please tell us.; -->. Publishing a new release on Zenodo (automatically) as part of the release process?. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->; N/A. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; N/A. ### Additional context; <!--; Add any other context about the problem here.; -->; N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8706
https://github.com/root-project/root/issues/8706:553,Deployability,release,release,553,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->; On [Zenodo](https://zenodo.org/search?q=conceptrecid:""848818""&sort=-publication_date&all_versions=True), only 10 releases are currently listed and the reason of selection is not obvious. None of ROOT 5 are there whereas there are still some usages of that legacy versions. Even the most of ROOT 6 releases are not available. As a result, citing ""the DOI specific to your ROOT version"" is practically difficult. It would be great if every new release is available on Zenodo. Publishing historical releases, ex. all ROOT 6 and recent ROOT 5 used by major projects, will be a plus. Ancient releases like ROOT 3 and 4 may not be worth doing, though. ### Optional: share how it could be improved; <!--; If you already have an idea what we could improve, then please tell us.; -->. Publishing a new release on Zenodo (automatically) as part of the release process?. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->; N/A. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; N/A. ### Additional context; <!--; Add any other context about the problem here.; -->; N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8706
https://github.com/root-project/root/issues/8706:607,Deployability,release,releases,607,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->; On [Zenodo](https://zenodo.org/search?q=conceptrecid:""848818""&sort=-publication_date&all_versions=True), only 10 releases are currently listed and the reason of selection is not obvious. None of ROOT 5 are there whereas there are still some usages of that legacy versions. Even the most of ROOT 6 releases are not available. As a result, citing ""the DOI specific to your ROOT version"" is practically difficult. It would be great if every new release is available on Zenodo. Publishing historical releases, ex. all ROOT 6 and recent ROOT 5 used by major projects, will be a plus. Ancient releases like ROOT 3 and 4 may not be worth doing, though. ### Optional: share how it could be improved; <!--; If you already have an idea what we could improve, then please tell us.; -->. Publishing a new release on Zenodo (automatically) as part of the release process?. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->; N/A. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; N/A. ### Additional context; <!--; Add any other context about the problem here.; -->; N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8706
https://github.com/root-project/root/issues/8706:698,Deployability,release,releases,698,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->; On [Zenodo](https://zenodo.org/search?q=conceptrecid:""848818""&sort=-publication_date&all_versions=True), only 10 releases are currently listed and the reason of selection is not obvious. None of ROOT 5 are there whereas there are still some usages of that legacy versions. Even the most of ROOT 6 releases are not available. As a result, citing ""the DOI specific to your ROOT version"" is practically difficult. It would be great if every new release is available on Zenodo. Publishing historical releases, ex. all ROOT 6 and recent ROOT 5 used by major projects, will be a plus. Ancient releases like ROOT 3 and 4 may not be worth doing, though. ### Optional: share how it could be improved; <!--; If you already have an idea what we could improve, then please tell us.; -->. Publishing a new release on Zenodo (automatically) as part of the release process?. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->; N/A. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; N/A. ### Additional context; <!--; Add any other context about the problem here.; -->; N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8706
https://github.com/root-project/root/issues/8706:904,Deployability,release,release,904,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->; On [Zenodo](https://zenodo.org/search?q=conceptrecid:""848818""&sort=-publication_date&all_versions=True), only 10 releases are currently listed and the reason of selection is not obvious. None of ROOT 5 are there whereas there are still some usages of that legacy versions. Even the most of ROOT 6 releases are not available. As a result, citing ""the DOI specific to your ROOT version"" is practically difficult. It would be great if every new release is available on Zenodo. Publishing historical releases, ex. all ROOT 6 and recent ROOT 5 used by major projects, will be a plus. Ancient releases like ROOT 3 and 4 may not be worth doing, though. ### Optional: share how it could be improved; <!--; If you already have an idea what we could improve, then please tell us.; -->. Publishing a new release on Zenodo (automatically) as part of the release process?. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->; N/A. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; N/A. ### Additional context; <!--; Add any other context about the problem here.; -->; N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8706
https://github.com/root-project/root/issues/8706:953,Deployability,release,release,953,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->; On [Zenodo](https://zenodo.org/search?q=conceptrecid:""848818""&sort=-publication_date&all_versions=True), only 10 releases are currently listed and the reason of selection is not obvious. None of ROOT 5 are there whereas there are still some usages of that legacy versions. Even the most of ROOT 6 releases are not available. As a result, citing ""the DOI specific to your ROOT version"" is practically difficult. It would be great if every new release is available on Zenodo. Publishing historical releases, ex. all ROOT 6 and recent ROOT 5 used by major projects, will be a plus. Ancient releases like ROOT 3 and 4 may not be worth doing, though. ### Optional: share how it could be improved; <!--; If you already have an idea what we could improve, then please tell us.; -->. Publishing a new release on Zenodo (automatically) as part of the release process?. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->; N/A. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; N/A. ### Additional context; <!--; Add any other context about the problem here.; -->; N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8706
https://github.com/root-project/root/issues/8706:1342,Deployability,install,install,1342,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->; On [Zenodo](https://zenodo.org/search?q=conceptrecid:""848818""&sort=-publication_date&all_versions=True), only 10 releases are currently listed and the reason of selection is not obvious. None of ROOT 5 are there whereas there are still some usages of that legacy versions. Even the most of ROOT 6 releases are not available. As a result, citing ""the DOI specific to your ROOT version"" is practically difficult. It would be great if every new release is available on Zenodo. Publishing historical releases, ex. all ROOT 6 and recent ROOT 5 used by major projects, will be a plus. Ancient releases like ROOT 3 and 4 may not be worth doing, though. ### Optional: share how it could be improved; <!--; If you already have an idea what we could improve, then please tell us.; -->. Publishing a new release on Zenodo (automatically) as part of the release process?. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->; N/A. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; N/A. ### Additional context; <!--; Add any other context about the problem here.; -->; N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8706
https://github.com/root-project/root/issues/8707:97,Integrability,depend,dependencies,97,CTest fixtures which have previously been added to Rootbench have been useful in defining better dependencies for tests. Since we currently cannot have dependencies between tests fixtures should be added into both root and roottest.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8707
https://github.com/root-project/root/issues/8707:152,Integrability,depend,dependencies,152,CTest fixtures which have previously been added to Rootbench have been useful in defining better dependencies for tests. Since we currently cannot have dependencies between tests fixtures should be added into both root and roottest.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8707
https://github.com/root-project/root/issues/8707:114,Testability,test,tests,114,CTest fixtures which have previously been added to Rootbench have been useful in defining better dependencies for tests. Since we currently cannot have dependencies between tests fixtures should be added into both root and roottest.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8707
https://github.com/root-project/root/issues/8707:173,Testability,test,tests,173,CTest fixtures which have previously been added to Rootbench have been useful in defining better dependencies for tests. Since we currently cannot have dependencies between tests fixtures should be added into both root and roottest.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8707
https://github.com/root-project/root/issues/8708:304,Availability,echo,echo,304,"- [ ] Checked for duplicates; Yes, kind of. I thought that there was a ticket about this by @amadio, but I didn't find anything. ## Describe the bug; In a setup where ROOT was installed in a system directory, ROOT was picking up headers from that directory instead of its own. ### How to reproduce:; 1. `echo '#error This is the wrong header' > /my/include/directory/RooSpan.h` (or a few other headers).; 2. Install some builtins into that directory, e.g. VDT; 3. `cmake -DCMAKE_PREFIX_PATH=/my/include/directory/ <root>` to create a dependency to that include directory.; 4. Build. Now ROOT should find VDT, and add a `-I/my/include/directory/` to the compile command, which will accidentally include other parts of ROOT.; The problem is that it's difficult to provoke this error using only one header:; - All core includes are prepended to every compile command, so none of the core includes will be picked up wrongly.; - Library A will always find its own includes in the correct location, because it's also prepended. The problem only becomes visible when `A` depends on `B and C`, and `B` depends on something in `/system/include/` (e.g. VDT), and `C` is *also* installed in those system includes. This generates a compile command such as:; ```; -I.../core/x -I.../core/y -I.../core/... -I.../A/include -I.../B/include -I/system/include/ -I.../C/include ...; ```; Instead of picking up `C` from ROOT's build directory, it now comes from `/system/include/`. ### Expected behavior; ROOT picks up all its own includes first, and system includes last. This can be achieved with `-isystem ...`, so every `-I ...` is searched before `-isystem ...`.; In CMake, this means:; - Using imported targets when software comes from system directories (these are implicitly system includes); - Explicitly marking some include directories `SYSTEM`. ### Setup; Centos8; ROOT installed in `/data/software/`; ROOT configured with; `cmake -DCMAKE_PREFIX_PATH=/data/software ... <root>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8708
https://github.com/root-project/root/issues/8708:311,Availability,error,error,311,"- [ ] Checked for duplicates; Yes, kind of. I thought that there was a ticket about this by @amadio, but I didn't find anything. ## Describe the bug; In a setup where ROOT was installed in a system directory, ROOT was picking up headers from that directory instead of its own. ### How to reproduce:; 1. `echo '#error This is the wrong header' > /my/include/directory/RooSpan.h` (or a few other headers).; 2. Install some builtins into that directory, e.g. VDT; 3. `cmake -DCMAKE_PREFIX_PATH=/my/include/directory/ <root>` to create a dependency to that include directory.; 4. Build. Now ROOT should find VDT, and add a `-I/my/include/directory/` to the compile command, which will accidentally include other parts of ROOT.; The problem is that it's difficult to provoke this error using only one header:; - All core includes are prepended to every compile command, so none of the core includes will be picked up wrongly.; - Library A will always find its own includes in the correct location, because it's also prepended. The problem only becomes visible when `A` depends on `B and C`, and `B` depends on something in `/system/include/` (e.g. VDT), and `C` is *also* installed in those system includes. This generates a compile command such as:; ```; -I.../core/x -I.../core/y -I.../core/... -I.../A/include -I.../B/include -I/system/include/ -I.../C/include ...; ```; Instead of picking up `C` from ROOT's build directory, it now comes from `/system/include/`. ### Expected behavior; ROOT picks up all its own includes first, and system includes last. This can be achieved with `-isystem ...`, so every `-I ...` is searched before `-isystem ...`.; In CMake, this means:; - Using imported targets when software comes from system directories (these are implicitly system includes); - Explicitly marking some include directories `SYSTEM`. ### Setup; Centos8; ROOT installed in `/data/software/`; ROOT configured with; `cmake -DCMAKE_PREFIX_PATH=/data/software ... <root>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8708
https://github.com/root-project/root/issues/8708:775,Availability,error,error,775,"- [ ] Checked for duplicates; Yes, kind of. I thought that there was a ticket about this by @amadio, but I didn't find anything. ## Describe the bug; In a setup where ROOT was installed in a system directory, ROOT was picking up headers from that directory instead of its own. ### How to reproduce:; 1. `echo '#error This is the wrong header' > /my/include/directory/RooSpan.h` (or a few other headers).; 2. Install some builtins into that directory, e.g. VDT; 3. `cmake -DCMAKE_PREFIX_PATH=/my/include/directory/ <root>` to create a dependency to that include directory.; 4. Build. Now ROOT should find VDT, and add a `-I/my/include/directory/` to the compile command, which will accidentally include other parts of ROOT.; The problem is that it's difficult to provoke this error using only one header:; - All core includes are prepended to every compile command, so none of the core includes will be picked up wrongly.; - Library A will always find its own includes in the correct location, because it's also prepended. The problem only becomes visible when `A` depends on `B and C`, and `B` depends on something in `/system/include/` (e.g. VDT), and `C` is *also* installed in those system includes. This generates a compile command such as:; ```; -I.../core/x -I.../core/y -I.../core/... -I.../A/include -I.../B/include -I/system/include/ -I.../C/include ...; ```; Instead of picking up `C` from ROOT's build directory, it now comes from `/system/include/`. ### Expected behavior; ROOT picks up all its own includes first, and system includes last. This can be achieved with `-isystem ...`, so every `-I ...` is searched before `-isystem ...`.; In CMake, this means:; - Using imported targets when software comes from system directories (these are implicitly system includes); - Explicitly marking some include directories `SYSTEM`. ### Setup; Centos8; ROOT installed in `/data/software/`; ROOT configured with; `cmake -DCMAKE_PREFIX_PATH=/data/software ... <root>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8708
https://github.com/root-project/root/issues/8708:176,Deployability,install,installed,176,"- [ ] Checked for duplicates; Yes, kind of. I thought that there was a ticket about this by @amadio, but I didn't find anything. ## Describe the bug; In a setup where ROOT was installed in a system directory, ROOT was picking up headers from that directory instead of its own. ### How to reproduce:; 1. `echo '#error This is the wrong header' > /my/include/directory/RooSpan.h` (or a few other headers).; 2. Install some builtins into that directory, e.g. VDT; 3. `cmake -DCMAKE_PREFIX_PATH=/my/include/directory/ <root>` to create a dependency to that include directory.; 4. Build. Now ROOT should find VDT, and add a `-I/my/include/directory/` to the compile command, which will accidentally include other parts of ROOT.; The problem is that it's difficult to provoke this error using only one header:; - All core includes are prepended to every compile command, so none of the core includes will be picked up wrongly.; - Library A will always find its own includes in the correct location, because it's also prepended. The problem only becomes visible when `A` depends on `B and C`, and `B` depends on something in `/system/include/` (e.g. VDT), and `C` is *also* installed in those system includes. This generates a compile command such as:; ```; -I.../core/x -I.../core/y -I.../core/... -I.../A/include -I.../B/include -I/system/include/ -I.../C/include ...; ```; Instead of picking up `C` from ROOT's build directory, it now comes from `/system/include/`. ### Expected behavior; ROOT picks up all its own includes first, and system includes last. This can be achieved with `-isystem ...`, so every `-I ...` is searched before `-isystem ...`.; In CMake, this means:; - Using imported targets when software comes from system directories (these are implicitly system includes); - Explicitly marking some include directories `SYSTEM`. ### Setup; Centos8; ROOT installed in `/data/software/`; ROOT configured with; `cmake -DCMAKE_PREFIX_PATH=/data/software ... <root>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8708
https://github.com/root-project/root/issues/8708:408,Deployability,Install,Install,408,"- [ ] Checked for duplicates; Yes, kind of. I thought that there was a ticket about this by @amadio, but I didn't find anything. ## Describe the bug; In a setup where ROOT was installed in a system directory, ROOT was picking up headers from that directory instead of its own. ### How to reproduce:; 1. `echo '#error This is the wrong header' > /my/include/directory/RooSpan.h` (or a few other headers).; 2. Install some builtins into that directory, e.g. VDT; 3. `cmake -DCMAKE_PREFIX_PATH=/my/include/directory/ <root>` to create a dependency to that include directory.; 4. Build. Now ROOT should find VDT, and add a `-I/my/include/directory/` to the compile command, which will accidentally include other parts of ROOT.; The problem is that it's difficult to provoke this error using only one header:; - All core includes are prepended to every compile command, so none of the core includes will be picked up wrongly.; - Library A will always find its own includes in the correct location, because it's also prepended. The problem only becomes visible when `A` depends on `B and C`, and `B` depends on something in `/system/include/` (e.g. VDT), and `C` is *also* installed in those system includes. This generates a compile command such as:; ```; -I.../core/x -I.../core/y -I.../core/... -I.../A/include -I.../B/include -I/system/include/ -I.../C/include ...; ```; Instead of picking up `C` from ROOT's build directory, it now comes from `/system/include/`. ### Expected behavior; ROOT picks up all its own includes first, and system includes last. This can be achieved with `-isystem ...`, so every `-I ...` is searched before `-isystem ...`.; In CMake, this means:; - Using imported targets when software comes from system directories (these are implicitly system includes); - Explicitly marking some include directories `SYSTEM`. ### Setup; Centos8; ROOT installed in `/data/software/`; ROOT configured with; `cmake -DCMAKE_PREFIX_PATH=/data/software ... <root>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8708
https://github.com/root-project/root/issues/8708:1167,Deployability,install,installed,1167,"- [ ] Checked for duplicates; Yes, kind of. I thought that there was a ticket about this by @amadio, but I didn't find anything. ## Describe the bug; In a setup where ROOT was installed in a system directory, ROOT was picking up headers from that directory instead of its own. ### How to reproduce:; 1. `echo '#error This is the wrong header' > /my/include/directory/RooSpan.h` (or a few other headers).; 2. Install some builtins into that directory, e.g. VDT; 3. `cmake -DCMAKE_PREFIX_PATH=/my/include/directory/ <root>` to create a dependency to that include directory.; 4. Build. Now ROOT should find VDT, and add a `-I/my/include/directory/` to the compile command, which will accidentally include other parts of ROOT.; The problem is that it's difficult to provoke this error using only one header:; - All core includes are prepended to every compile command, so none of the core includes will be picked up wrongly.; - Library A will always find its own includes in the correct location, because it's also prepended. The problem only becomes visible when `A` depends on `B and C`, and `B` depends on something in `/system/include/` (e.g. VDT), and `C` is *also* installed in those system includes. This generates a compile command such as:; ```; -I.../core/x -I.../core/y -I.../core/... -I.../A/include -I.../B/include -I/system/include/ -I.../C/include ...; ```; Instead of picking up `C` from ROOT's build directory, it now comes from `/system/include/`. ### Expected behavior; ROOT picks up all its own includes first, and system includes last. This can be achieved with `-isystem ...`, so every `-I ...` is searched before `-isystem ...`.; In CMake, this means:; - Using imported targets when software comes from system directories (these are implicitly system includes); - Explicitly marking some include directories `SYSTEM`. ### Setup; Centos8; ROOT installed in `/data/software/`; ROOT configured with; `cmake -DCMAKE_PREFIX_PATH=/data/software ... <root>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8708
https://github.com/root-project/root/issues/8708:1862,Deployability,install,installed,1862,"- [ ] Checked for duplicates; Yes, kind of. I thought that there was a ticket about this by @amadio, but I didn't find anything. ## Describe the bug; In a setup where ROOT was installed in a system directory, ROOT was picking up headers from that directory instead of its own. ### How to reproduce:; 1. `echo '#error This is the wrong header' > /my/include/directory/RooSpan.h` (or a few other headers).; 2. Install some builtins into that directory, e.g. VDT; 3. `cmake -DCMAKE_PREFIX_PATH=/my/include/directory/ <root>` to create a dependency to that include directory.; 4. Build. Now ROOT should find VDT, and add a `-I/my/include/directory/` to the compile command, which will accidentally include other parts of ROOT.; The problem is that it's difficult to provoke this error using only one header:; - All core includes are prepended to every compile command, so none of the core includes will be picked up wrongly.; - Library A will always find its own includes in the correct location, because it's also prepended. The problem only becomes visible when `A` depends on `B and C`, and `B` depends on something in `/system/include/` (e.g. VDT), and `C` is *also* installed in those system includes. This generates a compile command such as:; ```; -I.../core/x -I.../core/y -I.../core/... -I.../A/include -I.../B/include -I/system/include/ -I.../C/include ...; ```; Instead of picking up `C` from ROOT's build directory, it now comes from `/system/include/`. ### Expected behavior; ROOT picks up all its own includes first, and system includes last. This can be achieved with `-isystem ...`, so every `-I ...` is searched before `-isystem ...`.; In CMake, this means:; - Using imported targets when software comes from system directories (these are implicitly system includes); - Explicitly marking some include directories `SYSTEM`. ### Setup; Centos8; ROOT installed in `/data/software/`; ROOT configured with; `cmake -DCMAKE_PREFIX_PATH=/data/software ... <root>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8708
https://github.com/root-project/root/issues/8708:534,Integrability,depend,dependency,534,"- [ ] Checked for duplicates; Yes, kind of. I thought that there was a ticket about this by @amadio, but I didn't find anything. ## Describe the bug; In a setup where ROOT was installed in a system directory, ROOT was picking up headers from that directory instead of its own. ### How to reproduce:; 1. `echo '#error This is the wrong header' > /my/include/directory/RooSpan.h` (or a few other headers).; 2. Install some builtins into that directory, e.g. VDT; 3. `cmake -DCMAKE_PREFIX_PATH=/my/include/directory/ <root>` to create a dependency to that include directory.; 4. Build. Now ROOT should find VDT, and add a `-I/my/include/directory/` to the compile command, which will accidentally include other parts of ROOT.; The problem is that it's difficult to provoke this error using only one header:; - All core includes are prepended to every compile command, so none of the core includes will be picked up wrongly.; - Library A will always find its own includes in the correct location, because it's also prepended. The problem only becomes visible when `A` depends on `B and C`, and `B` depends on something in `/system/include/` (e.g. VDT), and `C` is *also* installed in those system includes. This generates a compile command such as:; ```; -I.../core/x -I.../core/y -I.../core/... -I.../A/include -I.../B/include -I/system/include/ -I.../C/include ...; ```; Instead of picking up `C` from ROOT's build directory, it now comes from `/system/include/`. ### Expected behavior; ROOT picks up all its own includes first, and system includes last. This can be achieved with `-isystem ...`, so every `-I ...` is searched before `-isystem ...`.; In CMake, this means:; - Using imported targets when software comes from system directories (these are implicitly system includes); - Explicitly marking some include directories `SYSTEM`. ### Setup; Centos8; ROOT installed in `/data/software/`; ROOT configured with; `cmake -DCMAKE_PREFIX_PATH=/data/software ... <root>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8708
https://github.com/root-project/root/issues/8708:1064,Integrability,depend,depends,1064,"- [ ] Checked for duplicates; Yes, kind of. I thought that there was a ticket about this by @amadio, but I didn't find anything. ## Describe the bug; In a setup where ROOT was installed in a system directory, ROOT was picking up headers from that directory instead of its own. ### How to reproduce:; 1. `echo '#error This is the wrong header' > /my/include/directory/RooSpan.h` (or a few other headers).; 2. Install some builtins into that directory, e.g. VDT; 3. `cmake -DCMAKE_PREFIX_PATH=/my/include/directory/ <root>` to create a dependency to that include directory.; 4. Build. Now ROOT should find VDT, and add a `-I/my/include/directory/` to the compile command, which will accidentally include other parts of ROOT.; The problem is that it's difficult to provoke this error using only one header:; - All core includes are prepended to every compile command, so none of the core includes will be picked up wrongly.; - Library A will always find its own includes in the correct location, because it's also prepended. The problem only becomes visible when `A` depends on `B and C`, and `B` depends on something in `/system/include/` (e.g. VDT), and `C` is *also* installed in those system includes. This generates a compile command such as:; ```; -I.../core/x -I.../core/y -I.../core/... -I.../A/include -I.../B/include -I/system/include/ -I.../C/include ...; ```; Instead of picking up `C` from ROOT's build directory, it now comes from `/system/include/`. ### Expected behavior; ROOT picks up all its own includes first, and system includes last. This can be achieved with `-isystem ...`, so every `-I ...` is searched before `-isystem ...`.; In CMake, this means:; - Using imported targets when software comes from system directories (these are implicitly system includes); - Explicitly marking some include directories `SYSTEM`. ### Setup; Centos8; ROOT installed in `/data/software/`; ROOT configured with; `cmake -DCMAKE_PREFIX_PATH=/data/software ... <root>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8708
https://github.com/root-project/root/issues/8708:1094,Integrability,depend,depends,1094,"- [ ] Checked for duplicates; Yes, kind of. I thought that there was a ticket about this by @amadio, but I didn't find anything. ## Describe the bug; In a setup where ROOT was installed in a system directory, ROOT was picking up headers from that directory instead of its own. ### How to reproduce:; 1. `echo '#error This is the wrong header' > /my/include/directory/RooSpan.h` (or a few other headers).; 2. Install some builtins into that directory, e.g. VDT; 3. `cmake -DCMAKE_PREFIX_PATH=/my/include/directory/ <root>` to create a dependency to that include directory.; 4. Build. Now ROOT should find VDT, and add a `-I/my/include/directory/` to the compile command, which will accidentally include other parts of ROOT.; The problem is that it's difficult to provoke this error using only one header:; - All core includes are prepended to every compile command, so none of the core includes will be picked up wrongly.; - Library A will always find its own includes in the correct location, because it's also prepended. The problem only becomes visible when `A` depends on `B and C`, and `B` depends on something in `/system/include/` (e.g. VDT), and `C` is *also* installed in those system includes. This generates a compile command such as:; ```; -I.../core/x -I.../core/y -I.../core/... -I.../A/include -I.../B/include -I/system/include/ -I.../C/include ...; ```; Instead of picking up `C` from ROOT's build directory, it now comes from `/system/include/`. ### Expected behavior; ROOT picks up all its own includes first, and system includes last. This can be achieved with `-isystem ...`, so every `-I ...` is searched before `-isystem ...`.; In CMake, this means:; - Using imported targets when software comes from system directories (these are implicitly system includes); - Explicitly marking some include directories `SYSTEM`. ### Setup; Centos8; ROOT installed in `/data/software/`; ROOT configured with; `cmake -DCMAKE_PREFIX_PATH=/data/software ... <root>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8708
https://github.com/root-project/root/issues/8708:1899,Modifiability,config,configured,1899,"- [ ] Checked for duplicates; Yes, kind of. I thought that there was a ticket about this by @amadio, but I didn't find anything. ## Describe the bug; In a setup where ROOT was installed in a system directory, ROOT was picking up headers from that directory instead of its own. ### How to reproduce:; 1. `echo '#error This is the wrong header' > /my/include/directory/RooSpan.h` (or a few other headers).; 2. Install some builtins into that directory, e.g. VDT; 3. `cmake -DCMAKE_PREFIX_PATH=/my/include/directory/ <root>` to create a dependency to that include directory.; 4. Build. Now ROOT should find VDT, and add a `-I/my/include/directory/` to the compile command, which will accidentally include other parts of ROOT.; The problem is that it's difficult to provoke this error using only one header:; - All core includes are prepended to every compile command, so none of the core includes will be picked up wrongly.; - Library A will always find its own includes in the correct location, because it's also prepended. The problem only becomes visible when `A` depends on `B and C`, and `B` depends on something in `/system/include/` (e.g. VDT), and `C` is *also* installed in those system includes. This generates a compile command such as:; ```; -I.../core/x -I.../core/y -I.../core/... -I.../A/include -I.../B/include -I/system/include/ -I.../C/include ...; ```; Instead of picking up `C` from ROOT's build directory, it now comes from `/system/include/`. ### Expected behavior; ROOT picks up all its own includes first, and system includes last. This can be achieved with `-isystem ...`, so every `-I ...` is searched before `-isystem ...`.; In CMake, this means:; - Using imported targets when software comes from system directories (these are implicitly system includes); - Explicitly marking some include directories `SYSTEM`. ### Setup; Centos8; ROOT installed in `/data/software/`; ROOT configured with; `cmake -DCMAKE_PREFIX_PATH=/data/software ... <root>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8708
https://github.com/root-project/root/pull/8709:178,Availability,echo,echo,178,"Partial fix of #8708.; In a setup where ROOT was installed in a system directory, ROOT was picking up headers from that directory instead of its own. . ## How to reproduce:; 1. `echo '#error This is the wrong header' > /my/include/directory/RooSpan.h` (or a few other headers).; 2. Install some builtins into that directory, e.g. VDT; 3. `cmake -DCMAKE_PREFIX_PATH=/my/include/directory/ <root>` to create a dependency to that include directory.; 4. Build. The problem only becomes visible when `A` depends on `B and C`, and `B` depends on something in `/system/include/`, and `C` is installed in those system includes as well. This generates a compile command such as:; ```; -I.../core/x -I.../core/y -I.../core/... -I.../A/include -I.../B/include -I/system/include/ -I.../C/include ...; ```. ## In this PR:; - Includes for VDT and XROOTD are fixed by making them `IMPORTED` targets, so their includes have lowest precedence.; - Some cheating where include directories are copied around between targets is removed. CMake should handle this.; - Some dependency and target management is simplified (or rather modernised with target-based cmake); - A broken dependency in RooFit is fixed, which was previously hidden by the cheating with include directories. ## What remains to be done:; It is likely that more builtins (or rather `FindXXX` have to be converted to `IMPORTED` targets, so they don't provoke this error again. A broken configuration can be detected by; 1. Having CMake pick up a dependency in some common directory; 2. Either; - Placing a lot of `#error`-ROOT headers in there or; - Searching `compile_commands.json` for `-I/my/include/directory/`; 3. Fixing the `FindXXX` for this dependency.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8709
https://github.com/root-project/root/pull/8709:185,Availability,error,error,185,"Partial fix of #8708.; In a setup where ROOT was installed in a system directory, ROOT was picking up headers from that directory instead of its own. . ## How to reproduce:; 1. `echo '#error This is the wrong header' > /my/include/directory/RooSpan.h` (or a few other headers).; 2. Install some builtins into that directory, e.g. VDT; 3. `cmake -DCMAKE_PREFIX_PATH=/my/include/directory/ <root>` to create a dependency to that include directory.; 4. Build. The problem only becomes visible when `A` depends on `B and C`, and `B` depends on something in `/system/include/`, and `C` is installed in those system includes as well. This generates a compile command such as:; ```; -I.../core/x -I.../core/y -I.../core/... -I.../A/include -I.../B/include -I/system/include/ -I.../C/include ...; ```. ## In this PR:; - Includes for VDT and XROOTD are fixed by making them `IMPORTED` targets, so their includes have lowest precedence.; - Some cheating where include directories are copied around between targets is removed. CMake should handle this.; - Some dependency and target management is simplified (or rather modernised with target-based cmake); - A broken dependency in RooFit is fixed, which was previously hidden by the cheating with include directories. ## What remains to be done:; It is likely that more builtins (or rather `FindXXX` have to be converted to `IMPORTED` targets, so they don't provoke this error again. A broken configuration can be detected by; 1. Having CMake pick up a dependency in some common directory; 2. Either; - Placing a lot of `#error`-ROOT headers in there or; - Searching `compile_commands.json` for `-I/my/include/directory/`; 3. Fixing the `FindXXX` for this dependency.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8709
https://github.com/root-project/root/pull/8709:1410,Availability,error,error,1410,"Partial fix of #8708.; In a setup where ROOT was installed in a system directory, ROOT was picking up headers from that directory instead of its own. . ## How to reproduce:; 1. `echo '#error This is the wrong header' > /my/include/directory/RooSpan.h` (or a few other headers).; 2. Install some builtins into that directory, e.g. VDT; 3. `cmake -DCMAKE_PREFIX_PATH=/my/include/directory/ <root>` to create a dependency to that include directory.; 4. Build. The problem only becomes visible when `A` depends on `B and C`, and `B` depends on something in `/system/include/`, and `C` is installed in those system includes as well. This generates a compile command such as:; ```; -I.../core/x -I.../core/y -I.../core/... -I.../A/include -I.../B/include -I/system/include/ -I.../C/include ...; ```. ## In this PR:; - Includes for VDT and XROOTD are fixed by making them `IMPORTED` targets, so their includes have lowest precedence.; - Some cheating where include directories are copied around between targets is removed. CMake should handle this.; - Some dependency and target management is simplified (or rather modernised with target-based cmake); - A broken dependency in RooFit is fixed, which was previously hidden by the cheating with include directories. ## What remains to be done:; It is likely that more builtins (or rather `FindXXX` have to be converted to `IMPORTED` targets, so they don't provoke this error again. A broken configuration can be detected by; 1. Having CMake pick up a dependency in some common directory; 2. Either; - Placing a lot of `#error`-ROOT headers in there or; - Searching `compile_commands.json` for `-I/my/include/directory/`; 3. Fixing the `FindXXX` for this dependency.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8709
https://github.com/root-project/root/pull/8709:1561,Availability,error,error,1561,"Partial fix of #8708.; In a setup where ROOT was installed in a system directory, ROOT was picking up headers from that directory instead of its own. . ## How to reproduce:; 1. `echo '#error This is the wrong header' > /my/include/directory/RooSpan.h` (or a few other headers).; 2. Install some builtins into that directory, e.g. VDT; 3. `cmake -DCMAKE_PREFIX_PATH=/my/include/directory/ <root>` to create a dependency to that include directory.; 4. Build. The problem only becomes visible when `A` depends on `B and C`, and `B` depends on something in `/system/include/`, and `C` is installed in those system includes as well. This generates a compile command such as:; ```; -I.../core/x -I.../core/y -I.../core/... -I.../A/include -I.../B/include -I/system/include/ -I.../C/include ...; ```. ## In this PR:; - Includes for VDT and XROOTD are fixed by making them `IMPORTED` targets, so their includes have lowest precedence.; - Some cheating where include directories are copied around between targets is removed. CMake should handle this.; - Some dependency and target management is simplified (or rather modernised with target-based cmake); - A broken dependency in RooFit is fixed, which was previously hidden by the cheating with include directories. ## What remains to be done:; It is likely that more builtins (or rather `FindXXX` have to be converted to `IMPORTED` targets, so they don't provoke this error again. A broken configuration can be detected by; 1. Having CMake pick up a dependency in some common directory; 2. Either; - Placing a lot of `#error`-ROOT headers in there or; - Searching `compile_commands.json` for `-I/my/include/directory/`; 3. Fixing the `FindXXX` for this dependency.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8709
https://github.com/root-project/root/pull/8709:49,Deployability,install,installed,49,"Partial fix of #8708.; In a setup where ROOT was installed in a system directory, ROOT was picking up headers from that directory instead of its own. . ## How to reproduce:; 1. `echo '#error This is the wrong header' > /my/include/directory/RooSpan.h` (or a few other headers).; 2. Install some builtins into that directory, e.g. VDT; 3. `cmake -DCMAKE_PREFIX_PATH=/my/include/directory/ <root>` to create a dependency to that include directory.; 4. Build. The problem only becomes visible when `A` depends on `B and C`, and `B` depends on something in `/system/include/`, and `C` is installed in those system includes as well. This generates a compile command such as:; ```; -I.../core/x -I.../core/y -I.../core/... -I.../A/include -I.../B/include -I/system/include/ -I.../C/include ...; ```. ## In this PR:; - Includes for VDT and XROOTD are fixed by making them `IMPORTED` targets, so their includes have lowest precedence.; - Some cheating where include directories are copied around between targets is removed. CMake should handle this.; - Some dependency and target management is simplified (or rather modernised with target-based cmake); - A broken dependency in RooFit is fixed, which was previously hidden by the cheating with include directories. ## What remains to be done:; It is likely that more builtins (or rather `FindXXX` have to be converted to `IMPORTED` targets, so they don't provoke this error again. A broken configuration can be detected by; 1. Having CMake pick up a dependency in some common directory; 2. Either; - Placing a lot of `#error`-ROOT headers in there or; - Searching `compile_commands.json` for `-I/my/include/directory/`; 3. Fixing the `FindXXX` for this dependency.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8709
https://github.com/root-project/root/pull/8709:282,Deployability,Install,Install,282,"Partial fix of #8708.; In a setup where ROOT was installed in a system directory, ROOT was picking up headers from that directory instead of its own. . ## How to reproduce:; 1. `echo '#error This is the wrong header' > /my/include/directory/RooSpan.h` (or a few other headers).; 2. Install some builtins into that directory, e.g. VDT; 3. `cmake -DCMAKE_PREFIX_PATH=/my/include/directory/ <root>` to create a dependency to that include directory.; 4. Build. The problem only becomes visible when `A` depends on `B and C`, and `B` depends on something in `/system/include/`, and `C` is installed in those system includes as well. This generates a compile command such as:; ```; -I.../core/x -I.../core/y -I.../core/... -I.../A/include -I.../B/include -I/system/include/ -I.../C/include ...; ```. ## In this PR:; - Includes for VDT and XROOTD are fixed by making them `IMPORTED` targets, so their includes have lowest precedence.; - Some cheating where include directories are copied around between targets is removed. CMake should handle this.; - Some dependency and target management is simplified (or rather modernised with target-based cmake); - A broken dependency in RooFit is fixed, which was previously hidden by the cheating with include directories. ## What remains to be done:; It is likely that more builtins (or rather `FindXXX` have to be converted to `IMPORTED` targets, so they don't provoke this error again. A broken configuration can be detected by; 1. Having CMake pick up a dependency in some common directory; 2. Either; - Placing a lot of `#error`-ROOT headers in there or; - Searching `compile_commands.json` for `-I/my/include/directory/`; 3. Fixing the `FindXXX` for this dependency.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8709
https://github.com/root-project/root/pull/8709:584,Deployability,install,installed,584,"Partial fix of #8708.; In a setup where ROOT was installed in a system directory, ROOT was picking up headers from that directory instead of its own. . ## How to reproduce:; 1. `echo '#error This is the wrong header' > /my/include/directory/RooSpan.h` (or a few other headers).; 2. Install some builtins into that directory, e.g. VDT; 3. `cmake -DCMAKE_PREFIX_PATH=/my/include/directory/ <root>` to create a dependency to that include directory.; 4. Build. The problem only becomes visible when `A` depends on `B and C`, and `B` depends on something in `/system/include/`, and `C` is installed in those system includes as well. This generates a compile command such as:; ```; -I.../core/x -I.../core/y -I.../core/... -I.../A/include -I.../B/include -I/system/include/ -I.../C/include ...; ```. ## In this PR:; - Includes for VDT and XROOTD are fixed by making them `IMPORTED` targets, so their includes have lowest precedence.; - Some cheating where include directories are copied around between targets is removed. CMake should handle this.; - Some dependency and target management is simplified (or rather modernised with target-based cmake); - A broken dependency in RooFit is fixed, which was previously hidden by the cheating with include directories. ## What remains to be done:; It is likely that more builtins (or rather `FindXXX` have to be converted to `IMPORTED` targets, so they don't provoke this error again. A broken configuration can be detected by; 1. Having CMake pick up a dependency in some common directory; 2. Either; - Placing a lot of `#error`-ROOT headers in there or; - Searching `compile_commands.json` for `-I/my/include/directory/`; 3. Fixing the `FindXXX` for this dependency.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8709
https://github.com/root-project/root/pull/8709:1432,Deployability,configurat,configuration,1432,"Partial fix of #8708.; In a setup where ROOT was installed in a system directory, ROOT was picking up headers from that directory instead of its own. . ## How to reproduce:; 1. `echo '#error This is the wrong header' > /my/include/directory/RooSpan.h` (or a few other headers).; 2. Install some builtins into that directory, e.g. VDT; 3. `cmake -DCMAKE_PREFIX_PATH=/my/include/directory/ <root>` to create a dependency to that include directory.; 4. Build. The problem only becomes visible when `A` depends on `B and C`, and `B` depends on something in `/system/include/`, and `C` is installed in those system includes as well. This generates a compile command such as:; ```; -I.../core/x -I.../core/y -I.../core/... -I.../A/include -I.../B/include -I/system/include/ -I.../C/include ...; ```. ## In this PR:; - Includes for VDT and XROOTD are fixed by making them `IMPORTED` targets, so their includes have lowest precedence.; - Some cheating where include directories are copied around between targets is removed. CMake should handle this.; - Some dependency and target management is simplified (or rather modernised with target-based cmake); - A broken dependency in RooFit is fixed, which was previously hidden by the cheating with include directories. ## What remains to be done:; It is likely that more builtins (or rather `FindXXX` have to be converted to `IMPORTED` targets, so they don't provoke this error again. A broken configuration can be detected by; 1. Having CMake pick up a dependency in some common directory; 2. Either; - Placing a lot of `#error`-ROOT headers in there or; - Searching `compile_commands.json` for `-I/my/include/directory/`; 3. Fixing the `FindXXX` for this dependency.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8709
https://github.com/root-project/root/pull/8709:408,Integrability,depend,dependency,408,"Partial fix of #8708.; In a setup where ROOT was installed in a system directory, ROOT was picking up headers from that directory instead of its own. . ## How to reproduce:; 1. `echo '#error This is the wrong header' > /my/include/directory/RooSpan.h` (or a few other headers).; 2. Install some builtins into that directory, e.g. VDT; 3. `cmake -DCMAKE_PREFIX_PATH=/my/include/directory/ <root>` to create a dependency to that include directory.; 4. Build. The problem only becomes visible when `A` depends on `B and C`, and `B` depends on something in `/system/include/`, and `C` is installed in those system includes as well. This generates a compile command such as:; ```; -I.../core/x -I.../core/y -I.../core/... -I.../A/include -I.../B/include -I/system/include/ -I.../C/include ...; ```. ## In this PR:; - Includes for VDT and XROOTD are fixed by making them `IMPORTED` targets, so their includes have lowest precedence.; - Some cheating where include directories are copied around between targets is removed. CMake should handle this.; - Some dependency and target management is simplified (or rather modernised with target-based cmake); - A broken dependency in RooFit is fixed, which was previously hidden by the cheating with include directories. ## What remains to be done:; It is likely that more builtins (or rather `FindXXX` have to be converted to `IMPORTED` targets, so they don't provoke this error again. A broken configuration can be detected by; 1. Having CMake pick up a dependency in some common directory; 2. Either; - Placing a lot of `#error`-ROOT headers in there or; - Searching `compile_commands.json` for `-I/my/include/directory/`; 3. Fixing the `FindXXX` for this dependency.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8709
https://github.com/root-project/root/pull/8709:499,Integrability,depend,depends,499,"Partial fix of #8708.; In a setup where ROOT was installed in a system directory, ROOT was picking up headers from that directory instead of its own. . ## How to reproduce:; 1. `echo '#error This is the wrong header' > /my/include/directory/RooSpan.h` (or a few other headers).; 2. Install some builtins into that directory, e.g. VDT; 3. `cmake -DCMAKE_PREFIX_PATH=/my/include/directory/ <root>` to create a dependency to that include directory.; 4. Build. The problem only becomes visible when `A` depends on `B and C`, and `B` depends on something in `/system/include/`, and `C` is installed in those system includes as well. This generates a compile command such as:; ```; -I.../core/x -I.../core/y -I.../core/... -I.../A/include -I.../B/include -I/system/include/ -I.../C/include ...; ```. ## In this PR:; - Includes for VDT and XROOTD are fixed by making them `IMPORTED` targets, so their includes have lowest precedence.; - Some cheating where include directories are copied around between targets is removed. CMake should handle this.; - Some dependency and target management is simplified (or rather modernised with target-based cmake); - A broken dependency in RooFit is fixed, which was previously hidden by the cheating with include directories. ## What remains to be done:; It is likely that more builtins (or rather `FindXXX` have to be converted to `IMPORTED` targets, so they don't provoke this error again. A broken configuration can be detected by; 1. Having CMake pick up a dependency in some common directory; 2. Either; - Placing a lot of `#error`-ROOT headers in there or; - Searching `compile_commands.json` for `-I/my/include/directory/`; 3. Fixing the `FindXXX` for this dependency.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8709
https://github.com/root-project/root/pull/8709:529,Integrability,depend,depends,529,"Partial fix of #8708.; In a setup where ROOT was installed in a system directory, ROOT was picking up headers from that directory instead of its own. . ## How to reproduce:; 1. `echo '#error This is the wrong header' > /my/include/directory/RooSpan.h` (or a few other headers).; 2. Install some builtins into that directory, e.g. VDT; 3. `cmake -DCMAKE_PREFIX_PATH=/my/include/directory/ <root>` to create a dependency to that include directory.; 4. Build. The problem only becomes visible when `A` depends on `B and C`, and `B` depends on something in `/system/include/`, and `C` is installed in those system includes as well. This generates a compile command such as:; ```; -I.../core/x -I.../core/y -I.../core/... -I.../A/include -I.../B/include -I/system/include/ -I.../C/include ...; ```. ## In this PR:; - Includes for VDT and XROOTD are fixed by making them `IMPORTED` targets, so their includes have lowest precedence.; - Some cheating where include directories are copied around between targets is removed. CMake should handle this.; - Some dependency and target management is simplified (or rather modernised with target-based cmake); - A broken dependency in RooFit is fixed, which was previously hidden by the cheating with include directories. ## What remains to be done:; It is likely that more builtins (or rather `FindXXX` have to be converted to `IMPORTED` targets, so they don't provoke this error again. A broken configuration can be detected by; 1. Having CMake pick up a dependency in some common directory; 2. Either; - Placing a lot of `#error`-ROOT headers in there or; - Searching `compile_commands.json` for `-I/my/include/directory/`; 3. Fixing the `FindXXX` for this dependency.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8709
https://github.com/root-project/root/pull/8709:1050,Integrability,depend,dependency,1050,"Partial fix of #8708.; In a setup where ROOT was installed in a system directory, ROOT was picking up headers from that directory instead of its own. . ## How to reproduce:; 1. `echo '#error This is the wrong header' > /my/include/directory/RooSpan.h` (or a few other headers).; 2. Install some builtins into that directory, e.g. VDT; 3. `cmake -DCMAKE_PREFIX_PATH=/my/include/directory/ <root>` to create a dependency to that include directory.; 4. Build. The problem only becomes visible when `A` depends on `B and C`, and `B` depends on something in `/system/include/`, and `C` is installed in those system includes as well. This generates a compile command such as:; ```; -I.../core/x -I.../core/y -I.../core/... -I.../A/include -I.../B/include -I/system/include/ -I.../C/include ...; ```. ## In this PR:; - Includes for VDT and XROOTD are fixed by making them `IMPORTED` targets, so their includes have lowest precedence.; - Some cheating where include directories are copied around between targets is removed. CMake should handle this.; - Some dependency and target management is simplified (or rather modernised with target-based cmake); - A broken dependency in RooFit is fixed, which was previously hidden by the cheating with include directories. ## What remains to be done:; It is likely that more builtins (or rather `FindXXX` have to be converted to `IMPORTED` targets, so they don't provoke this error again. A broken configuration can be detected by; 1. Having CMake pick up a dependency in some common directory; 2. Either; - Placing a lot of `#error`-ROOT headers in there or; - Searching `compile_commands.json` for `-I/my/include/directory/`; 3. Fixing the `FindXXX` for this dependency.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8709
https://github.com/root-project/root/pull/8709:1156,Integrability,depend,dependency,1156,"Partial fix of #8708.; In a setup where ROOT was installed in a system directory, ROOT was picking up headers from that directory instead of its own. . ## How to reproduce:; 1. `echo '#error This is the wrong header' > /my/include/directory/RooSpan.h` (or a few other headers).; 2. Install some builtins into that directory, e.g. VDT; 3. `cmake -DCMAKE_PREFIX_PATH=/my/include/directory/ <root>` to create a dependency to that include directory.; 4. Build. The problem only becomes visible when `A` depends on `B and C`, and `B` depends on something in `/system/include/`, and `C` is installed in those system includes as well. This generates a compile command such as:; ```; -I.../core/x -I.../core/y -I.../core/... -I.../A/include -I.../B/include -I/system/include/ -I.../C/include ...; ```. ## In this PR:; - Includes for VDT and XROOTD are fixed by making them `IMPORTED` targets, so their includes have lowest precedence.; - Some cheating where include directories are copied around between targets is removed. CMake should handle this.; - Some dependency and target management is simplified (or rather modernised with target-based cmake); - A broken dependency in RooFit is fixed, which was previously hidden by the cheating with include directories. ## What remains to be done:; It is likely that more builtins (or rather `FindXXX` have to be converted to `IMPORTED` targets, so they don't provoke this error again. A broken configuration can be detected by; 1. Having CMake pick up a dependency in some common directory; 2. Either; - Placing a lot of `#error`-ROOT headers in there or; - Searching `compile_commands.json` for `-I/my/include/directory/`; 3. Fixing the `FindXXX` for this dependency.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8709
https://github.com/root-project/root/pull/8709:1492,Integrability,depend,dependency,1492,"Partial fix of #8708.; In a setup where ROOT was installed in a system directory, ROOT was picking up headers from that directory instead of its own. . ## How to reproduce:; 1. `echo '#error This is the wrong header' > /my/include/directory/RooSpan.h` (or a few other headers).; 2. Install some builtins into that directory, e.g. VDT; 3. `cmake -DCMAKE_PREFIX_PATH=/my/include/directory/ <root>` to create a dependency to that include directory.; 4. Build. The problem only becomes visible when `A` depends on `B and C`, and `B` depends on something in `/system/include/`, and `C` is installed in those system includes as well. This generates a compile command such as:; ```; -I.../core/x -I.../core/y -I.../core/... -I.../A/include -I.../B/include -I/system/include/ -I.../C/include ...; ```. ## In this PR:; - Includes for VDT and XROOTD are fixed by making them `IMPORTED` targets, so their includes have lowest precedence.; - Some cheating where include directories are copied around between targets is removed. CMake should handle this.; - Some dependency and target management is simplified (or rather modernised with target-based cmake); - A broken dependency in RooFit is fixed, which was previously hidden by the cheating with include directories. ## What remains to be done:; It is likely that more builtins (or rather `FindXXX` have to be converted to `IMPORTED` targets, so they don't provoke this error again. A broken configuration can be detected by; 1. Having CMake pick up a dependency in some common directory; 2. Either; - Placing a lot of `#error`-ROOT headers in there or; - Searching `compile_commands.json` for `-I/my/include/directory/`; 3. Fixing the `FindXXX` for this dependency.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8709
https://github.com/root-project/root/pull/8709:1695,Integrability,depend,dependency,1695,"Partial fix of #8708.; In a setup where ROOT was installed in a system directory, ROOT was picking up headers from that directory instead of its own. . ## How to reproduce:; 1. `echo '#error This is the wrong header' > /my/include/directory/RooSpan.h` (or a few other headers).; 2. Install some builtins into that directory, e.g. VDT; 3. `cmake -DCMAKE_PREFIX_PATH=/my/include/directory/ <root>` to create a dependency to that include directory.; 4. Build. The problem only becomes visible when `A` depends on `B and C`, and `B` depends on something in `/system/include/`, and `C` is installed in those system includes as well. This generates a compile command such as:; ```; -I.../core/x -I.../core/y -I.../core/... -I.../A/include -I.../B/include -I/system/include/ -I.../C/include ...; ```. ## In this PR:; - Includes for VDT and XROOTD are fixed by making them `IMPORTED` targets, so their includes have lowest precedence.; - Some cheating where include directories are copied around between targets is removed. CMake should handle this.; - Some dependency and target management is simplified (or rather modernised with target-based cmake); - A broken dependency in RooFit is fixed, which was previously hidden by the cheating with include directories. ## What remains to be done:; It is likely that more builtins (or rather `FindXXX` have to be converted to `IMPORTED` targets, so they don't provoke this error again. A broken configuration can be detected by; 1. Having CMake pick up a dependency in some common directory; 2. Either; - Placing a lot of `#error`-ROOT headers in there or; - Searching `compile_commands.json` for `-I/my/include/directory/`; 3. Fixing the `FindXXX` for this dependency.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8709
https://github.com/root-project/root/pull/8709:1432,Modifiability,config,configuration,1432,"Partial fix of #8708.; In a setup where ROOT was installed in a system directory, ROOT was picking up headers from that directory instead of its own. . ## How to reproduce:; 1. `echo '#error This is the wrong header' > /my/include/directory/RooSpan.h` (or a few other headers).; 2. Install some builtins into that directory, e.g. VDT; 3. `cmake -DCMAKE_PREFIX_PATH=/my/include/directory/ <root>` to create a dependency to that include directory.; 4. Build. The problem only becomes visible when `A` depends on `B and C`, and `B` depends on something in `/system/include/`, and `C` is installed in those system includes as well. This generates a compile command such as:; ```; -I.../core/x -I.../core/y -I.../core/... -I.../A/include -I.../B/include -I/system/include/ -I.../C/include ...; ```. ## In this PR:; - Includes for VDT and XROOTD are fixed by making them `IMPORTED` targets, so their includes have lowest precedence.; - Some cheating where include directories are copied around between targets is removed. CMake should handle this.; - Some dependency and target management is simplified (or rather modernised with target-based cmake); - A broken dependency in RooFit is fixed, which was previously hidden by the cheating with include directories. ## What remains to be done:; It is likely that more builtins (or rather `FindXXX` have to be converted to `IMPORTED` targets, so they don't provoke this error again. A broken configuration can be detected by; 1. Having CMake pick up a dependency in some common directory; 2. Either; - Placing a lot of `#error`-ROOT headers in there or; - Searching `compile_commands.json` for `-I/my/include/directory/`; 3. Fixing the `FindXXX` for this dependency.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8709
https://github.com/root-project/root/pull/8709:1453,Safety,detect,detected,1453,"Partial fix of #8708.; In a setup where ROOT was installed in a system directory, ROOT was picking up headers from that directory instead of its own. . ## How to reproduce:; 1. `echo '#error This is the wrong header' > /my/include/directory/RooSpan.h` (or a few other headers).; 2. Install some builtins into that directory, e.g. VDT; 3. `cmake -DCMAKE_PREFIX_PATH=/my/include/directory/ <root>` to create a dependency to that include directory.; 4. Build. The problem only becomes visible when `A` depends on `B and C`, and `B` depends on something in `/system/include/`, and `C` is installed in those system includes as well. This generates a compile command such as:; ```; -I.../core/x -I.../core/y -I.../core/... -I.../A/include -I.../B/include -I/system/include/ -I.../C/include ...; ```. ## In this PR:; - Includes for VDT and XROOTD are fixed by making them `IMPORTED` targets, so their includes have lowest precedence.; - Some cheating where include directories are copied around between targets is removed. CMake should handle this.; - Some dependency and target management is simplified (or rather modernised with target-based cmake); - A broken dependency in RooFit is fixed, which was previously hidden by the cheating with include directories. ## What remains to be done:; It is likely that more builtins (or rather `FindXXX` have to be converted to `IMPORTED` targets, so they don't provoke this error again. A broken configuration can be detected by; 1. Having CMake pick up a dependency in some common directory; 2. Either; - Placing a lot of `#error`-ROOT headers in there or; - Searching `compile_commands.json` for `-I/my/include/directory/`; 3. Fixing the `FindXXX` for this dependency.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8709
https://github.com/root-project/root/pull/8709:1086,Usability,simpl,simplified,1086,"Partial fix of #8708.; In a setup where ROOT was installed in a system directory, ROOT was picking up headers from that directory instead of its own. . ## How to reproduce:; 1. `echo '#error This is the wrong header' > /my/include/directory/RooSpan.h` (or a few other headers).; 2. Install some builtins into that directory, e.g. VDT; 3. `cmake -DCMAKE_PREFIX_PATH=/my/include/directory/ <root>` to create a dependency to that include directory.; 4. Build. The problem only becomes visible when `A` depends on `B and C`, and `B` depends on something in `/system/include/`, and `C` is installed in those system includes as well. This generates a compile command such as:; ```; -I.../core/x -I.../core/y -I.../core/... -I.../A/include -I.../B/include -I/system/include/ -I.../C/include ...; ```. ## In this PR:; - Includes for VDT and XROOTD are fixed by making them `IMPORTED` targets, so their includes have lowest precedence.; - Some cheating where include directories are copied around between targets is removed. CMake should handle this.; - Some dependency and target management is simplified (or rather modernised with target-based cmake); - A broken dependency in RooFit is fixed, which was previously hidden by the cheating with include directories. ## What remains to be done:; It is likely that more builtins (or rather `FindXXX` have to be converted to `IMPORTED` targets, so they don't provoke this error again. A broken configuration can be detected by; 1. Having CMake pick up a dependency in some common directory; 2. Either; - Placing a lot of `#error`-ROOT headers in there or; - Searching `compile_commands.json` for `-I/my/include/directory/`; 3. Fixing the `FindXXX` for this dependency.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8709
https://github.com/root-project/root/issues/8711:68,Integrability,interface,interface,68,"### Explain what you would like to see improved; It would be a nice interface improvement to be able to define an RNTuple model directly in the constructor. As a result, somthing like the following would be possible:. auto ntuple = RNTupleWriter::Recreate({; RField<std::uint32_t>(""id""),; RField<std::vector<float>>(""vpx""),; RField<std::vector<float>>(""vpy""),; RField<std::vector<float>>(""vpz""); }, ""NTuple"", kNTupleFileName);. See #8688 for the full discussion.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8711
https://github.com/root-project/root/issues/8713:108,Testability,log,logic,108,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Due to the logic in `TTree::GetCacheAutoSize`, if `fAutoFlush == 0` then the size of the `TTreeCache` is set to 0 which in turn disables it. However there are separate mechanisms to disable the `TTreeCache` if desired (e.g. `TTree::SetCacheSize`) and even if `fAutoFlush == 0`, when reading over the network, we can benefit greatly from `TTreeCache`'s pre-fetching. ### Additional context; <!--; Add any other context about the problem here.; -->. - discussion and debugging: https://mattermost.web.cern.ch/root/pl/uzub3wwt3bdxxcdu4jmxxyrmby; - summary: https://mattermost.web.cern.ch/root/pl/xmtuq55j3pnc7cp7f8zyhf5ujw",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8713
https://github.com/root-project/root/issues/8713:30,Usability,clear,clear,30,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Due to the logic in `TTree::GetCacheAutoSize`, if `fAutoFlush == 0` then the size of the `TTreeCache` is set to 0 which in turn disables it. However there are separate mechanisms to disable the `TTreeCache` if desired (e.g. `TTree::SetCacheSize`) and even if `fAutoFlush == 0`, when reading over the network, we can benefit greatly from `TTreeCache`'s pre-fetching. ### Additional context; <!--; Add any other context about the problem here.; -->. - discussion and debugging: https://mattermost.web.cern.ch/root/pl/uzub3wwt3bdxxcdu4jmxxyrmby; - summary: https://mattermost.web.cern.ch/root/pl/xmtuq55j3pnc7cp7f8zyhf5ujw",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8713
https://github.com/root-project/root/pull/8714:477,Deployability,update,updated,477,"With the current logic, if for some reason fAutoFlush is set to 0; for the TTree, the TTreeCache is disabled.; That is undesirable: we still can and want to do pre-fetching even; if auto-flushing was turned off when writing the TTree. Other more direct methods to turn off the TTreeCache still work,; e.g. tree->SetCacheSize(0). ## Checklist:. - [x] tested changes locally (complicated because of https://github.com/root-project/root/issues/7366 , but seems mostly ok) ; - [ ] updated the docs (@pcanal let me know if there are docs to update); - [x] could we set the cachesize to a better value than the autoflush default of ~30MB?. This PR fixes #8713 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8714
https://github.com/root-project/root/pull/8714:536,Deployability,update,update,536,"With the current logic, if for some reason fAutoFlush is set to 0; for the TTree, the TTreeCache is disabled.; That is undesirable: we still can and want to do pre-fetching even; if auto-flushing was turned off when writing the TTree. Other more direct methods to turn off the TTreeCache still work,; e.g. tree->SetCacheSize(0). ## Checklist:. - [x] tested changes locally (complicated because of https://github.com/root-project/root/issues/7366 , but seems mostly ok) ; - [ ] updated the docs (@pcanal let me know if there are docs to update); - [x] could we set the cachesize to a better value than the autoflush default of ~30MB?. This PR fixes #8713 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8714
https://github.com/root-project/root/pull/8714:568,Performance,cache,cachesize,568,"With the current logic, if for some reason fAutoFlush is set to 0; for the TTree, the TTreeCache is disabled.; That is undesirable: we still can and want to do pre-fetching even; if auto-flushing was turned off when writing the TTree. Other more direct methods to turn off the TTreeCache still work,; e.g. tree->SetCacheSize(0). ## Checklist:. - [x] tested changes locally (complicated because of https://github.com/root-project/root/issues/7366 , but seems mostly ok) ; - [ ] updated the docs (@pcanal let me know if there are docs to update); - [x] could we set the cachesize to a better value than the autoflush default of ~30MB?. This PR fixes #8713 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8714
https://github.com/root-project/root/pull/8714:17,Testability,log,logic,17,"With the current logic, if for some reason fAutoFlush is set to 0; for the TTree, the TTreeCache is disabled.; That is undesirable: we still can and want to do pre-fetching even; if auto-flushing was turned off when writing the TTree. Other more direct methods to turn off the TTreeCache still work,; e.g. tree->SetCacheSize(0). ## Checklist:. - [x] tested changes locally (complicated because of https://github.com/root-project/root/issues/7366 , but seems mostly ok) ; - [ ] updated the docs (@pcanal let me know if there are docs to update); - [x] could we set the cachesize to a better value than the autoflush default of ~30MB?. This PR fixes #8713 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8714
https://github.com/root-project/root/pull/8714:350,Testability,test,tested,350,"With the current logic, if for some reason fAutoFlush is set to 0; for the TTree, the TTreeCache is disabled.; That is undesirable: we still can and want to do pre-fetching even; if auto-flushing was turned off when writing the TTree. Other more direct methods to turn off the TTreeCache still work,; e.g. tree->SetCacheSize(0). ## Checklist:. - [x] tested changes locally (complicated because of https://github.com/root-project/root/issues/7366 , but seems mostly ok) ; - [ ] updated the docs (@pcanal let me know if there are docs to update); - [x] could we set the cachesize to a better value than the autoflush default of ~30MB?. This PR fixes #8713 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8714
https://github.com/root-project/root/pull/8715:92,Performance,queue,queue,92,"# This Pull request:; As a follow-up from #8688, this is a sketch of a thread-safe, bounded queue that could be used as a channel to transfer work items between consumer and producer threads. Opened as draft to solicit input if such a class would be a useful addition to the ROOT internal infrastructure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8715
https://github.com/root-project/root/pull/8715:78,Safety,safe,safe,78,"# This Pull request:; As a follow-up from #8688, this is a sketch of a thread-safe, bounded queue that could be used as a channel to transfer work items between consumer and producer threads. Opened as draft to solicit input if such a class would be a useful addition to the ROOT internal infrastructure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8715
https://github.com/root-project/root/issues/8716:5,Deployability,patch,patch,5,"This patch; https://github.com/root-project/root/commit/ae9f8ae62553f9150fdee1f8739be6996d539694; had an unintended side-effect. The code to check the external gradient against the numerical gradient when `CheckGradient()` returns `true` is now never executed. Whether the user provides an analytical gradient or not, only this implementation is called; https://github.com/root-project/root/blob/master/math/minuit2/src/MnSeedGenerator.cxx#L42; while the other implementation is now never executed; https://github.com/root-project/root/blob/master/math/minuit2/src/MnSeedGenerator.cxx#L103. I suggest to revert https://github.com/root-project/root/commit/ae9f8ae62553f9150fdee1f8739be6996d539694, because it also confused iminuit users, see https://github.com/scikit-hep/iminuit/issues/644. People usually use the analytical gradient only when the calculation of the likelihood is extremely expensive, and then it is undesired that some gradients are still computed numerically.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8716
https://github.com/root-project/root/pull/8717:349,Availability,failure,failures,349,"@vgvassilev, here is the PR so solve the LLVM library conflicts when interfacing ROOT with Julia. I've limited the change to the interpreter package. I have 25 out of the 2140 tests that fail. It's likely to be due to my local environment. If it can easily be tested with the jenkins system, it will be faster that me trying to investigate the test failures. . Note. The parallel compilation is not working properly, independently of my changes: it fails many times and need to be restarted or build some package in single process mode. Is it a know problem ?. # This Pull request:. ## Changes or fixes:. Adds -Bsymbolic linker option for libCling.so in order get the symbols resolved internally; ; This is expected to solve conflicts when interfacing with other software using LLVM, like Julia. See https://github.com/JuliaHEP/ROOT.jl/issues/17#issuecomment-882719292. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8717
https://github.com/root-project/root/pull/8717:921,Deployability,update,updated,921,"@vgvassilev, here is the PR so solve the LLVM library conflicts when interfacing ROOT with Julia. I've limited the change to the interpreter package. I have 25 out of the 2140 tests that fail. It's likely to be due to my local environment. If it can easily be tested with the jenkins system, it will be faster that me trying to investigate the test failures. . Note. The parallel compilation is not working properly, independently of my changes: it fails many times and need to be restarted or build some package in single process mode. Is it a know problem ?. # This Pull request:. ## Changes or fixes:. Adds -Bsymbolic linker option for libCling.so in order get the symbols resolved internally; ; This is expected to solve conflicts when interfacing with other software using LLVM, like Julia. See https://github.com/JuliaHEP/ROOT.jl/issues/17#issuecomment-882719292. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8717
https://github.com/root-project/root/pull/8717:176,Testability,test,tests,176,"@vgvassilev, here is the PR so solve the LLVM library conflicts when interfacing ROOT with Julia. I've limited the change to the interpreter package. I have 25 out of the 2140 tests that fail. It's likely to be due to my local environment. If it can easily be tested with the jenkins system, it will be faster that me trying to investigate the test failures. . Note. The parallel compilation is not working properly, independently of my changes: it fails many times and need to be restarted or build some package in single process mode. Is it a know problem ?. # This Pull request:. ## Changes or fixes:. Adds -Bsymbolic linker option for libCling.so in order get the symbols resolved internally; ; This is expected to solve conflicts when interfacing with other software using LLVM, like Julia. See https://github.com/JuliaHEP/ROOT.jl/issues/17#issuecomment-882719292. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8717
https://github.com/root-project/root/pull/8717:260,Testability,test,tested,260,"@vgvassilev, here is the PR so solve the LLVM library conflicts when interfacing ROOT with Julia. I've limited the change to the interpreter package. I have 25 out of the 2140 tests that fail. It's likely to be due to my local environment. If it can easily be tested with the jenkins system, it will be faster that me trying to investigate the test failures. . Note. The parallel compilation is not working properly, independently of my changes: it fails many times and need to be restarted or build some package in single process mode. Is it a know problem ?. # This Pull request:. ## Changes or fixes:. Adds -Bsymbolic linker option for libCling.so in order get the symbols resolved internally; ; This is expected to solve conflicts when interfacing with other software using LLVM, like Julia. See https://github.com/JuliaHEP/ROOT.jl/issues/17#issuecomment-882719292. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8717
https://github.com/root-project/root/pull/8717:344,Testability,test,test,344,"@vgvassilev, here is the PR so solve the LLVM library conflicts when interfacing ROOT with Julia. I've limited the change to the interpreter package. I have 25 out of the 2140 tests that fail. It's likely to be due to my local environment. If it can easily be tested with the jenkins system, it will be faster that me trying to investigate the test failures. . Note. The parallel compilation is not working properly, independently of my changes: it fails many times and need to be restarted or build some package in single process mode. Is it a know problem ?. # This Pull request:. ## Changes or fixes:. Adds -Bsymbolic linker option for libCling.so in order get the symbols resolved internally; ; This is expected to solve conflicts when interfacing with other software using LLVM, like Julia. See https://github.com/JuliaHEP/ROOT.jl/issues/17#issuecomment-882719292. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8717
https://github.com/root-project/root/pull/8717:891,Testability,test,tested,891,"@vgvassilev, here is the PR so solve the LLVM library conflicts when interfacing ROOT with Julia. I've limited the change to the interpreter package. I have 25 out of the 2140 tests that fail. It's likely to be due to my local environment. If it can easily be tested with the jenkins system, it will be faster that me trying to investigate the test failures. . Note. The parallel compilation is not working properly, independently of my changes: it fails many times and need to be restarted or build some package in single process mode. Is it a know problem ?. # This Pull request:. ## Changes or fixes:. Adds -Bsymbolic linker option for libCling.so in order get the symbols resolved internally; ; This is expected to solve conflicts when interfacing with other software using LLVM, like Julia. See https://github.com/JuliaHEP/ROOT.jl/issues/17#issuecomment-882719292. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8717
https://github.com/root-project/root/pull/8718:164,Deployability,update,updated,164,# This Pull request:. ## Changes or fixes:. Adds a tutorial demoing how the hist->GetMaximumBin() can be used. . ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8718
https://github.com/root-project/root/pull/8718:134,Testability,test,tested,134,# This Pull request:. ## Changes or fixes:. Adds a tutorial demoing how the hist->GetMaximumBin() can be used. . ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8718
https://github.com/root-project/root/pull/8719:153,Deployability,update,updated,153,# This Pull request:. ## Changes or fixes:. Adds the Kronecker Delta function used widely in Physics. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8719
https://github.com/root-project/root/pull/8719:123,Testability,test,tested,123,# This Pull request:. ## Changes or fixes:. Adds the Kronecker Delta function used widely in Physics. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8719
https://github.com/root-project/root/issues/8720:243,Performance,Load,LoadTree,243,- [X] Checked for duplicates. ### Describe the bug; Setting `TChain::SetImplicitMT()` does not apply the setting to the underlying trees. ### Expected behavior; A call to `TChain::SetImplicitMT()` should influence current and future (`TChain::LoadTree`) backing trees. ### Additional context; Discussed in the I/O MM channel.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8720
https://github.com/root-project/root/issues/8721:94,Testability,test,testvec,94,"Hi,; the following code is crashing when Branching more than 10 arrays to the tree:. ```; int testvec() {; 	TTree *t = new TTree(""tree"",""tree"");; 	const int n = 92000;; 	unsigned int myN = n;; 	float arr1[n];; 	float arr2[n];; 	float arr3[n];; 	float arr4[n];; 	float arr5[n];; 	float arr6[n];; 	float arr7[n];; 	float arr8[n];; 	float arr9[n];; 	float arr10[n];; 	float arr11[n];; 	; 	t->Branch(""n"",&myN);; 	; 	t->Branch(""arr1"",arr1,""arr1[n]"");; 	t->Branch(""arr2"",arr2,""arr2[n]"");; 	t->Branch(""arr3"",arr3,""arr3[n]"");; 	t->Branch(""arr4"",arr4,""arr4[n]"");; 	t->Branch(""arr5"",arr5,""arr5[n]"");; 	t->Branch(""arr6"",arr6,""arr6[n]"");; 	t->Branch(""arr7"",arr7,""arr7[n]"");; 	t->Branch(""arr8"",arr8,""arr8[n]"");; 	t->Branch(""arr9"",arr9,""arr9[n]"");; 	t->Branch(""arr10"",arr10,""arr10[n]"");; 	t->Branch(""arr11"",arr11,""arr11[n]""); // Removing this line and the code will work. 	return 0;; }; ```. using a smaller ""n"" works, too. Using less than ten arrays works. Makes no difference to use arr[n] or arr[100000]. ; Is there a maximum number of allowed references by a tree??. I'm using 6.22/02 on windows64 bit. Georg",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8721
https://github.com/root-project/root/pull/8722:397,Deployability,update,updated,397,"This PR is related to https://github.com/root-project/root/issues/8707. ROOT_ADD_TEST now takes FIXTURES_SETUP, FIXTURES_CLEANUP and; FIXTURES_REQUIRED arguments (lists). also add RESOURCE_LOCK to prevent parallel execution of a test; takes a single lock name. n.b: fixtures and resource lock namespaces are each different from; test namespaces. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (in the file)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8722
https://github.com/root-project/root/pull/8722:229,Testability,test,test,229,"This PR is related to https://github.com/root-project/root/issues/8707. ROOT_ADD_TEST now takes FIXTURES_SETUP, FIXTURES_CLEANUP and; FIXTURES_REQUIRED arguments (lists). also add RESOURCE_LOCK to prevent parallel execution of a test; takes a single lock name. n.b: fixtures and resource lock namespaces are each different from; test namespaces. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (in the file)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8722
https://github.com/root-project/root/pull/8722:329,Testability,test,test,329,"This PR is related to https://github.com/root-project/root/issues/8707. ROOT_ADD_TEST now takes FIXTURES_SETUP, FIXTURES_CLEANUP and; FIXTURES_REQUIRED arguments (lists). also add RESOURCE_LOCK to prevent parallel execution of a test; takes a single lock name. n.b: fixtures and resource lock namespaces are each different from; test namespaces. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (in the file)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8722
https://github.com/root-project/root/pull/8722:367,Testability,test,tested,367,"This PR is related to https://github.com/root-project/root/issues/8707. ROOT_ADD_TEST now takes FIXTURES_SETUP, FIXTURES_CLEANUP and; FIXTURES_REQUIRED arguments (lists). also add RESOURCE_LOCK to prevent parallel execution of a test; takes a single lock name. n.b: fixtures and resource lock namespaces are each different from; test namespaces. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (in the file)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8722
https://github.com/root-project/root/pull/8723:20,Modifiability,Variab,Variable,20,Implementation of a Variable Plotter for RNode and RTensor inputs.; See [PR 4211](https://github.com/root-project/root/pull/4211) for a first attempt / inspiration. . ## Changes or fixes:. Created main class: ; * /tmva/tmvagui/src/RVariablePlotter.cxx; * /tmva/tmvagui/inc/RVariablePlotter.hxx. Created six tutorials: ; * /tutorials/tmva/tmva005_RVariablePlotter.C ; * /tutorials/tmva/tmva006_RVariablePlotter_RTensor.C ; * /tutorials/tmva/tmva007_RVariablePlotter_Higgs_Output.C; * /tutorials/tmva/tmva008_RVariablePlotter_RTensor_Output.C; * /tutorials/tmva/tmva009_RVariablePlotter_Higgs_ROC.C; * /tutorials/tmva/tmva010_RVariablePlotter_Higgs_MultiROC.C. ## Checklist:. - [ ✅] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8723
https://github.com/root-project/root/pull/8723:681,Testability,test,tested,681,Implementation of a Variable Plotter for RNode and RTensor inputs.; See [PR 4211](https://github.com/root-project/root/pull/4211) for a first attempt / inspiration. . ## Changes or fixes:. Created main class: ; * /tmva/tmvagui/src/RVariablePlotter.cxx; * /tmva/tmvagui/inc/RVariablePlotter.hxx. Created six tutorials: ; * /tutorials/tmva/tmva005_RVariablePlotter.C ; * /tutorials/tmva/tmva006_RVariablePlotter_RTensor.C ; * /tutorials/tmva/tmva007_RVariablePlotter_Higgs_Output.C; * /tutorials/tmva/tmva008_RVariablePlotter_RTensor_Output.C; * /tutorials/tmva/tmva009_RVariablePlotter_Higgs_ROC.C; * /tutorials/tmva/tmva010_RVariablePlotter_Higgs_MultiROC.C. ## Checklist:. - [ ✅] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8723
https://github.com/root-project/root/pull/8724:6,Testability,log,logic,6,Wrong logic ended up returning fFieldZero instead of nullptr.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8724
https://github.com/root-project/root/pull/8725:340,Testability,test,tested,340,"# This Pull request:; This is for not losing the path of the input filename after getting its filename without its path. This allows the parser to read files in any directory (previously, only models in the current working directory could be parsed). ## Changed files:; - /tmva/sofie_parsers/src/RModelParser_ONNX.cxx. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8725
https://github.com/root-project/root/pull/8726:162,Deployability,update,updated,162,# This Pull request:. ## Changes or fixes:. Makes the descriptions for TH1::GetMaximum etc more descriptive. . ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8726
https://github.com/root-project/root/pull/8726:132,Testability,test,tested,132,# This Pull request:. ## Changes or fixes:. Makes the descriptions for TH1::GetMaximum etc more descriptive. . ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8726
https://github.com/root-project/root/pull/8729:26,Integrability,message,messages,26,See the individual commit messages.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8729
https://github.com/root-project/root/pull/8732:65,Deployability,install,install,65,# This Pull request:. ## Changes or fixes:. Changes the builtins install location to ${CMAKE_INSTALL_PREFIX}/include/ROOT_builtins}. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #8655,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8732
https://github.com/root-project/root/pull/8732:184,Deployability,update,updated,184,# This Pull request:. ## Changes or fixes:. Changes the builtins install location to ${CMAKE_INSTALL_PREFIX}/include/ROOT_builtins}. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #8655,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8732
https://github.com/root-project/root/pull/8732:154,Testability,test,tested,154,# This Pull request:. ## Changes or fixes:. Changes the builtins install location to ${CMAKE_INSTALL_PREFIX}/include/ROOT_builtins}. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #8655,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8732
https://github.com/root-project/root/issues/8735:638,Modifiability,variab,variable,638,"### Is your feature request related to a problem? Please describe.; <!--; A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]""; -->. Getting the derivative of a TF1 is not that simple. It's a common thing so it should be simple. . ### Describe the solution you'd like; <!--; A clear and concise description of what you want to happen.; -->; At the moment it's not that simple to get the derivative of a TF1. There is a method to determine the derivative at a point but it would be nice if you could; - get the derivative of the whole function; - get the derivative with respect to any variable (d/dx, d/dy, d/dz ...) not just x.; ### Describe alternatives you've considered; <!--; Can you think of alternative solutions or features?; -->; I read that there is a Derivator but it doesn't seem that easy to use. If a TF1 derivative method is not added, maybe the Derivator docs could be improved/tutorials made. REASONING:. There are a lot of cool math functions that I would like to add and they rely on partial derivatives with respect to different variables and at the moment they are near impossible to make.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8735
https://github.com/root-project/root/issues/8735:1102,Modifiability,variab,variables,1102,"### Is your feature request related to a problem? Please describe.; <!--; A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]""; -->. Getting the derivative of a TF1 is not that simple. It's a common thing so it should be simple. . ### Describe the solution you'd like; <!--; A clear and concise description of what you want to happen.; -->; At the moment it's not that simple to get the derivative of a TF1. There is a method to determine the derivative at a point but it would be nice if you could; - get the derivative of the whole function; - get the derivative with respect to any variable (d/dx, d/dy, d/dz ...) not just x.; ### Describe alternatives you've considered; <!--; Can you think of alternative solutions or features?; -->; I read that there is a Derivator but it doesn't seem that easy to use. If a TF1 derivative method is not added, maybe the Derivator docs could be improved/tutorials made. REASONING:. There are a lot of cool math functions that I would like to add and they rely on partial derivatives with respect to different variables and at the moment they are near impossible to make.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8735
https://github.com/root-project/root/issues/8735:76,Usability,clear,clear,76,"### Is your feature request related to a problem? Please describe.; <!--; A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]""; -->. Getting the derivative of a TF1 is not that simple. It's a common thing so it should be simple. . ### Describe the solution you'd like; <!--; A clear and concise description of what you want to happen.; -->; At the moment it's not that simple to get the derivative of a TF1. There is a method to determine the derivative at a point but it would be nice if you could; - get the derivative of the whole function; - get the derivative with respect to any variable (d/dx, d/dy, d/dz ...) not just x.; ### Describe alternatives you've considered; <!--; Can you think of alternative solutions or features?; -->; I read that there is a Derivator but it doesn't seem that easy to use. If a TF1 derivative method is not added, maybe the Derivator docs could be improved/tutorials made. REASONING:. There are a lot of cool math functions that I would like to add and they rely on partial derivatives with respect to different variables and at the moment they are near impossible to make.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8735
https://github.com/root-project/root/issues/8735:230,Usability,simpl,simple,230,"### Is your feature request related to a problem? Please describe.; <!--; A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]""; -->. Getting the derivative of a TF1 is not that simple. It's a common thing so it should be simple. . ### Describe the solution you'd like; <!--; A clear and concise description of what you want to happen.; -->; At the moment it's not that simple to get the derivative of a TF1. There is a method to determine the derivative at a point but it would be nice if you could; - get the derivative of the whole function; - get the derivative with respect to any variable (d/dx, d/dy, d/dz ...) not just x.; ### Describe alternatives you've considered; <!--; Can you think of alternative solutions or features?; -->; I read that there is a Derivator but it doesn't seem that easy to use. If a TF1 derivative method is not added, maybe the Derivator docs could be improved/tutorials made. REASONING:. There are a lot of cool math functions that I would like to add and they rely on partial derivatives with respect to different variables and at the moment they are near impossible to make.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8735
https://github.com/root-project/root/issues/8735:274,Usability,simpl,simple,274,"### Is your feature request related to a problem? Please describe.; <!--; A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]""; -->. Getting the derivative of a TF1 is not that simple. It's a common thing so it should be simple. . ### Describe the solution you'd like; <!--; A clear and concise description of what you want to happen.; -->; At the moment it's not that simple to get the derivative of a TF1. There is a method to determine the derivative at a point but it would be nice if you could; - get the derivative of the whole function; - get the derivative with respect to any variable (d/dx, d/dy, d/dz ...) not just x.; ### Describe alternatives you've considered; <!--; Can you think of alternative solutions or features?; -->; I read that there is a Derivator but it doesn't seem that easy to use. If a TF1 derivative method is not added, maybe the Derivator docs could be improved/tutorials made. REASONING:. There are a lot of cool math functions that I would like to add and they rely on partial derivatives with respect to different variables and at the moment they are near impossible to make.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8735
https://github.com/root-project/root/issues/8735:330,Usability,clear,clear,330,"### Is your feature request related to a problem? Please describe.; <!--; A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]""; -->. Getting the derivative of a TF1 is not that simple. It's a common thing so it should be simple. . ### Describe the solution you'd like; <!--; A clear and concise description of what you want to happen.; -->; At the moment it's not that simple to get the derivative of a TF1. There is a method to determine the derivative at a point but it would be nice if you could; - get the derivative of the whole function; - get the derivative with respect to any variable (d/dx, d/dy, d/dz ...) not just x.; ### Describe alternatives you've considered; <!--; Can you think of alternative solutions or features?; -->; I read that there is a Derivator but it doesn't seem that easy to use. If a TF1 derivative method is not added, maybe the Derivator docs could be improved/tutorials made. REASONING:. There are a lot of cool math functions that I would like to add and they rely on partial derivatives with respect to different variables and at the moment they are near impossible to make.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8735
https://github.com/root-project/root/issues/8735:422,Usability,simpl,simple,422,"### Is your feature request related to a problem? Please describe.; <!--; A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]""; -->. Getting the derivative of a TF1 is not that simple. It's a common thing so it should be simple. . ### Describe the solution you'd like; <!--; A clear and concise description of what you want to happen.; -->; At the moment it's not that simple to get the derivative of a TF1. There is a method to determine the derivative at a point but it would be nice if you could; - get the derivative of the whole function; - get the derivative with respect to any variable (d/dx, d/dy, d/dz ...) not just x.; ### Describe alternatives you've considered; <!--; Can you think of alternative solutions or features?; -->; I read that there is a Derivator but it doesn't seem that easy to use. If a TF1 derivative method is not added, maybe the Derivator docs could be improved/tutorials made. REASONING:. There are a lot of cool math functions that I would like to add and they rely on partial derivatives with respect to different variables and at the moment they are near impossible to make.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8735
https://github.com/root-project/root/pull/8737:62,Availability,error,error,62,"This PR enables cling diagnostics to be reported via the ROOT error handler, as required by the experiments. Independently, this error handler may be changed by the user (see `TError.h`), e.g. ```; root [0] int f() { return; }; ROOT_prompt_0:1:11: non-void function 'f' should return a value [-Wreturn-type]; int f() { return; }; ^. root [1] gInterpreter->ReportDiagnosticsToErrorHandler();; root [2] int f() { return; }; Error in <cling>: ROOT_prompt_2:1:11: non-void function 'f' should return a value [-Wreturn-type]; int f() { return; }; ^; root [3] // Note the previous error is reported through the default ROOT error handler.; ```; ## Changes in this PR; - Required changes to `FilteringDiagConsumer` (in IncrementalParser.cpp). ; - Two member functions have been added to the `Interpreter` class:; - `void replaceDiagnosticConsumer(clang::DiagnosticConsumer* Consumer, bool Own)`: replaces the default CIFactory-provided diagnostic consumer.; - `bool hasReplacedDiagnosticConsumer()`: returns whether the default diagnostic consumer has been replaced.; - Added `void TCling::ReportDiagnosticsToErrorHandler(bool enable)` member function. This PR closes JIRA issue [ROOT-7587](https://sft.its.cern.ch/jira/browse/ROOT-7587). Link to sibling PR in `roottest` repository: https://github.com/root-project/roottest/pull/761.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8737
https://github.com/root-project/root/pull/8737:129,Availability,error,error,129,"This PR enables cling diagnostics to be reported via the ROOT error handler, as required by the experiments. Independently, this error handler may be changed by the user (see `TError.h`), e.g. ```; root [0] int f() { return; }; ROOT_prompt_0:1:11: non-void function 'f' should return a value [-Wreturn-type]; int f() { return; }; ^. root [1] gInterpreter->ReportDiagnosticsToErrorHandler();; root [2] int f() { return; }; Error in <cling>: ROOT_prompt_2:1:11: non-void function 'f' should return a value [-Wreturn-type]; int f() { return; }; ^; root [3] // Note the previous error is reported through the default ROOT error handler.; ```; ## Changes in this PR; - Required changes to `FilteringDiagConsumer` (in IncrementalParser.cpp). ; - Two member functions have been added to the `Interpreter` class:; - `void replaceDiagnosticConsumer(clang::DiagnosticConsumer* Consumer, bool Own)`: replaces the default CIFactory-provided diagnostic consumer.; - `bool hasReplacedDiagnosticConsumer()`: returns whether the default diagnostic consumer has been replaced.; - Added `void TCling::ReportDiagnosticsToErrorHandler(bool enable)` member function. This PR closes JIRA issue [ROOT-7587](https://sft.its.cern.ch/jira/browse/ROOT-7587). Link to sibling PR in `roottest` repository: https://github.com/root-project/roottest/pull/761.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8737
https://github.com/root-project/root/pull/8737:422,Availability,Error,Error,422,"This PR enables cling diagnostics to be reported via the ROOT error handler, as required by the experiments. Independently, this error handler may be changed by the user (see `TError.h`), e.g. ```; root [0] int f() { return; }; ROOT_prompt_0:1:11: non-void function 'f' should return a value [-Wreturn-type]; int f() { return; }; ^. root [1] gInterpreter->ReportDiagnosticsToErrorHandler();; root [2] int f() { return; }; Error in <cling>: ROOT_prompt_2:1:11: non-void function 'f' should return a value [-Wreturn-type]; int f() { return; }; ^; root [3] // Note the previous error is reported through the default ROOT error handler.; ```; ## Changes in this PR; - Required changes to `FilteringDiagConsumer` (in IncrementalParser.cpp). ; - Two member functions have been added to the `Interpreter` class:; - `void replaceDiagnosticConsumer(clang::DiagnosticConsumer* Consumer, bool Own)`: replaces the default CIFactory-provided diagnostic consumer.; - `bool hasReplacedDiagnosticConsumer()`: returns whether the default diagnostic consumer has been replaced.; - Added `void TCling::ReportDiagnosticsToErrorHandler(bool enable)` member function. This PR closes JIRA issue [ROOT-7587](https://sft.its.cern.ch/jira/browse/ROOT-7587). Link to sibling PR in `roottest` repository: https://github.com/root-project/roottest/pull/761.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8737
https://github.com/root-project/root/pull/8737:575,Availability,error,error,575,"This PR enables cling diagnostics to be reported via the ROOT error handler, as required by the experiments. Independently, this error handler may be changed by the user (see `TError.h`), e.g. ```; root [0] int f() { return; }; ROOT_prompt_0:1:11: non-void function 'f' should return a value [-Wreturn-type]; int f() { return; }; ^. root [1] gInterpreter->ReportDiagnosticsToErrorHandler();; root [2] int f() { return; }; Error in <cling>: ROOT_prompt_2:1:11: non-void function 'f' should return a value [-Wreturn-type]; int f() { return; }; ^; root [3] // Note the previous error is reported through the default ROOT error handler.; ```; ## Changes in this PR; - Required changes to `FilteringDiagConsumer` (in IncrementalParser.cpp). ; - Two member functions have been added to the `Interpreter` class:; - `void replaceDiagnosticConsumer(clang::DiagnosticConsumer* Consumer, bool Own)`: replaces the default CIFactory-provided diagnostic consumer.; - `bool hasReplacedDiagnosticConsumer()`: returns whether the default diagnostic consumer has been replaced.; - Added `void TCling::ReportDiagnosticsToErrorHandler(bool enable)` member function. This PR closes JIRA issue [ROOT-7587](https://sft.its.cern.ch/jira/browse/ROOT-7587). Link to sibling PR in `roottest` repository: https://github.com/root-project/roottest/pull/761.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8737
https://github.com/root-project/root/pull/8737:618,Availability,error,error,618,"This PR enables cling diagnostics to be reported via the ROOT error handler, as required by the experiments. Independently, this error handler may be changed by the user (see `TError.h`), e.g. ```; root [0] int f() { return; }; ROOT_prompt_0:1:11: non-void function 'f' should return a value [-Wreturn-type]; int f() { return; }; ^. root [1] gInterpreter->ReportDiagnosticsToErrorHandler();; root [2] int f() { return; }; Error in <cling>: ROOT_prompt_2:1:11: non-void function 'f' should return a value [-Wreturn-type]; int f() { return; }; ^; root [3] // Note the previous error is reported through the default ROOT error handler.; ```; ## Changes in this PR; - Required changes to `FilteringDiagConsumer` (in IncrementalParser.cpp). ; - Two member functions have been added to the `Interpreter` class:; - `void replaceDiagnosticConsumer(clang::DiagnosticConsumer* Consumer, bool Own)`: replaces the default CIFactory-provided diagnostic consumer.; - `bool hasReplacedDiagnosticConsumer()`: returns whether the default diagnostic consumer has been replaced.; - Added `void TCling::ReportDiagnosticsToErrorHandler(bool enable)` member function. This PR closes JIRA issue [ROOT-7587](https://sft.its.cern.ch/jira/browse/ROOT-7587). Link to sibling PR in `roottest` repository: https://github.com/root-project/roottest/pull/761.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8737
https://github.com/root-project/root/pull/8738:166,Availability,avail,available,166,# This Pull request:. ## Changes or fixes:; The documentation of the VisualizeError command in RooAbsPdf::plotOn and RooAbsReal::plotOn. This command has two methods available which are explained in the code comments in roofit tutorial 610 but not in the class reference online. I copied a brief description from the tutorial.; No changes are made to the function of the code. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8738
https://github.com/root-project/root/pull/8738:428,Deployability,update,updated,428,# This Pull request:. ## Changes or fixes:; The documentation of the VisualizeError command in RooAbsPdf::plotOn and RooAbsReal::plotOn. This command has two methods available which are explained in the code comments in roofit tutorial 610 but not in the class reference online. I copied a brief description from the tutorial.; No changes are made to the function of the code. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8738
https://github.com/root-project/root/pull/8738:398,Testability,test,tested,398,# This Pull request:. ## Changes or fixes:; The documentation of the VisualizeError command in RooAbsPdf::plotOn and RooAbsReal::plotOn. This command has two methods available which are explained in the code comments in roofit tutorial 610 but not in the class reference online. I copied a brief description from the tutorial.; No changes are made to the function of the code. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8738
https://github.com/root-project/root/issues/8739:348,Availability,Error,Error,348,"Reproducer:. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <iostream>. int main() {; ROOT::RDataFrame(10); .Define(""x"", [] { return 42; }); .Snapshot<int>(""t"", ""thefile"", {""x""});; std::cout << ""done writing\n"";. ROOT::EnableImplicitMT();; ROOT::RDataFrame(""t"", ""thefile"").Max<int>(""x"").GetValue();. return 0;; }. ```. prints. ```; done writing; Error in <TFile::TFile>: file /tmp/thefile/t does not exist; Warning in <TTreeReader::SetEntryBase()>: There was an issue opening the last file associated to the TChain being processed.; ```. This is likely due to logic in `TChain::AddFile` that expects a `.root` extension to be present in order to distinguish `/path/to/file.root/treename` from just `/path/to/file.root` (over the network or via xrootd it's difficult/expensive to figure out which case we are in otherwise). ### Additional context; <!--; Add any other context about the problem here.; -->. First reported at https://root-forum.cern.ch/t/getting-value-from-tbranch-is-extremely-slow/45950",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8739
https://github.com/root-project/root/issues/8739:562,Testability,log,logic,562,"Reproducer:. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <iostream>. int main() {; ROOT::RDataFrame(10); .Define(""x"", [] { return 42; }); .Snapshot<int>(""t"", ""thefile"", {""x""});; std::cout << ""done writing\n"";. ROOT::EnableImplicitMT();; ROOT::RDataFrame(""t"", ""thefile"").Max<int>(""x"").GetValue();. return 0;; }. ```. prints. ```; done writing; Error in <TFile::TFile>: file /tmp/thefile/t does not exist; Warning in <TTreeReader::SetEntryBase()>: There was an issue opening the last file associated to the TChain being processed.; ```. This is likely due to logic in `TChain::AddFile` that expects a `.root` extension to be present in order to distinguish `/path/to/file.root/treename` from just `/path/to/file.root` (over the network or via xrootd it's difficult/expensive to figure out which case we are in otherwise). ### Additional context; <!--; Add any other context about the problem here.; -->. First reported at https://root-forum.cern.ch/t/getting-value-from-tbranch-is-extremely-slow/45950",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8739
https://github.com/root-project/root/pull/8740:422,Integrability,interface,interface,422,"Add a utility function to call `TEntryList::Enter` with entries in a certain range, instead of having to do the loop manually. Especially useful in PyROOT to avoid doing the same in a Python loop; ### Initial idea; ```py; >>> import ROOT; >>> e = ROOT.TEntryList(); >>> e.GetN(); 0; >>> ROOT.ROOT.Detail.EnterRange(e, 0, 10); >>> e.GetN(); 10; ```. Not sure about the namespace and the naming, can be discussed. ### Final interface. ```py; >>> import ROOT; >>> e = ROOT.TEntryList(); >>> e.EnterRange(0,10); >>> e.GetN(); 10; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8740
https://github.com/root-project/root/pull/8740:158,Safety,avoid,avoid,158,"Add a utility function to call `TEntryList::Enter` with entries in a certain range, instead of having to do the loop manually. Especially useful in PyROOT to avoid doing the same in a Python loop; ### Initial idea; ```py; >>> import ROOT; >>> e = ROOT.TEntryList(); >>> e.GetN(); 0; >>> ROOT.ROOT.Detail.EnterRange(e, 0, 10); >>> e.GetN(); 10; ```. Not sure about the namespace and the naming, can be discussed. ### Final interface. ```py; >>> import ROOT; >>> e = ROOT.TEntryList(); >>> e.EnterRange(0,10); >>> e.GetN(); 10; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8740
https://github.com/root-project/root/pull/8741:369,Performance,multi-thread,multi-thread,369,"chain->Add(""filename/treename"") is ambiguous when filename does not; end in `.root`: in that case `TChain` interprets its argument; as the full path to the file, with no treename specified. We now instead use the unambiguous syntax ""filename?query#treename""; when building chains in TTreeProcessorMT. This fixes #8739 (reading files with no `.root` extension in RDF's; multi-thread event loops). Companion PR https://github.com/root-project/roottest/pull/758 adds a test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8741
https://github.com/root-project/root/pull/8741:466,Testability,test,test,466,"chain->Add(""filename/treename"") is ambiguous when filename does not; end in `.root`: in that case `TChain` interprets its argument; as the full path to the file, with no treename specified. We now instead use the unambiguous syntax ""filename?query#treename""; when building chains in TTreeProcessorMT. This fixes #8739 (reading files with no `.root` extension in RDF's; multi-thread event loops). Companion PR https://github.com/root-project/roottest/pull/758 adds a test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8741
https://github.com/root-project/root/issues/8743:131,Deployability,update,updated,131,"The `CMAKE_CXX_STANDARD` value indicated for building ROOT7 is `c++14`, however it now requires `c++17` so documentation should be updated, namely (and maybe not limited to):. - https://root.cern/for_developers/root7/; - https://root.cern/install/build_from_source/#enabling-experimental-features-aka-root7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8743
https://github.com/root-project/root/issues/8743:239,Deployability,install,install,239,"The `CMAKE_CXX_STANDARD` value indicated for building ROOT7 is `c++14`, however it now requires `c++17` so documentation should be updated, namely (and maybe not limited to):. - https://root.cern/for_developers/root7/; - https://root.cern/install/build_from_source/#enabling-experimental-features-aka-root7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8743
https://github.com/root-project/root/issues/8744:43,Availability,failure,failure,43,"Old test said:. > one of the reason of the failure is the fact that the first	; > clones array is empty!. https://github.com/root-project/roottest/blob/v6-24-02/root/treeformula/clones/runNestedClones.C and https://github.com/root-project/roottest/blob/v6-24-02/root/treeformula/clones/nestedclones.root are reproducing this (before it was removed, because roottest isn't a place to keep reproducers)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8744
https://github.com/root-project/root/issues/8744:4,Testability,test,test,4,"Old test said:. > one of the reason of the failure is the fact that the first	; > clones array is empty!. https://github.com/root-project/roottest/blob/v6-24-02/root/treeformula/clones/runNestedClones.C and https://github.com/root-project/roottest/blob/v6-24-02/root/treeformula/clones/nestedclones.root are reproducing this (before it was removed, because roottest isn't a place to keep reproducers)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8744
https://github.com/root-project/root/issues/8745:2232,Availability,down,download,2232,"a namespace:; ```py; import ROOT. ROOT.gInterpreter.Declare(; """"""; namespace ROOT{; namespace Detail{; struct MyStruct{};; void dostuff(){}; int myint;; }}; """"""; ); ```; Then try to access them in a Python session; ```py; $ python -i namespace_function.py; >>> ROOT.Detail.MyStruct; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; AttributeError: <namespace cppyy.gbl.Detail at 0x55e51fdc7f50> has no attribute 'MyStruct'. Full details:; type object 'Detail' has no attribute 'MyStruct'; 'Detail::MyStruct' is not a known C++ class; 'MyStruct' is not a known C++ template; 'MyStruct' is not a known C++ enum; >>> ROOT.ROOT.Detail.MyStruct; <class cppyy.gbl.ROOT.Detail.MyStruct at 0x55e51fe1dd60>; >>> ROOT.Detail.dostuff; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; AttributeError: <namespace cppyy.gbl.Detail at 0x55e51fdc7f50> has no attribute 'dostuff'. Full details:; type object 'Detail' has no attribute 'dostuff'; 'Detail::dostuff' is not a known C++ class; 'dostuff' is not a known C++ template; 'dostuff' is not a known C++ enum; >>> ROOT.ROOT.Detail.dostuff; <cppyy.CPPOverload object at 0x7f522b684eb0>; >>> ROOT.Detail.myint; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; AttributeError: <namespace cppyy.gbl.Detail at 0x55e51fdc7f50> has no attribute 'myint'. Full details:; type object 'Detail' has no attribute 'myint'; 'Detail::myint' is not a known C++ class; 'myint' is not a known C++ template; 'myint' is not a known C++ enum; >>> ROOT.ROOT.Detail.myint; 0; ```. It's unclear how to avoid the double `ROOT.ROOT` in general. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Be able to avoid typing the name twice, at least for classes/functions defined in ROOT source code. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT master on Fedora32",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8745
https://github.com/root-project/root/issues/8745:2214,Deployability,install,install,2214,"a namespace:; ```py; import ROOT. ROOT.gInterpreter.Declare(; """"""; namespace ROOT{; namespace Detail{; struct MyStruct{};; void dostuff(){}; int myint;; }}; """"""; ); ```; Then try to access them in a Python session; ```py; $ python -i namespace_function.py; >>> ROOT.Detail.MyStruct; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; AttributeError: <namespace cppyy.gbl.Detail at 0x55e51fdc7f50> has no attribute 'MyStruct'. Full details:; type object 'Detail' has no attribute 'MyStruct'; 'Detail::MyStruct' is not a known C++ class; 'MyStruct' is not a known C++ template; 'MyStruct' is not a known C++ enum; >>> ROOT.ROOT.Detail.MyStruct; <class cppyy.gbl.ROOT.Detail.MyStruct at 0x55e51fe1dd60>; >>> ROOT.Detail.dostuff; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; AttributeError: <namespace cppyy.gbl.Detail at 0x55e51fdc7f50> has no attribute 'dostuff'. Full details:; type object 'Detail' has no attribute 'dostuff'; 'Detail::dostuff' is not a known C++ class; 'dostuff' is not a known C++ template; 'dostuff' is not a known C++ enum; >>> ROOT.ROOT.Detail.dostuff; <cppyy.CPPOverload object at 0x7f522b684eb0>; >>> ROOT.Detail.myint; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; AttributeError: <namespace cppyy.gbl.Detail at 0x55e51fdc7f50> has no attribute 'myint'. Full details:; type object 'Detail' has no attribute 'myint'; 'Detail::myint' is not a known C++ class; 'myint' is not a known C++ template; 'myint' is not a known C++ enum; >>> ROOT.ROOT.Detail.myint; 0; ```. It's unclear how to avoid the double `ROOT.ROOT` in general. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Be able to avoid typing the name twice, at least for classes/functions defined in ROOT source code. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT master on Fedora32",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8745
https://github.com/root-project/root/issues/8745:56,Safety,avoid,avoid,56,"### Describe the bug. In PyROOT it has been possible to avoid the double `ROOT.ROOT` for some classes/functions for a while; ```py; import ROOT; df = ROOT.RDataFrame; ```; But that doesn't happen for every new class/function defined in C++ . This is a simple reproducer: create some entities in a namespace:; ```py; import ROOT. ROOT.gInterpreter.Declare(; """"""; namespace ROOT{; namespace Detail{; struct MyStruct{};; void dostuff(){}; int myint;; }}; """"""; ); ```; Then try to access them in a Python session; ```py; $ python -i namespace_function.py; >>> ROOT.Detail.MyStruct; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; AttributeError: <namespace cppyy.gbl.Detail at 0x55e51fdc7f50> has no attribute 'MyStruct'. Full details:; type object 'Detail' has no attribute 'MyStruct'; 'Detail::MyStruct' is not a known C++ class; 'MyStruct' is not a known C++ template; 'MyStruct' is not a known C++ enum; >>> ROOT.ROOT.Detail.MyStruct; <class cppyy.gbl.ROOT.Detail.MyStruct at 0x55e51fe1dd60>; >>> ROOT.Detail.dostuff; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; AttributeError: <namespace cppyy.gbl.Detail at 0x55e51fdc7f50> has no attribute 'dostuff'. Full details:; type object 'Detail' has no attribute 'dostuff'; 'Detail::dostuff' is not a known C++ class; 'dostuff' is not a known C++ template; 'dostuff' is not a known C++ enum; >>> ROOT.ROOT.Detail.dostuff; <cppyy.CPPOverload object at 0x7f522b684eb0>; >>> ROOT.Detail.myint; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; AttributeError: <namespace cppyy.gbl.Detail at 0x55e51fdc7f50> has no attribute 'myint'. Full details:; type object 'Detail' has no attribute 'myint'; 'Detail::myint' is not a known C++ class; 'myint' is not a known C++ template; 'myint' is not a known C++ enum; >>> ROOT.ROOT.Detail.myint; 0; ```. It's unclear how to avoid the double `ROOT.ROOT` in general. ### Expected behavior; <!--; A clear and concise description of what you expecte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8745
https://github.com/root-project/root/issues/8745:1880,Safety,avoid,avoid,1880,"a namespace:; ```py; import ROOT. ROOT.gInterpreter.Declare(; """"""; namespace ROOT{; namespace Detail{; struct MyStruct{};; void dostuff(){}; int myint;; }}; """"""; ); ```; Then try to access them in a Python session; ```py; $ python -i namespace_function.py; >>> ROOT.Detail.MyStruct; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; AttributeError: <namespace cppyy.gbl.Detail at 0x55e51fdc7f50> has no attribute 'MyStruct'. Full details:; type object 'Detail' has no attribute 'MyStruct'; 'Detail::MyStruct' is not a known C++ class; 'MyStruct' is not a known C++ template; 'MyStruct' is not a known C++ enum; >>> ROOT.ROOT.Detail.MyStruct; <class cppyy.gbl.ROOT.Detail.MyStruct at 0x55e51fe1dd60>; >>> ROOT.Detail.dostuff; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; AttributeError: <namespace cppyy.gbl.Detail at 0x55e51fdc7f50> has no attribute 'dostuff'. Full details:; type object 'Detail' has no attribute 'dostuff'; 'Detail::dostuff' is not a known C++ class; 'dostuff' is not a known C++ template; 'dostuff' is not a known C++ enum; >>> ROOT.ROOT.Detail.dostuff; <cppyy.CPPOverload object at 0x7f522b684eb0>; >>> ROOT.Detail.myint; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; AttributeError: <namespace cppyy.gbl.Detail at 0x55e51fdc7f50> has no attribute 'myint'. Full details:; type object 'Detail' has no attribute 'myint'; 'Detail::myint' is not a known C++ class; 'myint' is not a known C++ template; 'myint' is not a known C++ enum; >>> ROOT.ROOT.Detail.myint; 0; ```. It's unclear how to avoid the double `ROOT.ROOT` in general. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Be able to avoid typing the name twice, at least for classes/functions defined in ROOT source code. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT master on Fedora32",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8745
https://github.com/root-project/root/issues/8745:2031,Safety,avoid,avoid,2031,"a namespace:; ```py; import ROOT. ROOT.gInterpreter.Declare(; """"""; namespace ROOT{; namespace Detail{; struct MyStruct{};; void dostuff(){}; int myint;; }}; """"""; ); ```; Then try to access them in a Python session; ```py; $ python -i namespace_function.py; >>> ROOT.Detail.MyStruct; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; AttributeError: <namespace cppyy.gbl.Detail at 0x55e51fdc7f50> has no attribute 'MyStruct'. Full details:; type object 'Detail' has no attribute 'MyStruct'; 'Detail::MyStruct' is not a known C++ class; 'MyStruct' is not a known C++ template; 'MyStruct' is not a known C++ enum; >>> ROOT.ROOT.Detail.MyStruct; <class cppyy.gbl.ROOT.Detail.MyStruct at 0x55e51fe1dd60>; >>> ROOT.Detail.dostuff; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; AttributeError: <namespace cppyy.gbl.Detail at 0x55e51fdc7f50> has no attribute 'dostuff'. Full details:; type object 'Detail' has no attribute 'dostuff'; 'Detail::dostuff' is not a known C++ class; 'dostuff' is not a known C++ template; 'dostuff' is not a known C++ enum; >>> ROOT.ROOT.Detail.dostuff; <cppyy.CPPOverload object at 0x7f522b684eb0>; >>> ROOT.Detail.myint; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; AttributeError: <namespace cppyy.gbl.Detail at 0x55e51fdc7f50> has no attribute 'myint'. Full details:; type object 'Detail' has no attribute 'myint'; 'Detail::myint' is not a known C++ class; 'myint' is not a known C++ template; 'myint' is not a known C++ enum; >>> ROOT.ROOT.Detail.myint; 0; ```. It's unclear how to avoid the double `ROOT.ROOT` in general. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Be able to avoid typing the name twice, at least for classes/functions defined in ROOT source code. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT master on Fedora32",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8745
https://github.com/root-project/root/issues/8745:477,Security,access,access,477,"### Describe the bug. In PyROOT it has been possible to avoid the double `ROOT.ROOT` for some classes/functions for a while; ```py; import ROOT; df = ROOT.RDataFrame; ```; But that doesn't happen for every new class/function defined in C++ . This is a simple reproducer: create some entities in a namespace:; ```py; import ROOT. ROOT.gInterpreter.Declare(; """"""; namespace ROOT{; namespace Detail{; struct MyStruct{};; void dostuff(){}; int myint;; }}; """"""; ); ```; Then try to access them in a Python session; ```py; $ python -i namespace_function.py; >>> ROOT.Detail.MyStruct; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; AttributeError: <namespace cppyy.gbl.Detail at 0x55e51fdc7f50> has no attribute 'MyStruct'. Full details:; type object 'Detail' has no attribute 'MyStruct'; 'Detail::MyStruct' is not a known C++ class; 'MyStruct' is not a known C++ template; 'MyStruct' is not a known C++ enum; >>> ROOT.ROOT.Detail.MyStruct; <class cppyy.gbl.ROOT.Detail.MyStruct at 0x55e51fe1dd60>; >>> ROOT.Detail.dostuff; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; AttributeError: <namespace cppyy.gbl.Detail at 0x55e51fdc7f50> has no attribute 'dostuff'. Full details:; type object 'Detail' has no attribute 'dostuff'; 'Detail::dostuff' is not a known C++ class; 'dostuff' is not a known C++ template; 'dostuff' is not a known C++ enum; >>> ROOT.ROOT.Detail.dostuff; <cppyy.CPPOverload object at 0x7f522b684eb0>; >>> ROOT.Detail.myint; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; AttributeError: <namespace cppyy.gbl.Detail at 0x55e51fdc7f50> has no attribute 'myint'. Full details:; type object 'Detail' has no attribute 'myint'; 'Detail::myint' is not a known C++ class; 'myint' is not a known C++ template; 'myint' is not a known C++ enum; >>> ROOT.ROOT.Detail.myint; 0; ```. It's unclear how to avoid the double `ROOT.ROOT` in general. ### Expected behavior; <!--; A clear and concise description of what you expecte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8745
https://github.com/root-project/root/issues/8745:252,Usability,simpl,simple,252,"### Describe the bug. In PyROOT it has been possible to avoid the double `ROOT.ROOT` for some classes/functions for a while; ```py; import ROOT; df = ROOT.RDataFrame; ```; But that doesn't happen for every new class/function defined in C++ . This is a simple reproducer: create some entities in a namespace:; ```py; import ROOT. ROOT.gInterpreter.Declare(; """"""; namespace ROOT{; namespace Detail{; struct MyStruct{};; void dostuff(){}; int myint;; }}; """"""; ); ```; Then try to access them in a Python session; ```py; $ python -i namespace_function.py; >>> ROOT.Detail.MyStruct; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; AttributeError: <namespace cppyy.gbl.Detail at 0x55e51fdc7f50> has no attribute 'MyStruct'. Full details:; type object 'Detail' has no attribute 'MyStruct'; 'Detail::MyStruct' is not a known C++ class; 'MyStruct' is not a known C++ template; 'MyStruct' is not a known C++ enum; >>> ROOT.ROOT.Detail.MyStruct; <class cppyy.gbl.ROOT.Detail.MyStruct at 0x55e51fe1dd60>; >>> ROOT.Detail.dostuff; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; AttributeError: <namespace cppyy.gbl.Detail at 0x55e51fdc7f50> has no attribute 'dostuff'. Full details:; type object 'Detail' has no attribute 'dostuff'; 'Detail::dostuff' is not a known C++ class; 'dostuff' is not a known C++ template; 'dostuff' is not a known C++ enum; >>> ROOT.ROOT.Detail.dostuff; <cppyy.CPPOverload object at 0x7f522b684eb0>; >>> ROOT.Detail.myint; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; AttributeError: <namespace cppyy.gbl.Detail at 0x55e51fdc7f50> has no attribute 'myint'. Full details:; type object 'Detail' has no attribute 'myint'; 'Detail::myint' is not a known C++ class; 'myint' is not a known C++ template; 'myint' is not a known C++ enum; >>> ROOT.ROOT.Detail.myint; 0; ```. It's unclear how to avoid the double `ROOT.ROOT` in general. ### Expected behavior; <!--; A clear and concise description of what you expecte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8745
https://github.com/root-project/root/issues/8745:1952,Usability,clear,clear,1952,"a namespace:; ```py; import ROOT. ROOT.gInterpreter.Declare(; """"""; namespace ROOT{; namespace Detail{; struct MyStruct{};; void dostuff(){}; int myint;; }}; """"""; ); ```; Then try to access them in a Python session; ```py; $ python -i namespace_function.py; >>> ROOT.Detail.MyStruct; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; AttributeError: <namespace cppyy.gbl.Detail at 0x55e51fdc7f50> has no attribute 'MyStruct'. Full details:; type object 'Detail' has no attribute 'MyStruct'; 'Detail::MyStruct' is not a known C++ class; 'MyStruct' is not a known C++ template; 'MyStruct' is not a known C++ enum; >>> ROOT.ROOT.Detail.MyStruct; <class cppyy.gbl.ROOT.Detail.MyStruct at 0x55e51fe1dd60>; >>> ROOT.Detail.dostuff; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; AttributeError: <namespace cppyy.gbl.Detail at 0x55e51fdc7f50> has no attribute 'dostuff'. Full details:; type object 'Detail' has no attribute 'dostuff'; 'Detail::dostuff' is not a known C++ class; 'dostuff' is not a known C++ template; 'dostuff' is not a known C++ enum; >>> ROOT.ROOT.Detail.dostuff; <cppyy.CPPOverload object at 0x7f522b684eb0>; >>> ROOT.Detail.myint; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; AttributeError: <namespace cppyy.gbl.Detail at 0x55e51fdc7f50> has no attribute 'myint'. Full details:; type object 'Detail' has no attribute 'myint'; 'Detail::myint' is not a known C++ class; 'myint' is not a known C++ template; 'myint' is not a known C++ enum; >>> ROOT.ROOT.Detail.myint; 0; ```. It's unclear how to avoid the double `ROOT.ROOT` in general. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Be able to avoid typing the name twice, at least for classes/functions defined in ROOT source code. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT master on Fedora32",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8745
https://github.com/root-project/root/pull/8746:0,Deployability,Patch,Patch,0,Patch proposed by Timur,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8746
https://github.com/root-project/root/pull/8747:428,Availability,error,error,428,"kEntryBeyondEnd is what is expected to be set at the end of a `while(r.Next())` event loop. This change is not backward-compatible if anyone relied on `kEntryNotFound` being set even at the end of a well-behaved event loop. On the other hand, the second usage example in TTreeReader's docs (https://root.cern/doc/master/classTTreeReader.html) as well as the names of the enum values seem to indicate that `kEntryNotFound` is an error state and `kEntryBeyondEnd` is what indicates a normal completion of the event loop. P.S.; to be clear, the problem I'm trying to solve is that in the current state it's hard (maybe impossible) to distinguish between a TTreeReader event loop that ended well and one that ended because an entry that was supposed to be there was not found",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8747
https://github.com/root-project/root/pull/8747:531,Usability,clear,clear,531,"kEntryBeyondEnd is what is expected to be set at the end of a `while(r.Next())` event loop. This change is not backward-compatible if anyone relied on `kEntryNotFound` being set even at the end of a well-behaved event loop. On the other hand, the second usage example in TTreeReader's docs (https://root.cern/doc/master/classTTreeReader.html) as well as the names of the enum values seem to indicate that `kEntryNotFound` is an error state and `kEntryBeyondEnd` is what indicates a normal completion of the event loop. P.S.; to be clear, the problem I'm trying to solve is that in the current state it's hard (maybe impossible) to distinguish between a TTreeReader event loop that ended well and one that ended because an entry that was supposed to be there was not found",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8747
https://github.com/root-project/root/pull/8748:94,Availability,error,error,94,"Before this commit, in single-thread event loops RDF was throwing; in case TTreeReader had an error flag at the end of the loop.; Now multi-thread loops perform the same check at the end of each task.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8748
https://github.com/root-project/root/pull/8748:134,Performance,multi-thread,multi-thread,134,"Before this commit, in single-thread event loops RDF was throwing; in case TTreeReader had an error flag at the end of the loop.; Now multi-thread loops perform the same check at the end of each task.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8748
https://github.com/root-project/root/pull/8748:153,Performance,perform,perform,153,"Before this commit, in single-thread event loops RDF was throwing; in case TTreeReader had an error flag at the end of the loop.; Now multi-thread loops perform the same check at the end of each task.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8748
https://github.com/root-project/root/issues/8750:1516,Availability,error,error,1516,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. The current logic to construct a TChain in a distributed task to pass to the RDF constructor is at; https://github.com/root-project/root/blob/b494a9b145246b66868fa38e2fd3e1f37fa73c47/bindings/experimental/distrdf/python/DistRDF/Backends/Base.py#L166-L168. But this is too simple, since it doesn't account for the common use case of a TChain with no name and sub trees with different names:; ```py; >>> import ROOT; >>> RDF = ROOT.RDF.Experimental.Distributed.Spark.RDataFrame; >>> c = ROOT.TChain(); >>> c.Add(""10entries.root/entries""); 1; >>> c.Add(""other10entries.root/otherentries""); 1; >>> df = RDF(c); >>> df.Count().GetValue(); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/vpadulan/Programs/rootproject/rootbuild/devdebugtest/lib/DistRDF/Proxy.py"", line 127, in GetValue; headnode.backend.execute(generator); File ""/home/vpadulan/Programs/rootproject/rootbuild/devdebugtest/lib/DistRDF/Backends/Base.py"", line 135, in execute; ranges = headnode.build_ranges(); File ""/home/vpadulan/Programs/rootproject/rootbuild/devdebugtest/lib/DistRDF/HeadNode.py"", line 307, in build_ranges; clustersinfiles = Ranges.get_clusters(self.treename, self.inputfiles); File ""/home/vpadulan/Programs/rootproject/rootbuild/devdebugtest/lib/DistRDF/Ranges.py"", line 220, in get_clusters; entries = t.GetEntriesFast(); AttributeError: 'TObject' object has no attribute 'GetEntriesFast'; ```. The error is due to the current sub tree not being found (since the input chain has no name). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Distributed RDataFrame should support this use case. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT master built on Fedora32",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8750
https://github.com/root-project/root/issues/8750:1870,Availability,down,download,1870,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. The current logic to construct a TChain in a distributed task to pass to the RDF constructor is at; https://github.com/root-project/root/blob/b494a9b145246b66868fa38e2fd3e1f37fa73c47/bindings/experimental/distrdf/python/DistRDF/Backends/Base.py#L166-L168. But this is too simple, since it doesn't account for the common use case of a TChain with no name and sub trees with different names:; ```py; >>> import ROOT; >>> RDF = ROOT.RDF.Experimental.Distributed.Spark.RDataFrame; >>> c = ROOT.TChain(); >>> c.Add(""10entries.root/entries""); 1; >>> c.Add(""other10entries.root/otherentries""); 1; >>> df = RDF(c); >>> df.Count().GetValue(); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/vpadulan/Programs/rootproject/rootbuild/devdebugtest/lib/DistRDF/Proxy.py"", line 127, in GetValue; headnode.backend.execute(generator); File ""/home/vpadulan/Programs/rootproject/rootbuild/devdebugtest/lib/DistRDF/Backends/Base.py"", line 135, in execute; ranges = headnode.build_ranges(); File ""/home/vpadulan/Programs/rootproject/rootbuild/devdebugtest/lib/DistRDF/HeadNode.py"", line 307, in build_ranges; clustersinfiles = Ranges.get_clusters(self.treename, self.inputfiles); File ""/home/vpadulan/Programs/rootproject/rootbuild/devdebugtest/lib/DistRDF/Ranges.py"", line 220, in get_clusters; entries = t.GetEntriesFast(); AttributeError: 'TObject' object has no attribute 'GetEntriesFast'; ```. The error is due to the current sub tree not being found (since the input chain has no name). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Distributed RDataFrame should support this use case. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT master built on Fedora32",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8750
https://github.com/root-project/root/issues/8750:1852,Deployability,install,install,1852,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. The current logic to construct a TChain in a distributed task to pass to the RDF constructor is at; https://github.com/root-project/root/blob/b494a9b145246b66868fa38e2fd3e1f37fa73c47/bindings/experimental/distrdf/python/DistRDF/Backends/Base.py#L166-L168. But this is too simple, since it doesn't account for the common use case of a TChain with no name and sub trees with different names:; ```py; >>> import ROOT; >>> RDF = ROOT.RDF.Experimental.Distributed.Spark.RDataFrame; >>> c = ROOT.TChain(); >>> c.Add(""10entries.root/entries""); 1; >>> c.Add(""other10entries.root/otherentries""); 1; >>> df = RDF(c); >>> df.Count().GetValue(); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/vpadulan/Programs/rootproject/rootbuild/devdebugtest/lib/DistRDF/Proxy.py"", line 127, in GetValue; headnode.backend.execute(generator); File ""/home/vpadulan/Programs/rootproject/rootbuild/devdebugtest/lib/DistRDF/Backends/Base.py"", line 135, in execute; ranges = headnode.build_ranges(); File ""/home/vpadulan/Programs/rootproject/rootbuild/devdebugtest/lib/DistRDF/HeadNode.py"", line 307, in build_ranges; clustersinfiles = Ranges.get_clusters(self.treename, self.inputfiles); File ""/home/vpadulan/Programs/rootproject/rootbuild/devdebugtest/lib/DistRDF/Ranges.py"", line 220, in get_clusters; entries = t.GetEntriesFast(); AttributeError: 'TObject' object has no attribute 'GetEntriesFast'; ```. The error is due to the current sub tree not being found (since the input chain has no name). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Distributed RDataFrame should support this use case. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT master built on Fedora32",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8750
https://github.com/root-project/root/issues/8750:109,Testability,log,logic,109,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. The current logic to construct a TChain in a distributed task to pass to the RDF constructor is at; https://github.com/root-project/root/blob/b494a9b145246b66868fa38e2fd3e1f37fa73c47/bindings/experimental/distrdf/python/DistRDF/Backends/Base.py#L166-L168. But this is too simple, since it doesn't account for the common use case of a TChain with no name and sub trees with different names:; ```py; >>> import ROOT; >>> RDF = ROOT.RDF.Experimental.Distributed.Spark.RDataFrame; >>> c = ROOT.TChain(); >>> c.Add(""10entries.root/entries""); 1; >>> c.Add(""other10entries.root/otherentries""); 1; >>> df = RDF(c); >>> df.Count().GetValue(); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/vpadulan/Programs/rootproject/rootbuild/devdebugtest/lib/DistRDF/Proxy.py"", line 127, in GetValue; headnode.backend.execute(generator); File ""/home/vpadulan/Programs/rootproject/rootbuild/devdebugtest/lib/DistRDF/Backends/Base.py"", line 135, in execute; ranges = headnode.build_ranges(); File ""/home/vpadulan/Programs/rootproject/rootbuild/devdebugtest/lib/DistRDF/HeadNode.py"", line 307, in build_ranges; clustersinfiles = Ranges.get_clusters(self.treename, self.inputfiles); File ""/home/vpadulan/Programs/rootproject/rootbuild/devdebugtest/lib/DistRDF/Ranges.py"", line 220, in get_clusters; entries = t.GetEntriesFast(); AttributeError: 'TObject' object has no attribute 'GetEntriesFast'; ```. The error is due to the current sub tree not being found (since the input chain has no name). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Distributed RDataFrame should support this use case. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT master built on Fedora32",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8750
https://github.com/root-project/root/issues/8750:30,Usability,clear,clear,30,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. The current logic to construct a TChain in a distributed task to pass to the RDF constructor is at; https://github.com/root-project/root/blob/b494a9b145246b66868fa38e2fd3e1f37fa73c47/bindings/experimental/distrdf/python/DistRDF/Backends/Base.py#L166-L168. But this is too simple, since it doesn't account for the common use case of a TChain with no name and sub trees with different names:; ```py; >>> import ROOT; >>> RDF = ROOT.RDF.Experimental.Distributed.Spark.RDataFrame; >>> c = ROOT.TChain(); >>> c.Add(""10entries.root/entries""); 1; >>> c.Add(""other10entries.root/otherentries""); 1; >>> df = RDF(c); >>> df.Count().GetValue(); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/vpadulan/Programs/rootproject/rootbuild/devdebugtest/lib/DistRDF/Proxy.py"", line 127, in GetValue; headnode.backend.execute(generator); File ""/home/vpadulan/Programs/rootproject/rootbuild/devdebugtest/lib/DistRDF/Backends/Base.py"", line 135, in execute; ranges = headnode.build_ranges(); File ""/home/vpadulan/Programs/rootproject/rootbuild/devdebugtest/lib/DistRDF/HeadNode.py"", line 307, in build_ranges; clustersinfiles = Ranges.get_clusters(self.treename, self.inputfiles); File ""/home/vpadulan/Programs/rootproject/rootbuild/devdebugtest/lib/DistRDF/Ranges.py"", line 220, in get_clusters; entries = t.GetEntriesFast(); AttributeError: 'TObject' object has no attribute 'GetEntriesFast'; ```. The error is due to the current sub tree not being found (since the input chain has no name). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Distributed RDataFrame should support this use case. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT master built on Fedora32",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8750
https://github.com/root-project/root/issues/8750:369,Usability,simpl,simple,369,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. The current logic to construct a TChain in a distributed task to pass to the RDF constructor is at; https://github.com/root-project/root/blob/b494a9b145246b66868fa38e2fd3e1f37fa73c47/bindings/experimental/distrdf/python/DistRDF/Backends/Base.py#L166-L168. But this is too simple, since it doesn't account for the common use case of a TChain with no name and sub trees with different names:; ```py; >>> import ROOT; >>> RDF = ROOT.RDF.Experimental.Distributed.Spark.RDataFrame; >>> c = ROOT.TChain(); >>> c.Add(""10entries.root/entries""); 1; >>> c.Add(""other10entries.root/otherentries""); 1; >>> df = RDF(c); >>> df.Count().GetValue(); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/vpadulan/Programs/rootproject/rootbuild/devdebugtest/lib/DistRDF/Proxy.py"", line 127, in GetValue; headnode.backend.execute(generator); File ""/home/vpadulan/Programs/rootproject/rootbuild/devdebugtest/lib/DistRDF/Backends/Base.py"", line 135, in execute; ranges = headnode.build_ranges(); File ""/home/vpadulan/Programs/rootproject/rootbuild/devdebugtest/lib/DistRDF/HeadNode.py"", line 307, in build_ranges; clustersinfiles = Ranges.get_clusters(self.treename, self.inputfiles); File ""/home/vpadulan/Programs/rootproject/rootbuild/devdebugtest/lib/DistRDF/Ranges.py"", line 220, in get_clusters; entries = t.GetEntriesFast(); AttributeError: 'TObject' object has no attribute 'GetEntriesFast'; ```. The error is due to the current sub tree not being found (since the input chain has no name). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Distributed RDataFrame should support this use case. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT master built on Fedora32",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8750
https://github.com/root-project/root/issues/8750:1637,Usability,clear,clear,1637,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. The current logic to construct a TChain in a distributed task to pass to the RDF constructor is at; https://github.com/root-project/root/blob/b494a9b145246b66868fa38e2fd3e1f37fa73c47/bindings/experimental/distrdf/python/DistRDF/Backends/Base.py#L166-L168. But this is too simple, since it doesn't account for the common use case of a TChain with no name and sub trees with different names:; ```py; >>> import ROOT; >>> RDF = ROOT.RDF.Experimental.Distributed.Spark.RDataFrame; >>> c = ROOT.TChain(); >>> c.Add(""10entries.root/entries""); 1; >>> c.Add(""other10entries.root/otherentries""); 1; >>> df = RDF(c); >>> df.Count().GetValue(); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/vpadulan/Programs/rootproject/rootbuild/devdebugtest/lib/DistRDF/Proxy.py"", line 127, in GetValue; headnode.backend.execute(generator); File ""/home/vpadulan/Programs/rootproject/rootbuild/devdebugtest/lib/DistRDF/Backends/Base.py"", line 135, in execute; ranges = headnode.build_ranges(); File ""/home/vpadulan/Programs/rootproject/rootbuild/devdebugtest/lib/DistRDF/HeadNode.py"", line 307, in build_ranges; clustersinfiles = Ranges.get_clusters(self.treename, self.inputfiles); File ""/home/vpadulan/Programs/rootproject/rootbuild/devdebugtest/lib/DistRDF/Ranges.py"", line 220, in get_clusters; entries = t.GetEntriesFast(); AttributeError: 'TObject' object has no attribute 'GetEntriesFast'; ```. The error is due to the current sub tree not being found (since the input chain has no name). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Distributed RDataFrame should support this use case. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT master built on Fedora32",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8750
https://github.com/root-project/root/pull/8751:15,Integrability,interface,interface,15,"For the pyROOT interface, we wanted to support that the user can pass a; Python set whenever the interface expects a RooArgSet. This is achieved by pythonizing the `__init__` function of the RooArgSet Python mirror class. This PR also includes a complete migration of all RooFit tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8751
https://github.com/root-project/root/pull/8751:97,Integrability,interface,interface,97,"For the pyROOT interface, we wanted to support that the user can pass a; Python set whenever the interface expects a RooArgSet. This is achieved by pythonizing the `__init__` function of the RooArgSet Python mirror class. This PR also includes a complete migration of all RooFit tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8751
https://github.com/root-project/root/pull/8754:106,Security,expose,expose,106,Identifiers containing a double underscore are reserved in C++. We have to do this now because we kind of expose `__rdf` to RDataSource; implementations via the (unreleased) `#var` aliasing mechanism.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8754
https://github.com/root-project/root/issues/8758:1190,Availability,redundant,redundantly,1190,"oot/issues/8523), a next step is to translate also the [RooStats tutorials](https://root.cern/doc/master/group__tutorial__roostats.html) to pyROOT. The RooStats tutorials can be found in the [tutorials/roostats](https://github.com/root-project/root/tree/master/tutorials/roostats) directory. Right now, none of the tutorials are translated to Python yet. For a start, one could start with the translation of the very popular [StandardHypoTestInvDemo](https://root.cern.ch/doc/master/StandardHypoTestInvDemo_8C.html) tutorial, which explains the widely used AsymptoticCalculator and HypoTestInverter classes. Any new Python tutorials should be formatted with [black](https://github.com/psf/black):; ```; black --line-length=120 <tutorial file>.py; ```. *Please note:* if you want to work on this issue, please don't open a PR with all tutorials translated at once! This makes the review process unsustainable. For example, if you submit one translation at a time, you will get feedback that will help you improving your next translation, so the same comments don't have to be made redundantly. This saves time for both the contributor and reviewer :slightly_smiling_face: . Here is the list of all the RooStats tutorials and whether they have already been translated:. - [x] FourBinInstructional.C; - [x] HybridInstructional.C; - [x] HybridStandardForm.C; - [x] IntervalExamples.C; - [ ] ModelInspector.C; - [x] MultivariateGaussianTest.C; - [ ] OneSidedFrequentistUpperLimitWithBands.C; - [x] rs101_limitexample.C; - [ ] rs102_hypotestwithshapes.C; - [x] rs301_splot.C; - [ ] rs302_JeffreysPriorDemo.C; - [x] rs401c_FeldmanCousins.C; - [ ] rs401d_FeldmanCousins.C; - [x] rs601_HLFactoryexample.C; - [ ] rs602_HLFactoryCombinationexample.C; - [ ] rs603_HLFactoryElaborateExample.C; - [x] rs701_BayesianCalculator.C; - [x] rs_bernsteinCorrection.C; - [ ] rs_numberCountingCombination.C; - [x] rs_numbercountingutils.C; - [ ] StandardBayesianMCMCDemo.C; - [ ] StandardBayesianNumericalDemo.C; - [ ] Stan",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8758
https://github.com/root-project/root/issues/8758:1190,Safety,redund,redundantly,1190,"oot/issues/8523), a next step is to translate also the [RooStats tutorials](https://root.cern/doc/master/group__tutorial__roostats.html) to pyROOT. The RooStats tutorials can be found in the [tutorials/roostats](https://github.com/root-project/root/tree/master/tutorials/roostats) directory. Right now, none of the tutorials are translated to Python yet. For a start, one could start with the translation of the very popular [StandardHypoTestInvDemo](https://root.cern.ch/doc/master/StandardHypoTestInvDemo_8C.html) tutorial, which explains the widely used AsymptoticCalculator and HypoTestInverter classes. Any new Python tutorials should be formatted with [black](https://github.com/psf/black):; ```; black --line-length=120 <tutorial file>.py; ```. *Please note:* if you want to work on this issue, please don't open a PR with all tutorials translated at once! This makes the review process unsustainable. For example, if you submit one translation at a time, you will get feedback that will help you improving your next translation, so the same comments don't have to be made redundantly. This saves time for both the contributor and reviewer :slightly_smiling_face: . Here is the list of all the RooStats tutorials and whether they have already been translated:. - [x] FourBinInstructional.C; - [x] HybridInstructional.C; - [x] HybridStandardForm.C; - [x] IntervalExamples.C; - [ ] ModelInspector.C; - [x] MultivariateGaussianTest.C; - [ ] OneSidedFrequentistUpperLimitWithBands.C; - [x] rs101_limitexample.C; - [ ] rs102_hypotestwithshapes.C; - [x] rs301_splot.C; - [ ] rs302_JeffreysPriorDemo.C; - [x] rs401c_FeldmanCousins.C; - [ ] rs401d_FeldmanCousins.C; - [x] rs601_HLFactoryexample.C; - [ ] rs602_HLFactoryCombinationexample.C; - [ ] rs603_HLFactoryElaborateExample.C; - [x] rs701_BayesianCalculator.C; - [x] rs_bernsteinCorrection.C; - [ ] rs_numberCountingCombination.C; - [x] rs_numbercountingutils.C; - [ ] StandardBayesianMCMCDemo.C; - [ ] StandardBayesianNumericalDemo.C; - [ ] Stan",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8758
https://github.com/root-project/root/issues/8758:2410,Testability,Test,TestNonCentral,2410,"with the translation of the very popular [StandardHypoTestInvDemo](https://root.cern.ch/doc/master/StandardHypoTestInvDemo_8C.html) tutorial, which explains the widely used AsymptoticCalculator and HypoTestInverter classes. Any new Python tutorials should be formatted with [black](https://github.com/psf/black):; ```; black --line-length=120 <tutorial file>.py; ```. *Please note:* if you want to work on this issue, please don't open a PR with all tutorials translated at once! This makes the review process unsustainable. For example, if you submit one translation at a time, you will get feedback that will help you improving your next translation, so the same comments don't have to be made redundantly. This saves time for both the contributor and reviewer :slightly_smiling_face: . Here is the list of all the RooStats tutorials and whether they have already been translated:. - [x] FourBinInstructional.C; - [x] HybridInstructional.C; - [x] HybridStandardForm.C; - [x] IntervalExamples.C; - [ ] ModelInspector.C; - [x] MultivariateGaussianTest.C; - [ ] OneSidedFrequentistUpperLimitWithBands.C; - [x] rs101_limitexample.C; - [ ] rs102_hypotestwithshapes.C; - [x] rs301_splot.C; - [ ] rs302_JeffreysPriorDemo.C; - [x] rs401c_FeldmanCousins.C; - [ ] rs401d_FeldmanCousins.C; - [x] rs601_HLFactoryexample.C; - [ ] rs602_HLFactoryCombinationexample.C; - [ ] rs603_HLFactoryElaborateExample.C; - [x] rs701_BayesianCalculator.C; - [x] rs_bernsteinCorrection.C; - [ ] rs_numberCountingCombination.C; - [x] rs_numbercountingutils.C; - [ ] StandardBayesianMCMCDemo.C; - [ ] StandardBayesianNumericalDemo.C; - [ ] StandardFeldmanCousinsDemo.C; - [ ] StandardFrequentistDiscovery.C; - [ ] StandardHistFactoryPlotsWithCategories.C; - [ ] StandardHypoTestDemo.C; - [ ] StandardHypoTestInvDemo.C; - [x] StandardProfileInspectorDemo.C; - [x] StandardProfileLikelihoodDemo.C; - [ ] StandardTestStatDistributionDemo.C; - [x] TestNonCentral.C; - [x] TwoSidedFrequentistUpperLimitWithBands.C; - [x] Zbi_Zgamma.C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8758
https://github.com/root-project/root/issues/8758:1086,Usability,feedback,feedback,1086,"oot/issues/8523), a next step is to translate also the [RooStats tutorials](https://root.cern/doc/master/group__tutorial__roostats.html) to pyROOT. The RooStats tutorials can be found in the [tutorials/roostats](https://github.com/root-project/root/tree/master/tutorials/roostats) directory. Right now, none of the tutorials are translated to Python yet. For a start, one could start with the translation of the very popular [StandardHypoTestInvDemo](https://root.cern.ch/doc/master/StandardHypoTestInvDemo_8C.html) tutorial, which explains the widely used AsymptoticCalculator and HypoTestInverter classes. Any new Python tutorials should be formatted with [black](https://github.com/psf/black):; ```; black --line-length=120 <tutorial file>.py; ```. *Please note:* if you want to work on this issue, please don't open a PR with all tutorials translated at once! This makes the review process unsustainable. For example, if you submit one translation at a time, you will get feedback that will help you improving your next translation, so the same comments don't have to be made redundantly. This saves time for both the contributor and reviewer :slightly_smiling_face: . Here is the list of all the RooStats tutorials and whether they have already been translated:. - [x] FourBinInstructional.C; - [x] HybridInstructional.C; - [x] HybridStandardForm.C; - [x] IntervalExamples.C; - [ ] ModelInspector.C; - [x] MultivariateGaussianTest.C; - [ ] OneSidedFrequentistUpperLimitWithBands.C; - [x] rs101_limitexample.C; - [ ] rs102_hypotestwithshapes.C; - [x] rs301_splot.C; - [ ] rs302_JeffreysPriorDemo.C; - [x] rs401c_FeldmanCousins.C; - [ ] rs401d_FeldmanCousins.C; - [x] rs601_HLFactoryexample.C; - [ ] rs602_HLFactoryCombinationexample.C; - [ ] rs603_HLFactoryElaborateExample.C; - [x] rs701_BayesianCalculator.C; - [x] rs_bernsteinCorrection.C; - [ ] rs_numberCountingCombination.C; - [x] rs_numbercountingutils.C; - [ ] StandardBayesianMCMCDemo.C; - [ ] StandardBayesianNumericalDemo.C; - [ ] Stan",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8758
https://github.com/root-project/root/issues/8759:484,Integrability,depend,depend,484,"So far, deprecated RooFit code has been moved into [roofit/roofitcore/inc/RooFitLegacy](https://github.com/root-project/root/tree/master/roofit/roofitcore/inc/RooFitLegacy) and [roofit/roofitcore/src/RooFitLegacy](https://github.com/root-project/root/tree/master/roofit/roofitcore/src/RooFitLegacy). But to really separate the legacy code from the current RooFit, we want to introduce a new library called RooFitLegacy in a new `roofit/roofitlegacy` directory. This new library would depend on RooFitCore. RooFitCore could only have an interface dependency on RooFitLegacy to make sure that the code using RooFitLegacy classes still links. In CMake, this would look like:. ```cmake; target_link_libraries(RooFitCore INTERFACE RooFitLegacy); ```. Or maybe we can even leave this dependency out, leading to a more aggressive deprecation by making old code not link anymore. Once the RooFitLegacy library becomes large enough to visibly impact compile time, we can also make building the legacy library optional by introducing a new `roofitlegacy` cmake flag.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8759
https://github.com/root-project/root/issues/8759:536,Integrability,interface,interface,536,"So far, deprecated RooFit code has been moved into [roofit/roofitcore/inc/RooFitLegacy](https://github.com/root-project/root/tree/master/roofit/roofitcore/inc/RooFitLegacy) and [roofit/roofitcore/src/RooFitLegacy](https://github.com/root-project/root/tree/master/roofit/roofitcore/src/RooFitLegacy). But to really separate the legacy code from the current RooFit, we want to introduce a new library called RooFitLegacy in a new `roofit/roofitlegacy` directory. This new library would depend on RooFitCore. RooFitCore could only have an interface dependency on RooFitLegacy to make sure that the code using RooFitLegacy classes still links. In CMake, this would look like:. ```cmake; target_link_libraries(RooFitCore INTERFACE RooFitLegacy); ```. Or maybe we can even leave this dependency out, leading to a more aggressive deprecation by making old code not link anymore. Once the RooFitLegacy library becomes large enough to visibly impact compile time, we can also make building the legacy library optional by introducing a new `roofitlegacy` cmake flag.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8759
https://github.com/root-project/root/issues/8759:546,Integrability,depend,dependency,546,"So far, deprecated RooFit code has been moved into [roofit/roofitcore/inc/RooFitLegacy](https://github.com/root-project/root/tree/master/roofit/roofitcore/inc/RooFitLegacy) and [roofit/roofitcore/src/RooFitLegacy](https://github.com/root-project/root/tree/master/roofit/roofitcore/src/RooFitLegacy). But to really separate the legacy code from the current RooFit, we want to introduce a new library called RooFitLegacy in a new `roofit/roofitlegacy` directory. This new library would depend on RooFitCore. RooFitCore could only have an interface dependency on RooFitLegacy to make sure that the code using RooFitLegacy classes still links. In CMake, this would look like:. ```cmake; target_link_libraries(RooFitCore INTERFACE RooFitLegacy); ```. Or maybe we can even leave this dependency out, leading to a more aggressive deprecation by making old code not link anymore. Once the RooFitLegacy library becomes large enough to visibly impact compile time, we can also make building the legacy library optional by introducing a new `roofitlegacy` cmake flag.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8759
https://github.com/root-project/root/issues/8759:716,Integrability,INTERFACE,INTERFACE,716,"So far, deprecated RooFit code has been moved into [roofit/roofitcore/inc/RooFitLegacy](https://github.com/root-project/root/tree/master/roofit/roofitcore/inc/RooFitLegacy) and [roofit/roofitcore/src/RooFitLegacy](https://github.com/root-project/root/tree/master/roofit/roofitcore/src/RooFitLegacy). But to really separate the legacy code from the current RooFit, we want to introduce a new library called RooFitLegacy in a new `roofit/roofitlegacy` directory. This new library would depend on RooFitCore. RooFitCore could only have an interface dependency on RooFitLegacy to make sure that the code using RooFitLegacy classes still links. In CMake, this would look like:. ```cmake; target_link_libraries(RooFitCore INTERFACE RooFitLegacy); ```. Or maybe we can even leave this dependency out, leading to a more aggressive deprecation by making old code not link anymore. Once the RooFitLegacy library becomes large enough to visibly impact compile time, we can also make building the legacy library optional by introducing a new `roofitlegacy` cmake flag.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8759
https://github.com/root-project/root/issues/8759:778,Integrability,depend,dependency,778,"So far, deprecated RooFit code has been moved into [roofit/roofitcore/inc/RooFitLegacy](https://github.com/root-project/root/tree/master/roofit/roofitcore/inc/RooFitLegacy) and [roofit/roofitcore/src/RooFitLegacy](https://github.com/root-project/root/tree/master/roofit/roofitcore/src/RooFitLegacy). But to really separate the legacy code from the current RooFit, we want to introduce a new library called RooFitLegacy in a new `roofit/roofitlegacy` directory. This new library would depend on RooFitCore. RooFitCore could only have an interface dependency on RooFitLegacy to make sure that the code using RooFitLegacy classes still links. In CMake, this would look like:. ```cmake; target_link_libraries(RooFitCore INTERFACE RooFitLegacy); ```. Or maybe we can even leave this dependency out, leading to a more aggressive deprecation by making old code not link anymore. Once the RooFitLegacy library becomes large enough to visibly impact compile time, we can also make building the legacy library optional by introducing a new `roofitlegacy` cmake flag.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8759
https://github.com/root-project/root/issues/8762:275,Availability,error,error,275,"- [X] Checked for duplicates. ### Describe the bug; Although cling supports continuation for lines ending with `,` or `\`, it seems to fail in the ROOT prompt, i.e. ; ```; root [0] const char *s = ""string "" \; root (cont'ed, cancel with .@) [1]""literal""; ROOT_prompt_0:1:26: error: expected ';' at end of declaration; const char *s = ""string "" \; ^; ;; ```; This issue is closely related to JIRA issue [ROOT-9202](https://sft.its.cern.ch/jira/browse/ROOT-9202). The problem seems to be in `TRint.cxx`, which unconditionally inserts a `#line` PP directive before each input line. This is especially visible here:; ```; root [0] #define def(arg) printf(""%s\n"", \; root (cont'ed, cancel with .@) [1]arg);; ROOT_prompt_0:2:2: error: '#' is not followed by a macro parameter; #line 1 ""ROOT_prompt_1""; ^; ROOT_prompt_0:3:4: error: extraneous ')' before ';'; arg);; ```. ### Expected behavior; As discussed, `#line` directives should not be inserted if the last input line ends with `\`.; ```; root [0] const char *s = ""string "" \; root (cont'ed, cancel with .@) [1]""literal""; (const char *) ""string literal""; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8762
https://github.com/root-project/root/issues/8762:722,Availability,error,error,722,"- [X] Checked for duplicates. ### Describe the bug; Although cling supports continuation for lines ending with `,` or `\`, it seems to fail in the ROOT prompt, i.e. ; ```; root [0] const char *s = ""string "" \; root (cont'ed, cancel with .@) [1]""literal""; ROOT_prompt_0:1:26: error: expected ';' at end of declaration; const char *s = ""string "" \; ^; ;; ```; This issue is closely related to JIRA issue [ROOT-9202](https://sft.its.cern.ch/jira/browse/ROOT-9202). The problem seems to be in `TRint.cxx`, which unconditionally inserts a `#line` PP directive before each input line. This is especially visible here:; ```; root [0] #define def(arg) printf(""%s\n"", \; root (cont'ed, cancel with .@) [1]arg);; ROOT_prompt_0:2:2: error: '#' is not followed by a macro parameter; #line 1 ""ROOT_prompt_1""; ^; ROOT_prompt_0:3:4: error: extraneous ')' before ';'; arg);; ```. ### Expected behavior; As discussed, `#line` directives should not be inserted if the last input line ends with `\`.; ```; root [0] const char *s = ""string "" \; root (cont'ed, cancel with .@) [1]""literal""; (const char *) ""string literal""; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8762
https://github.com/root-project/root/issues/8762:818,Availability,error,error,818,"- [X] Checked for duplicates. ### Describe the bug; Although cling supports continuation for lines ending with `,` or `\`, it seems to fail in the ROOT prompt, i.e. ; ```; root [0] const char *s = ""string "" \; root (cont'ed, cancel with .@) [1]""literal""; ROOT_prompt_0:1:26: error: expected ';' at end of declaration; const char *s = ""string "" \; ^; ;; ```; This issue is closely related to JIRA issue [ROOT-9202](https://sft.its.cern.ch/jira/browse/ROOT-9202). The problem seems to be in `TRint.cxx`, which unconditionally inserts a `#line` PP directive before each input line. This is especially visible here:; ```; root [0] #define def(arg) printf(""%s\n"", \; root (cont'ed, cancel with .@) [1]arg);; ROOT_prompt_0:2:2: error: '#' is not followed by a macro parameter; #line 1 ""ROOT_prompt_1""; ^; ROOT_prompt_0:3:4: error: extraneous ')' before ';'; arg);; ```. ### Expected behavior; As discussed, `#line` directives should not be inserted if the last input line ends with `\`.; ```; root [0] const char *s = ""string "" \; root (cont'ed, cancel with .@) [1]""literal""; (const char *) ""string literal""; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8762
https://github.com/root-project/root/pull/8764:883,Performance,cache,cache,883,"The commit consistently marks the `RooAbsCache` class and the derived; `RooCacheManager` and `RooObjCacheManager` classes as transient; whereever they are used in RooFit, effectively excluding them from I/O. This change was made primarily to fix a bug happening when models are; read back from a ROOT file (the pointes in `RooAbsArg::_cacheList` were; not correct anymore), but it also has the nice effect of reducing the; size of RooFit models. The classes were almost de-facto removed from I/O already, because; almost all of their data members were excluded from I/O anyway. The only; exceptions are the following data members:. * `RooObjCacheManager::_clearOnRedirect`. * `RooObjCacheManager::_allowOptimize`. * `RooAbsCache::_owner`. All of these values are set in the respective constructors and are never; changed. To make these values consistent even if a class that uses a; cache is read back from a ROOT file, the correct constructor for the; cache is now also called in the default I/O constructors of the classes. A simple reproducer to see problem with `RooAbsArg::_cacheList` after reading back the model:. ```C++; #define private public. #include ""RooWorkspace.h""; #include ""RooGaussian.h"". #include ""TFile.h"". void reproducer() {. {; RooWorkspace w(""w"",""w"");; w.factory(""RooGaussian::gaus(x[0,-10,10],mean[0,-10,10],sigma[1,0.1,10.0])"");; w.writeToFile(""file.root"");. auto gaus = w.pdf(""gaus"");; std::cout << &gaus->_normMgr << std::endl;; std::cout << gaus->getCache(0) << std::endl;; std::cout << gaus->numCaches() << std::endl;. gaus->IsA()->GetListOfDataMembers()->Print();; }. {; TFile f1(""file.root"");; auto w =f1.Get<RooWorkspace>(""w"");. auto gaus = w->pdf(""gaus"");; std::cout << &gaus->_normMgr << std::endl;; std::cout << gaus->getCache(0) << std::endl;; std::cout << gaus->numCaches() << std::endl;. delete w;; }. }; ```. Here the nice report from @will-cern (thanks!!) that motivated this PR to give some more context:. > have been recently working on a workflow that involv",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8764
https://github.com/root-project/root/pull/8764:953,Performance,cache,cache,953,"The commit consistently marks the `RooAbsCache` class and the derived; `RooCacheManager` and `RooObjCacheManager` classes as transient; whereever they are used in RooFit, effectively excluding them from I/O. This change was made primarily to fix a bug happening when models are; read back from a ROOT file (the pointes in `RooAbsArg::_cacheList` were; not correct anymore), but it also has the nice effect of reducing the; size of RooFit models. The classes were almost de-facto removed from I/O already, because; almost all of their data members were excluded from I/O anyway. The only; exceptions are the following data members:. * `RooObjCacheManager::_clearOnRedirect`. * `RooObjCacheManager::_allowOptimize`. * `RooAbsCache::_owner`. All of these values are set in the respective constructors and are never; changed. To make these values consistent even if a class that uses a; cache is read back from a ROOT file, the correct constructor for the; cache is now also called in the default I/O constructors of the classes. A simple reproducer to see problem with `RooAbsArg::_cacheList` after reading back the model:. ```C++; #define private public. #include ""RooWorkspace.h""; #include ""RooGaussian.h"". #include ""TFile.h"". void reproducer() {. {; RooWorkspace w(""w"",""w"");; w.factory(""RooGaussian::gaus(x[0,-10,10],mean[0,-10,10],sigma[1,0.1,10.0])"");; w.writeToFile(""file.root"");. auto gaus = w.pdf(""gaus"");; std::cout << &gaus->_normMgr << std::endl;; std::cout << gaus->getCache(0) << std::endl;; std::cout << gaus->numCaches() << std::endl;. gaus->IsA()->GetListOfDataMembers()->Print();; }. {; TFile f1(""file.root"");; auto w =f1.Get<RooWorkspace>(""w"");. auto gaus = w->pdf(""gaus"");; std::cout << &gaus->_normMgr << std::endl;; std::cout << gaus->getCache(0) << std::endl;; std::cout << gaus->numCaches() << std::endl;. delete w;; }. }; ```. Here the nice report from @will-cern (thanks!!) that motivated this PR to give some more context:. > have been recently working on a workflow that involv",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8764
https://github.com/root-project/root/pull/8764:3316,Performance,cache,caches,3316,"aces, and I wanted to understand why this was leaking a lot of memory. This is in 6.22/08 but I think the problems persist in master. Thankfully the biggest leak is easy to fix and I'll make a PR for that soon (workspace not cleaning up all its RooLinkedLists). But the next biggest one has taken me a while to understand....; <br>Valgrind reported lots of leaking of RooObjCacheManager instances. I believe a way to evidence this is with a minimal reproducer (see above).; <br>If you track how many times a RooObjCacheManager is constructed with these lines, the first line constructs one of them (the `_normMgr` of the RooAbsPdf class). But when the file is read back in on the second line, I see two RooObjCacheManagers get constructed. The first one comes from the constructor of the RooAbsPdf (via the gaussian), but the second comes from streaming of the RooAbsArg base class which contains a `std::deque<RooAbsCache*> _cacheList`. ; <br>So what I'm seeing is that in the first line where the pdf is first created, the `_normMgr` (which is declared as `RooObjCacheManager _normMgr` in `RooAbsPdf`) is the same as the one in the `_cacheList`. But when you read back the pdf in the second line, the `_normMgr` no longer is the same as the one in the `_cacheList` -- both caches (the one in the `_cacheList` and the `_normMgr`) have the gaus as its owner, but they are distinct objects and when the gaus is deleted I assume the one in the `_cacheList` doesnt get destroyed, causing the leak. ; <br>If my diagnosis is correct, then I dunno what would be the correct way to fix this, the best way I can think of so far would be making `RooObjCacheManager` always be a pointer rather than an instance data member. Do others have thoughts?; <br>Worth acknowledging the problem probably isn't just a memory leak when we have an inconsistency between the list of caches in the `RooAbsArg` base class vs the actual caches the derived classes might be interacting with directly, but i havent studied that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8764
https://github.com/root-project/root/pull/8764:3901,Performance,cache,caches,3901,"aces, and I wanted to understand why this was leaking a lot of memory. This is in 6.22/08 but I think the problems persist in master. Thankfully the biggest leak is easy to fix and I'll make a PR for that soon (workspace not cleaning up all its RooLinkedLists). But the next biggest one has taken me a while to understand....; <br>Valgrind reported lots of leaking of RooObjCacheManager instances. I believe a way to evidence this is with a minimal reproducer (see above).; <br>If you track how many times a RooObjCacheManager is constructed with these lines, the first line constructs one of them (the `_normMgr` of the RooAbsPdf class). But when the file is read back in on the second line, I see two RooObjCacheManagers get constructed. The first one comes from the constructor of the RooAbsPdf (via the gaussian), but the second comes from streaming of the RooAbsArg base class which contains a `std::deque<RooAbsCache*> _cacheList`. ; <br>So what I'm seeing is that in the first line where the pdf is first created, the `_normMgr` (which is declared as `RooObjCacheManager _normMgr` in `RooAbsPdf`) is the same as the one in the `_cacheList`. But when you read back the pdf in the second line, the `_normMgr` no longer is the same as the one in the `_cacheList` -- both caches (the one in the `_cacheList` and the `_normMgr`) have the gaus as its owner, but they are distinct objects and when the gaus is deleted I assume the one in the `_cacheList` doesnt get destroyed, causing the leak. ; <br>If my diagnosis is correct, then I dunno what would be the correct way to fix this, the best way I can think of so far would be making `RooObjCacheManager` always be a pointer rather than an instance data member. Do others have thoughts?; <br>Worth acknowledging the problem probably isn't just a memory leak when we have an inconsistency between the list of caches in the `RooAbsArg` base class vs the actual caches the derived classes might be interacting with directly, but i havent studied that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8764
https://github.com/root-project/root/pull/8764:3952,Performance,cache,caches,3952,"aces, and I wanted to understand why this was leaking a lot of memory. This is in 6.22/08 but I think the problems persist in master. Thankfully the biggest leak is easy to fix and I'll make a PR for that soon (workspace not cleaning up all its RooLinkedLists). But the next biggest one has taken me a while to understand....; <br>Valgrind reported lots of leaking of RooObjCacheManager instances. I believe a way to evidence this is with a minimal reproducer (see above).; <br>If you track how many times a RooObjCacheManager is constructed with these lines, the first line constructs one of them (the `_normMgr` of the RooAbsPdf class). But when the file is read back in on the second line, I see two RooObjCacheManagers get constructed. The first one comes from the constructor of the RooAbsPdf (via the gaussian), but the second comes from streaming of the RooAbsArg base class which contains a `std::deque<RooAbsCache*> _cacheList`. ; <br>So what I'm seeing is that in the first line where the pdf is first created, the `_normMgr` (which is declared as `RooObjCacheManager _normMgr` in `RooAbsPdf`) is the same as the one in the `_cacheList`. But when you read back the pdf in the second line, the `_normMgr` no longer is the same as the one in the `_cacheList` -- both caches (the one in the `_cacheList` and the `_normMgr`) have the gaus as its owner, but they are distinct objects and when the gaus is deleted I assume the one in the `_cacheList` doesnt get destroyed, causing the leak. ; <br>If my diagnosis is correct, then I dunno what would be the correct way to fix this, the best way I can think of so far would be making `RooObjCacheManager` always be a pointer rather than an instance data member. Do others have thoughts?; <br>Worth acknowledging the problem probably isn't just a memory leak when we have an inconsistency between the list of caches in the `RooAbsArg` base class vs the actual caches the derived classes might be interacting with directly, but i havent studied that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8764
https://github.com/root-project/root/pull/8764:1028,Usability,simpl,simple,1028,"RooCacheManager` and `RooObjCacheManager` classes as transient; whereever they are used in RooFit, effectively excluding them from I/O. This change was made primarily to fix a bug happening when models are; read back from a ROOT file (the pointes in `RooAbsArg::_cacheList` were; not correct anymore), but it also has the nice effect of reducing the; size of RooFit models. The classes were almost de-facto removed from I/O already, because; almost all of their data members were excluded from I/O anyway. The only; exceptions are the following data members:. * `RooObjCacheManager::_clearOnRedirect`. * `RooObjCacheManager::_allowOptimize`. * `RooAbsCache::_owner`. All of these values are set in the respective constructors and are never; changed. To make these values consistent even if a class that uses a; cache is read back from a ROOT file, the correct constructor for the; cache is now also called in the default I/O constructors of the classes. A simple reproducer to see problem with `RooAbsArg::_cacheList` after reading back the model:. ```C++; #define private public. #include ""RooWorkspace.h""; #include ""RooGaussian.h"". #include ""TFile.h"". void reproducer() {. {; RooWorkspace w(""w"",""w"");; w.factory(""RooGaussian::gaus(x[0,-10,10],mean[0,-10,10],sigma[1,0.1,10.0])"");; w.writeToFile(""file.root"");. auto gaus = w.pdf(""gaus"");; std::cout << &gaus->_normMgr << std::endl;; std::cout << gaus->getCache(0) << std::endl;; std::cout << gaus->numCaches() << std::endl;. gaus->IsA()->GetListOfDataMembers()->Print();; }. {; TFile f1(""file.root"");; auto w =f1.Get<RooWorkspace>(""w"");. auto gaus = w->pdf(""gaus"");; std::cout << &gaus->_normMgr << std::endl;; std::cout << gaus->getCache(0) << std::endl;; std::cout << gaus->numCaches() << std::endl;. delete w;; }. }; ```. Here the nice report from @will-cern (thanks!!) that motivated this PR to give some more context:. > have been recently working on a workflow that involved repeatedly writing and reading workspaces, and I wanted to understand",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8764
https://github.com/root-project/root/pull/8766:41,Deployability,release,release,41,Fixes #8141. This PR requires a new clad release v0.9. The clad master is incompatible with ROOT atm and the release of 0.9 depends on #8371,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8766
https://github.com/root-project/root/pull/8766:109,Deployability,release,release,109,Fixes #8141. This PR requires a new clad release v0.9. The clad master is incompatible with ROOT atm and the release of 0.9 depends on #8371,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8766
https://github.com/root-project/root/pull/8766:124,Integrability,depend,depends,124,Fixes #8141. This PR requires a new clad release v0.9. The clad master is incompatible with ROOT atm and the release of 0.9 depends on #8371,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8766
https://github.com/root-project/root/issues/8767:2660,Availability,error,error,2660,"ff7af4f5f in at_exit_of_TROOT () at /home/matevz/root-dev/dev-1/core/base/src/TROOT.cxx:290; #13 0x00007ffff7317247 in __run_exit_handlers () from /lib64/libc.so.6; #14 0x00007ffff73173f0 in exit () from /lib64/libc.so.6; #15 0x00007ffff7c91627 in TUnixSystem::Exit (this=0x42a800, code=0, mode=true) at /home/matevz/root-dev/dev-1/core/unix/src/TUnixSystem.cxx:2157; #16 0x00007ffff7b0cc16 in TApplication::Terminate (this=0x482000, status=0) at /home/matevz/root-dev/dev-1/core/base/src/TApplication.cxx:1672; #17 0x00007ffff7facf9d in TRint::Terminate (this=0x482000, status=0) at /home/matevz/root-dev/dev-1/core/rint/src/TRint.cxx:696; #18 0x00007ffff7b0b37d in TApplication::ProcessLine (this=0x482000, line=0x7fffffffb589 "".q"", sync=false, err=0x7fffffffb51c); at /home/matevz/root-dev/dev-1/core/base/src/TApplication.cxx:1334; #19 0x00007ffff7fad334 in TRint::ProcessLineNr (this=0x482000, filestem=0x7ffff7fbd6cf ""ROOT_prompt_"", line=0x7fffffffb589 "".q"", error=0x7fffffffb51c); at /home/matevz/root-dev/dev-1/core/rint/src/TRint.cxx:766; #20 0x00007ffff7facab4 in TRint::HandleTermInput (this=0x482000) at /home/matevz/root-dev/dev-1/core/rint/src/TRint.cxx:612; #21 0x00007ffff7faa5c5 in TTermInputHandler::Notify (this=0x1381dc0) at /home/matevz/root-dev/dev-1/core/rint/src/TRint.cxx:132; #22 0x00007ffff7fae98f in TTermInputHandler::ReadNotify (this=0x1381dc0) at /home/matevz/root-dev/dev-1/core/rint/src/TRint.cxx:124; #23 0x00007ffff7c8fa8a in TUnixSystem::CheckDescriptors (this=0x42a800) at /home/matevz/root-dev/dev-1/core/unix/src/TUnixSystem.cxx:1322; #24 0x00007ffff7c8eec6 in TUnixSystem::DispatchOneEvent (this=0x42a800, pendingOnly=false); at /home/matevz/root-dev/dev-1/core/unix/src/TUnixSystem.cxx:1077; #25 0x00007ffff7b7e773 in TSystem::InnerLoop (this=0x42a800) at /home/matevz/root-dev/dev-1/core/base/src/TSystem.cxx:406; #26 0x00007ffff7b7e519 in TSystem::Run (this=0x42a800) at /home/matevz/root-dev/dev-1/core/base/src/TSystem.cxx:356; #27 0x00007ffff7b0c963 in T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8767
https://github.com/root-project/root/issues/8767:968,Performance,optimiz,optimized,968,"root master, xrootd-5.3.0. To reproduce: TFile::Open(""root://.....""), then .q root. I will also post this to xrootd git. ```; 0x00007ffff74b1a66 in pthread_rwlock_rdlock () from /lib64/libpthread.so.0; (gdb) bt; #0 0x00007ffff74b1a66 in pthread_rwlock_rdlock () from /lib64/libpthread.so.0; #1 0x00007fffe91ecd62 in XrdCl::Env::GetInt(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int&) (); from /lib64/libXrdCl.so.3; #2 0x00007fffe9207a39 in XrdCl::PostMaster::PostMaster() () from /lib64/libXrdCl.so.3; #3 0x00007fffe91fed5e in XrdCl::DefaultEnv::GetPostMaster() () from /lib64/libXrdCl.so.3; #4 0x00007fffe9245fc5 in XrdCl::FileStateHandler::~FileStateHandler() () from /lib64/libXrdCl.so.3; #5 0x00007fffe9243bd0 in XrdCl::File::~File() () from /lib64/libXrdCl.so.3; #6 0x00007fffe9243c6d in XrdCl::File::~File() () from /lib64/libXrdCl.so.3; #7 0x00007fffef69630f in TNetXNGFile::~TNetXNGFile (this=0x2019f20, __in_chrg=<optimized out>); at /home/matevz/root-dev/dev-1/net/netxng/src/TNetXNGFile.cxx:233; #8 0x00007fffef696396 in TNetXNGFile::~TNetXNGFile (this=0x2019f20, __in_chrg=<optimized out>); at /home/matevz/root-dev/dev-1/net/netxng/src/TNetXNGFile.cxx:236; #9 0x00007ffff7bc5ad3 in TCollection::GarbageCollect (obj=0x2019f20) at /home/matevz/root-dev/dev-1/core/cont/src/TCollection.cxx:736; #10 0x00007ffff7bcdbe5 in TList::Delete (this=0x4307c0, option=0x7ffff7e1726b ""slow"") at /home/matevz/root-dev/dev-1/core/cont/src/TList.cxx:508; #11 0x00007ffff7af756b in TROOT::~TROOT (this=0x7ffff7f5a900 <ROOT::Internal::GetROOT1()::alloc>, __in_chrg=<optimized out>); at /home/matevz/root-dev/dev-1/core/base/src/TROOT.cxx:889; #12 0x00007ffff7af4f5f in at_exit_of_TROOT () at /home/matevz/root-dev/dev-1/core/base/src/TROOT.cxx:290; #13 0x00007ffff7317247 in __run_exit_handlers () from /lib64/libc.so.6; #14 0x00007ffff73173f0 in exit () from /lib64/libc.so.6; #15 0x00007ffff7c91627 in TUnixSystem::Exit (this=0x42a800, code=0, mode=true) at /h",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8767
https://github.com/root-project/root/issues/8767:1131,Performance,optimiz,optimized,1131,"; 0x00007ffff74b1a66 in pthread_rwlock_rdlock () from /lib64/libpthread.so.0; (gdb) bt; #0 0x00007ffff74b1a66 in pthread_rwlock_rdlock () from /lib64/libpthread.so.0; #1 0x00007fffe91ecd62 in XrdCl::Env::GetInt(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int&) (); from /lib64/libXrdCl.so.3; #2 0x00007fffe9207a39 in XrdCl::PostMaster::PostMaster() () from /lib64/libXrdCl.so.3; #3 0x00007fffe91fed5e in XrdCl::DefaultEnv::GetPostMaster() () from /lib64/libXrdCl.so.3; #4 0x00007fffe9245fc5 in XrdCl::FileStateHandler::~FileStateHandler() () from /lib64/libXrdCl.so.3; #5 0x00007fffe9243bd0 in XrdCl::File::~File() () from /lib64/libXrdCl.so.3; #6 0x00007fffe9243c6d in XrdCl::File::~File() () from /lib64/libXrdCl.so.3; #7 0x00007fffef69630f in TNetXNGFile::~TNetXNGFile (this=0x2019f20, __in_chrg=<optimized out>); at /home/matevz/root-dev/dev-1/net/netxng/src/TNetXNGFile.cxx:233; #8 0x00007fffef696396 in TNetXNGFile::~TNetXNGFile (this=0x2019f20, __in_chrg=<optimized out>); at /home/matevz/root-dev/dev-1/net/netxng/src/TNetXNGFile.cxx:236; #9 0x00007ffff7bc5ad3 in TCollection::GarbageCollect (obj=0x2019f20) at /home/matevz/root-dev/dev-1/core/cont/src/TCollection.cxx:736; #10 0x00007ffff7bcdbe5 in TList::Delete (this=0x4307c0, option=0x7ffff7e1726b ""slow"") at /home/matevz/root-dev/dev-1/core/cont/src/TList.cxx:508; #11 0x00007ffff7af756b in TROOT::~TROOT (this=0x7ffff7f5a900 <ROOT::Internal::GetROOT1()::alloc>, __in_chrg=<optimized out>); at /home/matevz/root-dev/dev-1/core/base/src/TROOT.cxx:889; #12 0x00007ffff7af4f5f in at_exit_of_TROOT () at /home/matevz/root-dev/dev-1/core/base/src/TROOT.cxx:290; #13 0x00007ffff7317247 in __run_exit_handlers () from /lib64/libc.so.6; #14 0x00007ffff73173f0 in exit () from /lib64/libc.so.6; #15 0x00007ffff7c91627 in TUnixSystem::Exit (this=0x42a800, code=0, mode=true) at /home/matevz/root-dev/dev-1/core/unix/src/TUnixSystem.cxx:2157; #16 0x00007ffff7b0cc16 in TApplication::Terminate (this=0x4820",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8767
https://github.com/root-project/root/issues/8767:1605,Performance,optimiz,optimized,1605,"efaultEnv::GetPostMaster() () from /lib64/libXrdCl.so.3; #4 0x00007fffe9245fc5 in XrdCl::FileStateHandler::~FileStateHandler() () from /lib64/libXrdCl.so.3; #5 0x00007fffe9243bd0 in XrdCl::File::~File() () from /lib64/libXrdCl.so.3; #6 0x00007fffe9243c6d in XrdCl::File::~File() () from /lib64/libXrdCl.so.3; #7 0x00007fffef69630f in TNetXNGFile::~TNetXNGFile (this=0x2019f20, __in_chrg=<optimized out>); at /home/matevz/root-dev/dev-1/net/netxng/src/TNetXNGFile.cxx:233; #8 0x00007fffef696396 in TNetXNGFile::~TNetXNGFile (this=0x2019f20, __in_chrg=<optimized out>); at /home/matevz/root-dev/dev-1/net/netxng/src/TNetXNGFile.cxx:236; #9 0x00007ffff7bc5ad3 in TCollection::GarbageCollect (obj=0x2019f20) at /home/matevz/root-dev/dev-1/core/cont/src/TCollection.cxx:736; #10 0x00007ffff7bcdbe5 in TList::Delete (this=0x4307c0, option=0x7ffff7e1726b ""slow"") at /home/matevz/root-dev/dev-1/core/cont/src/TList.cxx:508; #11 0x00007ffff7af756b in TROOT::~TROOT (this=0x7ffff7f5a900 <ROOT::Internal::GetROOT1()::alloc>, __in_chrg=<optimized out>); at /home/matevz/root-dev/dev-1/core/base/src/TROOT.cxx:889; #12 0x00007ffff7af4f5f in at_exit_of_TROOT () at /home/matevz/root-dev/dev-1/core/base/src/TROOT.cxx:290; #13 0x00007ffff7317247 in __run_exit_handlers () from /lib64/libc.so.6; #14 0x00007ffff73173f0 in exit () from /lib64/libc.so.6; #15 0x00007ffff7c91627 in TUnixSystem::Exit (this=0x42a800, code=0, mode=true) at /home/matevz/root-dev/dev-1/core/unix/src/TUnixSystem.cxx:2157; #16 0x00007ffff7b0cc16 in TApplication::Terminate (this=0x482000, status=0) at /home/matevz/root-dev/dev-1/core/base/src/TApplication.cxx:1672; #17 0x00007ffff7facf9d in TRint::Terminate (this=0x482000, status=0) at /home/matevz/root-dev/dev-1/core/rint/src/TRint.cxx:696; #18 0x00007ffff7b0b37d in TApplication::ProcessLine (this=0x482000, line=0x7fffffffb589 "".q"", sync=false, err=0x7fffffffb51c); at /home/matevz/root-dev/dev-1/core/base/src/TApplication.cxx:1334; #19 0x00007ffff7fad334 in TRint::ProcessLineNr (t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8767
https://github.com/root-project/root/pull/8768:5,Deployability,hotfix,hotfixes,5,"This hotfixes the crashes seen in the recent PR builds. However, having to use `std::move` in pyROOT is quite unpythonic and we; should think about an improved interface for creating RooFit datasets; from RDataFrame in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8768
https://github.com/root-project/root/pull/8768:160,Integrability,interface,interface,160,"This hotfixes the crashes seen in the recent PR builds. However, having to use `std::move` in pyROOT is quite unpythonic and we; should think about an improved interface for creating RooFit datasets; from RDataFrame in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8768
https://github.com/root-project/root/pull/8770:451,Deployability,update,updated,451,This PR:; - adds the RRVecField type for type-erased I/O of RVecs with RNTuple; - removes some special-casing of `RVec<bool>` which is unnecessary now that we have RVec 2.0; - adds RPrintValueVisitor support for RVecs; - adds tests for type-erased I/O of RVecs; - adds tests for `ntuple->Show` + RVecs; - adds tests for interop I/O of std::vectors and RVecs (i.e. writing one and reading the other). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary): I don't think it's necessary. This PR fixes #6347 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8770
https://github.com/root-project/root/pull/8770:226,Testability,test,tests,226,This PR:; - adds the RRVecField type for type-erased I/O of RVecs with RNTuple; - removes some special-casing of `RVec<bool>` which is unnecessary now that we have RVec 2.0; - adds RPrintValueVisitor support for RVecs; - adds tests for type-erased I/O of RVecs; - adds tests for `ntuple->Show` + RVecs; - adds tests for interop I/O of std::vectors and RVecs (i.e. writing one and reading the other). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary): I don't think it's necessary. This PR fixes #6347 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8770
https://github.com/root-project/root/pull/8770:269,Testability,test,tests,269,This PR:; - adds the RRVecField type for type-erased I/O of RVecs with RNTuple; - removes some special-casing of `RVec<bool>` which is unnecessary now that we have RVec 2.0; - adds RPrintValueVisitor support for RVecs; - adds tests for type-erased I/O of RVecs; - adds tests for `ntuple->Show` + RVecs; - adds tests for interop I/O of std::vectors and RVecs (i.e. writing one and reading the other). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary): I don't think it's necessary. This PR fixes #6347 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8770
https://github.com/root-project/root/pull/8770:310,Testability,test,tests,310,This PR:; - adds the RRVecField type for type-erased I/O of RVecs with RNTuple; - removes some special-casing of `RVec<bool>` which is unnecessary now that we have RVec 2.0; - adds RPrintValueVisitor support for RVecs; - adds tests for type-erased I/O of RVecs; - adds tests for `ntuple->Show` + RVecs; - adds tests for interop I/O of std::vectors and RVecs (i.e. writing one and reading the other). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary): I don't think it's necessary. This PR fixes #6347 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8770
https://github.com/root-project/root/pull/8770:421,Testability,test,tested,421,This PR:; - adds the RRVecField type for type-erased I/O of RVecs with RNTuple; - removes some special-casing of `RVec<bool>` which is unnecessary now that we have RVec 2.0; - adds RPrintValueVisitor support for RVecs; - adds tests for type-erased I/O of RVecs; - adds tests for `ntuple->Show` + RVecs; - adds tests for interop I/O of std::vectors and RVecs (i.e. writing one and reading the other). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary): I don't think it's necessary. This PR fixes #6347 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8770
https://github.com/root-project/root/pull/8771:95,Modifiability,maintainab,maintainable,95,"This pull request replaces the implementation of `InputValidator::validate()` by simpler, more maintainable code that also fixes JIRA issue [ROOT-9202](https://sft.its.cern.ch/jira/browse/ROOT-9202). The previous implementation was unable to properly handle line continuation after ',' or '\\'. Specifically, it skipped over non-punctuation tokens, entering continuation mode even if ',' or '\' were not the last tokens in the input, e.g.; ```; int a, b; ```; or; ```; int a \ b; ```; caused cling to request more input, where it shouldn't. ## Changes or fixes:; - MetaLexer:; - Return `/*` and `*/` as independent tokens.; - Added `ReadToEndOfLine()` function (consume input until '\r', '\n', or EOF).; - Added `MetaLexer::RAII` that saves the current lexing position and restores it on destruction.; - Remove unused `LexPunctuatorAndAdvance()`.; - Rewrite of `InputValidator::validate()`. ## Checklist:; - [X] tested changes locally. Fixes [ROOT-9202](https://sft.its.cern.ch/jira/browse/ROOT-9202).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8771
https://github.com/root-project/root/pull/8771:850,Modifiability,Rewrite,Rewrite,850,"This pull request replaces the implementation of `InputValidator::validate()` by simpler, more maintainable code that also fixes JIRA issue [ROOT-9202](https://sft.its.cern.ch/jira/browse/ROOT-9202). The previous implementation was unable to properly handle line continuation after ',' or '\\'. Specifically, it skipped over non-punctuation tokens, entering continuation mode even if ',' or '\' were not the last tokens in the input, e.g.; ```; int a, b; ```; or; ```; int a \ b; ```; caused cling to request more input, where it shouldn't. ## Changes or fixes:; - MetaLexer:; - Return `/*` and `*/` as independent tokens.; - Added `ReadToEndOfLine()` function (consume input until '\r', '\n', or EOF).; - Added `MetaLexer::RAII` that saves the current lexing position and restores it on destruction.; - Remove unused `LexPunctuatorAndAdvance()`.; - Rewrite of `InputValidator::validate()`. ## Checklist:; - [X] tested changes locally. Fixes [ROOT-9202](https://sft.its.cern.ch/jira/browse/ROOT-9202).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8771
https://github.com/root-project/root/pull/8771:66,Security,validat,validate,66,"This pull request replaces the implementation of `InputValidator::validate()` by simpler, more maintainable code that also fixes JIRA issue [ROOT-9202](https://sft.its.cern.ch/jira/browse/ROOT-9202). The previous implementation was unable to properly handle line continuation after ',' or '\\'. Specifically, it skipped over non-punctuation tokens, entering continuation mode even if ',' or '\' were not the last tokens in the input, e.g.; ```; int a, b; ```; or; ```; int a \ b; ```; caused cling to request more input, where it shouldn't. ## Changes or fixes:; - MetaLexer:; - Return `/*` and `*/` as independent tokens.; - Added `ReadToEndOfLine()` function (consume input until '\r', '\n', or EOF).; - Added `MetaLexer::RAII` that saves the current lexing position and restores it on destruction.; - Remove unused `LexPunctuatorAndAdvance()`.; - Rewrite of `InputValidator::validate()`. ## Checklist:; - [X] tested changes locally. Fixes [ROOT-9202](https://sft.its.cern.ch/jira/browse/ROOT-9202).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8771
https://github.com/root-project/root/pull/8771:878,Security,validat,validate,878,"This pull request replaces the implementation of `InputValidator::validate()` by simpler, more maintainable code that also fixes JIRA issue [ROOT-9202](https://sft.its.cern.ch/jira/browse/ROOT-9202). The previous implementation was unable to properly handle line continuation after ',' or '\\'. Specifically, it skipped over non-punctuation tokens, entering continuation mode even if ',' or '\' were not the last tokens in the input, e.g.; ```; int a, b; ```; or; ```; int a \ b; ```; caused cling to request more input, where it shouldn't. ## Changes or fixes:; - MetaLexer:; - Return `/*` and `*/` as independent tokens.; - Added `ReadToEndOfLine()` function (consume input until '\r', '\n', or EOF).; - Added `MetaLexer::RAII` that saves the current lexing position and restores it on destruction.; - Remove unused `LexPunctuatorAndAdvance()`.; - Rewrite of `InputValidator::validate()`. ## Checklist:; - [X] tested changes locally. Fixes [ROOT-9202](https://sft.its.cern.ch/jira/browse/ROOT-9202).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8771
https://github.com/root-project/root/pull/8771:912,Testability,test,tested,912,"This pull request replaces the implementation of `InputValidator::validate()` by simpler, more maintainable code that also fixes JIRA issue [ROOT-9202](https://sft.its.cern.ch/jira/browse/ROOT-9202). The previous implementation was unable to properly handle line continuation after ',' or '\\'. Specifically, it skipped over non-punctuation tokens, entering continuation mode even if ',' or '\' were not the last tokens in the input, e.g.; ```; int a, b; ```; or; ```; int a \ b; ```; caused cling to request more input, where it shouldn't. ## Changes or fixes:; - MetaLexer:; - Return `/*` and `*/` as independent tokens.; - Added `ReadToEndOfLine()` function (consume input until '\r', '\n', or EOF).; - Added `MetaLexer::RAII` that saves the current lexing position and restores it on destruction.; - Remove unused `LexPunctuatorAndAdvance()`.; - Rewrite of `InputValidator::validate()`. ## Checklist:; - [X] tested changes locally. Fixes [ROOT-9202](https://sft.its.cern.ch/jira/browse/ROOT-9202).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8771
https://github.com/root-project/root/pull/8771:81,Usability,simpl,simpler,81,"This pull request replaces the implementation of `InputValidator::validate()` by simpler, more maintainable code that also fixes JIRA issue [ROOT-9202](https://sft.its.cern.ch/jira/browse/ROOT-9202). The previous implementation was unable to properly handle line continuation after ',' or '\\'. Specifically, it skipped over non-punctuation tokens, entering continuation mode even if ',' or '\' were not the last tokens in the input, e.g.; ```; int a, b; ```; or; ```; int a \ b; ```; caused cling to request more input, where it shouldn't. ## Changes or fixes:; - MetaLexer:; - Return `/*` and `*/` as independent tokens.; - Added `ReadToEndOfLine()` function (consume input until '\r', '\n', or EOF).; - Added `MetaLexer::RAII` that saves the current lexing position and restores it on destruction.; - Remove unused `LexPunctuatorAndAdvance()`.; - Rewrite of `InputValidator::validate()`. ## Checklist:; - [X] tested changes locally. Fixes [ROOT-9202](https://sft.its.cern.ch/jira/browse/ROOT-9202).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8771
https://github.com/root-project/root/pull/8772:307,Availability,error,error,307,"To have better diagnostics, `TRint::ProcessLineNr()` prepends a `#line 1 ""ROOT_prompt_xxx""` PP directive to each input line. However, this causes problems if the previous line is continued with '\\', e.g.; ```; root [0] #define m(x) printf(""%s"", \; root (cont'ed, cancel with .@) [1]x);; ROOT_prompt_0:2:2: error; '#' is not followed by a macro parameter; ^; ROOT_prompt_0:3:1: error; use of undeclared identifier 'x'; x);; ^; ```. This PR fixes issue #8762. ## Checklist:; - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8772
https://github.com/root-project/root/pull/8772:378,Availability,error,error,378,"To have better diagnostics, `TRint::ProcessLineNr()` prepends a `#line 1 ""ROOT_prompt_xxx""` PP directive to each input line. However, this causes problems if the previous line is continued with '\\', e.g.; ```; root [0] #define m(x) printf(""%s"", \; root (cont'ed, cancel with .@) [1]x);; ROOT_prompt_0:2:2: error; '#' is not followed by a macro parameter; ^; ROOT_prompt_0:3:1: error; use of undeclared identifier 'x'; x);; ^; ```. This PR fixes issue #8762. ## Checklist:; - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8772
https://github.com/root-project/root/pull/8772:480,Testability,test,tested,480,"To have better diagnostics, `TRint::ProcessLineNr()` prepends a `#line 1 ""ROOT_prompt_xxx""` PP directive to each input line. However, this causes problems if the previous line is continued with '\\', e.g.; ```; root [0] #define m(x) printf(""%s"", \; root (cont'ed, cancel with .@) [1]x);; ROOT_prompt_0:2:2: error; '#' is not followed by a macro parameter; ^; ROOT_prompt_0:3:1: error; use of undeclared identifier 'x'; x);; ^; ```. This PR fixes issue #8762. ## Checklist:; - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8772
https://github.com/root-project/root/issues/8774:292,Integrability,depend,dependent,292,"### Is your feature request related to a problem? Please describe.; A long-standing TGaxis issue is that calling secondaryXaxis->SetMaxDigits(N) affects all other X and Y axes in the current canvas. ### Describe the solution you'd like; TGaxis::SetMaxDigits, StripDecimals, etc. are all axes-dependent and don't affect the default state of other axes. ### Additional context; https://root-forum.cern.ch/t/tgaxis-setmaxdigits/11543/2?u=ferhue; https://sft.its.cern.ch/jira/browse/ROOT-35; https://root-forum.cern.ch/t/tgaxis-setmaxdigits-not-working-as-expected/2889/3; https://root-forum.cern.ch/t/tgaxis-and-setmaxdigits/19425/5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8774
https://github.com/root-project/root/issues/8775:76,Usability,clear,clear,76,"### Is your feature request related to a problem? Please describe.; <!--; A clear and concise description of what the problem is. E.g ""I always have to [idk] when I want to [brb]; -->. ### Describe the solution you'd like; <!--; A clear and concise description of what you want to happen.; -->. ### Describe alternatives you've considered; <!--; Can you think of alternative solutions or features?; Hype; -->. ### Additional context; <!--; Add any other context or screenshots about the feature requested here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8775
https://github.com/root-project/root/issues/8775:231,Usability,clear,clear,231,"### Is your feature request related to a problem? Please describe.; <!--; A clear and concise description of what the problem is. E.g ""I always have to [idk] when I want to [brb]; -->. ### Describe the solution you'd like; <!--; A clear and concise description of what you want to happen.; -->. ### Describe alternatives you've considered; <!--; Can you think of alternative solutions or features?; Hype; -->. ### Additional context; <!--; Add any other context or screenshots about the feature requested here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8775
https://github.com/root-project/root/pull/8776:4,Deployability,patch,patch,4,The patch is a side-effect of addressing your comments in https://github.com/root-project/root/pull/8770,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8776
https://github.com/root-project/root/issues/8777:1064,Availability,error,errors,1064,"to get started contributing to ROOT with a well-defined task!**. **This issue has already been addressed partially by many PRs, the only remaining iterator-creating function to look out for and replace is **`RooLinkedList::MakeIterator()`**!**. ## Introduction. RooFit needs to be migrated to use range-based loops to iterate over RooArgLists, RooArgSets, and RooLinkedLists. The [deprecated iterator-creating functions](https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooAbsCollection.h#L178) `RooAbsCollection::createIterator()`, `RooAbsCollection::iterator()`, and `RooAbsCollection::fwdIterator()` have some overhead both is code verbosity and performance. For the RooLinkedList, the relevant function calls to replace are `RooLinkedList::MakeIterator()`, `RooLinkedList::iterator()`, and `RooLinkedList::fwdIterator()`. To do the migration, one could remove the deprecated functions from the code and try to recompile ROOT. From the compiler errors, one can see where a migration away from the legacy iterators is needed. Alternatively, one could mark the legacy functions as `[[deprecated]]` and get compiler warnings. If the iteration involved a type casting of each item, one can also use the `static_range_cast` and `dynamic_range_cast` functions in RooFit to make the code more compact (introduced in https://github.com/root-project/root/pull/8769). It is not expected that the full migration is done in one pull request, as these legacy iterations appear everywhere in RooFit. One can proceed with occasional PRs, migrating only one or a few RooFit classes at the time. ## Migration examples. Here are some examples on how the migration to range-based loops can look like. 1. Basic example:; ```C++; // with legacy iterator; TIterator* iter = comps->createIterator() ;; while((arg=(RooAbsArg*)iter->Next())) { ; // do something with arg; }; ```. ```C++; // with range-based loop; for(auto const* arg : *comps) { ; // do something with arg; }; ```. 2. Example where o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8777
https://github.com/root-project/root/issues/8777:765,Performance,perform,performance,765,"**This migration is a great first issue for an enthusiastic open source contributor who wants to get started contributing to ROOT with a well-defined task!**. **This issue has already been addressed partially by many PRs, the only remaining iterator-creating function to look out for and replace is **`RooLinkedList::MakeIterator()`**!**. ## Introduction. RooFit needs to be migrated to use range-based loops to iterate over RooArgLists, RooArgSets, and RooLinkedLists. The [deprecated iterator-creating functions](https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooAbsCollection.h#L178) `RooAbsCollection::createIterator()`, `RooAbsCollection::iterator()`, and `RooAbsCollection::fwdIterator()` have some overhead both is code verbosity and performance. For the RooLinkedList, the relevant function calls to replace are `RooLinkedList::MakeIterator()`, `RooLinkedList::iterator()`, and `RooLinkedList::fwdIterator()`. To do the migration, one could remove the deprecated functions from the code and try to recompile ROOT. From the compiler errors, one can see where a migration away from the legacy iterators is needed. Alternatively, one could mark the legacy functions as `[[deprecated]]` and get compiler warnings. If the iteration involved a type casting of each item, one can also use the `static_range_cast` and `dynamic_range_cast` functions in RooFit to make the code more compact (introduced in https://github.com/root-project/root/pull/8769). It is not expected that the full migration is done in one pull request, as these legacy iterations appear everywhere in RooFit. One can proceed with occasional PRs, migrating only one or a few RooFit classes at the time. ## Migration examples. Here are some examples on how the migration to range-based loops can look like. 1. Basic example:; ```C++; // with legacy iterator; TIterator* iter = comps->createIterator() ;; while((arg=(RooAbsArg*)iter->Next())) { ; // do something with arg; }; ```. ```C++; // with range-based",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8777
https://github.com/root-project/root/issues/8778:557,Safety,abort,abort,557,"running rootdrawtree without arguments leads to a crash; ```; [user@host]$ rootdrawtree ; /usr/include/c++/8/bits/stl_vector.h:932: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::reference = std::__cxx11::basic_string<char>&; std::vector<_Tp, _Alloc>::size_type = long unsigned int]: Assertion '__builtin_expect(__n < this->size(), true)' failed.; *** Break *** abort; ```; root 6.22.08 from EPEL on CentOS8 x86_64 . Sorry if that is a duplicate. Best regards,. Andrii",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8778
https://github.com/root-project/root/issues/8778:479,Testability,Assert,Assertion,479,"running rootdrawtree without arguments leads to a crash; ```; [user@host]$ rootdrawtree ; /usr/include/c++/8/bits/stl_vector.h:932: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::reference = std::__cxx11::basic_string<char>&; std::vector<_Tp, _Alloc>::size_type = long unsigned int]: Assertion '__builtin_expect(__n < this->size(), true)' failed.; *** Break *** abort; ```; root 6.22.08 from EPEL on CentOS8 x86_64 . Sorry if that is a duplicate. Best regards,. Andrii",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8778
https://github.com/root-project/root/pull/8779:177,Deployability,update,updated,177,# This Pull request:. ## Changes or fixes:; Clarifies how to use SetMaxDigits in a local TGaxis instead of changing all axes. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8774,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8779
https://github.com/root-project/root/pull/8779:147,Testability,test,tested,147,# This Pull request:. ## Changes or fixes:; Clarifies how to use SetMaxDigits in a local TGaxis instead of changing all axes. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8774,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8779
https://github.com/root-project/root/issues/8781:140,Modifiability,config,config-flag,140,"### Explain what you would like to see improved; I daily use QtCreator in my ROOT-based projects, and it would be great if there would be a config-flag to build ROOT with the `GENERATE_QHP` enabled in the doxygen file. https://github.com/root-project/root/blob/master/documentation/doxygen/Doxyfile#L1514. This way, one can consult the Doxygen documentation directly within QtCreator, no need to use a web browser, which is also great if you don't have internet connection.; See e.g. https://bugreports.qt.io/secure/attachment/48119/Added_doxygen_doc_2.PNG. ### Optional: share how it could be improved; cmake config flag, or automatically detect if qhelpgenerator is found as done in llvm; https://github.com/root-project/root/search?q=qhelpgenerator. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 17 2021, 10:49:42 |; | From heads/master@v6-25-01-861-g5ea261143f |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8781
https://github.com/root-project/root/issues/8781:610,Modifiability,config,config,610,"### Explain what you would like to see improved; I daily use QtCreator in my ROOT-based projects, and it would be great if there would be a config-flag to build ROOT with the `GENERATE_QHP` enabled in the doxygen file. https://github.com/root-project/root/blob/master/documentation/doxygen/Doxyfile#L1514. This way, one can consult the Doxygen documentation directly within QtCreator, no need to use a web browser, which is also great if you don't have internet connection.; See e.g. https://bugreports.qt.io/secure/attachment/48119/Added_doxygen_doc_2.PNG. ### Optional: share how it could be improved; cmake config flag, or automatically detect if qhelpgenerator is found as done in llvm; https://github.com/root-project/root/search?q=qhelpgenerator. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 17 2021, 10:49:42 |; | From heads/master@v6-25-01-861-g5ea261143f |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8781
https://github.com/root-project/root/issues/8781:640,Safety,detect,detect,640,"### Explain what you would like to see improved; I daily use QtCreator in my ROOT-based projects, and it would be great if there would be a config-flag to build ROOT with the `GENERATE_QHP` enabled in the doxygen file. https://github.com/root-project/root/blob/master/documentation/doxygen/Doxyfile#L1514. This way, one can consult the Doxygen documentation directly within QtCreator, no need to use a web browser, which is also great if you don't have internet connection.; See e.g. https://bugreports.qt.io/secure/attachment/48119/Added_doxygen_doc_2.PNG. ### Optional: share how it could be improved; cmake config flag, or automatically detect if qhelpgenerator is found as done in llvm; https://github.com/root-project/root/search?q=qhelpgenerator. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 17 2021, 10:49:42 |; | From heads/master@v6-25-01-861-g5ea261143f |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8781
https://github.com/root-project/root/issues/8781:509,Security,secur,secure,509,"### Explain what you would like to see improved; I daily use QtCreator in my ROOT-based projects, and it would be great if there would be a config-flag to build ROOT with the `GENERATE_QHP` enabled in the doxygen file. https://github.com/root-project/root/blob/master/documentation/doxygen/Doxyfile#L1514. This way, one can consult the Doxygen documentation directly within QtCreator, no need to use a web browser, which is also great if you don't have internet connection.; See e.g. https://bugreports.qt.io/secure/attachment/48119/Added_doxygen_doc_2.PNG. ### Optional: share how it could be improved; cmake config flag, or automatically detect if qhelpgenerator is found as done in llvm; https://github.com/root-project/root/search?q=qhelpgenerator. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 17 2021, 10:49:42 |; | From heads/master@v6-25-01-861-g5ea261143f |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8781
https://github.com/root-project/root/pull/8782:39,Performance,perform,performing,39,"I added the minimal infrastructure for performing end-to-end test of the correctness of the header files generated by SOFIE.; There are 3 ONNX models as an example. # How it works; In order to create the Google Test, CMake scans a given directory (i.e. input_models) looking for `.onnx` files then generates a target called `SofieCompileModels_ONNX` with the only purpose of generating the `.hxx` headers (output of SOFIE compilation). A file called `Emit.cxx` acts like a command line SOFIE compiler, called by the test target before building the final comprehensive GTest `TestCustomModels`. - [x] tested changes locally; - [x] added example models (Linear16, Linear32, Linear64)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8782
https://github.com/root-project/root/pull/8782:61,Testability,test,test,61,"I added the minimal infrastructure for performing end-to-end test of the correctness of the header files generated by SOFIE.; There are 3 ONNX models as an example. # How it works; In order to create the Google Test, CMake scans a given directory (i.e. input_models) looking for `.onnx` files then generates a target called `SofieCompileModels_ONNX` with the only purpose of generating the `.hxx` headers (output of SOFIE compilation). A file called `Emit.cxx` acts like a command line SOFIE compiler, called by the test target before building the final comprehensive GTest `TestCustomModels`. - [x] tested changes locally; - [x] added example models (Linear16, Linear32, Linear64)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8782
https://github.com/root-project/root/pull/8782:211,Testability,Test,Test,211,"I added the minimal infrastructure for performing end-to-end test of the correctness of the header files generated by SOFIE.; There are 3 ONNX models as an example. # How it works; In order to create the Google Test, CMake scans a given directory (i.e. input_models) looking for `.onnx` files then generates a target called `SofieCompileModels_ONNX` with the only purpose of generating the `.hxx` headers (output of SOFIE compilation). A file called `Emit.cxx` acts like a command line SOFIE compiler, called by the test target before building the final comprehensive GTest `TestCustomModels`. - [x] tested changes locally; - [x] added example models (Linear16, Linear32, Linear64)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8782
https://github.com/root-project/root/pull/8782:516,Testability,test,test,516,"I added the minimal infrastructure for performing end-to-end test of the correctness of the header files generated by SOFIE.; There are 3 ONNX models as an example. # How it works; In order to create the Google Test, CMake scans a given directory (i.e. input_models) looking for `.onnx` files then generates a target called `SofieCompileModels_ONNX` with the only purpose of generating the `.hxx` headers (output of SOFIE compilation). A file called `Emit.cxx` acts like a command line SOFIE compiler, called by the test target before building the final comprehensive GTest `TestCustomModels`. - [x] tested changes locally; - [x] added example models (Linear16, Linear32, Linear64)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8782
https://github.com/root-project/root/pull/8782:575,Testability,Test,TestCustomModels,575,"I added the minimal infrastructure for performing end-to-end test of the correctness of the header files generated by SOFIE.; There are 3 ONNX models as an example. # How it works; In order to create the Google Test, CMake scans a given directory (i.e. input_models) looking for `.onnx` files then generates a target called `SofieCompileModels_ONNX` with the only purpose of generating the `.hxx` headers (output of SOFIE compilation). A file called `Emit.cxx` acts like a command line SOFIE compiler, called by the test target before building the final comprehensive GTest `TestCustomModels`. - [x] tested changes locally; - [x] added example models (Linear16, Linear32, Linear64)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8782
https://github.com/root-project/root/pull/8782:600,Testability,test,tested,600,"I added the minimal infrastructure for performing end-to-end test of the correctness of the header files generated by SOFIE.; There are 3 ONNX models as an example. # How it works; In order to create the Google Test, CMake scans a given directory (i.e. input_models) looking for `.onnx` files then generates a target called `SofieCompileModels_ONNX` with the only purpose of generating the `.hxx` headers (output of SOFIE compilation). A file called `Emit.cxx` acts like a command line SOFIE compiler, called by the test target before building the final comprehensive GTest `TestCustomModels`. - [x] tested changes locally; - [x] added example models (Linear16, Linear32, Linear64)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8782
https://github.com/root-project/root/issues/8783:168,Modifiability,config,configured,168,https://root-forum.cern.ch/t/roottest-and-required-c-standard/46088/5. `cmake -Droottest-On` clones roottest and *is supposed* to check out the branch of the currently configured `root.git`. That fails apparently if `root.git` has `latest-stable` checked out.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8783
https://github.com/root-project/root/pull/8784:438,Deployability,release,release,438,"This PR introduces new PyROOT features that allow for conversion between the RooDataHist and the NumPy arrays, following up a PR that already introduced similar functionality for the RooDataSet:; https://github.com/root-project/root/pull/9346. The new methods are (with checkmarks if they are already implemented in this PR):. - [x] `RooDataHist.to_numpy()`; - [x] `RooDataHist.from_numpy()`. These new methods are also advertised in the release notes, and the existing `rf409_NumPyPandasToRooFit.py` tutorial is extended to also explain the functionality introduced in this PR. Note that any new Python functions prefixed with an underscore are not meant to be part of the public stable user interface, which is why they are not advertised in the release notes and also don't have docstrings.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8784
https://github.com/root-project/root/pull/8784:748,Deployability,release,release,748,"This PR introduces new PyROOT features that allow for conversion between the RooDataHist and the NumPy arrays, following up a PR that already introduced similar functionality for the RooDataSet:; https://github.com/root-project/root/pull/9346. The new methods are (with checkmarks if they are already implemented in this PR):. - [x] `RooDataHist.to_numpy()`; - [x] `RooDataHist.from_numpy()`. These new methods are also advertised in the release notes, and the existing `rf409_NumPyPandasToRooFit.py` tutorial is extended to also explain the functionality introduced in this PR. Note that any new Python functions prefixed with an underscore are not meant to be part of the public stable user interface, which is why they are not advertised in the release notes and also don't have docstrings.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8784
https://github.com/root-project/root/pull/8784:693,Integrability,interface,interface,693,"This PR introduces new PyROOT features that allow for conversion between the RooDataHist and the NumPy arrays, following up a PR that already introduced similar functionality for the RooDataSet:; https://github.com/root-project/root/pull/9346. The new methods are (with checkmarks if they are already implemented in this PR):. - [x] `RooDataHist.to_numpy()`; - [x] `RooDataHist.from_numpy()`. These new methods are also advertised in the release notes, and the existing `rf409_NumPyPandasToRooFit.py` tutorial is extended to also explain the functionality introduced in this PR. Note that any new Python functions prefixed with an underscore are not meant to be part of the public stable user interface, which is why they are not advertised in the release notes and also don't have docstrings.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8784
https://github.com/root-project/root/pull/8784:513,Modifiability,extend,extended,513,"This PR introduces new PyROOT features that allow for conversion between the RooDataHist and the NumPy arrays, following up a PR that already introduced similar functionality for the RooDataSet:; https://github.com/root-project/root/pull/9346. The new methods are (with checkmarks if they are already implemented in this PR):. - [x] `RooDataHist.to_numpy()`; - [x] `RooDataHist.from_numpy()`. These new methods are also advertised in the release notes, and the existing `rf409_NumPyPandasToRooFit.py` tutorial is extended to also explain the functionality introduced in this PR. Note that any new Python functions prefixed with an underscore are not meant to be part of the public stable user interface, which is why they are not advertised in the release notes and also don't have docstrings.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8784
https://github.com/root-project/root/issues/8787:368,Energy Efficiency,reduce,reduce,368,"Affects at least 6.22/08. Minimal reproducer:. ```; {; RooRealVar x(""x"",""x"",1);; RooRealVar w(""w"",""w"",1);; RooDataSet d(""d"",""d"",w,""w"");. d.addColumns(x);. for(int i=0;i<10;i++) {; x = i; d.add(x,0);; }. // d now has 10 entries with x values increasing; for(int i=0;i<d.numEntries();i++) std::cout << d.get(i)->getRealValue(""x"") << "",""; std::cout << std::endl;. // now reduce the dataset and repeat:; auto e = d.reduce(""x>5"");; for(int i=0;i<e->numEntries();i++) std::cout << e->get(i)->getRealValue(""x"") << "",""; std::cout << std::endl;; }; ```. This outputs:. ```; 0,1,2,3,4,5,6,7,8,9,; 9,9,9,9,; ```. where it should really output:. ```; 0,1,2,3,4,5,6,7,8,9,; 6,7,8,9,; ```. If the ""x"" column was included when the dataset is constructed, the reduction works correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8787
https://github.com/root-project/root/issues/8787:411,Energy Efficiency,reduce,reduce,411,"Affects at least 6.22/08. Minimal reproducer:. ```; {; RooRealVar x(""x"",""x"",1);; RooRealVar w(""w"",""w"",1);; RooDataSet d(""d"",""d"",w,""w"");. d.addColumns(x);. for(int i=0;i<10;i++) {; x = i; d.add(x,0);; }. // d now has 10 entries with x values increasing; for(int i=0;i<d.numEntries();i++) std::cout << d.get(i)->getRealValue(""x"") << "",""; std::cout << std::endl;. // now reduce the dataset and repeat:; auto e = d.reduce(""x>5"");; for(int i=0;i<e->numEntries();i++) std::cout << e->get(i)->getRealValue(""x"") << "",""; std::cout << std::endl;; }; ```. This outputs:. ```; 0,1,2,3,4,5,6,7,8,9,; 9,9,9,9,; ```. where it should really output:. ```; 0,1,2,3,4,5,6,7,8,9,; 6,7,8,9,; ```. If the ""x"" column was included when the dataset is constructed, the reduction works correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8787
https://github.com/root-project/root/pull/8788:20,Performance,perform,perform,20,[cxxmodules] Do not perform version checks for Vc. We do not link against libVc.a thus it makes no sense to check for version compatibility between libraries and header files. This fixes a bug where upon building the modules.idx we run the static ctor runLibraryAbiCheck which fails to find the corresponding symbol.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8788
https://github.com/root-project/root/pull/8789:30,Availability,error,errors,30,"Fix the following compilation errors when using the /std:c++17 flag on Windows:; ```; roofit\roofitcore\src\RooDataSet.cxx(2073,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 1 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2073,17): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; roofit\roofitcore\src\RooDataSet.cxx(2074,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 1 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2074,17): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; roofit\roofitcore\src\RooDataSet.cxx(2075,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 2 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2075,23): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8789
https://github.com/root-project/root/pull/8789:133,Availability,error,error,133,"Fix the following compilation errors when using the /std:c++17 flag on Windows:; ```; roofit\roofitcore\src\RooDataSet.cxx(2073,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 1 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2073,17): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; roofit\roofitcore\src\RooDataSet.cxx(2074,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 1 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2074,17): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; roofit\roofitcore\src\RooDataSet.cxx(2075,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 2 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2075,23): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8789
https://github.com/root-project/root/pull/8789:464,Availability,avail,available,464,"Fix the following compilation errors when using the /std:c++17 flag on Windows:; ```; roofit\roofitcore\src\RooDataSet.cxx(2073,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 1 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2073,17): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; roofit\roofitcore\src\RooDataSet.cxx(2074,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 1 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2074,17): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; roofit\roofitcore\src\RooDataSet.cxx(2075,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 2 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2075,23): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8789
https://github.com/root-project/root/pull/8789:690,Availability,error,error,690,"Fix the following compilation errors when using the /std:c++17 flag on Windows:; ```; roofit\roofitcore\src\RooDataSet.cxx(2073,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 1 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2073,17): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; roofit\roofitcore\src\RooDataSet.cxx(2074,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 1 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2074,17): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; roofit\roofitcore\src\RooDataSet.cxx(2075,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 2 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2075,23): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8789
https://github.com/root-project/root/pull/8789:1021,Availability,avail,available,1021,"Fix the following compilation errors when using the /std:c++17 flag on Windows:; ```; roofit\roofitcore\src\RooDataSet.cxx(2073,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 1 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2073,17): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; roofit\roofitcore\src\RooDataSet.cxx(2074,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 1 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2074,17): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; roofit\roofitcore\src\RooDataSet.cxx(2075,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 2 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2075,23): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8789
https://github.com/root-project/root/pull/8789:1247,Availability,error,error,1247,"Fix the following compilation errors when using the /std:c++17 flag on Windows:; ```; roofit\roofitcore\src\RooDataSet.cxx(2073,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 1 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2073,17): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; roofit\roofitcore\src\RooDataSet.cxx(2074,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 1 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2074,17): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; roofit\roofitcore\src\RooDataSet.cxx(2075,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 2 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2075,23): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8789
https://github.com/root-project/root/pull/8789:1578,Availability,avail,available,1578,"Fix the following compilation errors when using the /std:c++17 flag on Windows:; ```; roofit\roofitcore\src\RooDataSet.cxx(2073,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 1 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2073,17): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; roofit\roofitcore\src\RooDataSet.cxx(2074,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 1 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2074,17): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; roofit\roofitcore\src\RooDataSet.cxx(2075,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 2 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2075,23): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8789
https://github.com/root-project/root/pull/8789:418,Integrability,message,message,418,"Fix the following compilation errors when using the /std:c++17 flag on Windows:; ```; roofit\roofitcore\src\RooDataSet.cxx(2073,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 1 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2073,17): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; roofit\roofitcore\src\RooDataSet.cxx(2074,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 1 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2074,17): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; roofit\roofitcore\src\RooDataSet.cxx(2075,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 2 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2075,23): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8789
https://github.com/root-project/root/pull/8789:588,Integrability,message,message,588,"Fix the following compilation errors when using the /std:c++17 flag on Windows:; ```; roofit\roofitcore\src\RooDataSet.cxx(2073,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 1 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2073,17): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; roofit\roofitcore\src\RooDataSet.cxx(2074,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 1 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2074,17): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; roofit\roofitcore\src\RooDataSet.cxx(2075,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 2 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2075,23): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8789
https://github.com/root-project/root/pull/8789:975,Integrability,message,message,975,"Fix the following compilation errors when using the /std:c++17 flag on Windows:; ```; roofit\roofitcore\src\RooDataSet.cxx(2073,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 1 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2073,17): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; roofit\roofitcore\src\RooDataSet.cxx(2074,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 1 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2074,17): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; roofit\roofitcore\src\RooDataSet.cxx(2075,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 2 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2075,23): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8789
https://github.com/root-project/root/pull/8789:1145,Integrability,message,message,1145,"Fix the following compilation errors when using the /std:c++17 flag on Windows:; ```; roofit\roofitcore\src\RooDataSet.cxx(2073,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 1 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2073,17): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; roofit\roofitcore\src\RooDataSet.cxx(2074,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 1 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2074,17): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; roofit\roofitcore\src\RooDataSet.cxx(2075,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 2 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2075,23): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8789
https://github.com/root-project/root/pull/8789:1532,Integrability,message,message,1532,"Fix the following compilation errors when using the /std:c++17 flag on Windows:; ```; roofit\roofitcore\src\RooDataSet.cxx(2073,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 1 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2073,17): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; roofit\roofitcore\src\RooDataSet.cxx(2074,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 1 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2074,17): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; roofit\roofitcore\src\RooDataSet.cxx(2075,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 2 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2075,23): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8789
https://github.com/root-project/root/pull/8789:1702,Integrability,message,message,1702,"Fix the following compilation errors when using the /std:c++17 flag on Windows:; ```; roofit\roofitcore\src\RooDataSet.cxx(2073,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 1 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2073,17): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; roofit\roofitcore\src\RooDataSet.cxx(2074,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 1 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2074,17): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; roofit\roofitcore\src\RooDataSet.cxx(2075,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 2 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2075,23): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8789
https://github.com/root-project/root/pull/8789:483,Performance,perform,perform,483,"Fix the following compilation errors when using the /std:c++17 flag on Windows:; ```; roofit\roofitcore\src\RooDataSet.cxx(2073,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 1 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2073,17): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; roofit\roofitcore\src\RooDataSet.cxx(2074,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 1 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2074,17): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; roofit\roofitcore\src\RooDataSet.cxx(2075,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 2 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2075,23): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8789
https://github.com/root-project/root/pull/8789:1040,Performance,perform,perform,1040,"Fix the following compilation errors when using the /std:c++17 flag on Windows:; ```; roofit\roofitcore\src\RooDataSet.cxx(2073,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 1 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2073,17): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; roofit\roofitcore\src\RooDataSet.cxx(2074,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 1 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2074,17): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; roofit\roofitcore\src\RooDataSet.cxx(2075,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 2 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2075,23): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8789
https://github.com/root-project/root/pull/8789:1597,Performance,perform,perform,1597,"Fix the following compilation errors when using the /std:c++17 flag on Windows:; ```; roofit\roofitcore\src\RooDataSet.cxx(2073,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 1 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2073,17): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; roofit\roofitcore\src\RooDataSet.cxx(2074,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 1 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2074,17): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; roofit\roofitcore\src\RooDataSet.cxx(2075,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 2 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2075,23): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8789
https://github.com/root-project/root/pull/8790:2,Deployability,update,update,2,* update the categories_v622.root file to actually use the class; versionse from ROOT 6.22. * add new categories_v624.root reference file and use it in RooCategory; I/O unit tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8790
https://github.com/root-project/root/pull/8790:174,Testability,test,tests,174,* update the categories_v622.root file to actually use the class; versionse from ROOT 6.22. * add new categories_v624.root reference file and use it in RooCategory; I/O unit tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8790
https://github.com/root-project/root/issues/8791:1515,Availability,error,error,1515,"yout version 7 of class 'RooRealVar' differs from ; the in-memory layout version 7:; RooAbsBinning _binning; //; vs; unique_ptr<RooAbsBinning,default_delete<RooAbsBinning> > _binning; //; ```. The warning is uexpected because:; * it comes from the RooRealVar class that was not changed in 068465e; * it only appears now after seemingly unrelated changes in the RooAbsArg base class; * the memory layout and checksums of the RooRealVar classes didn't change between 6.24 (version of the reference file) and ROOT master. Here is the streamer info of RooRealVar in master:; ```; root [7] TClass::GetClass(""RooRealVar"")->GetStreamerInfo()->ls(). StreamerInfo for class: RooRealVar, version=7, checksum=0xfd173f72; RooAbsRealLValue BASE offset= 0 type= 0 Abstract modifiable real-valued object; double _error offset=720 type= 8 Symmetric error associated with current value; double _asymErrLo offset=728 type= 8 Low side of asymmetric error associated with current value; double _asymErrHi offset=736 type= 8 High side of asymmetric error associated with current value; RooAbsBinning* _binning offset=744 type=64 ; i= 0, RooAbsRealLValue type= 0, offset= 0, len=1, method=0; i= 1, _error type= 28, offset=720, len=3, method=0 [optimized]; i= 2, _binning type= 64, offset=744, len=1, method=0; ```; Here is the streamer info for RooRealVar from the [categories_v624.root reference file](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/categories_v624.root):; ```; root [6] _file0->ShowStreamerInfo(). StreamerInfo for class: RooRealVar, version=7, checksum=0xfd173f72; RooAbsRealLValue BASE offset= 0 type= 0 Abstract modifiable real-valued object; double _error offset= 0 type= 8 Symmetric error associated with current value; double _asymErrLo offset= 0 type= 8 Low side of asymmetric error associated with current value; double _asymErrHi offset= 0 type= 8 High side of asymmetric error associated with current value; RooAbsBinning* _binning offset= 0 type=64; ```. ### Expected b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8791
https://github.com/root-project/root/issues/8791:1612,Availability,error,error,1612,"yout version 7 of class 'RooRealVar' differs from ; the in-memory layout version 7:; RooAbsBinning _binning; //; vs; unique_ptr<RooAbsBinning,default_delete<RooAbsBinning> > _binning; //; ```. The warning is uexpected because:; * it comes from the RooRealVar class that was not changed in 068465e; * it only appears now after seemingly unrelated changes in the RooAbsArg base class; * the memory layout and checksums of the RooRealVar classes didn't change between 6.24 (version of the reference file) and ROOT master. Here is the streamer info of RooRealVar in master:; ```; root [7] TClass::GetClass(""RooRealVar"")->GetStreamerInfo()->ls(). StreamerInfo for class: RooRealVar, version=7, checksum=0xfd173f72; RooAbsRealLValue BASE offset= 0 type= 0 Abstract modifiable real-valued object; double _error offset=720 type= 8 Symmetric error associated with current value; double _asymErrLo offset=728 type= 8 Low side of asymmetric error associated with current value; double _asymErrHi offset=736 type= 8 High side of asymmetric error associated with current value; RooAbsBinning* _binning offset=744 type=64 ; i= 0, RooAbsRealLValue type= 0, offset= 0, len=1, method=0; i= 1, _error type= 28, offset=720, len=3, method=0 [optimized]; i= 2, _binning type= 64, offset=744, len=1, method=0; ```; Here is the streamer info for RooRealVar from the [categories_v624.root reference file](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/categories_v624.root):; ```; root [6] _file0->ShowStreamerInfo(). StreamerInfo for class: RooRealVar, version=7, checksum=0xfd173f72; RooAbsRealLValue BASE offset= 0 type= 0 Abstract modifiable real-valued object; double _error offset= 0 type= 8 Symmetric error associated with current value; double _asymErrLo offset= 0 type= 8 Low side of asymmetric error associated with current value; double _asymErrHi offset= 0 type= 8 High side of asymmetric error associated with current value; RooAbsBinning* _binning offset= 0 type=64; ```. ### Expected b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8791
https://github.com/root-project/root/issues/8791:1710,Availability,error,error,1710,"yout version 7 of class 'RooRealVar' differs from ; the in-memory layout version 7:; RooAbsBinning _binning; //; vs; unique_ptr<RooAbsBinning,default_delete<RooAbsBinning> > _binning; //; ```. The warning is uexpected because:; * it comes from the RooRealVar class that was not changed in 068465e; * it only appears now after seemingly unrelated changes in the RooAbsArg base class; * the memory layout and checksums of the RooRealVar classes didn't change between 6.24 (version of the reference file) and ROOT master. Here is the streamer info of RooRealVar in master:; ```; root [7] TClass::GetClass(""RooRealVar"")->GetStreamerInfo()->ls(). StreamerInfo for class: RooRealVar, version=7, checksum=0xfd173f72; RooAbsRealLValue BASE offset= 0 type= 0 Abstract modifiable real-valued object; double _error offset=720 type= 8 Symmetric error associated with current value; double _asymErrLo offset=728 type= 8 Low side of asymmetric error associated with current value; double _asymErrHi offset=736 type= 8 High side of asymmetric error associated with current value; RooAbsBinning* _binning offset=744 type=64 ; i= 0, RooAbsRealLValue type= 0, offset= 0, len=1, method=0; i= 1, _error type= 28, offset=720, len=3, method=0 [optimized]; i= 2, _binning type= 64, offset=744, len=1, method=0; ```; Here is the streamer info for RooRealVar from the [categories_v624.root reference file](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/categories_v624.root):; ```; root [6] _file0->ShowStreamerInfo(). StreamerInfo for class: RooRealVar, version=7, checksum=0xfd173f72; RooAbsRealLValue BASE offset= 0 type= 0 Abstract modifiable real-valued object; double _error offset= 0 type= 8 Symmetric error associated with current value; double _asymErrLo offset= 0 type= 8 Low side of asymmetric error associated with current value; double _asymErrHi offset= 0 type= 8 High side of asymmetric error associated with current value; RooAbsBinning* _binning offset= 0 type=64; ```. ### Expected b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8791
https://github.com/root-project/root/issues/8791:2391,Availability,error,error,2391,"er seemingly unrelated changes in the RooAbsArg base class; * the memory layout and checksums of the RooRealVar classes didn't change between 6.24 (version of the reference file) and ROOT master. Here is the streamer info of RooRealVar in master:; ```; root [7] TClass::GetClass(""RooRealVar"")->GetStreamerInfo()->ls(). StreamerInfo for class: RooRealVar, version=7, checksum=0xfd173f72; RooAbsRealLValue BASE offset= 0 type= 0 Abstract modifiable real-valued object; double _error offset=720 type= 8 Symmetric error associated with current value; double _asymErrLo offset=728 type= 8 Low side of asymmetric error associated with current value; double _asymErrHi offset=736 type= 8 High side of asymmetric error associated with current value; RooAbsBinning* _binning offset=744 type=64 ; i= 0, RooAbsRealLValue type= 0, offset= 0, len=1, method=0; i= 1, _error type= 28, offset=720, len=3, method=0 [optimized]; i= 2, _binning type= 64, offset=744, len=1, method=0; ```; Here is the streamer info for RooRealVar from the [categories_v624.root reference file](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/categories_v624.root):; ```; root [6] _file0->ShowStreamerInfo(). StreamerInfo for class: RooRealVar, version=7, checksum=0xfd173f72; RooAbsRealLValue BASE offset= 0 type= 0 Abstract modifiable real-valued object; double _error offset= 0 type= 8 Symmetric error associated with current value; double _asymErrLo offset= 0 type= 8 Low side of asymmetric error associated with current value; double _asymErrHi offset= 0 type= 8 High side of asymmetric error associated with current value; RooAbsBinning* _binning offset= 0 type=64; ```. ### Expected behavior. There should be no warnings in `TStreamerInfo::BuildCheck` and `TStreamerInfo::CompareContent`. ### To Reproduce. Open the [categories_v624.root reference file](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/categories_v624.root) with ROOT master plus commit 068465e cherry-picked on top.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8791
https://github.com/root-project/root/issues/8791:2487,Availability,error,error,2487,"er seemingly unrelated changes in the RooAbsArg base class; * the memory layout and checksums of the RooRealVar classes didn't change between 6.24 (version of the reference file) and ROOT master. Here is the streamer info of RooRealVar in master:; ```; root [7] TClass::GetClass(""RooRealVar"")->GetStreamerInfo()->ls(). StreamerInfo for class: RooRealVar, version=7, checksum=0xfd173f72; RooAbsRealLValue BASE offset= 0 type= 0 Abstract modifiable real-valued object; double _error offset=720 type= 8 Symmetric error associated with current value; double _asymErrLo offset=728 type= 8 Low side of asymmetric error associated with current value; double _asymErrHi offset=736 type= 8 High side of asymmetric error associated with current value; RooAbsBinning* _binning offset=744 type=64 ; i= 0, RooAbsRealLValue type= 0, offset= 0, len=1, method=0; i= 1, _error type= 28, offset=720, len=3, method=0 [optimized]; i= 2, _binning type= 64, offset=744, len=1, method=0; ```; Here is the streamer info for RooRealVar from the [categories_v624.root reference file](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/categories_v624.root):; ```; root [6] _file0->ShowStreamerInfo(). StreamerInfo for class: RooRealVar, version=7, checksum=0xfd173f72; RooAbsRealLValue BASE offset= 0 type= 0 Abstract modifiable real-valued object; double _error offset= 0 type= 8 Symmetric error associated with current value; double _asymErrLo offset= 0 type= 8 Low side of asymmetric error associated with current value; double _asymErrHi offset= 0 type= 8 High side of asymmetric error associated with current value; RooAbsBinning* _binning offset= 0 type=64; ```. ### Expected behavior. There should be no warnings in `TStreamerInfo::BuildCheck` and `TStreamerInfo::CompareContent`. ### To Reproduce. Open the [categories_v624.root reference file](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/categories_v624.root) with ROOT master plus commit 068465e cherry-picked on top.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8791
https://github.com/root-project/root/issues/8791:2584,Availability,error,error,2584,"er seemingly unrelated changes in the RooAbsArg base class; * the memory layout and checksums of the RooRealVar classes didn't change between 6.24 (version of the reference file) and ROOT master. Here is the streamer info of RooRealVar in master:; ```; root [7] TClass::GetClass(""RooRealVar"")->GetStreamerInfo()->ls(). StreamerInfo for class: RooRealVar, version=7, checksum=0xfd173f72; RooAbsRealLValue BASE offset= 0 type= 0 Abstract modifiable real-valued object; double _error offset=720 type= 8 Symmetric error associated with current value; double _asymErrLo offset=728 type= 8 Low side of asymmetric error associated with current value; double _asymErrHi offset=736 type= 8 High side of asymmetric error associated with current value; RooAbsBinning* _binning offset=744 type=64 ; i= 0, RooAbsRealLValue type= 0, offset= 0, len=1, method=0; i= 1, _error type= 28, offset=720, len=3, method=0 [optimized]; i= 2, _binning type= 64, offset=744, len=1, method=0; ```; Here is the streamer info for RooRealVar from the [categories_v624.root reference file](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/categories_v624.root):; ```; root [6] _file0->ShowStreamerInfo(). StreamerInfo for class: RooRealVar, version=7, checksum=0xfd173f72; RooAbsRealLValue BASE offset= 0 type= 0 Abstract modifiable real-valued object; double _error offset= 0 type= 8 Symmetric error associated with current value; double _asymErrLo offset= 0 type= 8 Low side of asymmetric error associated with current value; double _asymErrHi offset= 0 type= 8 High side of asymmetric error associated with current value; RooAbsBinning* _binning offset= 0 type=64; ```. ### Expected behavior. There should be no warnings in `TStreamerInfo::BuildCheck` and `TStreamerInfo::CompareContent`. ### To Reproduce. Open the [categories_v624.root reference file](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/categories_v624.root) with ROOT master plus commit 068465e cherry-picked on top.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8791
https://github.com/root-project/root/issues/8791:451,Deployability,update,update,451,"- [ ] Checked for duplicates. ### Describe the bug. When updating the version of the RooAbsArg class with 068465e (part of https://github.com/root-project/root/pull/8764), an unexpected warning appears in the testProxiesAndCategories unit test:. ```; Warning in <TStreamerInfo::BuildCheck>: ; The StreamerInfo of class RooRealVar read from file categories_v624.root; has the same version (=7) as the active class but a different checksum.; You should update the version to ClassDef(RooRealVar,8).; Do not try to write objects with the current class definition,; the files will not be readable. Warning in <TStreamerInfo::CompareContent>: The following data member of; the on-file layout version 7 of class 'RooRealVar' differs from ; the in-memory layout version 7:; RooAbsBinning _binning; //; vs; unique_ptr<RooAbsBinning,default_delete<RooAbsBinning> > _binning; //; ```. The warning is uexpected because:; * it comes from the RooRealVar class that was not changed in 068465e; * it only appears now after seemingly unrelated changes in the RooAbsArg base class; * the memory layout and checksums of the RooRealVar classes didn't change between 6.24 (version of the reference file) and ROOT master. Here is the streamer info of RooRealVar in master:; ```; root [7] TClass::GetClass(""RooRealVar"")->GetStreamerInfo()->ls(). StreamerInfo for class: RooRealVar, version=7, checksum=0xfd173f72; RooAbsRealLValue BASE offset= 0 type= 0 Abstract modifiable real-valued object; double _error offset=720 type= 8 Symmetric error associated with current value; double _asymErrLo offset=728 type= 8 Low side of asymmetric error associated with current value; double _asymErrHi offset=736 type= 8 High side of asymmetric error associated with current value; RooAbsBinning* _binning offset=744 type=64 ; i= 0, RooAbsRealLValue type= 0, offset= 0, len=1, method=0; i= 1, _error type= 28, offset=720, len=3, method=0 [optimized]; i= 2, _binning type= 64, offset=744, len=1, method=0; ```; Here is the streamer info ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8791
https://github.com/root-project/root/issues/8791:1904,Performance,optimiz,optimized,1904,"yout version 7 of class 'RooRealVar' differs from ; the in-memory layout version 7:; RooAbsBinning _binning; //; vs; unique_ptr<RooAbsBinning,default_delete<RooAbsBinning> > _binning; //; ```. The warning is uexpected because:; * it comes from the RooRealVar class that was not changed in 068465e; * it only appears now after seemingly unrelated changes in the RooAbsArg base class; * the memory layout and checksums of the RooRealVar classes didn't change between 6.24 (version of the reference file) and ROOT master. Here is the streamer info of RooRealVar in master:; ```; root [7] TClass::GetClass(""RooRealVar"")->GetStreamerInfo()->ls(). StreamerInfo for class: RooRealVar, version=7, checksum=0xfd173f72; RooAbsRealLValue BASE offset= 0 type= 0 Abstract modifiable real-valued object; double _error offset=720 type= 8 Symmetric error associated with current value; double _asymErrLo offset=728 type= 8 Low side of asymmetric error associated with current value; double _asymErrHi offset=736 type= 8 High side of asymmetric error associated with current value; RooAbsBinning* _binning offset=744 type=64 ; i= 0, RooAbsRealLValue type= 0, offset= 0, len=1, method=0; i= 1, _error type= 28, offset=720, len=3, method=0 [optimized]; i= 2, _binning type= 64, offset=744, len=1, method=0; ```; Here is the streamer info for RooRealVar from the [categories_v624.root reference file](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/categories_v624.root):; ```; root [6] _file0->ShowStreamerInfo(). StreamerInfo for class: RooRealVar, version=7, checksum=0xfd173f72; RooAbsRealLValue BASE offset= 0 type= 0 Abstract modifiable real-valued object; double _error offset= 0 type= 8 Symmetric error associated with current value; double _asymErrLo offset= 0 type= 8 Low side of asymmetric error associated with current value; double _asymErrHi offset= 0 type= 8 High side of asymmetric error associated with current value; RooAbsBinning* _binning offset= 0 type=64; ```. ### Expected b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8791
https://github.com/root-project/root/issues/8791:429,Security,checksum,checksum,429,"- [ ] Checked for duplicates. ### Describe the bug. When updating the version of the RooAbsArg class with 068465e (part of https://github.com/root-project/root/pull/8764), an unexpected warning appears in the testProxiesAndCategories unit test:. ```; Warning in <TStreamerInfo::BuildCheck>: ; The StreamerInfo of class RooRealVar read from file categories_v624.root; has the same version (=7) as the active class but a different checksum.; You should update the version to ClassDef(RooRealVar,8).; Do not try to write objects with the current class definition,; the files will not be readable. Warning in <TStreamerInfo::CompareContent>: The following data member of; the on-file layout version 7 of class 'RooRealVar' differs from ; the in-memory layout version 7:; RooAbsBinning _binning; //; vs; unique_ptr<RooAbsBinning,default_delete<RooAbsBinning> > _binning; //; ```. The warning is uexpected because:; * it comes from the RooRealVar class that was not changed in 068465e; * it only appears now after seemingly unrelated changes in the RooAbsArg base class; * the memory layout and checksums of the RooRealVar classes didn't change between 6.24 (version of the reference file) and ROOT master. Here is the streamer info of RooRealVar in master:; ```; root [7] TClass::GetClass(""RooRealVar"")->GetStreamerInfo()->ls(). StreamerInfo for class: RooRealVar, version=7, checksum=0xfd173f72; RooAbsRealLValue BASE offset= 0 type= 0 Abstract modifiable real-valued object; double _error offset=720 type= 8 Symmetric error associated with current value; double _asymErrLo offset=728 type= 8 Low side of asymmetric error associated with current value; double _asymErrHi offset=736 type= 8 High side of asymmetric error associated with current value; RooAbsBinning* _binning offset=744 type=64 ; i= 0, RooAbsRealLValue type= 0, offset= 0, len=1, method=0; i= 1, _error type= 28, offset=720, len=3, method=0 [optimized]; i= 2, _binning type= 64, offset=744, len=1, method=0; ```; Here is the streamer info ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8791
https://github.com/root-project/root/issues/8791:1089,Security,checksum,checksums,1089,"ed for duplicates. ### Describe the bug. When updating the version of the RooAbsArg class with 068465e (part of https://github.com/root-project/root/pull/8764), an unexpected warning appears in the testProxiesAndCategories unit test:. ```; Warning in <TStreamerInfo::BuildCheck>: ; The StreamerInfo of class RooRealVar read from file categories_v624.root; has the same version (=7) as the active class but a different checksum.; You should update the version to ClassDef(RooRealVar,8).; Do not try to write objects with the current class definition,; the files will not be readable. Warning in <TStreamerInfo::CompareContent>: The following data member of; the on-file layout version 7 of class 'RooRealVar' differs from ; the in-memory layout version 7:; RooAbsBinning _binning; //; vs; unique_ptr<RooAbsBinning,default_delete<RooAbsBinning> > _binning; //; ```. The warning is uexpected because:; * it comes from the RooRealVar class that was not changed in 068465e; * it only appears now after seemingly unrelated changes in the RooAbsArg base class; * the memory layout and checksums of the RooRealVar classes didn't change between 6.24 (version of the reference file) and ROOT master. Here is the streamer info of RooRealVar in master:; ```; root [7] TClass::GetClass(""RooRealVar"")->GetStreamerInfo()->ls(). StreamerInfo for class: RooRealVar, version=7, checksum=0xfd173f72; RooAbsRealLValue BASE offset= 0 type= 0 Abstract modifiable real-valued object; double _error offset=720 type= 8 Symmetric error associated with current value; double _asymErrLo offset=728 type= 8 Low side of asymmetric error associated with current value; double _asymErrHi offset=736 type= 8 High side of asymmetric error associated with current value; RooAbsBinning* _binning offset=744 type=64 ; i= 0, RooAbsRealLValue type= 0, offset= 0, len=1, method=0; i= 1, _error type= 28, offset=720, len=3, method=0 [optimized]; i= 2, _binning type= 64, offset=744, len=1, method=0; ```; Here is the streamer info for RooReal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8791
https://github.com/root-project/root/issues/8791:1371,Security,checksum,checksum,1371,"yout version 7 of class 'RooRealVar' differs from ; the in-memory layout version 7:; RooAbsBinning _binning; //; vs; unique_ptr<RooAbsBinning,default_delete<RooAbsBinning> > _binning; //; ```. The warning is uexpected because:; * it comes from the RooRealVar class that was not changed in 068465e; * it only appears now after seemingly unrelated changes in the RooAbsArg base class; * the memory layout and checksums of the RooRealVar classes didn't change between 6.24 (version of the reference file) and ROOT master. Here is the streamer info of RooRealVar in master:; ```; root [7] TClass::GetClass(""RooRealVar"")->GetStreamerInfo()->ls(). StreamerInfo for class: RooRealVar, version=7, checksum=0xfd173f72; RooAbsRealLValue BASE offset= 0 type= 0 Abstract modifiable real-valued object; double _error offset=720 type= 8 Symmetric error associated with current value; double _asymErrLo offset=728 type= 8 Low side of asymmetric error associated with current value; double _asymErrHi offset=736 type= 8 High side of asymmetric error associated with current value; RooAbsBinning* _binning offset=744 type=64 ; i= 0, RooAbsRealLValue type= 0, offset= 0, len=1, method=0; i= 1, _error type= 28, offset=720, len=3, method=0 [optimized]; i= 2, _binning type= 64, offset=744, len=1, method=0; ```; Here is the streamer info for RooRealVar from the [categories_v624.root reference file](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/categories_v624.root):; ```; root [6] _file0->ShowStreamerInfo(). StreamerInfo for class: RooRealVar, version=7, checksum=0xfd173f72; RooAbsRealLValue BASE offset= 0 type= 0 Abstract modifiable real-valued object; double _error offset= 0 type= 8 Symmetric error associated with current value; double _asymErrLo offset= 0 type= 8 Low side of asymmetric error associated with current value; double _asymErrHi offset= 0 type= 8 High side of asymmetric error associated with current value; RooAbsBinning* _binning offset= 0 type=64; ```. ### Expected b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8791
https://github.com/root-project/root/issues/8791:2248,Security,checksum,checksum,2248,"er seemingly unrelated changes in the RooAbsArg base class; * the memory layout and checksums of the RooRealVar classes didn't change between 6.24 (version of the reference file) and ROOT master. Here is the streamer info of RooRealVar in master:; ```; root [7] TClass::GetClass(""RooRealVar"")->GetStreamerInfo()->ls(). StreamerInfo for class: RooRealVar, version=7, checksum=0xfd173f72; RooAbsRealLValue BASE offset= 0 type= 0 Abstract modifiable real-valued object; double _error offset=720 type= 8 Symmetric error associated with current value; double _asymErrLo offset=728 type= 8 Low side of asymmetric error associated with current value; double _asymErrHi offset=736 type= 8 High side of asymmetric error associated with current value; RooAbsBinning* _binning offset=744 type=64 ; i= 0, RooAbsRealLValue type= 0, offset= 0, len=1, method=0; i= 1, _error type= 28, offset=720, len=3, method=0 [optimized]; i= 2, _binning type= 64, offset=744, len=1, method=0; ```; Here is the streamer info for RooRealVar from the [categories_v624.root reference file](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/categories_v624.root):; ```; root [6] _file0->ShowStreamerInfo(). StreamerInfo for class: RooRealVar, version=7, checksum=0xfd173f72; RooAbsRealLValue BASE offset= 0 type= 0 Abstract modifiable real-valued object; double _error offset= 0 type= 8 Symmetric error associated with current value; double _asymErrLo offset= 0 type= 8 Low side of asymmetric error associated with current value; double _asymErrHi offset= 0 type= 8 High side of asymmetric error associated with current value; RooAbsBinning* _binning offset= 0 type=64; ```. ### Expected behavior. There should be no warnings in `TStreamerInfo::BuildCheck` and `TStreamerInfo::CompareContent`. ### To Reproduce. Open the [categories_v624.root reference file](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/categories_v624.root) with ROOT master plus commit 068465e cherry-picked on top.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8791
https://github.com/root-project/root/issues/8791:209,Testability,test,testProxiesAndCategories,209,"- [ ] Checked for duplicates. ### Describe the bug. When updating the version of the RooAbsArg class with 068465e (part of https://github.com/root-project/root/pull/8764), an unexpected warning appears in the testProxiesAndCategories unit test:. ```; Warning in <TStreamerInfo::BuildCheck>: ; The StreamerInfo of class RooRealVar read from file categories_v624.root; has the same version (=7) as the active class but a different checksum.; You should update the version to ClassDef(RooRealVar,8).; Do not try to write objects with the current class definition,; the files will not be readable. Warning in <TStreamerInfo::CompareContent>: The following data member of; the on-file layout version 7 of class 'RooRealVar' differs from ; the in-memory layout version 7:; RooAbsBinning _binning; //; vs; unique_ptr<RooAbsBinning,default_delete<RooAbsBinning> > _binning; //; ```. The warning is uexpected because:; * it comes from the RooRealVar class that was not changed in 068465e; * it only appears now after seemingly unrelated changes in the RooAbsArg base class; * the memory layout and checksums of the RooRealVar classes didn't change between 6.24 (version of the reference file) and ROOT master. Here is the streamer info of RooRealVar in master:; ```; root [7] TClass::GetClass(""RooRealVar"")->GetStreamerInfo()->ls(). StreamerInfo for class: RooRealVar, version=7, checksum=0xfd173f72; RooAbsRealLValue BASE offset= 0 type= 0 Abstract modifiable real-valued object; double _error offset=720 type= 8 Symmetric error associated with current value; double _asymErrLo offset=728 type= 8 Low side of asymmetric error associated with current value; double _asymErrHi offset=736 type= 8 High side of asymmetric error associated with current value; RooAbsBinning* _binning offset=744 type=64 ; i= 0, RooAbsRealLValue type= 0, offset= 0, len=1, method=0; i= 1, _error type= 28, offset=720, len=3, method=0 [optimized]; i= 2, _binning type= 64, offset=744, len=1, method=0; ```; Here is the streamer info ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8791
https://github.com/root-project/root/issues/8791:239,Testability,test,test,239,"- [ ] Checked for duplicates. ### Describe the bug. When updating the version of the RooAbsArg class with 068465e (part of https://github.com/root-project/root/pull/8764), an unexpected warning appears in the testProxiesAndCategories unit test:. ```; Warning in <TStreamerInfo::BuildCheck>: ; The StreamerInfo of class RooRealVar read from file categories_v624.root; has the same version (=7) as the active class but a different checksum.; You should update the version to ClassDef(RooRealVar,8).; Do not try to write objects with the current class definition,; the files will not be readable. Warning in <TStreamerInfo::CompareContent>: The following data member of; the on-file layout version 7 of class 'RooRealVar' differs from ; the in-memory layout version 7:; RooAbsBinning _binning; //; vs; unique_ptr<RooAbsBinning,default_delete<RooAbsBinning> > _binning; //; ```. The warning is uexpected because:; * it comes from the RooRealVar class that was not changed in 068465e; * it only appears now after seemingly unrelated changes in the RooAbsArg base class; * the memory layout and checksums of the RooRealVar classes didn't change between 6.24 (version of the reference file) and ROOT master. Here is the streamer info of RooRealVar in master:; ```; root [7] TClass::GetClass(""RooRealVar"")->GetStreamerInfo()->ls(). StreamerInfo for class: RooRealVar, version=7, checksum=0xfd173f72; RooAbsRealLValue BASE offset= 0 type= 0 Abstract modifiable real-valued object; double _error offset=720 type= 8 Symmetric error associated with current value; double _asymErrLo offset=728 type= 8 Low side of asymmetric error associated with current value; double _asymErrHi offset=736 type= 8 High side of asymmetric error associated with current value; RooAbsBinning* _binning offset=744 type=64 ; i= 0, RooAbsRealLValue type= 0, offset= 0, len=1, method=0; i= 1, _error type= 28, offset=720, len=3, method=0 [optimized]; i= 2, _binning type= 64, offset=744, len=1, method=0; ```; Here is the streamer info ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8791
https://github.com/root-project/root/issues/8791:2130,Testability,test,test,2130,"er seemingly unrelated changes in the RooAbsArg base class; * the memory layout and checksums of the RooRealVar classes didn't change between 6.24 (version of the reference file) and ROOT master. Here is the streamer info of RooRealVar in master:; ```; root [7] TClass::GetClass(""RooRealVar"")->GetStreamerInfo()->ls(). StreamerInfo for class: RooRealVar, version=7, checksum=0xfd173f72; RooAbsRealLValue BASE offset= 0 type= 0 Abstract modifiable real-valued object; double _error offset=720 type= 8 Symmetric error associated with current value; double _asymErrLo offset=728 type= 8 Low side of asymmetric error associated with current value; double _asymErrHi offset=736 type= 8 High side of asymmetric error associated with current value; RooAbsBinning* _binning offset=744 type=64 ; i= 0, RooAbsRealLValue type= 0, offset= 0, len=1, method=0; i= 1, _error type= 28, offset=720, len=3, method=0 [optimized]; i= 2, _binning type= 64, offset=744, len=1, method=0; ```; Here is the streamer info for RooRealVar from the [categories_v624.root reference file](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/categories_v624.root):; ```; root [6] _file0->ShowStreamerInfo(). StreamerInfo for class: RooRealVar, version=7, checksum=0xfd173f72; RooAbsRealLValue BASE offset= 0 type= 0 Abstract modifiable real-valued object; double _error offset= 0 type= 8 Symmetric error associated with current value; double _asymErrLo offset= 0 type= 8 Low side of asymmetric error associated with current value; double _asymErrHi offset= 0 type= 8 High side of asymmetric error associated with current value; RooAbsBinning* _binning offset= 0 type=64; ```. ### Expected behavior. There should be no warnings in `TStreamerInfo::BuildCheck` and `TStreamerInfo::CompareContent`. ### To Reproduce. Open the [categories_v624.root reference file](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/categories_v624.root) with ROOT master plus commit 068465e cherry-picked on top.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8791
https://github.com/root-project/root/issues/8791:2920,Testability,test,test,2920,"er seemingly unrelated changes in the RooAbsArg base class; * the memory layout and checksums of the RooRealVar classes didn't change between 6.24 (version of the reference file) and ROOT master. Here is the streamer info of RooRealVar in master:; ```; root [7] TClass::GetClass(""RooRealVar"")->GetStreamerInfo()->ls(). StreamerInfo for class: RooRealVar, version=7, checksum=0xfd173f72; RooAbsRealLValue BASE offset= 0 type= 0 Abstract modifiable real-valued object; double _error offset=720 type= 8 Symmetric error associated with current value; double _asymErrLo offset=728 type= 8 Low side of asymmetric error associated with current value; double _asymErrHi offset=736 type= 8 High side of asymmetric error associated with current value; RooAbsBinning* _binning offset=744 type=64 ; i= 0, RooAbsRealLValue type= 0, offset= 0, len=1, method=0; i= 1, _error type= 28, offset=720, len=3, method=0 [optimized]; i= 2, _binning type= 64, offset=744, len=1, method=0; ```; Here is the streamer info for RooRealVar from the [categories_v624.root reference file](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/categories_v624.root):; ```; root [6] _file0->ShowStreamerInfo(). StreamerInfo for class: RooRealVar, version=7, checksum=0xfd173f72; RooAbsRealLValue BASE offset= 0 type= 0 Abstract modifiable real-valued object; double _error offset= 0 type= 8 Symmetric error associated with current value; double _asymErrLo offset= 0 type= 8 Low side of asymmetric error associated with current value; double _asymErrHi offset= 0 type= 8 High side of asymmetric error associated with current value; RooAbsBinning* _binning offset= 0 type=64; ```. ### Expected behavior. There should be no warnings in `TStreamerInfo::BuildCheck` and `TStreamerInfo::CompareContent`. ### To Reproduce. Open the [categories_v624.root reference file](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/categories_v624.root) with ROOT master plus commit 068465e cherry-picked on top.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8791
https://github.com/root-project/root/pull/8792:126,Testability,test,tests,126,* this is achieved by using RooGenericPdf instead of RooGaussian or; RooPoisson. * some more changes were made to silence the tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8792
https://github.com/root-project/root/issues/8795:284,Availability,down,download,284,"### Explain what you would like to see improved; In the GitHub templates for ""Issue"" and ""Improvement"", I think it could be interesting to replace these instructions. ```; ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ```. with:; ```; ### Setup; '''; Suggested: Paste here the output of root -b -q; '''; ```; (Maybe some more metadata had to be added to root -b in order to tag some builds as 'dnf' or 'binary prepackage'.). It would be interesting to define a special command in the ROOT binary folder, like; `rootissue` or `rootfeature` that opens a web browser with an issue or feature template, with the field ""Setup"" already prepopulated with the current ROOT version. See below how KiCad does this. ### Additional context; KiCad already has this functionality. When one presses on ""Report Bug"" in the KiCaD GUI, it opens a webpage pre-filled with the version field, see https://gitlab.com/kicad/code/kicad/-/blob/master/common/tool/common_control.cpp#L50. It just opens a web browser with the following [link](https://gitlab.com/kicad/code/kicad/-/issues/new?issue[description]=%3C%21--%20Before%20Creating%20a%20New%20Issue%3A%0A%2A%20Search%20the%20issue%20tracker%20to%20verify%20the%20issue%20has%20not%20already%20been%20reported.%0A%2A%20Only%20report%20one%20problem%20per%20issue.%20--%3E%0A%0A%23%20Description%0A%3C%21--%20What%20is%20the%20current%20behavior%20and%20what%20is%20the%20expected%20behavior%3F%20--%3E%0A%3C%21--%20Please%20attach%20screenshots%20if%20they%20will%20help%20explain%20the%20problem.%20--%3E%0A%0A%23%20Steps%20to%20reproduce%0A%3C%21--%20Please%20include%20a%20screen%20recording%20if%20it%20will%20help%20explain%20how%20to%20reproduce.%20--%3E%0A%3C%21--%20If%20this%20issue%20is%20specific%20to%20a%20project%2C%20please%20attach%20it.%20--%3E%0A1.%0A2.%0A%23%20KiCad%20Version%0A%0A%60%60%60%0AApplication%3A%20KiCad%20PCB%20Editor%0A%0AVersion%",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8795
https://github.com/root-project/root/issues/8795:266,Deployability,install,install,266,"### Explain what you would like to see improved; In the GitHub templates for ""Issue"" and ""Improvement"", I think it could be interesting to replace these instructions. ```; ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ```. with:; ```; ### Setup; '''; Suggested: Paste here the output of root -b -q; '''; ```; (Maybe some more metadata had to be added to root -b in order to tag some builds as 'dnf' or 'binary prepackage'.). It would be interesting to define a special command in the ROOT binary folder, like; `rootissue` or `rootfeature` that opens a web browser with an issue or feature template, with the field ""Setup"" already prepopulated with the current ROOT version. See below how KiCad does this. ### Additional context; KiCad already has this functionality. When one presses on ""Report Bug"" in the KiCaD GUI, it opens a webpage pre-filled with the version field, see https://gitlab.com/kicad/code/kicad/-/blob/master/common/tool/common_control.cpp#L50. It just opens a web browser with the following [link](https://gitlab.com/kicad/code/kicad/-/issues/new?issue[description]=%3C%21--%20Before%20Creating%20a%20New%20Issue%3A%0A%2A%20Search%20the%20issue%20tracker%20to%20verify%20the%20issue%20has%20not%20already%20been%20reported.%0A%2A%20Only%20report%20one%20problem%20per%20issue.%20--%3E%0A%0A%23%20Description%0A%3C%21--%20What%20is%20the%20current%20behavior%20and%20what%20is%20the%20expected%20behavior%3F%20--%3E%0A%3C%21--%20Please%20attach%20screenshots%20if%20they%20will%20help%20explain%20the%20problem.%20--%3E%0A%0A%23%20Steps%20to%20reproduce%0A%3C%21--%20Please%20include%20a%20screen%20recording%20if%20it%20will%20help%20explain%20how%20to%20reproduce.%20--%3E%0A%3C%21--%20If%20this%20issue%20is%20specific%20to%20a%20project%2C%20please%20attach%20it.%20--%3E%0A1.%0A2.%0A%23%20KiCad%20Version%0A%0A%60%60%60%0AApplication%3A%20KiCad%20PCB%20Editor%0A%0AVersion%",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8795
https://github.com/root-project/root/issues/8795:2863,Safety,detect,detects,2863,"control.cpp#L50. It just opens a web browser with the following [link](https://gitlab.com/kicad/code/kicad/-/issues/new?issue[description]=%3C%21--%20Before%20Creating%20a%20New%20Issue%3A%0A%2A%20Search%20the%20issue%20tracker%20to%20verify%20the%20issue%20has%20not%20already%20been%20reported.%0A%2A%20Only%20report%20one%20problem%20per%20issue.%20--%3E%0A%0A%23%20Description%0A%3C%21--%20What%20is%20the%20current%20behavior%20and%20what%20is%20the%20expected%20behavior%3F%20--%3E%0A%3C%21--%20Please%20attach%20screenshots%20if%20they%20will%20help%20explain%20the%20problem.%20--%3E%0A%0A%23%20Steps%20to%20reproduce%0A%3C%21--%20Please%20include%20a%20screen%20recording%20if%20it%20will%20help%20explain%20how%20to%20reproduce.%20--%3E%0A%3C%21--%20If%20this%20issue%20is%20specific%20to%20a%20project%2C%20please%20attach%20it.%20--%3E%0A1.%0A2.%0A%23%20KiCad%20Version%0A%0A%60%60%60%0AApplication%3A%20KiCad%20PCB%20Editor%0A%0AVersion%3A%205.99.0-unknown-baf6798695~131~ubuntu18.04.1%2C%20release%20build%0A%0ALibraries%3A%0A%09wxWidgets%203.0.4%0A%0APlatform%3A%20Linux%205.4.0-77-generic%20x86_64%2C%2064%20bit%2C%20Little%20endian%2C%20wxGTK%2C%20mate%2C%20x11%0A%0A%09wxWidgets%3A%203.0.4%20%28wchar_t%2Cwx%20containers%2Ccompatible%20with%202.8%29%20GTK%2B%203.22%0A%09Boost%3A%201.65.1%0A%09OCC%3A%207.5.1%0A%09Curl%3A%207.58.0%0A%09ngspice%3A%2033%0A%09Compiler%3A%20GCC%207.5.0%20with%20C%2B%2B%20ABI%201011%0A%0ABuild%20settings%3A%0A%09KICAD_USE_OCC%3DON%0A%09KICAD_SPICE%3DON%0A%0A%60%60%60), that looks like this:. ![image](https://user-images.githubusercontent.com/10653970/128146364-f40a992b-1730-40d8-996a-7d51a262aec7.png). This homogenizes bug reports and saves time of the dev's asking what their current settings and versions are. The KiCad gitlab bot also warns the user if it detects that no version info was added to the issue. And they have a very nice webpage to aid users in reporting issues at the right repository: https://www.kicad.org/help/report-an-issue/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8795
https://github.com/root-project/root/issues/8797:255,Modifiability,config,config,255,"### Is your feature request related to a problem? Please describe.; When I code contributions for ROOT within QtCreator, I have to manually edit the format to match the one required by ROOT (braces, indents, etc.). ### Describe the solution you'd like; A config file like this one would be perfect, as it would automatically format those things.; https://github.com/drewnoakes/settings/blob/master/qt-creator-code-style.xml. This file could be posted in this webpage below the clang and astyle config files.; https://root.cern/contribute/coding_conventions/. ### Describe alternatives you've considered; clang, astyle. ### Additional context; https://stackoverflow.com/a/59384396/7471760",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8797
https://github.com/root-project/root/issues/8797:494,Modifiability,config,config,494,"### Is your feature request related to a problem? Please describe.; When I code contributions for ROOT within QtCreator, I have to manually edit the format to match the one required by ROOT (braces, indents, etc.). ### Describe the solution you'd like; A config file like this one would be perfect, as it would automatically format those things.; https://github.com/drewnoakes/settings/blob/master/qt-creator-code-style.xml. This file could be posted in this webpage below the clang and astyle config files.; https://root.cern/contribute/coding_conventions/. ### Describe alternatives you've considered; clang, astyle. ### Additional context; https://stackoverflow.com/a/59384396/7471760",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8797
https://github.com/root-project/root/pull/8798:122,Deployability,update,updated,122,# This Pull request:. ## Changes or fixes:; Adds PRBS generation code. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8199,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8798
https://github.com/root-project/root/pull/8798:92,Testability,test,tested,92,# This Pull request:. ## Changes or fixes:; Adds PRBS generation code. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8199,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8798
https://github.com/root-project/root/pull/8799:39,Integrability,depend,dependency,39,# This Pull request:. add some missing dependency for headers and libraries when building the executable sofiec as part of the tests of TMVA-sofie,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8799
https://github.com/root-project/root/pull/8799:127,Testability,test,tests,127,# This Pull request:. add some missing dependency for headers and libraries when building the executable sofiec as part of the tests of TMVA-sofie,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8799
https://github.com/root-project/root/pull/8800:98,Performance,Optimiz,Optimized,98,# This Pull request:; Development of the convolution operator for the ROOT/TMVA SOFIE (System for Optimized Fast Inference code Emit). ## Checklist:; - [ x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8800
https://github.com/root-project/root/pull/8800:157,Testability,test,tested,157,# This Pull request:; Development of the convolution operator for the ROOT/TMVA SOFIE (System for Optimized Fast Inference code Emit). ## Checklist:; - [ x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8800
https://github.com/root-project/root/pull/8801:0,Usability,Simpl,Simple,0,"Simple C++ code to demonstrate the problem:; ```C++; TF1{""f1"", ""1.0++x++x*x++x*x*x"", -1.0, 1.0}.Print();; ```; Before this commit, running this line gave you:; ```; Formula based function: f1; f1 : 1.0++x++x*x++x*x*x Ndim= 1, Npar= 3, Number= 0; Formula expression:; ([p0]*(1.0))+([p1]*(x))+([p2]*(x*x))+([p2]*(x*x))*x; ```. The problem is that `TFormula::HandleLinear()` uses pattern-matching to; replace the strings representing the linear terms. This is problematic; if one of the strings is a substring of another one.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8801
https://github.com/root-project/root/pull/8803:294,Deployability,update,updated,294,# This Pull request:. ## Changes or fixes:; - Implemented RooWorkspace pythonizations with bracket operator alternative for `RooWorkspace::obj()`; - Command argument pythonization for RooWorkspace::import(); - Pythonization of tutorial files. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8803
https://github.com/root-project/root/pull/8803:264,Testability,test,tested,264,# This Pull request:. ## Changes or fixes:; - Implemented RooWorkspace pythonizations with bracket operator alternative for `RooWorkspace::obj()`; - Command argument pythonization for RooWorkspace::import(); - Pythonization of tutorial files. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8803
https://github.com/root-project/root/pull/8804:184,Energy Efficiency,reduce,reduces,184,"Remove definitions for weak symbols that can be referenced from the process. Idea by @hahnjo !. Should fix relocation issues on M1 as reported by @FonsRademakers . For hsimple.C, this reduces the amount of emitted symbols from 57 to 43.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8804
https://github.com/root-project/root/pull/8805:138,Deployability,update,updated,138,# This Pull request:. ## Changes or fixes:. Improves the issue template setup section. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #8795,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8805
https://github.com/root-project/root/pull/8805:108,Testability,test,tested,108,# This Pull request:. ## Changes or fixes:. Improves the issue template setup section. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #8795,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8805
https://github.com/root-project/root/issues/8806:211,Modifiability,variab,variable,211,"- [ ] Checked for duplicates. When the `auto` keyword is used in the interpreter to substitute pointer types, the value of the pointer is not printed out correctly, even though the pointer points to the correct variable. A few simple interpreter commands to reproduce the problem:; ```; root [0] int x = 1; (int) 1; root [1] int y = 2; (int) 2; root [2] auto xp = &x; (int *) @0x7ffe114d3bb8 <- WRONG!; root [3] auto yp = &y; (int *) @0x7ffe114d3bb8 <- WRONG!; root [4] &x; (int *) 0x7f3bcb682018; root [5] &y; (int *) 0x7f3bcb68201c; root [6] xp; (int *) @0x7ffe114d3bb8 <- WRONG!; root [7] yp; (int *) @0x7ffe114d3bb8 <- WRONG!; root [8] *xp; (int) 1; root [9] *yp; (int) 2; ```. However, if one uses `auto *` instead of auto, one gets the expected behavior:. ```; root [0] int x = 1; (int) 1; root [1] int y = 2; (int) 2; root [2] auto * xp = &x; (int *) 0x7f8f0a394018 <- CORRECT!; root [3] auto * yp = &y; (int *) 0x7f8f0a39401c <- CORRECT!; root [4] &x; (int *) 0x7f8f0a394018; root [5] &y; (int *) 0x7f8f0a39401c; root [6] xp; (int *) 0x7f8f0a394018 <- CORRECT!; root [7] yp; (int *) 0x7f8f0a39401c <- CORRECT!; root [8] *xp; (int) 1; root [9] *yp; (int) 2; ```. Can we fix the interpreter such that it also prints the correct pointer values when `auto` is used?. This problem was originally spotted on the ROOT forum:; https://root-forum.cern.ch/t/wrong-object-returned-in-root-when-using-auto-keyword",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8806
https://github.com/root-project/root/issues/8806:227,Usability,simpl,simple,227,"- [ ] Checked for duplicates. When the `auto` keyword is used in the interpreter to substitute pointer types, the value of the pointer is not printed out correctly, even though the pointer points to the correct variable. A few simple interpreter commands to reproduce the problem:; ```; root [0] int x = 1; (int) 1; root [1] int y = 2; (int) 2; root [2] auto xp = &x; (int *) @0x7ffe114d3bb8 <- WRONG!; root [3] auto yp = &y; (int *) @0x7ffe114d3bb8 <- WRONG!; root [4] &x; (int *) 0x7f3bcb682018; root [5] &y; (int *) 0x7f3bcb68201c; root [6] xp; (int *) @0x7ffe114d3bb8 <- WRONG!; root [7] yp; (int *) @0x7ffe114d3bb8 <- WRONG!; root [8] *xp; (int) 1; root [9] *yp; (int) 2; ```. However, if one uses `auto *` instead of auto, one gets the expected behavior:. ```; root [0] int x = 1; (int) 1; root [1] int y = 2; (int) 2; root [2] auto * xp = &x; (int *) 0x7f8f0a394018 <- CORRECT!; root [3] auto * yp = &y; (int *) 0x7f8f0a39401c <- CORRECT!; root [4] &x; (int *) 0x7f8f0a394018; root [5] &y; (int *) 0x7f8f0a39401c; root [6] xp; (int *) 0x7f8f0a394018 <- CORRECT!; root [7] yp; (int *) 0x7f8f0a39401c <- CORRECT!; root [8] *xp; (int) 1; root [9] *yp; (int) 2; ```. Can we fix the interpreter such that it also prints the correct pointer values when `auto` is used?. This problem was originally spotted on the ROOT forum:; https://root-forum.cern.ch/t/wrong-object-returned-in-root-when-using-auto-keyword",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8806
https://github.com/root-project/root/issues/8807:839,Availability,avail,available,839,"In different ROOT components, it is convenient to have a helper function that takes a string, similar to the `str.split` function that Python has for example:. ```Python; ""a,b,c,d,e"".split("","") # returns ['a', 'b', 'c', 'd', 'e']; ```. Currently, there is code duplication to provide such a function in separate ROOT components like `roofit` and `hist`:; * https://github.com/root-project/root/blob/dcf920904564bbdca08a6acfa70019bbc24b3897/hist/hist/src/TFormula.cxx#L1678; * https://github.com/root-project/root/blob/dcf920904564bbdca08a6acfa70019bbc24b3897/roofit/roofitcore/src/RooHelpers.cxx#L67. As suggested by @Axel-Naumann in https://github.com/root-project/root/pull/8801#discussion_r683437844, this general function should be moved into `foundation/core` to about the code duplication and make the string-splitting functionality available the every ROOT component. It is still an open question what the name of the function should be (as well as the name of the file it's in), and whether it should return a `std::vector<std::string>` or `std::vector<std::string_view>`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8807
https://github.com/root-project/root/issues/8808:330,Deployability,update,updated,330,1. The [rf204b_extendedLikelihood_rangedFit.C](https://root.cern.ch/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html) tutorial should also be translated to Python; 2. The [rf204b_extendedLikelihood_rangedFit.C](https://root.cern.ch/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html) tutorial definitely needs to be updated to reflect the [new behavior of multi-range fits introduced in this release cycle](https://github.com/root-project/root/pull/7719),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8808
https://github.com/root-project/root/issues/8808:406,Deployability,release,release,406,1. The [rf204b_extendedLikelihood_rangedFit.C](https://root.cern.ch/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html) tutorial should also be translated to Python; 2. The [rf204b_extendedLikelihood_rangedFit.C](https://root.cern.ch/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html) tutorial definitely needs to be updated to reflect the [new behavior of multi-range fits introduced in this release cycle](https://github.com/root-project/root/pull/7719),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8808
https://github.com/root-project/root/pull/8810:221,Availability,error,errors,221,Set the CMake policy `CMP0091 (MSVC runtime library flags are selected by an abstraction)` to `OLD` to keep the old way of selecting the runtime library with the `-MD`/`-MDd` compiler flag. This fixes several compilation errors like:; ```; RStl.obj : error LNK2038: mismatch detected for '_ITERATOR_DEBUG_LEVEL': value '0' doesn't match value '2' in rootcling_stage1.obj; RStl.obj : error LNK2038: mismatch detected for 'RuntimeLibrary': value 'MD_DynamicRelease' doesn't match value 'MDd_DynamicDebug' in rootcling_stage1.obj; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8810
https://github.com/root-project/root/pull/8810:251,Availability,error,error,251,Set the CMake policy `CMP0091 (MSVC runtime library flags are selected by an abstraction)` to `OLD` to keep the old way of selecting the runtime library with the `-MD`/`-MDd` compiler flag. This fixes several compilation errors like:; ```; RStl.obj : error LNK2038: mismatch detected for '_ITERATOR_DEBUG_LEVEL': value '0' doesn't match value '2' in rootcling_stage1.obj; RStl.obj : error LNK2038: mismatch detected for 'RuntimeLibrary': value 'MD_DynamicRelease' doesn't match value 'MDd_DynamicDebug' in rootcling_stage1.obj; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8810
https://github.com/root-project/root/pull/8810:383,Availability,error,error,383,Set the CMake policy `CMP0091 (MSVC runtime library flags are selected by an abstraction)` to `OLD` to keep the old way of selecting the runtime library with the `-MD`/`-MDd` compiler flag. This fixes several compilation errors like:; ```; RStl.obj : error LNK2038: mismatch detected for '_ITERATOR_DEBUG_LEVEL': value '0' doesn't match value '2' in rootcling_stage1.obj; RStl.obj : error LNK2038: mismatch detected for 'RuntimeLibrary': value 'MD_DynamicRelease' doesn't match value 'MDd_DynamicDebug' in rootcling_stage1.obj; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8810
https://github.com/root-project/root/pull/8810:275,Safety,detect,detected,275,Set the CMake policy `CMP0091 (MSVC runtime library flags are selected by an abstraction)` to `OLD` to keep the old way of selecting the runtime library with the `-MD`/`-MDd` compiler flag. This fixes several compilation errors like:; ```; RStl.obj : error LNK2038: mismatch detected for '_ITERATOR_DEBUG_LEVEL': value '0' doesn't match value '2' in rootcling_stage1.obj; RStl.obj : error LNK2038: mismatch detected for 'RuntimeLibrary': value 'MD_DynamicRelease' doesn't match value 'MDd_DynamicDebug' in rootcling_stage1.obj; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8810
https://github.com/root-project/root/pull/8810:407,Safety,detect,detected,407,Set the CMake policy `CMP0091 (MSVC runtime library flags are selected by an abstraction)` to `OLD` to keep the old way of selecting the runtime library with the `-MD`/`-MDd` compiler flag. This fixes several compilation errors like:; ```; RStl.obj : error LNK2038: mismatch detected for '_ITERATOR_DEBUG_LEVEL': value '0' doesn't match value '2' in rootcling_stage1.obj; RStl.obj : error LNK2038: mismatch detected for 'RuntimeLibrary': value 'MD_DynamicRelease' doesn't match value 'MDd_DynamicDebug' in rootcling_stage1.obj; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8810
https://github.com/root-project/root/pull/8811:249,Testability,test,tested,249,# This Pull request:. ## Changes or fixes:. Allows forwarding emit arg to TGNumberEntryField; It's a follow-up from https://github.com/root-project/root/pull/8656 which implemented emit for SetNumber-emit in TGNumberEntryField. ## Checklist:. - [x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8811
https://github.com/root-project/root/pull/8812:74,Testability,test,tests,74,Disable the failing `rf408_RDataFrameToRooFit.py` and `rf708_bphysics.py` tests on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8812
https://github.com/root-project/root/issues/8814:952,Availability,down,download,952,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8814
https://github.com/root-project/root/issues/8814:934,Deployability,install,install,934,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8814
https://github.com/root-project/root/issues/8814:391,Usability,clear,clear,391,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8814
https://github.com/root-project/root/issues/8814:489,Usability,clear,clear,489,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8814
https://github.com/root-project/root/issues/8815:177,Deployability,Release,Release,177,"- [x ] Checked for duplicates. ### Describe the bug; The build of builtin TBB does not inherit CXXFLAGS from the main ROOT cmake. ``[buildir]/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake`` configures a build of the internal TBB. The ``CXXFLAGS`` setting in this file does not pick up user environment ``CXXFLAGS`` or ``CMAKE_CXX_FLAGS`` from the main build. ### Expected behavior; Any ``CXXFLAGS`` set by the user should be inherited by the TBB build. OR. The ROOT CMake configuration should provide an optional ``TBB_CXX_FLAGS`` variable to set these flags for the TBB build. In either case, if the user specifies certain ``CXXFLAGS`` that are required for the build (e.g., -gcc-name= for an Intel compiler) then those flags should be . ### To Reproduce; 1. Set the ``CXXFLAGS`` environment variable or ``CMAKE_CXX_FLAGS`` to include any innocuous value, e.g. ``-Wextra``; 2. Inspect ``[buildir]/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake`` to get the make command created by this cmake.; 3. Running this make command will list the individual make steps, where you can see that the ``CXXFLAGS`` were not included. ### Setup; 1. ROOT version: Master branch commit 270483321be3ecc443e691d8e07c740d9c75ff87 (Aug 3, 2021); 2. Operating system: linux (custom OS for institutional cluster); 3. How you obtained ROOT: source code from github. ### Additional context; User-specified ``CXXFLAGS`` are often unnecessary in the era of CMake, and many users may use unnecessary or counterproductive ``CXXFLAGS`` out of habit. However, there are some situations were these flags are necessary, e.g. the ``-gcc-name`` flag for some intel compilers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8815
https://github.com/root-project/root/issues/8815:475,Deployability,configurat,configuration,475,"- [x ] Checked for duplicates. ### Describe the bug; The build of builtin TBB does not inherit CXXFLAGS from the main ROOT cmake. ``[buildir]/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake`` configures a build of the internal TBB. The ``CXXFLAGS`` setting in this file does not pick up user environment ``CXXFLAGS`` or ``CMAKE_CXX_FLAGS`` from the main build. ### Expected behavior; Any ``CXXFLAGS`` set by the user should be inherited by the TBB build. OR. The ROOT CMake configuration should provide an optional ``TBB_CXX_FLAGS`` variable to set these flags for the TBB build. In either case, if the user specifies certain ``CXXFLAGS`` that are required for the build (e.g., -gcc-name= for an Intel compiler) then those flags should be . ### To Reproduce; 1. Set the ``CXXFLAGS`` environment variable or ``CMAKE_CXX_FLAGS`` to include any innocuous value, e.g. ``-Wextra``; 2. Inspect ``[buildir]/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake`` to get the make command created by this cmake.; 3. Running this make command will list the individual make steps, where you can see that the ``CXXFLAGS`` were not included. ### Setup; 1. ROOT version: Master branch commit 270483321be3ecc443e691d8e07c740d9c75ff87 (Aug 3, 2021); 2. Operating system: linux (custom OS for institutional cluster); 3. How you obtained ROOT: source code from github. ### Additional context; User-specified ``CXXFLAGS`` are often unnecessary in the era of CMake, and many users may use unnecessary or counterproductive ``CXXFLAGS`` out of habit. However, there are some situations were these flags are necessary, e.g. the ``-gcc-name`` flag for some intel compilers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8815
https://github.com/root-project/root/issues/8815:936,Deployability,Release,Release,936,"- [x ] Checked for duplicates. ### Describe the bug; The build of builtin TBB does not inherit CXXFLAGS from the main ROOT cmake. ``[buildir]/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake`` configures a build of the internal TBB. The ``CXXFLAGS`` setting in this file does not pick up user environment ``CXXFLAGS`` or ``CMAKE_CXX_FLAGS`` from the main build. ### Expected behavior; Any ``CXXFLAGS`` set by the user should be inherited by the TBB build. OR. The ROOT CMake configuration should provide an optional ``TBB_CXX_FLAGS`` variable to set these flags for the TBB build. In either case, if the user specifies certain ``CXXFLAGS`` that are required for the build (e.g., -gcc-name= for an Intel compiler) then those flags should be . ### To Reproduce; 1. Set the ``CXXFLAGS`` environment variable or ``CMAKE_CXX_FLAGS`` to include any innocuous value, e.g. ``-Wextra``; 2. Inspect ``[buildir]/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake`` to get the make command created by this cmake.; 3. Running this make command will list the individual make steps, where you can see that the ``CXXFLAGS`` were not included. ### Setup; 1. ROOT version: Master branch commit 270483321be3ecc443e691d8e07c740d9c75ff87 (Aug 3, 2021); 2. Operating system: linux (custom OS for institutional cluster); 3. How you obtained ROOT: source code from github. ### Additional context; User-specified ``CXXFLAGS`` are often unnecessary in the era of CMake, and many users may use unnecessary or counterproductive ``CXXFLAGS`` out of habit. However, there are some situations were these flags are necessary, e.g. the ``-gcc-name`` flag for some intel compilers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8815
https://github.com/root-project/root/issues/8815:87,Modifiability,inherit,inherit,87,"- [x ] Checked for duplicates. ### Describe the bug; The build of builtin TBB does not inherit CXXFLAGS from the main ROOT cmake. ``[buildir]/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake`` configures a build of the internal TBB. The ``CXXFLAGS`` setting in this file does not pick up user environment ``CXXFLAGS`` or ``CMAKE_CXX_FLAGS`` from the main build. ### Expected behavior; Any ``CXXFLAGS`` set by the user should be inherited by the TBB build. OR. The ROOT CMake configuration should provide an optional ``TBB_CXX_FLAGS`` variable to set these flags for the TBB build. In either case, if the user specifies certain ``CXXFLAGS`` that are required for the build (e.g., -gcc-name= for an Intel compiler) then those flags should be . ### To Reproduce; 1. Set the ``CXXFLAGS`` environment variable or ``CMAKE_CXX_FLAGS`` to include any innocuous value, e.g. ``-Wextra``; 2. Inspect ``[buildir]/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake`` to get the make command created by this cmake.; 3. Running this make command will list the individual make steps, where you can see that the ``CXXFLAGS`` were not included. ### Setup; 1. ROOT version: Master branch commit 270483321be3ecc443e691d8e07c740d9c75ff87 (Aug 3, 2021); 2. Operating system: linux (custom OS for institutional cluster); 3. How you obtained ROOT: source code from github. ### Additional context; User-specified ``CXXFLAGS`` are often unnecessary in the era of CMake, and many users may use unnecessary or counterproductive ``CXXFLAGS`` out of habit. However, there are some situations were these flags are necessary, e.g. the ``-gcc-name`` flag for some intel compilers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8815
https://github.com/root-project/root/issues/8815:193,Modifiability,config,configures,193,"- [x ] Checked for duplicates. ### Describe the bug; The build of builtin TBB does not inherit CXXFLAGS from the main ROOT cmake. ``[buildir]/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake`` configures a build of the internal TBB. The ``CXXFLAGS`` setting in this file does not pick up user environment ``CXXFLAGS`` or ``CMAKE_CXX_FLAGS`` from the main build. ### Expected behavior; Any ``CXXFLAGS`` set by the user should be inherited by the TBB build. OR. The ROOT CMake configuration should provide an optional ``TBB_CXX_FLAGS`` variable to set these flags for the TBB build. In either case, if the user specifies certain ``CXXFLAGS`` that are required for the build (e.g., -gcc-name= for an Intel compiler) then those flags should be . ### To Reproduce; 1. Set the ``CXXFLAGS`` environment variable or ``CMAKE_CXX_FLAGS`` to include any innocuous value, e.g. ``-Wextra``; 2. Inspect ``[buildir]/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake`` to get the make command created by this cmake.; 3. Running this make command will list the individual make steps, where you can see that the ``CXXFLAGS`` were not included. ### Setup; 1. ROOT version: Master branch commit 270483321be3ecc443e691d8e07c740d9c75ff87 (Aug 3, 2021); 2. Operating system: linux (custom OS for institutional cluster); 3. How you obtained ROOT: source code from github. ### Additional context; User-specified ``CXXFLAGS`` are often unnecessary in the era of CMake, and many users may use unnecessary or counterproductive ``CXXFLAGS`` out of habit. However, there are some situations were these flags are necessary, e.g. the ``-gcc-name`` flag for some intel compilers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8815
https://github.com/root-project/root/issues/8815:428,Modifiability,inherit,inherited,428,"- [x ] Checked for duplicates. ### Describe the bug; The build of builtin TBB does not inherit CXXFLAGS from the main ROOT cmake. ``[buildir]/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake`` configures a build of the internal TBB. The ``CXXFLAGS`` setting in this file does not pick up user environment ``CXXFLAGS`` or ``CMAKE_CXX_FLAGS`` from the main build. ### Expected behavior; Any ``CXXFLAGS`` set by the user should be inherited by the TBB build. OR. The ROOT CMake configuration should provide an optional ``TBB_CXX_FLAGS`` variable to set these flags for the TBB build. In either case, if the user specifies certain ``CXXFLAGS`` that are required for the build (e.g., -gcc-name= for an Intel compiler) then those flags should be . ### To Reproduce; 1. Set the ``CXXFLAGS`` environment variable or ``CMAKE_CXX_FLAGS`` to include any innocuous value, e.g. ``-Wextra``; 2. Inspect ``[buildir]/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake`` to get the make command created by this cmake.; 3. Running this make command will list the individual make steps, where you can see that the ``CXXFLAGS`` were not included. ### Setup; 1. ROOT version: Master branch commit 270483321be3ecc443e691d8e07c740d9c75ff87 (Aug 3, 2021); 2. Operating system: linux (custom OS for institutional cluster); 3. How you obtained ROOT: source code from github. ### Additional context; User-specified ``CXXFLAGS`` are often unnecessary in the era of CMake, and many users may use unnecessary or counterproductive ``CXXFLAGS`` out of habit. However, there are some situations were these flags are necessary, e.g. the ``-gcc-name`` flag for some intel compilers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8815
https://github.com/root-project/root/issues/8815:475,Modifiability,config,configuration,475,"- [x ] Checked for duplicates. ### Describe the bug; The build of builtin TBB does not inherit CXXFLAGS from the main ROOT cmake. ``[buildir]/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake`` configures a build of the internal TBB. The ``CXXFLAGS`` setting in this file does not pick up user environment ``CXXFLAGS`` or ``CMAKE_CXX_FLAGS`` from the main build. ### Expected behavior; Any ``CXXFLAGS`` set by the user should be inherited by the TBB build. OR. The ROOT CMake configuration should provide an optional ``TBB_CXX_FLAGS`` variable to set these flags for the TBB build. In either case, if the user specifies certain ``CXXFLAGS`` that are required for the build (e.g., -gcc-name= for an Intel compiler) then those flags should be . ### To Reproduce; 1. Set the ``CXXFLAGS`` environment variable or ``CMAKE_CXX_FLAGS`` to include any innocuous value, e.g. ``-Wextra``; 2. Inspect ``[buildir]/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake`` to get the make command created by this cmake.; 3. Running this make command will list the individual make steps, where you can see that the ``CXXFLAGS`` were not included. ### Setup; 1. ROOT version: Master branch commit 270483321be3ecc443e691d8e07c740d9c75ff87 (Aug 3, 2021); 2. Operating system: linux (custom OS for institutional cluster); 3. How you obtained ROOT: source code from github. ### Additional context; User-specified ``CXXFLAGS`` are often unnecessary in the era of CMake, and many users may use unnecessary or counterproductive ``CXXFLAGS`` out of habit. However, there are some situations were these flags are necessary, e.g. the ``-gcc-name`` flag for some intel compilers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8815
https://github.com/root-project/root/issues/8815:534,Modifiability,variab,variable,534,"- [x ] Checked for duplicates. ### Describe the bug; The build of builtin TBB does not inherit CXXFLAGS from the main ROOT cmake. ``[buildir]/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake`` configures a build of the internal TBB. The ``CXXFLAGS`` setting in this file does not pick up user environment ``CXXFLAGS`` or ``CMAKE_CXX_FLAGS`` from the main build. ### Expected behavior; Any ``CXXFLAGS`` set by the user should be inherited by the TBB build. OR. The ROOT CMake configuration should provide an optional ``TBB_CXX_FLAGS`` variable to set these flags for the TBB build. In either case, if the user specifies certain ``CXXFLAGS`` that are required for the build (e.g., -gcc-name= for an Intel compiler) then those flags should be . ### To Reproduce; 1. Set the ``CXXFLAGS`` environment variable or ``CMAKE_CXX_FLAGS`` to include any innocuous value, e.g. ``-Wextra``; 2. Inspect ``[buildir]/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake`` to get the make command created by this cmake.; 3. Running this make command will list the individual make steps, where you can see that the ``CXXFLAGS`` were not included. ### Setup; 1. ROOT version: Master branch commit 270483321be3ecc443e691d8e07c740d9c75ff87 (Aug 3, 2021); 2. Operating system: linux (custom OS for institutional cluster); 3. How you obtained ROOT: source code from github. ### Additional context; User-specified ``CXXFLAGS`` are often unnecessary in the era of CMake, and many users may use unnecessary or counterproductive ``CXXFLAGS`` out of habit. However, there are some situations were these flags are necessary, e.g. the ``-gcc-name`` flag for some intel compilers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8815
https://github.com/root-project/root/issues/8815:796,Modifiability,variab,variable,796,"- [x ] Checked for duplicates. ### Describe the bug; The build of builtin TBB does not inherit CXXFLAGS from the main ROOT cmake. ``[buildir]/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake`` configures a build of the internal TBB. The ``CXXFLAGS`` setting in this file does not pick up user environment ``CXXFLAGS`` or ``CMAKE_CXX_FLAGS`` from the main build. ### Expected behavior; Any ``CXXFLAGS`` set by the user should be inherited by the TBB build. OR. The ROOT CMake configuration should provide an optional ``TBB_CXX_FLAGS`` variable to set these flags for the TBB build. In either case, if the user specifies certain ``CXXFLAGS`` that are required for the build (e.g., -gcc-name= for an Intel compiler) then those flags should be . ### To Reproduce; 1. Set the ``CXXFLAGS`` environment variable or ``CMAKE_CXX_FLAGS`` to include any innocuous value, e.g. ``-Wextra``; 2. Inspect ``[buildir]/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake`` to get the make command created by this cmake.; 3. Running this make command will list the individual make steps, where you can see that the ``CXXFLAGS`` were not included. ### Setup; 1. ROOT version: Master branch commit 270483321be3ecc443e691d8e07c740d9c75ff87 (Aug 3, 2021); 2. Operating system: linux (custom OS for institutional cluster); 3. How you obtained ROOT: source code from github. ### Additional context; User-specified ``CXXFLAGS`` are often unnecessary in the era of CMake, and many users may use unnecessary or counterproductive ``CXXFLAGS`` out of habit. However, there are some situations were these flags are necessary, e.g. the ``-gcc-name`` flag for some intel compilers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8815
https://github.com/root-project/root/pull/8816:905,Integrability,depend,depending,905,"This PR addresses the TODO comments to remove the superfluous public getters / properties logic in `TreeHeadNode`. Currently, just parses the user arguments in the `__init__` method and stores the needed attributes. My idea is that in the end we'll only need to store `npartitions` and `tree` (which are always needed) plus `defaultbranches` and `friendinfo` as ""optional"" class attributes (meaning they are initialized to `None` and changed if some conditions apply). . For simplicity, in this PR I still leave `treename` and `inputfiles` attributes which are needed in the `Ranges.get_clusters` function. The next PRs will address:; * The assumption we only have one unique treename in the RDataFrame; * Change in `Ranges.get_clusters` to accept a `TTree` instance as argument, pairing it with new C++ functions in `ROOT::Internal::TreeUtils` to retrieve a vector of clusters (plus some other metadata) depending if it's a TTree or TChain. If the logic for this PR is approved I'll add more docs and commit messages",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8816
https://github.com/root-project/root/pull/8816:1009,Integrability,message,messages,1009,"This PR addresses the TODO comments to remove the superfluous public getters / properties logic in `TreeHeadNode`. Currently, just parses the user arguments in the `__init__` method and stores the needed attributes. My idea is that in the end we'll only need to store `npartitions` and `tree` (which are always needed) plus `defaultbranches` and `friendinfo` as ""optional"" class attributes (meaning they are initialized to `None` and changed if some conditions apply). . For simplicity, in this PR I still leave `treename` and `inputfiles` attributes which are needed in the `Ranges.get_clusters` function. The next PRs will address:; * The assumption we only have one unique treename in the RDataFrame; * Change in `Ranges.get_clusters` to accept a `TTree` instance as argument, pairing it with new C++ functions in `ROOT::Internal::TreeUtils` to retrieve a vector of clusters (plus some other metadata) depending if it's a TTree or TChain. If the logic for this PR is approved I'll add more docs and commit messages",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8816
https://github.com/root-project/root/pull/8816:90,Testability,log,logic,90,"This PR addresses the TODO comments to remove the superfluous public getters / properties logic in `TreeHeadNode`. Currently, just parses the user arguments in the `__init__` method and stores the needed attributes. My idea is that in the end we'll only need to store `npartitions` and `tree` (which are always needed) plus `defaultbranches` and `friendinfo` as ""optional"" class attributes (meaning they are initialized to `None` and changed if some conditions apply). . For simplicity, in this PR I still leave `treename` and `inputfiles` attributes which are needed in the `Ranges.get_clusters` function. The next PRs will address:; * The assumption we only have one unique treename in the RDataFrame; * Change in `Ranges.get_clusters` to accept a `TTree` instance as argument, pairing it with new C++ functions in `ROOT::Internal::TreeUtils` to retrieve a vector of clusters (plus some other metadata) depending if it's a TTree or TChain. If the logic for this PR is approved I'll add more docs and commit messages",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8816
https://github.com/root-project/root/pull/8816:949,Testability,log,logic,949,"This PR addresses the TODO comments to remove the superfluous public getters / properties logic in `TreeHeadNode`. Currently, just parses the user arguments in the `__init__` method and stores the needed attributes. My idea is that in the end we'll only need to store `npartitions` and `tree` (which are always needed) plus `defaultbranches` and `friendinfo` as ""optional"" class attributes (meaning they are initialized to `None` and changed if some conditions apply). . For simplicity, in this PR I still leave `treename` and `inputfiles` attributes which are needed in the `Ranges.get_clusters` function. The next PRs will address:; * The assumption we only have one unique treename in the RDataFrame; * Change in `Ranges.get_clusters` to accept a `TTree` instance as argument, pairing it with new C++ functions in `ROOT::Internal::TreeUtils` to retrieve a vector of clusters (plus some other metadata) depending if it's a TTree or TChain. If the logic for this PR is approved I'll add more docs and commit messages",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8816
https://github.com/root-project/root/pull/8816:475,Usability,simpl,simplicity,475,"This PR addresses the TODO comments to remove the superfluous public getters / properties logic in `TreeHeadNode`. Currently, just parses the user arguments in the `__init__` method and stores the needed attributes. My idea is that in the end we'll only need to store `npartitions` and `tree` (which are always needed) plus `defaultbranches` and `friendinfo` as ""optional"" class attributes (meaning they are initialized to `None` and changed if some conditions apply). . For simplicity, in this PR I still leave `treename` and `inputfiles` attributes which are needed in the `Ranges.get_clusters` function. The next PRs will address:; * The assumption we only have one unique treename in the RDataFrame; * Change in `Ranges.get_clusters` to accept a `TTree` instance as argument, pairing it with new C++ functions in `ROOT::Internal::TreeUtils` to retrieve a vector of clusters (plus some other metadata) depending if it's a TTree or TChain. If the logic for this PR is approved I'll add more docs and commit messages",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8816
https://github.com/root-project/root/issues/8817:1079,Deployability,install,installed,1079,"### Describe the bug. There seems to be a bug in the selection of a function overload with TObject-derived classes from Python:. ```py; import ROOT. ROOT.gInterpreter.Declare(; '''; class A: public TObject {};; class B: public A {};. void myfunc(const A &a){; std::cout << ""A"" << std::endl;; }. void myfunc(const B &b){; std::cout << ""B"" << std::endl;; }; '''). ROOT.myfunc(ROOT.A()); ROOT.myfunc(ROOT.B()); ```; The snippet above outputs; ```; A; A; ```; ### Expected behavior; Snippet should output `A\nB`, And indeed from the root prompt I get the correct output; ```cpp; root [0] class A: public TObject {};; root [1] class B: public A {};; root [2] void myfunc(const A &a){; root (cont'ed, cancel with .@) [3] std::cout << ""A"" << std::endl;; root (cont'ed, cancel with .@) [4]}; root [5] ; root [5] void myfunc(const B &b){; root (cont'ed, cancel with .@) [6] std::cout << ""B"" << std::endl;; root (cont'ed, cancel with .@) [7]}; root [8] myfunc(A{});; A; root [9] myfunc(B{});; B; ```; ### Setup; I tried it with both ROOT 6.24/02 and 6.20/06 (to check against old PyROOT), installed with conda on a Fedora32 machine",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8817
https://github.com/root-project/root/pull/8820:369,Performance,multi-thread,multi-thread,369,"chain->Add(""filename/treename"") is ambiguous when filename does not; end in `.root`: in that case `TChain` interprets its argument; as the full path to the file, with no treename specified. We now instead use the unambiguous syntax ""filename?query#treename""; when building chains in TTreeProcessorMT. This fixes #8739 (reading files with no `.root` extension in RDF's; multi-thread event loops).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8820
https://github.com/root-project/root/pull/8822:273,Deployability,update,updated,273,"# This Pull request:; Solve the problem with a segfault in the tests. ## Changes or fixes:; * Changed the routines to eval R code in several methods on TRInterface.; * Fixed link to the documentation (ROOT-R Users Guide). ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes # ; https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-24-00-patches/93/LABEL=ROOT-centos7,SPEC=noimt,V=6-24/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8822
https://github.com/root-project/root/pull/8822:415,Deployability,patch,patches,415,"# This Pull request:; Solve the problem with a segfault in the tests. ## Changes or fixes:; * Changed the routines to eval R code in several methods on TRInterface.; * Fixed link to the documentation (ROOT-R Users Guide). ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes # ; https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-24-00-patches/93/LABEL=ROOT-centos7,SPEC=noimt,V=6-24/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8822
https://github.com/root-project/root/pull/8822:106,Integrability,rout,routines,106,"# This Pull request:; Solve the problem with a segfault in the tests. ## Changes or fixes:; * Changed the routines to eval R code in several methods on TRInterface.; * Fixed link to the documentation (ROOT-R Users Guide). ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes # ; https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-24-00-patches/93/LABEL=ROOT-centos7,SPEC=noimt,V=6-24/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8822
https://github.com/root-project/root/pull/8822:63,Testability,test,tests,63,"# This Pull request:; Solve the problem with a segfault in the tests. ## Changes or fixes:; * Changed the routines to eval R code in several methods on TRInterface.; * Fixed link to the documentation (ROOT-R Users Guide). ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes # ; https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-24-00-patches/93/LABEL=ROOT-centos7,SPEC=noimt,V=6-24/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8822
https://github.com/root-project/root/pull/8822:243,Testability,test,tested,243,"# This Pull request:; Solve the problem with a segfault in the tests. ## Changes or fixes:; * Changed the routines to eval R code in several methods on TRInterface.; * Fixed link to the documentation (ROOT-R Users Guide). ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes # ; https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-24-00-patches/93/LABEL=ROOT-centos7,SPEC=noimt,V=6-24/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8822
https://github.com/root-project/root/pull/8822:463,Testability,test,testReport,463,"# This Pull request:; Solve the problem with a segfault in the tests. ## Changes or fixes:; * Changed the routines to eval R code in several methods on TRInterface.; * Fixed link to the documentation (ROOT-R Users Guide). ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes # ; https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-24-00-patches/93/LABEL=ROOT-centos7,SPEC=noimt,V=6-24/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8822
https://github.com/root-project/root/pull/8822:214,Usability,Guid,Guide,214,"# This Pull request:; Solve the problem with a segfault in the tests. ## Changes or fixes:; * Changed the routines to eval R code in several methods on TRInterface.; * Fixed link to the documentation (ROOT-R Users Guide). ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes # ; https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-24-00-patches/93/LABEL=ROOT-centos7,SPEC=noimt,V=6-24/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8822
https://github.com/root-project/root/pull/8825:238,Integrability,Depend,Depends,238,## This Pull request:; Development of the Recurrent Neural Network operator for the Google Summer of Code project [Inference Code Generation for Recurrent Neural Networks](https://summerofcode.withgoogle.com/projects/#5885532631990272).; Depends on #8800 and #8881. ## Checklist:. - [ x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8825
https://github.com/root-project/root/pull/8825:288,Testability,test,tested,288,## This Pull request:; Development of the Recurrent Neural Network operator for the Google Summer of Code project [Inference Code Generation for Recurrent Neural Networks](https://summerofcode.withgoogle.com/projects/#5885532631990272).; Depends on #8800 and #8881. ## Checklist:. - [ x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8825
https://github.com/root-project/root/pull/8826:185,Deployability,update,updated,185,# This Pull request:. Fix two failing tests on s390x. ## Changes or fixes:. Apply the same fix for s390x as was already done for arm. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8826
https://github.com/root-project/root/pull/8826:38,Testability,test,tests,38,# This Pull request:. Fix two failing tests on s390x. ## Changes or fixes:. Apply the same fix for s390x as was already done for arm. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8826
https://github.com/root-project/root/pull/8826:155,Testability,test,tested,155,# This Pull request:. Fix two failing tests on s390x. ## Changes or fixes:. Apply the same fix for s390x as was already done for arm. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8826
https://github.com/root-project/root/pull/8827:184,Availability,ERROR,ERROR,184,"PR root-project/root#6969 allowed ROOT to build pcm files for the R package via the RInterface.pcm. However, various headers of R define macros which are defined by math.h and others (ERROR in RooFit). When the global module index is enabled, ROOT loads RInterface on a lookup for (Range). Then the exported macros ""shadow"" the ones which are still in the index and we do not load the correct corresponding module. This obscure problem seems to be coming from a current deficiency in the implementation/interaction; between clang and the index. Pre-loading the RInterface, if enabled, seems to resolve the issue at a reasonable compromise rather than trying to disable the module altogether or undefine the fragile macros.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8827
https://github.com/root-project/root/pull/8827:248,Performance,load,loads,248,"PR root-project/root#6969 allowed ROOT to build pcm files for the R package via the RInterface.pcm. However, various headers of R define macros which are defined by math.h and others (ERROR in RooFit). When the global module index is enabled, ROOT loads RInterface on a lookup for (Range). Then the exported macros ""shadow"" the ones which are still in the index and we do not load the correct corresponding module. This obscure problem seems to be coming from a current deficiency in the implementation/interaction; between clang and the index. Pre-loading the RInterface, if enabled, seems to resolve the issue at a reasonable compromise rather than trying to disable the module altogether or undefine the fragile macros.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8827
https://github.com/root-project/root/pull/8827:376,Performance,load,load,376,"PR root-project/root#6969 allowed ROOT to build pcm files for the R package via the RInterface.pcm. However, various headers of R define macros which are defined by math.h and others (ERROR in RooFit). When the global module index is enabled, ROOT loads RInterface on a lookup for (Range). Then the exported macros ""shadow"" the ones which are still in the index and we do not load the correct corresponding module. This obscure problem seems to be coming from a current deficiency in the implementation/interaction; between clang and the index. Pre-loading the RInterface, if enabled, seems to resolve the issue at a reasonable compromise rather than trying to disable the module altogether or undefine the fragile macros.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8827
https://github.com/root-project/root/pull/8827:549,Performance,load,loading,549,"PR root-project/root#6969 allowed ROOT to build pcm files for the R package via the RInterface.pcm. However, various headers of R define macros which are defined by math.h and others (ERROR in RooFit). When the global module index is enabled, ROOT loads RInterface on a lookup for (Range). Then the exported macros ""shadow"" the ones which are still in the index and we do not load the correct corresponding module. This obscure problem seems to be coming from a current deficiency in the implementation/interaction; between clang and the index. Pre-loading the RInterface, if enabled, seems to resolve the issue at a reasonable compromise rather than trying to disable the module altogether or undefine the fragile macros.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8827
https://github.com/root-project/root/issues/8828:169,Availability,failure,failure,169,"As explained in https://github.com/root-project/root/issues/8745, if we look up the `Detail` namespace first and then define something else in it, there is an assertion failure. That crash does not happen if there is no prior lookup. Example:. ```; root [0] auto c = TClass::GetClass(""Detail""); (TClass *) @0x7fffd0908fc0; root [1] namespace Detail { int i; }; root.exe: /home/etejedor/root/fork/root/interpreter/llvm/src/include/llvm/Support/Casting.h:105: static bool llvm::isa_impl_cl<To, const From*>::doit(const From*) [with To = clang::TagType; From = clang::Type]: Assertion `Val && ""isa<> used on a null pointer""' failed.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8828
https://github.com/root-project/root/issues/8828:159,Testability,assert,assertion,159,"As explained in https://github.com/root-project/root/issues/8745, if we look up the `Detail` namespace first and then define something else in it, there is an assertion failure. That crash does not happen if there is no prior lookup. Example:. ```; root [0] auto c = TClass::GetClass(""Detail""); (TClass *) @0x7fffd0908fc0; root [1] namespace Detail { int i; }; root.exe: /home/etejedor/root/fork/root/interpreter/llvm/src/include/llvm/Support/Casting.h:105: static bool llvm::isa_impl_cl<To, const From*>::doit(const From*) [with To = clang::TagType; From = clang::Type]: Assertion `Val && ""isa<> used on a null pointer""' failed.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8828
https://github.com/root-project/root/issues/8828:572,Testability,Assert,Assertion,572,"As explained in https://github.com/root-project/root/issues/8745, if we look up the `Detail` namespace first and then define something else in it, there is an assertion failure. That crash does not happen if there is no prior lookup. Example:. ```; root [0] auto c = TClass::GetClass(""Detail""); (TClass *) @0x7fffd0908fc0; root [1] namespace Detail { int i; }; root.exe: /home/etejedor/root/fork/root/interpreter/llvm/src/include/llvm/Support/Casting.h:105: static bool llvm::isa_impl_cl<To, const From*>::doit(const From*) [with To = clang::TagType; From = clang::Type]: Assertion `Val && ""isa<> used on a null pointer""' failed.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8828
https://github.com/root-project/root/pull/8830:118,Deployability,release,released,118,This PR adds support for the latest changes in clad gradient. Please do not merge till a new version (0.9) of clad is released and the version number for clad in ROOT is set to that.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8830
https://github.com/root-project/root/pull/8831:45,Performance,load,loading,45,We need several adjustments to do. First pre-loading of RInterface.pcm in root-project/root@5096f5fffc causes some crashes. Second we seem to still have issues when trying to resolve symbols from the Rcpp library.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8831
https://github.com/root-project/root/pull/8832:266,Deployability,configurat,configuration,266,"Silent the following warnings when enabling arrow (`-Darrow=ON`) on Ubuntu:; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findre2.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""re2"", but; CMake did not find one. Could not find a package configuration file provided by ""re2"" with any of; the following names:. re2Config.cmake; re2-config.cmake. Add the installation prefix of ""re2"" to CMAKE_PREFIX_PATH or set ""re2_DIR""; to a directory containing one of the above files. If ""re2"" provides a; separate development package or SDK, be sure it has been installed.; Call Stack (most recent call first):; /usr/lib/x86_64-linux-gnu/cmake/arrow/Findre2Alt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1088 (find_package); CMakeLists.txt:245 (include); ```; and; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findc-ares.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""c-ares"", but; CMake did not find one. Could not find a package configuration file provided by ""c-ares"" with any; of the following names:. c-aresConfig.cmake; c-ares-config.cmake. Add the installation prefix of ""c-ares"" to CMAKE_PREFIX_PATH or set; ""c-ares_DIR"" to a directory containing one of the above files. If ""c-ares""; provides a sepa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8832
https://github.com/root-project/root/pull/8832:358,Deployability,configurat,configuration,358,"Silent the following warnings when enabling arrow (`-Darrow=ON`) on Ubuntu:; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findre2.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""re2"", but; CMake did not find one. Could not find a package configuration file provided by ""re2"" with any of; the following names:. re2Config.cmake; re2-config.cmake. Add the installation prefix of ""re2"" to CMAKE_PREFIX_PATH or set ""re2_DIR""; to a directory containing one of the above files. If ""re2"" provides a; separate development package or SDK, be sure it has been installed.; Call Stack (most recent call first):; /usr/lib/x86_64-linux-gnu/cmake/arrow/Findre2Alt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1088 (find_package); CMakeLists.txt:245 (include); ```; and; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findc-ares.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""c-ares"", but; CMake did not find one. Could not find a package configuration file provided by ""c-ares"" with any; of the following names:. c-aresConfig.cmake; c-ares-config.cmake. Add the installation prefix of ""c-ares"" to CMAKE_PREFIX_PATH or set; ""c-ares_DIR"" to a directory containing one of the above files. If ""c-ares""; provides a sepa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8832
https://github.com/root-project/root/pull/8832:473,Deployability,install,installation,473,"Silent the following warnings when enabling arrow (`-Darrow=ON`) on Ubuntu:; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findre2.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""re2"", but; CMake did not find one. Could not find a package configuration file provided by ""re2"" with any of; the following names:. re2Config.cmake; re2-config.cmake. Add the installation prefix of ""re2"" to CMAKE_PREFIX_PATH or set ""re2_DIR""; to a directory containing one of the above files. If ""re2"" provides a; separate development package or SDK, be sure it has been installed.; Call Stack (most recent call first):; /usr/lib/x86_64-linux-gnu/cmake/arrow/Findre2Alt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1088 (find_package); CMakeLists.txt:245 (include); ```; and; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findc-ares.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""c-ares"", but; CMake did not find one. Could not find a package configuration file provided by ""c-ares"" with any; of the following names:. c-aresConfig.cmake; c-ares-config.cmake. Add the installation prefix of ""c-ares"" to CMAKE_PREFIX_PATH or set; ""c-ares_DIR"" to a directory containing one of the above files. If ""c-ares""; provides a sepa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8832
https://github.com/root-project/root/pull/8832:669,Deployability,install,installed,669,"Silent the following warnings when enabling arrow (`-Darrow=ON`) on Ubuntu:; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findre2.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""re2"", but; CMake did not find one. Could not find a package configuration file provided by ""re2"" with any of; the following names:. re2Config.cmake; re2-config.cmake. Add the installation prefix of ""re2"" to CMAKE_PREFIX_PATH or set ""re2_DIR""; to a directory containing one of the above files. If ""re2"" provides a; separate development package or SDK, be sure it has been installed.; Call Stack (most recent call first):; /usr/lib/x86_64-linux-gnu/cmake/arrow/Findre2Alt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1088 (find_package); CMakeLists.txt:245 (include); ```; and; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findc-ares.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""c-ares"", but; CMake did not find one. Could not find a package configuration file provided by ""c-ares"" with any; of the following names:. c-aresConfig.cmake; c-ares-config.cmake. Add the installation prefix of ""c-ares"" to CMAKE_PREFIX_PATH or set; ""c-ares_DIR"" to a directory containing one of the above files. If ""c-ares""; provides a sepa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8832
https://github.com/root-project/root/pull/8832:1630,Deployability,configurat,configuration,1630,"opment package or SDK, be sure it has been installed.; Call Stack (most recent call first):; /usr/lib/x86_64-linux-gnu/cmake/arrow/Findre2Alt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1088 (find_package); CMakeLists.txt:245 (include); ```; and; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findc-ares.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""c-ares"", but; CMake did not find one. Could not find a package configuration file provided by ""c-ares"" with any; of the following names:. c-aresConfig.cmake; c-ares-config.cmake. Add the installation prefix of ""c-ares"" to CMAKE_PREFIX_PATH or set; ""c-ares_DIR"" to a directory containing one of the above files. If ""c-ares""; provides a separate development package or SDK, be sure it has been; installed.; Call Stack (most recent call first):; /usr/lib/x86_64-linux-gnu/cmake/arrow/Findc-aresAlt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8832
https://github.com/root-project/root/pull/8832:1725,Deployability,configurat,configuration,1725,"e/arrow/Findre2Alt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1088 (find_package); CMakeLists.txt:245 (include); ```; and; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findc-ares.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""c-ares"", but; CMake did not find one. Could not find a package configuration file provided by ""c-ares"" with any; of the following names:. c-aresConfig.cmake; c-ares-config.cmake. Add the installation prefix of ""c-ares"" to CMAKE_PREFIX_PATH or set; ""c-ares_DIR"" to a directory containing one of the above files. If ""c-ares""; provides a separate development package or SDK, be sure it has been; installed.; Call Stack (most recent call first):; /usr/lib/x86_64-linux-gnu/cmake/arrow/Findc-aresAlt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstall",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8832
https://github.com/root-project/root/pull/8832:1849,Deployability,install,installation,1849,"edSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1088 (find_package); CMakeLists.txt:245 (include); ```; and; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findc-ares.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""c-ares"", but; CMake did not find one. Could not find a package configuration file provided by ""c-ares"" with any; of the following names:. c-aresConfig.cmake; c-ares-config.cmake. Add the installation prefix of ""c-ares"" to CMAKE_PREFIX_PATH or set; ""c-ares_DIR"" to a directory containing one of the above files. If ""c-ares""; provides a separate development package or SDK, be sure it has been; installed.; Call Stack (most recent call first):; /usr/lib/x86_64-linux-gnu/cmake/arrow/Findc-aresAlt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1088 (find_package); CMakeLists.txt:245 (include); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8832
https://github.com/root-project/root/pull/8832:2055,Deployability,install,installed,2055,"edSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1088 (find_package); CMakeLists.txt:245 (include); ```; and; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findc-ares.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""c-ares"", but; CMake did not find one. Could not find a package configuration file provided by ""c-ares"" with any; of the following names:. c-aresConfig.cmake; c-ares-config.cmake. Add the installation prefix of ""c-ares"" to CMAKE_PREFIX_PATH or set; ""c-ares_DIR"" to a directory containing one of the above files. If ""c-ares""; provides a separate development package or SDK, be sure it has been; installed.; Call Stack (most recent call first):; /usr/lib/x86_64-linux-gnu/cmake/arrow/Findc-aresAlt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1088 (find_package); CMakeLists.txt:245 (include); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8832
https://github.com/root-project/root/pull/8832:266,Modifiability,config,configuration,266,"Silent the following warnings when enabling arrow (`-Darrow=ON`) on Ubuntu:; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findre2.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""re2"", but; CMake did not find one. Could not find a package configuration file provided by ""re2"" with any of; the following names:. re2Config.cmake; re2-config.cmake. Add the installation prefix of ""re2"" to CMAKE_PREFIX_PATH or set ""re2_DIR""; to a directory containing one of the above files. If ""re2"" provides a; separate development package or SDK, be sure it has been installed.; Call Stack (most recent call first):; /usr/lib/x86_64-linux-gnu/cmake/arrow/Findre2Alt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1088 (find_package); CMakeLists.txt:245 (include); ```; and; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findc-ares.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""c-ares"", but; CMake did not find one. Could not find a package configuration file provided by ""c-ares"" with any; of the following names:. c-aresConfig.cmake; c-ares-config.cmake. Add the installation prefix of ""c-ares"" to CMAKE_PREFIX_PATH or set; ""c-ares_DIR"" to a directory containing one of the above files. If ""c-ares""; provides a sepa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8832
https://github.com/root-project/root/pull/8832:358,Modifiability,config,configuration,358,"Silent the following warnings when enabling arrow (`-Darrow=ON`) on Ubuntu:; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findre2.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""re2"", but; CMake did not find one. Could not find a package configuration file provided by ""re2"" with any of; the following names:. re2Config.cmake; re2-config.cmake. Add the installation prefix of ""re2"" to CMAKE_PREFIX_PATH or set ""re2_DIR""; to a directory containing one of the above files. If ""re2"" provides a; separate development package or SDK, be sure it has been installed.; Call Stack (most recent call first):; /usr/lib/x86_64-linux-gnu/cmake/arrow/Findre2Alt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1088 (find_package); CMakeLists.txt:245 (include); ```; and; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findc-ares.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""c-ares"", but; CMake did not find one. Could not find a package configuration file provided by ""c-ares"" with any; of the following names:. c-aresConfig.cmake; c-ares-config.cmake. Add the installation prefix of ""c-ares"" to CMAKE_PREFIX_PATH or set; ""c-ares_DIR"" to a directory containing one of the above files. If ""c-ares""; provides a sepa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8832
https://github.com/root-project/root/pull/8832:451,Modifiability,config,config,451,"Silent the following warnings when enabling arrow (`-Darrow=ON`) on Ubuntu:; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findre2.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""re2"", but; CMake did not find one. Could not find a package configuration file provided by ""re2"" with any of; the following names:. re2Config.cmake; re2-config.cmake. Add the installation prefix of ""re2"" to CMAKE_PREFIX_PATH or set ""re2_DIR""; to a directory containing one of the above files. If ""re2"" provides a; separate development package or SDK, be sure it has been installed.; Call Stack (most recent call first):; /usr/lib/x86_64-linux-gnu/cmake/arrow/Findre2Alt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1088 (find_package); CMakeLists.txt:245 (include); ```; and; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findc-ares.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""c-ares"", but; CMake did not find one. Could not find a package configuration file provided by ""c-ares"" with any; of the following names:. c-aresConfig.cmake; c-ares-config.cmake. Add the installation prefix of ""c-ares"" to CMAKE_PREFIX_PATH or set; ""c-ares_DIR"" to a directory containing one of the above files. If ""c-ares""; provides a sepa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8832
https://github.com/root-project/root/pull/8832:1630,Modifiability,config,configuration,1630,"opment package or SDK, be sure it has been installed.; Call Stack (most recent call first):; /usr/lib/x86_64-linux-gnu/cmake/arrow/Findre2Alt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1088 (find_package); CMakeLists.txt:245 (include); ```; and; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findc-ares.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""c-ares"", but; CMake did not find one. Could not find a package configuration file provided by ""c-ares"" with any; of the following names:. c-aresConfig.cmake; c-ares-config.cmake. Add the installation prefix of ""c-ares"" to CMAKE_PREFIX_PATH or set; ""c-ares_DIR"" to a directory containing one of the above files. If ""c-ares""; provides a separate development package or SDK, be sure it has been; installed.; Call Stack (most recent call first):; /usr/lib/x86_64-linux-gnu/cmake/arrow/Findc-aresAlt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8832
https://github.com/root-project/root/pull/8832:1725,Modifiability,config,configuration,1725,"e/arrow/Findre2Alt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1088 (find_package); CMakeLists.txt:245 (include); ```; and; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findc-ares.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""c-ares"", but; CMake did not find one. Could not find a package configuration file provided by ""c-ares"" with any; of the following names:. c-aresConfig.cmake; c-ares-config.cmake. Add the installation prefix of ""c-ares"" to CMAKE_PREFIX_PATH or set; ""c-ares_DIR"" to a directory containing one of the above files. If ""c-ares""; provides a separate development package or SDK, be sure it has been; installed.; Call Stack (most recent call first):; /usr/lib/x86_64-linux-gnu/cmake/arrow/Findc-aresAlt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstall",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8832
https://github.com/root-project/root/pull/8832:1827,Modifiability,config,config,1827,"edSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1088 (find_package); CMakeLists.txt:245 (include); ```; and; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findc-ares.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""c-ares"", but; CMake did not find one. Could not find a package configuration file provided by ""c-ares"" with any; of the following names:. c-aresConfig.cmake; c-ares-config.cmake. Add the installation prefix of ""c-ares"" to CMAKE_PREFIX_PATH or set; ""c-ares_DIR"" to a directory containing one of the above files. If ""c-ares""; provides a separate development package or SDK, be sure it has been; installed.; Call Stack (most recent call first):; /usr/lib/x86_64-linux-gnu/cmake/arrow/Findc-aresAlt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1088 (find_package); CMakeLists.txt:245 (include); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8832
https://github.com/root-project/root/issues/8833:663,Integrability,message,message,663,"Dear ROOT developers,. we have met with a problem reading more than 2-dimensional arrays in TTrees using MakeClass. The problem appears only on the **Windows ROOT 6 version** (same code works on ROOT 6 on Linux, as well as on ROOT 5 in Windows). The code to reproduce is simple:. A tree is created by:; ```; TFile f(""newtree.root"", ""NEW"");; TTree t(""MyTree"", ""Test tree"");; double x[5][5][5];; t.Branch(""x"", x, ""x[5][5][5]"");; t.Fill();; t.Write();; f.Close();; ```; Then produce MakeClass from the tree: ```MyTree->MakeClass()```. Finally, try to read that tree via the class MyTree:; ```; .L MyTree.C; MyTree t;; t.Loop(); // crashes with bad-memory-allocation message (or silently); t.b_x->GetAddress(); // also crashes; ```. No problem is seen when using 2D or 1D arrays, nor simple numbers. Thanks, Pavel",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8833
https://github.com/root-project/root/issues/8833:360,Testability,Test,Test,360,"Dear ROOT developers,. we have met with a problem reading more than 2-dimensional arrays in TTrees using MakeClass. The problem appears only on the **Windows ROOT 6 version** (same code works on ROOT 6 on Linux, as well as on ROOT 5 in Windows). The code to reproduce is simple:. A tree is created by:; ```; TFile f(""newtree.root"", ""NEW"");; TTree t(""MyTree"", ""Test tree"");; double x[5][5][5];; t.Branch(""x"", x, ""x[5][5][5]"");; t.Fill();; t.Write();; f.Close();; ```; Then produce MakeClass from the tree: ```MyTree->MakeClass()```. Finally, try to read that tree via the class MyTree:; ```; .L MyTree.C; MyTree t;; t.Loop(); // crashes with bad-memory-allocation message (or silently); t.b_x->GetAddress(); // also crashes; ```. No problem is seen when using 2D or 1D arrays, nor simple numbers. Thanks, Pavel",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8833
https://github.com/root-project/root/issues/8833:271,Usability,simpl,simple,271,"Dear ROOT developers,. we have met with a problem reading more than 2-dimensional arrays in TTrees using MakeClass. The problem appears only on the **Windows ROOT 6 version** (same code works on ROOT 6 on Linux, as well as on ROOT 5 in Windows). The code to reproduce is simple:. A tree is created by:; ```; TFile f(""newtree.root"", ""NEW"");; TTree t(""MyTree"", ""Test tree"");; double x[5][5][5];; t.Branch(""x"", x, ""x[5][5][5]"");; t.Fill();; t.Write();; f.Close();; ```; Then produce MakeClass from the tree: ```MyTree->MakeClass()```. Finally, try to read that tree via the class MyTree:; ```; .L MyTree.C; MyTree t;; t.Loop(); // crashes with bad-memory-allocation message (or silently); t.b_x->GetAddress(); // also crashes; ```. No problem is seen when using 2D or 1D arrays, nor simple numbers. Thanks, Pavel",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8833
https://github.com/root-project/root/issues/8833:780,Usability,simpl,simple,780,"Dear ROOT developers,. we have met with a problem reading more than 2-dimensional arrays in TTrees using MakeClass. The problem appears only on the **Windows ROOT 6 version** (same code works on ROOT 6 on Linux, as well as on ROOT 5 in Windows). The code to reproduce is simple:. A tree is created by:; ```; TFile f(""newtree.root"", ""NEW"");; TTree t(""MyTree"", ""Test tree"");; double x[5][5][5];; t.Branch(""x"", x, ""x[5][5][5]"");; t.Fill();; t.Write();; f.Close();; ```; Then produce MakeClass from the tree: ```MyTree->MakeClass()```. Finally, try to read that tree via the class MyTree:; ```; .L MyTree.C; MyTree t;; t.Loop(); // crashes with bad-memory-allocation message (or silently); t.b_x->GetAddress(); // also crashes; ```. No problem is seen when using 2D or 1D arrays, nor simple numbers. Thanks, Pavel",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8833
https://github.com/root-project/root/pull/8834:88,Modifiability,inherit,inheritance,88,"Add a new method TClass::GetListOfAllBases to retrieve all the base classes in the full inheritance chain of a class. Use the new function to correctly retrieve information about the hierarchy of a class type in cppyy. Related to #8817 , not a final solution but I'd like to see if it brings hell in the CI",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8834
https://github.com/root-project/root/pull/8841:443,Availability,avail,available,443,"This patch adds `df.DefinePerSample`, a method that lets user define; new columns that are only updated per ""data-block"" rather than per; entry, where a ""data-block"" is made of several entries that have the; same data-block ID (e.g. that belong to the same TTree in a TChain). The data-block ID is passed as an argument to the callback, so that; quantities can be defined based on the sample being processed. Currently a jitted version is not available and RDataSources have; no way to hook into the mechanism (they get one data-block per task; with empty data-block ID). Support for these cases will be added by; later commits. This resolves #6745. This PR should make @stwunsch happy. To do:. - [x] test `RDataBlockID` with entry ranges; - [x] naming: `RDataBlockID -> RDataBlockInfo`? `DefinePerSample -> DefinePerDataBlock`?; - [x] add support for jitted `df.DefinePerSample(""myconstant"", ""rdfdatablock_.Contains(\""MC\"") ? 42. : 8."")`; - [ ] add release notes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8841
https://github.com/root-project/root/pull/8841:5,Deployability,patch,patch,5,"This patch adds `df.DefinePerSample`, a method that lets user define; new columns that are only updated per ""data-block"" rather than per; entry, where a ""data-block"" is made of several entries that have the; same data-block ID (e.g. that belong to the same TTree in a TChain). The data-block ID is passed as an argument to the callback, so that; quantities can be defined based on the sample being processed. Currently a jitted version is not available and RDataSources have; no way to hook into the mechanism (they get one data-block per task; with empty data-block ID). Support for these cases will be added by; later commits. This resolves #6745. This PR should make @stwunsch happy. To do:. - [x] test `RDataBlockID` with entry ranges; - [x] naming: `RDataBlockID -> RDataBlockInfo`? `DefinePerSample -> DefinePerDataBlock`?; - [x] add support for jitted `df.DefinePerSample(""myconstant"", ""rdfdatablock_.Contains(\""MC\"") ? 42. : 8."")`; - [ ] add release notes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8841
https://github.com/root-project/root/pull/8841:96,Deployability,update,updated,96,"This patch adds `df.DefinePerSample`, a method that lets user define; new columns that are only updated per ""data-block"" rather than per; entry, where a ""data-block"" is made of several entries that have the; same data-block ID (e.g. that belong to the same TTree in a TChain). The data-block ID is passed as an argument to the callback, so that; quantities can be defined based on the sample being processed. Currently a jitted version is not available and RDataSources have; no way to hook into the mechanism (they get one data-block per task; with empty data-block ID). Support for these cases will be added by; later commits. This resolves #6745. This PR should make @stwunsch happy. To do:. - [x] test `RDataBlockID` with entry ranges; - [x] naming: `RDataBlockID -> RDataBlockInfo`? `DefinePerSample -> DefinePerDataBlock`?; - [x] add support for jitted `df.DefinePerSample(""myconstant"", ""rdfdatablock_.Contains(\""MC\"") ? 42. : 8."")`; - [ ] add release notes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8841
https://github.com/root-project/root/pull/8841:950,Deployability,release,release,950,"This patch adds `df.DefinePerSample`, a method that lets user define; new columns that are only updated per ""data-block"" rather than per; entry, where a ""data-block"" is made of several entries that have the; same data-block ID (e.g. that belong to the same TTree in a TChain). The data-block ID is passed as an argument to the callback, so that; quantities can be defined based on the sample being processed. Currently a jitted version is not available and RDataSources have; no way to hook into the mechanism (they get one data-block per task; with empty data-block ID). Support for these cases will be added by; later commits. This resolves #6745. This PR should make @stwunsch happy. To do:. - [x] test `RDataBlockID` with entry ranges; - [x] naming: `RDataBlockID -> RDataBlockInfo`? `DefinePerSample -> DefinePerDataBlock`?; - [x] add support for jitted `df.DefinePerSample(""myconstant"", ""rdfdatablock_.Contains(\""MC\"") ? 42. : 8."")`; - [ ] add release notes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8841
https://github.com/root-project/root/pull/8841:701,Testability,test,test,701,"This patch adds `df.DefinePerSample`, a method that lets user define; new columns that are only updated per ""data-block"" rather than per; entry, where a ""data-block"" is made of several entries that have the; same data-block ID (e.g. that belong to the same TTree in a TChain). The data-block ID is passed as an argument to the callback, so that; quantities can be defined based on the sample being processed. Currently a jitted version is not available and RDataSources have; no way to hook into the mechanism (they get one data-block per task; with empty data-block ID). Support for these cases will be added by; later commits. This resolves #6745. This PR should make @stwunsch happy. To do:. - [x] test `RDataBlockID` with entry ranges; - [x] naming: `RDataBlockID -> RDataBlockInfo`? `DefinePerSample -> DefinePerDataBlock`?; - [x] add support for jitted `df.DefinePerSample(""myconstant"", ""rdfdatablock_.Contains(\""MC\"") ? 42. : 8."")`; - [ ] add release notes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8841
https://github.com/root-project/root/pull/8842:108,Integrability,interface,interface,108,"Implements `RooLinkedList::begin()`, `end()`, `rbegin()`, `rend()` and; extends the `RooLinkedListIterImpl` interface to support range-based; loops for the `RooLinkedList`. Range-based loops on `RooLinkedList` are also used in some places in; RooFit to test this new feature. In particular the function; `RooCmdConfig::process` is used in basically every RooFit script. This commit also adds `RooLinkedList::size()` and `empty()` for better compatibility with STL containers and automatic pythonizations.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8842
https://github.com/root-project/root/pull/8842:72,Modifiability,extend,extends,72,"Implements `RooLinkedList::begin()`, `end()`, `rbegin()`, `rend()` and; extends the `RooLinkedListIterImpl` interface to support range-based; loops for the `RooLinkedList`. Range-based loops on `RooLinkedList` are also used in some places in; RooFit to test this new feature. In particular the function; `RooCmdConfig::process` is used in basically every RooFit script. This commit also adds `RooLinkedList::size()` and `empty()` for better compatibility with STL containers and automatic pythonizations.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8842
https://github.com/root-project/root/pull/8842:253,Testability,test,test,253,"Implements `RooLinkedList::begin()`, `end()`, `rbegin()`, `rend()` and; extends the `RooLinkedListIterImpl` interface to support range-based; loops for the `RooLinkedList`. Range-based loops on `RooLinkedList` are also used in some places in; RooFit to test this new feature. In particular the function; `RooCmdConfig::process` is used in basically every RooFit script. This commit also adds `RooLinkedList::size()` and `empty()` for better compatibility with STL containers and automatic pythonizations.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8842
https://github.com/root-project/root/pull/8843:391,Deployability,update,updated,391,"# This Pull request:; fixed https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/2946/LABEL=ROOT-performance-centos8-multicore,SPEC=default,V=master/console. ## Changes or fixes:; reverted header RExport.h changed in https://github.com/root-project/root/commit/4809ef48e9d3cc48bfe5f81f971a5c535b593b39. ## Checklist:. - [ X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # . https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/2946/LABEL=ROOT-performance-centos8-multicore,SPEC=default,V=master/console",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8843
https://github.com/root-project/root/pull/8843:133,Performance,perform,performance-,133,"# This Pull request:; fixed https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/2946/LABEL=ROOT-performance-centos8-multicore,SPEC=default,V=master/console. ## Changes or fixes:; reverted header RExport.h changed in https://github.com/root-project/root/commit/4809ef48e9d3cc48bfe5f81f971a5c535b593b39. ## Checklist:. - [ X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # . https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/2946/LABEL=ROOT-performance-centos8-multicore,SPEC=default,V=master/console",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8843
https://github.com/root-project/root/pull/8843:547,Performance,perform,performance-,547,"# This Pull request:; fixed https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/2946/LABEL=ROOT-performance-centos8-multicore,SPEC=default,V=master/console. ## Changes or fixes:; reverted header RExport.h changed in https://github.com/root-project/root/commit/4809ef48e9d3cc48bfe5f81f971a5c535b593b39. ## Checklist:. - [ X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # . https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/2946/LABEL=ROOT-performance-centos8-multicore,SPEC=default,V=master/console",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8843
https://github.com/root-project/root/pull/8843:361,Testability,test,tested,361,"# This Pull request:; fixed https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/2946/LABEL=ROOT-performance-centos8-multicore,SPEC=default,V=master/console. ## Changes or fixes:; reverted header RExport.h changed in https://github.com/root-project/root/commit/4809ef48e9d3cc48bfe5f81f971a5c535b593b39. ## Checklist:. - [ X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # . https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/2946/LABEL=ROOT-performance-centos8-multicore,SPEC=default,V=master/console",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8843
https://github.com/root-project/root/pull/8844:312,Deployability,update,updated,312,"# This Pull request:. Some lists weren't being cleared when workspace is deleted, leaking lots of memory. (really only the embedded data list from all the RooHistFuncs). Would be nice if this change be added to 6.24 and ideally 6.22 too?. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8844
https://github.com/root-project/root/pull/8844:282,Testability,test,tested,282,"# This Pull request:. Some lists weren't being cleared when workspace is deleted, leaking lots of memory. (really only the embedded data list from all the RooHistFuncs). Would be nice if this change be added to 6.24 and ideally 6.22 too?. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8844
https://github.com/root-project/root/pull/8844:47,Usability,clear,cleared,47,"# This Pull request:. Some lists weren't being cleared when workspace is deleted, leaking lots of memory. (really only the embedded data list from all the RooHistFuncs). Would be nice if this change be added to 6.24 and ideally 6.22 too?. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8844
https://github.com/root-project/root/issues/8845:1573,Deployability,install,install,1573,"### Describe the bug. In pyROOT, if one defines a function that returns a RooArgSet object that contains cloned RooAbsArg objects, the returned RooArgSet object will crash if accessed. This is likely due to some garbage collection within the function that removes reference to the cloned object. This behavior occurs only in pyROOT and is not restricted to functions that return a RooArgSet object. Any object that is associated with the RooArgSet object, e.g. RooAbsPdf with ownedComponents being the RooArgSet object defined in the function, will also crash when the underlying RooArgSet object is accessed. . ### Expected behavior; The returned RooArgSet object should contain the reference to the cloned RooAbsArg object. . ### To Reproduce; ```; import ROOT. macro = \; """"""; RooArgSet make_argset(const RooRealVar& v){; 	RooArgSet argset(*(RooRealVar*)v.Clone(""new_x""));; 	return argset;; }; """""". def reproducer_ROOT():; 	x = ROOT.RooRealVar(""x"", ""x"", -10, 10); 	ROOT.gInterpreter.Declare(macro); 	output = ROOT.make_argset(x); 	print(output[0] == x); 	# True; 	print(output[0] is x); 	# False; 	return output[0]. def reproducer_pyROOT():; 	x = ROOT.RooRealVar(""x"", ""x"", -10, 10). 	def make_argset(v):; 		argset = ROOT.RooArgSet(v.Clone(""new_x"")); 		return argset. 	output = make_argset(x); 	return output[0]; 	# these also crashes; 	#return output.first(); 	#return [i for i in output]. # this does not crash; reproducer_ROOT(). # this crash; reproducer_pyROOT(); ```; ### Setup. 1. ROOT version: 6.22/06; 2. Operating system: lxplus; 3. How you obtained ROOT: conda install -c conda-forge ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8845
https://github.com/root-project/root/issues/8845:175,Security,access,accessed,175,"### Describe the bug. In pyROOT, if one defines a function that returns a RooArgSet object that contains cloned RooAbsArg objects, the returned RooArgSet object will crash if accessed. This is likely due to some garbage collection within the function that removes reference to the cloned object. This behavior occurs only in pyROOT and is not restricted to functions that return a RooArgSet object. Any object that is associated with the RooArgSet object, e.g. RooAbsPdf with ownedComponents being the RooArgSet object defined in the function, will also crash when the underlying RooArgSet object is accessed. . ### Expected behavior; The returned RooArgSet object should contain the reference to the cloned RooAbsArg object. . ### To Reproduce; ```; import ROOT. macro = \; """"""; RooArgSet make_argset(const RooRealVar& v){; 	RooArgSet argset(*(RooRealVar*)v.Clone(""new_x""));; 	return argset;; }; """""". def reproducer_ROOT():; 	x = ROOT.RooRealVar(""x"", ""x"", -10, 10); 	ROOT.gInterpreter.Declare(macro); 	output = ROOT.make_argset(x); 	print(output[0] == x); 	# True; 	print(output[0] is x); 	# False; 	return output[0]. def reproducer_pyROOT():; 	x = ROOT.RooRealVar(""x"", ""x"", -10, 10). 	def make_argset(v):; 		argset = ROOT.RooArgSet(v.Clone(""new_x"")); 		return argset. 	output = make_argset(x); 	return output[0]; 	# these also crashes; 	#return output.first(); 	#return [i for i in output]. # this does not crash; reproducer_ROOT(). # this crash; reproducer_pyROOT(); ```; ### Setup. 1. ROOT version: 6.22/06; 2. Operating system: lxplus; 3. How you obtained ROOT: conda install -c conda-forge ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8845
https://github.com/root-project/root/issues/8845:600,Security,access,accessed,600,"### Describe the bug. In pyROOT, if one defines a function that returns a RooArgSet object that contains cloned RooAbsArg objects, the returned RooArgSet object will crash if accessed. This is likely due to some garbage collection within the function that removes reference to the cloned object. This behavior occurs only in pyROOT and is not restricted to functions that return a RooArgSet object. Any object that is associated with the RooArgSet object, e.g. RooAbsPdf with ownedComponents being the RooArgSet object defined in the function, will also crash when the underlying RooArgSet object is accessed. . ### Expected behavior; The returned RooArgSet object should contain the reference to the cloned RooAbsArg object. . ### To Reproduce; ```; import ROOT. macro = \; """"""; RooArgSet make_argset(const RooRealVar& v){; 	RooArgSet argset(*(RooRealVar*)v.Clone(""new_x""));; 	return argset;; }; """""". def reproducer_ROOT():; 	x = ROOT.RooRealVar(""x"", ""x"", -10, 10); 	ROOT.gInterpreter.Declare(macro); 	output = ROOT.make_argset(x); 	print(output[0] == x); 	# True; 	print(output[0] is x); 	# False; 	return output[0]. def reproducer_pyROOT():; 	x = ROOT.RooRealVar(""x"", ""x"", -10, 10). 	def make_argset(v):; 		argset = ROOT.RooArgSet(v.Clone(""new_x"")); 		return argset. 	output = make_argset(x); 	return output[0]; 	# these also crashes; 	#return output.first(); 	#return [i for i in output]. # this does not crash; reproducer_ROOT(). # this crash; reproducer_pyROOT(); ```; ### Setup. 1. ROOT version: 6.22/06; 2. Operating system: lxplus; 3. How you obtained ROOT: conda install -c conda-forge ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8845
https://github.com/root-project/root/pull/8846:236,Integrability,Depend,Depends,236,## This Pull request:; Development of the Long Short-term Memory operator for the Google Summer of Code project [Inference Code Generation for Recurrent Neural Networks](https://summerofcode.withgoogle.com/projects/#5885532631990272).; Depends on #8800 and #8881. ## Checklist:. - [ x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8846
https://github.com/root-project/root/pull/8846:286,Testability,test,tested,286,## This Pull request:; Development of the Long Short-term Memory operator for the Google Summer of Code project [Inference Code Generation for Recurrent Neural Networks](https://summerofcode.withgoogle.com/projects/#5885532631990272).; Depends on #8800 and #8881. ## Checklist:. - [ x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8846
https://github.com/root-project/root/pull/8847:234,Integrability,Depend,Depends,234,## This Pull request:; Development of the Gated Recurrent Unit operator for the Google Summer of Code project [Inference Code Generation for Recurrent Neural Networks](https://summerofcode.withgoogle.com/projects/#5885532631990272).; Depends on #8800 and #8881. ## Checklist:. - [ x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8847
https://github.com/root-project/root/pull/8847:284,Testability,test,tested,284,## This Pull request:; Development of the Gated Recurrent Unit operator for the Google Summer of Code project [Inference Code Generation for Recurrent Neural Networks](https://summerofcode.withgoogle.com/projects/#5885532631990272).; Depends on #8800 and #8881. ## Checklist:. - [ x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8847
https://github.com/root-project/root/pull/8848:9,Deployability,release,release,9,This new release includes some improvements:; * Extended array support; * Add cmake variables to control the locations where find_package discovers LLVM and Clang: `LLVM_CONFIG_EXTRA_PATH_HINTS` and `Clang_CONFIG_EXTRA_PATH_HINTS` respectively. See more at: https://github.com/vgvassilev/clad/blob/v0.9/docs/ReleaseNotes.md,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8848
https://github.com/root-project/root/pull/8848:308,Deployability,Release,ReleaseNotes,308,This new release includes some improvements:; * Extended array support; * Add cmake variables to control the locations where find_package discovers LLVM and Clang: `LLVM_CONFIG_EXTRA_PATH_HINTS` and `Clang_CONFIG_EXTRA_PATH_HINTS` respectively. See more at: https://github.com/vgvassilev/clad/blob/v0.9/docs/ReleaseNotes.md,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8848
https://github.com/root-project/root/pull/8848:48,Modifiability,Extend,Extended,48,This new release includes some improvements:; * Extended array support; * Add cmake variables to control the locations where find_package discovers LLVM and Clang: `LLVM_CONFIG_EXTRA_PATH_HINTS` and `Clang_CONFIG_EXTRA_PATH_HINTS` respectively. See more at: https://github.com/vgvassilev/clad/blob/v0.9/docs/ReleaseNotes.md,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8848
https://github.com/root-project/root/pull/8848:84,Modifiability,variab,variables,84,This new release includes some improvements:; * Extended array support; * Add cmake variables to control the locations where find_package discovers LLVM and Clang: `LLVM_CONFIG_EXTRA_PATH_HINTS` and `Clang_CONFIG_EXTRA_PATH_HINTS` respectively. See more at: https://github.com/vgvassilev/clad/blob/v0.9/docs/ReleaseNotes.md,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8848
https://github.com/root-project/root/issues/8850:543,Availability,error,error,543,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. This runs fine:; ```; $ root --foobarbaz; ```; Virtually all unix command line tools error out if an invalid option is passed. It's surprising that `root` does not and can lead to problems:. ```; $ root --batch; ```; does _not_ start `root` in batch mode, because there is no long spelling for `-b`. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. `root --nonexistingoption` should error out.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8850
https://github.com/root-project/root/issues/8850:891,Availability,error,error,891,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. This runs fine:; ```; $ root --foobarbaz; ```; Virtually all unix command line tools error out if an invalid option is passed. It's surprising that `root` does not and can lead to problems:. ```; $ root --batch; ```; does _not_ start `root` in batch mode, because there is no long spelling for `-b`. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. `root --nonexistingoption` should error out.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8850
https://github.com/root-project/root/issues/8850:391,Usability,clear,clear,391,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. This runs fine:; ```; $ root --foobarbaz; ```; Virtually all unix command line tools error out if an invalid option is passed. It's surprising that `root` does not and can lead to problems:. ```; $ root --batch; ```; does _not_ start `root` in batch mode, because there is no long spelling for `-b`. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. `root --nonexistingoption` should error out.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8850
https://github.com/root-project/root/issues/8850:789,Usability,clear,clear,789,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. This runs fine:; ```; $ root --foobarbaz; ```; Virtually all unix command line tools error out if an invalid option is passed. It's surprising that `root` does not and can lead to problems:. ```; $ root --batch; ```; does _not_ start `root` in batch mode, because there is no long spelling for `-b`. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. `root --nonexistingoption` should error out.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8850
https://github.com/root-project/root/pull/8852:35,Availability,error,error,35,# This Pull request:; Fixes `fatal error: 'google/protobuf/port_def.inc' file not found` error when building the tests of TMVA-Sofie with protobuf v3.17.3. ## Checklist:. - [ x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8852
https://github.com/root-project/root/pull/8852:89,Availability,error,error,89,# This Pull request:; Fixes `fatal error: 'google/protobuf/port_def.inc' file not found` error when building the tests of TMVA-Sofie with protobuf v3.17.3. ## Checklist:. - [ x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8852
https://github.com/root-project/root/pull/8852:113,Testability,test,tests,113,# This Pull request:; Fixes `fatal error: 'google/protobuf/port_def.inc' file not found` error when building the tests of TMVA-Sofie with protobuf v3.17.3. ## Checklist:. - [ x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8852
https://github.com/root-project/root/pull/8852:178,Testability,test,tested,178,# This Pull request:; Fixes `fatal error: 'google/protobuf/port_def.inc' file not found` error when building the tests of TMVA-Sofie with protobuf v3.17.3. ## Checklist:. - [ x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8852
https://github.com/root-project/root/pull/8853:266,Deployability,configurat,configuration,266,"Silent the following warnings when enabling arrow (`-Darrow=ON`) on Ubuntu:; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findre2.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""re2"", but; CMake did not find one. Could not find a package configuration file provided by ""re2"" with any of; the following names:. re2Config.cmake; re2-config.cmake. Add the installation prefix of ""re2"" to CMAKE_PREFIX_PATH or set ""re2_DIR""; to a directory containing one of the above files. If ""re2"" provides a; separate development package or SDK, be sure it has been installed.; Call Stack (most recent call first):; /usr/lib/x86_64-linux-gnu/cmake/arrow/Findre2Alt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1088 (find_package); CMakeLists.txt:245 (include); ```; and; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findc-ares.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""c-ares"", but; CMake did not find one. Could not find a package configuration file provided by ""c-ares"" with any; of the following names:. c-aresConfig.cmake; c-ares-config.cmake. Add the installation prefix of ""c-ares"" to CMAKE_PREFIX_PATH or set; ""c-ares_DIR"" to a directory containing one of the above files. If ""c-ares""; provides a sepa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8853
https://github.com/root-project/root/pull/8853:358,Deployability,configurat,configuration,358,"Silent the following warnings when enabling arrow (`-Darrow=ON`) on Ubuntu:; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findre2.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""re2"", but; CMake did not find one. Could not find a package configuration file provided by ""re2"" with any of; the following names:. re2Config.cmake; re2-config.cmake. Add the installation prefix of ""re2"" to CMAKE_PREFIX_PATH or set ""re2_DIR""; to a directory containing one of the above files. If ""re2"" provides a; separate development package or SDK, be sure it has been installed.; Call Stack (most recent call first):; /usr/lib/x86_64-linux-gnu/cmake/arrow/Findre2Alt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1088 (find_package); CMakeLists.txt:245 (include); ```; and; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findc-ares.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""c-ares"", but; CMake did not find one. Could not find a package configuration file provided by ""c-ares"" with any; of the following names:. c-aresConfig.cmake; c-ares-config.cmake. Add the installation prefix of ""c-ares"" to CMAKE_PREFIX_PATH or set; ""c-ares_DIR"" to a directory containing one of the above files. If ""c-ares""; provides a sepa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8853
https://github.com/root-project/root/pull/8853:473,Deployability,install,installation,473,"Silent the following warnings when enabling arrow (`-Darrow=ON`) on Ubuntu:; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findre2.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""re2"", but; CMake did not find one. Could not find a package configuration file provided by ""re2"" with any of; the following names:. re2Config.cmake; re2-config.cmake. Add the installation prefix of ""re2"" to CMAKE_PREFIX_PATH or set ""re2_DIR""; to a directory containing one of the above files. If ""re2"" provides a; separate development package or SDK, be sure it has been installed.; Call Stack (most recent call first):; /usr/lib/x86_64-linux-gnu/cmake/arrow/Findre2Alt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1088 (find_package); CMakeLists.txt:245 (include); ```; and; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findc-ares.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""c-ares"", but; CMake did not find one. Could not find a package configuration file provided by ""c-ares"" with any; of the following names:. c-aresConfig.cmake; c-ares-config.cmake. Add the installation prefix of ""c-ares"" to CMAKE_PREFIX_PATH or set; ""c-ares_DIR"" to a directory containing one of the above files. If ""c-ares""; provides a sepa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8853
https://github.com/root-project/root/pull/8853:669,Deployability,install,installed,669,"Silent the following warnings when enabling arrow (`-Darrow=ON`) on Ubuntu:; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findre2.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""re2"", but; CMake did not find one. Could not find a package configuration file provided by ""re2"" with any of; the following names:. re2Config.cmake; re2-config.cmake. Add the installation prefix of ""re2"" to CMAKE_PREFIX_PATH or set ""re2_DIR""; to a directory containing one of the above files. If ""re2"" provides a; separate development package or SDK, be sure it has been installed.; Call Stack (most recent call first):; /usr/lib/x86_64-linux-gnu/cmake/arrow/Findre2Alt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1088 (find_package); CMakeLists.txt:245 (include); ```; and; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findc-ares.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""c-ares"", but; CMake did not find one. Could not find a package configuration file provided by ""c-ares"" with any; of the following names:. c-aresConfig.cmake; c-ares-config.cmake. Add the installation prefix of ""c-ares"" to CMAKE_PREFIX_PATH or set; ""c-ares_DIR"" to a directory containing one of the above files. If ""c-ares""; provides a sepa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8853
https://github.com/root-project/root/pull/8853:1630,Deployability,configurat,configuration,1630,"opment package or SDK, be sure it has been installed.; Call Stack (most recent call first):; /usr/lib/x86_64-linux-gnu/cmake/arrow/Findre2Alt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1088 (find_package); CMakeLists.txt:245 (include); ```; and; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findc-ares.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""c-ares"", but; CMake did not find one. Could not find a package configuration file provided by ""c-ares"" with any; of the following names:. c-aresConfig.cmake; c-ares-config.cmake. Add the installation prefix of ""c-ares"" to CMAKE_PREFIX_PATH or set; ""c-ares_DIR"" to a directory containing one of the above files. If ""c-ares""; provides a separate development package or SDK, be sure it has been; installed.; Call Stack (most recent call first):; /usr/lib/x86_64-linux-gnu/cmake/arrow/Findc-aresAlt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8853
https://github.com/root-project/root/pull/8853:1725,Deployability,configurat,configuration,1725,"e/arrow/Findre2Alt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1088 (find_package); CMakeLists.txt:245 (include); ```; and; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findc-ares.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""c-ares"", but; CMake did not find one. Could not find a package configuration file provided by ""c-ares"" with any; of the following names:. c-aresConfig.cmake; c-ares-config.cmake. Add the installation prefix of ""c-ares"" to CMAKE_PREFIX_PATH or set; ""c-ares_DIR"" to a directory containing one of the above files. If ""c-ares""; provides a separate development package or SDK, be sure it has been; installed.; Call Stack (most recent call first):; /usr/lib/x86_64-linux-gnu/cmake/arrow/Findc-aresAlt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstall",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8853
https://github.com/root-project/root/pull/8853:1849,Deployability,install,installation,1849,"edSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1088 (find_package); CMakeLists.txt:245 (include); ```; and; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findc-ares.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""c-ares"", but; CMake did not find one. Could not find a package configuration file provided by ""c-ares"" with any; of the following names:. c-aresConfig.cmake; c-ares-config.cmake. Add the installation prefix of ""c-ares"" to CMAKE_PREFIX_PATH or set; ""c-ares_DIR"" to a directory containing one of the above files. If ""c-ares""; provides a separate development package or SDK, be sure it has been; installed.; Call Stack (most recent call first):; /usr/lib/x86_64-linux-gnu/cmake/arrow/Findc-aresAlt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1088 (find_package); CMakeLists.txt:245 (include); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8853
https://github.com/root-project/root/pull/8853:2055,Deployability,install,installed,2055,"edSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1088 (find_package); CMakeLists.txt:245 (include); ```; and; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findc-ares.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""c-ares"", but; CMake did not find one. Could not find a package configuration file provided by ""c-ares"" with any; of the following names:. c-aresConfig.cmake; c-ares-config.cmake. Add the installation prefix of ""c-ares"" to CMAKE_PREFIX_PATH or set; ""c-ares_DIR"" to a directory containing one of the above files. If ""c-ares""; provides a separate development package or SDK, be sure it has been; installed.; Call Stack (most recent call first):; /usr/lib/x86_64-linux-gnu/cmake/arrow/Findc-aresAlt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1088 (find_package); CMakeLists.txt:245 (include); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8853
https://github.com/root-project/root/pull/8853:266,Modifiability,config,configuration,266,"Silent the following warnings when enabling arrow (`-Darrow=ON`) on Ubuntu:; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findre2.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""re2"", but; CMake did not find one. Could not find a package configuration file provided by ""re2"" with any of; the following names:. re2Config.cmake; re2-config.cmake. Add the installation prefix of ""re2"" to CMAKE_PREFIX_PATH or set ""re2_DIR""; to a directory containing one of the above files. If ""re2"" provides a; separate development package or SDK, be sure it has been installed.; Call Stack (most recent call first):; /usr/lib/x86_64-linux-gnu/cmake/arrow/Findre2Alt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1088 (find_package); CMakeLists.txt:245 (include); ```; and; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findc-ares.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""c-ares"", but; CMake did not find one. Could not find a package configuration file provided by ""c-ares"" with any; of the following names:. c-aresConfig.cmake; c-ares-config.cmake. Add the installation prefix of ""c-ares"" to CMAKE_PREFIX_PATH or set; ""c-ares_DIR"" to a directory containing one of the above files. If ""c-ares""; provides a sepa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8853
https://github.com/root-project/root/pull/8853:358,Modifiability,config,configuration,358,"Silent the following warnings when enabling arrow (`-Darrow=ON`) on Ubuntu:; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findre2.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""re2"", but; CMake did not find one. Could not find a package configuration file provided by ""re2"" with any of; the following names:. re2Config.cmake; re2-config.cmake. Add the installation prefix of ""re2"" to CMAKE_PREFIX_PATH or set ""re2_DIR""; to a directory containing one of the above files. If ""re2"" provides a; separate development package or SDK, be sure it has been installed.; Call Stack (most recent call first):; /usr/lib/x86_64-linux-gnu/cmake/arrow/Findre2Alt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1088 (find_package); CMakeLists.txt:245 (include); ```; and; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findc-ares.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""c-ares"", but; CMake did not find one. Could not find a package configuration file provided by ""c-ares"" with any; of the following names:. c-aresConfig.cmake; c-ares-config.cmake. Add the installation prefix of ""c-ares"" to CMAKE_PREFIX_PATH or set; ""c-ares_DIR"" to a directory containing one of the above files. If ""c-ares""; provides a sepa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8853
https://github.com/root-project/root/pull/8853:451,Modifiability,config,config,451,"Silent the following warnings when enabling arrow (`-Darrow=ON`) on Ubuntu:; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findre2.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""re2"", but; CMake did not find one. Could not find a package configuration file provided by ""re2"" with any of; the following names:. re2Config.cmake; re2-config.cmake. Add the installation prefix of ""re2"" to CMAKE_PREFIX_PATH or set ""re2_DIR""; to a directory containing one of the above files. If ""re2"" provides a; separate development package or SDK, be sure it has been installed.; Call Stack (most recent call first):; /usr/lib/x86_64-linux-gnu/cmake/arrow/Findre2Alt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1088 (find_package); CMakeLists.txt:245 (include); ```; and; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findc-ares.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""c-ares"", but; CMake did not find one. Could not find a package configuration file provided by ""c-ares"" with any; of the following names:. c-aresConfig.cmake; c-ares-config.cmake. Add the installation prefix of ""c-ares"" to CMAKE_PREFIX_PATH or set; ""c-ares_DIR"" to a directory containing one of the above files. If ""c-ares""; provides a sepa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8853
https://github.com/root-project/root/pull/8853:1630,Modifiability,config,configuration,1630,"opment package or SDK, be sure it has been installed.; Call Stack (most recent call first):; /usr/lib/x86_64-linux-gnu/cmake/arrow/Findre2Alt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1088 (find_package); CMakeLists.txt:245 (include); ```; and; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findc-ares.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""c-ares"", but; CMake did not find one. Could not find a package configuration file provided by ""c-ares"" with any; of the following names:. c-aresConfig.cmake; c-ares-config.cmake. Add the installation prefix of ""c-ares"" to CMAKE_PREFIX_PATH or set; ""c-ares_DIR"" to a directory containing one of the above files. If ""c-ares""; provides a separate development package or SDK, be sure it has been; installed.; Call Stack (most recent call first):; /usr/lib/x86_64-linux-gnu/cmake/arrow/Findc-aresAlt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8853
https://github.com/root-project/root/pull/8853:1725,Modifiability,config,configuration,1725,"e/arrow/Findre2Alt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1088 (find_package); CMakeLists.txt:245 (include); ```; and; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findc-ares.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""c-ares"", but; CMake did not find one. Could not find a package configuration file provided by ""c-ares"" with any; of the following names:. c-aresConfig.cmake; c-ares-config.cmake. Add the installation prefix of ""c-ares"" to CMAKE_PREFIX_PATH or set; ""c-ares_DIR"" to a directory containing one of the above files. If ""c-ares""; provides a separate development package or SDK, be sure it has been; installed.; Call Stack (most recent call first):; /usr/lib/x86_64-linux-gnu/cmake/arrow/Findc-aresAlt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstall",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8853
https://github.com/root-project/root/pull/8853:1827,Modifiability,config,config,1827,"edSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1088 (find_package); CMakeLists.txt:245 (include); ```; and; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findc-ares.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""c-ares"", but; CMake did not find one. Could not find a package configuration file provided by ""c-ares"" with any; of the following names:. c-aresConfig.cmake; c-ares-config.cmake. Add the installation prefix of ""c-ares"" to CMAKE_PREFIX_PATH or set; ""c-ares_DIR"" to a directory containing one of the above files. If ""c-ares""; provides a separate development package or SDK, be sure it has been; installed.; Call Stack (most recent call first):; /usr/lib/x86_64-linux-gnu/cmake/arrow/Findc-aresAlt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1088 (find_package); CMakeLists.txt:245 (include); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8853
https://github.com/root-project/root/pull/8854:266,Deployability,configurat,configuration,266,"Silent the following warnings when enabling arrow (`-Darrow=ON`) on Ubuntu:; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findre2.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""re2"", but; CMake did not find one. Could not find a package configuration file provided by ""re2"" with any of; the following names:. re2Config.cmake; re2-config.cmake. Add the installation prefix of ""re2"" to CMAKE_PREFIX_PATH or set ""re2_DIR""; to a directory containing one of the above files. If ""re2"" provides a; separate development package or SDK, be sure it has been installed.; Call Stack (most recent call first):; /usr/lib/x86_64-linux-gnu/cmake/arrow/Findre2Alt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1088 (find_package); CMakeLists.txt:245 (include); ```; and; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findc-ares.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""c-ares"", but; CMake did not find one. Could not find a package configuration file provided by ""c-ares"" with any; of the following names:. c-aresConfig.cmake; c-ares-config.cmake. Add the installation prefix of ""c-ares"" to CMAKE_PREFIX_PATH or set; ""c-ares_DIR"" to a directory containing one of the above files. If ""c-ares""; provides a sepa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8854
https://github.com/root-project/root/pull/8854:358,Deployability,configurat,configuration,358,"Silent the following warnings when enabling arrow (`-Darrow=ON`) on Ubuntu:; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findre2.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""re2"", but; CMake did not find one. Could not find a package configuration file provided by ""re2"" with any of; the following names:. re2Config.cmake; re2-config.cmake. Add the installation prefix of ""re2"" to CMAKE_PREFIX_PATH or set ""re2_DIR""; to a directory containing one of the above files. If ""re2"" provides a; separate development package or SDK, be sure it has been installed.; Call Stack (most recent call first):; /usr/lib/x86_64-linux-gnu/cmake/arrow/Findre2Alt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1088 (find_package); CMakeLists.txt:245 (include); ```; and; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findc-ares.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""c-ares"", but; CMake did not find one. Could not find a package configuration file provided by ""c-ares"" with any; of the following names:. c-aresConfig.cmake; c-ares-config.cmake. Add the installation prefix of ""c-ares"" to CMAKE_PREFIX_PATH or set; ""c-ares_DIR"" to a directory containing one of the above files. If ""c-ares""; provides a sepa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8854
https://github.com/root-project/root/pull/8854:473,Deployability,install,installation,473,"Silent the following warnings when enabling arrow (`-Darrow=ON`) on Ubuntu:; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findre2.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""re2"", but; CMake did not find one. Could not find a package configuration file provided by ""re2"" with any of; the following names:. re2Config.cmake; re2-config.cmake. Add the installation prefix of ""re2"" to CMAKE_PREFIX_PATH or set ""re2_DIR""; to a directory containing one of the above files. If ""re2"" provides a; separate development package or SDK, be sure it has been installed.; Call Stack (most recent call first):; /usr/lib/x86_64-linux-gnu/cmake/arrow/Findre2Alt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1088 (find_package); CMakeLists.txt:245 (include); ```; and; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findc-ares.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""c-ares"", but; CMake did not find one. Could not find a package configuration file provided by ""c-ares"" with any; of the following names:. c-aresConfig.cmake; c-ares-config.cmake. Add the installation prefix of ""c-ares"" to CMAKE_PREFIX_PATH or set; ""c-ares_DIR"" to a directory containing one of the above files. If ""c-ares""; provides a sepa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8854
https://github.com/root-project/root/pull/8854:669,Deployability,install,installed,669,"Silent the following warnings when enabling arrow (`-Darrow=ON`) on Ubuntu:; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findre2.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""re2"", but; CMake did not find one. Could not find a package configuration file provided by ""re2"" with any of; the following names:. re2Config.cmake; re2-config.cmake. Add the installation prefix of ""re2"" to CMAKE_PREFIX_PATH or set ""re2_DIR""; to a directory containing one of the above files. If ""re2"" provides a; separate development package or SDK, be sure it has been installed.; Call Stack (most recent call first):; /usr/lib/x86_64-linux-gnu/cmake/arrow/Findre2Alt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1088 (find_package); CMakeLists.txt:245 (include); ```; and; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findc-ares.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""c-ares"", but; CMake did not find one. Could not find a package configuration file provided by ""c-ares"" with any; of the following names:. c-aresConfig.cmake; c-ares-config.cmake. Add the installation prefix of ""c-ares"" to CMAKE_PREFIX_PATH or set; ""c-ares_DIR"" to a directory containing one of the above files. If ""c-ares""; provides a sepa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8854
https://github.com/root-project/root/pull/8854:1630,Deployability,configurat,configuration,1630,"opment package or SDK, be sure it has been installed.; Call Stack (most recent call first):; /usr/lib/x86_64-linux-gnu/cmake/arrow/Findre2Alt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1088 (find_package); CMakeLists.txt:245 (include); ```; and; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findc-ares.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""c-ares"", but; CMake did not find one. Could not find a package configuration file provided by ""c-ares"" with any; of the following names:. c-aresConfig.cmake; c-ares-config.cmake. Add the installation prefix of ""c-ares"" to CMAKE_PREFIX_PATH or set; ""c-ares_DIR"" to a directory containing one of the above files. If ""c-ares""; provides a separate development package or SDK, be sure it has been; installed.; Call Stack (most recent call first):; /usr/lib/x86_64-linux-gnu/cmake/arrow/Findc-aresAlt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8854
https://github.com/root-project/root/pull/8854:1725,Deployability,configurat,configuration,1725,"e/arrow/Findre2Alt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1088 (find_package); CMakeLists.txt:245 (include); ```; and; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findc-ares.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""c-ares"", but; CMake did not find one. Could not find a package configuration file provided by ""c-ares"" with any; of the following names:. c-aresConfig.cmake; c-ares-config.cmake. Add the installation prefix of ""c-ares"" to CMAKE_PREFIX_PATH or set; ""c-ares_DIR"" to a directory containing one of the above files. If ""c-ares""; provides a separate development package or SDK, be sure it has been; installed.; Call Stack (most recent call first):; /usr/lib/x86_64-linux-gnu/cmake/arrow/Findc-aresAlt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstall",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8854
https://github.com/root-project/root/pull/8854:1849,Deployability,install,installation,1849,"edSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1088 (find_package); CMakeLists.txt:245 (include); ```; and; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findc-ares.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""c-ares"", but; CMake did not find one. Could not find a package configuration file provided by ""c-ares"" with any; of the following names:. c-aresConfig.cmake; c-ares-config.cmake. Add the installation prefix of ""c-ares"" to CMAKE_PREFIX_PATH or set; ""c-ares_DIR"" to a directory containing one of the above files. If ""c-ares""; provides a separate development package or SDK, be sure it has been; installed.; Call Stack (most recent call first):; /usr/lib/x86_64-linux-gnu/cmake/arrow/Findc-aresAlt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1088 (find_package); CMakeLists.txt:245 (include); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8854
https://github.com/root-project/root/pull/8854:2055,Deployability,install,installed,2055,"edSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1088 (find_package); CMakeLists.txt:245 (include); ```; and; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findc-ares.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""c-ares"", but; CMake did not find one. Could not find a package configuration file provided by ""c-ares"" with any; of the following names:. c-aresConfig.cmake; c-ares-config.cmake. Add the installation prefix of ""c-ares"" to CMAKE_PREFIX_PATH or set; ""c-ares_DIR"" to a directory containing one of the above files. If ""c-ares""; provides a separate development package or SDK, be sure it has been; installed.; Call Stack (most recent call first):; /usr/lib/x86_64-linux-gnu/cmake/arrow/Findc-aresAlt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1088 (find_package); CMakeLists.txt:245 (include); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8854
https://github.com/root-project/root/pull/8854:266,Modifiability,config,configuration,266,"Silent the following warnings when enabling arrow (`-Darrow=ON`) on Ubuntu:; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findre2.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""re2"", but; CMake did not find one. Could not find a package configuration file provided by ""re2"" with any of; the following names:. re2Config.cmake; re2-config.cmake. Add the installation prefix of ""re2"" to CMAKE_PREFIX_PATH or set ""re2_DIR""; to a directory containing one of the above files. If ""re2"" provides a; separate development package or SDK, be sure it has been installed.; Call Stack (most recent call first):; /usr/lib/x86_64-linux-gnu/cmake/arrow/Findre2Alt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1088 (find_package); CMakeLists.txt:245 (include); ```; and; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findc-ares.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""c-ares"", but; CMake did not find one. Could not find a package configuration file provided by ""c-ares"" with any; of the following names:. c-aresConfig.cmake; c-ares-config.cmake. Add the installation prefix of ""c-ares"" to CMAKE_PREFIX_PATH or set; ""c-ares_DIR"" to a directory containing one of the above files. If ""c-ares""; provides a sepa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8854
https://github.com/root-project/root/pull/8854:358,Modifiability,config,configuration,358,"Silent the following warnings when enabling arrow (`-Darrow=ON`) on Ubuntu:; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findre2.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""re2"", but; CMake did not find one. Could not find a package configuration file provided by ""re2"" with any of; the following names:. re2Config.cmake; re2-config.cmake. Add the installation prefix of ""re2"" to CMAKE_PREFIX_PATH or set ""re2_DIR""; to a directory containing one of the above files. If ""re2"" provides a; separate development package or SDK, be sure it has been installed.; Call Stack (most recent call first):; /usr/lib/x86_64-linux-gnu/cmake/arrow/Findre2Alt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1088 (find_package); CMakeLists.txt:245 (include); ```; and; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findc-ares.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""c-ares"", but; CMake did not find one. Could not find a package configuration file provided by ""c-ares"" with any; of the following names:. c-aresConfig.cmake; c-ares-config.cmake. Add the installation prefix of ""c-ares"" to CMAKE_PREFIX_PATH or set; ""c-ares_DIR"" to a directory containing one of the above files. If ""c-ares""; provides a sepa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8854
https://github.com/root-project/root/pull/8854:451,Modifiability,config,config,451,"Silent the following warnings when enabling arrow (`-Darrow=ON`) on Ubuntu:; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findre2.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""re2"", but; CMake did not find one. Could not find a package configuration file provided by ""re2"" with any of; the following names:. re2Config.cmake; re2-config.cmake. Add the installation prefix of ""re2"" to CMAKE_PREFIX_PATH or set ""re2_DIR""; to a directory containing one of the above files. If ""re2"" provides a; separate development package or SDK, be sure it has been installed.; Call Stack (most recent call first):; /usr/lib/x86_64-linux-gnu/cmake/arrow/Findre2Alt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1088 (find_package); CMakeLists.txt:245 (include); ```; and; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findc-ares.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""c-ares"", but; CMake did not find one. Could not find a package configuration file provided by ""c-ares"" with any; of the following names:. c-aresConfig.cmake; c-ares-config.cmake. Add the installation prefix of ""c-ares"" to CMAKE_PREFIX_PATH or set; ""c-ares_DIR"" to a directory containing one of the above files. If ""c-ares""; provides a sepa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8854
https://github.com/root-project/root/pull/8854:1630,Modifiability,config,configuration,1630,"opment package or SDK, be sure it has been installed.; Call Stack (most recent call first):; /usr/lib/x86_64-linux-gnu/cmake/arrow/Findre2Alt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1088 (find_package); CMakeLists.txt:245 (include); ```; and; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findc-ares.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""c-ares"", but; CMake did not find one. Could not find a package configuration file provided by ""c-ares"" with any; of the following names:. c-aresConfig.cmake; c-ares-config.cmake. Add the installation prefix of ""c-ares"" to CMAKE_PREFIX_PATH or set; ""c-ares_DIR"" to a directory containing one of the above files. If ""c-ares""; provides a separate development package or SDK, be sure it has been; installed.; Call Stack (most recent call first):; /usr/lib/x86_64-linux-gnu/cmake/arrow/Findc-aresAlt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8854
https://github.com/root-project/root/pull/8854:1725,Modifiability,config,configuration,1725,"e/arrow/Findre2Alt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1088 (find_package); CMakeLists.txt:245 (include); ```; and; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findc-ares.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""c-ares"", but; CMake did not find one. Could not find a package configuration file provided by ""c-ares"" with any; of the following names:. c-aresConfig.cmake; c-ares-config.cmake. Add the installation prefix of ""c-ares"" to CMAKE_PREFIX_PATH or set; ""c-ares_DIR"" to a directory containing one of the above files. If ""c-ares""; provides a separate development package or SDK, be sure it has been; installed.; Call Stack (most recent call first):; /usr/lib/x86_64-linux-gnu/cmake/arrow/Findc-aresAlt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstall",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8854
https://github.com/root-project/root/pull/8854:1827,Modifiability,config,config,1827,"edSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1088 (find_package); CMakeLists.txt:245 (include); ```; and; ```; CMake Warning at cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package):; By not providing ""Findc-ares.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""c-ares"", but; CMake did not find one. Could not find a package configuration file provided by ""c-ares"" with any; of the following names:. c-aresConfig.cmake; c-ares-config.cmake. Add the installation prefix of ""c-ares"" to CMAKE_PREFIX_PATH or set; ""c-ares_DIR"" to a directory containing one of the above files. If ""c-ares""; provides a separate development package or SDK, be sure it has been; installed.; Call Stack (most recent call first):; /usr/lib/x86_64-linux-gnu/cmake/arrow/Findc-aresAlt.cmake:25 (find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/FindArrow.cmake:206 (find_package); cmake/modules/FindArrow.cmake:313 (arrow_find_package_cmake_package_configuration); cmake/modules/FindArrow.cmake:350 (arrow_find_package); cmake/modules/SearchInstalledSoftware.cmake:20 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1088 (find_package); CMakeLists.txt:245 (include); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8854
https://github.com/root-project/root/pull/8856:567,Deployability,patch,patched,567,"For the documentation of the RooFit pythonizations, we wanted to realize; two things:. * A PyROOT block in the doxygen documentation of the C++ class,; indicating the pythonizations for a given class or function. * A new doxygen page with only the content of all the RooFit PyROOT; blocks to have a one-stop place to learn everything about RooFit; pythonizations. This commit proposes a new mechanism to do this, based on the existing; RooFit pythonization mirror class infrastructure:. * Every class or member function that should get a PyROOT block gets; an can be patched with an attribute `_doxygen`, containing the; contents of the PyROOT block; * Member functions can also be patched with the attribute; `cpp_signature`, specifying the C++ overload where the PyROOT block; should go; * A new scipt `print_roofit_pyz_doctrings.py` extracts this; information, and this script is used to create a file; `_roofit.pyzdoc` with all the doxygen source to generate both the; PyROOT blocks in the existing documentation, as well as the separate; page about all the RooFit pythonizations. This is how the RooFit pythonization page would look like with this PR:. ![Screenshot_2021-08-17_15-06-40](https://user-images.githubusercontent.com/6578603/129736827-e2aadfe5-2893-48c0-a7e9-2549a136cd68.png). Writing all the documentation will be done in later PRs by @Harshalzzzzzzz , this PR is just to set up the infrastructure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8856
https://github.com/root-project/root/pull/8856:682,Deployability,patch,patched,682,"For the documentation of the RooFit pythonizations, we wanted to realize; two things:. * A PyROOT block in the doxygen documentation of the C++ class,; indicating the pythonizations for a given class or function. * A new doxygen page with only the content of all the RooFit PyROOT; blocks to have a one-stop place to learn everything about RooFit; pythonizations. This commit proposes a new mechanism to do this, based on the existing; RooFit pythonization mirror class infrastructure:. * Every class or member function that should get a PyROOT block gets; an can be patched with an attribute `_doxygen`, containing the; contents of the PyROOT block; * Member functions can also be patched with the attribute; `cpp_signature`, specifying the C++ overload where the PyROOT block; should go; * A new scipt `print_roofit_pyz_doctrings.py` extracts this; information, and this script is used to create a file; `_roofit.pyzdoc` with all the doxygen source to generate both the; PyROOT blocks in the existing documentation, as well as the separate; page about all the RooFit pythonizations. This is how the RooFit pythonization page would look like with this PR:. ![Screenshot_2021-08-17_15-06-40](https://user-images.githubusercontent.com/6578603/129736827-e2aadfe5-2893-48c0-a7e9-2549a136cd68.png). Writing all the documentation will be done in later PRs by @Harshalzzzzzzz , this PR is just to set up the infrastructure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8856
https://github.com/root-project/root/pull/8856:317,Usability,learn,learn,317,"For the documentation of the RooFit pythonizations, we wanted to realize; two things:. * A PyROOT block in the doxygen documentation of the C++ class,; indicating the pythonizations for a given class or function. * A new doxygen page with only the content of all the RooFit PyROOT; blocks to have a one-stop place to learn everything about RooFit; pythonizations. This commit proposes a new mechanism to do this, based on the existing; RooFit pythonization mirror class infrastructure:. * Every class or member function that should get a PyROOT block gets; an can be patched with an attribute `_doxygen`, containing the; contents of the PyROOT block; * Member functions can also be patched with the attribute; `cpp_signature`, specifying the C++ overload where the PyROOT block; should go; * A new scipt `print_roofit_pyz_doctrings.py` extracts this; information, and this script is used to create a file; `_roofit.pyzdoc` with all the doxygen source to generate both the; PyROOT blocks in the existing documentation, as well as the separate; page about all the RooFit pythonizations. This is how the RooFit pythonization page would look like with this PR:. ![Screenshot_2021-08-17_15-06-40](https://user-images.githubusercontent.com/6578603/129736827-e2aadfe5-2893-48c0-a7e9-2549a136cd68.png). Writing all the documentation will be done in later PRs by @Harshalzzzzzzz , this PR is just to set up the infrastructure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8856
https://github.com/root-project/root/issues/8857:9547,Availability,Error,Error,9547,"e() () from /home/shamrock/Research_LL/ctau-proper/lxplus_HTcondor/preselect/result/lib/libTree.so; #8 0x00007f5acebeb4f8 in THashList::Delete(char const*) () from /home/shamrock/Research_LL/ctau-proper/lxplus_HTcondor/preselect/result/lib/libCore.so; #9 0x00007f5aceb37e7a in TROOT::EndOfProcessCleanups() () from /home/shamrock/Research_LL/ctau-proper/lxplus_HTcondor/preselect/result/lib/libCore.so; #10 0x00007f5acec9161f in TUnixSystem::Exit(int, bool) () from /home/shamrock/Research_LL/ctau-proper/lxplus_HTcondor/preselect/result/lib/libCore.so; #11 0x00007f5aceb44017 in TApplication::Terminate(int) () from /home/shamrock/Research_LL/ctau-proper/lxplus_HTcondor/preselect/result/lib/libCore.so; #12 0x00007f5acee3c936 in TRint::Run(bool) () from /home/shamrock/Research_LL/ctau-proper/lxplus_HTcondor/preselect/result/lib/libRint.so; #13 0x000000000040110c in main (); ===========================================================. Error in &lt;TList::Delete&gt;: A list is accessing an object (0x7f5acedf5830) already deleted (list name = ClosedFiles). </pre>. 3. Substituting the line; ```C++; auto dfOut = dfAug.Redefine(...);; ```; with; ```C++; auto dfOut = dfAug;; ```; and it will complete the execution without errors. ### Setup; 1. ROOT version: master (commit eb7c9c44465ad3f8db90d83598e3116a45ca630e), ""6.25/01""; 2. Operating system: NixOS; - system: `""x86_64-linux""`; - host os: `Linux 5.10.48, NixOS, 21.05.20210717.b2f87e0 (Okapi)`; - multi-user?: `yes`; - sandbox: `yes`; - version: `nix-env (Nix) 2.4pre20210601_5985b8b`; - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`; 3. How you obtained ROOT: Build myself by upgrading the Nixpkgs `root` package. ### Additional context; Nix expressions used to build ROOT:; `flake.nix`; ```Nix; {; inputs.nixpkgs.url = ""github:NixOS/nixpkgs/nixos-21.05"";; inputs.nixpkgs-root.url = ""github:ShamrockLee/nixpkgs/root-6-25"";; inputs.flake-utils.url = ""github:numtide/flake-utils"";; inputs.root-source.url = ""github:root-proje",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8857
https://github.com/root-project/root/issues/8857:9834,Availability,error,errors,9834,"rch_LL/ctau-proper/lxplus_HTcondor/preselect/result/lib/libCore.so; #9 0x00007f5aceb37e7a in TROOT::EndOfProcessCleanups() () from /home/shamrock/Research_LL/ctau-proper/lxplus_HTcondor/preselect/result/lib/libCore.so; #10 0x00007f5acec9161f in TUnixSystem::Exit(int, bool) () from /home/shamrock/Research_LL/ctau-proper/lxplus_HTcondor/preselect/result/lib/libCore.so; #11 0x00007f5aceb44017 in TApplication::Terminate(int) () from /home/shamrock/Research_LL/ctau-proper/lxplus_HTcondor/preselect/result/lib/libCore.so; #12 0x00007f5acee3c936 in TRint::Run(bool) () from /home/shamrock/Research_LL/ctau-proper/lxplus_HTcondor/preselect/result/lib/libRint.so; #13 0x000000000040110c in main (); ===========================================================. Error in &lt;TList::Delete&gt;: A list is accessing an object (0x7f5acedf5830) already deleted (list name = ClosedFiles). </pre>. 3. Substituting the line; ```C++; auto dfOut = dfAug.Redefine(...);; ```; with; ```C++; auto dfOut = dfAug;; ```; and it will complete the execution without errors. ### Setup; 1. ROOT version: master (commit eb7c9c44465ad3f8db90d83598e3116a45ca630e), ""6.25/01""; 2. Operating system: NixOS; - system: `""x86_64-linux""`; - host os: `Linux 5.10.48, NixOS, 21.05.20210717.b2f87e0 (Okapi)`; - multi-user?: `yes`; - sandbox: `yes`; - version: `nix-env (Nix) 2.4pre20210601_5985b8b`; - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`; 3. How you obtained ROOT: Build myself by upgrading the Nixpkgs `root` package. ### Additional context; Nix expressions used to build ROOT:; `flake.nix`; ```Nix; {; inputs.nixpkgs.url = ""github:NixOS/nixpkgs/nixos-21.05"";; inputs.nixpkgs-root.url = ""github:ShamrockLee/nixpkgs/root-6-25"";; inputs.flake-utils.url = ""github:numtide/flake-utils"";; inputs.root-source.url = ""github:root-project/root/master"";; inputs.root-source.flake = false;; outputs = inputs@{nixpkgs, nixpkgs-root, flake-utils, root-source, ...}: flake-utils.lib.eachDefaultSystem (system: let; pkgs = nixp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8857
https://github.com/root-project/root/issues/8857:10086,Modifiability,sandbox,sandbox,10086,"/Research_LL/ctau-proper/lxplus_HTcondor/preselect/result/lib/libCore.so; #11 0x00007f5aceb44017 in TApplication::Terminate(int) () from /home/shamrock/Research_LL/ctau-proper/lxplus_HTcondor/preselect/result/lib/libCore.so; #12 0x00007f5acee3c936 in TRint::Run(bool) () from /home/shamrock/Research_LL/ctau-proper/lxplus_HTcondor/preselect/result/lib/libRint.so; #13 0x000000000040110c in main (); ===========================================================. Error in &lt;TList::Delete&gt;: A list is accessing an object (0x7f5acedf5830) already deleted (list name = ClosedFiles). </pre>. 3. Substituting the line; ```C++; auto dfOut = dfAug.Redefine(...);; ```; with; ```C++; auto dfOut = dfAug;; ```; and it will complete the execution without errors. ### Setup; 1. ROOT version: master (commit eb7c9c44465ad3f8db90d83598e3116a45ca630e), ""6.25/01""; 2. Operating system: NixOS; - system: `""x86_64-linux""`; - host os: `Linux 5.10.48, NixOS, 21.05.20210717.b2f87e0 (Okapi)`; - multi-user?: `yes`; - sandbox: `yes`; - version: `nix-env (Nix) 2.4pre20210601_5985b8b`; - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`; 3. How you obtained ROOT: Build myself by upgrading the Nixpkgs `root` package. ### Additional context; Nix expressions used to build ROOT:; `flake.nix`; ```Nix; {; inputs.nixpkgs.url = ""github:NixOS/nixpkgs/nixos-21.05"";; inputs.nixpkgs-root.url = ""github:ShamrockLee/nixpkgs/root-6-25"";; inputs.flake-utils.url = ""github:numtide/flake-utils"";; inputs.root-source.url = ""github:root-project/root/master"";; inputs.root-source.flake = false;; outputs = inputs@{nixpkgs, nixpkgs-root, flake-utils, root-source, ...}: flake-utils.lib.eachDefaultSystem (system: let; pkgs = nixpkgs.legacyPackages.${system};; pkgs-root = import nixpkgs-root {; inherit system;; overlays = [; (final: prev: {; root = prev.root.overrideAttrs (oldAttrs: {; src = root-source;; });; }); ];; };; in{; legacyPackages = pkgs;; legacyPackages-root = pkgs-root;; packages = {; inherit (pkgs-root) ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8857
https://github.com/root-project/root/issues/8857:10858,Modifiability,inherit,inherit,10858,"sion: master (commit eb7c9c44465ad3f8db90d83598e3116a45ca630e), ""6.25/01""; 2. Operating system: NixOS; - system: `""x86_64-linux""`; - host os: `Linux 5.10.48, NixOS, 21.05.20210717.b2f87e0 (Okapi)`; - multi-user?: `yes`; - sandbox: `yes`; - version: `nix-env (Nix) 2.4pre20210601_5985b8b`; - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`; 3. How you obtained ROOT: Build myself by upgrading the Nixpkgs `root` package. ### Additional context; Nix expressions used to build ROOT:; `flake.nix`; ```Nix; {; inputs.nixpkgs.url = ""github:NixOS/nixpkgs/nixos-21.05"";; inputs.nixpkgs-root.url = ""github:ShamrockLee/nixpkgs/root-6-25"";; inputs.flake-utils.url = ""github:numtide/flake-utils"";; inputs.root-source.url = ""github:root-project/root/master"";; inputs.root-source.flake = false;; outputs = inputs@{nixpkgs, nixpkgs-root, flake-utils, root-source, ...}: flake-utils.lib.eachDefaultSystem (system: let; pkgs = nixpkgs.legacyPackages.${system};; pkgs-root = import nixpkgs-root {; inherit system;; overlays = [; (final: prev: {; root = prev.root.overrideAttrs (oldAttrs: {; src = root-source;; });; }); ];; };; in{; legacyPackages = pkgs;; legacyPackages-root = pkgs-root;; packages = {; inherit (pkgs-root) root gcc gnumake cmake;; inherit (pkgs) gawk;; };; defaultPackage = pkgs-root.root;; devShell = pkgs.mkShell {; buildInputs = (with pkgs-root; [; root; ]);; nativeBuildInputs = (with pkgs-root; [; gcc; gnumake; cmake; ]);; };; });; }; ```. Generated lock file; `flake.lock`; ```json; {; ""nodes"": {; ""flake-utils"": {; ""locked"": {; ""lastModified"": 1623875721,; ""narHash"": ""sha256-A8BU7bjS5GirpAUv4QA+QnJ4CceLHkcXdRp4xITDB0s="",; ""owner"": ""numtide"",; ""repo"": ""flake-utils"",; ""rev"": ""f7e004a55b120c02ecb6219596820fcd32ca8772"",; ""type"": ""github""; },; ""original"": {; ""owner"": ""numtide"",; ""repo"": ""flake-utils"",; ""type"": ""github""; }; },; ""nixpkgs"": {; ""locked"": {; ""lastModified"": 1628696776,; ""narHash"": ""sha256-K8+/IQNZDZltIu/KSf+Tz01OwNzTGgTch0ktMOWcxLg="",; ""owner"": ""NixOS"",; ""repo"": ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8857
https://github.com/root-project/root/issues/8857:11065,Modifiability,inherit,inherit,11065,".b2f87e0 (Okapi)`; - multi-user?: `yes`; - sandbox: `yes`; - version: `nix-env (Nix) 2.4pre20210601_5985b8b`; - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`; 3. How you obtained ROOT: Build myself by upgrading the Nixpkgs `root` package. ### Additional context; Nix expressions used to build ROOT:; `flake.nix`; ```Nix; {; inputs.nixpkgs.url = ""github:NixOS/nixpkgs/nixos-21.05"";; inputs.nixpkgs-root.url = ""github:ShamrockLee/nixpkgs/root-6-25"";; inputs.flake-utils.url = ""github:numtide/flake-utils"";; inputs.root-source.url = ""github:root-project/root/master"";; inputs.root-source.flake = false;; outputs = inputs@{nixpkgs, nixpkgs-root, flake-utils, root-source, ...}: flake-utils.lib.eachDefaultSystem (system: let; pkgs = nixpkgs.legacyPackages.${system};; pkgs-root = import nixpkgs-root {; inherit system;; overlays = [; (final: prev: {; root = prev.root.overrideAttrs (oldAttrs: {; src = root-source;; });; }); ];; };; in{; legacyPackages = pkgs;; legacyPackages-root = pkgs-root;; packages = {; inherit (pkgs-root) root gcc gnumake cmake;; inherit (pkgs) gawk;; };; defaultPackage = pkgs-root.root;; devShell = pkgs.mkShell {; buildInputs = (with pkgs-root; [; root; ]);; nativeBuildInputs = (with pkgs-root; [; gcc; gnumake; cmake; ]);; };; });; }; ```. Generated lock file; `flake.lock`; ```json; {; ""nodes"": {; ""flake-utils"": {; ""locked"": {; ""lastModified"": 1623875721,; ""narHash"": ""sha256-A8BU7bjS5GirpAUv4QA+QnJ4CceLHkcXdRp4xITDB0s="",; ""owner"": ""numtide"",; ""repo"": ""flake-utils"",; ""rev"": ""f7e004a55b120c02ecb6219596820fcd32ca8772"",; ""type"": ""github""; },; ""original"": {; ""owner"": ""numtide"",; ""repo"": ""flake-utils"",; ""type"": ""github""; }; },; ""nixpkgs"": {; ""locked"": {; ""lastModified"": 1628696776,; ""narHash"": ""sha256-K8+/IQNZDZltIu/KSf+Tz01OwNzTGgTch0ktMOWcxLg="",; ""owner"": ""NixOS"",; ""repo"": ""nixpkgs"",; ""rev"": ""927ce1afc1db40869a463a37ea2738c27d425f80"",; ""type"": ""github""; },; ""original"": {; ""owner"": ""NixOS"",; ""ref"": ""nixos-21.05"",; ""repo"": ""nixpkgs"",; ""type"": ""github",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8857
https://github.com/root-project/root/issues/8857:11110,Modifiability,inherit,inherit,11110,".b2f87e0 (Okapi)`; - multi-user?: `yes`; - sandbox: `yes`; - version: `nix-env (Nix) 2.4pre20210601_5985b8b`; - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`; 3. How you obtained ROOT: Build myself by upgrading the Nixpkgs `root` package. ### Additional context; Nix expressions used to build ROOT:; `flake.nix`; ```Nix; {; inputs.nixpkgs.url = ""github:NixOS/nixpkgs/nixos-21.05"";; inputs.nixpkgs-root.url = ""github:ShamrockLee/nixpkgs/root-6-25"";; inputs.flake-utils.url = ""github:numtide/flake-utils"";; inputs.root-source.url = ""github:root-project/root/master"";; inputs.root-source.flake = false;; outputs = inputs@{nixpkgs, nixpkgs-root, flake-utils, root-source, ...}: flake-utils.lib.eachDefaultSystem (system: let; pkgs = nixpkgs.legacyPackages.${system};; pkgs-root = import nixpkgs-root {; inherit system;; overlays = [; (final: prev: {; root = prev.root.overrideAttrs (oldAttrs: {; src = root-source;; });; }); ];; };; in{; legacyPackages = pkgs;; legacyPackages-root = pkgs-root;; packages = {; inherit (pkgs-root) root gcc gnumake cmake;; inherit (pkgs) gawk;; };; defaultPackage = pkgs-root.root;; devShell = pkgs.mkShell {; buildInputs = (with pkgs-root; [; root; ]);; nativeBuildInputs = (with pkgs-root; [; gcc; gnumake; cmake; ]);; };; });; }; ```. Generated lock file; `flake.lock`; ```json; {; ""nodes"": {; ""flake-utils"": {; ""locked"": {; ""lastModified"": 1623875721,; ""narHash"": ""sha256-A8BU7bjS5GirpAUv4QA+QnJ4CceLHkcXdRp4xITDB0s="",; ""owner"": ""numtide"",; ""repo"": ""flake-utils"",; ""rev"": ""f7e004a55b120c02ecb6219596820fcd32ca8772"",; ""type"": ""github""; },; ""original"": {; ""owner"": ""numtide"",; ""repo"": ""flake-utils"",; ""type"": ""github""; }; },; ""nixpkgs"": {; ""locked"": {; ""lastModified"": 1628696776,; ""narHash"": ""sha256-K8+/IQNZDZltIu/KSf+Tz01OwNzTGgTch0ktMOWcxLg="",; ""owner"": ""NixOS"",; ""repo"": ""nixpkgs"",; ""rev"": ""927ce1afc1db40869a463a37ea2738c27d425f80"",; ""type"": ""github""; },; ""original"": {; ""owner"": ""NixOS"",; ""ref"": ""nixos-21.05"",; ""repo"": ""nixpkgs"",; ""type"": ""github",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8857
https://github.com/root-project/root/issues/8857:9589,Security,access,accessing,9589,"e() () from /home/shamrock/Research_LL/ctau-proper/lxplus_HTcondor/preselect/result/lib/libTree.so; #8 0x00007f5acebeb4f8 in THashList::Delete(char const*) () from /home/shamrock/Research_LL/ctau-proper/lxplus_HTcondor/preselect/result/lib/libCore.so; #9 0x00007f5aceb37e7a in TROOT::EndOfProcessCleanups() () from /home/shamrock/Research_LL/ctau-proper/lxplus_HTcondor/preselect/result/lib/libCore.so; #10 0x00007f5acec9161f in TUnixSystem::Exit(int, bool) () from /home/shamrock/Research_LL/ctau-proper/lxplus_HTcondor/preselect/result/lib/libCore.so; #11 0x00007f5aceb44017 in TApplication::Terminate(int) () from /home/shamrock/Research_LL/ctau-proper/lxplus_HTcondor/preselect/result/lib/libCore.so; #12 0x00007f5acee3c936 in TRint::Run(bool) () from /home/shamrock/Research_LL/ctau-proper/lxplus_HTcondor/preselect/result/lib/libRint.so; #13 0x000000000040110c in main (); ===========================================================. Error in &lt;TList::Delete&gt;: A list is accessing an object (0x7f5acedf5830) already deleted (list name = ClosedFiles). </pre>. 3. Substituting the line; ```C++; auto dfOut = dfAug.Redefine(...);; ```; with; ```C++; auto dfOut = dfAug;; ```; and it will complete the execution without errors. ### Setup; 1. ROOT version: master (commit eb7c9c44465ad3f8db90d83598e3116a45ca630e), ""6.25/01""; 2. Operating system: NixOS; - system: `""x86_64-linux""`; - host os: `Linux 5.10.48, NixOS, 21.05.20210717.b2f87e0 (Okapi)`; - multi-user?: `yes`; - sandbox: `yes`; - version: `nix-env (Nix) 2.4pre20210601_5985b8b`; - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`; 3. How you obtained ROOT: Build myself by upgrading the Nixpkgs `root` package. ### Additional context; Nix expressions used to build ROOT:; `flake.nix`; ```Nix; {; inputs.nixpkgs.url = ""github:NixOS/nixpkgs/nixos-21.05"";; inputs.nixpkgs-root.url = ""github:ShamrockLee/nixpkgs/root-6-25"";; inputs.flake-utils.url = ""github:numtide/flake-utils"";; inputs.root-source.url = ""github:root-proje",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8857
https://github.com/root-project/root/issues/8857:1455,Testability,Test,TestVar,1455,"lumns are re-definable. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. 1. Generate a file containing a simple tree containing a `std::vector<Float_t>` branch:. `gen_tree.C`; ```C++; #include <Rtypes.h>; #include <TFile.h>; #include <TTree.h>; #include <TBranch.h>. #include <vector>; #include <string>; #include <cstdlib>; #include <iostream>. void gen_tree(const std::string pathFile = ""file_float_vector.root"") {; 	TFile *tfOut = TFile::Open(pathFile.c_str(), ""RECREATE"");; 	tfOut->cd();; 	TTree *ttOut = new TTree(""Events"", ""Tree of float vectors"");; 	std::vector<Float_t> vTest(8);; 	vTest.clear();; 	ttOut->Branch(""TestVar"", &vTest);; 	constexpr size_t nEntries = 100;; 	for (size_t jEntry = 0; jEntry < nEntries; ++jEntry) {; 		const Float_t var0 = rand() / static_cast<Float_t>(RAND_MAX);; 		const size_t nVar = rand() % 8;; 		std::cerr << ""jEntry: "" << jEntry << ""\tnVar: "" << nVar << ""\tvar0: "" << var0 << std::endl;; 		vTest.resize(nVar, 0.);; 		for (size_t iVar = 0; iVar < nVar; ++iVar) {; 			vTest[iVar] = var0 + 0.125 * iVar;; 			std::cerr << vTest[iVar] << "" "" << std::flush;; 		}; 		std::cerr << std::endl;; 		ttOut->Fill();; 	}; 	ttOut->Write();; 	tfOut->Close();; }; ```; 2. Read with `RDataFrame`, define a column, redefine it, and save the two columns to histograms:; `reproduce.C`; ```C++; #include <Rtypes.h>; #include <TFile.h>; #include <TTree.h>; #include <TBranch.h>; #include <TH1.h>; #include <ROOT/RDataFrame.hxx>. #include <vector>; #include <string>. void reproduce(const std::string pathFileIn = ""file_float_vector.root"", const std::string pathFileOut = ""file_out.root"") {; 	TFile *tfIn = TFile::Open(pathFileIn.c_str());; 	TTree *ttIn = tfIn->Get<TTree>(""Events"");; 	ROOT::RDataFrame dfIn(*ttIn);; 	std::cerr << ""Creating a custom c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8857
https://github.com/root-project/root/issues/8857:2665,Testability,Test,TestVar,2665,"% 8;; 		std::cerr << ""jEntry: "" << jEntry << ""\tnVar: "" << nVar << ""\tvar0: "" << var0 << std::endl;; 		vTest.resize(nVar, 0.);; 		for (size_t iVar = 0; iVar < nVar; ++iVar) {; 			vTest[iVar] = var0 + 0.125 * iVar;; 			std::cerr << vTest[iVar] << "" "" << std::flush;; 		}; 		std::cerr << std::endl;; 		ttOut->Fill();; 	}; 	ttOut->Write();; 	tfOut->Close();; }; ```; 2. Read with `RDataFrame`, define a column, redefine it, and save the two columns to histograms:; `reproduce.C`; ```C++; #include <Rtypes.h>; #include <TFile.h>; #include <TTree.h>; #include <TBranch.h>; #include <TH1.h>; #include <ROOT/RDataFrame.hxx>. #include <vector>; #include <string>. void reproduce(const std::string pathFileIn = ""file_float_vector.root"", const std::string pathFileOut = ""file_out.root"") {; 	TFile *tfIn = TFile::Open(pathFileIn.c_str());; 	TTree *ttIn = tfIn->Get<TTree>(""Events"");; 	ROOT::RDataFrame dfIn(*ttIn);; 	std::cerr << ""Creating a custom column ..."" << std::endl;; 	auto dfAug = dfIn.Define(""TestVar2"", ""TestVar + 1."");; 	std::cerr << ""Redefining ..."" << std::endl;; 	auto dfOut = dfAug.Redefine(""TestVar2"", ""TestVar2.size() ? ROOT::VecOps::Take(TestVar2, {0}) : ROOT::VecOps::Take(TestVar2, {})"");; 	std::cerr << ""Action: Histo1D"" << std::endl;; 	// auto histview1 = dfOut.Histo1D({""hTest1"", ""Histogram showing the column in the input tree"", 30000, 0., 3.}, ""TestVar"");; 	auto histview2 = dfOut.Histo1D({""hTest2"", ""Histogram showing the custom (defined) column"", 30000, 0., 3.}, ""TestVar2"");; 	std::cerr << ""Saving histogram ..."" << std::endl;; 	TFile *tfOut = TFile::Open(pathFileOut.c_str(), ""RECREATE"");; 	tfOut->cd();; 	// std::cerr << ""Writing histview1"" << std::endl;; 	// histview1->Write();; 	std::cerr << ""Writing histview2"" << std::endl;; 	histview2->Write();; 	std::cerr << ""Finalizing ..."" << std::endl;; 	tfOut->Close();; 	tfIn->Close();; 	std::cerr << ""Complete!"" << std::endl;; }; ```. Here is the output of the second piece of code:; <pre><font color=""#55FF55""><b>$</b></font> root -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8857
https://github.com/root-project/root/issues/8857:3021,Testability,Test,TestVar,3021," `RDataFrame`, define a column, redefine it, and save the two columns to histograms:; `reproduce.C`; ```C++; #include <Rtypes.h>; #include <TFile.h>; #include <TTree.h>; #include <TBranch.h>; #include <TH1.h>; #include <ROOT/RDataFrame.hxx>. #include <vector>; #include <string>. void reproduce(const std::string pathFileIn = ""file_float_vector.root"", const std::string pathFileOut = ""file_out.root"") {; 	TFile *tfIn = TFile::Open(pathFileIn.c_str());; 	TTree *ttIn = tfIn->Get<TTree>(""Events"");; 	ROOT::RDataFrame dfIn(*ttIn);; 	std::cerr << ""Creating a custom column ..."" << std::endl;; 	auto dfAug = dfIn.Define(""TestVar2"", ""TestVar + 1."");; 	std::cerr << ""Redefining ..."" << std::endl;; 	auto dfOut = dfAug.Redefine(""TestVar2"", ""TestVar2.size() ? ROOT::VecOps::Take(TestVar2, {0}) : ROOT::VecOps::Take(TestVar2, {})"");; 	std::cerr << ""Action: Histo1D"" << std::endl;; 	// auto histview1 = dfOut.Histo1D({""hTest1"", ""Histogram showing the column in the input tree"", 30000, 0., 3.}, ""TestVar"");; 	auto histview2 = dfOut.Histo1D({""hTest2"", ""Histogram showing the custom (defined) column"", 30000, 0., 3.}, ""TestVar2"");; 	std::cerr << ""Saving histogram ..."" << std::endl;; 	TFile *tfOut = TFile::Open(pathFileOut.c_str(), ""RECREATE"");; 	tfOut->cd();; 	// std::cerr << ""Writing histview1"" << std::endl;; 	// histview1->Write();; 	std::cerr << ""Writing histview2"" << std::endl;; 	histview2->Write();; 	std::cerr << ""Finalizing ..."" << std::endl;; 	tfOut->Close();; 	tfIn->Close();; 	std::cerr << ""Complete!"" << std::endl;; }; ```. Here is the output of the second piece of code:; <pre><font color=""#55FF55""><b>$</b></font> root -l -q &quot;reproduce.C++()&quot;. Processing reproduce.C++()...; Info in &lt;TUnixSystem::ACLiC&gt;: creating shared library /run/media/root/data-btrfs/shamrock-shared/targets/Research_LL/ctau-proper/lxplus_HTcondor/preselect/redefine_custom_vector/./reproduce_C.so; Creating a custom column ...; Redefining ...; <b>input_line_34:2:99: </b><font color=""#FF55FF""><b>warning: </",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8857
https://github.com/root-project/root/issues/8857:10086,Testability,sandbox,sandbox,10086,"/Research_LL/ctau-proper/lxplus_HTcondor/preselect/result/lib/libCore.so; #11 0x00007f5aceb44017 in TApplication::Terminate(int) () from /home/shamrock/Research_LL/ctau-proper/lxplus_HTcondor/preselect/result/lib/libCore.so; #12 0x00007f5acee3c936 in TRint::Run(bool) () from /home/shamrock/Research_LL/ctau-proper/lxplus_HTcondor/preselect/result/lib/libRint.so; #13 0x000000000040110c in main (); ===========================================================. Error in &lt;TList::Delete&gt;: A list is accessing an object (0x7f5acedf5830) already deleted (list name = ClosedFiles). </pre>. 3. Substituting the line; ```C++; auto dfOut = dfAug.Redefine(...);; ```; with; ```C++; auto dfOut = dfAug;; ```; and it will complete the execution without errors. ### Setup; 1. ROOT version: master (commit eb7c9c44465ad3f8db90d83598e3116a45ca630e), ""6.25/01""; 2. Operating system: NixOS; - system: `""x86_64-linux""`; - host os: `Linux 5.10.48, NixOS, 21.05.20210717.b2f87e0 (Okapi)`; - multi-user?: `yes`; - sandbox: `yes`; - version: `nix-env (Nix) 2.4pre20210601_5985b8b`; - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`; 3. How you obtained ROOT: Build myself by upgrading the Nixpkgs `root` package. ### Additional context; Nix expressions used to build ROOT:; `flake.nix`; ```Nix; {; inputs.nixpkgs.url = ""github:NixOS/nixpkgs/nixos-21.05"";; inputs.nixpkgs-root.url = ""github:ShamrockLee/nixpkgs/root-6-25"";; inputs.flake-utils.url = ""github:numtide/flake-utils"";; inputs.root-source.url = ""github:root-project/root/master"";; inputs.root-source.flake = false;; outputs = inputs@{nixpkgs, nixpkgs-root, flake-utils, root-source, ...}: flake-utils.lib.eachDefaultSystem (system: let; pkgs = nixpkgs.legacyPackages.${system};; pkgs-root = import nixpkgs-root {; inherit system;; overlays = [; (final: prev: {; root = prev.root.overrideAttrs (oldAttrs: {; src = root-source;; });; }); ];; };; in{; legacyPackages = pkgs;; legacyPackages-root = pkgs-root;; packages = {; inherit (pkgs-root) ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8857
https://github.com/root-project/root/issues/8857:938,Usability,simpl,simple,938,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; `Redefine()` is a new method added on the master branch to allow re-definition to an existing column. However, segmentation violation occurs when trying to redefine a defined column. ### Expected behavior; Defined columns are re-definable. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. 1. Generate a file containing a simple tree containing a `std::vector<Float_t>` branch:. `gen_tree.C`; ```C++; #include <Rtypes.h>; #include <TFile.h>; #include <TTree.h>; #include <TBranch.h>. #include <vector>; #include <string>; #include <cstdlib>; #include <iostream>. void gen_tree(const std::string pathFile = ""file_float_vector.root"") {; 	TFile *tfOut = TFile::Open(pathFile.c_str(), ""RECREATE"");; 	tfOut->cd();; 	TTree *ttOut = new TTree(""Events"", ""Tree of float vectors"");; 	std::vector<Float_t> vTest(8);; 	vTest.clear();; 	ttOut->Branch(""TestVar"", &vTest);; 	constexpr size_t nEntries = 100;; 	for (size_t jEntry = 0; jEntry < nEntries; ++jEntry) {; 		const Float_t var0 = rand() / static_cast<Float_t>(RAND_MAX);; 		const size_t nVar = rand() % 8;; 		std::cerr << ""jEntry: "" << jEntry << ""\tnVar: "" << nVar << ""\tvar0: "" << var0 << std::endl;; 		vTest.resize(nVar, 0.);; 		for (size_t iVar = 0; iVar < nVar; ++iVar) {; 			vTest[iVar] = var0 + 0.125 * iVar;; 			std::cerr << vTest[iVar] << "" "" << std::flush;; 		}; 		std::cerr << std::endl;; 		ttOut->Fill();; 	}; 	ttOut->Write();; 	t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8857
https://github.com/root-project/root/issues/8857:1429,Usability,clear,clear,1429,"lumns are re-definable. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. 1. Generate a file containing a simple tree containing a `std::vector<Float_t>` branch:. `gen_tree.C`; ```C++; #include <Rtypes.h>; #include <TFile.h>; #include <TTree.h>; #include <TBranch.h>. #include <vector>; #include <string>; #include <cstdlib>; #include <iostream>. void gen_tree(const std::string pathFile = ""file_float_vector.root"") {; 	TFile *tfOut = TFile::Open(pathFile.c_str(), ""RECREATE"");; 	tfOut->cd();; 	TTree *ttOut = new TTree(""Events"", ""Tree of float vectors"");; 	std::vector<Float_t> vTest(8);; 	vTest.clear();; 	ttOut->Branch(""TestVar"", &vTest);; 	constexpr size_t nEntries = 100;; 	for (size_t jEntry = 0; jEntry < nEntries; ++jEntry) {; 		const Float_t var0 = rand() / static_cast<Float_t>(RAND_MAX);; 		const size_t nVar = rand() % 8;; 		std::cerr << ""jEntry: "" << jEntry << ""\tnVar: "" << nVar << ""\tvar0: "" << var0 << std::endl;; 		vTest.resize(nVar, 0.);; 		for (size_t iVar = 0; iVar < nVar; ++iVar) {; 			vTest[iVar] = var0 + 0.125 * iVar;; 			std::cerr << vTest[iVar] << "" "" << std::flush;; 		}; 		std::cerr << std::endl;; 		ttOut->Fill();; 	}; 	ttOut->Write();; 	tfOut->Close();; }; ```; 2. Read with `RDataFrame`, define a column, redefine it, and save the two columns to histograms:; `reproduce.C`; ```C++; #include <Rtypes.h>; #include <TFile.h>; #include <TTree.h>; #include <TBranch.h>; #include <TH1.h>; #include <ROOT/RDataFrame.hxx>. #include <vector>; #include <string>. void reproduce(const std::string pathFileIn = ""file_float_vector.root"", const std::string pathFileOut = ""file_out.root"") {; 	TFile *tfIn = TFile::Open(pathFileIn.c_str());; 	TTree *ttIn = tfIn->Get<TTree>(""Events"");; 	ROOT::RDataFrame dfIn(*ttIn);; 	std::cerr << ""Creating a custom c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8857
https://github.com/root-project/root/pull/8858:318,Availability,redundant,redundant,318,"Fixes #8750 . To support this usecase we need to send the distributed workers also the names of the subtrees in the main chain. At this point we might want to think of a bit of a reworking of the data structures like `ChainCluster` and `FileAndIndex`, plus I would like to make the function `get_clusters` return less redundant info (currently each cluster also reports the name of the file, the name of the tree and the number of entries which are all the same for clusters belonging to the same file). These improvements are left for the next PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8858
https://github.com/root-project/root/pull/8858:318,Safety,redund,redundant,318,"Fixes #8750 . To support this usecase we need to send the distributed workers also the names of the subtrees in the main chain. At this point we might want to think of a bit of a reworking of the data structures like `ChainCluster` and `FileAndIndex`, plus I would like to make the function `get_clusters` return less redundant info (currently each cluster also reports the name of the file, the name of the tree and the number of entries which are all the same for clusters belonging to the same file). These improvements are left for the next PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8858
https://github.com/root-project/root/pull/8860:95,Deployability,update,updated,95,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8860
https://github.com/root-project/root/pull/8860:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8860
https://github.com/root-project/root/pull/8861:182,Deployability,update,updated,182,# This Pull request:; Cherry-pick from #8822 for v6-24-00. ## Changes or fixes:; fixes execStatusBitsCheck segfault for centos . ## Checklist:. - [x ] tested changes locally; - [x ] updated the docs (if necessary). This PR fixes # . fixes execStatusBitsCheck segfault for centos,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8861
https://github.com/root-project/root/pull/8861:151,Testability,test,tested,151,# This Pull request:; Cherry-pick from #8822 for v6-24-00. ## Changes or fixes:; fixes execStatusBitsCheck segfault for centos . ## Checklist:. - [x ] tested changes locally; - [x ] updated the docs (if necessary). This PR fixes # . fixes execStatusBitsCheck segfault for centos,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8861
https://github.com/root-project/root/pull/8862:100,Modifiability,variab,variable,100,Finish up with changing naming of `friend_info` to `friendinfo` which is more consistent with other variable naming in various classes and functions in DistRDF,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8862
https://github.com/root-project/root/pull/8864:179,Deployability,update,updated,179,# This Pull request:; Cherry-pick from #8822 for v6-22-00; ## Changes or fixes:; fixes execStatusBitsCheck segfault for centos. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # ; fixes execStatusBitsCheck segfault for centos,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8864
https://github.com/root-project/root/pull/8864:149,Testability,test,tested,149,# This Pull request:; Cherry-pick from #8822 for v6-22-00; ## Changes or fixes:; fixes execStatusBitsCheck segfault for centos. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # ; fixes execStatusBitsCheck segfault for centos,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8864
https://github.com/root-project/root/pull/8865:179,Deployability,update,updated,179,# This Pull request:; Cherry-pick from #8822 for v6-20-00; ## Changes or fixes:; fixes execStatusBitsCheck segfault for centos. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # . fixes execStatusBitsCheck segfault for centos,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8865
https://github.com/root-project/root/pull/8865:149,Testability,test,tested,149,# This Pull request:; Cherry-pick from #8822 for v6-20-00; ## Changes or fixes:; fixes execStatusBitsCheck segfault for centos. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # . fixes execStatusBitsCheck segfault for centos,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8865
https://github.com/root-project/root/pull/8866:23,Availability,error,errors,23,Otherwise we get cmake errors when CLING_CXXFLAGS is empty.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8866
https://github.com/root-project/root/pull/8867:27,Performance,optimiz,optimized,27,"This is a first stab to an optimized DF workflow generator in the; DistRDF workers. The optimization consists in generating the; C++ code of the workflow, compile it with ACLiC and execute it.; A compiled workflow might be faster than its purely jitted version. The optimized mode coexists with the old (jitted) mode, which is; the default. To enable the optimized mode the following flag; can be used:; ```python; ROOT.RDF.Experimental.Distributed.optimized = True; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8867
https://github.com/root-project/root/pull/8867:88,Performance,optimiz,optimization,88,"This is a first stab to an optimized DF workflow generator in the; DistRDF workers. The optimization consists in generating the; C++ code of the workflow, compile it with ACLiC and execute it.; A compiled workflow might be faster than its purely jitted version. The optimized mode coexists with the old (jitted) mode, which is; the default. To enable the optimized mode the following flag; can be used:; ```python; ROOT.RDF.Experimental.Distributed.optimized = True; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8867
https://github.com/root-project/root/pull/8867:266,Performance,optimiz,optimized,266,"This is a first stab to an optimized DF workflow generator in the; DistRDF workers. The optimization consists in generating the; C++ code of the workflow, compile it with ACLiC and execute it.; A compiled workflow might be faster than its purely jitted version. The optimized mode coexists with the old (jitted) mode, which is; the default. To enable the optimized mode the following flag; can be used:; ```python; ROOT.RDF.Experimental.Distributed.optimized = True; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8867
https://github.com/root-project/root/pull/8867:355,Performance,optimiz,optimized,355,"This is a first stab to an optimized DF workflow generator in the; DistRDF workers. The optimization consists in generating the; C++ code of the workflow, compile it with ACLiC and execute it.; A compiled workflow might be faster than its purely jitted version. The optimized mode coexists with the old (jitted) mode, which is; the default. To enable the optimized mode the following flag; can be used:; ```python; ROOT.RDF.Experimental.Distributed.optimized = True; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8867
https://github.com/root-project/root/pull/8867:449,Performance,optimiz,optimized,449,"This is a first stab to an optimized DF workflow generator in the; DistRDF workers. The optimization consists in generating the; C++ code of the workflow, compile it with ACLiC and execute it.; A compiled workflow might be faster than its purely jitted version. The optimized mode coexists with the old (jitted) mode, which is; the default. To enable the optimized mode the following flag; can be used:; ```python; ROOT.RDF.Experimental.Distributed.optimized = True; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8867
https://github.com/root-project/root/pull/8868:194,Availability,error,error,194,"Fixes https://github.com/root-project/root/issues/8850. May still need polishing, will add test if logic is approved. With this commit, when `root` receives an unrecognized options it prints an error (similar to other linux commands errors) and exits before showing the prompt. ```; $ root --nonexistingoption; Error in <TApplication::GetOptions>: unrecognized option '--nonexistingoption'; Try 'root --help' for more information.; $ cp --nonexistingoption; cp: unrecognized option '--nonexistingoption'; Try 'cp --help' for more information.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8868
https://github.com/root-project/root/pull/8868:233,Availability,error,errors,233,"Fixes https://github.com/root-project/root/issues/8850. May still need polishing, will add test if logic is approved. With this commit, when `root` receives an unrecognized options it prints an error (similar to other linux commands errors) and exits before showing the prompt. ```; $ root --nonexistingoption; Error in <TApplication::GetOptions>: unrecognized option '--nonexistingoption'; Try 'root --help' for more information.; $ cp --nonexistingoption; cp: unrecognized option '--nonexistingoption'; Try 'cp --help' for more information.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8868
https://github.com/root-project/root/pull/8868:311,Availability,Error,Error,311,"Fixes https://github.com/root-project/root/issues/8850. May still need polishing, will add test if logic is approved. With this commit, when `root` receives an unrecognized options it prints an error (similar to other linux commands errors) and exits before showing the prompt. ```; $ root --nonexistingoption; Error in <TApplication::GetOptions>: unrecognized option '--nonexistingoption'; Try 'root --help' for more information.; $ cp --nonexistingoption; cp: unrecognized option '--nonexistingoption'; Try 'cp --help' for more information.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8868
https://github.com/root-project/root/pull/8868:91,Testability,test,test,91,"Fixes https://github.com/root-project/root/issues/8850. May still need polishing, will add test if logic is approved. With this commit, when `root` receives an unrecognized options it prints an error (similar to other linux commands errors) and exits before showing the prompt. ```; $ root --nonexistingoption; Error in <TApplication::GetOptions>: unrecognized option '--nonexistingoption'; Try 'root --help' for more information.; $ cp --nonexistingoption; cp: unrecognized option '--nonexistingoption'; Try 'cp --help' for more information.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8868
https://github.com/root-project/root/pull/8868:99,Testability,log,logic,99,"Fixes https://github.com/root-project/root/issues/8850. May still need polishing, will add test if logic is approved. With this commit, when `root` receives an unrecognized options it prints an error (similar to other linux commands errors) and exits before showing the prompt. ```; $ root --nonexistingoption; Error in <TApplication::GetOptions>: unrecognized option '--nonexistingoption'; Try 'root --help' for more information.; $ cp --nonexistingoption; cp: unrecognized option '--nonexistingoption'; Try 'cp --help' for more information.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8868
https://github.com/root-project/root/pull/8873:200,Deployability,configurat,configuration,200,"This Pull request introduces the Root Storage for BDT. ; Initially developed by @guitargeek(https://github.com/guitargeek/tmva-to-xgboost/) this PR implements the data structure for storing the model configuration & weights, Parse function for translating a TMVA BDT `.xml` file, and a mapping interface for generating inference code. ## Progress; - [x] Data structure for storing model configuration and weights; - [x] Serialization of the class for writing/reading to `.root` files; - [x] `Parse()` function for translating a TMVA BDT `.xml` file ; - [ ] Mapping Interface to TMVA Tree Inference for generating inference code. ## Checklist:; - [x] tested changes for `Parse()`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8873
https://github.com/root-project/root/pull/8873:387,Deployability,configurat,configuration,387,"This Pull request introduces the Root Storage for BDT. ; Initially developed by @guitargeek(https://github.com/guitargeek/tmva-to-xgboost/) this PR implements the data structure for storing the model configuration & weights, Parse function for translating a TMVA BDT `.xml` file, and a mapping interface for generating inference code. ## Progress; - [x] Data structure for storing model configuration and weights; - [x] Serialization of the class for writing/reading to `.root` files; - [x] `Parse()` function for translating a TMVA BDT `.xml` file ; - [ ] Mapping Interface to TMVA Tree Inference for generating inference code. ## Checklist:; - [x] tested changes for `Parse()`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8873
https://github.com/root-project/root/pull/8873:294,Integrability,interface,interface,294,"This Pull request introduces the Root Storage for BDT. ; Initially developed by @guitargeek(https://github.com/guitargeek/tmva-to-xgboost/) this PR implements the data structure for storing the model configuration & weights, Parse function for translating a TMVA BDT `.xml` file, and a mapping interface for generating inference code. ## Progress; - [x] Data structure for storing model configuration and weights; - [x] Serialization of the class for writing/reading to `.root` files; - [x] `Parse()` function for translating a TMVA BDT `.xml` file ; - [ ] Mapping Interface to TMVA Tree Inference for generating inference code. ## Checklist:; - [x] tested changes for `Parse()`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8873
https://github.com/root-project/root/pull/8873:565,Integrability,Interface,Interface,565,"This Pull request introduces the Root Storage for BDT. ; Initially developed by @guitargeek(https://github.com/guitargeek/tmva-to-xgboost/) this PR implements the data structure for storing the model configuration & weights, Parse function for translating a TMVA BDT `.xml` file, and a mapping interface for generating inference code. ## Progress; - [x] Data structure for storing model configuration and weights; - [x] Serialization of the class for writing/reading to `.root` files; - [x] `Parse()` function for translating a TMVA BDT `.xml` file ; - [ ] Mapping Interface to TMVA Tree Inference for generating inference code. ## Checklist:; - [x] tested changes for `Parse()`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8873
https://github.com/root-project/root/pull/8873:200,Modifiability,config,configuration,200,"This Pull request introduces the Root Storage for BDT. ; Initially developed by @guitargeek(https://github.com/guitargeek/tmva-to-xgboost/) this PR implements the data structure for storing the model configuration & weights, Parse function for translating a TMVA BDT `.xml` file, and a mapping interface for generating inference code. ## Progress; - [x] Data structure for storing model configuration and weights; - [x] Serialization of the class for writing/reading to `.root` files; - [x] `Parse()` function for translating a TMVA BDT `.xml` file ; - [ ] Mapping Interface to TMVA Tree Inference for generating inference code. ## Checklist:; - [x] tested changes for `Parse()`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8873
https://github.com/root-project/root/pull/8873:387,Modifiability,config,configuration,387,"This Pull request introduces the Root Storage for BDT. ; Initially developed by @guitargeek(https://github.com/guitargeek/tmva-to-xgboost/) this PR implements the data structure for storing the model configuration & weights, Parse function for translating a TMVA BDT `.xml` file, and a mapping interface for generating inference code. ## Progress; - [x] Data structure for storing model configuration and weights; - [x] Serialization of the class for writing/reading to `.root` files; - [x] `Parse()` function for translating a TMVA BDT `.xml` file ; - [ ] Mapping Interface to TMVA Tree Inference for generating inference code. ## Checklist:; - [x] tested changes for `Parse()`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8873
https://github.com/root-project/root/pull/8873:650,Testability,test,tested,650,"This Pull request introduces the Root Storage for BDT. ; Initially developed by @guitargeek(https://github.com/guitargeek/tmva-to-xgboost/) this PR implements the data structure for storing the model configuration & weights, Parse function for translating a TMVA BDT `.xml` file, and a mapping interface for generating inference code. ## Progress; - [x] Data structure for storing model configuration and weights; - [x] Serialization of the class for writing/reading to `.root` files; - [x] `Parse()` function for translating a TMVA BDT `.xml` file ; - [ ] Mapping Interface to TMVA Tree Inference for generating inference code. ## Checklist:; - [x] tested changes for `Parse()`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8873
https://github.com/root-project/root/pull/8874:108,Integrability,depend,depends,108,"This Pull request adds tutorials for RModelParser_ONNX, RModelParser_Keras, and RModelParser_PyTorch.; This depends on the SOFIE's Keras Parser (#8430) & PyTorch Parser (#8684). This work is a part of my project **ROOT Storage of Deep Learning Models** of Google Summer of Code'21. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8874
https://github.com/root-project/root/pull/8874:235,Usability,Learn,Learning,235,"This Pull request adds tutorials for RModelParser_ONNX, RModelParser_Keras, and RModelParser_PyTorch.; This depends on the SOFIE's Keras Parser (#8430) & PyTorch Parser (#8684). This work is a part of my project **ROOT Storage of Deep Learning Models** of Google Summer of Code'21. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8874
https://github.com/root-project/root/pull/8878:201,Availability,avail,available,201,"This PR implements the possibility to store global observables in RooFit datasets, and makes the necessary changes in the `RooAbsPdf::fitTo` code path to consider the global observables in the data if available. If one wants to restore the old behavior of taking the global observable values from the model even if they are stored in the data, one can use the new `GlobalObservablesSource` command argument. . Unit tests for all new functionality is also implemented. Please find the more information in the commit messages. Ideas for future developments in future PRs:; 1. make it possible to specify the global observables when generating a dataset:; `model.generate(x, 1000, GlobalObservables(g))`; 2. make it possible to also sample global observable values when generating a toy dataset:; `model.generate({x, g}, 1000, GlobalObservables(g))`; 3. Add a tutorial to show all the new functionality related to global observables. Closes https://github.com/root-project/root/issues/8123.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8878
https://github.com/root-project/root/pull/8878:515,Integrability,message,messages,515,"This PR implements the possibility to store global observables in RooFit datasets, and makes the necessary changes in the `RooAbsPdf::fitTo` code path to consider the global observables in the data if available. If one wants to restore the old behavior of taking the global observable values from the model even if they are stored in the data, one can use the new `GlobalObservablesSource` command argument. . Unit tests for all new functionality is also implemented. Please find the more information in the commit messages. Ideas for future developments in future PRs:; 1. make it possible to specify the global observables when generating a dataset:; `model.generate(x, 1000, GlobalObservables(g))`; 2. make it possible to also sample global observable values when generating a toy dataset:; `model.generate({x, g}, 1000, GlobalObservables(g))`; 3. Add a tutorial to show all the new functionality related to global observables. Closes https://github.com/root-project/root/issues/8123.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8878
https://github.com/root-project/root/pull/8878:415,Testability,test,tests,415,"This PR implements the possibility to store global observables in RooFit datasets, and makes the necessary changes in the `RooAbsPdf::fitTo` code path to consider the global observables in the data if available. If one wants to restore the old behavior of taking the global observable values from the model even if they are stored in the data, one can use the new `GlobalObservablesSource` command argument. . Unit tests for all new functionality is also implemented. Please find the more information in the commit messages. Ideas for future developments in future PRs:; 1. make it possible to specify the global observables when generating a dataset:; `model.generate(x, 1000, GlobalObservables(g))`; 2. make it possible to also sample global observable values when generating a toy dataset:; `model.generate({x, g}, 1000, GlobalObservables(g))`; 3. Add a tutorial to show all the new functionality related to global observables. Closes https://github.com/root-project/root/issues/8123.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8878
https://github.com/root-project/root/pull/8879:282,Integrability,interface,interface,282,"The [TKey constructor that accepts a void pointer](https://github.com/root-project/root/blob/35b5aaef38b6635e131e7d93a0c96f69bb293b9d/io/io/src/TKey.cxx#L299-L300) calls the parent TNamed constructor with a default title, because in general there is no guarantee the object has the interface `GetTitle(),SetTitle()` and there is no extra ""title"" parameter to the constructor. This leads though to some weird situations when using the [TDirectory::WriteObject](https://github.com/root-project/root/blob/35b5aaef38b6635e131e7d93a0c96f69bb293b9d/core/base/inc/TDirectory.h#L265-L268) method to write objects to files. If the written object actually has a title, this would be discarded because the function doesn't manage it as a TObject-derived instance on purpose. For example, the program below:. ```cpp; #include <TFile.h>; #include <TH1F.h>. int main(){; TFile f{""myfile.root"",""recreate""};; TH1F h{""myhistoname"",""myhistotitle"",100,0,100};; f.WriteObject(&h, h.GetName());; f.Close();; }; ```. When executed creates a file where the object ""h"" gets the default title ""object title"":. ```bash; $ rootls -l myfile.root; TH1F Aug 21 10:41 2021 myhistoname;1 ""object title""; ```. This commit adds an extra check in the TKey constructor above. If the object is derived from TNamed, then we know that it has a title (either empty or provided by the user), so we should use that instead of ""object title"". It could be interesting to have a way to; generalise this to classes that have a `GetTitle(), SetTitle()` interface, but it would be more difficult. After this commit, the example; above outputs a file that contains the histogram object with the correct title:. ```bash; $ rootls -l myfile.root; TH1F Aug 21 11:00 2021 myhistoname;1 ""myhistotitle""; ```. ## Note; This commit provides an idea of a fix, if there's a faster way to get to the object title that doesn't involve all those casts it would be great :smile:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8879
https://github.com/root-project/root/pull/8879:1506,Integrability,interface,interface,1506,"The [TKey constructor that accepts a void pointer](https://github.com/root-project/root/blob/35b5aaef38b6635e131e7d93a0c96f69bb293b9d/io/io/src/TKey.cxx#L299-L300) calls the parent TNamed constructor with a default title, because in general there is no guarantee the object has the interface `GetTitle(),SetTitle()` and there is no extra ""title"" parameter to the constructor. This leads though to some weird situations when using the [TDirectory::WriteObject](https://github.com/root-project/root/blob/35b5aaef38b6635e131e7d93a0c96f69bb293b9d/core/base/inc/TDirectory.h#L265-L268) method to write objects to files. If the written object actually has a title, this would be discarded because the function doesn't manage it as a TObject-derived instance on purpose. For example, the program below:. ```cpp; #include <TFile.h>; #include <TH1F.h>. int main(){; TFile f{""myfile.root"",""recreate""};; TH1F h{""myhistoname"",""myhistotitle"",100,0,100};; f.WriteObject(&h, h.GetName());; f.Close();; }; ```. When executed creates a file where the object ""h"" gets the default title ""object title"":. ```bash; $ rootls -l myfile.root; TH1F Aug 21 10:41 2021 myhistoname;1 ""object title""; ```. This commit adds an extra check in the TKey constructor above. If the object is derived from TNamed, then we know that it has a title (either empty or provided by the user), so we should use that instead of ""object title"". It could be interesting to have a way to; generalise this to classes that have a `GetTitle(), SetTitle()` interface, but it would be more difficult. After this commit, the example; above outputs a file that contains the histogram object with the correct title:. ```bash; $ rootls -l myfile.root; TH1F Aug 21 11:00 2021 myhistoname;1 ""myhistotitle""; ```. ## Note; This commit provides an idea of a fix, if there's a faster way to get to the object title that doesn't involve all those casts it would be great :smile:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8879
https://github.com/root-project/root/pull/8880:463,Availability,avail,available,463,"Performance visualization in the RNtupleMetrics can allow the encapsulation of more complex type of metrics, which can allow the extraction of more usefull information, as oposssed to previous, simple, agreggate counter. This PR currently encapsulates 4 fully tested variants of histogram metrics and deploys it's most sophisticated variant onto the analysis of the volume of read requests when loading a page or cluster, by default. The following 4 variants are available, mainly referred to by their key usage:. - `RNTupleHistoInterval` : User-provided set of intervals.; - `RNTupleHistoCounterLog` : Histogram on a log scale.; - `RNTupleHistoActiveLearn` : Active learning phase to adjust to data distribution.; - `RNTupleFixedWidthHistogram` : Fixed width bins with constant time filling. Developed under a summer student project by Rui Reis and supervised by Javier Lopez Gomes and Jakob Blomer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8880
https://github.com/root-project/root/pull/8880:301,Deployability,deploy,deploys,301,"Performance visualization in the RNtupleMetrics can allow the encapsulation of more complex type of metrics, which can allow the extraction of more usefull information, as oposssed to previous, simple, agreggate counter. This PR currently encapsulates 4 fully tested variants of histogram metrics and deploys it's most sophisticated variant onto the analysis of the volume of read requests when loading a page or cluster, by default. The following 4 variants are available, mainly referred to by their key usage:. - `RNTupleHistoInterval` : User-provided set of intervals.; - `RNTupleHistoCounterLog` : Histogram on a log scale.; - `RNTupleHistoActiveLearn` : Active learning phase to adjust to data distribution.; - `RNTupleFixedWidthHistogram` : Fixed width bins with constant time filling. Developed under a summer student project by Rui Reis and supervised by Javier Lopez Gomes and Jakob Blomer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8880
https://github.com/root-project/root/pull/8880:0,Performance,Perform,Performance,0,"Performance visualization in the RNtupleMetrics can allow the encapsulation of more complex type of metrics, which can allow the extraction of more usefull information, as oposssed to previous, simple, agreggate counter. This PR currently encapsulates 4 fully tested variants of histogram metrics and deploys it's most sophisticated variant onto the analysis of the volume of read requests when loading a page or cluster, by default. The following 4 variants are available, mainly referred to by their key usage:. - `RNTupleHistoInterval` : User-provided set of intervals.; - `RNTupleHistoCounterLog` : Histogram on a log scale.; - `RNTupleHistoActiveLearn` : Active learning phase to adjust to data distribution.; - `RNTupleFixedWidthHistogram` : Fixed width bins with constant time filling. Developed under a summer student project by Rui Reis and supervised by Javier Lopez Gomes and Jakob Blomer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8880
https://github.com/root-project/root/pull/8880:395,Performance,load,loading,395,"Performance visualization in the RNtupleMetrics can allow the encapsulation of more complex type of metrics, which can allow the extraction of more usefull information, as oposssed to previous, simple, agreggate counter. This PR currently encapsulates 4 fully tested variants of histogram metrics and deploys it's most sophisticated variant onto the analysis of the volume of read requests when loading a page or cluster, by default. The following 4 variants are available, mainly referred to by their key usage:. - `RNTupleHistoInterval` : User-provided set of intervals.; - `RNTupleHistoCounterLog` : Histogram on a log scale.; - `RNTupleHistoActiveLearn` : Active learning phase to adjust to data distribution.; - `RNTupleFixedWidthHistogram` : Fixed width bins with constant time filling. Developed under a summer student project by Rui Reis and supervised by Javier Lopez Gomes and Jakob Blomer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8880
https://github.com/root-project/root/pull/8880:260,Testability,test,tested,260,"Performance visualization in the RNtupleMetrics can allow the encapsulation of more complex type of metrics, which can allow the extraction of more usefull information, as oposssed to previous, simple, agreggate counter. This PR currently encapsulates 4 fully tested variants of histogram metrics and deploys it's most sophisticated variant onto the analysis of the volume of read requests when loading a page or cluster, by default. The following 4 variants are available, mainly referred to by their key usage:. - `RNTupleHistoInterval` : User-provided set of intervals.; - `RNTupleHistoCounterLog` : Histogram on a log scale.; - `RNTupleHistoActiveLearn` : Active learning phase to adjust to data distribution.; - `RNTupleFixedWidthHistogram` : Fixed width bins with constant time filling. Developed under a summer student project by Rui Reis and supervised by Javier Lopez Gomes and Jakob Blomer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8880
https://github.com/root-project/root/pull/8880:618,Testability,log,log,618,"Performance visualization in the RNtupleMetrics can allow the encapsulation of more complex type of metrics, which can allow the extraction of more usefull information, as oposssed to previous, simple, agreggate counter. This PR currently encapsulates 4 fully tested variants of histogram metrics and deploys it's most sophisticated variant onto the analysis of the volume of read requests when loading a page or cluster, by default. The following 4 variants are available, mainly referred to by their key usage:. - `RNTupleHistoInterval` : User-provided set of intervals.; - `RNTupleHistoCounterLog` : Histogram on a log scale.; - `RNTupleHistoActiveLearn` : Active learning phase to adjust to data distribution.; - `RNTupleFixedWidthHistogram` : Fixed width bins with constant time filling. Developed under a summer student project by Rui Reis and supervised by Javier Lopez Gomes and Jakob Blomer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8880
https://github.com/root-project/root/pull/8880:194,Usability,simpl,simple,194,"Performance visualization in the RNtupleMetrics can allow the encapsulation of more complex type of metrics, which can allow the extraction of more usefull information, as oposssed to previous, simple, agreggate counter. This PR currently encapsulates 4 fully tested variants of histogram metrics and deploys it's most sophisticated variant onto the analysis of the volume of read requests when loading a page or cluster, by default. The following 4 variants are available, mainly referred to by their key usage:. - `RNTupleHistoInterval` : User-provided set of intervals.; - `RNTupleHistoCounterLog` : Histogram on a log scale.; - `RNTupleHistoActiveLearn` : Active learning phase to adjust to data distribution.; - `RNTupleFixedWidthHistogram` : Fixed width bins with constant time filling. Developed under a summer student project by Rui Reis and supervised by Javier Lopez Gomes and Jakob Blomer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8880
https://github.com/root-project/root/pull/8880:667,Usability,learn,learning,667,"Performance visualization in the RNtupleMetrics can allow the encapsulation of more complex type of metrics, which can allow the extraction of more usefull information, as oposssed to previous, simple, agreggate counter. This PR currently encapsulates 4 fully tested variants of histogram metrics and deploys it's most sophisticated variant onto the analysis of the volume of read requests when loading a page or cluster, by default. The following 4 variants are available, mainly referred to by their key usage:. - `RNTupleHistoInterval` : User-provided set of intervals.; - `RNTupleHistoCounterLog` : Histogram on a log scale.; - `RNTupleHistoActiveLearn` : Active learning phase to adjust to data distribution.; - `RNTupleFixedWidthHistogram` : Fixed width bins with constant time filling. Developed under a summer student project by Rui Reis and supervised by Javier Lopez Gomes and Jakob Blomer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8880
https://github.com/root-project/root/pull/8881:278,Testability,test,tested,278,# This Pull request:; Added support for operators and models with multiple outputs. This PR is for the Google Summer of Code project [Inference Code Generation for Recurrent Neural Networks](https://summerofcode.withgoogle.com/projects/#5885532631990272). ## Checklist:. - [x ] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8881
https://github.com/root-project/root/pull/8882:268,Testability,test,tested,268,# This Pull request:; Development of the BatchNormalization operator for the Google Summer of Code 2021 project [Inference Code Generation for Batch Normalization](https://hepsoftwarefoundation.org/gsoc/2021/proposal_TMVAOperatorBatchnorm.html). ## Checklist:. - [ x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8882
https://github.com/root-project/root/pull/8883:164,Testability,log,logs,164,"Use chain->Add(""filename?#treename"") instead of; ""filename?query#treename"" in TTreeProcessorMT. With the latter form, '?query' is appended to the filenames in RDF; logs. Thank you for the tip Vincenzo!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8883
https://github.com/root-project/root/pull/8885:251,Integrability,Depend,Depends,251,# This Pull request:; Development of the Instance Normalization operator for the Google Summer of Code 2021 project [Inference Code Generation for Batch Normalization](https://hepsoftwarefoundation.org/gsoc/2021/proposal_TMVAOperatorBatchnorm.html).; Depends on #8882. ## Checklist:. - [ x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8885
https://github.com/root-project/root/pull/8885:291,Testability,test,tested,291,# This Pull request:; Development of the Instance Normalization operator for the Google Summer of Code 2021 project [Inference Code Generation for Batch Normalization](https://hepsoftwarefoundation.org/gsoc/2021/proposal_TMVAOperatorBatchnorm.html).; Depends on #8882. ## Checklist:. - [ x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8885
https://github.com/root-project/root/pull/8887:19,Usability,guid,guide,19,Reorganise the ref guide main page to highlight the Manual. The tutorial and course are listed in a separated paragraph. Fix for typo.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8887
https://github.com/root-project/root/issues/8890:84,Availability,error,error,84,"### Describe the bug; With both 6.24/02 and master the following snippet outputs an error:; ```cpp; #include <TWebFile.h>. int main(){; TWebFile f{""https://github.com/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root""}; ; }; ```; ```bash; $: g++ -g -o twebfile_open_github twebfile_open_github.cpp `root-config --cflags --glibs`; $: ./twebfile_open_github ; Error in <TWebFile::GetFromWeb10>: https://github.com:443/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root?: Bad Request (400); ```; The error is triggered [here](https://github.com/root-project/root/blob/5d536b29d7ce437aad79ff046788735a33fb1dbe/net/net/src/TWebFile.cxx#L866). Curiously, with 6.24 the equivalent `TFile::Open` doesn't error; ```cpp; $: root; ------------------------------------------------------------------; | Welcome to ROOT 6.24/02 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 03 2021, 08:02:00 |; | From tag , 28 June 2021 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] auto f = TFile::Open(""https://github.com/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root"");; root [1] f->GetName(); (const char *) ""https://github.com/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root""; ```. But it still errors with the latest master@59e754a; ```cpp; $: root; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 23 2021, 13:49:23 |; | From heads/master@v6-25-01-1831-g61575a3f47 |; | With c++ (GCC) 11.2.1 20210728 (Red Hat 11.2.1-1) |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] auto f = TFile::Open",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8890
https://github.com/root-project/root/issues/8890:378,Availability,Error,Error,378,"### Describe the bug; With both 6.24/02 and master the following snippet outputs an error:; ```cpp; #include <TWebFile.h>. int main(){; TWebFile f{""https://github.com/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root""}; ; }; ```; ```bash; $: g++ -g -o twebfile_open_github twebfile_open_github.cpp `root-config --cflags --glibs`; $: ./twebfile_open_github ; Error in <TWebFile::GetFromWeb10>: https://github.com:443/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root?: Bad Request (400); ```; The error is triggered [here](https://github.com/root-project/root/blob/5d536b29d7ce437aad79ff046788735a33fb1dbe/net/net/src/TWebFile.cxx#L866). Curiously, with 6.24 the equivalent `TFile::Open` doesn't error; ```cpp; $: root; ------------------------------------------------------------------; | Welcome to ROOT 6.24/02 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 03 2021, 08:02:00 |; | From tag , 28 June 2021 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] auto f = TFile::Open(""https://github.com/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root"");; root [1] f->GetName(); (const char *) ""https://github.com/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root""; ```. But it still errors with the latest master@59e754a; ```cpp; $: root; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 23 2021, 13:49:23 |; | From heads/master@v6-25-01-1831-g61575a3f47 |; | With c++ (GCC) 11.2.1 20210728 (Red Hat 11.2.1-1) |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] auto f = TFile::Open",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8890
https://github.com/root-project/root/issues/8890:536,Availability,error,error,536,"### Describe the bug; With both 6.24/02 and master the following snippet outputs an error:; ```cpp; #include <TWebFile.h>. int main(){; TWebFile f{""https://github.com/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root""}; ; }; ```; ```bash; $: g++ -g -o twebfile_open_github twebfile_open_github.cpp `root-config --cflags --glibs`; $: ./twebfile_open_github ; Error in <TWebFile::GetFromWeb10>: https://github.com:443/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root?: Bad Request (400); ```; The error is triggered [here](https://github.com/root-project/root/blob/5d536b29d7ce437aad79ff046788735a33fb1dbe/net/net/src/TWebFile.cxx#L866). Curiously, with 6.24 the equivalent `TFile::Open` doesn't error; ```cpp; $: root; ------------------------------------------------------------------; | Welcome to ROOT 6.24/02 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 03 2021, 08:02:00 |; | From tag , 28 June 2021 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] auto f = TFile::Open(""https://github.com/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root"");; root [1] f->GetName(); (const char *) ""https://github.com/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root""; ```. But it still errors with the latest master@59e754a; ```cpp; $: root; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 23 2021, 13:49:23 |; | From heads/master@v6-25-01-1831-g61575a3f47 |; | With c++ (GCC) 11.2.1 20210728 (Red Hat 11.2.1-1) |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] auto f = TFile::Open",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8890
https://github.com/root-project/root/issues/8890:735,Availability,error,error,735,"### Describe the bug; With both 6.24/02 and master the following snippet outputs an error:; ```cpp; #include <TWebFile.h>. int main(){; TWebFile f{""https://github.com/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root""}; ; }; ```; ```bash; $: g++ -g -o twebfile_open_github twebfile_open_github.cpp `root-config --cflags --glibs`; $: ./twebfile_open_github ; Error in <TWebFile::GetFromWeb10>: https://github.com:443/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root?: Bad Request (400); ```; The error is triggered [here](https://github.com/root-project/root/blob/5d536b29d7ce437aad79ff046788735a33fb1dbe/net/net/src/TWebFile.cxx#L866). Curiously, with 6.24 the equivalent `TFile::Open` doesn't error; ```cpp; $: root; ------------------------------------------------------------------; | Welcome to ROOT 6.24/02 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 03 2021, 08:02:00 |; | From tag , 28 June 2021 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] auto f = TFile::Open(""https://github.com/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root"");; root [1] f->GetName(); (const char *) ""https://github.com/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root""; ```. But it still errors with the latest master@59e754a; ```cpp; $: root; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 23 2021, 13:49:23 |; | From heads/master@v6-25-01-1831-g61575a3f47 |; | With c++ (GCC) 11.2.1 20210728 (Red Hat 11.2.1-1) |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] auto f = TFile::Open",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8890
https://github.com/root-project/root/issues/8890:1441,Availability,error,errors,1441,": Bad Request (400); ```; The error is triggered [here](https://github.com/root-project/root/blob/5d536b29d7ce437aad79ff046788735a33fb1dbe/net/net/src/TWebFile.cxx#L866). Curiously, with 6.24 the equivalent `TFile::Open` doesn't error; ```cpp; $: root; ------------------------------------------------------------------; | Welcome to ROOT 6.24/02 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 03 2021, 08:02:00 |; | From tag , 28 June 2021 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] auto f = TFile::Open(""https://github.com/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root"");; root [1] f->GetName(); (const char *) ""https://github.com/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root""; ```. But it still errors with the latest master@59e754a; ```cpp; $: root; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 23 2021, 13:49:23 |; | From heads/master@v6-25-01-1831-g61575a3f47 |; | With c++ (GCC) 11.2.1 20210728 (Red Hat 11.2.1-1) |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] auto f = TFile::Open(""https://github.com/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root"");; Error in <TWebFile::GetFromWeb10>: https://github.com:443/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root?: Bad Request (400); root [1] f; (TFile *) nullptr; ```. ### Expected behavior; File is correctly open both with `TFile::Open` and the `TWebFile` constructor. ### Setup; ROOT 6.24/02 from conda, ROOT master built from source on a fedora34 machine. ### Additional context. I have not",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8890
https://github.com/root-project/root/issues/8890:2096,Availability,Error,Error,2096,"-----------------------------------; | Welcome to ROOT 6.24/02 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 03 2021, 08:02:00 |; | From tag , 28 June 2021 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] auto f = TFile::Open(""https://github.com/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root"");; root [1] f->GetName(); (const char *) ""https://github.com/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root""; ```. But it still errors with the latest master@59e754a; ```cpp; $: root; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 23 2021, 13:49:23 |; | From heads/master@v6-25-01-1831-g61575a3f47 |; | With c++ (GCC) 11.2.1 20210728 (Red Hat 11.2.1-1) |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] auto f = TFile::Open(""https://github.com/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root"");; Error in <TWebFile::GetFromWeb10>: https://github.com:443/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root?: Bad Request (400); root [1] f; (TFile *) nullptr; ```. ### Expected behavior; File is correctly open both with `TFile::Open` and the `TWebFile` constructor. ### Setup; ROOT 6.24/02 from conda, ROOT master built from source on a fedora34 machine. ### Additional context. I have noticed in the output error the presence of an extra `?` character at the end of the string, before the `:`. Might be nothing, not sure.; `Error in <TWebFile::GetFromWeb10>: https://github.com:443/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root?: Bad Request (400)`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8890
https://github.com/root-project/root/issues/8890:2525,Availability,error,error,2525,"-----------------------------------; | Welcome to ROOT 6.24/02 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 03 2021, 08:02:00 |; | From tag , 28 June 2021 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] auto f = TFile::Open(""https://github.com/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root"");; root [1] f->GetName(); (const char *) ""https://github.com/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root""; ```. But it still errors with the latest master@59e754a; ```cpp; $: root; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 23 2021, 13:49:23 |; | From heads/master@v6-25-01-1831-g61575a3f47 |; | With c++ (GCC) 11.2.1 20210728 (Red Hat 11.2.1-1) |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] auto f = TFile::Open(""https://github.com/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root"");; Error in <TWebFile::GetFromWeb10>: https://github.com:443/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root?: Bad Request (400); root [1] f; (TFile *) nullptr; ```. ### Expected behavior; File is correctly open both with `TFile::Open` and the `TWebFile` constructor. ### Setup; ROOT 6.24/02 from conda, ROOT master built from source on a fedora34 machine. ### Additional context. I have noticed in the output error the presence of an extra `?` character at the end of the string, before the `:`. Might be nothing, not sure.; `Error in <TWebFile::GetFromWeb10>: https://github.com:443/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root?: Bad Request (400)`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8890
https://github.com/root-project/root/issues/8890:2642,Availability,Error,Error,2642,"-----------------------------------; | Welcome to ROOT 6.24/02 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 03 2021, 08:02:00 |; | From tag , 28 June 2021 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] auto f = TFile::Open(""https://github.com/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root"");; root [1] f->GetName(); (const char *) ""https://github.com/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root""; ```. But it still errors with the latest master@59e754a; ```cpp; $: root; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 23 2021, 13:49:23 |; | From heads/master@v6-25-01-1831-g61575a3f47 |; | With c++ (GCC) 11.2.1 20210728 (Red Hat 11.2.1-1) |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] auto f = TFile::Open(""https://github.com/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root"");; Error in <TWebFile::GetFromWeb10>: https://github.com:443/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root?: Bad Request (400); root [1] f; (TFile *) nullptr; ```. ### Expected behavior; File is correctly open both with `TFile::Open` and the `TWebFile` constructor. ### Setup; ROOT 6.24/02 from conda, ROOT master built from source on a fedora34 machine. ### Additional context. I have noticed in the output error the presence of an extra `?` character at the end of the string, before the `:`. Might be nothing, not sure.; `Error in <TWebFile::GetFromWeb10>: https://github.com:443/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root?: Bad Request (400)`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8890
https://github.com/root-project/root/issues/8890:324,Modifiability,config,config,324,"### Describe the bug; With both 6.24/02 and master the following snippet outputs an error:; ```cpp; #include <TWebFile.h>. int main(){; TWebFile f{""https://github.com/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root""}; ; }; ```; ```bash; $: g++ -g -o twebfile_open_github twebfile_open_github.cpp `root-config --cflags --glibs`; $: ./twebfile_open_github ; Error in <TWebFile::GetFromWeb10>: https://github.com:443/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root?: Bad Request (400); ```; The error is triggered [here](https://github.com/root-project/root/blob/5d536b29d7ce437aad79ff046788735a33fb1dbe/net/net/src/TWebFile.cxx#L866). Curiously, with 6.24 the equivalent `TFile::Open` doesn't error; ```cpp; $: root; ------------------------------------------------------------------; | Welcome to ROOT 6.24/02 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 03 2021, 08:02:00 |; | From tag , 28 June 2021 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] auto f = TFile::Open(""https://github.com/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root"");; root [1] f->GetName(); (const char *) ""https://github.com/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root""; ```. But it still errors with the latest master@59e754a; ```cpp; $: root; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 23 2021, 13:49:23 |; | From heads/master@v6-25-01-1831-g61575a3f47 |; | With c++ (GCC) 11.2.1 20210728 (Red Hat 11.2.1-1) |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] auto f = TFile::Open",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8890
https://github.com/root-project/root/issues/8892:97,Availability,failure,failures,97,"Since this change https://github.com/root-project/root/pull/8556 in the root master; We see some failures in DD4hep tests against the LCG Dev3 installation, more details in https://github.com/AIDASoft/DD4hep/pull/857#issuecomment-904434545. Our tests are passing again if patching out the `!fElements &&` from this line. https://github.com/root-project/root/blob/5d536b29d7ce437aad79ff046788735a33fb1dbe/geom/geom/src/TGeoMaterial.cxx#L803. Ping @agheata",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8892
https://github.com/root-project/root/issues/8892:441,Availability,Ping,Ping,441,"Since this change https://github.com/root-project/root/pull/8556 in the root master; We see some failures in DD4hep tests against the LCG Dev3 installation, more details in https://github.com/AIDASoft/DD4hep/pull/857#issuecomment-904434545. Our tests are passing again if patching out the `!fElements &&` from this line. https://github.com/root-project/root/blob/5d536b29d7ce437aad79ff046788735a33fb1dbe/geom/geom/src/TGeoMaterial.cxx#L803. Ping @agheata",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8892
https://github.com/root-project/root/issues/8892:143,Deployability,install,installation,143,"Since this change https://github.com/root-project/root/pull/8556 in the root master; We see some failures in DD4hep tests against the LCG Dev3 installation, more details in https://github.com/AIDASoft/DD4hep/pull/857#issuecomment-904434545. Our tests are passing again if patching out the `!fElements &&` from this line. https://github.com/root-project/root/blob/5d536b29d7ce437aad79ff046788735a33fb1dbe/geom/geom/src/TGeoMaterial.cxx#L803. Ping @agheata",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8892
https://github.com/root-project/root/issues/8892:272,Deployability,patch,patching,272,"Since this change https://github.com/root-project/root/pull/8556 in the root master; We see some failures in DD4hep tests against the LCG Dev3 installation, more details in https://github.com/AIDASoft/DD4hep/pull/857#issuecomment-904434545. Our tests are passing again if patching out the `!fElements &&` from this line. https://github.com/root-project/root/blob/5d536b29d7ce437aad79ff046788735a33fb1dbe/geom/geom/src/TGeoMaterial.cxx#L803. Ping @agheata",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8892
https://github.com/root-project/root/issues/8892:116,Testability,test,tests,116,"Since this change https://github.com/root-project/root/pull/8556 in the root master; We see some failures in DD4hep tests against the LCG Dev3 installation, more details in https://github.com/AIDASoft/DD4hep/pull/857#issuecomment-904434545. Our tests are passing again if patching out the `!fElements &&` from this line. https://github.com/root-project/root/blob/5d536b29d7ce437aad79ff046788735a33fb1dbe/geom/geom/src/TGeoMaterial.cxx#L803. Ping @agheata",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8892
https://github.com/root-project/root/issues/8892:245,Testability,test,tests,245,"Since this change https://github.com/root-project/root/pull/8556 in the root master; We see some failures in DD4hep tests against the LCG Dev3 installation, more details in https://github.com/AIDASoft/DD4hep/pull/857#issuecomment-904434545. Our tests are passing again if patching out the `!fElements &&` from this line. https://github.com/root-project/root/blob/5d536b29d7ce437aad79ff046788735a33fb1dbe/geom/geom/src/TGeoMaterial.cxx#L803. Ping @agheata",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8892
https://github.com/root-project/root/pull/8894:0,Deployability,Update,Update,0,"Update documentation of `TChain::Add(const char* name, Long64_t nentries ` :; * show correct way to add a file with a sub tree name using the ""?#treename"" syntax; * Provide better separation of contents, highlighting different sections according to the description of the various behaviours with respect to the input parameters; * Modernize a bit the code example to loop over the files in the chain",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8894
https://github.com/root-project/root/issues/8895:117,Availability,failure,failure,117,I tried to rebuild epel8 testing version of root and it failed one test case (three times so this is not just random failure). 150/1107 Test #109: gtest-io-io-test-RIoUring ...........................................***Failed 0.58 sec; Running main() from gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix. Looks like this test is not proper. No problem with previous versions so this is new failure.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8895
https://github.com/root-project/root/issues/8895:431,Availability,failure,failure,431,I tried to rebuild epel8 testing version of root and it failed one test case (three times so this is not just random failure). 150/1107 Test #109: gtest-io-io-test-RIoUring ...........................................***Failed 0.58 sec; Running main() from gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix. Looks like this test is not proper. No problem with previous versions so this is new failure.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8895
https://github.com/root-project/root/issues/8895:25,Testability,test,testing,25,I tried to rebuild epel8 testing version of root and it failed one test case (three times so this is not just random failure). 150/1107 Test #109: gtest-io-io-test-RIoUring ...........................................***Failed 0.58 sec; Running main() from gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix. Looks like this test is not proper. No problem with previous versions so this is new failure.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8895
https://github.com/root-project/root/issues/8895:67,Testability,test,test,67,I tried to rebuild epel8 testing version of root and it failed one test case (three times so this is not just random failure). 150/1107 Test #109: gtest-io-io-test-RIoUring ...........................................***Failed 0.58 sec; Running main() from gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix. Looks like this test is not proper. No problem with previous versions so this is new failure.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8895
https://github.com/root-project/root/issues/8895:136,Testability,Test,Test,136,I tried to rebuild epel8 testing version of root and it failed one test case (three times so this is not just random failure). 150/1107 Test #109: gtest-io-io-test-RIoUring ...........................................***Failed 0.58 sec; Running main() from gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix. Looks like this test is not proper. No problem with previous versions so this is new failure.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8895
https://github.com/root-project/root/issues/8895:159,Testability,test,test-RIoUring,159,I tried to rebuild epel8 testing version of root and it failed one test case (three times so this is not just random failure). 150/1107 Test #109: gtest-io-io-test-RIoUring ...........................................***Failed 0.58 sec; Running main() from gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix. Looks like this test is not proper. No problem with previous versions so this is new failure.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8895
https://github.com/root-project/root/issues/8895:284,Testability,Test,Test,284,I tried to rebuild epel8 testing version of root and it failed one test case (three times so this is not just random failure). 150/1107 Test #109: gtest-io-io-test-RIoUring ...........................................***Failed 0.58 sec; Running main() from gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix. Looks like this test is not proper. No problem with previous versions so this is new failure.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8895
https://github.com/root-project/root/issues/8895:362,Testability,test,test,362,I tried to rebuild epel8 testing version of root and it failed one test case (three times so this is not just random failure). 150/1107 Test #109: gtest-io-io-test-RIoUring ...........................................***Failed 0.58 sec; Running main() from gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix. Looks like this test is not proper. No problem with previous versions so this is new failure.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8895
https://github.com/root-project/root/pull/8896:129,Testability,test,tested,129,This Pull request modifies `tmva/sofie/CMakeLists.txt` by adding `ROperator_Conv.hxx` in the INCLUDE files. ## Checklist:; - [x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8896
https://github.com/root-project/root/pull/8897:73,Deployability,upgrade,upgrades,73,"# This Pull request:. Adds the version 1 binary format specification and upgrades the implementation from version 0 to version 1. This is a backwards incompatible change. As of version 1, RNTuple is supposed to stay backwards compatible. The new binary format is a precondition for, among other things, the following required features; - Support for incremental loading of meta-data for very large files (>100G); - Sharded clusters, needed for backfilling; - Forward-compatibility; - Meta-data support. Compared to the v0 format, the header is ~40% smaller and the footer ~100% smaller (after zstd compression). This PR sets the pre-release tag 1 in the binary format, so files written in this version trigger a warning on reading. The pre-release tag might increase in follow-up PRs. Once stable, the pre-release tag will be set to 0. Other follow-up PRs:; - Use v1 serialization in DAOS backend; - Remove v0 serialization code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8897
https://github.com/root-project/root/pull/8897:633,Deployability,release,release,633,"# This Pull request:. Adds the version 1 binary format specification and upgrades the implementation from version 0 to version 1. This is a backwards incompatible change. As of version 1, RNTuple is supposed to stay backwards compatible. The new binary format is a precondition for, among other things, the following required features; - Support for incremental loading of meta-data for very large files (>100G); - Sharded clusters, needed for backfilling; - Forward-compatibility; - Meta-data support. Compared to the v0 format, the header is ~40% smaller and the footer ~100% smaller (after zstd compression). This PR sets the pre-release tag 1 in the binary format, so files written in this version trigger a warning on reading. The pre-release tag might increase in follow-up PRs. Once stable, the pre-release tag will be set to 0. Other follow-up PRs:; - Use v1 serialization in DAOS backend; - Remove v0 serialization code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8897
https://github.com/root-project/root/pull/8897:740,Deployability,release,release,740,"# This Pull request:. Adds the version 1 binary format specification and upgrades the implementation from version 0 to version 1. This is a backwards incompatible change. As of version 1, RNTuple is supposed to stay backwards compatible. The new binary format is a precondition for, among other things, the following required features; - Support for incremental loading of meta-data for very large files (>100G); - Sharded clusters, needed for backfilling; - Forward-compatibility; - Meta-data support. Compared to the v0 format, the header is ~40% smaller and the footer ~100% smaller (after zstd compression). This PR sets the pre-release tag 1 in the binary format, so files written in this version trigger a warning on reading. The pre-release tag might increase in follow-up PRs. Once stable, the pre-release tag will be set to 0. Other follow-up PRs:; - Use v1 serialization in DAOS backend; - Remove v0 serialization code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8897
https://github.com/root-project/root/pull/8897:806,Deployability,release,release,806,"# This Pull request:. Adds the version 1 binary format specification and upgrades the implementation from version 0 to version 1. This is a backwards incompatible change. As of version 1, RNTuple is supposed to stay backwards compatible. The new binary format is a precondition for, among other things, the following required features; - Support for incremental loading of meta-data for very large files (>100G); - Sharded clusters, needed for backfilling; - Forward-compatibility; - Meta-data support. Compared to the v0 format, the header is ~40% smaller and the footer ~100% smaller (after zstd compression). This PR sets the pre-release tag 1 in the binary format, so files written in this version trigger a warning on reading. The pre-release tag might increase in follow-up PRs. Once stable, the pre-release tag will be set to 0. Other follow-up PRs:; - Use v1 serialization in DAOS backend; - Remove v0 serialization code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8897
https://github.com/root-project/root/pull/8897:362,Performance,load,loading,362,"# This Pull request:. Adds the version 1 binary format specification and upgrades the implementation from version 0 to version 1. This is a backwards incompatible change. As of version 1, RNTuple is supposed to stay backwards compatible. The new binary format is a precondition for, among other things, the following required features; - Support for incremental loading of meta-data for very large files (>100G); - Sharded clusters, needed for backfilling; - Forward-compatibility; - Meta-data support. Compared to the v0 format, the header is ~40% smaller and the footer ~100% smaller (after zstd compression). This PR sets the pre-release tag 1 in the binary format, so files written in this version trigger a warning on reading. The pre-release tag might increase in follow-up PRs. Once stable, the pre-release tag will be set to 0. Other follow-up PRs:; - Use v1 serialization in DAOS backend; - Remove v0 serialization code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8897
https://github.com/root-project/root/issues/8899:194,Integrability,depend,depends,194,"- [X] Checked for duplicates. ### Describe the bug; `valgrind ... --suppressions=etc/valgrind-root.supp tree/dataframe/test/dataframe_concurrency` gives. ```; ==30221== Conditional jump or move depends on uninitialised value(s); ==30221== at 0x9D14829: (anonymous namespace)::DAGCombiner::visitOR(llvm::SDNode*) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x9D4BF24: (anonymous namespace)::DAGCombiner::visit(llvm::SDNode*) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x9D4D13E: (anonymous namespace)::DAGCombiner::combine(llvm::SDNode*) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x9D4EA0D: llvm::SelectionDAG::Combine(llvm::CombineLevel, llvm::AAResults*, llvm::CodeGenOpt::Level) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x9E2B521: llvm::SelectionDAGISel::CodeGenAndEmitDAG() (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x9E2F293: llvm::SelectionDAGISel::SelectAllBasicBlocks(llvm::Function const&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x9E3214B: llvm::SelectionDAGISel::runOnMachineFunction(llvm::MachineFunction&) [clone .part.0] (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x98D5399: (anonymous namespace)::X86DAGToDAGISel::runOnMachineFunction(llvm::MachineFunction&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x9FE37CA: llvm::MachineFunctionPass::runOnFunction(llvm::Function&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0xB1BAA47: llvm::FPPassManager::runOnFunction(llvm::Function&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0xB1BAAD0: llvm::FPPassManager::runOnModule(llvm::Module&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0xB1B9A9F: llvm::legacy::PassManagerImpl::run(llvm::Module&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x965F899: llvm::orc::SimpleCompiler::operator()(llvm::Module&) (in /home/axel/build/root/24/rel/lib/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8899
https://github.com/root-project/root/issues/8899:119,Testability,test,test,119,"- [X] Checked for duplicates. ### Describe the bug; `valgrind ... --suppressions=etc/valgrind-root.supp tree/dataframe/test/dataframe_concurrency` gives. ```; ==30221== Conditional jump or move depends on uninitialised value(s); ==30221== at 0x9D14829: (anonymous namespace)::DAGCombiner::visitOR(llvm::SDNode*) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x9D4BF24: (anonymous namespace)::DAGCombiner::visit(llvm::SDNode*) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x9D4D13E: (anonymous namespace)::DAGCombiner::combine(llvm::SDNode*) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x9D4EA0D: llvm::SelectionDAG::Combine(llvm::CombineLevel, llvm::AAResults*, llvm::CodeGenOpt::Level) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x9E2B521: llvm::SelectionDAGISel::CodeGenAndEmitDAG() (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x9E2F293: llvm::SelectionDAGISel::SelectAllBasicBlocks(llvm::Function const&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x9E3214B: llvm::SelectionDAGISel::runOnMachineFunction(llvm::MachineFunction&) [clone .part.0] (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x98D5399: (anonymous namespace)::X86DAGToDAGISel::runOnMachineFunction(llvm::MachineFunction&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x9FE37CA: llvm::MachineFunctionPass::runOnFunction(llvm::Function&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0xB1BAA47: llvm::FPPassManager::runOnFunction(llvm::Function&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0xB1BAAD0: llvm::FPPassManager::runOnModule(llvm::Module&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0xB1B9A9F: llvm::legacy::PassManagerImpl::run(llvm::Module&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x965F899: llvm::orc::SimpleCompiler::operator()(llvm::Module&) (in /home/axel/build/root/24/rel/lib/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8899
https://github.com/root-project/root/issues/8899:3897,Testability,test,test,3897,"l::RDF::InterpreterCalc(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /home/axel/build/root/24/rel/lib/libROOTDataFrame.so); ==30221== by 0x48FA766: ROOT::Detail::RDF::RLoopManager::Jit() (in /home/axel/build/root/24/rel/lib/libROOTDataFrame.so); ==30221== by 0x49030D3: ROOT::Detail::RDF::RLoopManager::Run() (in /home/axel/build/root/24/rel/lib/libROOTDataFrame.so); ==30221== by 0x153A71: SimpleParallelRDFs()::{lambda()#1}::operator()() const [clone .isra.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x153AD5: std::_Function_handler<void (unsigned int), std::vector<std::result_of<SimpleParallelRDFs()::{lambda()#1} ()>::type, std::allocator<std::result_of<SimpleParallelRDFs()::{lambda()#1} ()> > > ROOT::TThreadExecutor::MapImpl<SimpleParallelRDFs()::{lambda()#1}, void>(std::result_of, unsigned int)::{lambda(unsigned int)#1}>::_M_invoke(std::_Any_data const&, unsigned int&&) (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x4AD5362: tbb::interface9::internal::start_for<tbb::blocked_range<unsigned int>, tbb::internal::parallel_for_body<std::function<void (unsigned int)>, unsigned int>, tbb::auto_partitioner const>::execute() (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x670D544: ??? (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x670D80E: ??? (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x670AB67: ??? (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x4AD339E: tbb::interface7::internal::delegated_function<ROOT::TThreadExecutor::ParallelFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&)::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x6706ED8: tbb::interface7::internal::is",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8899
https://github.com/root-project/root/issues/8899:4367,Testability,test,test,4367,"l::RDF::InterpreterCalc(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /home/axel/build/root/24/rel/lib/libROOTDataFrame.so); ==30221== by 0x48FA766: ROOT::Detail::RDF::RLoopManager::Jit() (in /home/axel/build/root/24/rel/lib/libROOTDataFrame.so); ==30221== by 0x49030D3: ROOT::Detail::RDF::RLoopManager::Run() (in /home/axel/build/root/24/rel/lib/libROOTDataFrame.so); ==30221== by 0x153A71: SimpleParallelRDFs()::{lambda()#1}::operator()() const [clone .isra.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x153AD5: std::_Function_handler<void (unsigned int), std::vector<std::result_of<SimpleParallelRDFs()::{lambda()#1} ()>::type, std::allocator<std::result_of<SimpleParallelRDFs()::{lambda()#1} ()> > > ROOT::TThreadExecutor::MapImpl<SimpleParallelRDFs()::{lambda()#1}, void>(std::result_of, unsigned int)::{lambda(unsigned int)#1}>::_M_invoke(std::_Any_data const&, unsigned int&&) (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x4AD5362: tbb::interface9::internal::start_for<tbb::blocked_range<unsigned int>, tbb::internal::parallel_for_body<std::function<void (unsigned int)>, unsigned int>, tbb::auto_partitioner const>::execute() (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x670D544: ??? (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x670D80E: ??? (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x670AB67: ??? (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x4AD339E: tbb::interface7::internal::delegated_function<ROOT::TThreadExecutor::ParallelFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&)::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x6706ED8: tbb::interface7::internal::is",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8899
https://github.com/root-project/root/issues/8899:6114,Testability,test,test,6114,"tbb::interface7::internal::isolate_within_arena(tbb::interface7::internal::delegate_base&, long) (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x4AD30F6: tbb::interface7::internal::delegated_function<ROOT::TThreadExecutor::ParallelFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&)::{lambda()#1} const, void>::operator()() const (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x6707E65: tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x4AD4917: ROOT::TThreadExecutor::ParallelFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&) (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x153BD2: SimpleParallelRDFs() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19B770: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x189F39: testing::Test::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A3D1: testing::TestInfo::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A5DD: testing::TestSuite::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18B69C: testing::internal::UnitTestImpl::RunAllTests() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18BC07: testing::UnitTest::Run() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19C4D3: main (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== Uninitialised value was created by a s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8899
https://github.com/root-project/root/issues/8899:6171,Testability,test,testing,6171,"tbb::interface7::internal::isolate_within_arena(tbb::interface7::internal::delegate_base&, long) (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x4AD30F6: tbb::interface7::internal::delegated_function<ROOT::TThreadExecutor::ParallelFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&)::{lambda()#1} const, void>::operator()() const (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x6707E65: tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x4AD4917: ROOT::TThreadExecutor::ParallelFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&) (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x153BD2: SimpleParallelRDFs() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19B770: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x189F39: testing::Test::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A3D1: testing::TestInfo::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A5DD: testing::TestSuite::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18B69C: testing::internal::UnitTestImpl::RunAllTests() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18BC07: testing::UnitTest::Run() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19C4D3: main (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== Uninitialised value was created by a s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8899
https://github.com/root-project/root/issues/8899:6226,Testability,test,testing,6226,"tbb::interface7::internal::isolate_within_arena(tbb::interface7::internal::delegate_base&, long) (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x4AD30F6: tbb::interface7::internal::delegated_function<ROOT::TThreadExecutor::ParallelFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&)::{lambda()#1} const, void>::operator()() const (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x6707E65: tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x4AD4917: ROOT::TThreadExecutor::ParallelFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&) (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x153BD2: SimpleParallelRDFs() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19B770: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x189F39: testing::Test::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A3D1: testing::TestInfo::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A5DD: testing::TestSuite::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18B69C: testing::internal::UnitTestImpl::RunAllTests() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18BC07: testing::UnitTest::Run() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19C4D3: main (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== Uninitialised value was created by a s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8899
https://github.com/root-project/root/issues/8899:6235,Testability,Test,Test,6235,"tbb::interface7::internal::isolate_within_arena(tbb::interface7::internal::delegate_base&, long) (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x4AD30F6: tbb::interface7::internal::delegated_function<ROOT::TThreadExecutor::ParallelFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&)::{lambda()#1} const, void>::operator()() const (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x6707E65: tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x4AD4917: ROOT::TThreadExecutor::ParallelFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&) (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x153BD2: SimpleParallelRDFs() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19B770: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x189F39: testing::Test::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A3D1: testing::TestInfo::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A5DD: testing::TestSuite::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18B69C: testing::internal::UnitTestImpl::RunAllTests() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18BC07: testing::UnitTest::Run() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19C4D3: main (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== Uninitialised value was created by a s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8899
https://github.com/root-project/root/issues/8899:6247,Testability,test,testing,6247,"tbb::interface7::internal::isolate_within_arena(tbb::interface7::internal::delegate_base&, long) (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x4AD30F6: tbb::interface7::internal::delegated_function<ROOT::TThreadExecutor::ParallelFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&)::{lambda()#1} const, void>::operator()() const (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x6707E65: tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x4AD4917: ROOT::TThreadExecutor::ParallelFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&) (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x153BD2: SimpleParallelRDFs() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19B770: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x189F39: testing::Test::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A3D1: testing::TestInfo::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A5DD: testing::TestSuite::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18B69C: testing::internal::UnitTestImpl::RunAllTests() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18BC07: testing::UnitTest::Run() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19C4D3: main (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== Uninitialised value was created by a s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8899
https://github.com/root-project/root/issues/8899:6256,Testability,Test,Test,6256,"tbb::interface7::internal::isolate_within_arena(tbb::interface7::internal::delegate_base&, long) (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x4AD30F6: tbb::interface7::internal::delegated_function<ROOT::TThreadExecutor::ParallelFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&)::{lambda()#1} const, void>::operator()() const (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x6707E65: tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x4AD4917: ROOT::TThreadExecutor::ParallelFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&) (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x153BD2: SimpleParallelRDFs() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19B770: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x189F39: testing::Test::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A3D1: testing::TestInfo::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A5DD: testing::TestSuite::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18B69C: testing::internal::UnitTestImpl::RunAllTests() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18BC07: testing::UnitTest::Run() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19C4D3: main (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== Uninitialised value was created by a s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8899
https://github.com/root-project/root/issues/8899:6269,Testability,test,testing,6269,"tbb::interface7::internal::isolate_within_arena(tbb::interface7::internal::delegate_base&, long) (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x4AD30F6: tbb::interface7::internal::delegated_function<ROOT::TThreadExecutor::ParallelFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&)::{lambda()#1} const, void>::operator()() const (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x6707E65: tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x4AD4917: ROOT::TThreadExecutor::ParallelFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&) (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x153BD2: SimpleParallelRDFs() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19B770: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x189F39: testing::Test::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A3D1: testing::TestInfo::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A5DD: testing::TestSuite::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18B69C: testing::internal::UnitTestImpl::RunAllTests() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18BC07: testing::UnitTest::Run() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19C4D3: main (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== Uninitialised value was created by a s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8899
https://github.com/root-project/root/issues/8899:6278,Testability,Test,Test,6278,"tbb::interface7::internal::isolate_within_arena(tbb::interface7::internal::delegate_base&, long) (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x4AD30F6: tbb::interface7::internal::delegated_function<ROOT::TThreadExecutor::ParallelFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&)::{lambda()#1} const, void>::operator()() const (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x6707E65: tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x4AD4917: ROOT::TThreadExecutor::ParallelFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&) (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x153BD2: SimpleParallelRDFs() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19B770: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x189F39: testing::Test::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A3D1: testing::TestInfo::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A5DD: testing::TestSuite::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18B69C: testing::internal::UnitTestImpl::RunAllTests() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18BC07: testing::UnitTest::Run() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19C4D3: main (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== Uninitialised value was created by a s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8899
https://github.com/root-project/root/issues/8899:6351,Testability,test,test,6351,"tbb::interface7::internal::isolate_within_arena(tbb::interface7::internal::delegate_base&, long) (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x4AD30F6: tbb::interface7::internal::delegated_function<ROOT::TThreadExecutor::ParallelFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&)::{lambda()#1} const, void>::operator()() const (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x6707E65: tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x4AD4917: ROOT::TThreadExecutor::ParallelFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&) (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x153BD2: SimpleParallelRDFs() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19B770: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x189F39: testing::Test::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A3D1: testing::TestInfo::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A5DD: testing::TestSuite::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18B69C: testing::internal::UnitTestImpl::RunAllTests() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18BC07: testing::UnitTest::Run() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19C4D3: main (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== Uninitialised value was created by a s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8899
https://github.com/root-project/root/issues/8899:6403,Testability,test,testing,6403,"tbb::interface7::internal::isolate_within_arena(tbb::interface7::internal::delegate_base&, long) (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x4AD30F6: tbb::interface7::internal::delegated_function<ROOT::TThreadExecutor::ParallelFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&)::{lambda()#1} const, void>::operator()() const (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x6707E65: tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x4AD4917: ROOT::TThreadExecutor::ParallelFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&) (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x153BD2: SimpleParallelRDFs() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19B770: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x189F39: testing::Test::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A3D1: testing::TestInfo::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A5DD: testing::TestSuite::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18B69C: testing::internal::UnitTestImpl::RunAllTests() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18BC07: testing::UnitTest::Run() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19C4D3: main (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== Uninitialised value was created by a s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8899
https://github.com/root-project/root/issues/8899:6412,Testability,Test,Test,6412,"tbb::interface7::internal::isolate_within_arena(tbb::interface7::internal::delegate_base&, long) (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x4AD30F6: tbb::interface7::internal::delegated_function<ROOT::TThreadExecutor::ParallelFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&)::{lambda()#1} const, void>::operator()() const (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x6707E65: tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x4AD4917: ROOT::TThreadExecutor::ParallelFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&) (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x153BD2: SimpleParallelRDFs() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19B770: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x189F39: testing::Test::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A3D1: testing::TestInfo::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A5DD: testing::TestSuite::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18B69C: testing::internal::UnitTestImpl::RunAllTests() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18BC07: testing::UnitTest::Run() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19C4D3: main (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== Uninitialised value was created by a s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8899
https://github.com/root-project/root/issues/8899:6488,Testability,test,test,6488,"elFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&)::{lambda()#1} const, void>::operator()() const (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x6707E65: tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x4AD4917: ROOT::TThreadExecutor::ParallelFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&) (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x153BD2: SimpleParallelRDFs() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19B770: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x189F39: testing::Test::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A3D1: testing::TestInfo::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A5DD: testing::TestSuite::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18B69C: testing::internal::UnitTestImpl::RunAllTests() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18BC07: testing::UnitTest::Run() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19C4D3: main (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== Uninitialised value was created by a stack allocation; ==30221== at 0x9D13320: (anonymous namespace)::DAGCombiner::visitOR(llvm::SDNode*) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== . ```. ### Setup; 1. ROOT version: tip of 6-24; 2. Operating system: Mint 20.1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8899
https://github.com/root-project/root/issues/8899:6540,Testability,test,testing,6540,"elFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&)::{lambda()#1} const, void>::operator()() const (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x6707E65: tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x4AD4917: ROOT::TThreadExecutor::ParallelFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&) (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x153BD2: SimpleParallelRDFs() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19B770: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x189F39: testing::Test::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A3D1: testing::TestInfo::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A5DD: testing::TestSuite::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18B69C: testing::internal::UnitTestImpl::RunAllTests() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18BC07: testing::UnitTest::Run() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19C4D3: main (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== Uninitialised value was created by a stack allocation; ==30221== at 0x9D13320: (anonymous namespace)::DAGCombiner::visitOR(llvm::SDNode*) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== . ```. ### Setup; 1. ROOT version: tip of 6-24; 2. Operating system: Mint 20.1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8899
https://github.com/root-project/root/issues/8899:6549,Testability,Test,TestInfo,6549,"elFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&)::{lambda()#1} const, void>::operator()() const (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x6707E65: tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x4AD4917: ROOT::TThreadExecutor::ParallelFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&) (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x153BD2: SimpleParallelRDFs() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19B770: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x189F39: testing::Test::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A3D1: testing::TestInfo::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A5DD: testing::TestSuite::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18B69C: testing::internal::UnitTestImpl::RunAllTests() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18BC07: testing::UnitTest::Run() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19C4D3: main (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== Uninitialised value was created by a stack allocation; ==30221== at 0x9D13320: (anonymous namespace)::DAGCombiner::visitOR(llvm::SDNode*) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== . ```. ### Setup; 1. ROOT version: tip of 6-24; 2. Operating system: Mint 20.1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8899
https://github.com/root-project/root/issues/8899:6629,Testability,test,test,6629,"elFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&)::{lambda()#1} const, void>::operator()() const (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x6707E65: tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x4AD4917: ROOT::TThreadExecutor::ParallelFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&) (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x153BD2: SimpleParallelRDFs() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19B770: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x189F39: testing::Test::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A3D1: testing::TestInfo::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A5DD: testing::TestSuite::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18B69C: testing::internal::UnitTestImpl::RunAllTests() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18BC07: testing::UnitTest::Run() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19C4D3: main (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== Uninitialised value was created by a stack allocation; ==30221== at 0x9D13320: (anonymous namespace)::DAGCombiner::visitOR(llvm::SDNode*) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== . ```. ### Setup; 1. ROOT version: tip of 6-24; 2. Operating system: Mint 20.1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8899
https://github.com/root-project/root/issues/8899:6681,Testability,test,testing,6681,"elFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&)::{lambda()#1} const, void>::operator()() const (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x6707E65: tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x4AD4917: ROOT::TThreadExecutor::ParallelFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&) (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x153BD2: SimpleParallelRDFs() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19B770: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x189F39: testing::Test::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A3D1: testing::TestInfo::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A5DD: testing::TestSuite::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18B69C: testing::internal::UnitTestImpl::RunAllTests() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18BC07: testing::UnitTest::Run() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19C4D3: main (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== Uninitialised value was created by a stack allocation; ==30221== at 0x9D13320: (anonymous namespace)::DAGCombiner::visitOR(llvm::SDNode*) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== . ```. ### Setup; 1. ROOT version: tip of 6-24; 2. Operating system: Mint 20.1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8899
https://github.com/root-project/root/issues/8899:6690,Testability,Test,TestSuite,6690,"elFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&)::{lambda()#1} const, void>::operator()() const (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x6707E65: tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x4AD4917: ROOT::TThreadExecutor::ParallelFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&) (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x153BD2: SimpleParallelRDFs() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19B770: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x189F39: testing::Test::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A3D1: testing::TestInfo::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A5DD: testing::TestSuite::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18B69C: testing::internal::UnitTestImpl::RunAllTests() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18BC07: testing::UnitTest::Run() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19C4D3: main (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== Uninitialised value was created by a stack allocation; ==30221== at 0x9D13320: (anonymous namespace)::DAGCombiner::visitOR(llvm::SDNode*) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== . ```. ### Setup; 1. ROOT version: tip of 6-24; 2. Operating system: Mint 20.1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8899
https://github.com/root-project/root/issues/8899:6771,Testability,test,test,6771,"elFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&)::{lambda()#1} const, void>::operator()() const (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x6707E65: tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x4AD4917: ROOT::TThreadExecutor::ParallelFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&) (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x153BD2: SimpleParallelRDFs() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19B770: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x189F39: testing::Test::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A3D1: testing::TestInfo::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A5DD: testing::TestSuite::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18B69C: testing::internal::UnitTestImpl::RunAllTests() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18BC07: testing::UnitTest::Run() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19C4D3: main (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== Uninitialised value was created by a stack allocation; ==30221== at 0x9D13320: (anonymous namespace)::DAGCombiner::visitOR(llvm::SDNode*) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== . ```. ### Setup; 1. ROOT version: tip of 6-24; 2. Operating system: Mint 20.1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8899
https://github.com/root-project/root/issues/8899:6823,Testability,test,testing,6823,"elFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&)::{lambda()#1} const, void>::operator()() const (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x6707E65: tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x4AD4917: ROOT::TThreadExecutor::ParallelFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&) (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x153BD2: SimpleParallelRDFs() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19B770: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x189F39: testing::Test::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A3D1: testing::TestInfo::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A5DD: testing::TestSuite::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18B69C: testing::internal::UnitTestImpl::RunAllTests() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18BC07: testing::UnitTest::Run() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19C4D3: main (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== Uninitialised value was created by a stack allocation; ==30221== at 0x9D13320: (anonymous namespace)::DAGCombiner::visitOR(llvm::SDNode*) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== . ```. ### Setup; 1. ROOT version: tip of 6-24; 2. Operating system: Mint 20.1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8899
https://github.com/root-project/root/issues/8899:6918,Testability,test,test,6918,"elFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&)::{lambda()#1} const, void>::operator()() const (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x6707E65: tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x4AD4917: ROOT::TThreadExecutor::ParallelFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&) (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x153BD2: SimpleParallelRDFs() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19B770: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x189F39: testing::Test::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A3D1: testing::TestInfo::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A5DD: testing::TestSuite::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18B69C: testing::internal::UnitTestImpl::RunAllTests() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18BC07: testing::UnitTest::Run() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19C4D3: main (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== Uninitialised value was created by a stack allocation; ==30221== at 0x9D13320: (anonymous namespace)::DAGCombiner::visitOR(llvm::SDNode*) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== . ```. ### Setup; 1. ROOT version: tip of 6-24; 2. Operating system: Mint 20.1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8899
https://github.com/root-project/root/issues/8899:6970,Testability,test,testing,6970,"elFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&)::{lambda()#1} const, void>::operator()() const (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x6707E65: tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x4AD4917: ROOT::TThreadExecutor::ParallelFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&) (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x153BD2: SimpleParallelRDFs() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19B770: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x189F39: testing::Test::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A3D1: testing::TestInfo::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A5DD: testing::TestSuite::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18B69C: testing::internal::UnitTestImpl::RunAllTests() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18BC07: testing::UnitTest::Run() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19C4D3: main (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== Uninitialised value was created by a stack allocation; ==30221== at 0x9D13320: (anonymous namespace)::DAGCombiner::visitOR(llvm::SDNode*) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== . ```. ### Setup; 1. ROOT version: tip of 6-24; 2. Operating system: Mint 20.1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8899
https://github.com/root-project/root/issues/8899:7043,Testability,test,test,7043,"elFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&)::{lambda()#1} const, void>::operator()() const (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x6707E65: tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x4AD4917: ROOT::TThreadExecutor::ParallelFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&) (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x153BD2: SimpleParallelRDFs() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19B770: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x189F39: testing::Test::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A3D1: testing::TestInfo::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A5DD: testing::TestSuite::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18B69C: testing::internal::UnitTestImpl::RunAllTests() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18BC07: testing::UnitTest::Run() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19C4D3: main (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== Uninitialised value was created by a stack allocation; ==30221== at 0x9D13320: (anonymous namespace)::DAGCombiner::visitOR(llvm::SDNode*) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== . ```. ### Setup; 1. ROOT version: tip of 6-24; 2. Operating system: Mint 20.1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8899
https://github.com/root-project/root/issues/8899:7148,Testability,test,test,7148,"elFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&)::{lambda()#1} const, void>::operator()() const (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x6707E65: tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x4AD4917: ROOT::TThreadExecutor::ParallelFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&) (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x153BD2: SimpleParallelRDFs() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19B770: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x189F39: testing::Test::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A3D1: testing::TestInfo::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A5DD: testing::TestSuite::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18B69C: testing::internal::UnitTestImpl::RunAllTests() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18BC07: testing::UnitTest::Run() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19C4D3: main (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== Uninitialised value was created by a stack allocation; ==30221== at 0x9D13320: (anonymous namespace)::DAGCombiner::visitOR(llvm::SDNode*) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== . ```. ### Setup; 1. ROOT version: tip of 6-24; 2. Operating system: Mint 20.1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8899
https://github.com/root-project/root/issues/8899:1920,Usability,Simpl,SimpleCompiler,1920,"SelectionDAGISel::SelectAllBasicBlocks(llvm::Function const&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x9E3214B: llvm::SelectionDAGISel::runOnMachineFunction(llvm::MachineFunction&) [clone .part.0] (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x98D5399: (anonymous namespace)::X86DAGToDAGISel::runOnMachineFunction(llvm::MachineFunction&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x9FE37CA: llvm::MachineFunctionPass::runOnFunction(llvm::Function&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0xB1BAA47: llvm::FPPassManager::runOnFunction(llvm::Function&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0xB1BAAD0: llvm::FPPassManager::runOnModule(llvm::Module&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0xB1B9A9F: llvm::legacy::PassManagerImpl::run(llvm::Module&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x965F899: llvm::orc::SimpleCompiler::operator()(llvm::Module&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x84B1E3A: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x84A2F16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x8441754: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x844457C: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<cha",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8899
https://github.com/root-project/root/issues/8899:2218,Usability,Simpl,SimpleCompiler,2218,"namespace)::X86DAGToDAGISel::runOnMachineFunction(llvm::MachineFunction&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x9FE37CA: llvm::MachineFunctionPass::runOnFunction(llvm::Function&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0xB1BAA47: llvm::FPPassManager::runOnFunction(llvm::Function&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0xB1BAAD0: llvm::FPPassManager::runOnModule(llvm::Module&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0xB1B9A9F: llvm::legacy::PassManagerImpl::run(llvm::Module&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x965F899: llvm::orc::SimpleCompiler::operator()(llvm::Module&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x84B1E3A: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x84A2F16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x8441754: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x844457C: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x8349A5F: TCling::Calc(char const*, TInterpreter::EErrorCode*) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x48F1A4D: ROOT::Internal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8899
https://github.com/root-project/root/issues/8899:2384,Usability,Simpl,SimpleCompiler,2384,"namespace)::X86DAGToDAGISel::runOnMachineFunction(llvm::MachineFunction&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x9FE37CA: llvm::MachineFunctionPass::runOnFunction(llvm::Function&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0xB1BAA47: llvm::FPPassManager::runOnFunction(llvm::Function&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0xB1BAAD0: llvm::FPPassManager::runOnModule(llvm::Module&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0xB1B9A9F: llvm::legacy::PassManagerImpl::run(llvm::Module&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x965F899: llvm::orc::SimpleCompiler::operator()(llvm::Module&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x84B1E3A: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x84A2F16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x8441754: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x844457C: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x8349A5F: TCling::Calc(char const*, TInterpreter::EErrorCode*) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x48F1A4D: ROOT::Internal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8899
https://github.com/root-project/root/issues/8899:3778,Usability,Simpl,SimpleParallelRDFs,3778,"ibCling.so); ==30221== by 0x844457C: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x8349A5F: TCling::Calc(char const*, TInterpreter::EErrorCode*) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x48F1A4D: ROOT::Internal::RDF::InterpreterCalc(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /home/axel/build/root/24/rel/lib/libROOTDataFrame.so); ==30221== by 0x48FA766: ROOT::Detail::RDF::RLoopManager::Jit() (in /home/axel/build/root/24/rel/lib/libROOTDataFrame.so); ==30221== by 0x49030D3: ROOT::Detail::RDF::RLoopManager::Run() (in /home/axel/build/root/24/rel/lib/libROOTDataFrame.so); ==30221== by 0x153A71: SimpleParallelRDFs()::{lambda()#1}::operator()() const [clone .isra.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x153AD5: std::_Function_handler<void (unsigned int), std::vector<std::result_of<SimpleParallelRDFs()::{lambda()#1} ()>::type, std::allocator<std::result_of<SimpleParallelRDFs()::{lambda()#1} ()> > > ROOT::TThreadExecutor::MapImpl<SimpleParallelRDFs()::{lambda()#1}, void>(std::result_of, unsigned int)::{lambda(unsigned int)#1}>::_M_invoke(std::_Any_data const&, unsigned int&&) (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x4AD5362: tbb::interface9::internal::start_for<tbb::blocked_range<unsigned int>, tbb::internal::parallel_for_body<std::function<void (unsigned int)>, unsigned int>, tbb::auto_partitioner const>::execute() (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x670D544: ??? (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x670D80E: ??? (in /usr/lib/x86_64-linux-gnu/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8899
https://github.com/root-project/root/issues/8899:4020,Usability,Simpl,SimpleParallelRDFs,4020,"l::RDF::InterpreterCalc(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /home/axel/build/root/24/rel/lib/libROOTDataFrame.so); ==30221== by 0x48FA766: ROOT::Detail::RDF::RLoopManager::Jit() (in /home/axel/build/root/24/rel/lib/libROOTDataFrame.so); ==30221== by 0x49030D3: ROOT::Detail::RDF::RLoopManager::Run() (in /home/axel/build/root/24/rel/lib/libROOTDataFrame.so); ==30221== by 0x153A71: SimpleParallelRDFs()::{lambda()#1}::operator()() const [clone .isra.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x153AD5: std::_Function_handler<void (unsigned int), std::vector<std::result_of<SimpleParallelRDFs()::{lambda()#1} ()>::type, std::allocator<std::result_of<SimpleParallelRDFs()::{lambda()#1} ()> > > ROOT::TThreadExecutor::MapImpl<SimpleParallelRDFs()::{lambda()#1}, void>(std::result_of, unsigned int)::{lambda(unsigned int)#1}>::_M_invoke(std::_Any_data const&, unsigned int&&) (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x4AD5362: tbb::interface9::internal::start_for<tbb::blocked_range<unsigned int>, tbb::internal::parallel_for_body<std::function<void (unsigned int)>, unsigned int>, tbb::auto_partitioner const>::execute() (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x670D544: ??? (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x670D80E: ??? (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x670AB67: ??? (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x4AD339E: tbb::interface7::internal::delegated_function<ROOT::TThreadExecutor::ParallelFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&)::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x6706ED8: tbb::interface7::internal::is",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8899
https://github.com/root-project/root/issues/8899:4096,Usability,Simpl,SimpleParallelRDFs,4096,"l::RDF::InterpreterCalc(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /home/axel/build/root/24/rel/lib/libROOTDataFrame.so); ==30221== by 0x48FA766: ROOT::Detail::RDF::RLoopManager::Jit() (in /home/axel/build/root/24/rel/lib/libROOTDataFrame.so); ==30221== by 0x49030D3: ROOT::Detail::RDF::RLoopManager::Run() (in /home/axel/build/root/24/rel/lib/libROOTDataFrame.so); ==30221== by 0x153A71: SimpleParallelRDFs()::{lambda()#1}::operator()() const [clone .isra.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x153AD5: std::_Function_handler<void (unsigned int), std::vector<std::result_of<SimpleParallelRDFs()::{lambda()#1} ()>::type, std::allocator<std::result_of<SimpleParallelRDFs()::{lambda()#1} ()> > > ROOT::TThreadExecutor::MapImpl<SimpleParallelRDFs()::{lambda()#1}, void>(std::result_of, unsigned int)::{lambda(unsigned int)#1}>::_M_invoke(std::_Any_data const&, unsigned int&&) (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x4AD5362: tbb::interface9::internal::start_for<tbb::blocked_range<unsigned int>, tbb::internal::parallel_for_body<std::function<void (unsigned int)>, unsigned int>, tbb::auto_partitioner const>::execute() (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x670D544: ??? (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x670D80E: ??? (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x670AB67: ??? (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x4AD339E: tbb::interface7::internal::delegated_function<ROOT::TThreadExecutor::ParallelFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&)::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x6706ED8: tbb::interface7::internal::is",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8899
https://github.com/root-project/root/issues/8899:4170,Usability,Simpl,SimpleParallelRDFs,4170,"l::RDF::InterpreterCalc(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /home/axel/build/root/24/rel/lib/libROOTDataFrame.so); ==30221== by 0x48FA766: ROOT::Detail::RDF::RLoopManager::Jit() (in /home/axel/build/root/24/rel/lib/libROOTDataFrame.so); ==30221== by 0x49030D3: ROOT::Detail::RDF::RLoopManager::Run() (in /home/axel/build/root/24/rel/lib/libROOTDataFrame.so); ==30221== by 0x153A71: SimpleParallelRDFs()::{lambda()#1}::operator()() const [clone .isra.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x153AD5: std::_Function_handler<void (unsigned int), std::vector<std::result_of<SimpleParallelRDFs()::{lambda()#1} ()>::type, std::allocator<std::result_of<SimpleParallelRDFs()::{lambda()#1} ()> > > ROOT::TThreadExecutor::MapImpl<SimpleParallelRDFs()::{lambda()#1}, void>(std::result_of, unsigned int)::{lambda(unsigned int)#1}>::_M_invoke(std::_Any_data const&, unsigned int&&) (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x4AD5362: tbb::interface9::internal::start_for<tbb::blocked_range<unsigned int>, tbb::internal::parallel_for_body<std::function<void (unsigned int)>, unsigned int>, tbb::auto_partitioner const>::execute() (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x670D544: ??? (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x670D80E: ??? (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x670AB67: ??? (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x4AD339E: tbb::interface7::internal::delegated_function<ROOT::TThreadExecutor::ParallelFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&)::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x6706ED8: tbb::interface7::internal::is",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8899
https://github.com/root-project/root/issues/8899:6045,Usability,Simpl,SimpleParallelRDFs,6045,"tbb::interface7::internal::isolate_within_arena(tbb::interface7::internal::delegate_base&, long) (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x4AD30F6: tbb::interface7::internal::delegated_function<ROOT::TThreadExecutor::ParallelFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&)::{lambda()#1} const, void>::operator()() const (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x6707E65: tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x4AD4917: ROOT::TThreadExecutor::ParallelFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&) (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x153BD2: SimpleParallelRDFs() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19B770: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x189F39: testing::Test::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A3D1: testing::TestInfo::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A5DD: testing::TestSuite::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18B69C: testing::internal::UnitTestImpl::RunAllTests() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18BC07: testing::UnitTest::Run() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19C4D3: main (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== Uninitialised value was created by a s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8899
https://github.com/root-project/root/pull/8900:378,Deployability,update,updated,378,"# This Pull request:; Fix to TGeoMaterial::AddElement to allow to add elements/materials/mixtures with weight zero; ## Changes or fixes:; Allow to add elements/materials/mixtures with weight zero. ; If weight is negative issue Fatal .; If weight is smaller than numeric_limits<Double_t>::epsilon(), ignore additional elements. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8892",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8900
https://github.com/root-project/root/pull/8900:348,Testability,test,tested,348,"# This Pull request:; Fix to TGeoMaterial::AddElement to allow to add elements/materials/mixtures with weight zero; ## Changes or fixes:; Allow to add elements/materials/mixtures with weight zero. ; If weight is negative issue Fatal .; If weight is smaller than numeric_limits<Double_t>::epsilon(), ignore additional elements. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8892",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8900
https://github.com/root-project/root/issues/8901:70,Availability,error,error,70,"RFieldBase::Create(""fieldname"", ""classame"") in ROOT 6.24.0 returns an error when the class contains an anonymous enum. ; To reproduce execute a ROOT macro EmumTest.C containing:; ```; class ContainsEnum { public: enum { EnumField1, EnumField2 }; }; ; void EnumTest() { ; try { auto field = ROOT::Experimental::Detail::RFieldBase::Create(""HasEnum"", ""ContainsEnum"").Unwrap(); ; } catch(const std::exception& exc) { ; std::cout << ""ERROR: "" << exc.what() << std::endl; ; } ; }; ``` ; ```root [0] ; Processing EnumTest.C...; ERROR: Field EnumField1 has unknown type ContainsEnum::(anonymous) (unchecked RResult access!); At:; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/tree/ntuple/v7/src/RField.cxx:225]; ```; Marcin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8901
https://github.com/root-project/root/issues/8901:429,Availability,ERROR,ERROR,429,"RFieldBase::Create(""fieldname"", ""classame"") in ROOT 6.24.0 returns an error when the class contains an anonymous enum. ; To reproduce execute a ROOT macro EmumTest.C containing:; ```; class ContainsEnum { public: enum { EnumField1, EnumField2 }; }; ; void EnumTest() { ; try { auto field = ROOT::Experimental::Detail::RFieldBase::Create(""HasEnum"", ""ContainsEnum"").Unwrap(); ; } catch(const std::exception& exc) { ; std::cout << ""ERROR: "" << exc.what() << std::endl; ; } ; }; ``` ; ```root [0] ; Processing EnumTest.C...; ERROR: Field EnumField1 has unknown type ContainsEnum::(anonymous) (unchecked RResult access!); At:; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/tree/ntuple/v7/src/RField.cxx:225]; ```; Marcin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8901
https://github.com/root-project/root/issues/8901:521,Availability,ERROR,ERROR,521,"RFieldBase::Create(""fieldname"", ""classame"") in ROOT 6.24.0 returns an error when the class contains an anonymous enum. ; To reproduce execute a ROOT macro EmumTest.C containing:; ```; class ContainsEnum { public: enum { EnumField1, EnumField2 }; }; ; void EnumTest() { ; try { auto field = ROOT::Experimental::Detail::RFieldBase::Create(""HasEnum"", ""ContainsEnum"").Unwrap(); ; } catch(const std::exception& exc) { ; std::cout << ""ERROR: "" << exc.what() << std::endl; ; } ; }; ``` ; ```root [0] ; Processing EnumTest.C...; ERROR: Field EnumField1 has unknown type ContainsEnum::(anonymous) (unchecked RResult access!); At:; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/tree/ntuple/v7/src/RField.cxx:225]; ```; Marcin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8901
https://github.com/root-project/root/issues/8901:607,Security,access,access,607,"RFieldBase::Create(""fieldname"", ""classame"") in ROOT 6.24.0 returns an error when the class contains an anonymous enum. ; To reproduce execute a ROOT macro EmumTest.C containing:; ```; class ContainsEnum { public: enum { EnumField1, EnumField2 }; }; ; void EnumTest() { ; try { auto field = ROOT::Experimental::Detail::RFieldBase::Create(""HasEnum"", ""ContainsEnum"").Unwrap(); ; } catch(const std::exception& exc) { ; std::cout << ""ERROR: "" << exc.what() << std::endl; ; } ; }; ``` ; ```root [0] ; Processing EnumTest.C...; ERROR: Field EnumField1 has unknown type ContainsEnum::(anonymous) (unchecked RResult access!); At:; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/tree/ntuple/v7/src/RField.cxx:225]; ```; Marcin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8901
https://github.com/root-project/root/issues/8902:566,Availability,error,error,566,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. I my project I use ROOT from LCG nightlies build dev3 slot; And for my tests (with ctest and nose) I get an error:. ``` ; Traceback (most recent call last):; File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>; import ROOT, os, glob ; File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>; module = importlib.import_module(pyz.__name__ + '.' + module_name); File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module; return _bootstrap._gcd_import(name[level:], package, level); File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>; from ._roocategory import RooCategory; File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18; """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries.; ^; SyntaxError: invalid escape sequence \c; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:2187,Availability,down,download,2187,"r"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. I my project I use ROOT from LCG nightlies build dev3 slot; And for my tests (with ctest and nose) I get an error:. ``` ; Traceback (most recent call last):; File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>; import ROOT, os, glob ; File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>; module = importlib.import_module(pyz.__name__ + '.' + module_name); File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module; return _bootstrap._gcd_import(name[level:], package, level); File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>; from ._roocategory import RooCategory; File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18; """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries.; ^; SyntaxError: invalid escape sequence \c; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT version from LCG nightlies dev3 slot . ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:659,Deployability,RELEASE,RELEASE,659,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. I my project I use ROOT from LCG nightlies build dev3 slot; And for my tests (with ctest and nose) I get an error:. ``` ; Traceback (most recent call last):; File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>; import ROOT, os, glob ; File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>; module = importlib.import_module(pyz.__name__ + '.' + module_name); File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module; return _bootstrap._gcd_import(name[level:], package, level); File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>; from ._roocategory import RooCategory; File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18; """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries.; ^; SyntaxError: invalid escape sequence \c; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:679,Deployability,INSTALL,INSTALL,679,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. I my project I use ROOT from LCG nightlies build dev3 slot; And for my tests (with ctest and nose) I get an error:. ``` ; Traceback (most recent call last):; File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>; import ROOT, os, glob ; File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>; module = importlib.import_module(pyz.__name__ + '.' + module_name); File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module; return _bootstrap._gcd_import(name[level:], package, level); File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>; from ._roocategory import RooCategory; File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18; """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries.; ^; SyntaxError: invalid escape sequence \c; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:2169,Deployability,install,install,2169,"r"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. I my project I use ROOT from LCG nightlies build dev3 slot; And for my tests (with ctest and nose) I get an error:. ``` ; Traceback (most recent call last):; File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>; import ROOT, os, glob ; File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>; module = importlib.import_module(pyz.__name__ + '.' + module_name); File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module; return _bootstrap._gcd_import(name[level:], package, level); File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>; from ._roocategory import RooCategory; File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18; """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries.; ^; SyntaxError: invalid escape sequence \c; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT version from LCG nightlies dev3 slot . ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:529,Testability,test,tests,529,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. I my project I use ROOT from LCG nightlies build dev3 slot; And for my tests (with ctest and nose) I get an error:. ``` ; Traceback (most recent call last):; File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>; import ROOT, os, glob ; File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>; module = importlib.import_module(pyz.__name__ + '.' + module_name); File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module; return _bootstrap._gcd_import(name[level:], package, level); File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>; from ._roocategory import RooCategory; File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18; """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries.; ^; SyntaxError: invalid escape sequence \c; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:391,Usability,clear,clear,391,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. I my project I use ROOT from LCG nightlies build dev3 slot; And for my tests (with ctest and nose) I get an error:. ``` ; Traceback (most recent call last):; File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>; import ROOT, os, glob ; File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>; module = importlib.import_module(pyz.__name__ + '.' + module_name); File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module; return _bootstrap._gcd_import(name[level:], package, level); File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>; from ._roocategory import RooCategory; File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18; """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries.; ^; SyntaxError: invalid escape sequence \c; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:1724,Usability,clear,clear,1724,"r"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. I my project I use ROOT from LCG nightlies build dev3 slot; And for my tests (with ctest and nose) I get an error:. ``` ; Traceback (most recent call last):; File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>; import ROOT, os, glob ; File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>; module = importlib.import_module(pyz.__name__ + '.' + module_name); File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module; return _bootstrap._gcd_import(name[level:], package, level); File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>; from ._roocategory import RooCategory; File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18; """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries.; ^; SyntaxError: invalid escape sequence \c; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT version from LCG nightlies dev3 slot . ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/pull/8903:398,Deployability,update,updated,398,"# This Pull request:. ## Changes or fixes:; Add the `zero` parameter for `ROOT::VecOps::Sum()` and ROOT::VecOps::Mean()`` functions.; Used as `ROOT::VecOps::Sum(v, ROOT::Math::PtEtaPhiEVector())`; If applied, users will be able to get the sum of non-numeric `RVec`s easily. This is my first PR here. Please tell me if there is something I missed. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary). <!-- This PR fixes # -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8903
https://github.com/root-project/root/pull/8903:368,Testability,test,tested,368,"# This Pull request:. ## Changes or fixes:; Add the `zero` parameter for `ROOT::VecOps::Sum()` and ROOT::VecOps::Mean()`` functions.; Used as `ROOT::VecOps::Sum(v, ROOT::Math::PtEtaPhiEVector())`; If applied, users will be able to get the sum of non-numeric `RVec`s easily. This is my first PR here. Please tell me if there is something I missed. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary). <!-- This PR fixes # -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8903
https://github.com/root-project/root/issues/8904:370,Availability,error,error,370,"### Describe the bug; I have root installed from EPEL8-testing, version 6.24.02.; I also have installed a package called perl-Unicode-Map, which provides a file /usr/bin/map.; When TInterpreter::AutoParse finds ; ```; #include <map> ; ```; in my headers it tries to parse /usr/bin/map. ```; In file included from /usr/include/zevis/ZStyleScheme.h:12:; /usr/bin/map:1:2: error: invalid preprocessing directive; #!/usr/bin/perl -w; ^; /usr/bin/map:2:2: error: invalid preprocessing directive; #$Id: map,v 1.20 1998/02/11 23:58:27 schwartz Exp $; ```. ### Expected behavior; /usr/bin/map is not parsed. ### To Reproduce; Eh, not sure if I can provide a short reproducer immediately. ### Setup; 1. ROOT 6.24.02 from EPEL8 testing; 2. CentSO8 Stream; 3. `dnf install` / binary download / you built it yourself. Best regards,. Andrii",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8904
https://github.com/root-project/root/issues/8904:451,Availability,error,error,451,"### Describe the bug; I have root installed from EPEL8-testing, version 6.24.02.; I also have installed a package called perl-Unicode-Map, which provides a file /usr/bin/map.; When TInterpreter::AutoParse finds ; ```; #include <map> ; ```; in my headers it tries to parse /usr/bin/map. ```; In file included from /usr/include/zevis/ZStyleScheme.h:12:; /usr/bin/map:1:2: error: invalid preprocessing directive; #!/usr/bin/perl -w; ^; /usr/bin/map:2:2: error: invalid preprocessing directive; #$Id: map,v 1.20 1998/02/11 23:58:27 schwartz Exp $; ```. ### Expected behavior; /usr/bin/map is not parsed. ### To Reproduce; Eh, not sure if I can provide a short reproducer immediately. ### Setup; 1. ROOT 6.24.02 from EPEL8 testing; 2. CentSO8 Stream; 3. `dnf install` / binary download / you built it yourself. Best regards,. Andrii",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8904
https://github.com/root-project/root/issues/8904:772,Availability,down,download,772,"### Describe the bug; I have root installed from EPEL8-testing, version 6.24.02.; I also have installed a package called perl-Unicode-Map, which provides a file /usr/bin/map.; When TInterpreter::AutoParse finds ; ```; #include <map> ; ```; in my headers it tries to parse /usr/bin/map. ```; In file included from /usr/include/zevis/ZStyleScheme.h:12:; /usr/bin/map:1:2: error: invalid preprocessing directive; #!/usr/bin/perl -w; ^; /usr/bin/map:2:2: error: invalid preprocessing directive; #$Id: map,v 1.20 1998/02/11 23:58:27 schwartz Exp $; ```. ### Expected behavior; /usr/bin/map is not parsed. ### To Reproduce; Eh, not sure if I can provide a short reproducer immediately. ### Setup; 1. ROOT 6.24.02 from EPEL8 testing; 2. CentSO8 Stream; 3. `dnf install` / binary download / you built it yourself. Best regards,. Andrii",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8904
https://github.com/root-project/root/issues/8904:34,Deployability,install,installed,34,"### Describe the bug; I have root installed from EPEL8-testing, version 6.24.02.; I also have installed a package called perl-Unicode-Map, which provides a file /usr/bin/map.; When TInterpreter::AutoParse finds ; ```; #include <map> ; ```; in my headers it tries to parse /usr/bin/map. ```; In file included from /usr/include/zevis/ZStyleScheme.h:12:; /usr/bin/map:1:2: error: invalid preprocessing directive; #!/usr/bin/perl -w; ^; /usr/bin/map:2:2: error: invalid preprocessing directive; #$Id: map,v 1.20 1998/02/11 23:58:27 schwartz Exp $; ```. ### Expected behavior; /usr/bin/map is not parsed. ### To Reproduce; Eh, not sure if I can provide a short reproducer immediately. ### Setup; 1. ROOT 6.24.02 from EPEL8 testing; 2. CentSO8 Stream; 3. `dnf install` / binary download / you built it yourself. Best regards,. Andrii",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8904
https://github.com/root-project/root/issues/8904:94,Deployability,install,installed,94,"### Describe the bug; I have root installed from EPEL8-testing, version 6.24.02.; I also have installed a package called perl-Unicode-Map, which provides a file /usr/bin/map.; When TInterpreter::AutoParse finds ; ```; #include <map> ; ```; in my headers it tries to parse /usr/bin/map. ```; In file included from /usr/include/zevis/ZStyleScheme.h:12:; /usr/bin/map:1:2: error: invalid preprocessing directive; #!/usr/bin/perl -w; ^; /usr/bin/map:2:2: error: invalid preprocessing directive; #$Id: map,v 1.20 1998/02/11 23:58:27 schwartz Exp $; ```. ### Expected behavior; /usr/bin/map is not parsed. ### To Reproduce; Eh, not sure if I can provide a short reproducer immediately. ### Setup; 1. ROOT 6.24.02 from EPEL8 testing; 2. CentSO8 Stream; 3. `dnf install` / binary download / you built it yourself. Best regards,. Andrii",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8904
https://github.com/root-project/root/issues/8904:754,Deployability,install,install,754,"### Describe the bug; I have root installed from EPEL8-testing, version 6.24.02.; I also have installed a package called perl-Unicode-Map, which provides a file /usr/bin/map.; When TInterpreter::AutoParse finds ; ```; #include <map> ; ```; in my headers it tries to parse /usr/bin/map. ```; In file included from /usr/include/zevis/ZStyleScheme.h:12:; /usr/bin/map:1:2: error: invalid preprocessing directive; #!/usr/bin/perl -w; ^; /usr/bin/map:2:2: error: invalid preprocessing directive; #$Id: map,v 1.20 1998/02/11 23:58:27 schwartz Exp $; ```. ### Expected behavior; /usr/bin/map is not parsed. ### To Reproduce; Eh, not sure if I can provide a short reproducer immediately. ### Setup; 1. ROOT 6.24.02 from EPEL8 testing; 2. CentSO8 Stream; 3. `dnf install` / binary download / you built it yourself. Best regards,. Andrii",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8904
https://github.com/root-project/root/issues/8904:55,Testability,test,testing,55,"### Describe the bug; I have root installed from EPEL8-testing, version 6.24.02.; I also have installed a package called perl-Unicode-Map, which provides a file /usr/bin/map.; When TInterpreter::AutoParse finds ; ```; #include <map> ; ```; in my headers it tries to parse /usr/bin/map. ```; In file included from /usr/include/zevis/ZStyleScheme.h:12:; /usr/bin/map:1:2: error: invalid preprocessing directive; #!/usr/bin/perl -w; ^; /usr/bin/map:2:2: error: invalid preprocessing directive; #$Id: map,v 1.20 1998/02/11 23:58:27 schwartz Exp $; ```. ### Expected behavior; /usr/bin/map is not parsed. ### To Reproduce; Eh, not sure if I can provide a short reproducer immediately. ### Setup; 1. ROOT 6.24.02 from EPEL8 testing; 2. CentSO8 Stream; 3. `dnf install` / binary download / you built it yourself. Best regards,. Andrii",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8904
https://github.com/root-project/root/issues/8904:718,Testability,test,testing,718,"### Describe the bug; I have root installed from EPEL8-testing, version 6.24.02.; I also have installed a package called perl-Unicode-Map, which provides a file /usr/bin/map.; When TInterpreter::AutoParse finds ; ```; #include <map> ; ```; in my headers it tries to parse /usr/bin/map. ```; In file included from /usr/include/zevis/ZStyleScheme.h:12:; /usr/bin/map:1:2: error: invalid preprocessing directive; #!/usr/bin/perl -w; ^; /usr/bin/map:2:2: error: invalid preprocessing directive; #$Id: map,v 1.20 1998/02/11 23:58:27 schwartz Exp $; ```. ### Expected behavior; /usr/bin/map is not parsed. ### To Reproduce; Eh, not sure if I can provide a short reproducer immediately. ### Setup; 1. ROOT 6.24.02 from EPEL8 testing; 2. CentSO8 Stream; 3. `dnf install` / binary download / you built it yourself. Best regards,. Andrii",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8904
https://github.com/root-project/root/issues/8905:25,Testability,log,logs,25,"According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved; The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8905
https://github.com/root-project/root/issues/8905:35,Testability,test,test,35,"According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved; The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8905
https://github.com/root-project/root/issues/8905:133,Testability,test,tests,133,"According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved; The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8905
https://github.com/root-project/root/issues/8906:25,Testability,log,logs,25,"According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved; The tests should be implemented in CMake rather than calling `make cleantest`. After that their corectness can be verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8906
https://github.com/root-project/root/issues/8906:35,Testability,test,test,35,"According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved; The tests should be implemented in CMake rather than calling `make cleantest`. After that their corectness can be verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8906
https://github.com/root-project/root/issues/8906:133,Testability,test,tests,133,"According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved; The tests should be implemented in CMake rather than calling `make cleantest`. After that their corectness can be verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8906
https://github.com/root-project/root/issues/8907:25,Testability,log,logs,25,"According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved; The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8907
https://github.com/root-project/root/issues/8907:35,Testability,test,test,35,"According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved; The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8907
https://github.com/root-project/root/issues/8907:133,Testability,test,tests,133,"According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved; The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8907
https://github.com/root-project/root/issues/8908:25,Testability,log,logs,25,"According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved; The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8908
https://github.com/root-project/root/issues/8908:35,Testability,test,test,35,"According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved; The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8908
https://github.com/root-project/root/issues/8908:133,Testability,test,tests,133,"According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved; The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8908
https://github.com/root-project/root/issues/8909:104,Integrability,depend,dependency,104,"According to the console logs the tests did not execute successfully, probably because of a badly setup dependency on libEvent. ### How it could be improved; Tests should be remade using CMake with a proper Event generation library and then tested for correctness against libasan.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8909
https://github.com/root-project/root/issues/8909:25,Testability,log,logs,25,"According to the console logs the tests did not execute successfully, probably because of a badly setup dependency on libEvent. ### How it could be improved; Tests should be remade using CMake with a proper Event generation library and then tested for correctness against libasan.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8909
https://github.com/root-project/root/issues/8909:34,Testability,test,tests,34,"According to the console logs the tests did not execute successfully, probably because of a badly setup dependency on libEvent. ### How it could be improved; Tests should be remade using CMake with a proper Event generation library and then tested for correctness against libasan.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8909
https://github.com/root-project/root/issues/8909:158,Testability,Test,Tests,158,"According to the console logs the tests did not execute successfully, probably because of a badly setup dependency on libEvent. ### How it could be improved; Tests should be remade using CMake with a proper Event generation library and then tested for correctness against libasan.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8909
https://github.com/root-project/root/issues/8909:241,Testability,test,tested,241,"According to the console logs the tests did not execute successfully, probably because of a badly setup dependency on libEvent. ### How it could be improved; Tests should be remade using CMake with a proper Event generation library and then tested for correctness against libasan.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8909
https://github.com/root-project/root/issues/8910:25,Testability,log,logs,25,"According to the console logs, the test crashed on execute due to bad linkage to asan functions. . Also, perf contains a lot of old tests than seemingly never got run. There is a discussion about this ongoing at https://github.com/root-project/roottest/pull/732 ; any idea @bellenot @pcanal ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8910
https://github.com/root-project/root/issues/8910:35,Testability,test,test,35,"According to the console logs, the test crashed on execute due to bad linkage to asan functions. . Also, perf contains a lot of old tests than seemingly never got run. There is a discussion about this ongoing at https://github.com/root-project/roottest/pull/732 ; any idea @bellenot @pcanal ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8910
https://github.com/root-project/root/issues/8910:132,Testability,test,tests,132,"According to the console logs, the test crashed on execute due to bad linkage to asan functions. . Also, perf contains a lot of old tests than seemingly never got run. There is a discussion about this ongoing at https://github.com/root-project/roottest/pull/732 ; any idea @bellenot @pcanal ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8910
https://github.com/root-project/root/issues/8911:25,Testability,log,logs,25,"According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved; The tests should be implemented in CMake then have their corectness verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8911
https://github.com/root-project/root/issues/8911:35,Testability,test,test,35,"According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved; The tests should be implemented in CMake then have their corectness verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8911
https://github.com/root-project/root/issues/8911:133,Testability,test,tests,133,"According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved; The tests should be implemented in CMake then have their corectness verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8911
https://github.com/root-project/root/issues/8912:25,Testability,log,logs,25,"According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved; The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8912
https://github.com/root-project/root/issues/8912:35,Testability,test,test,35,"According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved; The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8912
https://github.com/root-project/root/issues/8912:133,Testability,test,tests,133,"According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved; The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8912
https://github.com/root-project/root/issues/8913:25,Testability,log,logs,25,"According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved; The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8913
https://github.com/root-project/root/issues/8913:35,Testability,test,test,35,"According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved; The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8913
https://github.com/root-project/root/issues/8913:133,Testability,test,tests,133,"According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved; The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8913
https://github.com/root-project/root/issues/8914:25,Testability,log,logs,25,"According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved; The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8914
https://github.com/root-project/root/issues/8914:35,Testability,test,test,35,"According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved; The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8914
https://github.com/root-project/root/issues/8914:133,Testability,test,tests,133,"According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved; The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8914
https://github.com/root-project/root/issues/8915:25,Testability,log,logs,25,"According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved; The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8915
https://github.com/root-project/root/issues/8915:35,Testability,test,test,35,"According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved; The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8915
https://github.com/root-project/root/issues/8915:133,Testability,test,tests,133,"According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved; The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8915
https://github.com/root-project/root/issues/8916:25,Testability,log,logs,25,"According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved; The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8916
https://github.com/root-project/root/issues/8916:35,Testability,test,test,35,"According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved; The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8916
https://github.com/root-project/root/issues/8916:133,Testability,test,tests,133,"According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved; The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8916
https://github.com/root-project/root/issues/8917:54,Availability,failure,failure,54,"According to the console logs, this looks like a real failure. . `AddressSanitizer: heap-buffer-overflow`. libAsan seems to have detected a real error in the code. ### How it could be improved; The tests should be translated into CMake code and then the error(s) should be adressed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8917
https://github.com/root-project/root/issues/8917:145,Availability,error,error,145,"According to the console logs, this looks like a real failure. . `AddressSanitizer: heap-buffer-overflow`. libAsan seems to have detected a real error in the code. ### How it could be improved; The tests should be translated into CMake code and then the error(s) should be adressed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8917
https://github.com/root-project/root/issues/8917:254,Availability,error,error,254,"According to the console logs, this looks like a real failure. . `AddressSanitizer: heap-buffer-overflow`. libAsan seems to have detected a real error in the code. ### How it could be improved; The tests should be translated into CMake code and then the error(s) should be adressed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8917
https://github.com/root-project/root/issues/8917:129,Safety,detect,detected,129,"According to the console logs, this looks like a real failure. . `AddressSanitizer: heap-buffer-overflow`. libAsan seems to have detected a real error in the code. ### How it could be improved; The tests should be translated into CMake code and then the error(s) should be adressed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8917
https://github.com/root-project/root/issues/8917:25,Testability,log,logs,25,"According to the console logs, this looks like a real failure. . `AddressSanitizer: heap-buffer-overflow`. libAsan seems to have detected a real error in the code. ### How it could be improved; The tests should be translated into CMake code and then the error(s) should be adressed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8917
https://github.com/root-project/root/issues/8917:198,Testability,test,tests,198,"According to the console logs, this looks like a real failure. . `AddressSanitizer: heap-buffer-overflow`. libAsan seems to have detected a real error in the code. ### How it could be improved; The tests should be translated into CMake code and then the error(s) should be adressed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8917
https://github.com/root-project/root/issues/8918:25,Testability,log,logs,25,"According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved; The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8918
https://github.com/root-project/root/issues/8918:35,Testability,test,test,35,"According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved; The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8918
https://github.com/root-project/root/issues/8918:133,Testability,test,tests,133,"According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved; The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8918
https://github.com/root-project/root/issues/8919:25,Testability,log,logs,25,"According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved; The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8919
https://github.com/root-project/root/issues/8919:35,Testability,test,test,35,"According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved; The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8919
https://github.com/root-project/root/issues/8919:133,Testability,test,tests,133,"According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved; The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8919
https://github.com/root-project/root/issues/8920:25,Testability,log,logs,25,"According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved; The large number of tests present should be translated to CMake and then their correctness tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8920
https://github.com/root-project/root/issues/8920:35,Testability,test,test,35,"According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved; The large number of tests present should be translated to CMake and then their correctness tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8920
https://github.com/root-project/root/issues/8920:149,Testability,test,tests,149,"According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved; The large number of tests present should be translated to CMake and then their correctness tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8920
https://github.com/root-project/root/issues/8920:220,Testability,test,tested,220,"According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved; The large number of tests present should be translated to CMake and then their correctness tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8920
https://github.com/root-project/root/issues/8921:104,Availability,error,errors,104,"According to the console logs the tests did not execute successfully, partly because of dynamic linking errors with libAsan. . Moreover, a lot of these tests seem to be old and abandonned due to the deprecation of `cint`. Any suggestions about what to do next? @bellenot @pcanal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8921
https://github.com/root-project/root/issues/8921:25,Testability,log,logs,25,"According to the console logs the tests did not execute successfully, partly because of dynamic linking errors with libAsan. . Moreover, a lot of these tests seem to be old and abandonned due to the deprecation of `cint`. Any suggestions about what to do next? @bellenot @pcanal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8921
https://github.com/root-project/root/issues/8921:34,Testability,test,tests,34,"According to the console logs the tests did not execute successfully, partly because of dynamic linking errors with libAsan. . Moreover, a lot of these tests seem to be old and abandonned due to the deprecation of `cint`. Any suggestions about what to do next? @bellenot @pcanal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8921
https://github.com/root-project/root/issues/8921:152,Testability,test,tests,152,"According to the console logs the tests did not execute successfully, partly because of dynamic linking errors with libAsan. . Moreover, a lot of these tests seem to be old and abandonned due to the deprecation of `cint`. Any suggestions about what to do next? @bellenot @pcanal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8921
https://github.com/root-project/root/issues/8922:54,Availability,failure,failure,54,"According to the console logs, this looks like a real failure. However the tests should first be translated into CMake so that they work with ASAN enabled and then tested for corectness.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8922
https://github.com/root-project/root/issues/8922:25,Testability,log,logs,25,"According to the console logs, this looks like a real failure. However the tests should first be translated into CMake so that they work with ASAN enabled and then tested for corectness.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8922
https://github.com/root-project/root/issues/8922:75,Testability,test,tests,75,"According to the console logs, this looks like a real failure. However the tests should first be translated into CMake so that they work with ASAN enabled and then tested for corectness.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8922
https://github.com/root-project/root/issues/8922:164,Testability,test,tested,164,"According to the console logs, this looks like a real failure. However the tests should first be translated into CMake so that they work with ASAN enabled and then tested for corectness.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8922
https://github.com/root-project/root/issues/8923:70,Integrability,depend,dependency,70,### Explain what you would like to see improved; Allow to use root as dependency using `FetchContent`. ### To Reproduce; ```cmake; cmake_minimum_required(VERSION 3.16). project(Test). include(FetchContent). FetchContent_Declare(; root; GIT_REPOSITORY https://github.com/root-project/root.git; GIT_TAG latest-stable; ). FetchContent_MakeAvailable(root); ```; ### Setup; ROOT version : latest-stable; Operating system : Linux; How you obtained ROOT : github,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8923
https://github.com/root-project/root/issues/8923:177,Testability,Test,Test,177,### Explain what you would like to see improved; Allow to use root as dependency using `FetchContent`. ### To Reproduce; ```cmake; cmake_minimum_required(VERSION 3.16). project(Test). include(FetchContent). FetchContent_Declare(; root; GIT_REPOSITORY https://github.com/root-project/root.git; GIT_TAG latest-stable; ). FetchContent_MakeAvailable(root); ```; ### Setup; ROOT version : latest-stable; Operating system : Linux; How you obtained ROOT : github,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8923
https://github.com/root-project/root/pull/8924:107,Performance,optimiz,optimization,107,"As we cannot even know whether the other TDirectory has been deleted in the meantime, we have to; skip the optimization of erasing globalptr from the list of the oldvalue. This is expected to fix MT crashes observed by Alice.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8924
https://github.com/root-project/root/pull/8927:1421,Modifiability,extend,extended,1421,"Hi! I am trying to start making some contributions to get experience. I tried converting the first file in C++, below:; ```c++; #include ""RooRealVar.h""; #include ""RooGaussian.h""; #include ""RooChebychev.h""; #include ""RooAddPdf.h""; #include ""RooExtendPdf.h""; #include ""RooArgSet.h""; #include ""RooLinkedList.h""; #include ""RooDataSet.h""; #include ""RooFitResult.h"". void rf204_extrangefit(); {; RooRealVar x = RooRealVar(""x"", ""x"", 0, 10);; RooRealVar mean = RooRealVar(""mean"", ""mean of gaussians"", 5);; RooRealVar sigma1 = RooRealVar(""sigma1"", ""width of gaussians"", 0.5);; RooRealVar sigma2 = RooRealVar(""sigma2"", ""width of gaussians"", 1);; RooGaussian sig1 = RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1);; RooGaussian sig2 = RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2);; RooRealVar a0 = RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0);; RooRealVar a1 = RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0);; RooChebychev bkg = RooChebychev(""bkg"", ""Background"", x, {a0, a1});; RooRealVar sig1frac = RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0);; RooAddPdf sig = RooAddPdf(""sig"", ""Signal"", {sig1, sig2}, {sig1frac});; x.setRange(""signalRange"", 4, 6);; RooRealVar nsig = RooRealVar(""nsig"", ""number of signal events in signalRange"", 500, 0.0, 10000);; RooRealVar nbkg = RooRealVar(""nbkg"", ""number of background events in signalRange"", 500, 0, 10000);; RooExtendPdf esig = RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig, ""signalRange"");; RooExtendPdf ebkg = RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg, ""signalRange"");; RooAddPdf model = RooAddPdf(""model"", ""(g1+g2)+a"", {ebkg, esig});; RooDataSet* data = model.generate(RooArgSet(x), 1000);; //auto r = model.fitTo(*data,RooLinkedList());; RooFitResult* r = model.fitTo(*data,{""Extended(true)""},{""Save(true)""});; //some reason this isn't working...; //r->Print();; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8927
https://github.com/root-project/root/pull/8927:1513,Modifiability,extend,extended,1513,"Hi! I am trying to start making some contributions to get experience. I tried converting the first file in C++, below:; ```c++; #include ""RooRealVar.h""; #include ""RooGaussian.h""; #include ""RooChebychev.h""; #include ""RooAddPdf.h""; #include ""RooExtendPdf.h""; #include ""RooArgSet.h""; #include ""RooLinkedList.h""; #include ""RooDataSet.h""; #include ""RooFitResult.h"". void rf204_extrangefit(); {; RooRealVar x = RooRealVar(""x"", ""x"", 0, 10);; RooRealVar mean = RooRealVar(""mean"", ""mean of gaussians"", 5);; RooRealVar sigma1 = RooRealVar(""sigma1"", ""width of gaussians"", 0.5);; RooRealVar sigma2 = RooRealVar(""sigma2"", ""width of gaussians"", 1);; RooGaussian sig1 = RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1);; RooGaussian sig2 = RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2);; RooRealVar a0 = RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0);; RooRealVar a1 = RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0);; RooChebychev bkg = RooChebychev(""bkg"", ""Background"", x, {a0, a1});; RooRealVar sig1frac = RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0);; RooAddPdf sig = RooAddPdf(""sig"", ""Signal"", {sig1, sig2}, {sig1frac});; x.setRange(""signalRange"", 4, 6);; RooRealVar nsig = RooRealVar(""nsig"", ""number of signal events in signalRange"", 500, 0.0, 10000);; RooRealVar nbkg = RooRealVar(""nbkg"", ""number of background events in signalRange"", 500, 0, 10000);; RooExtendPdf esig = RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig, ""signalRange"");; RooExtendPdf ebkg = RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg, ""signalRange"");; RooAddPdf model = RooAddPdf(""model"", ""(g1+g2)+a"", {ebkg, esig});; RooDataSet* data = model.generate(RooArgSet(x), 1000);; //auto r = model.fitTo(*data,RooLinkedList());; RooFitResult* r = model.fitTo(*data,{""Extended(true)""},{""Save(true)""});; //some reason this isn't working...; //r->Print();; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8927
https://github.com/root-project/root/pull/8927:1775,Modifiability,Extend,Extended,1775,"Hi! I am trying to start making some contributions to get experience. I tried converting the first file in C++, below:; ```c++; #include ""RooRealVar.h""; #include ""RooGaussian.h""; #include ""RooChebychev.h""; #include ""RooAddPdf.h""; #include ""RooExtendPdf.h""; #include ""RooArgSet.h""; #include ""RooLinkedList.h""; #include ""RooDataSet.h""; #include ""RooFitResult.h"". void rf204_extrangefit(); {; RooRealVar x = RooRealVar(""x"", ""x"", 0, 10);; RooRealVar mean = RooRealVar(""mean"", ""mean of gaussians"", 5);; RooRealVar sigma1 = RooRealVar(""sigma1"", ""width of gaussians"", 0.5);; RooRealVar sigma2 = RooRealVar(""sigma2"", ""width of gaussians"", 1);; RooGaussian sig1 = RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1);; RooGaussian sig2 = RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2);; RooRealVar a0 = RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0);; RooRealVar a1 = RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0);; RooChebychev bkg = RooChebychev(""bkg"", ""Background"", x, {a0, a1});; RooRealVar sig1frac = RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0);; RooAddPdf sig = RooAddPdf(""sig"", ""Signal"", {sig1, sig2}, {sig1frac});; x.setRange(""signalRange"", 4, 6);; RooRealVar nsig = RooRealVar(""nsig"", ""number of signal events in signalRange"", 500, 0.0, 10000);; RooRealVar nbkg = RooRealVar(""nbkg"", ""number of background events in signalRange"", 500, 0, 10000);; RooExtendPdf esig = RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig, ""signalRange"");; RooExtendPdf ebkg = RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg, ""signalRange"");; RooAddPdf model = RooAddPdf(""model"", ""(g1+g2)+a"", {ebkg, esig});; RooDataSet* data = model.generate(RooArgSet(x), 1000);; //auto r = model.fitTo(*data,RooLinkedList());; RooFitResult* r = model.fitTo(*data,{""Extended(true)""},{""Save(true)""});; //some reason this isn't working...; //r->Print();; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8927
https://github.com/root-project/root/pull/8928:95,Deployability,update,updated,95,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8928
https://github.com/root-project/root/pull/8928:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8928
https://github.com/root-project/root/pull/8929:391,Deployability,update,updated,391,"As we cannot even know whether the other TDirectory has been deleted in the meantime, we have to; skip the optimization of erasing globalptr from the list of the oldvalue. This is expected to fix MT crashes observed by Alice. (cherry picked from commit 79a669bb1cd0ccd8bcaeb6c8f6b09c5ced761ac7). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8929
https://github.com/root-project/root/pull/8929:107,Performance,optimiz,optimization,107,"As we cannot even know whether the other TDirectory has been deleted in the meantime, we have to; skip the optimization of erasing globalptr from the list of the oldvalue. This is expected to fix MT crashes observed by Alice. (cherry picked from commit 79a669bb1cd0ccd8bcaeb6c8f6b09c5ced761ac7). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8929
https://github.com/root-project/root/pull/8929:361,Testability,test,tested,361,"As we cannot even know whether the other TDirectory has been deleted in the meantime, we have to; skip the optimization of erasing globalptr from the list of the oldvalue. This is expected to fix MT crashes observed by Alice. (cherry picked from commit 79a669bb1cd0ccd8bcaeb6c8f6b09c5ced761ac7). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8929
https://github.com/root-project/root/pull/8930:37,Integrability,depend,depend,37,"The core part of tmva/sofie does not depend on protobuffer and it is used in pymva to parse a model from Keras to Tmva::Sofie format. ; It is now always built as tmva, while only sofie_parser is built when protobuf is found.; This PR fixes the problem seed when building pymva when protobuf is not found",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8930
https://github.com/root-project/root/issues/8931:18404,Modifiability,plugin,plugins,18404,", __atime=<synthetic pointer>..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232; #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141; #4 std::condition_variable::wait_for<long, std::ratio<1l, 1000l> > (__rtime=..., __rtime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:172; #5 fair::mq::StateQueue::WaitForNext<long, std::ratio<1l, 1000l> > (this=this; entry=0x162dd90, duration=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateQueue.h:50; #6 0x00007ff44b30d4ff in fair::mq::plugins::Control::StaticMode (this=0x162dcd0) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/plugins/control/Control.cxx:376; #7 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x162e800) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80; #8 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0; #9 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 1 (Thread 0x7ff4457b40c0 (LWP 25309) ""o2-sim-hit-merg""):; #0 0x00007ff4467ce4b9 in waitpid () from /lib64/libc.so.6; #1 0x00007ff44674bf62 in do_system () from /lib64/libc.so.6; #2 0x00007ff44674c311 in system () from /lib64/libc.so.6; #3 0x00007ff447d2a60c in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120; #4 TUnixSystem::StackTrace (this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411; #5 0x00007ff447d27c15 in TUnixS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:18526,Modifiability,plugin,plugins,18526,"/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232; #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141; #4 std::condition_variable::wait_for<long, std::ratio<1l, 1000l> > (__rtime=..., __rtime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:172; #5 fair::mq::StateQueue::WaitForNext<long, std::ratio<1l, 1000l> > (this=this; entry=0x162dd90, duration=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateQueue.h:50; #6 0x00007ff44b30d4ff in fair::mq::plugins::Control::StaticMode (this=0x162dcd0) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/plugins/control/Control.cxx:376; #7 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x162e800) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80; #8 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0; #9 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 1 (Thread 0x7ff4457b40c0 (LWP 25309) ""o2-sim-hit-merg""):; #0 0x00007ff4467ce4b9 in waitpid () from /lib64/libc.so.6; #1 0x00007ff44674bf62 in do_system () from /lib64/libc.so.6; #2 0x00007ff44674c311 in system () from /lib64/libc.so.6; #3 0x00007ff447d2a60c in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120; #4 TUnixSystem::StackTrace (this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411; #5 0x00007ff447d27c15 in TUnixSystem::DispatchSignals (this=0x13db430, sig=kSigSegmentationViolation) at /home/aliperf/aliperf_wo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:930,Performance,optimiz,optimized,930,"ALICE has reported regular crashes due to MT unsafe access in `TDirectory::RegisterGDirectory`. Example backtrace:. ```. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================. Thread 6 (Thread 0x7ff42998d700 (LWP 56550) ""o2-sim-hit-merg""):; #0 0x00007ff44b42eef6 in longest_match () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1; #1 0x00007ff44b42fd58 in deflate_fast () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1; #2 0x00007ff44b430822 in deflate () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1; #3 0x00007ff447cbe8a5 in R__zipZLIB (irep=0x7ff4299869a8, tgt=0x7ff3c94c924f ""ZL\b\177\272"", tgtsize=0x7ff4299869ac, src=0x7ff4299868c0 ""\177"", srcsize=0x7ff4299869ac, cxlevel=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/zip/src/RZip.cxx:213; #4 R__zipMultipleAlgorithm (compressionAlgorithm=<optimized out>, irep=0x7ff4299869a8, tgt=0x7ff3c94c924f ""ZL\b\177\272"", tgtsize=0x7ff4299869ac, src=0x7ff4299868c0 ""\177"", srcsize=0x7ff4299869ac, cxlevel=32756) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/zip/src/RZip.cxx:109; #5 R__zipMultipleAlgorithm (cxlevel=cxlevel; entry=1, srcsize=srcsize; entry=0x7ff4299869ac, src=src; entry=0x7ff3d000007f ""\300Ro\211\300=\200I\300>\277\341\300D'\254\300F\343\016\300Ix\232\300K\333^\300M\340!\300O\255T\300P\320\344\300Q\254\250\300<\225B\300S,g\300S\313\061\300Tf\250\300TӾ\300U.\b\300U\027\\\300T}d\300S\200\344\300R\220\234\300QT}\300D\241\221\300V\a\360\300U\246\060\300S; \300\300QV\026\300OE\345\300M\020\314\300J\365\f\300I(D\300G\250X\300FE6\300P\r\376\300B\240\300\300; zV\300>\225\324\300=\036\206\300<8t\300;\252d\300;v\376\300;\210w\300;\336J\300HǬ\300\071\322+\300:\205\232\300;\231H\300<\367\a\300=\350\252\300?"", <inco",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:1092,Performance,optimiz,optimized,1092," was a crash.; This is the entire stack trace of all threads:; ===========================================================. Thread 6 (Thread 0x7ff42998d700 (LWP 56550) ""o2-sim-hit-merg""):; #0 0x00007ff44b42eef6 in longest_match () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1; #1 0x00007ff44b42fd58 in deflate_fast () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1; #2 0x00007ff44b430822 in deflate () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1; #3 0x00007ff447cbe8a5 in R__zipZLIB (irep=0x7ff4299869a8, tgt=0x7ff3c94c924f ""ZL\b\177\272"", tgtsize=0x7ff4299869ac, src=0x7ff4299868c0 ""\177"", srcsize=0x7ff4299869ac, cxlevel=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/zip/src/RZip.cxx:213; #4 R__zipMultipleAlgorithm (compressionAlgorithm=<optimized out>, irep=0x7ff4299869a8, tgt=0x7ff3c94c924f ""ZL\b\177\272"", tgtsize=0x7ff4299869ac, src=0x7ff4299868c0 ""\177"", srcsize=0x7ff4299869ac, cxlevel=32756) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/zip/src/RZip.cxx:109; #5 R__zipMultipleAlgorithm (cxlevel=cxlevel; entry=1, srcsize=srcsize; entry=0x7ff4299869ac, src=src; entry=0x7ff3d000007f ""\300Ro\211\300=\200I\300>\277\341\300D'\254\300F\343\016\300Ix\232\300K\333^\300M\340!\300O\255T\300P\320\344\300Q\254\250\300<\225B\300S,g\300S\313\061\300Tf\250\300TӾ\300U.\b\300U\027\\\300T}d\300S\200\344\300R\220\234\300QT}\300D\241\221\300V\a\360\300U\246\060\300S; \300\300QV\026\300OE\345\300M\020\314\300J\365\f\300I(D\300G\250X\300FE6\300P\r\376\300B\240\300\300; zV\300>\225\324\300=\036\206\300<8t\300;\252d\300;v\376\300;\210w\300;\336J\300HǬ\300\071\322+\300:\205\232\300;\231H\300<\367\a\300=\350\252\300?"", <incomplete sequence \344>..., tgtsize=tgtsize; entry=0x7ff4299869ac, tgt=tgt; entry=0x7ff3c94c924f ""ZL\b\177\272"", irep=irep; entry=0x7ff4299869a8, compressionAlgorithm=ROOT::RCompressionSet",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:2360,Performance,optimiz,optimized,2360,"el=cxlevel; entry=1, srcsize=srcsize; entry=0x7ff4299869ac, src=src; entry=0x7ff3d000007f ""\300Ro\211\300=\200I\300>\277\341\300D'\254\300F\343\016\300Ix\232\300K\333^\300M\340!\300O\255T\300P\320\344\300Q\254\250\300<\225B\300S,g\300S\313\061\300Tf\250\300TӾ\300U.\b\300U\027\\\300T}d\300S\200\344\300R\220\234\300QT}\300D\241\221\300V\a\360\300U\246\060\300S; \300\300QV\026\300OE\345\300M\020\314\300J\365\f\300I(D\300G\250X\300FE6\300P\r\376\300B\240\300\300; zV\300>\225\324\300=\036\206\300<8t\300;\252d\300;v\376\300;\210w\300;\336J\300HǬ\300\071\322+\300:\205\232\300;\231H\300<\367\a\300=\350\252\300?"", <incomplete sequence \344>..., tgtsize=tgtsize; entry=0x7ff4299869ac, tgt=tgt; entry=0x7ff3c94c924f ""ZL\b\177\272"", irep=irep; entry=0x7ff4299869a8, compressionAlgorithm=ROOT::RCompressionSetting::EAlgorithm::kZLIB) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/zip/src/RZip.cxx:79; #6 0x00007ff44949256c in TBasket::WriteBuffer (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBasket.cxx:1245; #7 0x00007ff4494a0f3d in operator() (__closure=<synthetic pointer>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:3134; #8 TBranch::WriteBasketImpl (this=0x7ff42547e5f0, basket=0x7ff4253b6a90, where=7, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:3189; #9 0x00007ff4494a1b11 in TBranch::FillImpl (imtHelper=0x0, this=0x7ff42547e5f0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:923; #10 TBranch::FillImpl (this=this; entry=0x7ff42547e5f0, imtHelper=imtHelper; entry=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:854; #11 0x00007ff4494ae36b in TBranchElement::FillImpl (this=0x7ff42547e5f0, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:4486,Performance,optimiz,optimized,4486,"0, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1290; #13 0x00007ff44f4faf89 in TBranch::Fill (this=0x7ff425170850) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ROOT/v6-24-02-local5/include/TBranch.h:201; #14 o2::base::DetImpl<o2::trd::Detector>::mergeAndAdjustHits<std::vector<o2::trd::Hit, std::allocator<o2::trd::Hit> > > (this=this; entry=0x3e69680, brname=..., origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:403; #15 0x00007ff44f4fb507 in o2::base::DetImpl<o2::trd::Detector>::mergeHitEntries (this=0x3e69680, origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:422; #16 0x00000000004456e1 in o2::devices::O2HitMerger::mergeAndFlushData (this=0x162d640, eventID=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:745; #17 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x7ad9e10) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80; #18 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0; #19 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 5 (Thread 0x7ff42a18e700 (LWP 25519) ""o2-sim-hit-merg""):; #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0; #1 0x00007ff44aca29d3 in __gthread_cond_timedwait (__abs_timeout=0x7ff42a187a30, __mutex=<optimized out>, __cond=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872; #2 std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__lock=..., __lock=..., __atime=<synthetic pointer>..., this=<optimized out>) at /h",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:5093,Performance,optimiz,optimized,5093,"h:403; #15 0x00007ff44f4fb507 in o2::base::DetImpl<o2::trd::Detector>::mergeHitEntries (this=0x3e69680, origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:422; #16 0x00000000004456e1 in o2::devices::O2HitMerger::mergeAndFlushData (this=0x162d640, eventID=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:745; #17 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x7ad9e10) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80; #18 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0; #19 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 5 (Thread 0x7ff42a18e700 (LWP 25519) ""o2-sim-hit-merg""):; #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0; #1 0x00007ff44aca29d3 in __gthread_cond_timedwait (__abs_timeout=0x7ff42a187a30, __mutex=<optimized out>, __cond=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872; #2 std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__lock=..., __lock=..., __atime=<synthetic pointer>..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232; #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141; #4 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long int, std::ratio<1, 1000000000> >, fair::mq::StateMachine::WaitForPendingStateFor(int) const::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:5117,Performance,optimiz,optimized,5117,"h:403; #15 0x00007ff44f4fb507 in o2::base::DetImpl<o2::trd::Detector>::mergeHitEntries (this=0x3e69680, origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:422; #16 0x00000000004456e1 in o2::devices::O2HitMerger::mergeAndFlushData (this=0x162d640, eventID=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:745; #17 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x7ad9e10) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80; #18 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0; #19 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 5 (Thread 0x7ff42a18e700 (LWP 25519) ""o2-sim-hit-merg""):; #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0; #1 0x00007ff44aca29d3 in __gthread_cond_timedwait (__abs_timeout=0x7ff42a187a30, __mutex=<optimized out>, __cond=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872; #2 std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__lock=..., __lock=..., __atime=<synthetic pointer>..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232; #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141; #4 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long int, std::ratio<1, 1000000000> >, fair::mq::StateMachine::WaitForPendingStateFor(int) const::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:5457,Performance,optimiz,optimized,5457," out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:745; #17 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x7ad9e10) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80; #18 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0; #19 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 5 (Thread 0x7ff42a18e700 (LWP 25519) ""o2-sim-hit-merg""):; #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0; #1 0x00007ff44aca29d3 in __gthread_cond_timedwait (__abs_timeout=0x7ff42a187a30, __mutex=<optimized out>, __cond=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872; #2 std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__lock=..., __lock=..., __atime=<synthetic pointer>..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232; #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141; #4 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long int, std::ratio<1, 1000000000> >, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__p=..., __atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:158; #5 std::condition_variable::wait_for<long int, std::ratio<1, 1000>, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__rtime=..., __rtime=..., __p=..., __lock=..., this=<o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:5765,Performance,optimiz,optimized,5765,"80796d in clone () from /lib64/libc.so.6. Thread 5 (Thread 0x7ff42a18e700 (LWP 25519) ""o2-sim-hit-merg""):; #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0; #1 0x00007ff44aca29d3 in __gthread_cond_timedwait (__abs_timeout=0x7ff42a187a30, __mutex=<optimized out>, __cond=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872; #2 std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__lock=..., __lock=..., __atime=<synthetic pointer>..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232; #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141; #4 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long int, std::ratio<1, 1000000000> >, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__p=..., __atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:158; #5 std::condition_variable::wait_for<long int, std::ratio<1, 1000>, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__rtime=..., __rtime=..., __p=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:185; #6 fair::mq::StateMachine::WaitForPendingStateFor (this=this; entry=0x162d700, durationInMs=durationInMs; entry=1000) at /home/aliperf/aliperf_workspace/sw/SOURCES/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:6155,Performance,optimiz,optimized,6155,"ain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872; #2 std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__lock=..., __lock=..., __atime=<synthetic pointer>..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232; #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141; #4 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long int, std::ratio<1, 1000000000> >, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__p=..., __atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:158; #5 std::condition_variable::wait_for<long int, std::ratio<1, 1000>, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__rtime=..., __rtime=..., __p=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:185; #6 fair::mq::StateMachine::WaitForPendingStateFor (this=this; entry=0x162d700, durationInMs=durationInMs; entry=1000) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:364; #7 0x00007ff44b22f882 in FairMQDevice::WaitFor<long, std::ratio<1l, 1l> > (duration=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/chrono:422; #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:6494,Performance,optimiz,optimized,6494,"hain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232; #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141; #4 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long int, std::ratio<1, 1000000000> >, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__p=..., __atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:158; #5 std::condition_variable::wait_for<long int, std::ratio<1, 1000>, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__rtime=..., __rtime=..., __p=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:185; #6 fair::mq::StateMachine::WaitForPendingStateFor (this=this; entry=0x162d700, durationInMs=durationInMs; entry=1000) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:364; #7 0x00007ff44b22f882 in FairMQDevice::WaitFor<long, std::ratio<1l, 1l> > (duration=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/chrono:422; #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717; #9 0x00007ff44b230e6d in std::__invoke_impl<void, void (FairMQDevice::*)(), FairMQDevice*> (__f=<optimized out>, __t=<optimized out>, __f=<optimized out>, __t=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:73; #10 std::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:7321,Performance,optimiz,optimized,7321," int, std::ratio<1, 1000>, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__rtime=..., __rtime=..., __p=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:185; #6 fair::mq::StateMachine::WaitForPendingStateFor (this=this; entry=0x162d700, durationInMs=durationInMs; entry=1000) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:364; #7 0x00007ff44b22f882 in FairMQDevice::WaitFor<long, std::ratio<1l, 1l> > (duration=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/chrono:422; #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717; #9 0x00007ff44b230e6d in std::__invoke_impl<void, void (FairMQDevice::*)(), FairMQDevice*> (__f=<optimized out>, __t=<optimized out>, __f=<optimized out>, __t=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:73; #10 std::__invoke<void (FairMQDevice::*)(), FairMQDevice*> (__fn=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95; #11 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::_M_invoke<0ul, 1ul> (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:264; #12 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::operator() (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:271; #13 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:7342,Performance,optimiz,optimized,7342," int, std::ratio<1, 1000>, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__rtime=..., __rtime=..., __p=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:185; #6 fair::mq::StateMachine::WaitForPendingStateFor (this=this; entry=0x162d700, durationInMs=durationInMs; entry=1000) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:364; #7 0x00007ff44b22f882 in FairMQDevice::WaitFor<long, std::ratio<1l, 1l> > (duration=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/chrono:422; #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717; #9 0x00007ff44b230e6d in std::__invoke_impl<void, void (FairMQDevice::*)(), FairMQDevice*> (__f=<optimized out>, __t=<optimized out>, __f=<optimized out>, __t=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:73; #10 std::__invoke<void (FairMQDevice::*)(), FairMQDevice*> (__fn=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95; #11 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::_M_invoke<0ul, 1ul> (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:264; #12 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::operator() (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:271; #13 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:7363,Performance,optimiz,optimized,7363," int, std::ratio<1, 1000>, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__rtime=..., __rtime=..., __p=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:185; #6 fair::mq::StateMachine::WaitForPendingStateFor (this=this; entry=0x162d700, durationInMs=durationInMs; entry=1000) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:364; #7 0x00007ff44b22f882 in FairMQDevice::WaitFor<long, std::ratio<1l, 1l> > (duration=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/chrono:422; #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717; #9 0x00007ff44b230e6d in std::__invoke_impl<void, void (FairMQDevice::*)(), FairMQDevice*> (__f=<optimized out>, __t=<optimized out>, __f=<optimized out>, __t=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:73; #10 std::__invoke<void (FairMQDevice::*)(), FairMQDevice*> (__fn=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95; #11 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::_M_invoke<0ul, 1ul> (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:264; #12 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::operator() (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:271; #13 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:7384,Performance,optimiz,optimized,7384," int, std::ratio<1, 1000>, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__rtime=..., __rtime=..., __p=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:185; #6 fair::mq::StateMachine::WaitForPendingStateFor (this=this; entry=0x162d700, durationInMs=durationInMs; entry=1000) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:364; #7 0x00007ff44b22f882 in FairMQDevice::WaitFor<long, std::ratio<1l, 1l> > (duration=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/chrono:422; #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717; #9 0x00007ff44b230e6d in std::__invoke_impl<void, void (FairMQDevice::*)(), FairMQDevice*> (__f=<optimized out>, __t=<optimized out>, __f=<optimized out>, __t=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:73; #10 std::__invoke<void (FairMQDevice::*)(), FairMQDevice*> (__fn=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95; #11 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::_M_invoke<0ul, 1ul> (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:264; #12 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::operator() (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:271; #13 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:7589,Performance,optimiz,optimized,7589,"/include/c++/10.2.0/condition_variable:185; #6 fair::mq::StateMachine::WaitForPendingStateFor (this=this; entry=0x162d700, durationInMs=durationInMs; entry=1000) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:364; #7 0x00007ff44b22f882 in FairMQDevice::WaitFor<long, std::ratio<1l, 1l> > (duration=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/chrono:422; #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717; #9 0x00007ff44b230e6d in std::__invoke_impl<void, void (FairMQDevice::*)(), FairMQDevice*> (__f=<optimized out>, __t=<optimized out>, __f=<optimized out>, __t=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:73; #10 std::__invoke<void (FairMQDevice::*)(), FairMQDevice*> (__fn=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95; #11 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::_M_invoke<0ul, 1ul> (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:264; #12 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::operator() (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:271; #13 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::operator() (this=0x7ff42a188500) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:1365; #14 std::__invoke_impl<std",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:7836,Performance,optimiz,optimized,7836,"4.40/fairmq/StateMachine.cxx:364; #7 0x00007ff44b22f882 in FairMQDevice::WaitFor<long, std::ratio<1l, 1l> > (duration=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/chrono:422; #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717; #9 0x00007ff44b230e6d in std::__invoke_impl<void, void (FairMQDevice::*)(), FairMQDevice*> (__f=<optimized out>, __t=<optimized out>, __f=<optimized out>, __t=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:73; #10 std::__invoke<void (FairMQDevice::*)(), FairMQDevice*> (__fn=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95; #11 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::_M_invoke<0ul, 1ul> (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:264; #12 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::operator() (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:271; #13 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::operator() (this=0x7ff42a188500) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:1365; #14 std::__invoke_impl<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:8068,Performance,optimiz,optimized,8068,"/c++/10.2.0/chrono:422; #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717; #9 0x00007ff44b230e6d in std::__invoke_impl<void, void (FairMQDevice::*)(), FairMQDevice*> (__f=<optimized out>, __t=<optimized out>, __f=<optimized out>, __t=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:73; #10 std::__invoke<void (FairMQDevice::*)(), FairMQDevice*> (__fn=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95; #11 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::_M_invoke<0ul, 1ul> (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:264; #12 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::operator() (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:271; #13 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::operator() (this=0x7ff42a188500) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:1365; #14 std::__invoke_impl<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>&> (__f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:60; #15 std::__invoke_r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:10183,Performance,optimiz,optimized,10183,"_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>&> (__fn=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:113; #16 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void> >::_M_invoke(std::_Any_data const&) (__functor=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:292; #17 0x00007ff44b23115b in std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622; #18 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) (this=0x3ee2b40, __f=<optimized out>, __did_set=0x7ff42a1884d7) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:564; #19 0x00007ff44e18520b in __pthread_once_slow () from /lib64/libpthread.so.0; #20 0x00007ff44b231ec6 in __gthread_once (__func=<optimized out>, __once=0x3ee2b58) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:700; #21 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:10521,Performance,optimiz,optimized,10521,"2.0/bits/invoke.h:113; #16 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void> >::_M_invoke(std::_Any_data const&) (__functor=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:292; #17 0x00007ff44b23115b in std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622; #18 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) (this=0x3ee2b40, __f=<optimized out>, __did_set=0x7ff42a1884d7) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:564; #19 0x00007ff44e18520b in __pthread_once_slow () from /lib64/libpthread.so.0; #20 0x00007ff44b231ec6 in __gthread_once (__func=<optimized out>, __once=0x3ee2b58) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:700; #21 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__futu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:10808,Performance,optimiz,optimized,10808,"id> >::_M_invoke(std::_Any_data const&) (__functor=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:292; #17 0x00007ff44b23115b in std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622; #18 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) (this=0x3ee2b40, __f=<optimized out>, __did_set=0x7ff42a1884d7) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:564; #19 0x00007ff44e18520b in __pthread_once_slow () from /lib64/libpthread.so.0; #20 0x00007ff44b231ec6 in __gthread_once (__func=<optimized out>, __once=0x3ee2b58) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:700; #21 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) (__f=; 0x7ff42a1884f0: (void (std::__future_base::_State_baseV2::*)(std::__future_base::_State_baseV2 * const, std::function<std::unique_ptr<std::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:12838,Performance,optimiz,optimized,12838,"te_baseV2::*)(std::__future_base::_State_baseV2 * const, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>()> *, bool *)) 0x7ff44b231140 <std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)>, __once=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/mutex:729; #22 std::__future_base::_State_baseV2::_M_set_result(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>, bool) (__ignore_failure=false, __res=..., this=0x3ee2b40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:404; #23 std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}::operator()() const (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:1674; #24 std::__invoke_impl<void, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}>(std::__invoke_other, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}&&) (__f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:60; #25 std::__invoke<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), F",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:17116,Performance,optimiz,optimized,17116,"tine () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ZeroMQ/v4.3.3-local3/lib/libzmq.so.5; #3 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0; #4 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 3 (Thread 0x7ff4442a5700 (LWP 25365) ""ZMQbg/Reaper""):; #0 0x00007ff446807f43 in epoll_wait () from /lib64/libc.so.6; #1 0x00007ff445edd301 in zmq::epoll_t::loop() () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ZeroMQ/v4.3.3-local3/lib/libzmq.so.5; #2 0x00007ff445f15068 in thread_routine () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ZeroMQ/v4.3.3-local3/lib/libzmq.so.5; #3 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0; #4 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 2 (Thread 0x7ff444aa6700 (LWP 25360) ""o2-sim-hit-merg""):; #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0; #1 0x00007ff44b30da64 in __gthread_cond_timedwait (__abs_timeout=0x7ff444a9fe30, __mutex=<optimized out>, __cond=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872; #2 std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__lock=..., __lock=..., __atime=<synthetic pointer>..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232; #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141; #4 std::condition_variable::wait_for<long, std::ratio<1l, 1000l> > (__rtime=..., __rtime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:19118,Performance,optimiz,optimized,19118,"ariable:172; #5 fair::mq::StateQueue::WaitForNext<long, std::ratio<1l, 1000l> > (this=this; entry=0x162dd90, duration=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateQueue.h:50; #6 0x00007ff44b30d4ff in fair::mq::plugins::Control::StaticMode (this=0x162dcd0) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/plugins/control/Control.cxx:376; #7 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x162e800) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80; #8 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0; #9 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 1 (Thread 0x7ff4457b40c0 (LWP 25309) ""o2-sim-hit-merg""):; #0 0x00007ff4467ce4b9 in waitpid () from /lib64/libc.so.6; #1 0x00007ff44674bf62 in do_system () from /lib64/libc.so.6; #2 0x00007ff44674c311 in system () from /lib64/libc.so.6; #3 0x00007ff447d2a60c in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120; #4 TUnixSystem::StackTrace (this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411; #5 0x00007ff447d27c15 in TUnixSystem::DispatchSignals (this=0x13db430, sig=kSigSegmentationViolation) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:3649; #6 <signal handler called>; #7 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/predefined_ops.h:267; #8 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:20930,Performance,optimiz,optimized,20930,"7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/predefined_ops.h:267; #8 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977; #9 std::find<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=; 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902; #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326; #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528; #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522; #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343; #14 0x00007ff44814af14 in TFile::Init (this=this; entry=0x5dfd960, create=create; entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602; #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:21100,Performance,optimiz,optimized,21100,"tomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977; #9 std::find<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=; 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902; #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326; #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528; #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522; #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343; #14 0x00007ff44814af14 in TFile::Init (this=this; entry=0x5dfd960, create=create; entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602; #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202; #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:21279,Performance,optimiz,optimized,21279,") at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977; #9 std::find<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=; 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902; #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326; #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528; #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522; #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343; #14 0x00007ff44814af14 in TFile::Init (this=this; entry=0x5dfd960, create=create; entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602; #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202; #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:21466,Performance,optimiz,optimized,21466,"std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=; 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902; #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326; #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528; #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522; #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343; #14 0x00007ff44814af14 in TFile::Init (this=this; entry=0x5dfd960, create=create; entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602; #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202; #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163; #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this; entry=0x162d640, eventID=<",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:21924,Performance,optimiz,optimized,21924,"dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326; #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528; #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522; #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343; #14 0x00007ff44814af14 in TFile::Init (this=this; entry=0x5dfd960, create=create; entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602; #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202; #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163; #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this; entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr; entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281; #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313; #19 o2::devices::O2HitMerger::handleSimData (this=this; entry=0x162d640, data=...) at /home/aliperf/al",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:22119,Performance,optimiz,optimized,22119,"re/base/src/TDirectory.cxx:528; #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522; #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343; #14 0x00007ff44814af14 in TFile::Init (this=this; entry=0x5dfd960, create=create; entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602; #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202; #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163; #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this; entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr; entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281; #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313; #19 o2::devices::O2HitMerger::handleSimData (this=this; entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377; #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357; #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:22141,Performance,optimiz,optimized,22141,"re/base/src/TDirectory.cxx:528; #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522; #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343; #14 0x00007ff44814af14 in TFile::Init (this=this; entry=0x5dfd960, create=create; entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602; #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202; #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163; #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this; entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr; entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281; #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313; #19 o2::devices::O2HitMerger::handleSimData (this=this; entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377; #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357; #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:22165,Performance,optimiz,optimized,22165,"re/base/src/TDirectory.cxx:528; #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522; #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343; #14 0x00007ff44814af14 in TFile::Init (this=this; entry=0x5dfd960, create=create; entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602; #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202; #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163; #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this; entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr; entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281; #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313; #19 o2::devices::O2HitMerger::handleSimData (this=this; entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377; #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357; #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:22189,Performance,optimiz,optimized,22189,"re/base/src/TDirectory.cxx:528; #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522; #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343; #14 0x00007ff44814af14 in TFile::Init (this=this; entry=0x5dfd960, create=create; entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602; #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202; #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163; #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this; entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr; entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281; #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313; #19 o2::devices::O2HitMerger::handleSimData (this=this; entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377; #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357; #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:22215,Performance,optimiz,optimized,22215,"re/base/src/TDirectory.cxx:528; #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522; #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343; #14 0x00007ff44814af14 in TFile::Init (this=this; entry=0x5dfd960, create=create; entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602; #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202; #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163; #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this; entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr; entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281; #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313; #19 o2::devices::O2HitMerger::handleSimData (this=this; entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377; #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357; #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:22245,Performance,optimiz,optimized,22245,"re/base/src/TDirectory.cxx:528; #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522; #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343; #14 0x00007ff44814af14 in TFile::Init (this=this; entry=0x5dfd960, create=create; entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602; #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202; #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163; #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this; entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr; entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281; #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313; #19 o2::devices::O2HitMerger::handleSimData (this=this; entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377; #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357; #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:22483,Performance,optimiz,optimized,22483,"rectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343; #14 0x00007ff44814af14 in TFile::Init (this=this; entry=0x5dfd960, create=create; entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602; #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202; #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163; #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this; entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr; entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281; #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313; #19 o2::devices::O2HitMerger::handleSimData (this=this; entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377; #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357; #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460; #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, thi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:22514,Performance,optimiz,optimized,22514,"ectoryFile.cxx:343; #14 0x00007ff44814af14 in TFile::Init (this=this; entry=0x5dfd960, create=create; entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602; #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202; #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163; #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this; entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr; entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281; #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313; #19 o2::devices::O2HitMerger::handleSimData (this=this; entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377; #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357; #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460; #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_funct",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:23408,Performance,optimiz,optimized,23408,"tMerger::fillBranch<o2::data::SubEventInfo> (this=this; entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr; entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281; #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313; #19 o2::devices::O2HitMerger::handleSimData (this=this; entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377; #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357; #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460; #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622; #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158; #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763; #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:23430,Performance,optimiz,optimized,23430,"tMerger::fillBranch<o2::data::SubEventInfo> (this=this; entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr; entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281; #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313; #19 o2::devices::O2HitMerger::handleSimData (this=this; entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377; #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357; #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460; #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622; #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158; #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763; #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:23789,Performance,optimiz,optimized,23789,"s::O2HitMerger::handleSimData (this=this; entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377; #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357; #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460; #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622; #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158; #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763; #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105; #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:24009,Performance,optimiz,optimized,24009,"HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357; #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460; #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622; #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158; #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763; #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105; #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:24031,Performance,optimiz,optimized,24031,"HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357; #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460; #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622; #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158; #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763; #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105; #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:24590,Performance,optimiz,optimized,24590,"invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158; #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763; #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105; #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90; #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::si",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:25031,Performance,optimiz,optimized,25031,"aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763; #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105; #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90; #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133; #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variad",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:31359,Performance,optimiz,optimized,31359,"mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57; #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:33679,Performance,optimiz,optimized,33679," >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64; #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0; entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243; #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:34132,Performance,optimiz,optimized,34132,"tail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64; #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0; entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243; #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720; #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157; #36 fair::mq::fsm::Machine_::Pro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:34156,Performance,optimiz,optimized,34156,"tail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64; #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0; entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243; #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720; #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157; #36 fair::mq::fsm::Machine_::Pro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:35420,Performance,optimiz,optimized,35420,"ignals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720; #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157; #36 fair::mq::fsm::Machine_::ProcessWork (this=this; entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205; #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373; #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364; #39 fair::mq::DeviceRunner::Run (this=this; entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182; #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQDevice.h:51; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #7 std::__find_if<__gnu_cxx::__normal_iterato",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:35734,Performance,optimiz,optimized,35734,"/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720; #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157; #36 fair::mq::fsm::Machine_::ProcessWork (this=this; entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205; #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373; #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364; #39 fair::mq::DeviceRunner::Run (this=this; entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182; #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQDevice.h:51; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #7 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/predef",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:35756,Performance,optimiz,optimized,35756,"/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720; #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157; #36 fair::mq::fsm::Machine_::ProcessWork (this=this; entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205; #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373; #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364; #39 fair::mq::DeviceRunner::Run (this=this; entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182; #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQDevice.h:51; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #7 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/predef",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:37666,Performance,optimiz,optimized,37666,"7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/predefined_ops.h:267; #8 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977; #9 std::find<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=; 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902; #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326; #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528; #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522; #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343; #14 0x00007ff44814af14 in TFile::Init (this=this; entry=0x5dfd960, create=create; entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602; #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:37836,Performance,optimiz,optimized,37836,"tomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977; #9 std::find<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=; 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902; #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326; #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528; #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522; #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343; #14 0x00007ff44814af14 in TFile::Init (this=this; entry=0x5dfd960, create=create; entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602; #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202; #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:38015,Performance,optimiz,optimized,38015,") at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977; #9 std::find<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=; 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902; #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326; #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528; #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522; #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343; #14 0x00007ff44814af14 in TFile::Init (this=this; entry=0x5dfd960, create=create; entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602; #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202; #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:38202,Performance,optimiz,optimized,38202,"std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=; 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902; #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326; #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528; #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522; #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343; #14 0x00007ff44814af14 in TFile::Init (this=this; entry=0x5dfd960, create=create; entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602; #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202; #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163; #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this; entry=0x162d640, eventID=<",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:38660,Performance,optimiz,optimized,38660,"dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326; #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528; #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522; #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343; #14 0x00007ff44814af14 in TFile::Init (this=this; entry=0x5dfd960, create=create; entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602; #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202; #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163; #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this; entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr; entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281; #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313; #19 o2::devices::O2HitMerger::handleSimData (this=this; entry=0x162d640, data=...) at /home/aliperf/al",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:38855,Performance,optimiz,optimized,38855,"re/base/src/TDirectory.cxx:528; #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522; #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343; #14 0x00007ff44814af14 in TFile::Init (this=this; entry=0x5dfd960, create=create; entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602; #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202; #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163; #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this; entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr; entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281; #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313; #19 o2::devices::O2HitMerger::handleSimData (this=this; entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377; #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357; #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:38877,Performance,optimiz,optimized,38877,"re/base/src/TDirectory.cxx:528; #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522; #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343; #14 0x00007ff44814af14 in TFile::Init (this=this; entry=0x5dfd960, create=create; entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602; #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202; #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163; #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this; entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr; entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281; #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313; #19 o2::devices::O2HitMerger::handleSimData (this=this; entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377; #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357; #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:38901,Performance,optimiz,optimized,38901,"re/base/src/TDirectory.cxx:528; #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522; #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343; #14 0x00007ff44814af14 in TFile::Init (this=this; entry=0x5dfd960, create=create; entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602; #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202; #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163; #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this; entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr; entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281; #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313; #19 o2::devices::O2HitMerger::handleSimData (this=this; entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377; #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357; #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:38925,Performance,optimiz,optimized,38925,"re/base/src/TDirectory.cxx:528; #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522; #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343; #14 0x00007ff44814af14 in TFile::Init (this=this; entry=0x5dfd960, create=create; entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602; #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202; #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163; #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this; entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr; entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281; #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313; #19 o2::devices::O2HitMerger::handleSimData (this=this; entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377; #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357; #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:38951,Performance,optimiz,optimized,38951,"re/base/src/TDirectory.cxx:528; #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522; #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343; #14 0x00007ff44814af14 in TFile::Init (this=this; entry=0x5dfd960, create=create; entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602; #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202; #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163; #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this; entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr; entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281; #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313; #19 o2::devices::O2HitMerger::handleSimData (this=this; entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377; #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357; #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:38981,Performance,optimiz,optimized,38981,"re/base/src/TDirectory.cxx:528; #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522; #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343; #14 0x00007ff44814af14 in TFile::Init (this=this; entry=0x5dfd960, create=create; entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602; #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202; #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163; #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this; entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr; entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281; #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313; #19 o2::devices::O2HitMerger::handleSimData (this=this; entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377; #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357; #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:39219,Performance,optimiz,optimized,39219,"rectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343; #14 0x00007ff44814af14 in TFile::Init (this=this; entry=0x5dfd960, create=create; entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602; #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202; #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163; #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this; entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr; entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281; #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313; #19 o2::devices::O2HitMerger::handleSimData (this=this; entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377; #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357; #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460; #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, thi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:39250,Performance,optimiz,optimized,39250,"ectoryFile.cxx:343; #14 0x00007ff44814af14 in TFile::Init (this=this; entry=0x5dfd960, create=create; entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602; #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202; #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163; #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this; entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr; entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281; #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313; #19 o2::devices::O2HitMerger::handleSimData (this=this; entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377; #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357; #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460; #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_funct",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:40144,Performance,optimiz,optimized,40144,"tMerger::fillBranch<o2::data::SubEventInfo> (this=this; entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr; entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281; #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313; #19 o2::devices::O2HitMerger::handleSimData (this=this; entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377; #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357; #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460; #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622; #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158; #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763; #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:40166,Performance,optimiz,optimized,40166,"tMerger::fillBranch<o2::data::SubEventInfo> (this=this; entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr; entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281; #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313; #19 o2::devices::O2HitMerger::handleSimData (this=this; entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377; #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357; #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460; #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622; #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158; #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763; #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:40525,Performance,optimiz,optimized,40525,"s::O2HitMerger::handleSimData (this=this; entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377; #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357; #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460; #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622; #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158; #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763; #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105; #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:40745,Performance,optimiz,optimized,40745,"HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357; #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460; #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622; #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158; #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763; #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105; #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:40767,Performance,optimiz,optimized,40767,"HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357; #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460; #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622; #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158; #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763; #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105; #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:41326,Performance,optimiz,optimized,41326,"invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158; #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763; #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105; #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90; #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::si",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:41767,Performance,optimiz,optimized,41767,"aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763; #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105; #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90; #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133; #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variad",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:48095,Performance,optimiz,optimized,48095,"mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57; #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:50415,Performance,optimiz,optimized,50415," >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64; #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0; entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243; #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:50868,Performance,optimiz,optimized,50868,"tail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64; #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0; entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243; #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720; #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157; #36 fair::mq::fsm::Machine_::Pro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:50892,Performance,optimiz,optimized,50892,"tail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64; #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0; entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243; #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720; #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157; #36 fair::mq::fsm::Machine_::Pro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:52156,Performance,optimiz,optimized,52156,"r()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0; entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243; #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720; #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157; #36 fair::mq::fsm::Machine_::ProcessWork (this=this; entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205; #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373; #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364; #39 fair::mq::DeviceRunner::Run (this=this; entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182; #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQDevice.h:51; ===========================================================; ```. For the record (not publicly accessible) ALICE bug reports:. * https://alice.its.cern.ch/jira/browse/O2-2372; * https://alice.its.cern.ch/jira/browse/O2-2532",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:52470,Performance,optimiz,optimized,52470,"r()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0; entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243; #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720; #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157; #36 fair::mq::fsm::Machine_::ProcessWork (this=this; entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205; #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373; #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364; #39 fair::mq::DeviceRunner::Run (this=this; entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182; #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQDevice.h:51; ===========================================================; ```. For the record (not publicly accessible) ALICE bug reports:. * https://alice.its.cern.ch/jira/browse/O2-2372; * https://alice.its.cern.ch/jira/browse/O2-2532",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:52492,Performance,optimiz,optimized,52492,"r()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0; entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243; #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720; #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157; #36 fair::mq::fsm::Machine_::ProcessWork (this=this; entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205; #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373; #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364; #39 fair::mq::DeviceRunner::Run (this=this; entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182; #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQDevice.h:51; ===========================================================; ```. For the record (not publicly accessible) ALICE bug reports:. * https://alice.its.cern.ch/jira/browse/O2-2372; * https://alice.its.cern.ch/jira/browse/O2-2532",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:45,Safety,unsafe,unsafe,45,"ALICE has reported regular crashes due to MT unsafe access in `TDirectory::RegisterGDirectory`. Example backtrace:. ```. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================. Thread 6 (Thread 0x7ff42998d700 (LWP 56550) ""o2-sim-hit-merg""):; #0 0x00007ff44b42eef6 in longest_match () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1; #1 0x00007ff44b42fd58 in deflate_fast () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1; #2 0x00007ff44b430822 in deflate () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1; #3 0x00007ff447cbe8a5 in R__zipZLIB (irep=0x7ff4299869a8, tgt=0x7ff3c94c924f ""ZL\b\177\272"", tgtsize=0x7ff4299869ac, src=0x7ff4299868c0 ""\177"", srcsize=0x7ff4299869ac, cxlevel=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/zip/src/RZip.cxx:213; #4 R__zipMultipleAlgorithm (compressionAlgorithm=<optimized out>, irep=0x7ff4299869a8, tgt=0x7ff3c94c924f ""ZL\b\177\272"", tgtsize=0x7ff4299869ac, src=0x7ff4299868c0 ""\177"", srcsize=0x7ff4299869ac, cxlevel=32756) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/zip/src/RZip.cxx:109; #5 R__zipMultipleAlgorithm (cxlevel=cxlevel; entry=1, srcsize=srcsize; entry=0x7ff4299869ac, src=src; entry=0x7ff3d000007f ""\300Ro\211\300=\200I\300>\277\341\300D'\254\300F\343\016\300Ix\232\300K\333^\300M\340!\300O\255T\300P\320\344\300Q\254\250\300<\225B\300S,g\300S\313\061\300Tf\250\300TӾ\300U.\b\300U\027\\\300T}d\300S\200\344\300R\220\234\300QT}\300D\241\221\300V\a\360\300U\246\060\300S; \300\300QV\026\300OE\345\300M\020\314\300J\365\f\300I(D\300G\250X\300FE6\300P\r\376\300B\240\300\300; zV\300>\225\324\300=\036\206\300<8t\300;\252d\300;v\376\300;\210w\300;\336J\300HǬ\300\071\322+\300:\205\232\300;\231H\300<\367\a\300=\350\252\300?"", <inco",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:3791,Safety,Detect,Detector,3791,"xx:3189; #9 0x00007ff4494a1b11 in TBranch::FillImpl (imtHelper=0x0, this=0x7ff42547e5f0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:923; #10 TBranch::FillImpl (this=this; entry=0x7ff42547e5f0, imtHelper=imtHelper; entry=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:854; #11 0x00007ff4494ae36b in TBranchElement::FillImpl (this=0x7ff42547e5f0, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1265; #12 0x00007ff4494ae069 in TBranchElement::FillImpl (this=0x7ff425170850, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1290; #13 0x00007ff44f4faf89 in TBranch::Fill (this=0x7ff425170850) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ROOT/v6-24-02-local5/include/TBranch.h:201; #14 o2::base::DetImpl<o2::trd::Detector>::mergeAndAdjustHits<std::vector<o2::trd::Hit, std::allocator<o2::trd::Hit> > > (this=this; entry=0x3e69680, brname=..., origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:403; #15 0x00007ff44f4fb507 in o2::base::DetImpl<o2::trd::Detector>::mergeHitEntries (this=0x3e69680, origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:422; #16 0x00000000004456e1 in o2::devices::O2HitMerger::mergeAndFlushData (this=0x162d640, eventID=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:745; #17 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x7ad9e10) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80; #18 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0; #19 0x00007ff44680796d in clone () from /lib64/l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:4054,Safety,Detect,Detectors,4054,"his=this; entry=0x7ff42547e5f0, imtHelper=imtHelper; entry=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:854; #11 0x00007ff4494ae36b in TBranchElement::FillImpl (this=0x7ff42547e5f0, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1265; #12 0x00007ff4494ae069 in TBranchElement::FillImpl (this=0x7ff425170850, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1290; #13 0x00007ff44f4faf89 in TBranch::Fill (this=0x7ff425170850) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ROOT/v6-24-02-local5/include/TBranch.h:201; #14 o2::base::DetImpl<o2::trd::Detector>::mergeAndAdjustHits<std::vector<o2::trd::Hit, std::allocator<o2::trd::Hit> > > (this=this; entry=0x3e69680, brname=..., origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:403; #15 0x00007ff44f4fb507 in o2::base::DetImpl<o2::trd::Detector>::mergeHitEntries (this=0x3e69680, origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:422; #16 0x00000000004456e1 in o2::devices::O2HitMerger::mergeAndFlushData (this=0x162d640, eventID=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:745; #17 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x7ad9e10) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80; #18 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0; #19 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 5 (Thread 0x7ff42a18e700 (LWP 25519) ""o2-sim-hit-merg""):; #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0; #1 0x00007ff44aca29d3 in __gthread_cond_timedw",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:4077,Safety,Detect,DetectorsBase,4077,"his=this; entry=0x7ff42547e5f0, imtHelper=imtHelper; entry=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:854; #11 0x00007ff4494ae36b in TBranchElement::FillImpl (this=0x7ff42547e5f0, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1265; #12 0x00007ff4494ae069 in TBranchElement::FillImpl (this=0x7ff425170850, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1290; #13 0x00007ff44f4faf89 in TBranch::Fill (this=0x7ff425170850) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ROOT/v6-24-02-local5/include/TBranch.h:201; #14 o2::base::DetImpl<o2::trd::Detector>::mergeAndAdjustHits<std::vector<o2::trd::Hit, std::allocator<o2::trd::Hit> > > (this=this; entry=0x3e69680, brname=..., origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:403; #15 0x00007ff44f4fb507 in o2::base::DetImpl<o2::trd::Detector>::mergeHitEntries (this=0x3e69680, origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:422; #16 0x00000000004456e1 in o2::devices::O2HitMerger::mergeAndFlushData (this=0x162d640, eventID=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:745; #17 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x7ad9e10) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80; #18 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0; #19 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 5 (Thread 0x7ff42a18e700 (LWP 25519) ""o2-sim-hit-merg""):; #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0; #1 0x00007ff44aca29d3 in __gthread_cond_timedw",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:4091,Safety,Detect,Detector,4091,"his=this; entry=0x7ff42547e5f0, imtHelper=imtHelper; entry=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:854; #11 0x00007ff4494ae36b in TBranchElement::FillImpl (this=0x7ff42547e5f0, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1265; #12 0x00007ff4494ae069 in TBranchElement::FillImpl (this=0x7ff425170850, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1290; #13 0x00007ff44f4faf89 in TBranch::Fill (this=0x7ff425170850) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ROOT/v6-24-02-local5/include/TBranch.h:201; #14 o2::base::DetImpl<o2::trd::Detector>::mergeAndAdjustHits<std::vector<o2::trd::Hit, std::allocator<o2::trd::Hit> > > (this=this; entry=0x3e69680, brname=..., origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:403; #15 0x00007ff44f4fb507 in o2::base::DetImpl<o2::trd::Detector>::mergeHitEntries (this=0x3e69680, origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:422; #16 0x00000000004456e1 in o2::devices::O2HitMerger::mergeAndFlushData (this=0x162d640, eventID=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:745; #17 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x7ad9e10) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80; #18 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0; #19 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 5 (Thread 0x7ff42a18e700 (LWP 25519) ""o2-sim-hit-merg""):; #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0; #1 0x00007ff44aca29d3 in __gthread_cond_timedw",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:4160,Safety,Detect,Detector,4160,"S/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:854; #11 0x00007ff4494ae36b in TBranchElement::FillImpl (this=0x7ff42547e5f0, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1265; #12 0x00007ff4494ae069 in TBranchElement::FillImpl (this=0x7ff425170850, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1290; #13 0x00007ff44f4faf89 in TBranch::Fill (this=0x7ff425170850) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ROOT/v6-24-02-local5/include/TBranch.h:201; #14 o2::base::DetImpl<o2::trd::Detector>::mergeAndAdjustHits<std::vector<o2::trd::Hit, std::allocator<o2::trd::Hit> > > (this=this; entry=0x3e69680, brname=..., origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:403; #15 0x00007ff44f4fb507 in o2::base::DetImpl<o2::trd::Detector>::mergeHitEntries (this=0x3e69680, origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:422; #16 0x00000000004456e1 in o2::devices::O2HitMerger::mergeAndFlushData (this=0x162d640, eventID=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:745; #17 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x7ad9e10) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80; #18 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0; #19 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 5 (Thread 0x7ff42a18e700 (LWP 25519) ""o2-sim-hit-merg""):; #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0; #1 0x00007ff44aca29d3 in __gthread_cond_timedwait (__abs_timeout=0x7ff42a187a30, __mutex=<optimized out>, __cond=<optimized out>) at /home/aliperf/aliper",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:4337,Safety,Detect,Detectors,4337,"ace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1265; #12 0x00007ff4494ae069 in TBranchElement::FillImpl (this=0x7ff425170850, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1290; #13 0x00007ff44f4faf89 in TBranch::Fill (this=0x7ff425170850) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ROOT/v6-24-02-local5/include/TBranch.h:201; #14 o2::base::DetImpl<o2::trd::Detector>::mergeAndAdjustHits<std::vector<o2::trd::Hit, std::allocator<o2::trd::Hit> > > (this=this; entry=0x3e69680, brname=..., origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:403; #15 0x00007ff44f4fb507 in o2::base::DetImpl<o2::trd::Detector>::mergeHitEntries (this=0x3e69680, origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:422; #16 0x00000000004456e1 in o2::devices::O2HitMerger::mergeAndFlushData (this=0x162d640, eventID=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:745; #17 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x7ad9e10) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80; #18 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0; #19 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 5 (Thread 0x7ff42a18e700 (LWP 25519) ""o2-sim-hit-merg""):; #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0; #1 0x00007ff44aca29d3 in __gthread_cond_timedwait (__abs_timeout=0x7ff42a187a30, __mutex=<optimized out>, __cond=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872; #2 std::condition_variable::__wait_until_imp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:4360,Safety,Detect,DetectorsBase,4360,"ace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1265; #12 0x00007ff4494ae069 in TBranchElement::FillImpl (this=0x7ff425170850, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1290; #13 0x00007ff44f4faf89 in TBranch::Fill (this=0x7ff425170850) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ROOT/v6-24-02-local5/include/TBranch.h:201; #14 o2::base::DetImpl<o2::trd::Detector>::mergeAndAdjustHits<std::vector<o2::trd::Hit, std::allocator<o2::trd::Hit> > > (this=this; entry=0x3e69680, brname=..., origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:403; #15 0x00007ff44f4fb507 in o2::base::DetImpl<o2::trd::Detector>::mergeHitEntries (this=0x3e69680, origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:422; #16 0x00000000004456e1 in o2::devices::O2HitMerger::mergeAndFlushData (this=0x162d640, eventID=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:745; #17 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x7ad9e10) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80; #18 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0; #19 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 5 (Thread 0x7ff42a18e700 (LWP 25519) ""o2-sim-hit-merg""):; #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0; #1 0x00007ff44aca29d3 in __gthread_cond_timedwait (__abs_timeout=0x7ff42a187a30, __mutex=<optimized out>, __cond=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872; #2 std::condition_variable::__wait_until_imp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:4374,Safety,Detect,Detector,4374,"ace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1265; #12 0x00007ff4494ae069 in TBranchElement::FillImpl (this=0x7ff425170850, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1290; #13 0x00007ff44f4faf89 in TBranch::Fill (this=0x7ff425170850) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ROOT/v6-24-02-local5/include/TBranch.h:201; #14 o2::base::DetImpl<o2::trd::Detector>::mergeAndAdjustHits<std::vector<o2::trd::Hit, std::allocator<o2::trd::Hit> > > (this=this; entry=0x3e69680, brname=..., origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:403; #15 0x00007ff44f4fb507 in o2::base::DetImpl<o2::trd::Detector>::mergeHitEntries (this=0x3e69680, origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:422; #16 0x00000000004456e1 in o2::devices::O2HitMerger::mergeAndFlushData (this=0x162d640, eventID=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:745; #17 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x7ad9e10) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80; #18 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0; #19 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 5 (Thread 0x7ff42a18e700 (LWP 25519) ""o2-sim-hit-merg""):; #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0; #1 0x00007ff44aca29d3 in __gthread_cond_timedwait (__abs_timeout=0x7ff42a187a30, __mutex=<optimized out>, __cond=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872; #2 std::condition_variable::__wait_until_imp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:52,Security,access,access,52,"ALICE has reported regular crashes due to MT unsafe access in `TDirectory::RegisterGDirectory`. Example backtrace:. ```. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================. Thread 6 (Thread 0x7ff42998d700 (LWP 56550) ""o2-sim-hit-merg""):; #0 0x00007ff44b42eef6 in longest_match () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1; #1 0x00007ff44b42fd58 in deflate_fast () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1; #2 0x00007ff44b430822 in deflate () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1; #3 0x00007ff447cbe8a5 in R__zipZLIB (irep=0x7ff4299869a8, tgt=0x7ff3c94c924f ""ZL\b\177\272"", tgtsize=0x7ff4299869ac, src=0x7ff4299868c0 ""\177"", srcsize=0x7ff4299869ac, cxlevel=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/zip/src/RZip.cxx:213; #4 R__zipMultipleAlgorithm (compressionAlgorithm=<optimized out>, irep=0x7ff4299869a8, tgt=0x7ff3c94c924f ""ZL\b\177\272"", tgtsize=0x7ff4299869ac, src=0x7ff4299868c0 ""\177"", srcsize=0x7ff4299869ac, cxlevel=32756) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/zip/src/RZip.cxx:109; #5 R__zipMultipleAlgorithm (cxlevel=cxlevel; entry=1, srcsize=srcsize; entry=0x7ff4299869ac, src=src; entry=0x7ff3d000007f ""\300Ro\211\300=\200I\300>\277\341\300D'\254\300F\343\016\300Ix\232\300K\333^\300M\340!\300O\255T\300P\320\344\300Q\254\250\300<\225B\300S,g\300S\313\061\300Tf\250\300TӾ\300U.\b\300U\027\\\300T}d\300S\200\344\300R\220\234\300QT}\300D\241\221\300V\a\360\300U\246\060\300S; \300\300QV\026\300OE\345\300M\020\314\300J\365\f\300I(D\300G\250X\300FE6\300P\r\376\300B\240\300\300; zV\300>\225\324\300=\036\206\300<8t\300;\252d\300;v\376\300;\210w\300;\336J\300HǬ\300\071\322+\300:\205\232\300;\231H\300<\367\a\300=\350\252\300?"", <inco",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:52712,Security,access,accessible,52712,"r()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0; entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243; #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720; #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157; #36 fair::mq::fsm::Machine_::ProcessWork (this=this; entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205; #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373; #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364; #39 fair::mq::DeviceRunner::Run (this=this; entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182; #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQDevice.h:51; ===========================================================; ```. For the record (not publicly accessible) ALICE bug reports:. * https://alice.its.cern.ch/jira/browse/O2-2372; * https://alice.its.cern.ch/jira/browse/O2-2532",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:7094,Testability,Log,LogSocketRates,7094,", __atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:158; #5 std::condition_variable::wait_for<long int, std::ratio<1, 1000>, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__rtime=..., __rtime=..., __p=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:185; #6 fair::mq::StateMachine::WaitForPendingStateFor (this=this; entry=0x162d700, durationInMs=durationInMs; entry=1000) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:364; #7 0x00007ff44b22f882 in FairMQDevice::WaitFor<long, std::ratio<1l, 1l> > (duration=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/chrono:422; #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717; #9 0x00007ff44b230e6d in std::__invoke_impl<void, void (FairMQDevice::*)(), FairMQDevice*> (__f=<optimized out>, __t=<optimized out>, __f=<optimized out>, __t=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:73; #10 std::__invoke<void (FairMQDevice::*)(), FairMQDevice*> (__fn=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95; #11 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::_M_invoke<0ul, 1ul> (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:264; #12 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::operator() (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8933:3653,Availability,down,download,3653,"hold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>; import cppyy; File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>; raise ImportError(; ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9; Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld/broken; ```. This issue was introduced in https://github.com/root-project/root/commit/aefe374411d9bfecaa4a9eb764aee05f7b76a8e6 as the patch uses `CMAKE_SHARED_LIBRARY_SUFFIX` despite the fact that the suffix is overridden by:. https://github.com/root-project/root/blob/c06ad10a69b6b173fd21692f38394700b635abb0/bindings/pyroot/cppyy/cppyy-backend/CMakeLists.txt#L36-L37. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L37-L48. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L21-L25. ### Expected behavior. `CMAKE_INSTALL_PYTHONDIR` creates the correctly named symlinks for the binaries it installed. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:158,Deployability,install,installed,158,"- [x] Checked for duplicates. ### Describe the bug. As of 6.24.04, building with `CMAKE_INSTALL_PYTHONDIR` on macOS causes pyroot to not be functional as the installed symlink is:. ```; lib/python3.9/site-packages/libcppyy_backend3_9.dylib@ -> ../..//libcppyy_backend3_9.dylib; ```; whereas the actually Python module is in:; ```; lib/libcppyy3_9.6.24.04.so; ```. which causes `import ROOT` to fail: . ```python; Traceback (most recent call last):; File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 60, in <module>; importlib.import_module(libcppyy_mod_name); File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/importlib/__init__.py"", line 127, in import_module; return _bootstrap._gcd_import(name[level:], package, level); File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import; File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load; File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked; ModuleNotFoundError: No module named 'libcppyy3_9'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>; import cppyy; File ""/Users/christopherburr/miniconda3/cond",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:2659,Deployability,patch,patch,2659,"ot_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>; import cppyy; File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>; raise ImportError(; ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9; Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld/broken; ```. This issue was introduced in https://github.com/root-project/root/commit/aefe374411d9bfecaa4a9eb764aee05f7b76a8e6 as the patch uses `CMAKE_SHARED_LIBRARY_SUFFIX` despite the fact that the suffix is overridden by:. https://github.com/root-project/root/blob/c06ad10a69b6b173fd21692f38394700b635abb0/bindings/pyroot/cppyy/cppyy-backend/CMakeLists.txt#L36-L37. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L37-L48. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L21-L25. ### Expected behavior. `CMAKE_INSTALL_PYTHONDIR` creates the correctly named symlinks for the binaries it installed. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:3247,Deployability,install,installed,3247,"hold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>; import cppyy; File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>; raise ImportError(; ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9; Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld/broken; ```. This issue was introduced in https://github.com/root-project/root/commit/aefe374411d9bfecaa4a9eb764aee05f7b76a8e6 as the patch uses `CMAKE_SHARED_LIBRARY_SUFFIX` despite the fact that the suffix is overridden by:. https://github.com/root-project/root/blob/c06ad10a69b6b173fd21692f38394700b635abb0/bindings/pyroot/cppyy/cppyy-backend/CMakeLists.txt#L36-L37. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L37-L48. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L21-L25. ### Expected behavior. `CMAKE_INSTALL_PYTHONDIR` creates the correctly named symlinks for the binaries it installed. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:3635,Deployability,install,install,3635,"hold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>; import cppyy; File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>; raise ImportError(; ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9; Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld/broken; ```. This issue was introduced in https://github.com/root-project/root/commit/aefe374411d9bfecaa4a9eb764aee05f7b76a8e6 as the patch uses `CMAKE_SHARED_LIBRARY_SUFFIX` despite the fact that the suffix is overridden by:. https://github.com/root-project/root/blob/c06ad10a69b6b173fd21692f38394700b635abb0/bindings/pyroot/cppyy/cppyy-backend/CMakeLists.txt#L36-L37. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L37-L48. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L21-L25. ### Expected behavior. `CMAKE_INSTALL_PYTHONDIR` creates the correctly named symlinks for the binaries it installed. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:2404,Testability,Test,Tests,2404,"; ModuleNotFoundError: No module named 'libcppyy3_9'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>; import cppyy; File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>; raise ImportError(; ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9; Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld/broken; ```. This issue was introduced in https://github.com/root-project/root/commit/aefe374411d9bfecaa4a9eb764aee05f7b76a8e6 as the patch uses `CMAKE_SHARED_LIBRARY_SUFFIX` despite the fact that the suffix is overridden by:. https://github.com/root-project/root/blob/c06ad10a69b6b173fd21692f38394700b635abb0/bindings/pyroot/cppyy/cppyy-backend/CMakeLists.txt#L36-L37. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L37-L48. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L21-L25. ### Expected behavior. `CMAKE_INSTALL_PYTHONDIR` creates the correctly named symlinks for the binaries it installed. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Do",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/pull/8934:1221,Availability,avail,available,1221,"The [TDirectory::WriteObject](https://github.com/root-project/root/blob/35b5aaef38b6635e131e7d93a0c96f69bb293b9d/core/base/inc/TDirectory.h#L265-L268) method allows writing objects to files. If the written object actually has a title, this should be discarded because the function doesn't manage it as a TObject-derived instance on purpose. For example, the program below:. ```cpp; int main(){; TFile f{""myfile.root"",""recreate""};; TH1F h{""myhistoname"",""myhistotitle"",100,0,100};; f.WriteObject(&h, h.GetName());; f.Close();; }; ```. When executed creates a file where the object ""h"" gets the default title ""object title"":. ```bash; $ rootls -l myfile.root; TH1F Aug 21 10:41 2021 myhistoname;1 ""object title""; ```. This is because The [TKey constructor that accepts a void pointer](https://github.com/root-project/root/blob/35b5aaef38b6635e131e7d93a0c96f69bb293b9d/io/io/src/TKey.cxx#L299-L300) calls the parent TNamed constructor with a default title, because in general there is no guarantee the object has the interface `GetTitle(),SetTitle()` and there is no extra ""title"" parameter to the constructor. This commit provides a solution by creating a new overload for `TDirectory::WriteObject`, using SFINAE to make it available for types that are derived from TObject. The method redirects to `WriteTObject` instead of `WriteObjectAny`. This way, the correct TKey constructor is called that uses the actual object title. As a result, the example above will now output a file like this:. ```; $ rootls -l myfile.root; TH1F Aug 21 11:00 2021 myhistoname;1 ""myhistotitle""; ```. The already present method is modified with SFINAE as well, to only be available if the type T of the template is not derived from TObject.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8934
https://github.com/root-project/root/pull/8934:1649,Availability,avail,available,1649,"The [TDirectory::WriteObject](https://github.com/root-project/root/blob/35b5aaef38b6635e131e7d93a0c96f69bb293b9d/core/base/inc/TDirectory.h#L265-L268) method allows writing objects to files. If the written object actually has a title, this should be discarded because the function doesn't manage it as a TObject-derived instance on purpose. For example, the program below:. ```cpp; int main(){; TFile f{""myfile.root"",""recreate""};; TH1F h{""myhistoname"",""myhistotitle"",100,0,100};; f.WriteObject(&h, h.GetName());; f.Close();; }; ```. When executed creates a file where the object ""h"" gets the default title ""object title"":. ```bash; $ rootls -l myfile.root; TH1F Aug 21 10:41 2021 myhistoname;1 ""object title""; ```. This is because The [TKey constructor that accepts a void pointer](https://github.com/root-project/root/blob/35b5aaef38b6635e131e7d93a0c96f69bb293b9d/io/io/src/TKey.cxx#L299-L300) calls the parent TNamed constructor with a default title, because in general there is no guarantee the object has the interface `GetTitle(),SetTitle()` and there is no extra ""title"" parameter to the constructor. This commit provides a solution by creating a new overload for `TDirectory::WriteObject`, using SFINAE to make it available for types that are derived from TObject. The method redirects to `WriteTObject` instead of `WriteObjectAny`. This way, the correct TKey constructor is called that uses the actual object title. As a result, the example above will now output a file like this:. ```; $ rootls -l myfile.root; TH1F Aug 21 11:00 2021 myhistoname;1 ""myhistotitle""; ```. The already present method is modified with SFINAE as well, to only be available if the type T of the template is not derived from TObject.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8934
https://github.com/root-project/root/pull/8934:1013,Integrability,interface,interface,1013,"The [TDirectory::WriteObject](https://github.com/root-project/root/blob/35b5aaef38b6635e131e7d93a0c96f69bb293b9d/core/base/inc/TDirectory.h#L265-L268) method allows writing objects to files. If the written object actually has a title, this should be discarded because the function doesn't manage it as a TObject-derived instance on purpose. For example, the program below:. ```cpp; int main(){; TFile f{""myfile.root"",""recreate""};; TH1F h{""myhistoname"",""myhistotitle"",100,0,100};; f.WriteObject(&h, h.GetName());; f.Close();; }; ```. When executed creates a file where the object ""h"" gets the default title ""object title"":. ```bash; $ rootls -l myfile.root; TH1F Aug 21 10:41 2021 myhistoname;1 ""object title""; ```. This is because The [TKey constructor that accepts a void pointer](https://github.com/root-project/root/blob/35b5aaef38b6635e131e7d93a0c96f69bb293b9d/io/io/src/TKey.cxx#L299-L300) calls the parent TNamed constructor with a default title, because in general there is no guarantee the object has the interface `GetTitle(),SetTitle()` and there is no extra ""title"" parameter to the constructor. This commit provides a solution by creating a new overload for `TDirectory::WriteObject`, using SFINAE to make it available for types that are derived from TObject. The method redirects to `WriteTObject` instead of `WriteObjectAny`. This way, the correct TKey constructor is called that uses the actual object title. As a result, the example above will now output a file like this:. ```; $ rootls -l myfile.root; TH1F Aug 21 11:00 2021 myhistoname;1 ""myhistotitle""; ```. The already present method is modified with SFINAE as well, to only be available if the type T of the template is not derived from TObject.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8934
https://github.com/root-project/root/issues/8935:72,Modifiability,variab,variable-bin-sizes,72,"As discussed in https://root-forum.cern.ch/t/binned-likelihood-fit-with-variable-bin-sizes, it is not trivial in RooFit to make a plot where a data histogram and a `RooHistPdf` with non-uniform binning are compared: the data is given in event counts per bin, and the RooHistPdf gives the expected counts *per bin volume*. A way to easily plot a RooHistPdf without bin-width correction should be implemented for such data comparisons. Possibly with a new RooFit command argument that could be named `BinVolumeCorrection`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8935
https://github.com/root-project/root/pull/8937:57,Integrability,protocol,protocolbuffers,57,"Fix protobuf warnings as suggested in https://github.com/protocolbuffers/protobuf/issues/7140#issuecomment-599467033. The warnings should however be fixed in the latest protobuf version, 3.17",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8937
https://github.com/root-project/root/pull/8938:701,Deployability,update,updated,701,"distributed RDataFrame tests that use `pyspark` will report `ResourceWarning`s like the ones seen here; https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:; ```py; $: cat sparktest.py ; import pyspark; import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y); ```. ```bash; $: python sparktest.py ; 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable; Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties; Setting default log level to ""WARN"".; To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).; /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>; self._sock = None; ResourceWarning: Enable tracemalloc to get the object allocation traceback; ```. This commit adds an extra call in the setup part of unittests that",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:1206,Energy Efficiency,reduce,reduce,1206,"https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:; ```py; $: cat sparktest.py ; import pyspark; import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y); ```. ```bash; $: python sparktest.py ; 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable; Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties; Setting default log level to ""WARN"".; To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).; /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>; self._sock = None; ResourceWarning: Enable tracemalloc to get the object allocation traceback; ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:1321,Performance,load,load,1321,"https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:; ```py; $: cat sparktest.py ; import pyspark; import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y); ```. ```bash; $: python sparktest.py ; 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable; Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties; Setting default log level to ""WARN"".; To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).; /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>; self._sock = None; ResourceWarning: Enable tracemalloc to get the object allocation traceback; ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:23,Testability,test,tests,23,"distributed RDataFrame tests that use `pyspark` will report `ResourceWarning`s like the ones seen here; https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:; ```py; $: cat sparktest.py ; import pyspark; import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y); ```. ```bash; $: python sparktest.py ; 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable; Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties; Setting default log level to ""WARN"".; To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).; /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>; self._sock = None; ResourceWarning: Enable tracemalloc to get the object allocation traceback; ```. This commit adds an extra call in the setup part of unittests that",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:226,Testability,test,testReport,226,"distributed RDataFrame tests that use `pyspark` will report `ResourceWarning`s like the ones seen here; https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:; ```py; $: cat sparktest.py ; import pyspark; import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y); ```. ```bash; $: python sparktest.py ; 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable; Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties; Setting default log level to ""WARN"".; To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).; /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>; self._sock = None; ResourceWarning: Enable tracemalloc to get the object allocation traceback; ```. This commit adds an extra call in the setup part of unittests that",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:1511,Testability,log,log,1511,"https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:; ```py; $: cat sparktest.py ; import pyspark; import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y); ```. ```bash; $: python sparktest.py ; 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable; Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties; Setting default log level to ""WARN"".; To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).; /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>; self._sock = None; ResourceWarning: Enable tracemalloc to get the object allocation traceback; ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:1543,Testability,log,logging,1543,"https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:; ```py; $: cat sparktest.py ; import pyspark; import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y); ```. ```bash; $: python sparktest.py ; 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable; Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties; Setting default log level to ""WARN"".; To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).; /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>; self._sock = None; ResourceWarning: Enable tracemalloc to get the object allocation traceback; ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:2098,Testability,test,tests,2098,"https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:; ```py; $: cat sparktest.py ; import pyspark; import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y); ```. ```bash; $: python sparktest.py ; 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable; Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties; Setting default log level to ""WARN"".; To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).; /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>; self._sock = None; ResourceWarning: Enable tracemalloc to get the object allocation traceback; ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:1078,Usability,simpl,simplefilter,1078,"here; https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:; ```py; $: cat sparktest.py ; import pyspark; import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y); ```. ```bash; $: python sparktest.py ; 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable; Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties; Setting default log level to ""WARN"".; To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).; /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>; self._sock = None; ResourceWarning: Enable tracemalloc to get the object allocation traceback; ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/issues/8939:68,Deployability,install,install,68,"Although the [docs for building ROOT from source](https://root.cern/install/build_from_source/#setting-the-c-standard) suggest that the `C++20` standard should be supported, the software won't build with this setting. The reason is that the file `cmake/modules/CheckCompiler.cmake` hasn't been updated on the `latest-stable` branch within a year. Only for the `master`-branch `C++20` support has been added in #8399. So either the docs at https://github.com/root-project/web/blob/main/install/build_from_source.md#setting-the-c-standard should be fixed or the support for C++20 should be merged into `latest-stable` (which I personally would prefer, though I don't know if this would break something).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8939
https://github.com/root-project/root/issues/8939:294,Deployability,update,updated,294,"Although the [docs for building ROOT from source](https://root.cern/install/build_from_source/#setting-the-c-standard) suggest that the `C++20` standard should be supported, the software won't build with this setting. The reason is that the file `cmake/modules/CheckCompiler.cmake` hasn't been updated on the `latest-stable` branch within a year. Only for the `master`-branch `C++20` support has been added in #8399. So either the docs at https://github.com/root-project/web/blob/main/install/build_from_source.md#setting-the-c-standard should be fixed or the support for C++20 should be merged into `latest-stable` (which I personally would prefer, though I don't know if this would break something).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8939
https://github.com/root-project/root/issues/8939:485,Deployability,install,install,485,"Although the [docs for building ROOT from source](https://root.cern/install/build_from_source/#setting-the-c-standard) suggest that the `C++20` standard should be supported, the software won't build with this setting. The reason is that the file `cmake/modules/CheckCompiler.cmake` hasn't been updated on the `latest-stable` branch within a year. Only for the `master`-branch `C++20` support has been added in #8399. So either the docs at https://github.com/root-project/web/blob/main/install/build_from_source.md#setting-the-c-standard should be fixed or the support for C++20 should be merged into `latest-stable` (which I personally would prefer, though I don't know if this would break something).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8939
https://github.com/root-project/root/pull/8940:248,Energy Efficiency,reduce,reduce,248,"This is a follow up on https://github.com/root-project/root/pull/8694, implementing the requests made in the PR review. More details in the commit messages. Turning some observables into parameters in the GradMinimizer.BranchingPDF test should not reduce the coverage of the test, because for the minimizer the model actually gets more complex where there are more parameters.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8940
https://github.com/root-project/root/pull/8940:147,Integrability,message,messages,147,"This is a follow up on https://github.com/root-project/root/pull/8694, implementing the requests made in the PR review. More details in the commit messages. Turning some observables into parameters in the GradMinimizer.BranchingPDF test should not reduce the coverage of the test, because for the minimizer the model actually gets more complex where there are more parameters.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8940
https://github.com/root-project/root/pull/8940:232,Testability,test,test,232,"This is a follow up on https://github.com/root-project/root/pull/8694, implementing the requests made in the PR review. More details in the commit messages. Turning some observables into parameters in the GradMinimizer.BranchingPDF test should not reduce the coverage of the test, because for the minimizer the model actually gets more complex where there are more parameters.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8940
https://github.com/root-project/root/pull/8940:275,Testability,test,test,275,"This is a follow up on https://github.com/root-project/root/pull/8694, implementing the requests made in the PR review. More details in the commit messages. Turning some observables into parameters in the GradMinimizer.BranchingPDF test should not reduce the coverage of the test, because for the minimizer the model actually gets more complex where there are more parameters.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8940
https://github.com/root-project/root/pull/8941:309,Deployability,update,updated,309,"# This Pull request:. This pull request allows to root as a sub-project using `FetchContent` . ## Changes or fixes:; It's mainly a change of cmake variable CMAKE_SOURCE_DIR to PROJECT_SOURCE_DIR etc.. ## Checklist:. - [X ] tested changes locally ; Was compiling both in ""standard"" and ""FetchContent ""; - [ X] updated the docs (if necessary) ; - (not needed I think ?). This PR fixes #8923",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8941
https://github.com/root-project/root/pull/8941:147,Modifiability,variab,variable,147,"# This Pull request:. This pull request allows to root as a sub-project using `FetchContent` . ## Changes or fixes:; It's mainly a change of cmake variable CMAKE_SOURCE_DIR to PROJECT_SOURCE_DIR etc.. ## Checklist:. - [X ] tested changes locally ; Was compiling both in ""standard"" and ""FetchContent ""; - [ X] updated the docs (if necessary) ; - (not needed I think ?). This PR fixes #8923",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8941
https://github.com/root-project/root/pull/8941:223,Testability,test,tested,223,"# This Pull request:. This pull request allows to root as a sub-project using `FetchContent` . ## Changes or fixes:; It's mainly a change of cmake variable CMAKE_SOURCE_DIR to PROJECT_SOURCE_DIR etc.. ## Checklist:. - [X ] tested changes locally ; Was compiling both in ""standard"" and ""FetchContent ""; - [ X] updated the docs (if necessary) ; - (not needed I think ?). This PR fixes #8923",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8941
https://github.com/root-project/root/issues/8942:806,Availability,error,error,806,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. I have my own project that uses ROOT (and Python); my CMakeList file contains following ilnes ; ```; find_package(ROOT 6 CONFIG REQUIRED ); ...; find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```; And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```; -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""); ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. for ROOT-based project ; cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. cmake should find NumPy . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. 1. lxplus.cern.ch ; 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh; 3. any CMAKe project with these two ilnes included ; ```; find_package(ROOT 6 CONFIG REQUIRED ); ...; find_package(Python3 3.6.9 COMPONENTS Interpreter De",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8942
https://github.com/root-project/root/issues/8942:2136,Availability,down,download,2136,"e very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. I have my own project that uses ROOT (and Python); my CMakeList file contains following ilnes ; ```; find_package(ROOT 6 CONFIG REQUIRED ); ...; find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```; And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```; -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""); ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. for ROOT-based project ; cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. cmake should find NumPy . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. 1. lxplus.cern.ch ; 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh; 3. any CMAKe project with these two ilnes included ; ```; find_package(ROOT 6 CONFIG REQUIRED ); ...; find_package(Python3 3.6.9 COMPONENTS Interpreter Development NumPy); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8942
https://github.com/root-project/root/issues/8942:2118,Deployability,install,install,2118,"e very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. I have my own project that uses ROOT (and Python); my CMakeList file contains following ilnes ; ```; find_package(ROOT 6 CONFIG REQUIRED ); ...; find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```; And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```; -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""); ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. for ROOT-based project ; cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. cmake should find NumPy . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. 1. lxplus.cern.ch ; 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh; 3. any CMAKe project with these two ilnes included ; ```; find_package(ROOT 6 CONFIG REQUIRED ); ...; find_package(Python3 3.6.9 COMPONENTS Interpreter Development NumPy); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8942
https://github.com/root-project/root/issues/8942:482,Modifiability,CONFIG,CONFIG,482,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. I have my own project that uses ROOT (and Python); my CMakeList file contains following ilnes ; ```; find_package(ROOT 6 CONFIG REQUIRED ); ...; find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```; And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```; -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""); ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. for ROOT-based project ; cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. cmake should find NumPy . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. 1. lxplus.cern.ch ; 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh; 3. any CMAKe project with these two ilnes included ; ```; find_package(ROOT 6 CONFIG REQUIRED ); ...; find_package(Python3 3.6.9 COMPONENTS Interpreter De",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8942
https://github.com/root-project/root/issues/8942:1925,Modifiability,CONFIG,CONFIG,1925,"e very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. I have my own project that uses ROOT (and Python); my CMakeList file contains following ilnes ; ```; find_package(ROOT 6 CONFIG REQUIRED ); ...; find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```; And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```; -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""); ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. for ROOT-based project ; cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. cmake should find NumPy . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. 1. lxplus.cern.ch ; 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh; 3. any CMAKe project with these two ilnes included ; ```; find_package(ROOT 6 CONFIG REQUIRED ); ...; find_package(Python3 3.6.9 COMPONENTS Interpreter Development NumPy); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8942
https://github.com/root-project/root/issues/8942:1075,Usability,clear,clear,1075,"t/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. I have my own project that uses ROOT (and Python); my CMakeList file contains following ilnes ; ```; find_package(ROOT 6 CONFIG REQUIRED ); ...; find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```; And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```; -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""); ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. for ROOT-based project ; cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. cmake should find NumPy . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. 1. lxplus.cern.ch ; 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh; 3. any CMAKe project with these two ilnes included ; ```; find_package(ROOT 6 CONFIG REQUIRED ); ...; find_package(Python3 3.6.9 COMPONENTS Interpreter Development NumPy); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtain",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8942
https://github.com/root-project/root/issues/8942:1160,Usability,clear,clear,1160,"jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. I have my own project that uses ROOT (and Python); my CMakeList file contains following ilnes ; ```; find_package(ROOT 6 CONFIG REQUIRED ); ...; find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```; And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```; -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""); ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. for ROOT-based project ; cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. cmake should find NumPy . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. 1. lxplus.cern.ch ; 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh; 3. any CMAKe project with these two ilnes included ; ```; find_package(ROOT 6 CONFIG REQUIRED ); ...; find_package(Python3 3.6.9 COMPONENTS Interpreter Development NumPy); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8942
https://github.com/root-project/root/issues/8942:1368,Usability,clear,clear,1368,"e very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. I have my own project that uses ROOT (and Python); my CMakeList file contains following ilnes ; ```; find_package(ROOT 6 CONFIG REQUIRED ); ...; find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```; And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```; -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""); ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. for ROOT-based project ; cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. cmake should find NumPy . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. 1. lxplus.cern.ch ; 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh; 3. any CMAKe project with these two ilnes included ; ```; find_package(ROOT 6 CONFIG REQUIRED ); ...; find_package(Python3 3.6.9 COMPONENTS Interpreter Development NumPy); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8942
https://github.com/root-project/root/issues/8946:239,Availability,error,error,239,"- [x] Checked for duplicates. ### Describe the bug; When using AddressSanitizer compiler flag, i.e. -fsanitize=address and when RooMinimizer is called multiple times (in a loop) to minimize a result of createNLL(), the sanitizer throws an error of type AddressSanitizer: alloc-dealloc-mismatch (malloc vs operator delete). ### Expected behavior; This error should not appear as it points to wrong memory handling. ### To Reproduce; A minimum example is provided in the following gitlab repository: https://gitlab.cern.ch/tdado/roominimizerasanexample. 1. Clone the repository; 2. run ""make""; 3. run the code with ./example . ### Setup; 1. Tested with ROOT 6.22.02 and 6.22.06; 2. Ubuntu (22.02) and CENTOS7 - lxplus (22.06); 3. ROOT installed from LCG (lxplus) or/and using the precombined binary (ubuntu). ### Additional context; The error does not appear if the minimizer is called only once.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8946
https://github.com/root-project/root/issues/8946:351,Availability,error,error,351,"- [x] Checked for duplicates. ### Describe the bug; When using AddressSanitizer compiler flag, i.e. -fsanitize=address and when RooMinimizer is called multiple times (in a loop) to minimize a result of createNLL(), the sanitizer throws an error of type AddressSanitizer: alloc-dealloc-mismatch (malloc vs operator delete). ### Expected behavior; This error should not appear as it points to wrong memory handling. ### To Reproduce; A minimum example is provided in the following gitlab repository: https://gitlab.cern.ch/tdado/roominimizerasanexample. 1. Clone the repository; 2. run ""make""; 3. run the code with ./example . ### Setup; 1. Tested with ROOT 6.22.02 and 6.22.06; 2. Ubuntu (22.02) and CENTOS7 - lxplus (22.06); 3. ROOT installed from LCG (lxplus) or/and using the precombined binary (ubuntu). ### Additional context; The error does not appear if the minimizer is called only once.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8946
https://github.com/root-project/root/issues/8946:835,Availability,error,error,835,"- [x] Checked for duplicates. ### Describe the bug; When using AddressSanitizer compiler flag, i.e. -fsanitize=address and when RooMinimizer is called multiple times (in a loop) to minimize a result of createNLL(), the sanitizer throws an error of type AddressSanitizer: alloc-dealloc-mismatch (malloc vs operator delete). ### Expected behavior; This error should not appear as it points to wrong memory handling. ### To Reproduce; A minimum example is provided in the following gitlab repository: https://gitlab.cern.ch/tdado/roominimizerasanexample. 1. Clone the repository; 2. run ""make""; 3. run the code with ./example . ### Setup; 1. Tested with ROOT 6.22.02 and 6.22.06; 2. Ubuntu (22.02) and CENTOS7 - lxplus (22.06); 3. ROOT installed from LCG (lxplus) or/and using the precombined binary (ubuntu). ### Additional context; The error does not appear if the minimizer is called only once.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8946
https://github.com/root-project/root/issues/8946:733,Deployability,install,installed,733,"- [x] Checked for duplicates. ### Describe the bug; When using AddressSanitizer compiler flag, i.e. -fsanitize=address and when RooMinimizer is called multiple times (in a loop) to minimize a result of createNLL(), the sanitizer throws an error of type AddressSanitizer: alloc-dealloc-mismatch (malloc vs operator delete). ### Expected behavior; This error should not appear as it points to wrong memory handling. ### To Reproduce; A minimum example is provided in the following gitlab repository: https://gitlab.cern.ch/tdado/roominimizerasanexample. 1. Clone the repository; 2. run ""make""; 3. run the code with ./example . ### Setup; 1. Tested with ROOT 6.22.02 and 6.22.06; 2. Ubuntu (22.02) and CENTOS7 - lxplus (22.06); 3. ROOT installed from LCG (lxplus) or/and using the precombined binary (ubuntu). ### Additional context; The error does not appear if the minimizer is called only once.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8946
https://github.com/root-project/root/issues/8946:219,Security,sanitiz,sanitizer,219,"- [x] Checked for duplicates. ### Describe the bug; When using AddressSanitizer compiler flag, i.e. -fsanitize=address and when RooMinimizer is called multiple times (in a loop) to minimize a result of createNLL(), the sanitizer throws an error of type AddressSanitizer: alloc-dealloc-mismatch (malloc vs operator delete). ### Expected behavior; This error should not appear as it points to wrong memory handling. ### To Reproduce; A minimum example is provided in the following gitlab repository: https://gitlab.cern.ch/tdado/roominimizerasanexample. 1. Clone the repository; 2. run ""make""; 3. run the code with ./example . ### Setup; 1. Tested with ROOT 6.22.02 and 6.22.06; 2. Ubuntu (22.02) and CENTOS7 - lxplus (22.06); 3. ROOT installed from LCG (lxplus) or/and using the precombined binary (ubuntu). ### Additional context; The error does not appear if the minimizer is called only once.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8946
https://github.com/root-project/root/issues/8946:639,Testability,Test,Tested,639,"- [x] Checked for duplicates. ### Describe the bug; When using AddressSanitizer compiler flag, i.e. -fsanitize=address and when RooMinimizer is called multiple times (in a loop) to minimize a result of createNLL(), the sanitizer throws an error of type AddressSanitizer: alloc-dealloc-mismatch (malloc vs operator delete). ### Expected behavior; This error should not appear as it points to wrong memory handling. ### To Reproduce; A minimum example is provided in the following gitlab repository: https://gitlab.cern.ch/tdado/roominimizerasanexample. 1. Clone the repository; 2. run ""make""; 3. run the code with ./example . ### Setup; 1. Tested with ROOT 6.22.02 and 6.22.06; 2. Ubuntu (22.02) and CENTOS7 - lxplus (22.06); 3. ROOT installed from LCG (lxplus) or/and using the precombined binary (ubuntu). ### Additional context; The error does not appear if the minimizer is called only once.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8946
https://github.com/root-project/root/issues/8950:1181,Energy Efficiency,Monitor,Monitoring,1181,"ding of the Doxygen documentation within a normal build. Right now, it has to be done manually in the source directory. ### Optional: share how it could be improved; In addition, cmake Options can be easily used to 'tune' the input files, see https://aliceo2group.github.io/advanced/doxygen.html, rather than manually having to edit the Doxyfile as indicated in https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. Some flags like:; ```; BUILD_DOCS [OFF]; BUILD_DOCS_CORE [ON]; BUILD_DOCS_GRAF2D [OFF]; BUILD_DOCS_QHP [OFF]; ...; ```; with the configurable QHP generation, see, https://github.com/root-project/root/issues/8781. and then calling:. `doxygen_add_docs(...)` with all the variables correctly set to generate the proper Doxyfile. This requires some (one-time) manual copy work from the actual Doxyfile to the CMakeLists.txt, but it will look clean in the end. This is how ALICE experiment is doing it, take a look:; https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22. Alternatively, one could just modify-on-the-fly the preexisting Doxyfile file as follows:. ```; set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile); set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile); configure_file(${doxyfile_in} ${doxyfile} @ONLY); add_custom_command(; OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp; DEPENDS ${doxyfile} ${HEADER_FILES}; WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}; COMMAND sed ""s;INPUT =;INPUT = ${MY_NEW_INPUT_FILES}"" ${doxyfile} | ${DOXYGEN_EXECUTABLE} -; COMMAND cmake -E touch ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp; COMMENT ""Generating API documentation with Doxygen""; VERBATIM); ```. ### To Reproduce; https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8950
https://github.com/root-project/root/issues/8950:1549,Integrability,DEPEND,DEPENDS,1549," rather than manually having to edit the Doxyfile as indicated in https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. Some flags like:; ```; BUILD_DOCS [OFF]; BUILD_DOCS_CORE [ON]; BUILD_DOCS_GRAF2D [OFF]; BUILD_DOCS_QHP [OFF]; ...; ```; with the configurable QHP generation, see, https://github.com/root-project/root/issues/8781. and then calling:. `doxygen_add_docs(...)` with all the variables correctly set to generate the proper Doxyfile. This requires some (one-time) manual copy work from the actual Doxyfile to the CMakeLists.txt, but it will look clean in the end. This is how ALICE experiment is doing it, take a look:; https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22. Alternatively, one could just modify-on-the-fly the preexisting Doxyfile file as follows:. ```; set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile); set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile); configure_file(${doxyfile_in} ${doxyfile} @ONLY); add_custom_command(; OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp; DEPENDS ${doxyfile} ${HEADER_FILES}; WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}; COMMAND sed ""s;INPUT =;INPUT = ${MY_NEW_INPUT_FILES}"" ${doxyfile} | ${DOXYGEN_EXECUTABLE} -; COMMAND cmake -E touch ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp; COMMENT ""Generating API documentation with Doxygen""; VERBATIM); ```. ### To Reproduce; https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 17 2021, 10:49:42 |; | From heads/master@v6-25-01-861-g5ea261143f |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; https://github.com/root-project/root/issues/8781",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8950
https://github.com/root-project/root/issues/8950:766,Modifiability,config,configurable,766,"### Explain what you would like to see improved; As a follow-up of https://github.com/root-project/root/issues/8947, it would be nice to have a CMake flag that allows you to turn on the building of the Doxygen documentation within a normal build. Right now, it has to be done manually in the source directory. ### Optional: share how it could be improved; In addition, cmake Options can be easily used to 'tune' the input files, see https://aliceo2group.github.io/advanced/doxygen.html, rather than manually having to edit the Doxyfile as indicated in https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. Some flags like:; ```; BUILD_DOCS [OFF]; BUILD_DOCS_CORE [ON]; BUILD_DOCS_GRAF2D [OFF]; BUILD_DOCS_QHP [OFF]; ...; ```; with the configurable QHP generation, see, https://github.com/root-project/root/issues/8781. and then calling:. `doxygen_add_docs(...)` with all the variables correctly set to generate the proper Doxyfile. This requires some (one-time) manual copy work from the actual Doxyfile to the CMakeLists.txt, but it will look clean in the end. This is how ALICE experiment is doing it, take a look:; https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22. Alternatively, one could just modify-on-the-fly the preexisting Doxyfile file as follows:. ```; set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile); set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile); configure_file(${doxyfile_in} ${doxyfile} @ONLY); add_custom_command(; OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp; DEPENDS ${doxyfile} ${HEADER_FILES}; WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}; COMMAND sed ""s;INPUT =;INPUT = ${MY_NEW_INPUT_FILES}"" ${doxyfile} | ${DOXYGEN_EXECUTABLE} -; COMMAND cmake -E touch ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp; COMMENT ""Generating API documentation with Doxygen""; VERBATIM); ```. ### To Reproduce; https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. ### Setup; ```; ---------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8950
https://github.com/root-project/root/issues/8950:906,Modifiability,variab,variables,906,"### Explain what you would like to see improved; As a follow-up of https://github.com/root-project/root/issues/8947, it would be nice to have a CMake flag that allows you to turn on the building of the Doxygen documentation within a normal build. Right now, it has to be done manually in the source directory. ### Optional: share how it could be improved; In addition, cmake Options can be easily used to 'tune' the input files, see https://aliceo2group.github.io/advanced/doxygen.html, rather than manually having to edit the Doxyfile as indicated in https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. Some flags like:; ```; BUILD_DOCS [OFF]; BUILD_DOCS_CORE [ON]; BUILD_DOCS_GRAF2D [OFF]; BUILD_DOCS_QHP [OFF]; ...; ```; with the configurable QHP generation, see, https://github.com/root-project/root/issues/8781. and then calling:. `doxygen_add_docs(...)` with all the variables correctly set to generate the proper Doxyfile. This requires some (one-time) manual copy work from the actual Doxyfile to the CMakeLists.txt, but it will look clean in the end. This is how ALICE experiment is doing it, take a look:; https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22. Alternatively, one could just modify-on-the-fly the preexisting Doxyfile file as follows:. ```; set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile); set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile); configure_file(${doxyfile_in} ${doxyfile} @ONLY); add_custom_command(; OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp; DEPENDS ${doxyfile} ${HEADER_FILES}; WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}; COMMAND sed ""s;INPUT =;INPUT = ${MY_NEW_INPUT_FILES}"" ${doxyfile} | ${DOXYGEN_EXECUTABLE} -; COMMAND cmake -E touch ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp; COMMENT ""Generating API documentation with Doxygen""; VERBATIM); ```. ### To Reproduce; https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. ### Setup; ```; ---------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8950
https://github.com/root-project/root/issues/8950:406,Performance,tune,tune,406,"### Explain what you would like to see improved; As a follow-up of https://github.com/root-project/root/issues/8947, it would be nice to have a CMake flag that allows you to turn on the building of the Doxygen documentation within a normal build. Right now, it has to be done manually in the source directory. ### Optional: share how it could be improved; In addition, cmake Options can be easily used to 'tune' the input files, see https://aliceo2group.github.io/advanced/doxygen.html, rather than manually having to edit the Doxyfile as indicated in https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. Some flags like:; ```; BUILD_DOCS [OFF]; BUILD_DOCS_CORE [ON]; BUILD_DOCS_GRAF2D [OFF]; BUILD_DOCS_QHP [OFF]; ...; ```; with the configurable QHP generation, see, https://github.com/root-project/root/issues/8781. and then calling:. `doxygen_add_docs(...)` with all the variables correctly set to generate the proper Doxyfile. This requires some (one-time) manual copy work from the actual Doxyfile to the CMakeLists.txt, but it will look clean in the end. This is how ALICE experiment is doing it, take a look:; https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22. Alternatively, one could just modify-on-the-fly the preexisting Doxyfile file as follows:. ```; set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile); set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile); configure_file(${doxyfile_in} ${doxyfile} @ONLY); add_custom_command(; OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp; DEPENDS ${doxyfile} ${HEADER_FILES}; WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}; COMMAND sed ""s;INPUT =;INPUT = ${MY_NEW_INPUT_FILES}"" ${doxyfile} | ${DOXYGEN_EXECUTABLE} -; COMMAND cmake -E touch ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp; COMMENT ""Generating API documentation with Doxygen""; VERBATIM); ```. ### To Reproduce; https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. ### Setup; ```; ---------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8950
https://github.com/root-project/root/issues/8952:281,Availability,recover,recovered,281,"### Is your feature request related to a problem? Please describe.; I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"".; When merging those files with hadd there are multiple messages displayed, like:; ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798; Warning in <TFile::Init>: successfully recovered 21 keys; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Source file 2: ppfx_me000z-200i_run_526.root; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Target path: out.root:/; hadd Target path: out.root:/nom; hadd Target path: out.root:/nom/parent; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107; Error in <TBufferFile::CheckByteCount>: object of class ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:399,Availability,Recover,Recover,399,"### Is your feature request related to a problem? Please describe.; I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"".; When merging those files with hadd there are multiple messages displayed, like:; ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798; Warning in <TFile::Init>: successfully recovered 21 keys; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Source file 2: ppfx_me000z-200i_run_526.root; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Target path: out.root:/; hadd Target path: out.root:/nom; hadd Target path: out.root:/nom/parent; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107; Error in <TBufferFile::CheckByteCount>: object of class ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:439,Availability,recover,recovered,439,"### Is your feature request related to a problem? Please describe.; I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"".; When merging those files with hadd there are multiple messages displayed, like:; ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798; Warning in <TFile::Init>: successfully recovered 21 keys; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Source file 2: ppfx_me000z-200i_run_526.root; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Target path: out.root:/; hadd Target path: out.root:/nom; hadd Target path: out.root:/nom/parent; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107; Error in <TBufferFile::CheckByteCount>: object of class ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:519,Availability,Recover,Recover,519,"### Is your feature request related to a problem? Please describe.; I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"".; When merging those files with hadd there are multiple messages displayed, like:; ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798; Warning in <TFile::Init>: successfully recovered 21 keys; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Source file 2: ppfx_me000z-200i_run_526.root; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Target path: out.root:/; hadd Target path: out.root:/nom; hadd Target path: out.root:/nom/parent; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107; Error in <TBufferFile::CheckByteCount>: object of class ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:559,Availability,recover,recovered,559,"### Is your feature request related to a problem? Please describe.; I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"".; When merging those files with hadd there are multiple messages displayed, like:; ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798; Warning in <TFile::Init>: successfully recovered 21 keys; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Source file 2: ppfx_me000z-200i_run_526.root; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Target path: out.root:/; hadd Target path: out.root:/nom; hadd Target path: out.root:/nom/parent; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107; Error in <TBufferFile::CheckByteCount>: object of class ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:637,Availability,Recover,Recover,637,"### Is your feature request related to a problem? Please describe.; I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"".; When merging those files with hadd there are multiple messages displayed, like:; ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798; Warning in <TFile::Init>: successfully recovered 21 keys; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Source file 2: ppfx_me000z-200i_run_526.root; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Target path: out.root:/; hadd Target path: out.root:/nom; hadd Target path: out.root:/nom/parent; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107; Error in <TBufferFile::CheckByteCount>: object of class ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:677,Availability,recover,recovered,677,"### Is your feature request related to a problem? Please describe.; I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"".; When merging those files with hadd there are multiple messages displayed, like:; ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798; Warning in <TFile::Init>: successfully recovered 21 keys; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Source file 2: ppfx_me000z-200i_run_526.root; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Target path: out.root:/; hadd Target path: out.root:/nom; hadd Target path: out.root:/nom/parent; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107; Error in <TBufferFile::CheckByteCount>: object of class ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:758,Availability,Recover,Recover,758,"### Is your feature request related to a problem? Please describe.; I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"".; When merging those files with hadd there are multiple messages displayed, like:; ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798; Warning in <TFile::Init>: successfully recovered 21 keys; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Source file 2: ppfx_me000z-200i_run_526.root; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Target path: out.root:/; hadd Target path: out.root:/nom; hadd Target path: out.root:/nom/parent; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107; Error in <TBufferFile::CheckByteCount>: object of class ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:798,Availability,recover,recovered,798,"### Is your feature request related to a problem? Please describe.; I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"".; When merging those files with hadd there are multiple messages displayed, like:; ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798; Warning in <TFile::Init>: successfully recovered 21 keys; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Source file 2: ppfx_me000z-200i_run_526.root; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Target path: out.root:/; hadd Target path: out.root:/nom; hadd Target path: out.root:/nom/parent; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107; Error in <TBufferFile::CheckByteCount>: object of class ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:874,Availability,Recover,Recover,874,"### Is your feature request related to a problem? Please describe.; I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"".; When merging those files with hadd there are multiple messages displayed, like:; ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798; Warning in <TFile::Init>: successfully recovered 21 keys; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Source file 2: ppfx_me000z-200i_run_526.root; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Target path: out.root:/; hadd Target path: out.root:/nom; hadd Target path: out.root:/nom/parent; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107; Error in <TBufferFile::CheckByteCount>: object of class ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:914,Availability,recover,recovered,914,"your feature request related to a problem? Please describe.; I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"".; When merging those files with hadd there are multiple messages displayed, like:; ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798; Warning in <TFile::Init>: successfully recovered 21 keys; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Source file 2: ppfx_me000z-200i_run_526.root; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Target path: out.root:/; hadd Target path: out.root:/nom; hadd Target path: out.root:/nom/parent; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107; Error in <TBufferFile::CheckByteCount>: object of class TH1 re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:1012,Availability,recover,recovered,1012,"your feature request related to a problem? Please describe.; I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"".; When merging those files with hadd there are multiple messages displayed, like:; ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798; Warning in <TFile::Init>: successfully recovered 21 keys; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Source file 2: ppfx_me000z-200i_run_526.root; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Target path: out.root:/; hadd Target path: out.root:/nom; hadd Target path: out.root:/nom/parent; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107; Error in <TBufferFile::CheckByteCount>: object of class TH1 re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:1576,Availability,Error,Error,1576,"total at address 5798; Warning in <TFile::Init>: successfully recovered 21 keys; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Source file 2: ppfx_me000z-200i_run_526.root; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Target path: out.root:/; hadd Target path: out.root:/nom; hadd Target path: out.root:/nom/parent; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215; ```; however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process.; When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the issues. ### Describe the solution you'd like; I believe the operation would be much more robust if; 1. hadd produced no output file if any issues with the input files are encountered, except when option `-k` is provided explicitly; 2. hadd generates exit code different from 0 if any issues with input files are encountered. ### Describe alternatives you've considered; A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:1711,Availability,Error,Error,1711,"total at address 5798; Warning in <TFile::Init>: successfully recovered 21 keys; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Source file 2: ppfx_me000z-200i_run_526.root; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Target path: out.root:/; hadd Target path: out.root:/nom; hadd Target path: out.root:/nom/parent; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215; ```; however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process.; When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the issues. ### Describe the solution you'd like; I believe the operation would be much more robust if; 1. hadd produced no output file if any issues with the input files are encountered, except when option `-k` is provided explicitly; 2. hadd generates exit code different from 0 if any issues with input files are encountered. ### Describe alternatives you've considered; A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:1810,Availability,Error,Error,1810,"total at address 5798; Warning in <TFile::Init>: successfully recovered 21 keys; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Source file 2: ppfx_me000z-200i_run_526.root; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Target path: out.root:/; hadd Target path: out.root:/nom; hadd Target path: out.root:/nom/parent; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215; ```; however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process.; When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the issues. ### Describe the solution you'd like; I believe the operation would be much more robust if; 1. hadd produced no output file if any issues with the input files are encountered, except when option `-k` is provided explicitly; 2. hadd generates exit code different from 0 if any issues with input files are encountered. ### Describe alternatives you've considered; A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:1945,Availability,Error,Error,1945,"total at address 5798; Warning in <TFile::Init>: successfully recovered 21 keys; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Source file 2: ppfx_me000z-200i_run_526.root; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Target path: out.root:/; hadd Target path: out.root:/nom; hadd Target path: out.root:/nom/parent; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215; ```; however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process.; When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the issues. ### Describe the solution you'd like; I believe the operation would be much more robust if; 1. hadd produced no output file if any issues with the input files are encountered, except when option `-k` is provided explicitly; 2. hadd generates exit code different from 0 if any issues with input files are encountered. ### Describe alternatives you've considered; A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:2044,Availability,Error,Error,2044,"total at address 5798; Warning in <TFile::Init>: successfully recovered 21 keys; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Source file 2: ppfx_me000z-200i_run_526.root; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Target path: out.root:/; hadd Target path: out.root:/nom; hadd Target path: out.root:/nom/parent; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215; ```; however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process.; When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the issues. ### Describe the solution you'd like; I believe the operation would be much more robust if; 1. hadd produced no output file if any issues with the input files are encountered, except when option `-k` is provided explicitly; 2. hadd generates exit code different from 0 if any issues with input files are encountered. ### Describe alternatives you've considered; A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:2179,Availability,Error,Error,2179,"total at address 5798; Warning in <TFile::Init>: successfully recovered 21 keys; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Source file 2: ppfx_me000z-200i_run_526.root; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Target path: out.root:/; hadd Target path: out.root:/nom; hadd Target path: out.root:/nom/parent; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215; ```; however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process.; When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the issues. ### Describe the solution you'd like; I believe the operation would be much more robust if; 1. hadd produced no output file if any issues with the input files are encountered, except when option `-k` is provided explicitly; 2. hadd generates exit code different from 0 if any issues with input files are encountered. ### Describe alternatives you've considered; A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:2669,Availability,robust,robust,2669,"produced with version 5.34/32 of ROOT.; hadd Source file 2: ppfx_me000z-200i_run_526.root; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Target path: out.root:/; hadd Target path: out.root:/nom; hadd Target path: out.root:/nom/parent; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215; ```; however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process.; When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the issues. ### Describe the solution you'd like; I believe the operation would be much more robust if; 1. hadd produced no output file if any issues with the input files are encountered, except when option `-k` is provided explicitly; 2. hadd generates exit code different from 0 if any issues with input files are encountered. ### Describe alternatives you've considered; Alternative solution is of course avoiding the errors to occur and checking for them separately. ### Additional context; Input ROOT files were produced with ROOT version 5.34.32, but I can use more modern versions of hadd to merge them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:2997,Availability,error,errors,2997,"produced with version 5.34/32 of ROOT.; hadd Source file 2: ppfx_me000z-200i_run_526.root; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Target path: out.root:/; hadd Target path: out.root:/nom; hadd Target path: out.root:/nom/parent; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215; ```; however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process.; When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the issues. ### Describe the solution you'd like; I believe the operation would be much more robust if; 1. hadd produced no output file if any issues with the input files are encountered, except when option `-k` is provided explicitly; 2. hadd generates exit code different from 0 if any issues with input files are encountered. ### Describe alternatives you've considered; Alternative solution is of course avoiding the errors to occur and checking for them separately. ### Additional context; Input ROOT files were produced with ROOT version 5.34.32, but I can use more modern versions of hadd to merge them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:265,Integrability,message,messages,265,"### Is your feature request related to a problem? Please describe.; I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"".; When merging those files with hadd there are multiple messages displayed, like:; ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798; Warning in <TFile::Init>: successfully recovered 21 keys; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Source file 2: ppfx_me000z-200i_run_526.root; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Target path: out.root:/; hadd Target path: out.root:/nom; hadd Target path: out.root:/nom/parent; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107; Error in <TBufferFile::CheckByteCount>: object of class ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:353,Integrability,message,messages,353,"### Is your feature request related to a problem? Please describe.; I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"".; When merging those files with hadd there are multiple messages displayed, like:; ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798; Warning in <TFile::Init>: successfully recovered 21 keys; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Source file 2: ppfx_me000z-200i_run_526.root; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Target path: out.root:/; hadd Target path: out.root:/nom; hadd Target path: out.root:/nom/parent; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107; Error in <TBufferFile::CheckByteCount>: object of class ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:2503,Integrability,message,messages,2503,"produced with version 5.34/32 of ROOT.; hadd Source file 2: ppfx_me000z-200i_run_526.root; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Target path: out.root:/; hadd Target path: out.root:/nom; hadd Target path: out.root:/nom/parent; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215; ```; however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process.; When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the issues. ### Describe the solution you'd like; I believe the operation would be much more robust if; 1. hadd produced no output file if any issues with the input files are encountered, except when option `-k` is provided explicitly; 2. hadd generates exit code different from 0 if any issues with input files are encountered. ### Describe alternatives you've considered; Alternative solution is of course avoiding the errors to occur and checking for them separately. ### Additional context; Input ROOT files were produced with ROOT version 5.34.32, but I can use more modern versions of hadd to merge them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:281,Safety,recover,recovered,281,"### Is your feature request related to a problem? Please describe.; I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"".; When merging those files with hadd there are multiple messages displayed, like:; ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798; Warning in <TFile::Init>: successfully recovered 21 keys; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Source file 2: ppfx_me000z-200i_run_526.root; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Target path: out.root:/; hadd Target path: out.root:/nom; hadd Target path: out.root:/nom/parent; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107; Error in <TBufferFile::CheckByteCount>: object of class ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:399,Safety,Recover,Recover,399,"### Is your feature request related to a problem? Please describe.; I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"".; When merging those files with hadd there are multiple messages displayed, like:; ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798; Warning in <TFile::Init>: successfully recovered 21 keys; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Source file 2: ppfx_me000z-200i_run_526.root; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Target path: out.root:/; hadd Target path: out.root:/nom; hadd Target path: out.root:/nom/parent; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107; Error in <TBufferFile::CheckByteCount>: object of class ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:439,Safety,recover,recovered,439,"### Is your feature request related to a problem? Please describe.; I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"".; When merging those files with hadd there are multiple messages displayed, like:; ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798; Warning in <TFile::Init>: successfully recovered 21 keys; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Source file 2: ppfx_me000z-200i_run_526.root; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Target path: out.root:/; hadd Target path: out.root:/nom; hadd Target path: out.root:/nom/parent; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107; Error in <TBufferFile::CheckByteCount>: object of class ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:519,Safety,Recover,Recover,519,"### Is your feature request related to a problem? Please describe.; I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"".; When merging those files with hadd there are multiple messages displayed, like:; ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798; Warning in <TFile::Init>: successfully recovered 21 keys; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Source file 2: ppfx_me000z-200i_run_526.root; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Target path: out.root:/; hadd Target path: out.root:/nom; hadd Target path: out.root:/nom/parent; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107; Error in <TBufferFile::CheckByteCount>: object of class ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:559,Safety,recover,recovered,559,"### Is your feature request related to a problem? Please describe.; I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"".; When merging those files with hadd there are multiple messages displayed, like:; ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798; Warning in <TFile::Init>: successfully recovered 21 keys; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Source file 2: ppfx_me000z-200i_run_526.root; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Target path: out.root:/; hadd Target path: out.root:/nom; hadd Target path: out.root:/nom/parent; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107; Error in <TBufferFile::CheckByteCount>: object of class ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:637,Safety,Recover,Recover,637,"### Is your feature request related to a problem? Please describe.; I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"".; When merging those files with hadd there are multiple messages displayed, like:; ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798; Warning in <TFile::Init>: successfully recovered 21 keys; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Source file 2: ppfx_me000z-200i_run_526.root; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Target path: out.root:/; hadd Target path: out.root:/nom; hadd Target path: out.root:/nom/parent; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107; Error in <TBufferFile::CheckByteCount>: object of class ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:677,Safety,recover,recovered,677,"### Is your feature request related to a problem? Please describe.; I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"".; When merging those files with hadd there are multiple messages displayed, like:; ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798; Warning in <TFile::Init>: successfully recovered 21 keys; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Source file 2: ppfx_me000z-200i_run_526.root; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Target path: out.root:/; hadd Target path: out.root:/nom; hadd Target path: out.root:/nom/parent; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107; Error in <TBufferFile::CheckByteCount>: object of class ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:758,Safety,Recover,Recover,758,"### Is your feature request related to a problem? Please describe.; I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"".; When merging those files with hadd there are multiple messages displayed, like:; ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798; Warning in <TFile::Init>: successfully recovered 21 keys; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Source file 2: ppfx_me000z-200i_run_526.root; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Target path: out.root:/; hadd Target path: out.root:/nom; hadd Target path: out.root:/nom/parent; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107; Error in <TBufferFile::CheckByteCount>: object of class ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:798,Safety,recover,recovered,798,"### Is your feature request related to a problem? Please describe.; I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"".; When merging those files with hadd there are multiple messages displayed, like:; ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798; Warning in <TFile::Init>: successfully recovered 21 keys; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Source file 2: ppfx_me000z-200i_run_526.root; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Target path: out.root:/; hadd Target path: out.root:/nom; hadd Target path: out.root:/nom/parent; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107; Error in <TBufferFile::CheckByteCount>: object of class ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:874,Safety,Recover,Recover,874,"### Is your feature request related to a problem? Please describe.; I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"".; When merging those files with hadd there are multiple messages displayed, like:; ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798; Warning in <TFile::Init>: successfully recovered 21 keys; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Source file 2: ppfx_me000z-200i_run_526.root; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Target path: out.root:/; hadd Target path: out.root:/nom; hadd Target path: out.root:/nom/parent; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107; Error in <TBufferFile::CheckByteCount>: object of class ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:914,Safety,recover,recovered,914,"your feature request related to a problem? Please describe.; I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"".; When merging those files with hadd there are multiple messages displayed, like:; ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798; Warning in <TFile::Init>: successfully recovered 21 keys; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Source file 2: ppfx_me000z-200i_run_526.root; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Target path: out.root:/; hadd Target path: out.root:/nom; hadd Target path: out.root:/nom/parent; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107; Error in <TBufferFile::CheckByteCount>: object of class TH1 re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:1012,Safety,recover,recovered,1012,"your feature request related to a problem? Please describe.; I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"".; When merging those files with hadd there are multiple messages displayed, like:; ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798; Warning in <TFile::Init>: successfully recovered 21 keys; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Source file 2: ppfx_me000z-200i_run_526.root; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Target path: out.root:/; hadd Target path: out.root:/nom; hadd Target path: out.root:/nom/parent; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107; Error in <TBufferFile::CheckByteCount>: object of class TH1 re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:2566,Safety,detect,detecting,2566,"produced with version 5.34/32 of ROOT.; hadd Source file 2: ppfx_me000z-200i_run_526.root; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Target path: out.root:/; hadd Target path: out.root:/nom; hadd Target path: out.root:/nom/parent; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215; ```; however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process.; When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the issues. ### Describe the solution you'd like; I believe the operation would be much more robust if; 1. hadd produced no output file if any issues with the input files are encountered, except when option `-k` is provided explicitly; 2. hadd generates exit code different from 0 if any issues with input files are encountered. ### Describe alternatives you've considered; Alternative solution is of course avoiding the errors to occur and checking for them separately. ### Additional context; Input ROOT files were produced with ROOT version 5.34.32, but I can use more modern versions of hadd to merge them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:2984,Safety,avoid,avoiding,2984,"produced with version 5.34/32 of ROOT.; hadd Source file 2: ppfx_me000z-200i_run_526.root; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Target path: out.root:/; hadd Target path: out.root:/nom; hadd Target path: out.root:/nom/parent; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215; ```; however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process.; When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the issues. ### Describe the solution you'd like; I believe the operation would be much more robust if; 1. hadd produced no output file if any issues with the input files are encountered, except when option `-k` is provided explicitly; 2. hadd generates exit code different from 0 if any issues with input files are encountered. ### Describe alternatives you've considered; Alternative solution is of course avoiding the errors to occur and checking for them separately. ### Additional context; Input ROOT files were produced with ROOT version 5.34.32, but I can use more modern versions of hadd to merge them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/pull/8954:106,Testability,test,tested,106,This Pull request makes minor formatting of code and documentation in RModelParsers. ## Checklist:; - [x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8954
https://github.com/root-project/root/pull/8955:1078,Deployability,update,updated,1078,"# This Pull request:; In the GDML writing there is a confusion with the use of:; TGeoManager::fgDefaultUnits or TGeoManager::GetDefaultUnits(). -- It is used both to determine if the length unit string is defined as ""cm"" or ""mm"".; -- At the same time this variable is used by the elements and materials to discriminate; between the system of units. This confusion then ultimately leads to this bug:; -- If TGeo units are ON and the GDML should be written in the G4 convention (mm); automatically the densities and the atomic weights go wrong. If in TGeoManager.cxx line 302; TGeoManager::EDefaultUnits TGeoManager::fgDefaultUnits = TGeoManager::kG4Units;; is changed to:; TGeoManager::EDefaultUnits TGeoManager::fgDefaultUnits = TGeoManager::kRootUnits;. This fixes the problem, because the usage of TGeoManager::GetDefaultUnits(); when the elements/materials were created is then consistent with the GDML writing.; See:; https://root-forum.cern.ch/t/problem-with-elements-in-exported-gdml-files/46473/5. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8955
https://github.com/root-project/root/pull/8955:256,Modifiability,variab,variable,256,"# This Pull request:; In the GDML writing there is a confusion with the use of:; TGeoManager::fgDefaultUnits or TGeoManager::GetDefaultUnits(). -- It is used both to determine if the length unit string is defined as ""cm"" or ""mm"".; -- At the same time this variable is used by the elements and materials to discriminate; between the system of units. This confusion then ultimately leads to this bug:; -- If TGeo units are ON and the GDML should be written in the G4 convention (mm); automatically the densities and the atomic weights go wrong. If in TGeoManager.cxx line 302; TGeoManager::EDefaultUnits TGeoManager::fgDefaultUnits = TGeoManager::kG4Units;; is changed to:; TGeoManager::EDefaultUnits TGeoManager::fgDefaultUnits = TGeoManager::kRootUnits;. This fixes the problem, because the usage of TGeoManager::GetDefaultUnits(); when the elements/materials were created is then consistent with the GDML writing.; See:; https://root-forum.cern.ch/t/problem-with-elements-in-exported-gdml-files/46473/5. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8955
https://github.com/root-project/root/pull/8955:1048,Testability,test,tested,1048,"# This Pull request:; In the GDML writing there is a confusion with the use of:; TGeoManager::fgDefaultUnits or TGeoManager::GetDefaultUnits(). -- It is used both to determine if the length unit string is defined as ""cm"" or ""mm"".; -- At the same time this variable is used by the elements and materials to discriminate; between the system of units. This confusion then ultimately leads to this bug:; -- If TGeo units are ON and the GDML should be written in the G4 convention (mm); automatically the densities and the atomic weights go wrong. If in TGeoManager.cxx line 302; TGeoManager::EDefaultUnits TGeoManager::fgDefaultUnits = TGeoManager::kG4Units;; is changed to:; TGeoManager::EDefaultUnits TGeoManager::fgDefaultUnits = TGeoManager::kRootUnits;. This fixes the problem, because the usage of TGeoManager::GetDefaultUnits(); when the elements/materials were created is then consistent with the GDML writing.; See:; https://root-forum.cern.ch/t/problem-with-elements-in-exported-gdml-files/46473/5. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8955
https://github.com/root-project/root/pull/8957:548,Integrability,inject,inject,548,"## Profiler for inspecting C++ models generated with SOFIE; Added a new class called `RModelProfiler` that allows to generate an hardcoded C++ header that automatically measures the time that each operator took during one or more runs of the `infer` function. In other words it profiles the model by means of _code instrumentation_. ### Under the hood; `RModelProfiler` is a friend class of `RModel` that initializes a private reference to an existing `RModel` object.; When the code is generated through `RModelProfiler::Generate()` (rewritten to inject profiling code in between operators), the latter access the private member `fGC`, thus generating the model directly into the `RModel` object.; In the generated code, profiling info such as time (microseconds) are saved in `::profiler_results`. ### Affine changes; - Added public member `std::string name` in `ROperator` (e.g. Gemm_1, ..).; - Changed `make_ROperator()` so that is assigns `name` of the operator with the one it had within the original ONNX model.; - Added an example of how to use the profiler in `README.md`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8957
https://github.com/root-project/root/pull/8957:548,Security,inject,inject,548,"## Profiler for inspecting C++ models generated with SOFIE; Added a new class called `RModelProfiler` that allows to generate an hardcoded C++ header that automatically measures the time that each operator took during one or more runs of the `infer` function. In other words it profiles the model by means of _code instrumentation_. ### Under the hood; `RModelProfiler` is a friend class of `RModel` that initializes a private reference to an existing `RModel` object.; When the code is generated through `RModelProfiler::Generate()` (rewritten to inject profiling code in between operators), the latter access the private member `fGC`, thus generating the model directly into the `RModel` object.; In the generated code, profiling info such as time (microseconds) are saved in `::profiler_results`. ### Affine changes; - Added public member `std::string name` in `ROperator` (e.g. Gemm_1, ..).; - Changed `make_ROperator()` so that is assigns `name` of the operator with the one it had within the original ONNX model.; - Added an example of how to use the profiler in `README.md`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8957
https://github.com/root-project/root/pull/8957:604,Security,access,access,604,"## Profiler for inspecting C++ models generated with SOFIE; Added a new class called `RModelProfiler` that allows to generate an hardcoded C++ header that automatically measures the time that each operator took during one or more runs of the `infer` function. In other words it profiles the model by means of _code instrumentation_. ### Under the hood; `RModelProfiler` is a friend class of `RModel` that initializes a private reference to an existing `RModel` object.; When the code is generated through `RModelProfiler::Generate()` (rewritten to inject profiling code in between operators), the latter access the private member `fGC`, thus generating the model directly into the `RModel` object.; In the generated code, profiling info such as time (microseconds) are saved in `::profiler_results`. ### Affine changes; - Added public member `std::string name` in `ROperator` (e.g. Gemm_1, ..).; - Changed `make_ROperator()` so that is assigns `name` of the operator with the one it had within the original ONNX model.; - Added an example of how to use the profiler in `README.md`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8957
https://github.com/root-project/root/issues/8959:576,Deployability,update,updated,576,"Related to #7125 . The file modules.idx is not delete upon doing a cleaning of build (and this is fatal because of #7125). ```; pcanal@Viroflay:~/root_working/build/pristine-opt$ ls -l lib/modules.idx; -rw-r--r-- 1 pcanal pcanal 286972 Sep 1 13:46 lib/modules.idx; pcanal@Viroflay:~/root_working/build/pristine-opt$ ninja clean; [1/1] Cleaning all built files...; Cleaning... 11131 files.; pcanal@Viroflay:~/root_working/build/pristine-opt$ ls -l lib/modules.idx; -rw-r--r-- 1 pcanal pcanal 286972 Sep 1 13:46 lib/modules.idx; ```. and even after the rebuild, it has not been updated at all.; ```; pcanal@Viroflay:~/root_working/build/pristine-opt$ ls -l lib/modules.idx; -rw-r--r-- 1 pcanal pcanal 286972 Sep 1 13:46 lib/modules.idx; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8959
https://github.com/root-project/root/pull/8960:273,Usability,progress bar,progress bar,273,This Pull requests fixes an issue when evaluating regression networks using CNN or RNN architectures. ; It fixes to use the correct input shape. In addition: ; - include changes in #8573 for adding DL with GPU to regression tutorials; - fix an issue with drawing too often progress bar when evaluating regression,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8960
https://github.com/root-project/root/issues/8962:172,Availability,Down,Downloads,172,"### Describe the bug. Doing:. ```C++; #include <TBufferFile.h>; #include <TFile.h>; #include <TTree.h>; #include <iostream>. void bar() {; auto f = TFile::Open(""/Users/ktf/Downloads/AO2D-2.root"");; char const *dfs[1] = {""DF_2449800039997798139;1""};; ; for (auto di = 0; di < 1; di++) {; auto df = dfs[di];; auto d = (TDirectoryFile*)f->Get(df);; ; std::cout << ""Reading DF "" << df << std::endl;; char const *treeNames[4] = {""O2bc"", ""O2collision"", ""O2fdd"", ""O2ft0""};. for (auto ti = 0; ti < 4; ti++) {; std::cout << ti << std::endl;; std::cout << treeNames[ti] << std::endl;; auto t = (TTree*)d->Get(treeNames[ti]);; t->SetClusterPrefetch(true);; auto branchList = t->GetListOfBranches();; auto e = t->GetEntries();; for (auto bi = 0; bi < branchList->GetEntries(); ++bi) {; auto b = (TBranch*)branchList->At(bi);; assert(b);; int pos = 0;; while (pos < e) {; b->Print();; TBufferFile buf(TBuffer::EMode::kWrite, 32*1024);; auto &r = b->GetBulkRead();; auto s = r.GetBulkEntries(0, buf);; pos += s;; std::cout << ""Read "" << s << "" elements "" << std::endl;; }; }; }; }; }; ```. crashes with:. ```C++; [22971:internal-dpl-aod-reader_t0]: Fatal: fExtraBasket == nullptr && ""fExtraBasket should have been set to nullptr by GetFreshBasket"" violated at line 1523 of `/Users/ktf/src/sw/SOUR; CES/ROOT/ad1ddb8593/0/tree/tree/src/TBranch.cxx'; ```. if one of the branches has more than one basket. Removing `t->SetClusterPrefetch(true)` fixes the issue. Notice how it still works fine with branches which have only one basket. I can provide a file to reproduce if needed. ### Expected behavior. I would expect it to work. ### Setup. Vanilla 6.24.02 on linux or macOS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8962
https://github.com/root-project/root/issues/8962:814,Testability,assert,assert,814,"### Describe the bug. Doing:. ```C++; #include <TBufferFile.h>; #include <TFile.h>; #include <TTree.h>; #include <iostream>. void bar() {; auto f = TFile::Open(""/Users/ktf/Downloads/AO2D-2.root"");; char const *dfs[1] = {""DF_2449800039997798139;1""};; ; for (auto di = 0; di < 1; di++) {; auto df = dfs[di];; auto d = (TDirectoryFile*)f->Get(df);; ; std::cout << ""Reading DF "" << df << std::endl;; char const *treeNames[4] = {""O2bc"", ""O2collision"", ""O2fdd"", ""O2ft0""};. for (auto ti = 0; ti < 4; ti++) {; std::cout << ti << std::endl;; std::cout << treeNames[ti] << std::endl;; auto t = (TTree*)d->Get(treeNames[ti]);; t->SetClusterPrefetch(true);; auto branchList = t->GetListOfBranches();; auto e = t->GetEntries();; for (auto bi = 0; bi < branchList->GetEntries(); ++bi) {; auto b = (TBranch*)branchList->At(bi);; assert(b);; int pos = 0;; while (pos < e) {; b->Print();; TBufferFile buf(TBuffer::EMode::kWrite, 32*1024);; auto &r = b->GetBulkRead();; auto s = r.GetBulkEntries(0, buf);; pos += s;; std::cout << ""Read "" << s << "" elements "" << std::endl;; }; }; }; }; }; ```. crashes with:. ```C++; [22971:internal-dpl-aod-reader_t0]: Fatal: fExtraBasket == nullptr && ""fExtraBasket should have been set to nullptr by GetFreshBasket"" violated at line 1523 of `/Users/ktf/src/sw/SOUR; CES/ROOT/ad1ddb8593/0/tree/tree/src/TBranch.cxx'; ```. if one of the branches has more than one basket. Removing `t->SetClusterPrefetch(true)` fixes the issue. Notice how it still works fine with branches which have only one basket. I can provide a file to reproduce if needed. ### Expected behavior. I would expect it to work. ### Setup. Vanilla 6.24.02 on linux or macOS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8962
https://github.com/root-project/root/pull/8963:18,Deployability,update,updates,18,This Pull request updates xrootd version (by M.K.Simon). ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8963
https://github.com/root-project/root/pull/8963:108,Deployability,update,updated,108,This Pull request updates xrootd version (by M.K.Simon). ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8963
https://github.com/root-project/root/pull/8963:78,Testability,test,tested,78,This Pull request updates xrootd version (by M.K.Simon). ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8963
https://github.com/root-project/root/issues/8964:194,Availability,error,errors,194,"Hello. I have a multigraph displayed in a Web browser using ROOT JS and I have noticed many complains from the JS engine when I'm hovering mouse pointer above the multigraph object. I think the errors come from the function that is supposed to display tooltips because they do not appear as this happens for a histogram object. Here is the stack trace of such an error:. `JSRoot.more.js:1502 Uncaught TypeError: Cannot read properties of undefined (reading 'second_x'); at SVGGElement.<anonymous> (JSRoot.more.js:1502); at Pn.each (d3.min.js:2); at TGraphPainter.extractTooltip (JSRoot.more.js:1484); at TGraphPainter.processTooltipEvent (JSRoot.more.js:1576); at JSRoot.gpad.js:2960; at Array.forEach (<anonymous>); at TCanvasPainter.TPadPainter.processPadTooltipEvent (JSRoot.gpad.js:2959); at TFramePainter.processFrameTooltipEvent (JSRoot.interactive.js:56); at SVGSVGElement.<anonymous> (d3.min.js:2)`. Cheers,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8964
https://github.com/root-project/root/issues/8964:363,Availability,error,error,363,"Hello. I have a multigraph displayed in a Web browser using ROOT JS and I have noticed many complains from the JS engine when I'm hovering mouse pointer above the multigraph object. I think the errors come from the function that is supposed to display tooltips because they do not appear as this happens for a histogram object. Here is the stack trace of such an error:. `JSRoot.more.js:1502 Uncaught TypeError: Cannot read properties of undefined (reading 'second_x'); at SVGGElement.<anonymous> (JSRoot.more.js:1502); at Pn.each (d3.min.js:2); at TGraphPainter.extractTooltip (JSRoot.more.js:1484); at TGraphPainter.processTooltipEvent (JSRoot.more.js:1576); at JSRoot.gpad.js:2960; at Array.forEach (<anonymous>); at TCanvasPainter.TPadPainter.processPadTooltipEvent (JSRoot.gpad.js:2959); at TFramePainter.processFrameTooltipEvent (JSRoot.interactive.js:56); at SVGSVGElement.<anonymous> (d3.min.js:2)`. Cheers,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8964
https://github.com/root-project/root/pull/8967:289,Deployability,update,updated,289,# This Pull request:; Demoted the exception level from Warning to Info when changing the default system of units for TGeo; ## Changes or fixes:; CMSSW fails due to a necessary recent change of the default units not being the Geant4 ones. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # ; https://github.com/cms-sw/cmsdist/issues/7274,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8967
https://github.com/root-project/root/pull/8967:259,Testability,test,tested,259,# This Pull request:; Demoted the exception level from Warning to Info when changing the default system of units for TGeo; ## Changes or fixes:; CMSSW fails due to a necessary recent change of the default units not being the Geant4 ones. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # ; https://github.com/cms-sw/cmsdist/issues/7274,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8967
https://github.com/root-project/root/pull/8972:232,Availability,avail,available,232,"This PR introduces the functionality offered by `ROOT::RDF::RunGraphs` in distributed RDataFrame. Some things may still need polishing or discussion.; - [x] Implement function for the Spark backend; - [x] Implement generic function available in the distributed module; - [x] Add test for the Spark backend; - [ ] Discuss whether we should keep the logic that all actions should be triggered by the same type of distributed backend (i.e. a user can submit N Spark jobs concurrently, but not N Spark jobs and M Dask jobs from the same call to RunGraphs); - [ ] Discuss default value of `concurrent_runs` parameter, i.e. number of jobs submitted concurrently from the client to the scheduler.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8972
https://github.com/root-project/root/pull/8972:679,Energy Efficiency,schedul,scheduler,679,"This PR introduces the functionality offered by `ROOT::RDF::RunGraphs` in distributed RDataFrame. Some things may still need polishing or discussion.; - [x] Implement function for the Spark backend; - [x] Implement generic function available in the distributed module; - [x] Add test for the Spark backend; - [ ] Discuss whether we should keep the logic that all actions should be triggered by the same type of distributed backend (i.e. a user can submit N Spark jobs concurrently, but not N Spark jobs and M Dask jobs from the same call to RunGraphs); - [ ] Discuss default value of `concurrent_runs` parameter, i.e. number of jobs submitted concurrently from the client to the scheduler.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8972
https://github.com/root-project/root/pull/8972:468,Performance,concurren,concurrently,468,"This PR introduces the functionality offered by `ROOT::RDF::RunGraphs` in distributed RDataFrame. Some things may still need polishing or discussion.; - [x] Implement function for the Spark backend; - [x] Implement generic function available in the distributed module; - [x] Add test for the Spark backend; - [ ] Discuss whether we should keep the logic that all actions should be triggered by the same type of distributed backend (i.e. a user can submit N Spark jobs concurrently, but not N Spark jobs and M Dask jobs from the same call to RunGraphs); - [ ] Discuss default value of `concurrent_runs` parameter, i.e. number of jobs submitted concurrently from the client to the scheduler.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8972
https://github.com/root-project/root/pull/8972:643,Performance,concurren,concurrently,643,"This PR introduces the functionality offered by `ROOT::RDF::RunGraphs` in distributed RDataFrame. Some things may still need polishing or discussion.; - [x] Implement function for the Spark backend; - [x] Implement generic function available in the distributed module; - [x] Add test for the Spark backend; - [ ] Discuss whether we should keep the logic that all actions should be triggered by the same type of distributed backend (i.e. a user can submit N Spark jobs concurrently, but not N Spark jobs and M Dask jobs from the same call to RunGraphs); - [ ] Discuss default value of `concurrent_runs` parameter, i.e. number of jobs submitted concurrently from the client to the scheduler.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8972
https://github.com/root-project/root/pull/8972:279,Testability,test,test,279,"This PR introduces the functionality offered by `ROOT::RDF::RunGraphs` in distributed RDataFrame. Some things may still need polishing or discussion.; - [x] Implement function for the Spark backend; - [x] Implement generic function available in the distributed module; - [x] Add test for the Spark backend; - [ ] Discuss whether we should keep the logic that all actions should be triggered by the same type of distributed backend (i.e. a user can submit N Spark jobs concurrently, but not N Spark jobs and M Dask jobs from the same call to RunGraphs); - [ ] Discuss default value of `concurrent_runs` parameter, i.e. number of jobs submitted concurrently from the client to the scheduler.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8972
https://github.com/root-project/root/pull/8972:348,Testability,log,logic,348,"This PR introduces the functionality offered by `ROOT::RDF::RunGraphs` in distributed RDataFrame. Some things may still need polishing or discussion.; - [x] Implement function for the Spark backend; - [x] Implement generic function available in the distributed module; - [x] Add test for the Spark backend; - [ ] Discuss whether we should keep the logic that all actions should be triggered by the same type of distributed backend (i.e. a user can submit N Spark jobs concurrently, but not N Spark jobs and M Dask jobs from the same call to RunGraphs); - [ ] Discuss default value of `concurrent_runs` parameter, i.e. number of jobs submitted concurrently from the client to the scheduler.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8972
https://github.com/root-project/root/issues/8973:122,Availability,error,errors,122,"Hi! I have been trying to run several rooFit tutorials in Swan and also locally with ROOT v6.22.08 in MacOS. I am getting errors with some functions. There are multiple, but on example is `gauss.plotOn(xframe, LineColor=""r"")` and it doesn't seem to accept the `LineColor` argument. I get:. ```; TypeError: RooAbsPdf::plotOn got an unexpected keyword argument 'LineColor'; ```. I tried copying the code and running them in a cmslpc cluster and in my mac but I get the same error like in Swan.; I haven't seen any solution so far to this problem. Are there any updated sets of tutorials?. One can quickly reproduce the problem/s, by running some Swan notebooks. For example: https://root.cern.ch/doc/master/rf101__basics_8py.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8973
https://github.com/root-project/root/issues/8973:472,Availability,error,error,472,"Hi! I have been trying to run several rooFit tutorials in Swan and also locally with ROOT v6.22.08 in MacOS. I am getting errors with some functions. There are multiple, but on example is `gauss.plotOn(xframe, LineColor=""r"")` and it doesn't seem to accept the `LineColor` argument. I get:. ```; TypeError: RooAbsPdf::plotOn got an unexpected keyword argument 'LineColor'; ```. I tried copying the code and running them in a cmslpc cluster and in my mac but I get the same error like in Swan.; I haven't seen any solution so far to this problem. Are there any updated sets of tutorials?. One can quickly reproduce the problem/s, by running some Swan notebooks. For example: https://root.cern.ch/doc/master/rf101__basics_8py.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8973
https://github.com/root-project/root/issues/8973:559,Deployability,update,updated,559,"Hi! I have been trying to run several rooFit tutorials in Swan and also locally with ROOT v6.22.08 in MacOS. I am getting errors with some functions. There are multiple, but on example is `gauss.plotOn(xframe, LineColor=""r"")` and it doesn't seem to accept the `LineColor` argument. I get:. ```; TypeError: RooAbsPdf::plotOn got an unexpected keyword argument 'LineColor'; ```. I tried copying the code and running them in a cmslpc cluster and in my mac but I get the same error like in Swan.; I haven't seen any solution so far to this problem. Are there any updated sets of tutorials?. One can quickly reproduce the problem/s, by running some Swan notebooks. For example: https://root.cern.ch/doc/master/rf101__basics_8py.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8973
https://github.com/root-project/root/pull/8974:45,Modifiability,layers,layers,45,"This PR adds support for parsing Convolution layers from PyTorch and Keras models into an RModel object. ## Progress; - [x] Support for PyTorch Convolution Layers (Conv2D) ; - [x] Support for Keras Convolution Layers(Conv2D) ; - [x] Support for `padding=""valid""`; - [x] Support for `padding=""same""`. ## Checklist:; - [ ] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8974
https://github.com/root-project/root/pull/8974:156,Modifiability,Layers,Layers,156,"This PR adds support for parsing Convolution layers from PyTorch and Keras models into an RModel object. ## Progress; - [x] Support for PyTorch Convolution Layers (Conv2D) ; - [x] Support for Keras Convolution Layers(Conv2D) ; - [x] Support for `padding=""valid""`; - [x] Support for `padding=""same""`. ## Checklist:; - [ ] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8974
https://github.com/root-project/root/pull/8974:210,Modifiability,Layers,Layers,210,"This PR adds support for parsing Convolution layers from PyTorch and Keras models into an RModel object. ## Progress; - [x] Support for PyTorch Convolution Layers (Conv2D) ; - [x] Support for Keras Convolution Layers(Conv2D) ; - [x] Support for `padding=""valid""`; - [x] Support for `padding=""same""`. ## Checklist:; - [ ] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8974
https://github.com/root-project/root/pull/8974:321,Testability,test,tested,321,"This PR adds support for parsing Convolution layers from PyTorch and Keras models into an RModel object. ## Progress; - [x] Support for PyTorch Convolution Layers (Conv2D) ; - [x] Support for Keras Convolution Layers(Conv2D) ; - [x] Support for `padding=""valid""`; - [x] Support for `padding=""same""`. ## Checklist:; - [ ] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8974
https://github.com/root-project/root/pull/8975:49,Testability,test,test,49,While playing with godbolt I noticed I wrote the test in a way that improperly deallocates the array https://godbolt.org/z/rnfbaWaKf,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8975
https://github.com/root-project/root/issues/8976:1764,Availability,error,error,1764," The changes introduced in PR #7616 have the side effect of breaking existing use of the RooNLLVar constructor where it is specified that the PDF is extended but the defaults for all further arguments are accepted, e.g.; `nllVar_ = new RooNLLVar(""nllVar"", """", model_, *exptData_, extended_);`; where `model_` is a `RooAddPdf`, `exptData_` is a `RooDataSet*` and `extended_` is a `bool`. This appears to be due to the reordering of the `extended` argument to the two constructors:; ```; RooNLLVar(const char *name, const char *title, RooAbsPdf& pdf, RooAbsData& data,; RooAbsTestStatistic::Configuration const& cfg, bool extended);; ; RooNLLVar(const char *name, const char *title, RooAbsPdf& pdf, RooAbsData& data,; const RooArgSet& projDeps, RooAbsTestStatistic::Configuration const& cfg,; bool extended = false) ;; ```; where previously the `extended` argument followed `data` in the first case and `projDeps` in the second.; Is it possible to swap back the order of the `extended` and `cfg` arguments and provide a default for `cfg`?; I think this should restore backward compatibility in this scenario. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh dev3/latest x86_64-centos7-gcc11-opt; git clone https://phab.hepforge.org/source/laura.git; mkdir build install; cmake -S $PWD/laura -B $PWD/build -DLAURA_BUILD_ROOFIT_TASK=ON -DCMAKE_INSTALL_PREFIX=$PWD/install; cd build; make; ```; This will result in a compilation error when trying to compile `LauRooFitTask.cc`:; ```; error: no matching function for call to ‘RooNLLVar::RooNLLVar(const char [7], const char [1], RooAbsPdf&, RooAbsData&, const Bool_t&)’; ```; Attempting the same build with LCG_100 or even dev4/latest does not produce the same error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8976
https://github.com/root-project/root/issues/8976:1819,Availability,error,error,1819," The changes introduced in PR #7616 have the side effect of breaking existing use of the RooNLLVar constructor where it is specified that the PDF is extended but the defaults for all further arguments are accepted, e.g.; `nllVar_ = new RooNLLVar(""nllVar"", """", model_, *exptData_, extended_);`; where `model_` is a `RooAddPdf`, `exptData_` is a `RooDataSet*` and `extended_` is a `bool`. This appears to be due to the reordering of the `extended` argument to the two constructors:; ```; RooNLLVar(const char *name, const char *title, RooAbsPdf& pdf, RooAbsData& data,; RooAbsTestStatistic::Configuration const& cfg, bool extended);; ; RooNLLVar(const char *name, const char *title, RooAbsPdf& pdf, RooAbsData& data,; const RooArgSet& projDeps, RooAbsTestStatistic::Configuration const& cfg,; bool extended = false) ;; ```; where previously the `extended` argument followed `data` in the first case and `projDeps` in the second.; Is it possible to swap back the order of the `extended` and `cfg` arguments and provide a default for `cfg`?; I think this should restore backward compatibility in this scenario. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh dev3/latest x86_64-centos7-gcc11-opt; git clone https://phab.hepforge.org/source/laura.git; mkdir build install; cmake -S $PWD/laura -B $PWD/build -DLAURA_BUILD_ROOFIT_TASK=ON -DCMAKE_INSTALL_PREFIX=$PWD/install; cd build; make; ```; This will result in a compilation error when trying to compile `LauRooFitTask.cc`:; ```; error: no matching function for call to ‘RooNLLVar::RooNLLVar(const char [7], const char [1], RooAbsPdf&, RooAbsData&, const Bool_t&)’; ```; Attempting the same build with LCG_100 or even dev4/latest does not produce the same error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8976
https://github.com/root-project/root/issues/8976:2045,Availability,error,error,2045," The changes introduced in PR #7616 have the side effect of breaking existing use of the RooNLLVar constructor where it is specified that the PDF is extended but the defaults for all further arguments are accepted, e.g.; `nllVar_ = new RooNLLVar(""nllVar"", """", model_, *exptData_, extended_);`; where `model_` is a `RooAddPdf`, `exptData_` is a `RooDataSet*` and `extended_` is a `bool`. This appears to be due to the reordering of the `extended` argument to the two constructors:; ```; RooNLLVar(const char *name, const char *title, RooAbsPdf& pdf, RooAbsData& data,; RooAbsTestStatistic::Configuration const& cfg, bool extended);; ; RooNLLVar(const char *name, const char *title, RooAbsPdf& pdf, RooAbsData& data,; const RooArgSet& projDeps, RooAbsTestStatistic::Configuration const& cfg,; bool extended = false) ;; ```; where previously the `extended` argument followed `data` in the first case and `projDeps` in the second.; Is it possible to swap back the order of the `extended` and `cfg` arguments and provide a default for `cfg`?; I think this should restore backward compatibility in this scenario. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh dev3/latest x86_64-centos7-gcc11-opt; git clone https://phab.hepforge.org/source/laura.git; mkdir build install; cmake -S $PWD/laura -B $PWD/build -DLAURA_BUILD_ROOFIT_TASK=ON -DCMAKE_INSTALL_PREFIX=$PWD/install; cd build; make; ```; This will result in a compilation error when trying to compile `LauRooFitTask.cc`:; ```; error: no matching function for call to ‘RooNLLVar::RooNLLVar(const char [7], const char [1], RooAbsPdf&, RooAbsData&, const Bool_t&)’; ```; Attempting the same build with LCG_100 or even dev4/latest does not produce the same error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8976
https://github.com/root-project/root/issues/8976:640,Deployability,Configurat,Configuration,640,"- [x] Checked for duplicates. ### Describe the bug; The changes introduced in PR #7616 have the side effect of breaking existing use of the RooNLLVar constructor where it is specified that the PDF is extended but the defaults for all further arguments are accepted, e.g.; `nllVar_ = new RooNLLVar(""nllVar"", """", model_, *exptData_, extended_);`; where `model_` is a `RooAddPdf`, `exptData_` is a `RooDataSet*` and `extended_` is a `bool`. This appears to be due to the reordering of the `extended` argument to the two constructors:; ```; RooNLLVar(const char *name, const char *title, RooAbsPdf& pdf, RooAbsData& data,; RooAbsTestStatistic::Configuration const& cfg, bool extended);; ; RooNLLVar(const char *name, const char *title, RooAbsPdf& pdf, RooAbsData& data,; const RooArgSet& projDeps, RooAbsTestStatistic::Configuration const& cfg,; bool extended = false) ;; ```; where previously the `extended` argument followed `data` in the first case and `projDeps` in the second.; Is it possible to swap back the order of the `extended` and `cfg` arguments and provide a default for `cfg`?; I think this should restore backward compatibility in this scenario. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh dev3/latest x86_64-centos7-gcc11-opt; git clone https://phab.hepforge.org/source/laura.git; mkdir build install; cmake -S $PWD/laura -B $PWD/build -DLAURA_BUILD_ROOFIT_TASK=ON -DCMAKE_INSTALL_PREFIX=$PWD/install; cd build; make; ```; This will result in a compilation error when trying to compile `LauRooFitTask.cc`:; ```; error: no matching function for call to ‘RooNLLVar::RooNLLVar(const char [7], const char [1], RooAbsPdf&, RooAbsData&, const Bool_t&)’; ```; Attempting the same build with LCG_100 or",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8976
https://github.com/root-project/root/issues/8976:815,Deployability,Configurat,Configuration,815,"- [x] Checked for duplicates. ### Describe the bug; The changes introduced in PR #7616 have the side effect of breaking existing use of the RooNLLVar constructor where it is specified that the PDF is extended but the defaults for all further arguments are accepted, e.g.; `nllVar_ = new RooNLLVar(""nllVar"", """", model_, *exptData_, extended_);`; where `model_` is a `RooAddPdf`, `exptData_` is a `RooDataSet*` and `extended_` is a `bool`. This appears to be due to the reordering of the `extended` argument to the two constructors:; ```; RooNLLVar(const char *name, const char *title, RooAbsPdf& pdf, RooAbsData& data,; RooAbsTestStatistic::Configuration const& cfg, bool extended);; ; RooNLLVar(const char *name, const char *title, RooAbsPdf& pdf, RooAbsData& data,; const RooArgSet& projDeps, RooAbsTestStatistic::Configuration const& cfg,; bool extended = false) ;; ```; where previously the `extended` argument followed `data` in the first case and `projDeps` in the second.; Is it possible to swap back the order of the `extended` and `cfg` arguments and provide a default for `cfg`?; I think this should restore backward compatibility in this scenario. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh dev3/latest x86_64-centos7-gcc11-opt; git clone https://phab.hepforge.org/source/laura.git; mkdir build install; cmake -S $PWD/laura -B $PWD/build -DLAURA_BUILD_ROOFIT_TASK=ON -DCMAKE_INSTALL_PREFIX=$PWD/install; cd build; make; ```; This will result in a compilation error when trying to compile `LauRooFitTask.cc`:; ```; error: no matching function for call to ‘RooNLLVar::RooNLLVar(const char [7], const char [1], RooAbsPdf&, RooAbsData&, const Bool_t&)’; ```; Attempting the same build with LCG_100 or",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8976
https://github.com/root-project/root/issues/8976:1600,Deployability,install,install,1600," The changes introduced in PR #7616 have the side effect of breaking existing use of the RooNLLVar constructor where it is specified that the PDF is extended but the defaults for all further arguments are accepted, e.g.; `nllVar_ = new RooNLLVar(""nllVar"", """", model_, *exptData_, extended_);`; where `model_` is a `RooAddPdf`, `exptData_` is a `RooDataSet*` and `extended_` is a `bool`. This appears to be due to the reordering of the `extended` argument to the two constructors:; ```; RooNLLVar(const char *name, const char *title, RooAbsPdf& pdf, RooAbsData& data,; RooAbsTestStatistic::Configuration const& cfg, bool extended);; ; RooNLLVar(const char *name, const char *title, RooAbsPdf& pdf, RooAbsData& data,; const RooArgSet& projDeps, RooAbsTestStatistic::Configuration const& cfg,; bool extended = false) ;; ```; where previously the `extended` argument followed `data` in the first case and `projDeps` in the second.; Is it possible to swap back the order of the `extended` and `cfg` arguments and provide a default for `cfg`?; I think this should restore backward compatibility in this scenario. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh dev3/latest x86_64-centos7-gcc11-opt; git clone https://phab.hepforge.org/source/laura.git; mkdir build install; cmake -S $PWD/laura -B $PWD/build -DLAURA_BUILD_ROOFIT_TASK=ON -DCMAKE_INSTALL_PREFIX=$PWD/install; cd build; make; ```; This will result in a compilation error when trying to compile `LauRooFitTask.cc`:; ```; error: no matching function for call to ‘RooNLLVar::RooNLLVar(const char [7], const char [1], RooAbsPdf&, RooAbsData&, const Bool_t&)’; ```; Attempting the same build with LCG_100 or even dev4/latest does not produce the same error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8976
https://github.com/root-project/root/issues/8976:1700,Deployability,install,install,1700," The changes introduced in PR #7616 have the side effect of breaking existing use of the RooNLLVar constructor where it is specified that the PDF is extended but the defaults for all further arguments are accepted, e.g.; `nllVar_ = new RooNLLVar(""nllVar"", """", model_, *exptData_, extended_);`; where `model_` is a `RooAddPdf`, `exptData_` is a `RooDataSet*` and `extended_` is a `bool`. This appears to be due to the reordering of the `extended` argument to the two constructors:; ```; RooNLLVar(const char *name, const char *title, RooAbsPdf& pdf, RooAbsData& data,; RooAbsTestStatistic::Configuration const& cfg, bool extended);; ; RooNLLVar(const char *name, const char *title, RooAbsPdf& pdf, RooAbsData& data,; const RooArgSet& projDeps, RooAbsTestStatistic::Configuration const& cfg,; bool extended = false) ;; ```; where previously the `extended` argument followed `data` in the first case and `projDeps` in the second.; Is it possible to swap back the order of the `extended` and `cfg` arguments and provide a default for `cfg`?; I think this should restore backward compatibility in this scenario. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh dev3/latest x86_64-centos7-gcc11-opt; git clone https://phab.hepforge.org/source/laura.git; mkdir build install; cmake -S $PWD/laura -B $PWD/build -DLAURA_BUILD_ROOFIT_TASK=ON -DCMAKE_INSTALL_PREFIX=$PWD/install; cd build; make; ```; This will result in a compilation error when trying to compile `LauRooFitTask.cc`:; ```; error: no matching function for call to ‘RooNLLVar::RooNLLVar(const char [7], const char [1], RooAbsPdf&, RooAbsData&, const Bool_t&)’; ```; Attempting the same build with LCG_100 or even dev4/latest does not produce the same error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8976
https://github.com/root-project/root/issues/8976:200,Modifiability,extend,extended,200,"- [x] Checked for duplicates. ### Describe the bug; The changes introduced in PR #7616 have the side effect of breaking existing use of the RooNLLVar constructor where it is specified that the PDF is extended but the defaults for all further arguments are accepted, e.g.; `nllVar_ = new RooNLLVar(""nllVar"", """", model_, *exptData_, extended_);`; where `model_` is a `RooAddPdf`, `exptData_` is a `RooDataSet*` and `extended_` is a `bool`. This appears to be due to the reordering of the `extended` argument to the two constructors:; ```; RooNLLVar(const char *name, const char *title, RooAbsPdf& pdf, RooAbsData& data,; RooAbsTestStatistic::Configuration const& cfg, bool extended);; ; RooNLLVar(const char *name, const char *title, RooAbsPdf& pdf, RooAbsData& data,; const RooArgSet& projDeps, RooAbsTestStatistic::Configuration const& cfg,; bool extended = false) ;; ```; where previously the `extended` argument followed `data` in the first case and `projDeps` in the second.; Is it possible to swap back the order of the `extended` and `cfg` arguments and provide a default for `cfg`?; I think this should restore backward compatibility in this scenario. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh dev3/latest x86_64-centos7-gcc11-opt; git clone https://phab.hepforge.org/source/laura.git; mkdir build install; cmake -S $PWD/laura -B $PWD/build -DLAURA_BUILD_ROOFIT_TASK=ON -DCMAKE_INSTALL_PREFIX=$PWD/install; cd build; make; ```; This will result in a compilation error when trying to compile `LauRooFitTask.cc`:; ```; error: no matching function for call to ‘RooNLLVar::RooNLLVar(const char [7], const char [1], RooAbsPdf&, RooAbsData&, const Bool_t&)’; ```; Attempting the same build with LCG_100 or",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8976
https://github.com/root-project/root/issues/8976:487,Modifiability,extend,extended,487,"- [x] Checked for duplicates. ### Describe the bug; The changes introduced in PR #7616 have the side effect of breaking existing use of the RooNLLVar constructor where it is specified that the PDF is extended but the defaults for all further arguments are accepted, e.g.; `nllVar_ = new RooNLLVar(""nllVar"", """", model_, *exptData_, extended_);`; where `model_` is a `RooAddPdf`, `exptData_` is a `RooDataSet*` and `extended_` is a `bool`. This appears to be due to the reordering of the `extended` argument to the two constructors:; ```; RooNLLVar(const char *name, const char *title, RooAbsPdf& pdf, RooAbsData& data,; RooAbsTestStatistic::Configuration const& cfg, bool extended);; ; RooNLLVar(const char *name, const char *title, RooAbsPdf& pdf, RooAbsData& data,; const RooArgSet& projDeps, RooAbsTestStatistic::Configuration const& cfg,; bool extended = false) ;; ```; where previously the `extended` argument followed `data` in the first case and `projDeps` in the second.; Is it possible to swap back the order of the `extended` and `cfg` arguments and provide a default for `cfg`?; I think this should restore backward compatibility in this scenario. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh dev3/latest x86_64-centos7-gcc11-opt; git clone https://phab.hepforge.org/source/laura.git; mkdir build install; cmake -S $PWD/laura -B $PWD/build -DLAURA_BUILD_ROOFIT_TASK=ON -DCMAKE_INSTALL_PREFIX=$PWD/install; cd build; make; ```; This will result in a compilation error when trying to compile `LauRooFitTask.cc`:; ```; error: no matching function for call to ‘RooNLLVar::RooNLLVar(const char [7], const char [1], RooAbsPdf&, RooAbsData&, const Bool_t&)’; ```; Attempting the same build with LCG_100 or",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8976
https://github.com/root-project/root/issues/8976:640,Modifiability,Config,Configuration,640,"- [x] Checked for duplicates. ### Describe the bug; The changes introduced in PR #7616 have the side effect of breaking existing use of the RooNLLVar constructor where it is specified that the PDF is extended but the defaults for all further arguments are accepted, e.g.; `nllVar_ = new RooNLLVar(""nllVar"", """", model_, *exptData_, extended_);`; where `model_` is a `RooAddPdf`, `exptData_` is a `RooDataSet*` and `extended_` is a `bool`. This appears to be due to the reordering of the `extended` argument to the two constructors:; ```; RooNLLVar(const char *name, const char *title, RooAbsPdf& pdf, RooAbsData& data,; RooAbsTestStatistic::Configuration const& cfg, bool extended);; ; RooNLLVar(const char *name, const char *title, RooAbsPdf& pdf, RooAbsData& data,; const RooArgSet& projDeps, RooAbsTestStatistic::Configuration const& cfg,; bool extended = false) ;; ```; where previously the `extended` argument followed `data` in the first case and `projDeps` in the second.; Is it possible to swap back the order of the `extended` and `cfg` arguments and provide a default for `cfg`?; I think this should restore backward compatibility in this scenario. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh dev3/latest x86_64-centos7-gcc11-opt; git clone https://phab.hepforge.org/source/laura.git; mkdir build install; cmake -S $PWD/laura -B $PWD/build -DLAURA_BUILD_ROOFIT_TASK=ON -DCMAKE_INSTALL_PREFIX=$PWD/install; cd build; make; ```; This will result in a compilation error when trying to compile `LauRooFitTask.cc`:; ```; error: no matching function for call to ‘RooNLLVar::RooNLLVar(const char [7], const char [1], RooAbsPdf&, RooAbsData&, const Bool_t&)’; ```; Attempting the same build with LCG_100 or",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8976
https://github.com/root-project/root/issues/8976:671,Modifiability,extend,extended,671,"- [x] Checked for duplicates. ### Describe the bug; The changes introduced in PR #7616 have the side effect of breaking existing use of the RooNLLVar constructor where it is specified that the PDF is extended but the defaults for all further arguments are accepted, e.g.; `nllVar_ = new RooNLLVar(""nllVar"", """", model_, *exptData_, extended_);`; where `model_` is a `RooAddPdf`, `exptData_` is a `RooDataSet*` and `extended_` is a `bool`. This appears to be due to the reordering of the `extended` argument to the two constructors:; ```; RooNLLVar(const char *name, const char *title, RooAbsPdf& pdf, RooAbsData& data,; RooAbsTestStatistic::Configuration const& cfg, bool extended);; ; RooNLLVar(const char *name, const char *title, RooAbsPdf& pdf, RooAbsData& data,; const RooArgSet& projDeps, RooAbsTestStatistic::Configuration const& cfg,; bool extended = false) ;; ```; where previously the `extended` argument followed `data` in the first case and `projDeps` in the second.; Is it possible to swap back the order of the `extended` and `cfg` arguments and provide a default for `cfg`?; I think this should restore backward compatibility in this scenario. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh dev3/latest x86_64-centos7-gcc11-opt; git clone https://phab.hepforge.org/source/laura.git; mkdir build install; cmake -S $PWD/laura -B $PWD/build -DLAURA_BUILD_ROOFIT_TASK=ON -DCMAKE_INSTALL_PREFIX=$PWD/install; cd build; make; ```; This will result in a compilation error when trying to compile `LauRooFitTask.cc`:; ```; error: no matching function for call to ‘RooNLLVar::RooNLLVar(const char [7], const char [1], RooAbsPdf&, RooAbsData&, const Bool_t&)’; ```; Attempting the same build with LCG_100 or",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8976
https://github.com/root-project/root/issues/8976:815,Modifiability,Config,Configuration,815,"- [x] Checked for duplicates. ### Describe the bug; The changes introduced in PR #7616 have the side effect of breaking existing use of the RooNLLVar constructor where it is specified that the PDF is extended but the defaults for all further arguments are accepted, e.g.; `nllVar_ = new RooNLLVar(""nllVar"", """", model_, *exptData_, extended_);`; where `model_` is a `RooAddPdf`, `exptData_` is a `RooDataSet*` and `extended_` is a `bool`. This appears to be due to the reordering of the `extended` argument to the two constructors:; ```; RooNLLVar(const char *name, const char *title, RooAbsPdf& pdf, RooAbsData& data,; RooAbsTestStatistic::Configuration const& cfg, bool extended);; ; RooNLLVar(const char *name, const char *title, RooAbsPdf& pdf, RooAbsData& data,; const RooArgSet& projDeps, RooAbsTestStatistic::Configuration const& cfg,; bool extended = false) ;; ```; where previously the `extended` argument followed `data` in the first case and `projDeps` in the second.; Is it possible to swap back the order of the `extended` and `cfg` arguments and provide a default for `cfg`?; I think this should restore backward compatibility in this scenario. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh dev3/latest x86_64-centos7-gcc11-opt; git clone https://phab.hepforge.org/source/laura.git; mkdir build install; cmake -S $PWD/laura -B $PWD/build -DLAURA_BUILD_ROOFIT_TASK=ON -DCMAKE_INSTALL_PREFIX=$PWD/install; cd build; make; ```; This will result in a compilation error when trying to compile `LauRooFitTask.cc`:; ```; error: no matching function for call to ‘RooNLLVar::RooNLLVar(const char [7], const char [1], RooAbsPdf&, RooAbsData&, const Bool_t&)’; ```; Attempting the same build with LCG_100 or",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8976
https://github.com/root-project/root/issues/8976:847,Modifiability,extend,extended,847,"- [x] Checked for duplicates. ### Describe the bug; The changes introduced in PR #7616 have the side effect of breaking existing use of the RooNLLVar constructor where it is specified that the PDF is extended but the defaults for all further arguments are accepted, e.g.; `nllVar_ = new RooNLLVar(""nllVar"", """", model_, *exptData_, extended_);`; where `model_` is a `RooAddPdf`, `exptData_` is a `RooDataSet*` and `extended_` is a `bool`. This appears to be due to the reordering of the `extended` argument to the two constructors:; ```; RooNLLVar(const char *name, const char *title, RooAbsPdf& pdf, RooAbsData& data,; RooAbsTestStatistic::Configuration const& cfg, bool extended);; ; RooNLLVar(const char *name, const char *title, RooAbsPdf& pdf, RooAbsData& data,; const RooArgSet& projDeps, RooAbsTestStatistic::Configuration const& cfg,; bool extended = false) ;; ```; where previously the `extended` argument followed `data` in the first case and `projDeps` in the second.; Is it possible to swap back the order of the `extended` and `cfg` arguments and provide a default for `cfg`?; I think this should restore backward compatibility in this scenario. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh dev3/latest x86_64-centos7-gcc11-opt; git clone https://phab.hepforge.org/source/laura.git; mkdir build install; cmake -S $PWD/laura -B $PWD/build -DLAURA_BUILD_ROOFIT_TASK=ON -DCMAKE_INSTALL_PREFIX=$PWD/install; cd build; make; ```; This will result in a compilation error when trying to compile `LauRooFitTask.cc`:; ```; error: no matching function for call to ‘RooNLLVar::RooNLLVar(const char [7], const char [1], RooAbsPdf&, RooAbsData&, const Bool_t&)’; ```; Attempting the same build with LCG_100 or",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8976
https://github.com/root-project/root/issues/8976:895,Modifiability,extend,extended,895,"- [x] Checked for duplicates. ### Describe the bug; The changes introduced in PR #7616 have the side effect of breaking existing use of the RooNLLVar constructor where it is specified that the PDF is extended but the defaults for all further arguments are accepted, e.g.; `nllVar_ = new RooNLLVar(""nllVar"", """", model_, *exptData_, extended_);`; where `model_` is a `RooAddPdf`, `exptData_` is a `RooDataSet*` and `extended_` is a `bool`. This appears to be due to the reordering of the `extended` argument to the two constructors:; ```; RooNLLVar(const char *name, const char *title, RooAbsPdf& pdf, RooAbsData& data,; RooAbsTestStatistic::Configuration const& cfg, bool extended);; ; RooNLLVar(const char *name, const char *title, RooAbsPdf& pdf, RooAbsData& data,; const RooArgSet& projDeps, RooAbsTestStatistic::Configuration const& cfg,; bool extended = false) ;; ```; where previously the `extended` argument followed `data` in the first case and `projDeps` in the second.; Is it possible to swap back the order of the `extended` and `cfg` arguments and provide a default for `cfg`?; I think this should restore backward compatibility in this scenario. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh dev3/latest x86_64-centos7-gcc11-opt; git clone https://phab.hepforge.org/source/laura.git; mkdir build install; cmake -S $PWD/laura -B $PWD/build -DLAURA_BUILD_ROOFIT_TASK=ON -DCMAKE_INSTALL_PREFIX=$PWD/install; cd build; make; ```; This will result in a compilation error when trying to compile `LauRooFitTask.cc`:; ```; error: no matching function for call to ‘RooNLLVar::RooNLLVar(const char [7], const char [1], RooAbsPdf&, RooAbsData&, const Bool_t&)’; ```; Attempting the same build with LCG_100 or",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8976
https://github.com/root-project/root/issues/8976:1025,Modifiability,extend,extended,1025," The changes introduced in PR #7616 have the side effect of breaking existing use of the RooNLLVar constructor where it is specified that the PDF is extended but the defaults for all further arguments are accepted, e.g.; `nllVar_ = new RooNLLVar(""nllVar"", """", model_, *exptData_, extended_);`; where `model_` is a `RooAddPdf`, `exptData_` is a `RooDataSet*` and `extended_` is a `bool`. This appears to be due to the reordering of the `extended` argument to the two constructors:; ```; RooNLLVar(const char *name, const char *title, RooAbsPdf& pdf, RooAbsData& data,; RooAbsTestStatistic::Configuration const& cfg, bool extended);; ; RooNLLVar(const char *name, const char *title, RooAbsPdf& pdf, RooAbsData& data,; const RooArgSet& projDeps, RooAbsTestStatistic::Configuration const& cfg,; bool extended = false) ;; ```; where previously the `extended` argument followed `data` in the first case and `projDeps` in the second.; Is it possible to swap back the order of the `extended` and `cfg` arguments and provide a default for `cfg`?; I think this should restore backward compatibility in this scenario. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh dev3/latest x86_64-centos7-gcc11-opt; git clone https://phab.hepforge.org/source/laura.git; mkdir build install; cmake -S $PWD/laura -B $PWD/build -DLAURA_BUILD_ROOFIT_TASK=ON -DCMAKE_INSTALL_PREFIX=$PWD/install; cd build; make; ```; This will result in a compilation error when trying to compile `LauRooFitTask.cc`:; ```; error: no matching function for call to ‘RooNLLVar::RooNLLVar(const char [7], const char [1], RooAbsPdf&, RooAbsData&, const Bool_t&)’; ```; Attempting the same build with LCG_100 or even dev4/latest does not produce the same error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8976
https://github.com/root-project/root/issues/8981:1058,Deployability,update,updated,1058,"- [x] Checked for duplicates. ### Describe the bug; Warning during build time ROOT 6.24.06, GCC 11.1, Arch Linux x86_64; ```; [ 77%] Built target cppyy3_9; /build/root/src/root-6.24.06/io/io/src/TStreamerInfo.cxx: In member function ‘virtual void TStreamerInfo::BuildCheck(TFile*, Bool_t)’:; /build/root/src/root-6.24.06/io/io/src/TStreamerInfo.cxx:1110:29: warning: ‘this’ pointer is null [-Wnonnull]; 1110 | Warning(""BuildCheck"", ""\n\; | ~~~~~~~^~~~~~~~~~~~~~~~~~~; 1111 | The StreamerInfo from %s does not match existing one (%s:%d)\n\; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 1112 | The existing one has not been used yet and will be discarded.\n\; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 1113 | Reading should work properly, however writing object of\n\; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 1114 | type %s will not work properly. Most likely the version number\n\; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 1115 | of the class was not properly updated [See ClassDef(%s,%d)]."",; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 1116 | file->GetName(), GetName(), fClassVersion, GetName(), GetName(), fClassVersion);; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; [ 77%] Linking CXX shared library ../../lib/libRIO.so; ```; ### Expected behavior; No null pointers. ### To Reproduce; 1. Build ROOT; 2. See warning. ### Setup; 1. ROOT version: 6.24.06; 2. Operating system: Arch Linux x86_64; 3. How you obtained ROOT: GitHub, built from source. ### Additional context; Build options located [here](https://github.com/archlinux/svntogit-community/tree/packages/root/trunk)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8981
https://github.com/root-project/root/issues/8982:49,Testability,log,loggers,49,"In several places in the code of DistRDF, Python loggers are used (`logging` module). Instead, logging mechanisms should be made uniform with the rest of ROOT (gDebug/RLogger).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8982
https://github.com/root-project/root/issues/8982:68,Testability,log,logging,68,"In several places in the code of DistRDF, Python loggers are used (`logging` module). Instead, logging mechanisms should be made uniform with the rest of ROOT (gDebug/RLogger).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8982
https://github.com/root-project/root/issues/8982:95,Testability,log,logging,95,"In several places in the code of DistRDF, Python loggers are used (`logging` module). Instead, logging mechanisms should be made uniform with the rest of ROOT (gDebug/RLogger).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8982
https://github.com/root-project/root/issues/8984:431,Deployability,integrat,integrated,431,"### Describe the bug. I open a workspace (RooWorkspace) that contains a pdf and various parameters. From these I do a loop on pseudo-experiments (""toys"") that generate a RooDataSet. For each toy in the loop, after generation, I delete the RooDataset. But the memory, as reported by the class ProcInfo_t, never decreases. It means that either ProcInfo_t is not actually showing the current memory information, or that is shows the ""integrated memory used since the beginning"",; or that RooDataSet would have a memory leak ?; or that I have a bug in my program ?. I provide a minimum reproducible example.; See for example : ""EXAMPLE OF PROBLEM"". The minimum program is here :; /afs/cern.ch/work/e/escalier/public/ForOthers/ProblemMemory. ### Expected behavior. the expected behaviour would be that when I delete the RooDataSet, the memory would reduce. ### To Reproduce; The README shows the quick steps for allowing to read the root file. ### Setup; I used root 6.18.00 to reproduce the problem on a french cluster of computer. On lxplus, I reproduce the problem, with root 6.20.02. ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8984
https://github.com/root-project/root/issues/8984:844,Energy Efficiency,reduce,reduce,844,"### Describe the bug. I open a workspace (RooWorkspace) that contains a pdf and various parameters. From these I do a loop on pseudo-experiments (""toys"") that generate a RooDataSet. For each toy in the loop, after generation, I delete the RooDataset. But the memory, as reported by the class ProcInfo_t, never decreases. It means that either ProcInfo_t is not actually showing the current memory information, or that is shows the ""integrated memory used since the beginning"",; or that RooDataSet would have a memory leak ?; or that I have a bug in my program ?. I provide a minimum reproducible example.; See for example : ""EXAMPLE OF PROBLEM"". The minimum program is here :; /afs/cern.ch/work/e/escalier/public/ForOthers/ProblemMemory. ### Expected behavior. the expected behaviour would be that when I delete the RooDataSet, the memory would reduce. ### To Reproduce; The README shows the quick steps for allowing to read the root file. ### Setup; I used root 6.18.00 to reproduce the problem on a french cluster of computer. On lxplus, I reproduce the problem, with root 6.20.02. ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8984
https://github.com/root-project/root/issues/8984:431,Integrability,integrat,integrated,431,"### Describe the bug. I open a workspace (RooWorkspace) that contains a pdf and various parameters. From these I do a loop on pseudo-experiments (""toys"") that generate a RooDataSet. For each toy in the loop, after generation, I delete the RooDataset. But the memory, as reported by the class ProcInfo_t, never decreases. It means that either ProcInfo_t is not actually showing the current memory information, or that is shows the ""integrated memory used since the beginning"",; or that RooDataSet would have a memory leak ?; or that I have a bug in my program ?. I provide a minimum reproducible example.; See for example : ""EXAMPLE OF PROBLEM"". The minimum program is here :; /afs/cern.ch/work/e/escalier/public/ForOthers/ProblemMemory. ### Expected behavior. the expected behaviour would be that when I delete the RooDataSet, the memory would reduce. ### To Reproduce; The README shows the quick steps for allowing to read the root file. ### Setup; I used root 6.18.00 to reproduce the problem on a french cluster of computer. On lxplus, I reproduce the problem, with root 6.20.02. ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8984
https://github.com/root-project/root/issues/8985:193,Energy Efficiency,schedul,scheduler,193,"### Explain what you would like to see improved. We should be able to replace the Proof version of the h1analysis tutorial with one using distRDF. The tutorial should work without any external scheduler, i.e. ""just"" local multi-process to demonstrate what a distRDF analysis looks like. Once distRDF is non-experimental, the proof tutorial should be moved to legacy/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8985
https://github.com/root-project/root/pull/8986:106,Integrability,interface,interface,106,"In https://github.com/root-project/root/pull/7616, it was not taken care that the `RooNLLVar` constructor interface changes were backwards compatible, since the affected constructors were considered as internal. However, this caused problems for users nonetheless, hence the interface was changed to be backwards compatible. Closing https://github.com/root-project/root/issues/8976.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8986
https://github.com/root-project/root/pull/8986:275,Integrability,interface,interface,275,"In https://github.com/root-project/root/pull/7616, it was not taken care that the `RooNLLVar` constructor interface changes were backwards compatible, since the affected constructors were considered as internal. However, this caused problems for users nonetheless, hence the interface was changed to be backwards compatible. Closing https://github.com/root-project/root/issues/8976.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8986
https://github.com/root-project/root/issues/8987:130,Availability,error,error,130,"In case where the class generated by MakeProject derived from a class that deletes the operator= then in some compiler we get the error below (which is expected since the class generated by MakeProject has a copy constructor which is needed by stl collection). . ```; SRChh_ROOT6_mcgenProjectSource.cxx: In copy constructor ‘KKceex::KKceex(const KKceex&)’:; SRChh_ROOT6_mcgenProjectSource.cxx:922:54: error: use of deleted function ‘KKpart& KKpart::operator=(const KKpart&)’; 922 | for (Int_t i=0;i<101;i++) m_Phot[i] = rhs.m_Phot[i];; | ^; In file included from KKceex.h:21,; from KKhh2f.h:22,; from SRChh_ROOT6_mcgenProjectHeaders.h:1,; from SRChh_ROOT6_mcgenProjectSource.cxx:3:; KKpart.h:15:7: note: ‘KKpart& KKpart::operator=(const KKpart&)’ is implicitly declared as deleted because ‘KKpart’ declares a move constructor or move assignment operator; 15 | class KKpart : public TObject {; | ^~~~~~; c++: error: SRChh_ROOT6_mcgenProjectSource.o: No such file or directory; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8987
https://github.com/root-project/root/issues/8987:401,Availability,error,error,401,"In case where the class generated by MakeProject derived from a class that deletes the operator= then in some compiler we get the error below (which is expected since the class generated by MakeProject has a copy constructor which is needed by stl collection). . ```; SRChh_ROOT6_mcgenProjectSource.cxx: In copy constructor ‘KKceex::KKceex(const KKceex&)’:; SRChh_ROOT6_mcgenProjectSource.cxx:922:54: error: use of deleted function ‘KKpart& KKpart::operator=(const KKpart&)’; 922 | for (Int_t i=0;i<101;i++) m_Phot[i] = rhs.m_Phot[i];; | ^; In file included from KKceex.h:21,; from KKhh2f.h:22,; from SRChh_ROOT6_mcgenProjectHeaders.h:1,; from SRChh_ROOT6_mcgenProjectSource.cxx:3:; KKpart.h:15:7: note: ‘KKpart& KKpart::operator=(const KKpart&)’ is implicitly declared as deleted because ‘KKpart’ declares a move constructor or move assignment operator; 15 | class KKpart : public TObject {; | ^~~~~~; c++: error: SRChh_ROOT6_mcgenProjectSource.o: No such file or directory; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8987
https://github.com/root-project/root/issues/8987:908,Availability,error,error,908,"In case where the class generated by MakeProject derived from a class that deletes the operator= then in some compiler we get the error below (which is expected since the class generated by MakeProject has a copy constructor which is needed by stl collection). . ```; SRChh_ROOT6_mcgenProjectSource.cxx: In copy constructor ‘KKceex::KKceex(const KKceex&)’:; SRChh_ROOT6_mcgenProjectSource.cxx:922:54: error: use of deleted function ‘KKpart& KKpart::operator=(const KKpart&)’; 922 | for (Int_t i=0;i<101;i++) m_Phot[i] = rhs.m_Phot[i];; | ^; In file included from KKceex.h:21,; from KKhh2f.h:22,; from SRChh_ROOT6_mcgenProjectHeaders.h:1,; from SRChh_ROOT6_mcgenProjectSource.cxx:3:; KKpart.h:15:7: note: ‘KKpart& KKpart::operator=(const KKpart&)’ is implicitly declared as deleted because ‘KKpart’ declares a move constructor or move assignment operator; 15 | class KKpart : public TObject {; | ^~~~~~; c++: error: SRChh_ROOT6_mcgenProjectSource.o: No such file or directory; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8987
https://github.com/root-project/root/issues/8989:1110,Availability,Down,Downloaded,1110,"### Describe the bug; In a local jupyter notebook and SWAN, the output of a code block only shows after the block finishes execution.; This makes progress bars only display after completion, rendering them useless. ### Expected behavior; An std::flush should update the output of a code block of a notebook, even if the code block is still running. ### To Reproduce; For example:; ```; std::chrono::steady_clock::time_point begin = std::chrono::steady_clock::now();. for(long i = 0; i < 1000000000; i++); {; if(i % 100000000 == 0); {; std::cout << i << ""\n"" << std::flush;; }; }. std::chrono::steady_clock::time_point end = std::chrono::steady_clock::now();; std::cout << ""Time difference = "" << std::chrono::duration_cast<std::chrono::milliseconds>(end - begin).count() << ""ms\n"";; ```; This takes 7 seconds on my machine, thus long enough to see the numbers pop up sequentially in a ROOT console.; However, in a local notebook or on SWAN, all of the output is only shown after 7 seconds. ### Setup; ROOT version: ROOT 6.24/06; Operating system: Ubuntu on windows (Ubuntu 20.04.1 LTS); How you obtained ROOT: Downloaded today via Conda; Jupyter Notebook 6.4.3 (ROOT kernel). ### Additional context; On Swan, progress bars work on SWAN software stack 97a, but not on 99 and 100.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8989
https://github.com/root-project/root/issues/8989:259,Deployability,update,update,259,"### Describe the bug; In a local jupyter notebook and SWAN, the output of a code block only shows after the block finishes execution.; This makes progress bars only display after completion, rendering them useless. ### Expected behavior; An std::flush should update the output of a code block of a notebook, even if the code block is still running. ### To Reproduce; For example:; ```; std::chrono::steady_clock::time_point begin = std::chrono::steady_clock::now();. for(long i = 0; i < 1000000000; i++); {; if(i % 100000000 == 0); {; std::cout << i << ""\n"" << std::flush;; }; }. std::chrono::steady_clock::time_point end = std::chrono::steady_clock::now();; std::cout << ""Time difference = "" << std::chrono::duration_cast<std::chrono::milliseconds>(end - begin).count() << ""ms\n"";; ```; This takes 7 seconds on my machine, thus long enough to see the numbers pop up sequentially in a ROOT console.; However, in a local notebook or on SWAN, all of the output is only shown after 7 seconds. ### Setup; ROOT version: ROOT 6.24/06; Operating system: Ubuntu on windows (Ubuntu 20.04.1 LTS); How you obtained ROOT: Downloaded today via Conda; Jupyter Notebook 6.4.3 (ROOT kernel). ### Additional context; On Swan, progress bars work on SWAN software stack 97a, but not on 99 and 100.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8989
https://github.com/root-project/root/issues/8989:146,Usability,progress bar,progress bars,146,"### Describe the bug; In a local jupyter notebook and SWAN, the output of a code block only shows after the block finishes execution.; This makes progress bars only display after completion, rendering them useless. ### Expected behavior; An std::flush should update the output of a code block of a notebook, even if the code block is still running. ### To Reproduce; For example:; ```; std::chrono::steady_clock::time_point begin = std::chrono::steady_clock::now();. for(long i = 0; i < 1000000000; i++); {; if(i % 100000000 == 0); {; std::cout << i << ""\n"" << std::flush;; }; }. std::chrono::steady_clock::time_point end = std::chrono::steady_clock::now();; std::cout << ""Time difference = "" << std::chrono::duration_cast<std::chrono::milliseconds>(end - begin).count() << ""ms\n"";; ```; This takes 7 seconds on my machine, thus long enough to see the numbers pop up sequentially in a ROOT console.; However, in a local notebook or on SWAN, all of the output is only shown after 7 seconds. ### Setup; ROOT version: ROOT 6.24/06; Operating system: Ubuntu on windows (Ubuntu 20.04.1 LTS); How you obtained ROOT: Downloaded today via Conda; Jupyter Notebook 6.4.3 (ROOT kernel). ### Additional context; On Swan, progress bars work on SWAN software stack 97a, but not on 99 and 100.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8989
https://github.com/root-project/root/issues/8989:1209,Usability,progress bar,progress bars,1209,"### Describe the bug; In a local jupyter notebook and SWAN, the output of a code block only shows after the block finishes execution.; This makes progress bars only display after completion, rendering them useless. ### Expected behavior; An std::flush should update the output of a code block of a notebook, even if the code block is still running. ### To Reproduce; For example:; ```; std::chrono::steady_clock::time_point begin = std::chrono::steady_clock::now();. for(long i = 0; i < 1000000000; i++); {; if(i % 100000000 == 0); {; std::cout << i << ""\n"" << std::flush;; }; }. std::chrono::steady_clock::time_point end = std::chrono::steady_clock::now();; std::cout << ""Time difference = "" << std::chrono::duration_cast<std::chrono::milliseconds>(end - begin).count() << ""ms\n"";; ```; This takes 7 seconds on my machine, thus long enough to see the numbers pop up sequentially in a ROOT console.; However, in a local notebook or on SWAN, all of the output is only shown after 7 seconds. ### Setup; ROOT version: ROOT 6.24/06; Operating system: Ubuntu on windows (Ubuntu 20.04.1 LTS); How you obtained ROOT: Downloaded today via Conda; Jupyter Notebook 6.4.3 (ROOT kernel). ### Additional context; On Swan, progress bars work on SWAN software stack 97a, but not on 99 and 100.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8989
https://github.com/root-project/root/pull/8991:52,Usability,guid,guide,52,Move documentation from the manual to the reference guide.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8991
https://github.com/root-project/root/pull/8993:195,Availability,error,error,195,This PR fixes an issue in parsing correctly the Convolution operator from an ONNX file. . In addition an utility funciton to convert the tensor shape to a string is added to improve the produced error messages,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8993
https://github.com/root-project/root/pull/8993:201,Integrability,message,messages,201,This PR fixes an issue in parsing correctly the Convolution operator from an ONNX file. . In addition an utility funciton to convert the tensor shape to a string is added to improve the produced error messages,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8993
https://github.com/root-project/root/pull/8995:194,Availability,error,error,194,"This fixes #8987 (case where the base class deletes operator=). In case where the class generated by MakeProject derived from a class that deletes the operator= then in some compiler we get the error below (which is expected since the class generated by MakeProject has a copy constructor which is needed by stl collection). ```; SRChh_ROOT6_mcgenProjectSource.cxx: In copy constructor ‘KKceex::KKceex(const KKceex&)’:; SRChh_ROOT6_mcgenProjectSource.cxx:922:54: error: use of deleted function ‘KKpart& KKpart::operator=(const KKpart&)’; 922 | for (Int_t i=0;i<101;i++) m_Phot[i] = rhs.m_Phot[i];; | ^; In file included from KKceex.h:21,; from KKhh2f.h:22,; from SRChh_ROOT6_mcgenProjectHeaders.h:1,; from SRChh_ROOT6_mcgenProjectSource.cxx:3:; KKpart.h:15:7: note: ‘KKpart& KKpart::operator=(const KKpart&)’ is implicitly declared as deleted because ‘KKpart’ declares a move constructor or move assignment operator; 15 | class KKpart : public TObject {; | ^~~~~~; c++: error: SRChh_ROOT6_mcgenProjectSource.o: No such file or directory; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8995
https://github.com/root-project/root/pull/8995:463,Availability,error,error,463,"This fixes #8987 (case where the base class deletes operator=). In case where the class generated by MakeProject derived from a class that deletes the operator= then in some compiler we get the error below (which is expected since the class generated by MakeProject has a copy constructor which is needed by stl collection). ```; SRChh_ROOT6_mcgenProjectSource.cxx: In copy constructor ‘KKceex::KKceex(const KKceex&)’:; SRChh_ROOT6_mcgenProjectSource.cxx:922:54: error: use of deleted function ‘KKpart& KKpart::operator=(const KKpart&)’; 922 | for (Int_t i=0;i<101;i++) m_Phot[i] = rhs.m_Phot[i];; | ^; In file included from KKceex.h:21,; from KKhh2f.h:22,; from SRChh_ROOT6_mcgenProjectHeaders.h:1,; from SRChh_ROOT6_mcgenProjectSource.cxx:3:; KKpart.h:15:7: note: ‘KKpart& KKpart::operator=(const KKpart&)’ is implicitly declared as deleted because ‘KKpart’ declares a move constructor or move assignment operator; 15 | class KKpart : public TObject {; | ^~~~~~; c++: error: SRChh_ROOT6_mcgenProjectSource.o: No such file or directory; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8995
https://github.com/root-project/root/pull/8995:970,Availability,error,error,970,"This fixes #8987 (case where the base class deletes operator=). In case where the class generated by MakeProject derived from a class that deletes the operator= then in some compiler we get the error below (which is expected since the class generated by MakeProject has a copy constructor which is needed by stl collection). ```; SRChh_ROOT6_mcgenProjectSource.cxx: In copy constructor ‘KKceex::KKceex(const KKceex&)’:; SRChh_ROOT6_mcgenProjectSource.cxx:922:54: error: use of deleted function ‘KKpart& KKpart::operator=(const KKpart&)’; 922 | for (Int_t i=0;i<101;i++) m_Phot[i] = rhs.m_Phot[i];; | ^; In file included from KKceex.h:21,; from KKhh2f.h:22,; from SRChh_ROOT6_mcgenProjectHeaders.h:1,; from SRChh_ROOT6_mcgenProjectSource.cxx:3:; KKpart.h:15:7: note: ‘KKpart& KKpart::operator=(const KKpart&)’ is implicitly declared as deleted because ‘KKpart’ declares a move constructor or move assignment operator; 15 | class KKpart : public TObject {; | ^~~~~~; c++: error: SRChh_ROOT6_mcgenProjectSource.o: No such file or directory; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8995
https://github.com/root-project/root/pull/8997:144,Availability,failure,failures,144,"Avoid using forward-declared class as default template arguments in; `RooMinimizer` and `MinuitFcnGrad`. This is the fix for the following test failures in the nightlies:. ```; projectroot.roottest.python.cling.roottest_python_cling_class; projectroot.roottest.python.cling.roottest_python_cling_api; projectroot.roottest.root.meta.tclass.regression.roottest_root_meta_tclass_regression_execNormalizationInfPy; projectroot.roottest.python.cling.roottest_python_cling_cling; projectroot.roottest.root.meta.enumPayloadManipulation.roottest_root_meta_enumPayloadManipulation_checkEnumFwdDecl; ```. For sure we know that these failures got introduced by; root-project#8700. The failures that we see since [root-project#8700](root-project#8700), here are the comments where the bot reported them first:; First Ubuntu 16 fail:; [root-project#8700 (comment)](root-project#8700 (comment)). First Windows 10 fail:; [root-project#8700 (comment)](root-project#8700 (comment)). I narrowed down the origin of this regression to a small part of the; diff of the full PR. The bad guy is some change in one of these files:. * roofit/roofitcore/inc/RooMinimizer.h; * roofit/roofitcore/test/CMakeLists.txt; * roofit/roofitcore/test/TestStatistics/testLikelihoodSerial.cxx. What was fishy in `RooMinimizer.h` was the usage of a forward-declared; class as default template argument. The default template arguments are; commented out now, because these will only become relevant in later; developments by @egpbos.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8997
https://github.com/root-project/root/pull/8997:623,Availability,failure,failures,623,"Avoid using forward-declared class as default template arguments in; `RooMinimizer` and `MinuitFcnGrad`. This is the fix for the following test failures in the nightlies:. ```; projectroot.roottest.python.cling.roottest_python_cling_class; projectroot.roottest.python.cling.roottest_python_cling_api; projectroot.roottest.root.meta.tclass.regression.roottest_root_meta_tclass_regression_execNormalizationInfPy; projectroot.roottest.python.cling.roottest_python_cling_cling; projectroot.roottest.root.meta.enumPayloadManipulation.roottest_root_meta_enumPayloadManipulation_checkEnumFwdDecl; ```. For sure we know that these failures got introduced by; root-project#8700. The failures that we see since [root-project#8700](root-project#8700), here are the comments where the bot reported them first:; First Ubuntu 16 fail:; [root-project#8700 (comment)](root-project#8700 (comment)). First Windows 10 fail:; [root-project#8700 (comment)](root-project#8700 (comment)). I narrowed down the origin of this regression to a small part of the; diff of the full PR. The bad guy is some change in one of these files:. * roofit/roofitcore/inc/RooMinimizer.h; * roofit/roofitcore/test/CMakeLists.txt; * roofit/roofitcore/test/TestStatistics/testLikelihoodSerial.cxx. What was fishy in `RooMinimizer.h` was the usage of a forward-declared; class as default template argument. The default template arguments are; commented out now, because these will only become relevant in later; developments by @egpbos.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8997
https://github.com/root-project/root/pull/8997:674,Availability,failure,failures,674,"Avoid using forward-declared class as default template arguments in; `RooMinimizer` and `MinuitFcnGrad`. This is the fix for the following test failures in the nightlies:. ```; projectroot.roottest.python.cling.roottest_python_cling_class; projectroot.roottest.python.cling.roottest_python_cling_api; projectroot.roottest.root.meta.tclass.regression.roottest_root_meta_tclass_regression_execNormalizationInfPy; projectroot.roottest.python.cling.roottest_python_cling_cling; projectroot.roottest.root.meta.enumPayloadManipulation.roottest_root_meta_enumPayloadManipulation_checkEnumFwdDecl; ```. For sure we know that these failures got introduced by; root-project#8700. The failures that we see since [root-project#8700](root-project#8700), here are the comments where the bot reported them first:; First Ubuntu 16 fail:; [root-project#8700 (comment)](root-project#8700 (comment)). First Windows 10 fail:; [root-project#8700 (comment)](root-project#8700 (comment)). I narrowed down the origin of this regression to a small part of the; diff of the full PR. The bad guy is some change in one of these files:. * roofit/roofitcore/inc/RooMinimizer.h; * roofit/roofitcore/test/CMakeLists.txt; * roofit/roofitcore/test/TestStatistics/testLikelihoodSerial.cxx. What was fishy in `RooMinimizer.h` was the usage of a forward-declared; class as default template argument. The default template arguments are; commented out now, because these will only become relevant in later; developments by @egpbos.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8997
https://github.com/root-project/root/pull/8997:977,Availability,down,down,977,"Avoid using forward-declared class as default template arguments in; `RooMinimizer` and `MinuitFcnGrad`. This is the fix for the following test failures in the nightlies:. ```; projectroot.roottest.python.cling.roottest_python_cling_class; projectroot.roottest.python.cling.roottest_python_cling_api; projectroot.roottest.root.meta.tclass.regression.roottest_root_meta_tclass_regression_execNormalizationInfPy; projectroot.roottest.python.cling.roottest_python_cling_cling; projectroot.roottest.root.meta.enumPayloadManipulation.roottest_root_meta_enumPayloadManipulation_checkEnumFwdDecl; ```. For sure we know that these failures got introduced by; root-project#8700. The failures that we see since [root-project#8700](root-project#8700), here are the comments where the bot reported them first:; First Ubuntu 16 fail:; [root-project#8700 (comment)](root-project#8700 (comment)). First Windows 10 fail:; [root-project#8700 (comment)](root-project#8700 (comment)). I narrowed down the origin of this regression to a small part of the; diff of the full PR. The bad guy is some change in one of these files:. * roofit/roofitcore/inc/RooMinimizer.h; * roofit/roofitcore/test/CMakeLists.txt; * roofit/roofitcore/test/TestStatistics/testLikelihoodSerial.cxx. What was fishy in `RooMinimizer.h` was the usage of a forward-declared; class as default template argument. The default template arguments are; commented out now, because these will only become relevant in later; developments by @egpbos.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8997
https://github.com/root-project/root/pull/8997:0,Safety,Avoid,Avoid,0,"Avoid using forward-declared class as default template arguments in; `RooMinimizer` and `MinuitFcnGrad`. This is the fix for the following test failures in the nightlies:. ```; projectroot.roottest.python.cling.roottest_python_cling_class; projectroot.roottest.python.cling.roottest_python_cling_api; projectroot.roottest.root.meta.tclass.regression.roottest_root_meta_tclass_regression_execNormalizationInfPy; projectroot.roottest.python.cling.roottest_python_cling_cling; projectroot.roottest.root.meta.enumPayloadManipulation.roottest_root_meta_enumPayloadManipulation_checkEnumFwdDecl; ```. For sure we know that these failures got introduced by; root-project#8700. The failures that we see since [root-project#8700](root-project#8700), here are the comments where the bot reported them first:; First Ubuntu 16 fail:; [root-project#8700 (comment)](root-project#8700 (comment)). First Windows 10 fail:; [root-project#8700 (comment)](root-project#8700 (comment)). I narrowed down the origin of this regression to a small part of the; diff of the full PR. The bad guy is some change in one of these files:. * roofit/roofitcore/inc/RooMinimizer.h; * roofit/roofitcore/test/CMakeLists.txt; * roofit/roofitcore/test/TestStatistics/testLikelihoodSerial.cxx. What was fishy in `RooMinimizer.h` was the usage of a forward-declared; class as default template argument. The default template arguments are; commented out now, because these will only become relevant in later; developments by @egpbos.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8997
https://github.com/root-project/root/pull/8997:139,Testability,test,test,139,"Avoid using forward-declared class as default template arguments in; `RooMinimizer` and `MinuitFcnGrad`. This is the fix for the following test failures in the nightlies:. ```; projectroot.roottest.python.cling.roottest_python_cling_class; projectroot.roottest.python.cling.roottest_python_cling_api; projectroot.roottest.root.meta.tclass.regression.roottest_root_meta_tclass_regression_execNormalizationInfPy; projectroot.roottest.python.cling.roottest_python_cling_cling; projectroot.roottest.root.meta.enumPayloadManipulation.roottest_root_meta_enumPayloadManipulation_checkEnumFwdDecl; ```. For sure we know that these failures got introduced by; root-project#8700. The failures that we see since [root-project#8700](root-project#8700), here are the comments where the bot reported them first:; First Ubuntu 16 fail:; [root-project#8700 (comment)](root-project#8700 (comment)). First Windows 10 fail:; [root-project#8700 (comment)](root-project#8700 (comment)). I narrowed down the origin of this regression to a small part of the; diff of the full PR. The bad guy is some change in one of these files:. * roofit/roofitcore/inc/RooMinimizer.h; * roofit/roofitcore/test/CMakeLists.txt; * roofit/roofitcore/test/TestStatistics/testLikelihoodSerial.cxx. What was fishy in `RooMinimizer.h` was the usage of a forward-declared; class as default template argument. The default template arguments are; commented out now, because these will only become relevant in later; developments by @egpbos.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8997
https://github.com/root-project/root/pull/8997:1168,Testability,test,test,1168,"Avoid using forward-declared class as default template arguments in; `RooMinimizer` and `MinuitFcnGrad`. This is the fix for the following test failures in the nightlies:. ```; projectroot.roottest.python.cling.roottest_python_cling_class; projectroot.roottest.python.cling.roottest_python_cling_api; projectroot.roottest.root.meta.tclass.regression.roottest_root_meta_tclass_regression_execNormalizationInfPy; projectroot.roottest.python.cling.roottest_python_cling_cling; projectroot.roottest.root.meta.enumPayloadManipulation.roottest_root_meta_enumPayloadManipulation_checkEnumFwdDecl; ```. For sure we know that these failures got introduced by; root-project#8700. The failures that we see since [root-project#8700](root-project#8700), here are the comments where the bot reported them first:; First Ubuntu 16 fail:; [root-project#8700 (comment)](root-project#8700 (comment)). First Windows 10 fail:; [root-project#8700 (comment)](root-project#8700 (comment)). I narrowed down the origin of this regression to a small part of the; diff of the full PR. The bad guy is some change in one of these files:. * roofit/roofitcore/inc/RooMinimizer.h; * roofit/roofitcore/test/CMakeLists.txt; * roofit/roofitcore/test/TestStatistics/testLikelihoodSerial.cxx. What was fishy in `RooMinimizer.h` was the usage of a forward-declared; class as default template argument. The default template arguments are; commented out now, because these will only become relevant in later; developments by @egpbos.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8997
https://github.com/root-project/root/pull/8997:1209,Testability,test,test,1209,"Avoid using forward-declared class as default template arguments in; `RooMinimizer` and `MinuitFcnGrad`. This is the fix for the following test failures in the nightlies:. ```; projectroot.roottest.python.cling.roottest_python_cling_class; projectroot.roottest.python.cling.roottest_python_cling_api; projectroot.roottest.root.meta.tclass.regression.roottest_root_meta_tclass_regression_execNormalizationInfPy; projectroot.roottest.python.cling.roottest_python_cling_cling; projectroot.roottest.root.meta.enumPayloadManipulation.roottest_root_meta_enumPayloadManipulation_checkEnumFwdDecl; ```. For sure we know that these failures got introduced by; root-project#8700. The failures that we see since [root-project#8700](root-project#8700), here are the comments where the bot reported them first:; First Ubuntu 16 fail:; [root-project#8700 (comment)](root-project#8700 (comment)). First Windows 10 fail:; [root-project#8700 (comment)](root-project#8700 (comment)). I narrowed down the origin of this regression to a small part of the; diff of the full PR. The bad guy is some change in one of these files:. * roofit/roofitcore/inc/RooMinimizer.h; * roofit/roofitcore/test/CMakeLists.txt; * roofit/roofitcore/test/TestStatistics/testLikelihoodSerial.cxx. What was fishy in `RooMinimizer.h` was the usage of a forward-declared; class as default template argument. The default template arguments are; commented out now, because these will only become relevant in later; developments by @egpbos.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8997
https://github.com/root-project/root/pull/8997:1214,Testability,Test,TestStatistics,1214,"Avoid using forward-declared class as default template arguments in; `RooMinimizer` and `MinuitFcnGrad`. This is the fix for the following test failures in the nightlies:. ```; projectroot.roottest.python.cling.roottest_python_cling_class; projectroot.roottest.python.cling.roottest_python_cling_api; projectroot.roottest.root.meta.tclass.regression.roottest_root_meta_tclass_regression_execNormalizationInfPy; projectroot.roottest.python.cling.roottest_python_cling_cling; projectroot.roottest.root.meta.enumPayloadManipulation.roottest_root_meta_enumPayloadManipulation_checkEnumFwdDecl; ```. For sure we know that these failures got introduced by; root-project#8700. The failures that we see since [root-project#8700](root-project#8700), here are the comments where the bot reported them first:; First Ubuntu 16 fail:; [root-project#8700 (comment)](root-project#8700 (comment)). First Windows 10 fail:; [root-project#8700 (comment)](root-project#8700 (comment)). I narrowed down the origin of this regression to a small part of the; diff of the full PR. The bad guy is some change in one of these files:. * roofit/roofitcore/inc/RooMinimizer.h; * roofit/roofitcore/test/CMakeLists.txt; * roofit/roofitcore/test/TestStatistics/testLikelihoodSerial.cxx. What was fishy in `RooMinimizer.h` was the usage of a forward-declared; class as default template argument. The default template arguments are; commented out now, because these will only become relevant in later; developments by @egpbos.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8997
https://github.com/root-project/root/pull/8997:1229,Testability,test,testLikelihoodSerial,1229,"Avoid using forward-declared class as default template arguments in; `RooMinimizer` and `MinuitFcnGrad`. This is the fix for the following test failures in the nightlies:. ```; projectroot.roottest.python.cling.roottest_python_cling_class; projectroot.roottest.python.cling.roottest_python_cling_api; projectroot.roottest.root.meta.tclass.regression.roottest_root_meta_tclass_regression_execNormalizationInfPy; projectroot.roottest.python.cling.roottest_python_cling_cling; projectroot.roottest.root.meta.enumPayloadManipulation.roottest_root_meta_enumPayloadManipulation_checkEnumFwdDecl; ```. For sure we know that these failures got introduced by; root-project#8700. The failures that we see since [root-project#8700](root-project#8700), here are the comments where the bot reported them first:; First Ubuntu 16 fail:; [root-project#8700 (comment)](root-project#8700 (comment)). First Windows 10 fail:; [root-project#8700 (comment)](root-project#8700 (comment)). I narrowed down the origin of this regression to a small part of the; diff of the full PR. The bad guy is some change in one of these files:. * roofit/roofitcore/inc/RooMinimizer.h; * roofit/roofitcore/test/CMakeLists.txt; * roofit/roofitcore/test/TestStatistics/testLikelihoodSerial.cxx. What was fishy in `RooMinimizer.h` was the usage of a forward-declared; class as default template argument. The default template arguments are; commented out now, because these will only become relevant in later; developments by @egpbos.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8997
https://github.com/root-project/root/issues/8999:3325,Availability,avail,available,3325,"if(); list(APPEND CMAKE_MODULE_PATH ""${CMAKEMODULES_DIR}""). option(BUILD_DOCUMENTATION ""Create and install the HTML based API documentation (requires Doxygen)"" ON); if(BUILD_DOCUMENTATION); find_package(Doxygen OPTIONAL_COMPONENTS dot). if(DOXYGEN_FOUND); set(DOXYGEN_PROJECT_NAME ""Data Acquisition System""); set(DOXYGEN_USE_MDFILE_AS_MAINPAGE ""${CMAKE_SOURCE_DIR}/README.md""); set(DOXYGEN_WARN_NO_PARAMDOC YES); set(DOXYGEN_GENERATE_QHP YES); set(DOXYGEN_QCH_FILE ""TheName.qch""); set(DOXYGEN_QHP_NAMESPACE org.doxygen.TheName.Project); set(DOXYGEN_GENERATE_LATEX NO); set(DOXYGEN_GENERATE_TREEVIEW YES); #set(DOXYGEN_HIDE_UNDOC_RELATIONS NO); #set(DOXYGEN_DOT_NUM_THREADS 1); #set(DOXYGEN_UML_LOOK YES); #set(DOXYGEN_UML_LIMIT_NUM_FIELDS 50); #set(DOXYGEN_TEMPLATE_RELATIONS YES); set(DOXYGEN_DOT_IMAGE_FORMAT svg); set(DOXYGEN_INTERACTIVE_SVG YES); #set(DOXYGEN_DOT_GRAPH_MAX_NODES 100); #set(DOXYGEN_DOT_TRANSPARENT YES); #set(DOXYGEN_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}). doxygen_add_docs(doc ALL; ${CMAKE_SOURCE_DIR} ${CMAKE_SOURCE_DIR}/doc/cmake.dox ${CMAKE_SOURCE_DIR}/usb; ALLOW_DUPLICATE_CUSTOM_TARGETS; #USE_STAMP_FILE; COMMENT ""Generating doxygen documentation for ${PROJECT_NAME}""; ). # install generated files; #install(; # DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/doc/html; # TYPE DOC; # OPTIONAL # because available only after ""make doc""; #); else(); message(FATAL_ERROR ""Doxygen is needed to build the documentation.""); endif(). add_custom_target(dox ALL; #DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp; DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/CMakeLists.txt; ); include(make_documentation); PARSE_CMAKE_DOCUMENTATION(INCLUDES ""${CMAKE_CURRENT_SOURCE_DIR}/CMakeLists.txt"" EXCLUDES ""${CMAKE_CURRENT_BINARY_DIR}/*"" ); WRITE_CMAKE_DOCUMENTATION( ""${CMAKE_CURRENT_SOURCE_DIR}/cmake.dox"" SORTED ); endif(); ```; ### Aditional context; https://github.com/root-project/root/issues/8950; https://github.com/root-project/root/issues/8947; https://github.com/root-project/root/issues/8781",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8999
https://github.com/root-project/root/issues/8999:1106,Deployability,Release,Release,1106,"com/root-project/root/issues/8742#issuecomment-888177051. There is a way to document CMake flags so that they appear neatly within the Doxygen reference guide of ROOT. ### Optional: share how it could be improved; https://github.com/ferdymercury/cmake-modules/blob/master/make_documentation.cmake; http://jesnault.fr/website/document-your-cmake-code-within-doxygen/. In the main, I use add_subdirectory(doc), and then I create a ""doc"" folder with a .gitignore containing cmake.dox, and then a CMakeLists.txt with more or less this structure:. ```; ## CMAKE_DOCUMENTATION_START CMakeLists.txt; ##; ## Main CMakeFile for compiling zdt-daq.; ## Following variables can be configured when running ccmake:; ## <table>; ## <caption id=""config-cmake"">Table of configurable CMake parameters</caption>; ## <tr><th>Variable <th>Values <th>Description; ## <tr><td>BUILD_DOCUMENTATION <td>ON (OFF) <td>Build Doxygen HTML documentation; ## <tr><td>CLI11_DIR <td>/opt/CLI11 <td>CLI11 git repository; ## <tr><td>CMAKE_BUILD_TYPE <td>Release (Debug) <td>Choose the type of build; ## <tr><td>ENABLE_TESTS <td>ON (OFF) <td>Build CTests; #~ ## <tr><td>FunctionalPlus_DIR <td>/opt/FunctionalPlus/install/lib/cmake/FunctionalPlus <td>FPlus install folder containing FindFunctionalPlus; ## <tr><td>CMAKEMODULES_DIR <td>/opt/cmake-modules <td>rpavlik git source dir, use https://github.com/ferdymercury/cmake-modules and git checkout master; ## <tr><td>ROOT_DIR <td>$ROOTSYS (/opt/root) <td>ROOT build directory; ## <tr><td>ZSTR_DIR <td>/opt/zstr <td>ZSTR git repository; ## </table>; ##; ## CMAKE_DOCUMENTATION_END; ## See https://www.stack.nl/~dimitri/doxygen/manual/tables.html. # Add Doxygen documentation https://stackoverflow.com/questions/34878276/build-doxygen-from-cmake-script. ### cmake-modules; if(NOT DEFINED CMAKEMODULES_DIR); set (CMAKEMODULES_DIR ""/opt/cmake-modules"" CACHE STRING ""cmake-modules git repository""); endif(); list(APPEND CMAKE_MODULE_PATH ""${CMAKEMODULES_DIR}""). option(BUILD_DOCUMENTATION ""Cr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8999
https://github.com/root-project/root/issues/8999:1264,Deployability,install,install,1264,"com/root-project/root/issues/8742#issuecomment-888177051. There is a way to document CMake flags so that they appear neatly within the Doxygen reference guide of ROOT. ### Optional: share how it could be improved; https://github.com/ferdymercury/cmake-modules/blob/master/make_documentation.cmake; http://jesnault.fr/website/document-your-cmake-code-within-doxygen/. In the main, I use add_subdirectory(doc), and then I create a ""doc"" folder with a .gitignore containing cmake.dox, and then a CMakeLists.txt with more or less this structure:. ```; ## CMAKE_DOCUMENTATION_START CMakeLists.txt; ##; ## Main CMakeFile for compiling zdt-daq.; ## Following variables can be configured when running ccmake:; ## <table>; ## <caption id=""config-cmake"">Table of configurable CMake parameters</caption>; ## <tr><th>Variable <th>Values <th>Description; ## <tr><td>BUILD_DOCUMENTATION <td>ON (OFF) <td>Build Doxygen HTML documentation; ## <tr><td>CLI11_DIR <td>/opt/CLI11 <td>CLI11 git repository; ## <tr><td>CMAKE_BUILD_TYPE <td>Release (Debug) <td>Choose the type of build; ## <tr><td>ENABLE_TESTS <td>ON (OFF) <td>Build CTests; #~ ## <tr><td>FunctionalPlus_DIR <td>/opt/FunctionalPlus/install/lib/cmake/FunctionalPlus <td>FPlus install folder containing FindFunctionalPlus; ## <tr><td>CMAKEMODULES_DIR <td>/opt/cmake-modules <td>rpavlik git source dir, use https://github.com/ferdymercury/cmake-modules and git checkout master; ## <tr><td>ROOT_DIR <td>$ROOTSYS (/opt/root) <td>ROOT build directory; ## <tr><td>ZSTR_DIR <td>/opt/zstr <td>ZSTR git repository; ## </table>; ##; ## CMAKE_DOCUMENTATION_END; ## See https://www.stack.nl/~dimitri/doxygen/manual/tables.html. # Add Doxygen documentation https://stackoverflow.com/questions/34878276/build-doxygen-from-cmake-script. ### cmake-modules; if(NOT DEFINED CMAKEMODULES_DIR); set (CMAKEMODULES_DIR ""/opt/cmake-modules"" CACHE STRING ""cmake-modules git repository""); endif(); list(APPEND CMAKE_MODULE_PATH ""${CMAKEMODULES_DIR}""). option(BUILD_DOCUMENTATION ""Cr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8999
https://github.com/root-project/root/issues/8999:1307,Deployability,install,install,1307,"com/root-project/root/issues/8742#issuecomment-888177051. There is a way to document CMake flags so that they appear neatly within the Doxygen reference guide of ROOT. ### Optional: share how it could be improved; https://github.com/ferdymercury/cmake-modules/blob/master/make_documentation.cmake; http://jesnault.fr/website/document-your-cmake-code-within-doxygen/. In the main, I use add_subdirectory(doc), and then I create a ""doc"" folder with a .gitignore containing cmake.dox, and then a CMakeLists.txt with more or less this structure:. ```; ## CMAKE_DOCUMENTATION_START CMakeLists.txt; ##; ## Main CMakeFile for compiling zdt-daq.; ## Following variables can be configured when running ccmake:; ## <table>; ## <caption id=""config-cmake"">Table of configurable CMake parameters</caption>; ## <tr><th>Variable <th>Values <th>Description; ## <tr><td>BUILD_DOCUMENTATION <td>ON (OFF) <td>Build Doxygen HTML documentation; ## <tr><td>CLI11_DIR <td>/opt/CLI11 <td>CLI11 git repository; ## <tr><td>CMAKE_BUILD_TYPE <td>Release (Debug) <td>Choose the type of build; ## <tr><td>ENABLE_TESTS <td>ON (OFF) <td>Build CTests; #~ ## <tr><td>FunctionalPlus_DIR <td>/opt/FunctionalPlus/install/lib/cmake/FunctionalPlus <td>FPlus install folder containing FindFunctionalPlus; ## <tr><td>CMAKEMODULES_DIR <td>/opt/cmake-modules <td>rpavlik git source dir, use https://github.com/ferdymercury/cmake-modules and git checkout master; ## <tr><td>ROOT_DIR <td>$ROOTSYS (/opt/root) <td>ROOT build directory; ## <tr><td>ZSTR_DIR <td>/opt/zstr <td>ZSTR git repository; ## </table>; ##; ## CMAKE_DOCUMENTATION_END; ## See https://www.stack.nl/~dimitri/doxygen/manual/tables.html. # Add Doxygen documentation https://stackoverflow.com/questions/34878276/build-doxygen-from-cmake-script. ### cmake-modules; if(NOT DEFINED CMAKEMODULES_DIR); set (CMAKEMODULES_DIR ""/opt/cmake-modules"" CACHE STRING ""cmake-modules git repository""); endif(); list(APPEND CMAKE_MODULE_PATH ""${CMAKEMODULES_DIR}""). option(BUILD_DOCUMENTATION ""Cr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8999
https://github.com/root-project/root/issues/8999:2097,Deployability,install,install,2097,"build; ## <tr><td>ENABLE_TESTS <td>ON (OFF) <td>Build CTests; #~ ## <tr><td>FunctionalPlus_DIR <td>/opt/FunctionalPlus/install/lib/cmake/FunctionalPlus <td>FPlus install folder containing FindFunctionalPlus; ## <tr><td>CMAKEMODULES_DIR <td>/opt/cmake-modules <td>rpavlik git source dir, use https://github.com/ferdymercury/cmake-modules and git checkout master; ## <tr><td>ROOT_DIR <td>$ROOTSYS (/opt/root) <td>ROOT build directory; ## <tr><td>ZSTR_DIR <td>/opt/zstr <td>ZSTR git repository; ## </table>; ##; ## CMAKE_DOCUMENTATION_END; ## See https://www.stack.nl/~dimitri/doxygen/manual/tables.html. # Add Doxygen documentation https://stackoverflow.com/questions/34878276/build-doxygen-from-cmake-script. ### cmake-modules; if(NOT DEFINED CMAKEMODULES_DIR); set (CMAKEMODULES_DIR ""/opt/cmake-modules"" CACHE STRING ""cmake-modules git repository""); endif(); list(APPEND CMAKE_MODULE_PATH ""${CMAKEMODULES_DIR}""). option(BUILD_DOCUMENTATION ""Create and install the HTML based API documentation (requires Doxygen)"" ON); if(BUILD_DOCUMENTATION); find_package(Doxygen OPTIONAL_COMPONENTS dot). if(DOXYGEN_FOUND); set(DOXYGEN_PROJECT_NAME ""Data Acquisition System""); set(DOXYGEN_USE_MDFILE_AS_MAINPAGE ""${CMAKE_SOURCE_DIR}/README.md""); set(DOXYGEN_WARN_NO_PARAMDOC YES); set(DOXYGEN_GENERATE_QHP YES); set(DOXYGEN_QCH_FILE ""TheName.qch""); set(DOXYGEN_QHP_NAMESPACE org.doxygen.TheName.Project); set(DOXYGEN_GENERATE_LATEX NO); set(DOXYGEN_GENERATE_TREEVIEW YES); #set(DOXYGEN_HIDE_UNDOC_RELATIONS NO); #set(DOXYGEN_DOT_NUM_THREADS 1); #set(DOXYGEN_UML_LOOK YES); #set(DOXYGEN_UML_LIMIT_NUM_FIELDS 50); #set(DOXYGEN_TEMPLATE_RELATIONS YES); set(DOXYGEN_DOT_IMAGE_FORMAT svg); set(DOXYGEN_INTERACTIVE_SVG YES); #set(DOXYGEN_DOT_GRAPH_MAX_NODES 100); #set(DOXYGEN_DOT_TRANSPARENT YES); #set(DOXYGEN_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}). doxygen_add_docs(doc ALL; ${CMAKE_SOURCE_DIR} ${CMAKE_SOURCE_DIR}/doc/cmake.dox ${CMAKE_SOURCE_DIR}/usb; ALLOW_DUPLICATE_CUSTOM_TARGETS; #USE_STAMP_FILE; COMMENT """,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8999
https://github.com/root-project/root/issues/8999:3206,Deployability,install,install,3206,"if(); list(APPEND CMAKE_MODULE_PATH ""${CMAKEMODULES_DIR}""). option(BUILD_DOCUMENTATION ""Create and install the HTML based API documentation (requires Doxygen)"" ON); if(BUILD_DOCUMENTATION); find_package(Doxygen OPTIONAL_COMPONENTS dot). if(DOXYGEN_FOUND); set(DOXYGEN_PROJECT_NAME ""Data Acquisition System""); set(DOXYGEN_USE_MDFILE_AS_MAINPAGE ""${CMAKE_SOURCE_DIR}/README.md""); set(DOXYGEN_WARN_NO_PARAMDOC YES); set(DOXYGEN_GENERATE_QHP YES); set(DOXYGEN_QCH_FILE ""TheName.qch""); set(DOXYGEN_QHP_NAMESPACE org.doxygen.TheName.Project); set(DOXYGEN_GENERATE_LATEX NO); set(DOXYGEN_GENERATE_TREEVIEW YES); #set(DOXYGEN_HIDE_UNDOC_RELATIONS NO); #set(DOXYGEN_DOT_NUM_THREADS 1); #set(DOXYGEN_UML_LOOK YES); #set(DOXYGEN_UML_LIMIT_NUM_FIELDS 50); #set(DOXYGEN_TEMPLATE_RELATIONS YES); set(DOXYGEN_DOT_IMAGE_FORMAT svg); set(DOXYGEN_INTERACTIVE_SVG YES); #set(DOXYGEN_DOT_GRAPH_MAX_NODES 100); #set(DOXYGEN_DOT_TRANSPARENT YES); #set(DOXYGEN_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}). doxygen_add_docs(doc ALL; ${CMAKE_SOURCE_DIR} ${CMAKE_SOURCE_DIR}/doc/cmake.dox ${CMAKE_SOURCE_DIR}/usb; ALLOW_DUPLICATE_CUSTOM_TARGETS; #USE_STAMP_FILE; COMMENT ""Generating doxygen documentation for ${PROJECT_NAME}""; ). # install generated files; #install(; # DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/doc/html; # TYPE DOC; # OPTIONAL # because available only after ""make doc""; #); else(); message(FATAL_ERROR ""Doxygen is needed to build the documentation.""); endif(). add_custom_target(dox ALL; #DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp; DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/CMakeLists.txt; ); include(make_documentation); PARSE_CMAKE_DOCUMENTATION(INCLUDES ""${CMAKE_CURRENT_SOURCE_DIR}/CMakeLists.txt"" EXCLUDES ""${CMAKE_CURRENT_BINARY_DIR}/*"" ); WRITE_CMAKE_DOCUMENTATION( ""${CMAKE_CURRENT_SOURCE_DIR}/cmake.dox"" SORTED ); endif(); ```; ### Aditional context; https://github.com/root-project/root/issues/8950; https://github.com/root-project/root/issues/8947; https://github.com/root-project/root/issues/8781",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8999
https://github.com/root-project/root/issues/8999:3232,Deployability,install,install,3232,"if(); list(APPEND CMAKE_MODULE_PATH ""${CMAKEMODULES_DIR}""). option(BUILD_DOCUMENTATION ""Create and install the HTML based API documentation (requires Doxygen)"" ON); if(BUILD_DOCUMENTATION); find_package(Doxygen OPTIONAL_COMPONENTS dot). if(DOXYGEN_FOUND); set(DOXYGEN_PROJECT_NAME ""Data Acquisition System""); set(DOXYGEN_USE_MDFILE_AS_MAINPAGE ""${CMAKE_SOURCE_DIR}/README.md""); set(DOXYGEN_WARN_NO_PARAMDOC YES); set(DOXYGEN_GENERATE_QHP YES); set(DOXYGEN_QCH_FILE ""TheName.qch""); set(DOXYGEN_QHP_NAMESPACE org.doxygen.TheName.Project); set(DOXYGEN_GENERATE_LATEX NO); set(DOXYGEN_GENERATE_TREEVIEW YES); #set(DOXYGEN_HIDE_UNDOC_RELATIONS NO); #set(DOXYGEN_DOT_NUM_THREADS 1); #set(DOXYGEN_UML_LOOK YES); #set(DOXYGEN_UML_LIMIT_NUM_FIELDS 50); #set(DOXYGEN_TEMPLATE_RELATIONS YES); set(DOXYGEN_DOT_IMAGE_FORMAT svg); set(DOXYGEN_INTERACTIVE_SVG YES); #set(DOXYGEN_DOT_GRAPH_MAX_NODES 100); #set(DOXYGEN_DOT_TRANSPARENT YES); #set(DOXYGEN_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}). doxygen_add_docs(doc ALL; ${CMAKE_SOURCE_DIR} ${CMAKE_SOURCE_DIR}/doc/cmake.dox ${CMAKE_SOURCE_DIR}/usb; ALLOW_DUPLICATE_CUSTOM_TARGETS; #USE_STAMP_FILE; COMMENT ""Generating doxygen documentation for ${PROJECT_NAME}""; ). # install generated files; #install(; # DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/doc/html; # TYPE DOC; # OPTIONAL # because available only after ""make doc""; #); else(); message(FATAL_ERROR ""Doxygen is needed to build the documentation.""); endif(). add_custom_target(dox ALL; #DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp; DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/CMakeLists.txt; ); include(make_documentation); PARSE_CMAKE_DOCUMENTATION(INCLUDES ""${CMAKE_CURRENT_SOURCE_DIR}/CMakeLists.txt"" EXCLUDES ""${CMAKE_CURRENT_BINARY_DIR}/*"" ); WRITE_CMAKE_DOCUMENTATION( ""${CMAKE_CURRENT_SOURCE_DIR}/cmake.dox"" SORTED ); endif(); ```; ### Aditional context; https://github.com/root-project/root/issues/8950; https://github.com/root-project/root/issues/8947; https://github.com/root-project/root/issues/8781",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8999
https://github.com/root-project/root/issues/8999:3370,Integrability,message,message,3370,"if(); list(APPEND CMAKE_MODULE_PATH ""${CMAKEMODULES_DIR}""). option(BUILD_DOCUMENTATION ""Create and install the HTML based API documentation (requires Doxygen)"" ON); if(BUILD_DOCUMENTATION); find_package(Doxygen OPTIONAL_COMPONENTS dot). if(DOXYGEN_FOUND); set(DOXYGEN_PROJECT_NAME ""Data Acquisition System""); set(DOXYGEN_USE_MDFILE_AS_MAINPAGE ""${CMAKE_SOURCE_DIR}/README.md""); set(DOXYGEN_WARN_NO_PARAMDOC YES); set(DOXYGEN_GENERATE_QHP YES); set(DOXYGEN_QCH_FILE ""TheName.qch""); set(DOXYGEN_QHP_NAMESPACE org.doxygen.TheName.Project); set(DOXYGEN_GENERATE_LATEX NO); set(DOXYGEN_GENERATE_TREEVIEW YES); #set(DOXYGEN_HIDE_UNDOC_RELATIONS NO); #set(DOXYGEN_DOT_NUM_THREADS 1); #set(DOXYGEN_UML_LOOK YES); #set(DOXYGEN_UML_LIMIT_NUM_FIELDS 50); #set(DOXYGEN_TEMPLATE_RELATIONS YES); set(DOXYGEN_DOT_IMAGE_FORMAT svg); set(DOXYGEN_INTERACTIVE_SVG YES); #set(DOXYGEN_DOT_GRAPH_MAX_NODES 100); #set(DOXYGEN_DOT_TRANSPARENT YES); #set(DOXYGEN_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}). doxygen_add_docs(doc ALL; ${CMAKE_SOURCE_DIR} ${CMAKE_SOURCE_DIR}/doc/cmake.dox ${CMAKE_SOURCE_DIR}/usb; ALLOW_DUPLICATE_CUSTOM_TARGETS; #USE_STAMP_FILE; COMMENT ""Generating doxygen documentation for ${PROJECT_NAME}""; ). # install generated files; #install(; # DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/doc/html; # TYPE DOC; # OPTIONAL # because available only after ""make doc""; #); else(); message(FATAL_ERROR ""Doxygen is needed to build the documentation.""); endif(). add_custom_target(dox ALL; #DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp; DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/CMakeLists.txt; ); include(make_documentation); PARSE_CMAKE_DOCUMENTATION(INCLUDES ""${CMAKE_CURRENT_SOURCE_DIR}/CMakeLists.txt"" EXCLUDES ""${CMAKE_CURRENT_BINARY_DIR}/*"" ); WRITE_CMAKE_DOCUMENTATION( ""${CMAKE_CURRENT_SOURCE_DIR}/cmake.dox"" SORTED ); endif(); ```; ### Aditional context; https://github.com/root-project/root/issues/8950; https://github.com/root-project/root/issues/8947; https://github.com/root-project/root/issues/8781",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8999
https://github.com/root-project/root/issues/8999:3477,Integrability,DEPEND,DEPENDS,3477,"if(); list(APPEND CMAKE_MODULE_PATH ""${CMAKEMODULES_DIR}""). option(BUILD_DOCUMENTATION ""Create and install the HTML based API documentation (requires Doxygen)"" ON); if(BUILD_DOCUMENTATION); find_package(Doxygen OPTIONAL_COMPONENTS dot). if(DOXYGEN_FOUND); set(DOXYGEN_PROJECT_NAME ""Data Acquisition System""); set(DOXYGEN_USE_MDFILE_AS_MAINPAGE ""${CMAKE_SOURCE_DIR}/README.md""); set(DOXYGEN_WARN_NO_PARAMDOC YES); set(DOXYGEN_GENERATE_QHP YES); set(DOXYGEN_QCH_FILE ""TheName.qch""); set(DOXYGEN_QHP_NAMESPACE org.doxygen.TheName.Project); set(DOXYGEN_GENERATE_LATEX NO); set(DOXYGEN_GENERATE_TREEVIEW YES); #set(DOXYGEN_HIDE_UNDOC_RELATIONS NO); #set(DOXYGEN_DOT_NUM_THREADS 1); #set(DOXYGEN_UML_LOOK YES); #set(DOXYGEN_UML_LIMIT_NUM_FIELDS 50); #set(DOXYGEN_TEMPLATE_RELATIONS YES); set(DOXYGEN_DOT_IMAGE_FORMAT svg); set(DOXYGEN_INTERACTIVE_SVG YES); #set(DOXYGEN_DOT_GRAPH_MAX_NODES 100); #set(DOXYGEN_DOT_TRANSPARENT YES); #set(DOXYGEN_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}). doxygen_add_docs(doc ALL; ${CMAKE_SOURCE_DIR} ${CMAKE_SOURCE_DIR}/doc/cmake.dox ${CMAKE_SOURCE_DIR}/usb; ALLOW_DUPLICATE_CUSTOM_TARGETS; #USE_STAMP_FILE; COMMENT ""Generating doxygen documentation for ${PROJECT_NAME}""; ). # install generated files; #install(; # DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/doc/html; # TYPE DOC; # OPTIONAL # because available only after ""make doc""; #); else(); message(FATAL_ERROR ""Doxygen is needed to build the documentation.""); endif(). add_custom_target(dox ALL; #DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp; DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/CMakeLists.txt; ); include(make_documentation); PARSE_CMAKE_DOCUMENTATION(INCLUDES ""${CMAKE_CURRENT_SOURCE_DIR}/CMakeLists.txt"" EXCLUDES ""${CMAKE_CURRENT_BINARY_DIR}/*"" ); WRITE_CMAKE_DOCUMENTATION( ""${CMAKE_CURRENT_SOURCE_DIR}/cmake.dox"" SORTED ); endif(); ```; ### Aditional context; https://github.com/root-project/root/issues/8950; https://github.com/root-project/root/issues/8947; https://github.com/root-project/root/issues/8781",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8999
https://github.com/root-project/root/issues/8999:3528,Integrability,DEPEND,DEPENDS,3528,"if(); list(APPEND CMAKE_MODULE_PATH ""${CMAKEMODULES_DIR}""). option(BUILD_DOCUMENTATION ""Create and install the HTML based API documentation (requires Doxygen)"" ON); if(BUILD_DOCUMENTATION); find_package(Doxygen OPTIONAL_COMPONENTS dot). if(DOXYGEN_FOUND); set(DOXYGEN_PROJECT_NAME ""Data Acquisition System""); set(DOXYGEN_USE_MDFILE_AS_MAINPAGE ""${CMAKE_SOURCE_DIR}/README.md""); set(DOXYGEN_WARN_NO_PARAMDOC YES); set(DOXYGEN_GENERATE_QHP YES); set(DOXYGEN_QCH_FILE ""TheName.qch""); set(DOXYGEN_QHP_NAMESPACE org.doxygen.TheName.Project); set(DOXYGEN_GENERATE_LATEX NO); set(DOXYGEN_GENERATE_TREEVIEW YES); #set(DOXYGEN_HIDE_UNDOC_RELATIONS NO); #set(DOXYGEN_DOT_NUM_THREADS 1); #set(DOXYGEN_UML_LOOK YES); #set(DOXYGEN_UML_LIMIT_NUM_FIELDS 50); #set(DOXYGEN_TEMPLATE_RELATIONS YES); set(DOXYGEN_DOT_IMAGE_FORMAT svg); set(DOXYGEN_INTERACTIVE_SVG YES); #set(DOXYGEN_DOT_GRAPH_MAX_NODES 100); #set(DOXYGEN_DOT_TRANSPARENT YES); #set(DOXYGEN_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}). doxygen_add_docs(doc ALL; ${CMAKE_SOURCE_DIR} ${CMAKE_SOURCE_DIR}/doc/cmake.dox ${CMAKE_SOURCE_DIR}/usb; ALLOW_DUPLICATE_CUSTOM_TARGETS; #USE_STAMP_FILE; COMMENT ""Generating doxygen documentation for ${PROJECT_NAME}""; ). # install generated files; #install(; # DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/doc/html; # TYPE DOC; # OPTIONAL # because available only after ""make doc""; #); else(); message(FATAL_ERROR ""Doxygen is needed to build the documentation.""); endif(). add_custom_target(dox ALL; #DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp; DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/CMakeLists.txt; ); include(make_documentation); PARSE_CMAKE_DOCUMENTATION(INCLUDES ""${CMAKE_CURRENT_SOURCE_DIR}/CMakeLists.txt"" EXCLUDES ""${CMAKE_CURRENT_BINARY_DIR}/*"" ); WRITE_CMAKE_DOCUMENTATION( ""${CMAKE_CURRENT_SOURCE_DIR}/cmake.dox"" SORTED ); endif(); ```; ### Aditional context; https://github.com/root-project/root/issues/8950; https://github.com/root-project/root/issues/8947; https://github.com/root-project/root/issues/8781",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8999
https://github.com/root-project/root/issues/8999:740,Modifiability,variab,variables,740,"com/root-project/root/issues/8742#issuecomment-888177051. There is a way to document CMake flags so that they appear neatly within the Doxygen reference guide of ROOT. ### Optional: share how it could be improved; https://github.com/ferdymercury/cmake-modules/blob/master/make_documentation.cmake; http://jesnault.fr/website/document-your-cmake-code-within-doxygen/. In the main, I use add_subdirectory(doc), and then I create a ""doc"" folder with a .gitignore containing cmake.dox, and then a CMakeLists.txt with more or less this structure:. ```; ## CMAKE_DOCUMENTATION_START CMakeLists.txt; ##; ## Main CMakeFile for compiling zdt-daq.; ## Following variables can be configured when running ccmake:; ## <table>; ## <caption id=""config-cmake"">Table of configurable CMake parameters</caption>; ## <tr><th>Variable <th>Values <th>Description; ## <tr><td>BUILD_DOCUMENTATION <td>ON (OFF) <td>Build Doxygen HTML documentation; ## <tr><td>CLI11_DIR <td>/opt/CLI11 <td>CLI11 git repository; ## <tr><td>CMAKE_BUILD_TYPE <td>Release (Debug) <td>Choose the type of build; ## <tr><td>ENABLE_TESTS <td>ON (OFF) <td>Build CTests; #~ ## <tr><td>FunctionalPlus_DIR <td>/opt/FunctionalPlus/install/lib/cmake/FunctionalPlus <td>FPlus install folder containing FindFunctionalPlus; ## <tr><td>CMAKEMODULES_DIR <td>/opt/cmake-modules <td>rpavlik git source dir, use https://github.com/ferdymercury/cmake-modules and git checkout master; ## <tr><td>ROOT_DIR <td>$ROOTSYS (/opt/root) <td>ROOT build directory; ## <tr><td>ZSTR_DIR <td>/opt/zstr <td>ZSTR git repository; ## </table>; ##; ## CMAKE_DOCUMENTATION_END; ## See https://www.stack.nl/~dimitri/doxygen/manual/tables.html. # Add Doxygen documentation https://stackoverflow.com/questions/34878276/build-doxygen-from-cmake-script. ### cmake-modules; if(NOT DEFINED CMAKEMODULES_DIR); set (CMAKEMODULES_DIR ""/opt/cmake-modules"" CACHE STRING ""cmake-modules git repository""); endif(); list(APPEND CMAKE_MODULE_PATH ""${CMAKEMODULES_DIR}""). option(BUILD_DOCUMENTATION ""Cr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8999
https://github.com/root-project/root/issues/8999:757,Modifiability,config,configured,757,"com/root-project/root/issues/8742#issuecomment-888177051. There is a way to document CMake flags so that they appear neatly within the Doxygen reference guide of ROOT. ### Optional: share how it could be improved; https://github.com/ferdymercury/cmake-modules/blob/master/make_documentation.cmake; http://jesnault.fr/website/document-your-cmake-code-within-doxygen/. In the main, I use add_subdirectory(doc), and then I create a ""doc"" folder with a .gitignore containing cmake.dox, and then a CMakeLists.txt with more or less this structure:. ```; ## CMAKE_DOCUMENTATION_START CMakeLists.txt; ##; ## Main CMakeFile for compiling zdt-daq.; ## Following variables can be configured when running ccmake:; ## <table>; ## <caption id=""config-cmake"">Table of configurable CMake parameters</caption>; ## <tr><th>Variable <th>Values <th>Description; ## <tr><td>BUILD_DOCUMENTATION <td>ON (OFF) <td>Build Doxygen HTML documentation; ## <tr><td>CLI11_DIR <td>/opt/CLI11 <td>CLI11 git repository; ## <tr><td>CMAKE_BUILD_TYPE <td>Release (Debug) <td>Choose the type of build; ## <tr><td>ENABLE_TESTS <td>ON (OFF) <td>Build CTests; #~ ## <tr><td>FunctionalPlus_DIR <td>/opt/FunctionalPlus/install/lib/cmake/FunctionalPlus <td>FPlus install folder containing FindFunctionalPlus; ## <tr><td>CMAKEMODULES_DIR <td>/opt/cmake-modules <td>rpavlik git source dir, use https://github.com/ferdymercury/cmake-modules and git checkout master; ## <tr><td>ROOT_DIR <td>$ROOTSYS (/opt/root) <td>ROOT build directory; ## <tr><td>ZSTR_DIR <td>/opt/zstr <td>ZSTR git repository; ## </table>; ##; ## CMAKE_DOCUMENTATION_END; ## See https://www.stack.nl/~dimitri/doxygen/manual/tables.html. # Add Doxygen documentation https://stackoverflow.com/questions/34878276/build-doxygen-from-cmake-script. ### cmake-modules; if(NOT DEFINED CMAKEMODULES_DIR); set (CMAKEMODULES_DIR ""/opt/cmake-modules"" CACHE STRING ""cmake-modules git repository""); endif(); list(APPEND CMAKE_MODULE_PATH ""${CMAKEMODULES_DIR}""). option(BUILD_DOCUMENTATION ""Cr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8999
https://github.com/root-project/root/issues/8999:818,Modifiability,config,config-cmake,818,"com/root-project/root/issues/8742#issuecomment-888177051. There is a way to document CMake flags so that they appear neatly within the Doxygen reference guide of ROOT. ### Optional: share how it could be improved; https://github.com/ferdymercury/cmake-modules/blob/master/make_documentation.cmake; http://jesnault.fr/website/document-your-cmake-code-within-doxygen/. In the main, I use add_subdirectory(doc), and then I create a ""doc"" folder with a .gitignore containing cmake.dox, and then a CMakeLists.txt with more or less this structure:. ```; ## CMAKE_DOCUMENTATION_START CMakeLists.txt; ##; ## Main CMakeFile for compiling zdt-daq.; ## Following variables can be configured when running ccmake:; ## <table>; ## <caption id=""config-cmake"">Table of configurable CMake parameters</caption>; ## <tr><th>Variable <th>Values <th>Description; ## <tr><td>BUILD_DOCUMENTATION <td>ON (OFF) <td>Build Doxygen HTML documentation; ## <tr><td>CLI11_DIR <td>/opt/CLI11 <td>CLI11 git repository; ## <tr><td>CMAKE_BUILD_TYPE <td>Release (Debug) <td>Choose the type of build; ## <tr><td>ENABLE_TESTS <td>ON (OFF) <td>Build CTests; #~ ## <tr><td>FunctionalPlus_DIR <td>/opt/FunctionalPlus/install/lib/cmake/FunctionalPlus <td>FPlus install folder containing FindFunctionalPlus; ## <tr><td>CMAKEMODULES_DIR <td>/opt/cmake-modules <td>rpavlik git source dir, use https://github.com/ferdymercury/cmake-modules and git checkout master; ## <tr><td>ROOT_DIR <td>$ROOTSYS (/opt/root) <td>ROOT build directory; ## <tr><td>ZSTR_DIR <td>/opt/zstr <td>ZSTR git repository; ## </table>; ##; ## CMAKE_DOCUMENTATION_END; ## See https://www.stack.nl/~dimitri/doxygen/manual/tables.html. # Add Doxygen documentation https://stackoverflow.com/questions/34878276/build-doxygen-from-cmake-script. ### cmake-modules; if(NOT DEFINED CMAKEMODULES_DIR); set (CMAKEMODULES_DIR ""/opt/cmake-modules"" CACHE STRING ""cmake-modules git repository""); endif(); list(APPEND CMAKE_MODULE_PATH ""${CMAKEMODULES_DIR}""). option(BUILD_DOCUMENTATION ""Cr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8999
https://github.com/root-project/root/issues/8999:841,Modifiability,config,configurable,841,"com/root-project/root/issues/8742#issuecomment-888177051. There is a way to document CMake flags so that they appear neatly within the Doxygen reference guide of ROOT. ### Optional: share how it could be improved; https://github.com/ferdymercury/cmake-modules/blob/master/make_documentation.cmake; http://jesnault.fr/website/document-your-cmake-code-within-doxygen/. In the main, I use add_subdirectory(doc), and then I create a ""doc"" folder with a .gitignore containing cmake.dox, and then a CMakeLists.txt with more or less this structure:. ```; ## CMAKE_DOCUMENTATION_START CMakeLists.txt; ##; ## Main CMakeFile for compiling zdt-daq.; ## Following variables can be configured when running ccmake:; ## <table>; ## <caption id=""config-cmake"">Table of configurable CMake parameters</caption>; ## <tr><th>Variable <th>Values <th>Description; ## <tr><td>BUILD_DOCUMENTATION <td>ON (OFF) <td>Build Doxygen HTML documentation; ## <tr><td>CLI11_DIR <td>/opt/CLI11 <td>CLI11 git repository; ## <tr><td>CMAKE_BUILD_TYPE <td>Release (Debug) <td>Choose the type of build; ## <tr><td>ENABLE_TESTS <td>ON (OFF) <td>Build CTests; #~ ## <tr><td>FunctionalPlus_DIR <td>/opt/FunctionalPlus/install/lib/cmake/FunctionalPlus <td>FPlus install folder containing FindFunctionalPlus; ## <tr><td>CMAKEMODULES_DIR <td>/opt/cmake-modules <td>rpavlik git source dir, use https://github.com/ferdymercury/cmake-modules and git checkout master; ## <tr><td>ROOT_DIR <td>$ROOTSYS (/opt/root) <td>ROOT build directory; ## <tr><td>ZSTR_DIR <td>/opt/zstr <td>ZSTR git repository; ## </table>; ##; ## CMAKE_DOCUMENTATION_END; ## See https://www.stack.nl/~dimitri/doxygen/manual/tables.html. # Add Doxygen documentation https://stackoverflow.com/questions/34878276/build-doxygen-from-cmake-script. ### cmake-modules; if(NOT DEFINED CMAKEMODULES_DIR); set (CMAKEMODULES_DIR ""/opt/cmake-modules"" CACHE STRING ""cmake-modules git repository""); endif(); list(APPEND CMAKE_MODULE_PATH ""${CMAKEMODULES_DIR}""). option(BUILD_DOCUMENTATION ""Cr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8999
https://github.com/root-project/root/issues/8999:893,Modifiability,Variab,Variable,893,"com/root-project/root/issues/8742#issuecomment-888177051. There is a way to document CMake flags so that they appear neatly within the Doxygen reference guide of ROOT. ### Optional: share how it could be improved; https://github.com/ferdymercury/cmake-modules/blob/master/make_documentation.cmake; http://jesnault.fr/website/document-your-cmake-code-within-doxygen/. In the main, I use add_subdirectory(doc), and then I create a ""doc"" folder with a .gitignore containing cmake.dox, and then a CMakeLists.txt with more or less this structure:. ```; ## CMAKE_DOCUMENTATION_START CMakeLists.txt; ##; ## Main CMakeFile for compiling zdt-daq.; ## Following variables can be configured when running ccmake:; ## <table>; ## <caption id=""config-cmake"">Table of configurable CMake parameters</caption>; ## <tr><th>Variable <th>Values <th>Description; ## <tr><td>BUILD_DOCUMENTATION <td>ON (OFF) <td>Build Doxygen HTML documentation; ## <tr><td>CLI11_DIR <td>/opt/CLI11 <td>CLI11 git repository; ## <tr><td>CMAKE_BUILD_TYPE <td>Release (Debug) <td>Choose the type of build; ## <tr><td>ENABLE_TESTS <td>ON (OFF) <td>Build CTests; #~ ## <tr><td>FunctionalPlus_DIR <td>/opt/FunctionalPlus/install/lib/cmake/FunctionalPlus <td>FPlus install folder containing FindFunctionalPlus; ## <tr><td>CMAKEMODULES_DIR <td>/opt/cmake-modules <td>rpavlik git source dir, use https://github.com/ferdymercury/cmake-modules and git checkout master; ## <tr><td>ROOT_DIR <td>$ROOTSYS (/opt/root) <td>ROOT build directory; ## <tr><td>ZSTR_DIR <td>/opt/zstr <td>ZSTR git repository; ## </table>; ##; ## CMAKE_DOCUMENTATION_END; ## See https://www.stack.nl/~dimitri/doxygen/manual/tables.html. # Add Doxygen documentation https://stackoverflow.com/questions/34878276/build-doxygen-from-cmake-script. ### cmake-modules; if(NOT DEFINED CMAKEMODULES_DIR); set (CMAKEMODULES_DIR ""/opt/cmake-modules"" CACHE STRING ""cmake-modules git repository""); endif(); list(APPEND CMAKE_MODULE_PATH ""${CMAKEMODULES_DIR}""). option(BUILD_DOCUMENTATION ""Cr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8999
https://github.com/root-project/root/issues/8999:1949,Performance,CACHE,CACHE,1949,"TATION <td>ON (OFF) <td>Build Doxygen HTML documentation; ## <tr><td>CLI11_DIR <td>/opt/CLI11 <td>CLI11 git repository; ## <tr><td>CMAKE_BUILD_TYPE <td>Release (Debug) <td>Choose the type of build; ## <tr><td>ENABLE_TESTS <td>ON (OFF) <td>Build CTests; #~ ## <tr><td>FunctionalPlus_DIR <td>/opt/FunctionalPlus/install/lib/cmake/FunctionalPlus <td>FPlus install folder containing FindFunctionalPlus; ## <tr><td>CMAKEMODULES_DIR <td>/opt/cmake-modules <td>rpavlik git source dir, use https://github.com/ferdymercury/cmake-modules and git checkout master; ## <tr><td>ROOT_DIR <td>$ROOTSYS (/opt/root) <td>ROOT build directory; ## <tr><td>ZSTR_DIR <td>/opt/zstr <td>ZSTR git repository; ## </table>; ##; ## CMAKE_DOCUMENTATION_END; ## See https://www.stack.nl/~dimitri/doxygen/manual/tables.html. # Add Doxygen documentation https://stackoverflow.com/questions/34878276/build-doxygen-from-cmake-script. ### cmake-modules; if(NOT DEFINED CMAKEMODULES_DIR); set (CMAKEMODULES_DIR ""/opt/cmake-modules"" CACHE STRING ""cmake-modules git repository""); endif(); list(APPEND CMAKE_MODULE_PATH ""${CMAKEMODULES_DIR}""). option(BUILD_DOCUMENTATION ""Create and install the HTML based API documentation (requires Doxygen)"" ON); if(BUILD_DOCUMENTATION); find_package(Doxygen OPTIONAL_COMPONENTS dot). if(DOXYGEN_FOUND); set(DOXYGEN_PROJECT_NAME ""Data Acquisition System""); set(DOXYGEN_USE_MDFILE_AS_MAINPAGE ""${CMAKE_SOURCE_DIR}/README.md""); set(DOXYGEN_WARN_NO_PARAMDOC YES); set(DOXYGEN_GENERATE_QHP YES); set(DOXYGEN_QCH_FILE ""TheName.qch""); set(DOXYGEN_QHP_NAMESPACE org.doxygen.TheName.Project); set(DOXYGEN_GENERATE_LATEX NO); set(DOXYGEN_GENERATE_TREEVIEW YES); #set(DOXYGEN_HIDE_UNDOC_RELATIONS NO); #set(DOXYGEN_DOT_NUM_THREADS 1); #set(DOXYGEN_UML_LOOK YES); #set(DOXYGEN_UML_LIMIT_NUM_FIELDS 50); #set(DOXYGEN_TEMPLATE_RELATIONS YES); set(DOXYGEN_DOT_IMAGE_FORMAT svg); set(DOXYGEN_INTERACTIVE_SVG YES); #set(DOXYGEN_DOT_GRAPH_MAX_NODES 100); #set(DOXYGEN_DOT_TRANSPARENT YES); #set(DOXYGEN_OUTPUT_DIRECTORY ${",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8999
https://github.com/root-project/root/issues/8999:241,Usability,guid,guide,241,"### Explain what you would like to see improved; Related to this comment https://github.com/root-project/root/issues/8742#issuecomment-888177051. There is a way to document CMake flags so that they appear neatly within the Doxygen reference guide of ROOT. ### Optional: share how it could be improved; https://github.com/ferdymercury/cmake-modules/blob/master/make_documentation.cmake; http://jesnault.fr/website/document-your-cmake-code-within-doxygen/. In the main, I use add_subdirectory(doc), and then I create a ""doc"" folder with a .gitignore containing cmake.dox, and then a CMakeLists.txt with more or less this structure:. ```; ## CMAKE_DOCUMENTATION_START CMakeLists.txt; ##; ## Main CMakeFile for compiling zdt-daq.; ## Following variables can be configured when running ccmake:; ## <table>; ## <caption id=""config-cmake"">Table of configurable CMake parameters</caption>; ## <tr><th>Variable <th>Values <th>Description; ## <tr><td>BUILD_DOCUMENTATION <td>ON (OFF) <td>Build Doxygen HTML documentation; ## <tr><td>CLI11_DIR <td>/opt/CLI11 <td>CLI11 git repository; ## <tr><td>CMAKE_BUILD_TYPE <td>Release (Debug) <td>Choose the type of build; ## <tr><td>ENABLE_TESTS <td>ON (OFF) <td>Build CTests; #~ ## <tr><td>FunctionalPlus_DIR <td>/opt/FunctionalPlus/install/lib/cmake/FunctionalPlus <td>FPlus install folder containing FindFunctionalPlus; ## <tr><td>CMAKEMODULES_DIR <td>/opt/cmake-modules <td>rpavlik git source dir, use https://github.com/ferdymercury/cmake-modules and git checkout master; ## <tr><td>ROOT_DIR <td>$ROOTSYS (/opt/root) <td>ROOT build directory; ## <tr><td>ZSTR_DIR <td>/opt/zstr <td>ZSTR git repository; ## </table>; ##; ## CMAKE_DOCUMENTATION_END; ## See https://www.stack.nl/~dimitri/doxygen/manual/tables.html. # Add Doxygen documentation https://stackoverflow.com/questions/34878276/build-doxygen-from-cmake-script. ### cmake-modules; if(NOT DEFINED CMAKEMODULES_DIR); set (CMAKEMODULES_DIR ""/opt/cmake-modules"" CACHE STRING ""cmake-modules git repository""); endif(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8999
https://github.com/root-project/root/pull/9000:123,Testability,Test,Tested,123,This PR adds support for parsing SELU and Sigmoid Activation from Keras models into an RModel object. ## Checklist:. - [x] Tested changes locally; - [x] Tests for Parsing Keras & PyTorch models; - [x] Add ONNX model with Selu & Sigmoid operator for tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9000
https://github.com/root-project/root/pull/9000:153,Testability,Test,Tests,153,This PR adds support for parsing SELU and Sigmoid Activation from Keras models into an RModel object. ## Checklist:. - [x] Tested changes locally; - [x] Tests for Parsing Keras & PyTorch models; - [x] Add ONNX model with Selu & Sigmoid operator for tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9000
https://github.com/root-project/root/pull/9000:249,Testability,test,tests,249,This PR adds support for parsing SELU and Sigmoid Activation from Keras models into an RModel object. ## Checklist:. - [x] Tested changes locally; - [x] Tests for Parsing Keras & PyTorch models; - [x] Add ONNX model with Selu & Sigmoid operator for tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9000
https://github.com/root-project/root/issues/9001:14,Availability,down,download,14,"To reproduce, download http://ccdb-test.cern.ch:8080/download/d64bd450-1619-11ec-a9d5-200114580202 and open it in TBrowser. Works on ubuntu, but on mac I get:. ```; root [2] Error in <TBufferFile::ReadVersion>: Could not find the StreamerInfo with a checksum of 0xdc6299b4 for the class ""array<Long64_t,1>"" in /Users/ktf/Downloads/array<Long64_t,1>_1631706076679.root.; Error in <TBufferFile::CheckByteCount>: object of class array<Long64_t,1> read too few bytes: 6 instead of 14; ```. when clicking on `ccdb_object;1`. Both ROOT 6.24.02 and 6.24.06 seem to be affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9001
https://github.com/root-project/root/issues/9001:53,Availability,down,download,53,"To reproduce, download http://ccdb-test.cern.ch:8080/download/d64bd450-1619-11ec-a9d5-200114580202 and open it in TBrowser. Works on ubuntu, but on mac I get:. ```; root [2] Error in <TBufferFile::ReadVersion>: Could not find the StreamerInfo with a checksum of 0xdc6299b4 for the class ""array<Long64_t,1>"" in /Users/ktf/Downloads/array<Long64_t,1>_1631706076679.root.; Error in <TBufferFile::CheckByteCount>: object of class array<Long64_t,1> read too few bytes: 6 instead of 14; ```. when clicking on `ccdb_object;1`. Both ROOT 6.24.02 and 6.24.06 seem to be affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9001
https://github.com/root-project/root/issues/9001:174,Availability,Error,Error,174,"To reproduce, download http://ccdb-test.cern.ch:8080/download/d64bd450-1619-11ec-a9d5-200114580202 and open it in TBrowser. Works on ubuntu, but on mac I get:. ```; root [2] Error in <TBufferFile::ReadVersion>: Could not find the StreamerInfo with a checksum of 0xdc6299b4 for the class ""array<Long64_t,1>"" in /Users/ktf/Downloads/array<Long64_t,1>_1631706076679.root.; Error in <TBufferFile::CheckByteCount>: object of class array<Long64_t,1> read too few bytes: 6 instead of 14; ```. when clicking on `ccdb_object;1`. Both ROOT 6.24.02 and 6.24.06 seem to be affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9001
https://github.com/root-project/root/issues/9001:321,Availability,Down,Downloads,321,"To reproduce, download http://ccdb-test.cern.ch:8080/download/d64bd450-1619-11ec-a9d5-200114580202 and open it in TBrowser. Works on ubuntu, but on mac I get:. ```; root [2] Error in <TBufferFile::ReadVersion>: Could not find the StreamerInfo with a checksum of 0xdc6299b4 for the class ""array<Long64_t,1>"" in /Users/ktf/Downloads/array<Long64_t,1>_1631706076679.root.; Error in <TBufferFile::CheckByteCount>: object of class array<Long64_t,1> read too few bytes: 6 instead of 14; ```. when clicking on `ccdb_object;1`. Both ROOT 6.24.02 and 6.24.06 seem to be affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9001
https://github.com/root-project/root/issues/9001:370,Availability,Error,Error,370,"To reproduce, download http://ccdb-test.cern.ch:8080/download/d64bd450-1619-11ec-a9d5-200114580202 and open it in TBrowser. Works on ubuntu, but on mac I get:. ```; root [2] Error in <TBufferFile::ReadVersion>: Could not find the StreamerInfo with a checksum of 0xdc6299b4 for the class ""array<Long64_t,1>"" in /Users/ktf/Downloads/array<Long64_t,1>_1631706076679.root.; Error in <TBufferFile::CheckByteCount>: object of class array<Long64_t,1> read too few bytes: 6 instead of 14; ```. when clicking on `ccdb_object;1`. Both ROOT 6.24.02 and 6.24.06 seem to be affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9001
https://github.com/root-project/root/issues/9001:250,Security,checksum,checksum,250,"To reproduce, download http://ccdb-test.cern.ch:8080/download/d64bd450-1619-11ec-a9d5-200114580202 and open it in TBrowser. Works on ubuntu, but on mac I get:. ```; root [2] Error in <TBufferFile::ReadVersion>: Could not find the StreamerInfo with a checksum of 0xdc6299b4 for the class ""array<Long64_t,1>"" in /Users/ktf/Downloads/array<Long64_t,1>_1631706076679.root.; Error in <TBufferFile::CheckByteCount>: object of class array<Long64_t,1> read too few bytes: 6 instead of 14; ```. when clicking on `ccdb_object;1`. Both ROOT 6.24.02 and 6.24.06 seem to be affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9001
https://github.com/root-project/root/issues/9001:35,Testability,test,test,35,"To reproduce, download http://ccdb-test.cern.ch:8080/download/d64bd450-1619-11ec-a9d5-200114580202 and open it in TBrowser. Works on ubuntu, but on mac I get:. ```; root [2] Error in <TBufferFile::ReadVersion>: Could not find the StreamerInfo with a checksum of 0xdc6299b4 for the class ""array<Long64_t,1>"" in /Users/ktf/Downloads/array<Long64_t,1>_1631706076679.root.; Error in <TBufferFile::CheckByteCount>: object of class array<Long64_t,1> read too few bytes: 6 instead of 14; ```. when clicking on `ccdb_object;1`. Both ROOT 6.24.02 and 6.24.06 seem to be affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9001
https://github.com/root-project/root/pull/9003:10,Deployability,update,update,10,small doc update,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9003
https://github.com/root-project/root/pull/9005:65,Security,access,accessing,65,# This Pull request:; * Add server status info; * Corrections in accessing table expression for derived classes; * Enable navigation to Lego view,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9005
https://github.com/root-project/root/pull/9006:10,Deployability,update,updates,10,small doc updates,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9006
https://github.com/root-project/root/pull/9008:322,Availability,error,error,322,# This Pull request: ; Adds the typedefs Float16_t and Double32_t to the builtin types in TDataType. ## Changes or fixes:; The change is required to read tree branches of those types using TTreeReader and TTreeReaderValue<Float16_t> / TTreeReaderValue<Double32_t>. Otherwise attempting to read such branches results in an error message that no dictonary for Float16_t / Double32_t exists. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9008
https://github.com/root-project/root/pull/9008:440,Deployability,update,updated,440,# This Pull request: ; Adds the typedefs Float16_t and Double32_t to the builtin types in TDataType. ## Changes or fixes:; The change is required to read tree branches of those types using TTreeReader and TTreeReaderValue<Float16_t> / TTreeReaderValue<Double32_t>. Otherwise attempting to read such branches results in an error message that no dictonary for Float16_t / Double32_t exists. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9008
https://github.com/root-project/root/pull/9008:328,Integrability,message,message,328,# This Pull request: ; Adds the typedefs Float16_t and Double32_t to the builtin types in TDataType. ## Changes or fixes:; The change is required to read tree branches of those types using TTreeReader and TTreeReaderValue<Float16_t> / TTreeReaderValue<Double32_t>. Otherwise attempting to read such branches results in an error message that no dictonary for Float16_t / Double32_t exists. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9008
https://github.com/root-project/root/pull/9008:410,Testability,test,tested,410,# This Pull request: ; Adds the typedefs Float16_t and Double32_t to the builtin types in TDataType. ## Changes or fixes:; The change is required to read tree branches of those types using TTreeReader and TTreeReaderValue<Float16_t> / TTreeReaderValue<Double32_t>. Otherwise attempting to read such branches results in an error message that no dictonary for Float16_t / Double32_t exists. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9008
https://github.com/root-project/root/pull/9009:404,Availability,error,error,404,# This Pull request: ; Adds the typedefs Float16_t and Double32_t to the builtin types in TDataType.; It is directly related to #9008 which adds the same changes to the patch-branch. ## Changes or fixes:; The change is required to read tree branches of those types using TTreeReader and TTreeReaderValue<Float16_t> / TTreeReaderValue<Double32_t>. Otherwise attempting to read such branches results in an error message that no dictonary for Float16_t / Double32_t exists. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9009
https://github.com/root-project/root/pull/9009:169,Deployability,patch,patch-branch,169,# This Pull request: ; Adds the typedefs Float16_t and Double32_t to the builtin types in TDataType.; It is directly related to #9008 which adds the same changes to the patch-branch. ## Changes or fixes:; The change is required to read tree branches of those types using TTreeReader and TTreeReaderValue<Float16_t> / TTreeReaderValue<Double32_t>. Otherwise attempting to read such branches results in an error message that no dictonary for Float16_t / Double32_t exists. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9009
https://github.com/root-project/root/pull/9009:522,Deployability,update,updated,522,# This Pull request: ; Adds the typedefs Float16_t and Double32_t to the builtin types in TDataType.; It is directly related to #9008 which adds the same changes to the patch-branch. ## Changes or fixes:; The change is required to read tree branches of those types using TTreeReader and TTreeReaderValue<Float16_t> / TTreeReaderValue<Double32_t>. Otherwise attempting to read such branches results in an error message that no dictonary for Float16_t / Double32_t exists. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9009
https://github.com/root-project/root/pull/9009:410,Integrability,message,message,410,# This Pull request: ; Adds the typedefs Float16_t and Double32_t to the builtin types in TDataType.; It is directly related to #9008 which adds the same changes to the patch-branch. ## Changes or fixes:; The change is required to read tree branches of those types using TTreeReader and TTreeReaderValue<Float16_t> / TTreeReaderValue<Double32_t>. Otherwise attempting to read such branches results in an error message that no dictonary for Float16_t / Double32_t exists. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9009
https://github.com/root-project/root/pull/9009:492,Testability,test,tested,492,# This Pull request: ; Adds the typedefs Float16_t and Double32_t to the builtin types in TDataType.; It is directly related to #9008 which adds the same changes to the patch-branch. ## Changes or fixes:; The change is required to read tree branches of those types using TTreeReader and TTreeReaderValue<Float16_t> / TTreeReaderValue<Double32_t>. Otherwise attempting to read such branches results in an error message that no dictonary for Float16_t / Double32_t exists. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9009
https://github.com/root-project/root/pull/9010:762,Availability,down,downstream,762,"The G__matchfilename() implements a file comparison check used; specifically for loading/unloading of the libraries and the source code.; On UNIX-like systems the basic filename comparison is supplemented an; additional file match condition is based on comparing file attributes; returned by the stat() syscall. On a typical load/unload call, the; G__matchfilename() is iterated over items of G__srcfile, which produces; a number of stat() calls that is quadratic in number of loaded files. In our specific case we observe an occasional poor performance on AFS; network filesystem. The suggested change introduces a cache for the; stat() calls that should allow to reduce the number of calls to scale; linearly. # This Pull request:. ## Changes or fixes:. Fixes downstream issue star-bnl/star-sw#115. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9010
https://github.com/root-project/root/pull/9010:852,Deployability,update,updated,852,"The G__matchfilename() implements a file comparison check used; specifically for loading/unloading of the libraries and the source code.; On UNIX-like systems the basic filename comparison is supplemented an; additional file match condition is based on comparing file attributes; returned by the stat() syscall. On a typical load/unload call, the; G__matchfilename() is iterated over items of G__srcfile, which produces; a number of stat() calls that is quadratic in number of loaded files. In our specific case we observe an occasional poor performance on AFS; network filesystem. The suggested change introduces a cache for the; stat() calls that should allow to reduce the number of calls to scale; linearly. # This Pull request:. ## Changes or fixes:. Fixes downstream issue star-bnl/star-sw#115. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9010
https://github.com/root-project/root/pull/9010:665,Energy Efficiency,reduce,reduce,665,"The G__matchfilename() implements a file comparison check used; specifically for loading/unloading of the libraries and the source code.; On UNIX-like systems the basic filename comparison is supplemented an; additional file match condition is based on comparing file attributes; returned by the stat() syscall. On a typical load/unload call, the; G__matchfilename() is iterated over items of G__srcfile, which produces; a number of stat() calls that is quadratic in number of loaded files. In our specific case we observe an occasional poor performance on AFS; network filesystem. The suggested change introduces a cache for the; stat() calls that should allow to reduce the number of calls to scale; linearly. # This Pull request:. ## Changes or fixes:. Fixes downstream issue star-bnl/star-sw#115. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9010
https://github.com/root-project/root/pull/9010:81,Performance,load,loading,81,"The G__matchfilename() implements a file comparison check used; specifically for loading/unloading of the libraries and the source code.; On UNIX-like systems the basic filename comparison is supplemented an; additional file match condition is based on comparing file attributes; returned by the stat() syscall. On a typical load/unload call, the; G__matchfilename() is iterated over items of G__srcfile, which produces; a number of stat() calls that is quadratic in number of loaded files. In our specific case we observe an occasional poor performance on AFS; network filesystem. The suggested change introduces a cache for the; stat() calls that should allow to reduce the number of calls to scale; linearly. # This Pull request:. ## Changes or fixes:. Fixes downstream issue star-bnl/star-sw#115. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9010
https://github.com/root-project/root/pull/9010:325,Performance,load,load,325,"The G__matchfilename() implements a file comparison check used; specifically for loading/unloading of the libraries and the source code.; On UNIX-like systems the basic filename comparison is supplemented an; additional file match condition is based on comparing file attributes; returned by the stat() syscall. On a typical load/unload call, the; G__matchfilename() is iterated over items of G__srcfile, which produces; a number of stat() calls that is quadratic in number of loaded files. In our specific case we observe an occasional poor performance on AFS; network filesystem. The suggested change introduces a cache for the; stat() calls that should allow to reduce the number of calls to scale; linearly. # This Pull request:. ## Changes or fixes:. Fixes downstream issue star-bnl/star-sw#115. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9010
https://github.com/root-project/root/pull/9010:477,Performance,load,loaded,477,"The G__matchfilename() implements a file comparison check used; specifically for loading/unloading of the libraries and the source code.; On UNIX-like systems the basic filename comparison is supplemented an; additional file match condition is based on comparing file attributes; returned by the stat() syscall. On a typical load/unload call, the; G__matchfilename() is iterated over items of G__srcfile, which produces; a number of stat() calls that is quadratic in number of loaded files. In our specific case we observe an occasional poor performance on AFS; network filesystem. The suggested change introduces a cache for the; stat() calls that should allow to reduce the number of calls to scale; linearly. # This Pull request:. ## Changes or fixes:. Fixes downstream issue star-bnl/star-sw#115. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9010
https://github.com/root-project/root/pull/9010:542,Performance,perform,performance,542,"The G__matchfilename() implements a file comparison check used; specifically for loading/unloading of the libraries and the source code.; On UNIX-like systems the basic filename comparison is supplemented an; additional file match condition is based on comparing file attributes; returned by the stat() syscall. On a typical load/unload call, the; G__matchfilename() is iterated over items of G__srcfile, which produces; a number of stat() calls that is quadratic in number of loaded files. In our specific case we observe an occasional poor performance on AFS; network filesystem. The suggested change introduces a cache for the; stat() calls that should allow to reduce the number of calls to scale; linearly. # This Pull request:. ## Changes or fixes:. Fixes downstream issue star-bnl/star-sw#115. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9010
https://github.com/root-project/root/pull/9010:616,Performance,cache,cache,616,"The G__matchfilename() implements a file comparison check used; specifically for loading/unloading of the libraries and the source code.; On UNIX-like systems the basic filename comparison is supplemented an; additional file match condition is based on comparing file attributes; returned by the stat() syscall. On a typical load/unload call, the; G__matchfilename() is iterated over items of G__srcfile, which produces; a number of stat() calls that is quadratic in number of loaded files. In our specific case we observe an occasional poor performance on AFS; network filesystem. The suggested change introduces a cache for the; stat() calls that should allow to reduce the number of calls to scale; linearly. # This Pull request:. ## Changes or fixes:. Fixes downstream issue star-bnl/star-sw#115. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9010
https://github.com/root-project/root/pull/9010:822,Testability,test,tested,822,"The G__matchfilename() implements a file comparison check used; specifically for loading/unloading of the libraries and the source code.; On UNIX-like systems the basic filename comparison is supplemented an; additional file match condition is based on comparing file attributes; returned by the stat() syscall. On a typical load/unload call, the; G__matchfilename() is iterated over items of G__srcfile, which produces; a number of stat() calls that is quadratic in number of loaded files. In our specific case we observe an occasional poor performance on AFS; network filesystem. The suggested change introduces a cache for the; stat() calls that should allow to reduce the number of calls to scale; linearly. # This Pull request:. ## Changes or fixes:. Fixes downstream issue star-bnl/star-sw#115. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9010
https://github.com/root-project/root/issues/9011:1181,Availability,error,error,1181,"Hi, . A regression was introduced in TMutiGraph with a log scale; I found a commit that seems to be linked to my problem [https://github.com/osschar/root/commit/d087f000322c7958f02c8e9ddce2a302502c8604](https://github.com/osschar/root/commit/d087f000322c7958f02c8e9ddce2a302502c8604). my OS is debian10 x86_64 with gcc8.3. here is sample script to reproduce the bug :. ```; void multigraph(); {; auto c1 = new TCanvas(""c1"",""multigraph"",700,500);; c1->SetGrid();; c1->SetLogx();; c1->SetLogy();; auto *mg = new TMultiGraph();; std::vector<double> x1;; std::vector<double> sig1;; std::vector<double> sig2;; for (double E=1e-4;E<2e7;E*=1.1); {; 		x1.push_back(E);; 		sig1.push_back(10*pow(E,-0.1));; 		sig2.push_back(15*pow(E,-0.15));; 		}; auto g1 = new TGraph(x1.size(), x1.data(), sig1.data());; mg->Add(g1);; auto g2 = new TGraph(x1.size(), x1.data(), sig2.data());; mg->Add(g2);; mg->SetTitle(""; E (eV);#sigma (b)"");; mg->GetXaxis()->CenterTitle(true);; mg->GetYaxis()->CenterTitle(true);; mg->Draw(""AL"");; c1->SaveAs(""multigraph.pdf"");; }; ```. It works fine on versions 6.14.08, 6.18.04 and 6.20.06; TMultiGraph scale is wrong with versions 6.22.08, 6.24.06.; There is also an error message at the console (negative value for log scale). ```; Processing multigraph.C...; Error in <THistPainter::PaintInit>: log scale requested with a negative argument (-1.720339); Info in <TCanvas::Print>: pdf file multigraph.pdf has been created; ```. I remove the patch [https://github.com/osschar/root/commit/d087f000322c7958f02c8e9ddce2a302502c8604](https://github.com/osschar/root/commit/d087f000322c7958f02c8e9ddce2a302502c8604) on version 6.24.06 and it works again. thanks in advance",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9011
https://github.com/root-project/root/issues/9011:1275,Availability,Error,Error,1275,"Hi, . A regression was introduced in TMutiGraph with a log scale; I found a commit that seems to be linked to my problem [https://github.com/osschar/root/commit/d087f000322c7958f02c8e9ddce2a302502c8604](https://github.com/osschar/root/commit/d087f000322c7958f02c8e9ddce2a302502c8604). my OS is debian10 x86_64 with gcc8.3. here is sample script to reproduce the bug :. ```; void multigraph(); {; auto c1 = new TCanvas(""c1"",""multigraph"",700,500);; c1->SetGrid();; c1->SetLogx();; c1->SetLogy();; auto *mg = new TMultiGraph();; std::vector<double> x1;; std::vector<double> sig1;; std::vector<double> sig2;; for (double E=1e-4;E<2e7;E*=1.1); {; 		x1.push_back(E);; 		sig1.push_back(10*pow(E,-0.1));; 		sig2.push_back(15*pow(E,-0.15));; 		}; auto g1 = new TGraph(x1.size(), x1.data(), sig1.data());; mg->Add(g1);; auto g2 = new TGraph(x1.size(), x1.data(), sig2.data());; mg->Add(g2);; mg->SetTitle(""; E (eV);#sigma (b)"");; mg->GetXaxis()->CenterTitle(true);; mg->GetYaxis()->CenterTitle(true);; mg->Draw(""AL"");; c1->SaveAs(""multigraph.pdf"");; }; ```. It works fine on versions 6.14.08, 6.18.04 and 6.20.06; TMultiGraph scale is wrong with versions 6.22.08, 6.24.06.; There is also an error message at the console (negative value for log scale). ```; Processing multigraph.C...; Error in <THistPainter::PaintInit>: log scale requested with a negative argument (-1.720339); Info in <TCanvas::Print>: pdf file multigraph.pdf has been created; ```. I remove the patch [https://github.com/osschar/root/commit/d087f000322c7958f02c8e9ddce2a302502c8604](https://github.com/osschar/root/commit/d087f000322c7958f02c8e9ddce2a302502c8604) on version 6.24.06 and it works again. thanks in advance",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9011
https://github.com/root-project/root/issues/9011:1455,Deployability,patch,patch,1455,"Hi, . A regression was introduced in TMutiGraph with a log scale; I found a commit that seems to be linked to my problem [https://github.com/osschar/root/commit/d087f000322c7958f02c8e9ddce2a302502c8604](https://github.com/osschar/root/commit/d087f000322c7958f02c8e9ddce2a302502c8604). my OS is debian10 x86_64 with gcc8.3. here is sample script to reproduce the bug :. ```; void multigraph(); {; auto c1 = new TCanvas(""c1"",""multigraph"",700,500);; c1->SetGrid();; c1->SetLogx();; c1->SetLogy();; auto *mg = new TMultiGraph();; std::vector<double> x1;; std::vector<double> sig1;; std::vector<double> sig2;; for (double E=1e-4;E<2e7;E*=1.1); {; 		x1.push_back(E);; 		sig1.push_back(10*pow(E,-0.1));; 		sig2.push_back(15*pow(E,-0.15));; 		}; auto g1 = new TGraph(x1.size(), x1.data(), sig1.data());; mg->Add(g1);; auto g2 = new TGraph(x1.size(), x1.data(), sig2.data());; mg->Add(g2);; mg->SetTitle(""; E (eV);#sigma (b)"");; mg->GetXaxis()->CenterTitle(true);; mg->GetYaxis()->CenterTitle(true);; mg->Draw(""AL"");; c1->SaveAs(""multigraph.pdf"");; }; ```. It works fine on versions 6.14.08, 6.18.04 and 6.20.06; TMultiGraph scale is wrong with versions 6.22.08, 6.24.06.; There is also an error message at the console (negative value for log scale). ```; Processing multigraph.C...; Error in <THistPainter::PaintInit>: log scale requested with a negative argument (-1.720339); Info in <TCanvas::Print>: pdf file multigraph.pdf has been created; ```. I remove the patch [https://github.com/osschar/root/commit/d087f000322c7958f02c8e9ddce2a302502c8604](https://github.com/osschar/root/commit/d087f000322c7958f02c8e9ddce2a302502c8604) on version 6.24.06 and it works again. thanks in advance",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9011
https://github.com/root-project/root/issues/9011:1187,Integrability,message,message,1187,"Hi, . A regression was introduced in TMutiGraph with a log scale; I found a commit that seems to be linked to my problem [https://github.com/osschar/root/commit/d087f000322c7958f02c8e9ddce2a302502c8604](https://github.com/osschar/root/commit/d087f000322c7958f02c8e9ddce2a302502c8604). my OS is debian10 x86_64 with gcc8.3. here is sample script to reproduce the bug :. ```; void multigraph(); {; auto c1 = new TCanvas(""c1"",""multigraph"",700,500);; c1->SetGrid();; c1->SetLogx();; c1->SetLogy();; auto *mg = new TMultiGraph();; std::vector<double> x1;; std::vector<double> sig1;; std::vector<double> sig2;; for (double E=1e-4;E<2e7;E*=1.1); {; 		x1.push_back(E);; 		sig1.push_back(10*pow(E,-0.1));; 		sig2.push_back(15*pow(E,-0.15));; 		}; auto g1 = new TGraph(x1.size(), x1.data(), sig1.data());; mg->Add(g1);; auto g2 = new TGraph(x1.size(), x1.data(), sig2.data());; mg->Add(g2);; mg->SetTitle(""; E (eV);#sigma (b)"");; mg->GetXaxis()->CenterTitle(true);; mg->GetYaxis()->CenterTitle(true);; mg->Draw(""AL"");; c1->SaveAs(""multigraph.pdf"");; }; ```. It works fine on versions 6.14.08, 6.18.04 and 6.20.06; TMultiGraph scale is wrong with versions 6.22.08, 6.24.06.; There is also an error message at the console (negative value for log scale). ```; Processing multigraph.C...; Error in <THistPainter::PaintInit>: log scale requested with a negative argument (-1.720339); Info in <TCanvas::Print>: pdf file multigraph.pdf has been created; ```. I remove the patch [https://github.com/osschar/root/commit/d087f000322c7958f02c8e9ddce2a302502c8604](https://github.com/osschar/root/commit/d087f000322c7958f02c8e9ddce2a302502c8604) on version 6.24.06 and it works again. thanks in advance",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9011
https://github.com/root-project/root/issues/9011:55,Testability,log,log,55,"Hi, . A regression was introduced in TMutiGraph with a log scale; I found a commit that seems to be linked to my problem [https://github.com/osschar/root/commit/d087f000322c7958f02c8e9ddce2a302502c8604](https://github.com/osschar/root/commit/d087f000322c7958f02c8e9ddce2a302502c8604). my OS is debian10 x86_64 with gcc8.3. here is sample script to reproduce the bug :. ```; void multigraph(); {; auto c1 = new TCanvas(""c1"",""multigraph"",700,500);; c1->SetGrid();; c1->SetLogx();; c1->SetLogy();; auto *mg = new TMultiGraph();; std::vector<double> x1;; std::vector<double> sig1;; std::vector<double> sig2;; for (double E=1e-4;E<2e7;E*=1.1); {; 		x1.push_back(E);; 		sig1.push_back(10*pow(E,-0.1));; 		sig2.push_back(15*pow(E,-0.15));; 		}; auto g1 = new TGraph(x1.size(), x1.data(), sig1.data());; mg->Add(g1);; auto g2 = new TGraph(x1.size(), x1.data(), sig2.data());; mg->Add(g2);; mg->SetTitle(""; E (eV);#sigma (b)"");; mg->GetXaxis()->CenterTitle(true);; mg->GetYaxis()->CenterTitle(true);; mg->Draw(""AL"");; c1->SaveAs(""multigraph.pdf"");; }; ```. It works fine on versions 6.14.08, 6.18.04 and 6.20.06; TMultiGraph scale is wrong with versions 6.22.08, 6.24.06.; There is also an error message at the console (negative value for log scale). ```; Processing multigraph.C...; Error in <THistPainter::PaintInit>: log scale requested with a negative argument (-1.720339); Info in <TCanvas::Print>: pdf file multigraph.pdf has been created; ```. I remove the patch [https://github.com/osschar/root/commit/d087f000322c7958f02c8e9ddce2a302502c8604](https://github.com/osschar/root/commit/d087f000322c7958f02c8e9ddce2a302502c8604) on version 6.24.06 and it works again. thanks in advance",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9011
https://github.com/root-project/root/issues/9011:1230,Testability,log,log,1230,"Hi, . A regression was introduced in TMutiGraph with a log scale; I found a commit that seems to be linked to my problem [https://github.com/osschar/root/commit/d087f000322c7958f02c8e9ddce2a302502c8604](https://github.com/osschar/root/commit/d087f000322c7958f02c8e9ddce2a302502c8604). my OS is debian10 x86_64 with gcc8.3. here is sample script to reproduce the bug :. ```; void multigraph(); {; auto c1 = new TCanvas(""c1"",""multigraph"",700,500);; c1->SetGrid();; c1->SetLogx();; c1->SetLogy();; auto *mg = new TMultiGraph();; std::vector<double> x1;; std::vector<double> sig1;; std::vector<double> sig2;; for (double E=1e-4;E<2e7;E*=1.1); {; 		x1.push_back(E);; 		sig1.push_back(10*pow(E,-0.1));; 		sig2.push_back(15*pow(E,-0.15));; 		}; auto g1 = new TGraph(x1.size(), x1.data(), sig1.data());; mg->Add(g1);; auto g2 = new TGraph(x1.size(), x1.data(), sig2.data());; mg->Add(g2);; mg->SetTitle(""; E (eV);#sigma (b)"");; mg->GetXaxis()->CenterTitle(true);; mg->GetYaxis()->CenterTitle(true);; mg->Draw(""AL"");; c1->SaveAs(""multigraph.pdf"");; }; ```. It works fine on versions 6.14.08, 6.18.04 and 6.20.06; TMultiGraph scale is wrong with versions 6.22.08, 6.24.06.; There is also an error message at the console (negative value for log scale). ```; Processing multigraph.C...; Error in <THistPainter::PaintInit>: log scale requested with a negative argument (-1.720339); Info in <TCanvas::Print>: pdf file multigraph.pdf has been created; ```. I remove the patch [https://github.com/osschar/root/commit/d087f000322c7958f02c8e9ddce2a302502c8604](https://github.com/osschar/root/commit/d087f000322c7958f02c8e9ddce2a302502c8604) on version 6.24.06 and it works again. thanks in advance",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9011
https://github.com/root-project/root/issues/9011:1311,Testability,log,log,1311,"Hi, . A regression was introduced in TMutiGraph with a log scale; I found a commit that seems to be linked to my problem [https://github.com/osschar/root/commit/d087f000322c7958f02c8e9ddce2a302502c8604](https://github.com/osschar/root/commit/d087f000322c7958f02c8e9ddce2a302502c8604). my OS is debian10 x86_64 with gcc8.3. here is sample script to reproduce the bug :. ```; void multigraph(); {; auto c1 = new TCanvas(""c1"",""multigraph"",700,500);; c1->SetGrid();; c1->SetLogx();; c1->SetLogy();; auto *mg = new TMultiGraph();; std::vector<double> x1;; std::vector<double> sig1;; std::vector<double> sig2;; for (double E=1e-4;E<2e7;E*=1.1); {; 		x1.push_back(E);; 		sig1.push_back(10*pow(E,-0.1));; 		sig2.push_back(15*pow(E,-0.15));; 		}; auto g1 = new TGraph(x1.size(), x1.data(), sig1.data());; mg->Add(g1);; auto g2 = new TGraph(x1.size(), x1.data(), sig2.data());; mg->Add(g2);; mg->SetTitle(""; E (eV);#sigma (b)"");; mg->GetXaxis()->CenterTitle(true);; mg->GetYaxis()->CenterTitle(true);; mg->Draw(""AL"");; c1->SaveAs(""multigraph.pdf"");; }; ```. It works fine on versions 6.14.08, 6.18.04 and 6.20.06; TMultiGraph scale is wrong with versions 6.22.08, 6.24.06.; There is also an error message at the console (negative value for log scale). ```; Processing multigraph.C...; Error in <THistPainter::PaintInit>: log scale requested with a negative argument (-1.720339); Info in <TCanvas::Print>: pdf file multigraph.pdf has been created; ```. I remove the patch [https://github.com/osschar/root/commit/d087f000322c7958f02c8e9ddce2a302502c8604](https://github.com/osschar/root/commit/d087f000322c7958f02c8e9ddce2a302502c8604) on version 6.24.06 and it works again. thanks in advance",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9011
https://github.com/root-project/root/pull/9012:507,Testability,test,tested,507,"# This Pull request:; Adds xroot based implementation of `RRawFile` class, the RRawFileNetXNG.; As the xroot TFile implementation uses the `NetXNG` naming convention for consistency I have adopted the same convention to the `RRawFile` implementation (please let me know if this should be changed).; This is heavily inspired by the `RRawFileDavix` class (@jblomer : thanks a lot for your help). ## Changes or fixes:; Adds the capability to do remote reads with `root`/`roots` to NTuple. ## Checklist:. - [x] tested changes locally, by running the `tutorials/v7/ntuple/ntpl004_dimuon.C` with the `kNTupleFileName` changed to a `root://` URL.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9012
https://github.com/root-project/root/pull/9013:66,Security,access,accessing,66,## This Pull request:; * Add server status info; * Corrections in accessing table expression for derived classes; * Enable navigation to Lego view. It is a correction to #9005,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9013
https://github.com/root-project/root/pull/9015:107,Availability,error,error,107,"# This Pull request:; ## Changes or fixes:; I realized that the offsets used by TGraphPainter to not paint error bars inside the markers were missing values for the new marker styles (35 - 49) and did not treat markers with linewidths > 1 properly. Furthermore, some existing values were not correct, like for example the x-size of the full diamon marker was 1, but it should be 0.6. This PR fixes these problems. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9015
https://github.com/root-project/root/pull/9015:465,Deployability,update,updated,465,"# This Pull request:; ## Changes or fixes:; I realized that the offsets used by TGraphPainter to not paint error bars inside the markers were missing values for the new marker styles (35 - 49) and did not treat markers with linewidths > 1 properly. Furthermore, some existing values were not correct, like for example the x-size of the full diamon marker was 1, but it should be 0.6. This PR fixes these problems. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9015
https://github.com/root-project/root/pull/9015:435,Testability,test,tested,435,"# This Pull request:; ## Changes or fixes:; I realized that the offsets used by TGraphPainter to not paint error bars inside the markers were missing values for the new marker styles (35 - 49) and did not treat markers with linewidths > 1 properly. Furthermore, some existing values were not correct, like for example the x-size of the full diamon marker was 1, but it should be 0.6. This PR fixes these problems. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9015
https://github.com/root-project/root/issues/9017:160,Availability,down,down,160,"As reported in https://root-forum.cern.ch/t/pure-virtual-method-called-on-hadding-tfiles-with-tfriendelements/46836/6; (see there for reproducer), hadd at tear down accesses already deleted objects. In version of ROOT equal or newer than v6.22/08 and v6.24/00, the problem appears only in a slow merge. (for example `hadd -f0 output.root testroot_1,root testroot_2.root`) . The resulting stack trace is:. ```; ==1241== Process terminating with default action of signal 6 (SIGABRT); ==1241== at 0x5BB618B: raise (raise.c:51); ==1241== by 0x5B9592D: abort (abort.c:100); ==1241== by 0x58C2910: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28); ==1241== by 0x58CE38B: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28); ==1241== by 0x58CE3F6: std::terminate() (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28); ==1241== by 0x58CF154: __cxa_pure_virtual (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28); ==1241== by 0x551449A: TCollection::RecursiveRemove(TObject*) (TCollection.cxx:579); ==1241== by 0x4A345D0: TTree::RecursiveRemove(TObject*) (TTree.cxx:7857); ==1241== by 0x551F16F: TList::RecursiveRemove(TObject*) (TList.cxx:813); ==1241== by 0x5518879: THashList::RecursiveRemove(TObject*) (THashList.cxx:354); ==1241== by 0x543C003: TROOT::RecursiveRemove(TObject*) (TROOT.cxx:2455); ==1241== by 0x496B26E: ROOT::CallRecursiveRemoveIfNeeded(TObject&) (TROOT.h:398); ==1241== by 0x5512E61: TCollection::~TCollection() (TCollection.cxx:189); ==1241== by 0x5506D19: TSeqCollection::~TSeqCollection() (TSeqCollection.h:37); ==1241== by 0x551BE8E: TList::~TList() (TList.cxx:92); ==1241== by 0x551BEAD: TList::~TList() (TList.cxx:95); ==1241== by 0x4A1DE02: TTree::~TTree() (TTree.cxx:975); ==1241== by 0x4A1E2C7: TTree::~TTree() (TTree.cxx:1023); ==1241== by 0x4A308E9: TTree::Merge(TCollection*, TFileMergeInfo*) (TTree.cxx:6908); ==1241== by 0x4960BA2: ROOT::merge_TTree(void*, TCollection*, TFileMergeInfo*) (G__Tree.cxx:4209); ==1241== by 0x4E739D6: TFileMerger::MergeOne(TDirectory*, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9017
https://github.com/root-project/root/issues/9017:548,Safety,abort,abort,548,"As reported in https://root-forum.cern.ch/t/pure-virtual-method-called-on-hadding-tfiles-with-tfriendelements/46836/6; (see there for reproducer), hadd at tear down accesses already deleted objects. In version of ROOT equal or newer than v6.22/08 and v6.24/00, the problem appears only in a slow merge. (for example `hadd -f0 output.root testroot_1,root testroot_2.root`) . The resulting stack trace is:. ```; ==1241== Process terminating with default action of signal 6 (SIGABRT); ==1241== at 0x5BB618B: raise (raise.c:51); ==1241== by 0x5B9592D: abort (abort.c:100); ==1241== by 0x58C2910: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28); ==1241== by 0x58CE38B: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28); ==1241== by 0x58CE3F6: std::terminate() (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28); ==1241== by 0x58CF154: __cxa_pure_virtual (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28); ==1241== by 0x551449A: TCollection::RecursiveRemove(TObject*) (TCollection.cxx:579); ==1241== by 0x4A345D0: TTree::RecursiveRemove(TObject*) (TTree.cxx:7857); ==1241== by 0x551F16F: TList::RecursiveRemove(TObject*) (TList.cxx:813); ==1241== by 0x5518879: THashList::RecursiveRemove(TObject*) (THashList.cxx:354); ==1241== by 0x543C003: TROOT::RecursiveRemove(TObject*) (TROOT.cxx:2455); ==1241== by 0x496B26E: ROOT::CallRecursiveRemoveIfNeeded(TObject&) (TROOT.h:398); ==1241== by 0x5512E61: TCollection::~TCollection() (TCollection.cxx:189); ==1241== by 0x5506D19: TSeqCollection::~TSeqCollection() (TSeqCollection.h:37); ==1241== by 0x551BE8E: TList::~TList() (TList.cxx:92); ==1241== by 0x551BEAD: TList::~TList() (TList.cxx:95); ==1241== by 0x4A1DE02: TTree::~TTree() (TTree.cxx:975); ==1241== by 0x4A1E2C7: TTree::~TTree() (TTree.cxx:1023); ==1241== by 0x4A308E9: TTree::Merge(TCollection*, TFileMergeInfo*) (TTree.cxx:6908); ==1241== by 0x4960BA2: ROOT::merge_TTree(void*, TCollection*, TFileMergeInfo*) (G__Tree.cxx:4209); ==1241== by 0x4E739D6: TFileMerger::MergeOne(TDirectory*, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9017
https://github.com/root-project/root/issues/9017:555,Safety,abort,abort,555,"As reported in https://root-forum.cern.ch/t/pure-virtual-method-called-on-hadding-tfiles-with-tfriendelements/46836/6; (see there for reproducer), hadd at tear down accesses already deleted objects. In version of ROOT equal or newer than v6.22/08 and v6.24/00, the problem appears only in a slow merge. (for example `hadd -f0 output.root testroot_1,root testroot_2.root`) . The resulting stack trace is:. ```; ==1241== Process terminating with default action of signal 6 (SIGABRT); ==1241== at 0x5BB618B: raise (raise.c:51); ==1241== by 0x5B9592D: abort (abort.c:100); ==1241== by 0x58C2910: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28); ==1241== by 0x58CE38B: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28); ==1241== by 0x58CE3F6: std::terminate() (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28); ==1241== by 0x58CF154: __cxa_pure_virtual (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28); ==1241== by 0x551449A: TCollection::RecursiveRemove(TObject*) (TCollection.cxx:579); ==1241== by 0x4A345D0: TTree::RecursiveRemove(TObject*) (TTree.cxx:7857); ==1241== by 0x551F16F: TList::RecursiveRemove(TObject*) (TList.cxx:813); ==1241== by 0x5518879: THashList::RecursiveRemove(TObject*) (THashList.cxx:354); ==1241== by 0x543C003: TROOT::RecursiveRemove(TObject*) (TROOT.cxx:2455); ==1241== by 0x496B26E: ROOT::CallRecursiveRemoveIfNeeded(TObject&) (TROOT.h:398); ==1241== by 0x5512E61: TCollection::~TCollection() (TCollection.cxx:189); ==1241== by 0x5506D19: TSeqCollection::~TSeqCollection() (TSeqCollection.h:37); ==1241== by 0x551BE8E: TList::~TList() (TList.cxx:92); ==1241== by 0x551BEAD: TList::~TList() (TList.cxx:95); ==1241== by 0x4A1DE02: TTree::~TTree() (TTree.cxx:975); ==1241== by 0x4A1E2C7: TTree::~TTree() (TTree.cxx:1023); ==1241== by 0x4A308E9: TTree::Merge(TCollection*, TFileMergeInfo*) (TTree.cxx:6908); ==1241== by 0x4960BA2: ROOT::merge_TTree(void*, TCollection*, TFileMergeInfo*) (G__Tree.cxx:4209); ==1241== by 0x4E739D6: TFileMerger::MergeOne(TDirectory*, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9017
https://github.com/root-project/root/issues/9017:165,Security,access,accesses,165,"As reported in https://root-forum.cern.ch/t/pure-virtual-method-called-on-hadding-tfiles-with-tfriendelements/46836/6; (see there for reproducer), hadd at tear down accesses already deleted objects. In version of ROOT equal or newer than v6.22/08 and v6.24/00, the problem appears only in a slow merge. (for example `hadd -f0 output.root testroot_1,root testroot_2.root`) . The resulting stack trace is:. ```; ==1241== Process terminating with default action of signal 6 (SIGABRT); ==1241== at 0x5BB618B: raise (raise.c:51); ==1241== by 0x5B9592D: abort (abort.c:100); ==1241== by 0x58C2910: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28); ==1241== by 0x58CE38B: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28); ==1241== by 0x58CE3F6: std::terminate() (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28); ==1241== by 0x58CF154: __cxa_pure_virtual (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28); ==1241== by 0x551449A: TCollection::RecursiveRemove(TObject*) (TCollection.cxx:579); ==1241== by 0x4A345D0: TTree::RecursiveRemove(TObject*) (TTree.cxx:7857); ==1241== by 0x551F16F: TList::RecursiveRemove(TObject*) (TList.cxx:813); ==1241== by 0x5518879: THashList::RecursiveRemove(TObject*) (THashList.cxx:354); ==1241== by 0x543C003: TROOT::RecursiveRemove(TObject*) (TROOT.cxx:2455); ==1241== by 0x496B26E: ROOT::CallRecursiveRemoveIfNeeded(TObject&) (TROOT.h:398); ==1241== by 0x5512E61: TCollection::~TCollection() (TCollection.cxx:189); ==1241== by 0x5506D19: TSeqCollection::~TSeqCollection() (TSeqCollection.h:37); ==1241== by 0x551BE8E: TList::~TList() (TList.cxx:92); ==1241== by 0x551BEAD: TList::~TList() (TList.cxx:95); ==1241== by 0x4A1DE02: TTree::~TTree() (TTree.cxx:975); ==1241== by 0x4A1E2C7: TTree::~TTree() (TTree.cxx:1023); ==1241== by 0x4A308E9: TTree::Merge(TCollection*, TFileMergeInfo*) (TTree.cxx:6908); ==1241== by 0x4960BA2: ROOT::merge_TTree(void*, TCollection*, TFileMergeInfo*) (G__Tree.cxx:4209); ==1241== by 0x4E739D6: TFileMerger::MergeOne(TDirectory*, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9017
https://github.com/root-project/root/issues/9020:619,Usability,clear,clearing,619,"### Describe the bug; It looks like the warning reported at https://sft.its.cern.ch/jira/browse/ROOT-10816 is still not solved with gcc 11 and the current builtin_tbb. . ```bash; $: cmake -GNinja -Dminimal=ON -Dimt=ON -Dbuiltin_tbb=ON $ROOT_HOME; [...]; $: cmake --build . -- -j32; [...]; In file included from ginclude/tbb/tbb.h:48,; from /home/vpadulan/Programs/rootproject/root/core/imt/src/TThreadExecutor.cxx:10:; ginclude/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:; ginclude/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]; 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));; | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ginclude/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here; 93 | struct bucket : tbb::internal::no_copy {; | ^~~~~~; ```. ### Setup; Fedora 34; ROOT master@39de75e; gcc 11.2. ### Additional context; This should be indeed fixed by the current builtin_tbb (2019 U9) for gcc 10 as reported at https://github.com/oneapi-src/oneTBB/issues/134; But on the TBB repo there are other similar issues that still didn't work with gcc 10.2 and tbb 2020 https://github.com/oneapi-src/oneTBB/issues/307",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9020
https://github.com/root-project/root/pull/9021:595,Availability,down,down,595,"Prevent a TTree from calling its won RecursiveRemove. Call RecursiveRemove early in the TTree destructor (rather than last thing), to remove the tree; from any list (like another TTree's list of clones) to avoid that the destructor's deletion of; item (eg. the list of friends), provoke a call to this same TTree's RecursiveRemove which; will try to call the RecursiveRemove on the item being deleted. An alternative would be; to replace the pattern. `delete fFriends; fFriends = nullptr;`; with `auto tmp = fFriends; fFriends = nullptr; delete tmp;`. This fixes issue #9017 where we had a tear down crash because:. ~TTree call delete fFriends which call RecursiveRemove which reach another TTree's list of clone; where its find the (original) TTree and call its RecursiveRemove which tries (and fail) to call; RecursiveRemove on fFriends",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9021
https://github.com/root-project/root/pull/9021:206,Safety,avoid,avoid,206,"Prevent a TTree from calling its won RecursiveRemove. Call RecursiveRemove early in the TTree destructor (rather than last thing), to remove the tree; from any list (like another TTree's list of clones) to avoid that the destructor's deletion of; item (eg. the list of friends), provoke a call to this same TTree's RecursiveRemove which; will try to call the RecursiveRemove on the item being deleted. An alternative would be; to replace the pattern. `delete fFriends; fFriends = nullptr;`; with `auto tmp = fFriends; fFriends = nullptr; delete tmp;`. This fixes issue #9017 where we had a tear down crash because:. ~TTree call delete fFriends which call RecursiveRemove which reach another TTree's list of clone; where its find the (original) TTree and call its RecursiveRemove which tries (and fail) to call; RecursiveRemove on fFriends",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9021
https://github.com/root-project/root/issues/9023:176,Integrability,depend,depending,176,"### Explain what you would like to see improved; When using RDF from PyROOT and checking the type / string representation of some RDF operation, one gets very different things depending on the operation; ```python; >>> import ROOT; >>> df = ROOT.RDataFrame(100); >>> type(df); <class cppyy.gbl.ROOT.RDataFrame at 0x55b7a99f15a0>; >>> type(df.Count); <class 'cppyy.CPPOverload'>; >>> type(df.Histo1D); <class 'functools.partial'>; >>> type(df.Report); <class 'cppyy.CPPOverload'>; >>> type(df.Display); <class 'cppyy.TemplateProxy'>; >>> type(df.Min); <class 'cppyy.TemplateProxy'>; >>> df.Count; <cppyy.CPPOverload object at 0x7f4f22f32ca0>; >>> df.Histo1D; functools.partial(<bound method _histo_profile of <cppyy.gbl.ROOT.RDataFrame object at 0x55b7a9b6fb70>>, ('_OriginalHisto1D', <class cppyy.gbl.ROOT.RDF.TH1DModel at 0x55b7a88dbbb0>)); >>> df.Define; ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Define(basic_string_view<char,char_traits<char> > name, basic_string_view<char,char_traits<char> > expression); >>> df.Filter; ROOT::RDF::RInterface<ROOT::Detail::RDF::RJittedFilter,void> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Filter(basic_string_view<char,char_traits<char> > expression, basic_string_view<char,char_traits<char> > name = """"); >>> df.Report; <cppyy.CPPOverload object at 0x7f4f22f32ca0>; >>> df.Max; ROOT::RDF::RResultPtr<double> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Max(basic_string_view<char,char_traits<char> > columnName = """"); >>> df.Min; ROOT::RDF::RResultPtr<double> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Min(basic_string_view<char,char_traits<char> > columnName = """"); >>> df.Mean; ROOT::RDF::RResultPtr<double> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Mean(basic_string_view<char,char_traits<char> > columnName = """"); >>> df.Display; ROOT::RDF::RResultPtr<ROOT::RDF::RDisplay> ROOT::RDF::RInterface<ROOT::Det",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9023
https://github.com/root-project/root/pull/9025:986,Deployability,Update,Update,986,"This pull-request fixes a couple of issues related to `roottest` branch sync'ing. See issue #8783 for more information. ## Changes or fixes:; - Checkout the correct `roottest` head/tag if root is at `latest-stable`. If the current checked out branch is `latest-stable`, resolve it to the latest merged head/tag (i.e. second parent of latest-stable), and use that to clone `roottest`. These two commands illustrate the proposed behavior:; ```bash; $ git for-each-ref --points-at=latest-stable^2 --format=%(refname:short); v6-24-06; $ git clone -b v6-24-06 https://github.com/root-project/roottest.git; ```. - If the checked out ref in `root` is a tag (e.g. as a result of `$ git checkout v6-24-06`), `roottest` is not cloned at the expected revision. The previous implementation relied on `git rev-parse --abbrev-ref HEAD` to get the name of the checked out branch. While this works for branch heads, it fails for tags, i.e.; ```bash; $ git checkout v6-24-06; HEAD is now at 3b796f86a3 ""Update ROOT version files to v6.24/06.""; $ git rev-parse --abbrev-ref HEAD; HEAD; ```; The proposed solution in this case is to use `git for-each-ref` (or alternatively `git describe`), i.e.; ```bash; $ git for-each-ref --points-at=HEAD --format='%(refname:short)'; v6-24-06; ```. ## Checklist:; - [X] tested changes locally. This PR fixes #8783.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9025
https://github.com/root-project/root/pull/9025:1288,Testability,test,tested,1288,"This pull-request fixes a couple of issues related to `roottest` branch sync'ing. See issue #8783 for more information. ## Changes or fixes:; - Checkout the correct `roottest` head/tag if root is at `latest-stable`. If the current checked out branch is `latest-stable`, resolve it to the latest merged head/tag (i.e. second parent of latest-stable), and use that to clone `roottest`. These two commands illustrate the proposed behavior:; ```bash; $ git for-each-ref --points-at=latest-stable^2 --format=%(refname:short); v6-24-06; $ git clone -b v6-24-06 https://github.com/root-project/roottest.git; ```. - If the checked out ref in `root` is a tag (e.g. as a result of `$ git checkout v6-24-06`), `roottest` is not cloned at the expected revision. The previous implementation relied on `git rev-parse --abbrev-ref HEAD` to get the name of the checked out branch. While this works for branch heads, it fails for tags, i.e.; ```bash; $ git checkout v6-24-06; HEAD is now at 3b796f86a3 ""Update ROOT version files to v6.24/06.""; $ git rev-parse --abbrev-ref HEAD; HEAD; ```; The proposed solution in this case is to use `git for-each-ref` (or alternatively `git describe`), i.e.; ```bash; $ git for-each-ref --points-at=HEAD --format='%(refname:short)'; v6-24-06; ```. ## Checklist:; - [X] tested changes locally. This PR fixes #8783.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9025
https://github.com/root-project/root/pull/9026:595,Availability,down,down,595,"Prevent a TTree from calling its won RecursiveRemove. Call RecursiveRemove early in the TTree destructor (rather than last thing), to remove the tree; from any list (like another TTree's list of clones) to avoid that the destructor's deletion of; item (eg. the list of friends), provoke a call to this same TTree's RecursiveRemove which; will try to call the RecursiveRemove on the item being deleted. An alternative would be; to replace the pattern. `delete fFriends; fFriends = nullptr;`; with `auto tmp = fFriends; fFriends = nullptr; delete tmp;`. This fixes issue #9017 where we had a tear down crash because:. ~TTree call delete fFriends which call RecursiveRemove which reach another TTree's list of clone; where its find the (original) TTree and call its RecursiveRemove which tries (and fail) to call; RecursiveRemove on fFriends",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9026
https://github.com/root-project/root/pull/9026:206,Safety,avoid,avoid,206,"Prevent a TTree from calling its won RecursiveRemove. Call RecursiveRemove early in the TTree destructor (rather than last thing), to remove the tree; from any list (like another TTree's list of clones) to avoid that the destructor's deletion of; item (eg. the list of friends), provoke a call to this same TTree's RecursiveRemove which; will try to call the RecursiveRemove on the item being deleted. An alternative would be; to replace the pattern. `delete fFriends; fFriends = nullptr;`; with `auto tmp = fFriends; fFriends = nullptr; delete tmp;`. This fixes issue #9017 where we had a tear down crash because:. ~TTree call delete fFriends which call RecursiveRemove which reach another TTree's list of clone; where its find the (original) TTree and call its RecursiveRemove which tries (and fail) to call; RecursiveRemove on fFriends",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9026
https://github.com/root-project/root/pull/9027:595,Availability,down,down,595,"Prevent a TTree from calling its won RecursiveRemove. Call RecursiveRemove early in the TTree destructor (rather than last thing), to remove the tree; from any list (like another TTree's list of clones) to avoid that the destructor's deletion of; item (eg. the list of friends), provoke a call to this same TTree's RecursiveRemove which; will try to call the RecursiveRemove on the item being deleted. An alternative would be; to replace the pattern. `delete fFriends; fFriends = nullptr;`; with `auto tmp = fFriends; fFriends = nullptr; delete tmp;`. This fixes issue #9017 where we had a tear down crash because:. ~TTree call delete fFriends which call RecursiveRemove which reach another TTree's list of clone; where its find the (original) TTree and call its RecursiveRemove which tries (and fail) to call; RecursiveRemove on fFriends",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9027
https://github.com/root-project/root/pull/9027:206,Safety,avoid,avoid,206,"Prevent a TTree from calling its won RecursiveRemove. Call RecursiveRemove early in the TTree destructor (rather than last thing), to remove the tree; from any list (like another TTree's list of clones) to avoid that the destructor's deletion of; item (eg. the list of friends), provoke a call to this same TTree's RecursiveRemove which; will try to call the RecursiveRemove on the item being deleted. An alternative would be; to replace the pattern. `delete fFriends; fFriends = nullptr;`; with `auto tmp = fFriends; fFriends = nullptr; delete tmp;`. This fixes issue #9017 where we had a tear down crash because:. ~TTree call delete fFriends which call RecursiveRemove which reach another TTree's list of clone; where its find the (original) TTree and call its RecursiveRemove which tries (and fail) to call; RecursiveRemove on fFriends",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9027
https://github.com/root-project/root/issues/9029:692,Testability,Test,Tested,692,"Hi everyone,. We came across this issue in ATLAS recently. There were similar reports in the past, such as [ROOT-7254](https://sft.its.cern.ch/jira/browse/ROOT-7254), but there is none that's still open as far as I could see. . ### Describe the bug; Repeatedly calling `TClass::GetClass`/`TClassEdit::ResolveTypedef` w/ an input such as `std::vector<int>::value_size` seems to create memory hoarding. ### To Reproduce; Either of these python scripts should reproduce the issue:. ```python; import ROOT. while True:; ROOT.TClass.GetClass(""std::vector<int>::value_size""); ```. ```python; import ROOT. while True:; ROOT.TClassEdit.ResolveTypedef(""std::vector<int>::value_size""); ```. ### Setup; Tested with both ROOT versions 6.24/00 and 6.24/06 in the ATLAS production environment. Please let us know, many thanks. Best,; Serhan",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9029
https://github.com/root-project/root/issues/9030:954,Performance,load,loading,954,"### Is your feature request related to a problem? Please describe.; Instances of `RDataFrame` objects are meant to be treated like trees. Therefore there should be a function that allows us to merge them. Without this, we would do things like:. ```python; #-----------------------------------------; def get_tree(filepath, index):; df= ROOT.RDataFrame('tree', filepath); df= df.Define('identity', index); df.Snapshot('tree', '/tmp/{}.root'.format(index)). ifile = ROOT.TFile('/tmp/{}.root'.format(suf)); itree = ifile.tree. return (ifile, itree); #-----------------------------------------; def merge(filepath_1, filepath_2):; if_1, itree_1 = get_tree(file_path_1, '1'); if_2, itree_2 = get_tree(file_path_2, '2'). ofile = ROOT.TFile('file.root', 'recreate'); l_tree = ROOT.TList(); l_tree.Add(itree_1); l_tree.Add(itree_2). otree = ROOT.TTree.MergeTrees(l_tree); otree.Write(); ofile.Close(); ```. which requires opening each file and saving them. Then loading them again and merging, then saving again, this is all wasteful and time consuming. ### Describe the solution you'd like. ```python; df_1=ROOT.RDataFrame('tree', file_path_1); df_2=ROOT.RDataFrame('tree', file_path_2). df_1=df_1.Define('identity', '+1'); df_2=df_2.Define('identity', '+2'). df_3 = df_1.Merge(df_2); df_3.Snapshot('tree', 'file.root'); ```. ### Describe alternatives you've considered. I am currently using the `get_trees` and `merge` functions I wrote, but it's far from ideal, it takes ages to finish. ### Additional context; <!--; Add any other context or screenshots about the feature requested here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9030
https://github.com/root-project/root/issues/9031:873,Availability,error,errors,873,"From the release notes of `glibc` 2.34 [[1]]:. > The deprecated memory allocation hooks __malloc_hook, __realloc_hook,; __memalign_hook and __free_hook are now removed from the API. Compatibility; symbols are present to support legacy programs but new applications can no; longer link to these symbols. These hooks no longer have any effect on glibc; functionality. The malloc debugging DSO libc_malloc_debug.so currently; supports hooks and can be preloaded to get this functionality back for older; programs. However this is a transitional measure and may be removed in a; future release of the GNU C Library. Users may port away from these hooks by; writing and preloading their own malloc interposition library. As a consequence, building root 6.24/06 against glibc 2.34 (for example on openSUSE Tumbleweed which already has the updated glibc) fails with the following errors:. ~~~; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx: In static member function 'static void* (* TMemStatHook::GetMallocHook())(size_t, const void*)':; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx:51:11: error: '__malloc_hook' was not declared in this scope; [ 2135s] 51 | return __malloc_hook;; [ 2135s] | ^~~~~~~~~~~~~; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx: In static member function 'static void (* TMemStatHook::GetFreeHook())(void*, const void*)':; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx:64:11: error: '__free_hook' was not declared in this scope; [ 2135s] 64 | return __free_hook;; [ 2135s] | ^~~~~~~~~~~; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx: In static member function 'static void TMemStatHook::SetMallocHook(TMemStatHook::MallocHookFunc_t)':; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx:77:4: error: '__malloc_hook' was not declared in this scope; [ 2135s]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9031
https://github.com/root-project/root/issues/9031:1161,Availability,error,error,1161,"rograms but new applications can no; longer link to these symbols. These hooks no longer have any effect on glibc; functionality. The malloc debugging DSO libc_malloc_debug.so currently; supports hooks and can be preloaded to get this functionality back for older; programs. However this is a transitional measure and may be removed in a; future release of the GNU C Library. Users may port away from these hooks by; writing and preloading their own malloc interposition library. As a consequence, building root 6.24/06 against glibc 2.34 (for example on openSUSE Tumbleweed which already has the updated glibc) fails with the following errors:. ~~~; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx: In static member function 'static void* (* TMemStatHook::GetMallocHook())(size_t, const void*)':; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx:51:11: error: '__malloc_hook' was not declared in this scope; [ 2135s] 51 | return __malloc_hook;; [ 2135s] | ^~~~~~~~~~~~~; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx: In static member function 'static void (* TMemStatHook::GetFreeHook())(void*, const void*)':; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx:64:11: error: '__free_hook' was not declared in this scope; [ 2135s] 64 | return __free_hook;; [ 2135s] | ^~~~~~~~~~~; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx: In static member function 'static void TMemStatHook::SetMallocHook(TMemStatHook::MallocHookFunc_t)':; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx:77:4: error: '__malloc_hook' was not declared in this scope; [ 2135s] 77 | __malloc_hook = p;; [ 2135s] | ^~~~~~~~~~~~~; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx: In static member function 'static void TMemStatHook::SetFreeHook(TMemStatHook::FreeHookFunc_t)':; [",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9031
https://github.com/root-project/root/issues/9031:1549,Availability,error,error,1549," port away from these hooks by; writing and preloading their own malloc interposition library. As a consequence, building root 6.24/06 against glibc 2.34 (for example on openSUSE Tumbleweed which already has the updated glibc) fails with the following errors:. ~~~; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx: In static member function 'static void* (* TMemStatHook::GetMallocHook())(size_t, const void*)':; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx:51:11: error: '__malloc_hook' was not declared in this scope; [ 2135s] 51 | return __malloc_hook;; [ 2135s] | ^~~~~~~~~~~~~; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx: In static member function 'static void (* TMemStatHook::GetFreeHook())(void*, const void*)':; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx:64:11: error: '__free_hook' was not declared in this scope; [ 2135s] 64 | return __free_hook;; [ 2135s] | ^~~~~~~~~~~; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx: In static member function 'static void TMemStatHook::SetMallocHook(TMemStatHook::MallocHookFunc_t)':; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx:77:4: error: '__malloc_hook' was not declared in this scope; [ 2135s] 77 | __malloc_hook = p;; [ 2135s] | ^~~~~~~~~~~~~; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx: In static member function 'static void TMemStatHook::SetFreeHook(TMemStatHook::FreeHookFunc_t)':; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx:88:4: error: '__free_hook' was not declared in this scope; [ 2135s] 88 | __free_hook = p;; [ 2135s] | ^~~~~~~~~~~; ~~~. Any suggestion to work around this would be highly appreciated. Thank you. (1) https://sourceware.org/pipermail/libc-alpha/2021-August/129718.html. [1]: https://sourceware.org/piperm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9031
https://github.com/root-project/root/issues/9031:1938,Availability,error,error,1938," and preloading their own malloc interposition library. As a consequence, building root 6.24/06 against glibc 2.34 (for example on openSUSE Tumbleweed which already has the updated glibc) fails with the following errors:. ~~~; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx: In static member function 'static void* (* TMemStatHook::GetMallocHook())(size_t, const void*)':; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx:51:11: error: '__malloc_hook' was not declared in this scope; [ 2135s] 51 | return __malloc_hook;; [ 2135s] | ^~~~~~~~~~~~~; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx: In static member function 'static void (* TMemStatHook::GetFreeHook())(void*, const void*)':; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx:64:11: error: '__free_hook' was not declared in this scope; [ 2135s] 64 | return __free_hook;; [ 2135s] | ^~~~~~~~~~~; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx: In static member function 'static void TMemStatHook::SetMallocHook(TMemStatHook::MallocHookFunc_t)':; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx:77:4: error: '__malloc_hook' was not declared in this scope; [ 2135s] 77 | __malloc_hook = p;; [ 2135s] | ^~~~~~~~~~~~~; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx: In static member function 'static void TMemStatHook::SetFreeHook(TMemStatHook::FreeHookFunc_t)':; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx:88:4: error: '__free_hook' was not declared in this scope; [ 2135s] 88 | __free_hook = p;; [ 2135s] | ^~~~~~~~~~~; ~~~. Any suggestion to work around this would be highly appreciated. Thank you. (1) https://sourceware.org/pipermail/libc-alpha/2021-August/129718.html. [1]: https://sourceware.org/pipermail/libc-alpha/2021-August/129718.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9031
https://github.com/root-project/root/issues/9031:2326,Availability,error,error,2326," and preloading their own malloc interposition library. As a consequence, building root 6.24/06 against glibc 2.34 (for example on openSUSE Tumbleweed which already has the updated glibc) fails with the following errors:. ~~~; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx: In static member function 'static void* (* TMemStatHook::GetMallocHook())(size_t, const void*)':; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx:51:11: error: '__malloc_hook' was not declared in this scope; [ 2135s] 51 | return __malloc_hook;; [ 2135s] | ^~~~~~~~~~~~~; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx: In static member function 'static void (* TMemStatHook::GetFreeHook())(void*, const void*)':; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx:64:11: error: '__free_hook' was not declared in this scope; [ 2135s] 64 | return __free_hook;; [ 2135s] | ^~~~~~~~~~~; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx: In static member function 'static void TMemStatHook::SetMallocHook(TMemStatHook::MallocHookFunc_t)':; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx:77:4: error: '__malloc_hook' was not declared in this scope; [ 2135s] 77 | __malloc_hook = p;; [ 2135s] | ^~~~~~~~~~~~~; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx: In static member function 'static void TMemStatHook::SetFreeHook(TMemStatHook::FreeHookFunc_t)':; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx:88:4: error: '__free_hook' was not declared in this scope; [ 2135s] 88 | __free_hook = p;; [ 2135s] | ^~~~~~~~~~~; ~~~. Any suggestion to work around this would be highly appreciated. Thank you. (1) https://sourceware.org/pipermail/libc-alpha/2021-August/129718.html. [1]: https://sourceware.org/pipermail/libc-alpha/2021-August/129718.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9031
https://github.com/root-project/root/issues/9031:9,Deployability,release,release,9,"From the release notes of `glibc` 2.34 [[1]]:. > The deprecated memory allocation hooks __malloc_hook, __realloc_hook,; __memalign_hook and __free_hook are now removed from the API. Compatibility; symbols are present to support legacy programs but new applications can no; longer link to these symbols. These hooks no longer have any effect on glibc; functionality. The malloc debugging DSO libc_malloc_debug.so currently; supports hooks and can be preloaded to get this functionality back for older; programs. However this is a transitional measure and may be removed in a; future release of the GNU C Library. Users may port away from these hooks by; writing and preloading their own malloc interposition library. As a consequence, building root 6.24/06 against glibc 2.34 (for example on openSUSE Tumbleweed which already has the updated glibc) fails with the following errors:. ~~~; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx: In static member function 'static void* (* TMemStatHook::GetMallocHook())(size_t, const void*)':; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx:51:11: error: '__malloc_hook' was not declared in this scope; [ 2135s] 51 | return __malloc_hook;; [ 2135s] | ^~~~~~~~~~~~~; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx: In static member function 'static void (* TMemStatHook::GetFreeHook())(void*, const void*)':; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx:64:11: error: '__free_hook' was not declared in this scope; [ 2135s] 64 | return __free_hook;; [ 2135s] | ^~~~~~~~~~~; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx: In static member function 'static void TMemStatHook::SetMallocHook(TMemStatHook::MallocHookFunc_t)':; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx:77:4: error: '__malloc_hook' was not declared in this scope; [ 2135s]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9031
https://github.com/root-project/root/issues/9031:582,Deployability,release,release,582,"From the release notes of `glibc` 2.34 [[1]]:. > The deprecated memory allocation hooks __malloc_hook, __realloc_hook,; __memalign_hook and __free_hook are now removed from the API. Compatibility; symbols are present to support legacy programs but new applications can no; longer link to these symbols. These hooks no longer have any effect on glibc; functionality. The malloc debugging DSO libc_malloc_debug.so currently; supports hooks and can be preloaded to get this functionality back for older; programs. However this is a transitional measure and may be removed in a; future release of the GNU C Library. Users may port away from these hooks by; writing and preloading their own malloc interposition library. As a consequence, building root 6.24/06 against glibc 2.34 (for example on openSUSE Tumbleweed which already has the updated glibc) fails with the following errors:. ~~~; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx: In static member function 'static void* (* TMemStatHook::GetMallocHook())(size_t, const void*)':; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx:51:11: error: '__malloc_hook' was not declared in this scope; [ 2135s] 51 | return __malloc_hook;; [ 2135s] | ^~~~~~~~~~~~~; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx: In static member function 'static void (* TMemStatHook::GetFreeHook())(void*, const void*)':; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx:64:11: error: '__free_hook' was not declared in this scope; [ 2135s] 64 | return __free_hook;; [ 2135s] | ^~~~~~~~~~~; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx: In static member function 'static void TMemStatHook::SetMallocHook(TMemStatHook::MallocHookFunc_t)':; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx:77:4: error: '__malloc_hook' was not declared in this scope; [ 2135s]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9031
https://github.com/root-project/root/issues/9031:833,Deployability,update,updated,833,"From the release notes of `glibc` 2.34 [[1]]:. > The deprecated memory allocation hooks __malloc_hook, __realloc_hook,; __memalign_hook and __free_hook are now removed from the API. Compatibility; symbols are present to support legacy programs but new applications can no; longer link to these symbols. These hooks no longer have any effect on glibc; functionality. The malloc debugging DSO libc_malloc_debug.so currently; supports hooks and can be preloaded to get this functionality back for older; programs. However this is a transitional measure and may be removed in a; future release of the GNU C Library. Users may port away from these hooks by; writing and preloading their own malloc interposition library. As a consequence, building root 6.24/06 against glibc 2.34 (for example on openSUSE Tumbleweed which already has the updated glibc) fails with the following errors:. ~~~; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx: In static member function 'static void* (* TMemStatHook::GetMallocHook())(size_t, const void*)':; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx:51:11: error: '__malloc_hook' was not declared in this scope; [ 2135s] 51 | return __malloc_hook;; [ 2135s] | ^~~~~~~~~~~~~; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx: In static member function 'static void (* TMemStatHook::GetFreeHook())(void*, const void*)':; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx:64:11: error: '__free_hook' was not declared in this scope; [ 2135s] 64 | return __free_hook;; [ 2135s] | ^~~~~~~~~~~; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx: In static member function 'static void TMemStatHook::SetMallocHook(TMemStatHook::MallocHookFunc_t)':; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx:77:4: error: '__malloc_hook' was not declared in this scope; [ 2135s]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9031
https://github.com/root-project/root/pull/9033:468,Testability,test,tested,468,"This pull-request fixes `RNTupleWriter::Recreate()` in DAOS 1.2, where the old ntuple was not overwritten (see issue #9032). ## Changes or fixes:; - `DAOS_COND_DKEY_INSERT` was inappropriately used in `daos_obj_update()` calls, which causes `RNTupleWriter::Recreate()` to not overwrite old data. This has been fixed. - Additionally, `DAOS_COND_{D,A}KEY_FETCH` has been added to flags in `daos_obj_fetch()` call (fail if dkey/akey does not exist). ## Checklist:; - [X] tested changes locally. This PR fixes #9032.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9033
https://github.com/root-project/root/pull/9034:18,Deployability,update,updates,18,This pull-request updates the release notes for v6.26 and the `CREDITS` file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9034
https://github.com/root-project/root/pull/9034:30,Deployability,release,release,30,This pull-request updates the release notes for v6.26 and the `CREDITS` file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9034
https://github.com/root-project/root/pull/9035:69,Availability,error,errors,69,"Disable the rcanvas/rbox.py test which is failing with the following errors:; ```; Start 993: tutorial-rcanvas-rbox-py. 993: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python39-32/python.exe^C:/Users/bellenot/git/master/tutorials/launcher.py^C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py"" ""-DSYS=C:/Users/bellenot/build/release"" ""-DENV=ROOTSYS=C:/Users/bellenot/build/release#PYTHONPATH=C:/Users/bellenot/build/release/bin#PYTHIA8DATA=C:/Users/bellenot/libs/pythia8/8.3.03/share/Pythia8/xmldoc"" ""-P"" ""C:/Users/bellenot/build/release/RootTestDriver.cmake""; 993: Environment variables:; 993: ROOT_HIST=0; 993: Test timeout computed to be: 1500; 993: input_line_35:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RCanvas>*)obj)->operator-><ROOT::Experimental::RCanvas, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: input_line_39:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RBox>*)obj)->operator-><ROOT::Experimental::RBox, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: Traceback (most recent call last):; 993: File ""C:\Users\bellenot\git\master\tutorials\launcher.py"", line 34, in <module>; 993: spec.loader.exec_module(module); 993: File ""<frozen importlib._bootstrap_external>"", line 850, in exec_module; 993: File ""<frozen importlib._bootstrap>"", line 228, in _call_with_frames_removed; 993: File ""C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py"", line 24, in <module>; 993: box1.border.color = RColor.kBlue; 993: AttributeError: <class cppyy.gbl.ROOT.Experimental.RColor at 0x12092B98> has no attribute 'kBlue'. Full details:; 993: attribute access requires an instance; 993: 'ROOT::Experimental::RColor::kBlue' is not a known",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9035
https://github.com/root-project/root/pull/9035:2104,Availability,Error,Error,2104,"mldoc"" ""-P"" ""C:/Users/bellenot/build/release/RootTestDriver.cmake""; 993: Environment variables:; 993: ROOT_HIST=0; 993: Test timeout computed to be: 1500; 993: input_line_35:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RCanvas>*)obj)->operator-><ROOT::Experimental::RCanvas, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: input_line_39:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RBox>*)obj)->operator-><ROOT::Experimental::RBox, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: Traceback (most recent call last):; 993: File ""C:\Users\bellenot\git\master\tutorials\launcher.py"", line 34, in <module>; 993: spec.loader.exec_module(module); 993: File ""<frozen importlib._bootstrap_external>"", line 850, in exec_module; 993: File ""<frozen importlib._bootstrap>"", line 228, in _call_with_frames_removed; 993: File ""C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py"", line 24, in <module>; 993: box1.border.color = RColor.kBlue; 993: AttributeError: <class cppyy.gbl.ROOT.Experimental.RColor at 0x12092B98> has no attribute 'kBlue'. Full details:; 993: attribute access requires an instance; 993: 'ROOT::Experimental::RColor::kBlue' is not a known C++ class; 993: 'kBlue' is not a known C++ template; 993: 'kBlue' is not a known C++ enum; 993: CMake Error at C:/Users/bellenot/build/release/RootTestDriver.cmake:227 (message):; 993: error code: 1; 993:; 993:; 1/1 Test #993: tutorial-rcanvas-rbox-py .........***Failed 3.69 sec. 0% tests passed, 1 tests failed out of 1. Label Time Summary:; tutorial = 3.69 sec*proc (1 test). Total Test time (real) = 6.60 sec. The following tests FAILED:; 993 - tutorial-rcanvas-rbox-py (Failed); Errors while running CTest; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9035
https://github.com/root-project/root/pull/9035:2187,Availability,error,error,2187,"mldoc"" ""-P"" ""C:/Users/bellenot/build/release/RootTestDriver.cmake""; 993: Environment variables:; 993: ROOT_HIST=0; 993: Test timeout computed to be: 1500; 993: input_line_35:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RCanvas>*)obj)->operator-><ROOT::Experimental::RCanvas, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: input_line_39:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RBox>*)obj)->operator-><ROOT::Experimental::RBox, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: Traceback (most recent call last):; 993: File ""C:\Users\bellenot\git\master\tutorials\launcher.py"", line 34, in <module>; 993: spec.loader.exec_module(module); 993: File ""<frozen importlib._bootstrap_external>"", line 850, in exec_module; 993: File ""<frozen importlib._bootstrap>"", line 228, in _call_with_frames_removed; 993: File ""C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py"", line 24, in <module>; 993: box1.border.color = RColor.kBlue; 993: AttributeError: <class cppyy.gbl.ROOT.Experimental.RColor at 0x12092B98> has no attribute 'kBlue'. Full details:; 993: attribute access requires an instance; 993: 'ROOT::Experimental::RColor::kBlue' is not a known C++ class; 993: 'kBlue' is not a known C++ template; 993: 'kBlue' is not a known C++ enum; 993: CMake Error at C:/Users/bellenot/build/release/RootTestDriver.cmake:227 (message):; 993: error code: 1; 993:; 993:; 1/1 Test #993: tutorial-rcanvas-rbox-py .........***Failed 3.69 sec. 0% tests passed, 1 tests failed out of 1. Label Time Summary:; tutorial = 3.69 sec*proc (1 test). Total Test time (real) = 6.60 sec. The following tests FAILED:; 993 - tutorial-rcanvas-rbox-py (Failed); Errors while running CTest; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9035
https://github.com/root-project/root/pull/9035:2486,Availability,Error,Errors,2486,"mldoc"" ""-P"" ""C:/Users/bellenot/build/release/RootTestDriver.cmake""; 993: Environment variables:; 993: ROOT_HIST=0; 993: Test timeout computed to be: 1500; 993: input_line_35:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RCanvas>*)obj)->operator-><ROOT::Experimental::RCanvas, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: input_line_39:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RBox>*)obj)->operator-><ROOT::Experimental::RBox, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: Traceback (most recent call last):; 993: File ""C:\Users\bellenot\git\master\tutorials\launcher.py"", line 34, in <module>; 993: spec.loader.exec_module(module); 993: File ""<frozen importlib._bootstrap_external>"", line 850, in exec_module; 993: File ""<frozen importlib._bootstrap>"", line 228, in _call_with_frames_removed; 993: File ""C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py"", line 24, in <module>; 993: box1.border.color = RColor.kBlue; 993: AttributeError: <class cppyy.gbl.ROOT.Experimental.RColor at 0x12092B98> has no attribute 'kBlue'. Full details:; 993: attribute access requires an instance; 993: 'ROOT::Experimental::RColor::kBlue' is not a known C++ class; 993: 'kBlue' is not a known C++ template; 993: 'kBlue' is not a known C++ enum; 993: CMake Error at C:/Users/bellenot/build/release/RootTestDriver.cmake:227 (message):; 993: error code: 1; 993:; 993:; 1/1 Test #993: tutorial-rcanvas-rbox-py .........***Failed 3.69 sec. 0% tests passed, 1 tests failed out of 1. Label Time Summary:; tutorial = 3.69 sec*proc (1 test). Total Test time (real) = 6.60 sec. The following tests FAILED:; 993 - tutorial-rcanvas-rbox-py (Failed); Errors while running CTest; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9035
https://github.com/root-project/root/pull/9035:349,Deployability,release,release,349,"Disable the rcanvas/rbox.py test which is failing with the following errors:; ```; Start 993: tutorial-rcanvas-rbox-py. 993: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python39-32/python.exe^C:/Users/bellenot/git/master/tutorials/launcher.py^C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py"" ""-DSYS=C:/Users/bellenot/build/release"" ""-DENV=ROOTSYS=C:/Users/bellenot/build/release#PYTHONPATH=C:/Users/bellenot/build/release/bin#PYTHIA8DATA=C:/Users/bellenot/libs/pythia8/8.3.03/share/Pythia8/xmldoc"" ""-P"" ""C:/Users/bellenot/build/release/RootTestDriver.cmake""; 993: Environment variables:; 993: ROOT_HIST=0; 993: Test timeout computed to be: 1500; 993: input_line_35:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RCanvas>*)obj)->operator-><ROOT::Experimental::RCanvas, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: input_line_39:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RBox>*)obj)->operator-><ROOT::Experimental::RBox, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: Traceback (most recent call last):; 993: File ""C:\Users\bellenot\git\master\tutorials\launcher.py"", line 34, in <module>; 993: spec.loader.exec_module(module); 993: File ""<frozen importlib._bootstrap_external>"", line 850, in exec_module; 993: File ""<frozen importlib._bootstrap>"", line 228, in _call_with_frames_removed; 993: File ""C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py"", line 24, in <module>; 993: box1.border.color = RColor.kBlue; 993: AttributeError: <class cppyy.gbl.ROOT.Experimental.RColor at 0x12092B98> has no attribute 'kBlue'. Full details:; 993: attribute access requires an instance; 993: 'ROOT::Experimental::RColor::kBlue' is not a known",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9035
https://github.com/root-project/root/pull/9035:397,Deployability,release,release,397,"Disable the rcanvas/rbox.py test which is failing with the following errors:; ```; Start 993: tutorial-rcanvas-rbox-py. 993: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python39-32/python.exe^C:/Users/bellenot/git/master/tutorials/launcher.py^C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py"" ""-DSYS=C:/Users/bellenot/build/release"" ""-DENV=ROOTSYS=C:/Users/bellenot/build/release#PYTHONPATH=C:/Users/bellenot/build/release/bin#PYTHIA8DATA=C:/Users/bellenot/libs/pythia8/8.3.03/share/Pythia8/xmldoc"" ""-P"" ""C:/Users/bellenot/build/release/RootTestDriver.cmake""; 993: Environment variables:; 993: ROOT_HIST=0; 993: Test timeout computed to be: 1500; 993: input_line_35:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RCanvas>*)obj)->operator-><ROOT::Experimental::RCanvas, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: input_line_39:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RBox>*)obj)->operator-><ROOT::Experimental::RBox, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: Traceback (most recent call last):; 993: File ""C:\Users\bellenot\git\master\tutorials\launcher.py"", line 34, in <module>; 993: spec.loader.exec_module(module); 993: File ""<frozen importlib._bootstrap_external>"", line 850, in exec_module; 993: File ""<frozen importlib._bootstrap>"", line 228, in _call_with_frames_removed; 993: File ""C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py"", line 24, in <module>; 993: box1.border.color = RColor.kBlue; 993: AttributeError: <class cppyy.gbl.ROOT.Experimental.RColor at 0x12092B98> has no attribute 'kBlue'. Full details:; 993: attribute access requires an instance; 993: 'ROOT::Experimental::RColor::kBlue' is not a known",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9035
https://github.com/root-project/root/pull/9035:440,Deployability,release,release,440,"Disable the rcanvas/rbox.py test which is failing with the following errors:; ```; Start 993: tutorial-rcanvas-rbox-py. 993: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python39-32/python.exe^C:/Users/bellenot/git/master/tutorials/launcher.py^C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py"" ""-DSYS=C:/Users/bellenot/build/release"" ""-DENV=ROOTSYS=C:/Users/bellenot/build/release#PYTHONPATH=C:/Users/bellenot/build/release/bin#PYTHIA8DATA=C:/Users/bellenot/libs/pythia8/8.3.03/share/Pythia8/xmldoc"" ""-P"" ""C:/Users/bellenot/build/release/RootTestDriver.cmake""; 993: Environment variables:; 993: ROOT_HIST=0; 993: Test timeout computed to be: 1500; 993: input_line_35:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RCanvas>*)obj)->operator-><ROOT::Experimental::RCanvas, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: input_line_39:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RBox>*)obj)->operator-><ROOT::Experimental::RBox, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: Traceback (most recent call last):; 993: File ""C:\Users\bellenot\git\master\tutorials\launcher.py"", line 34, in <module>; 993: spec.loader.exec_module(module); 993: File ""<frozen importlib._bootstrap_external>"", line 850, in exec_module; 993: File ""<frozen importlib._bootstrap>"", line 228, in _call_with_frames_removed; 993: File ""C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py"", line 24, in <module>; 993: box1.border.color = RColor.kBlue; 993: AttributeError: <class cppyy.gbl.ROOT.Experimental.RColor at 0x12092B98> has no attribute 'kBlue'. Full details:; 993: attribute access requires an instance; 993: 'ROOT::Experimental::RColor::kBlue' is not a known",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9035
https://github.com/root-project/root/pull/9035:554,Deployability,release,release,554,"Disable the rcanvas/rbox.py test which is failing with the following errors:; ```; Start 993: tutorial-rcanvas-rbox-py. 993: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python39-32/python.exe^C:/Users/bellenot/git/master/tutorials/launcher.py^C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py"" ""-DSYS=C:/Users/bellenot/build/release"" ""-DENV=ROOTSYS=C:/Users/bellenot/build/release#PYTHONPATH=C:/Users/bellenot/build/release/bin#PYTHIA8DATA=C:/Users/bellenot/libs/pythia8/8.3.03/share/Pythia8/xmldoc"" ""-P"" ""C:/Users/bellenot/build/release/RootTestDriver.cmake""; 993: Environment variables:; 993: ROOT_HIST=0; 993: Test timeout computed to be: 1500; 993: input_line_35:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RCanvas>*)obj)->operator-><ROOT::Experimental::RCanvas, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: input_line_39:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RBox>*)obj)->operator-><ROOT::Experimental::RBox, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: Traceback (most recent call last):; 993: File ""C:\Users\bellenot\git\master\tutorials\launcher.py"", line 34, in <module>; 993: spec.loader.exec_module(module); 993: File ""<frozen importlib._bootstrap_external>"", line 850, in exec_module; 993: File ""<frozen importlib._bootstrap>"", line 228, in _call_with_frames_removed; 993: File ""C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py"", line 24, in <module>; 993: box1.border.color = RColor.kBlue; 993: AttributeError: <class cppyy.gbl.ROOT.Experimental.RColor at 0x12092B98> has no attribute 'kBlue'. Full details:; 993: attribute access requires an instance; 993: 'ROOT::Experimental::RColor::kBlue' is not a known",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9035
https://github.com/root-project/root/pull/9035:2137,Deployability,release,release,2137,"mldoc"" ""-P"" ""C:/Users/bellenot/build/release/RootTestDriver.cmake""; 993: Environment variables:; 993: ROOT_HIST=0; 993: Test timeout computed to be: 1500; 993: input_line_35:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RCanvas>*)obj)->operator-><ROOT::Experimental::RCanvas, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: input_line_39:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RBox>*)obj)->operator-><ROOT::Experimental::RBox, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: Traceback (most recent call last):; 993: File ""C:\Users\bellenot\git\master\tutorials\launcher.py"", line 34, in <module>; 993: spec.loader.exec_module(module); 993: File ""<frozen importlib._bootstrap_external>"", line 850, in exec_module; 993: File ""<frozen importlib._bootstrap>"", line 228, in _call_with_frames_removed; 993: File ""C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py"", line 24, in <module>; 993: box1.border.color = RColor.kBlue; 993: AttributeError: <class cppyy.gbl.ROOT.Experimental.RColor at 0x12092B98> has no attribute 'kBlue'. Full details:; 993: attribute access requires an instance; 993: 'ROOT::Experimental::RColor::kBlue' is not a known C++ class; 993: 'kBlue' is not a known C++ template; 993: 'kBlue' is not a known C++ enum; 993: CMake Error at C:/Users/bellenot/build/release/RootTestDriver.cmake:227 (message):; 993: error code: 1; 993:; 993:; 1/1 Test #993: tutorial-rcanvas-rbox-py .........***Failed 3.69 sec. 0% tests passed, 1 tests failed out of 1. Label Time Summary:; tutorial = 3.69 sec*proc (1 test). Total Test time (real) = 6.60 sec. The following tests FAILED:; 993 - tutorial-rcanvas-rbox-py (Failed); Errors while running CTest; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9035
https://github.com/root-project/root/pull/9035:2171,Integrability,message,message,2171,"mldoc"" ""-P"" ""C:/Users/bellenot/build/release/RootTestDriver.cmake""; 993: Environment variables:; 993: ROOT_HIST=0; 993: Test timeout computed to be: 1500; 993: input_line_35:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RCanvas>*)obj)->operator-><ROOT::Experimental::RCanvas, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: input_line_39:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RBox>*)obj)->operator-><ROOT::Experimental::RBox, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: Traceback (most recent call last):; 993: File ""C:\Users\bellenot\git\master\tutorials\launcher.py"", line 34, in <module>; 993: spec.loader.exec_module(module); 993: File ""<frozen importlib._bootstrap_external>"", line 850, in exec_module; 993: File ""<frozen importlib._bootstrap>"", line 228, in _call_with_frames_removed; 993: File ""C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py"", line 24, in <module>; 993: box1.border.color = RColor.kBlue; 993: AttributeError: <class cppyy.gbl.ROOT.Experimental.RColor at 0x12092B98> has no attribute 'kBlue'. Full details:; 993: attribute access requires an instance; 993: 'ROOT::Experimental::RColor::kBlue' is not a known C++ class; 993: 'kBlue' is not a known C++ template; 993: 'kBlue' is not a known C++ enum; 993: CMake Error at C:/Users/bellenot/build/release/RootTestDriver.cmake:227 (message):; 993: error code: 1; 993:; 993:; 1/1 Test #993: tutorial-rcanvas-rbox-py .........***Failed 3.69 sec. 0% tests passed, 1 tests failed out of 1. Label Time Summary:; tutorial = 3.69 sec*proc (1 test). Total Test time (real) = 6.60 sec. The following tests FAILED:; 993 - tutorial-rcanvas-rbox-py (Failed); Errors while running CTest; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9035
https://github.com/root-project/root/pull/9035:602,Modifiability,variab,variables,602,"sable the rcanvas/rbox.py test which is failing with the following errors:; ```; Start 993: tutorial-rcanvas-rbox-py. 993: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python39-32/python.exe^C:/Users/bellenot/git/master/tutorials/launcher.py^C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py"" ""-DSYS=C:/Users/bellenot/build/release"" ""-DENV=ROOTSYS=C:/Users/bellenot/build/release#PYTHONPATH=C:/Users/bellenot/build/release/bin#PYTHIA8DATA=C:/Users/bellenot/libs/pythia8/8.3.03/share/Pythia8/xmldoc"" ""-P"" ""C:/Users/bellenot/build/release/RootTestDriver.cmake""; 993: Environment variables:; 993: ROOT_HIST=0; 993: Test timeout computed to be: 1500; 993: input_line_35:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RCanvas>*)obj)->operator-><ROOT::Experimental::RCanvas, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: input_line_39:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RBox>*)obj)->operator-><ROOT::Experimental::RBox, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: Traceback (most recent call last):; 993: File ""C:\Users\bellenot\git\master\tutorials\launcher.py"", line 34, in <module>; 993: spec.loader.exec_module(module); 993: File ""<frozen importlib._bootstrap_external>"", line 850, in exec_module; 993: File ""<frozen importlib._bootstrap>"", line 228, in _call_with_frames_removed; 993: File ""C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py"", line 24, in <module>; 993: box1.border.color = RColor.kBlue; 993: AttributeError: <class cppyy.gbl.ROOT.Experimental.RColor at 0x12092B98> has no attribute 'kBlue'. Full details:; 993: attribute access requires an instance; 993: 'ROOT::Experimental::RColor::kBlue' is not a known C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9035
https://github.com/root-project/root/pull/9035:1465,Performance,load,loader,1465,"sers/bellenot/libs/pythia8/8.3.03/share/Pythia8/xmldoc"" ""-P"" ""C:/Users/bellenot/build/release/RootTestDriver.cmake""; 993: Environment variables:; 993: ROOT_HIST=0; 993: Test timeout computed to be: 1500; 993: input_line_35:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RCanvas>*)obj)->operator-><ROOT::Experimental::RCanvas, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: input_line_39:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RBox>*)obj)->operator-><ROOT::Experimental::RBox, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: Traceback (most recent call last):; 993: File ""C:\Users\bellenot\git\master\tutorials\launcher.py"", line 34, in <module>; 993: spec.loader.exec_module(module); 993: File ""<frozen importlib._bootstrap_external>"", line 850, in exec_module; 993: File ""<frozen importlib._bootstrap>"", line 228, in _call_with_frames_removed; 993: File ""C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py"", line 24, in <module>; 993: box1.border.color = RColor.kBlue; 993: AttributeError: <class cppyy.gbl.ROOT.Experimental.RColor at 0x12092B98> has no attribute 'kBlue'. Full details:; 993: attribute access requires an instance; 993: 'ROOT::Experimental::RColor::kBlue' is not a known C++ class; 993: 'kBlue' is not a known C++ template; 993: 'kBlue' is not a known C++ enum; 993: CMake Error at C:/Users/bellenot/build/release/RootTestDriver.cmake:227 (message):; 993: error code: 1; 993:; 993:; 1/1 Test #993: tutorial-rcanvas-rbox-py .........***Failed 3.69 sec. 0% tests passed, 1 tests failed out of 1. Label Time Summary:; tutorial = 3.69 sec*proc (1 test). Total Test time (real) = 6.60 sec. The following tests FAILED:; 993 - tutorial-rcanvas-r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9035
https://github.com/root-project/root/pull/9035:642,Safety,timeout,timeout,642,"sable the rcanvas/rbox.py test which is failing with the following errors:; ```; Start 993: tutorial-rcanvas-rbox-py. 993: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python39-32/python.exe^C:/Users/bellenot/git/master/tutorials/launcher.py^C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py"" ""-DSYS=C:/Users/bellenot/build/release"" ""-DENV=ROOTSYS=C:/Users/bellenot/build/release#PYTHONPATH=C:/Users/bellenot/build/release/bin#PYTHIA8DATA=C:/Users/bellenot/libs/pythia8/8.3.03/share/Pythia8/xmldoc"" ""-P"" ""C:/Users/bellenot/build/release/RootTestDriver.cmake""; 993: Environment variables:; 993: ROOT_HIST=0; 993: Test timeout computed to be: 1500; 993: input_line_35:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RCanvas>*)obj)->operator-><ROOT::Experimental::RCanvas, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: input_line_39:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RBox>*)obj)->operator-><ROOT::Experimental::RBox, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: Traceback (most recent call last):; 993: File ""C:\Users\bellenot\git\master\tutorials\launcher.py"", line 34, in <module>; 993: spec.loader.exec_module(module); 993: File ""<frozen importlib._bootstrap_external>"", line 850, in exec_module; 993: File ""<frozen importlib._bootstrap>"", line 228, in _call_with_frames_removed; 993: File ""C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py"", line 24, in <module>; 993: box1.border.color = RColor.kBlue; 993: AttributeError: <class cppyy.gbl.ROOT.Experimental.RColor at 0x12092B98> has no attribute 'kBlue'. Full details:; 993: attribute access requires an instance; 993: 'ROOT::Experimental::RColor::kBlue' is not a known C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9035
https://github.com/root-project/root/pull/9035:1917,Security,access,access,1917,"mldoc"" ""-P"" ""C:/Users/bellenot/build/release/RootTestDriver.cmake""; 993: Environment variables:; 993: ROOT_HIST=0; 993: Test timeout computed to be: 1500; 993: input_line_35:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RCanvas>*)obj)->operator-><ROOT::Experimental::RCanvas, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: input_line_39:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RBox>*)obj)->operator-><ROOT::Experimental::RBox, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: Traceback (most recent call last):; 993: File ""C:\Users\bellenot\git\master\tutorials\launcher.py"", line 34, in <module>; 993: spec.loader.exec_module(module); 993: File ""<frozen importlib._bootstrap_external>"", line 850, in exec_module; 993: File ""<frozen importlib._bootstrap>"", line 228, in _call_with_frames_removed; 993: File ""C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py"", line 24, in <module>; 993: box1.border.color = RColor.kBlue; 993: AttributeError: <class cppyy.gbl.ROOT.Experimental.RColor at 0x12092B98> has no attribute 'kBlue'. Full details:; 993: attribute access requires an instance; 993: 'ROOT::Experimental::RColor::kBlue' is not a known C++ class; 993: 'kBlue' is not a known C++ template; 993: 'kBlue' is not a known C++ enum; 993: CMake Error at C:/Users/bellenot/build/release/RootTestDriver.cmake:227 (message):; 993: error code: 1; 993:; 993:; 1/1 Test #993: tutorial-rcanvas-rbox-py .........***Failed 3.69 sec. 0% tests passed, 1 tests failed out of 1. Label Time Summary:; tutorial = 3.69 sec*proc (1 test). Total Test time (real) = 6.60 sec. The following tests FAILED:; 993 - tutorial-rcanvas-rbox-py (Failed); Errors while running CTest; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9035
https://github.com/root-project/root/pull/9035:28,Testability,test,test,28,"Disable the rcanvas/rbox.py test which is failing with the following errors:; ```; Start 993: tutorial-rcanvas-rbox-py. 993: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python39-32/python.exe^C:/Users/bellenot/git/master/tutorials/launcher.py^C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py"" ""-DSYS=C:/Users/bellenot/build/release"" ""-DENV=ROOTSYS=C:/Users/bellenot/build/release#PYTHONPATH=C:/Users/bellenot/build/release/bin#PYTHIA8DATA=C:/Users/bellenot/libs/pythia8/8.3.03/share/Pythia8/xmldoc"" ""-P"" ""C:/Users/bellenot/build/release/RootTestDriver.cmake""; 993: Environment variables:; 993: ROOT_HIST=0; 993: Test timeout computed to be: 1500; 993: input_line_35:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RCanvas>*)obj)->operator-><ROOT::Experimental::RCanvas, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: input_line_39:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RBox>*)obj)->operator-><ROOT::Experimental::RBox, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: Traceback (most recent call last):; 993: File ""C:\Users\bellenot\git\master\tutorials\launcher.py"", line 34, in <module>; 993: spec.loader.exec_module(module); 993: File ""<frozen importlib._bootstrap_external>"", line 850, in exec_module; 993: File ""<frozen importlib._bootstrap>"", line 228, in _call_with_frames_removed; 993: File ""C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py"", line 24, in <module>; 993: box1.border.color = RColor.kBlue; 993: AttributeError: <class cppyy.gbl.ROOT.Experimental.RColor at 0x12092B98> has no attribute 'kBlue'. Full details:; 993: attribute access requires an instance; 993: 'ROOT::Experimental::RColor::kBlue' is not a known",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9035
https://github.com/root-project/root/pull/9035:125,Testability,Test,Test,125,"Disable the rcanvas/rbox.py test which is failing with the following errors:; ```; Start 993: tutorial-rcanvas-rbox-py. 993: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python39-32/python.exe^C:/Users/bellenot/git/master/tutorials/launcher.py^C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py"" ""-DSYS=C:/Users/bellenot/build/release"" ""-DENV=ROOTSYS=C:/Users/bellenot/build/release#PYTHONPATH=C:/Users/bellenot/build/release/bin#PYTHIA8DATA=C:/Users/bellenot/libs/pythia8/8.3.03/share/Pythia8/xmldoc"" ""-P"" ""C:/Users/bellenot/build/release/RootTestDriver.cmake""; 993: Environment variables:; 993: ROOT_HIST=0; 993: Test timeout computed to be: 1500; 993: input_line_35:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RCanvas>*)obj)->operator-><ROOT::Experimental::RCanvas, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: input_line_39:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RBox>*)obj)->operator-><ROOT::Experimental::RBox, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: Traceback (most recent call last):; 993: File ""C:\Users\bellenot\git\master\tutorials\launcher.py"", line 34, in <module>; 993: spec.loader.exec_module(module); 993: File ""<frozen importlib._bootstrap_external>"", line 850, in exec_module; 993: File ""<frozen importlib._bootstrap>"", line 228, in _call_with_frames_removed; 993: File ""C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py"", line 24, in <module>; 993: box1.border.color = RColor.kBlue; 993: AttributeError: <class cppyy.gbl.ROOT.Experimental.RColor at 0x12092B98> has no attribute 'kBlue'. Full details:; 993: attribute access requires an instance; 993: 'ROOT::Experimental::RColor::kBlue' is not a known",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9035
https://github.com/root-project/root/pull/9035:637,Testability,Test,Test,637,"sable the rcanvas/rbox.py test which is failing with the following errors:; ```; Start 993: tutorial-rcanvas-rbox-py. 993: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python39-32/python.exe^C:/Users/bellenot/git/master/tutorials/launcher.py^C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py"" ""-DSYS=C:/Users/bellenot/build/release"" ""-DENV=ROOTSYS=C:/Users/bellenot/build/release#PYTHONPATH=C:/Users/bellenot/build/release/bin#PYTHIA8DATA=C:/Users/bellenot/libs/pythia8/8.3.03/share/Pythia8/xmldoc"" ""-P"" ""C:/Users/bellenot/build/release/RootTestDriver.cmake""; 993: Environment variables:; 993: ROOT_HIST=0; 993: Test timeout computed to be: 1500; 993: input_line_35:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RCanvas>*)obj)->operator-><ROOT::Experimental::RCanvas, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: input_line_39:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RBox>*)obj)->operator-><ROOT::Experimental::RBox, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: Traceback (most recent call last):; 993: File ""C:\Users\bellenot\git\master\tutorials\launcher.py"", line 34, in <module>; 993: spec.loader.exec_module(module); 993: File ""<frozen importlib._bootstrap_external>"", line 850, in exec_module; 993: File ""<frozen importlib._bootstrap>"", line 228, in _call_with_frames_removed; 993: File ""C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py"", line 24, in <module>; 993: box1.border.color = RColor.kBlue; 993: AttributeError: <class cppyy.gbl.ROOT.Experimental.RColor at 0x12092B98> has no attribute 'kBlue'. Full details:; 993: attribute access requires an instance; 993: 'ROOT::Experimental::RColor::kBlue' is not a known C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9035
https://github.com/root-project/root/pull/9035:2218,Testability,Test,Test,2218,"mldoc"" ""-P"" ""C:/Users/bellenot/build/release/RootTestDriver.cmake""; 993: Environment variables:; 993: ROOT_HIST=0; 993: Test timeout computed to be: 1500; 993: input_line_35:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RCanvas>*)obj)->operator-><ROOT::Experimental::RCanvas, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: input_line_39:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RBox>*)obj)->operator-><ROOT::Experimental::RBox, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: Traceback (most recent call last):; 993: File ""C:\Users\bellenot\git\master\tutorials\launcher.py"", line 34, in <module>; 993: spec.loader.exec_module(module); 993: File ""<frozen importlib._bootstrap_external>"", line 850, in exec_module; 993: File ""<frozen importlib._bootstrap>"", line 228, in _call_with_frames_removed; 993: File ""C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py"", line 24, in <module>; 993: box1.border.color = RColor.kBlue; 993: AttributeError: <class cppyy.gbl.ROOT.Experimental.RColor at 0x12092B98> has no attribute 'kBlue'. Full details:; 993: attribute access requires an instance; 993: 'ROOT::Experimental::RColor::kBlue' is not a known C++ class; 993: 'kBlue' is not a known C++ template; 993: 'kBlue' is not a known C++ enum; 993: CMake Error at C:/Users/bellenot/build/release/RootTestDriver.cmake:227 (message):; 993: error code: 1; 993:; 993:; 1/1 Test #993: tutorial-rcanvas-rbox-py .........***Failed 3.69 sec. 0% tests passed, 1 tests failed out of 1. Label Time Summary:; tutorial = 3.69 sec*proc (1 test). Total Test time (real) = 6.60 sec. The following tests FAILED:; 993 - tutorial-rcanvas-rbox-py (Failed); Errors while running CTest; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9035
https://github.com/root-project/root/pull/9035:2286,Testability,test,tests,2286,"mldoc"" ""-P"" ""C:/Users/bellenot/build/release/RootTestDriver.cmake""; 993: Environment variables:; 993: ROOT_HIST=0; 993: Test timeout computed to be: 1500; 993: input_line_35:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RCanvas>*)obj)->operator-><ROOT::Experimental::RCanvas, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: input_line_39:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RBox>*)obj)->operator-><ROOT::Experimental::RBox, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: Traceback (most recent call last):; 993: File ""C:\Users\bellenot\git\master\tutorials\launcher.py"", line 34, in <module>; 993: spec.loader.exec_module(module); 993: File ""<frozen importlib._bootstrap_external>"", line 850, in exec_module; 993: File ""<frozen importlib._bootstrap>"", line 228, in _call_with_frames_removed; 993: File ""C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py"", line 24, in <module>; 993: box1.border.color = RColor.kBlue; 993: AttributeError: <class cppyy.gbl.ROOT.Experimental.RColor at 0x12092B98> has no attribute 'kBlue'. Full details:; 993: attribute access requires an instance; 993: 'ROOT::Experimental::RColor::kBlue' is not a known C++ class; 993: 'kBlue' is not a known C++ template; 993: 'kBlue' is not a known C++ enum; 993: CMake Error at C:/Users/bellenot/build/release/RootTestDriver.cmake:227 (message):; 993: error code: 1; 993:; 993:; 1/1 Test #993: tutorial-rcanvas-rbox-py .........***Failed 3.69 sec. 0% tests passed, 1 tests failed out of 1. Label Time Summary:; tutorial = 3.69 sec*proc (1 test). Total Test time (real) = 6.60 sec. The following tests FAILED:; 993 - tutorial-rcanvas-rbox-py (Failed); Errors while running CTest; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9035
https://github.com/root-project/root/pull/9035:2302,Testability,test,tests,2302,"mldoc"" ""-P"" ""C:/Users/bellenot/build/release/RootTestDriver.cmake""; 993: Environment variables:; 993: ROOT_HIST=0; 993: Test timeout computed to be: 1500; 993: input_line_35:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RCanvas>*)obj)->operator-><ROOT::Experimental::RCanvas, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: input_line_39:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RBox>*)obj)->operator-><ROOT::Experimental::RBox, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: Traceback (most recent call last):; 993: File ""C:\Users\bellenot\git\master\tutorials\launcher.py"", line 34, in <module>; 993: spec.loader.exec_module(module); 993: File ""<frozen importlib._bootstrap_external>"", line 850, in exec_module; 993: File ""<frozen importlib._bootstrap>"", line 228, in _call_with_frames_removed; 993: File ""C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py"", line 24, in <module>; 993: box1.border.color = RColor.kBlue; 993: AttributeError: <class cppyy.gbl.ROOT.Experimental.RColor at 0x12092B98> has no attribute 'kBlue'. Full details:; 993: attribute access requires an instance; 993: 'ROOT::Experimental::RColor::kBlue' is not a known C++ class; 993: 'kBlue' is not a known C++ template; 993: 'kBlue' is not a known C++ enum; 993: CMake Error at C:/Users/bellenot/build/release/RootTestDriver.cmake:227 (message):; 993: error code: 1; 993:; 993:; 1/1 Test #993: tutorial-rcanvas-rbox-py .........***Failed 3.69 sec. 0% tests passed, 1 tests failed out of 1. Label Time Summary:; tutorial = 3.69 sec*proc (1 test). Total Test time (real) = 6.60 sec. The following tests FAILED:; 993 - tutorial-rcanvas-rbox-py (Failed); Errors while running CTest; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9035
https://github.com/root-project/root/pull/9035:2374,Testability,test,test,2374,"mldoc"" ""-P"" ""C:/Users/bellenot/build/release/RootTestDriver.cmake""; 993: Environment variables:; 993: ROOT_HIST=0; 993: Test timeout computed to be: 1500; 993: input_line_35:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RCanvas>*)obj)->operator-><ROOT::Experimental::RCanvas, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: input_line_39:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RBox>*)obj)->operator-><ROOT::Experimental::RBox, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: Traceback (most recent call last):; 993: File ""C:\Users\bellenot\git\master\tutorials\launcher.py"", line 34, in <module>; 993: spec.loader.exec_module(module); 993: File ""<frozen importlib._bootstrap_external>"", line 850, in exec_module; 993: File ""<frozen importlib._bootstrap>"", line 228, in _call_with_frames_removed; 993: File ""C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py"", line 24, in <module>; 993: box1.border.color = RColor.kBlue; 993: AttributeError: <class cppyy.gbl.ROOT.Experimental.RColor at 0x12092B98> has no attribute 'kBlue'. Full details:; 993: attribute access requires an instance; 993: 'ROOT::Experimental::RColor::kBlue' is not a known C++ class; 993: 'kBlue' is not a known C++ template; 993: 'kBlue' is not a known C++ enum; 993: CMake Error at C:/Users/bellenot/build/release/RootTestDriver.cmake:227 (message):; 993: error code: 1; 993:; 993:; 1/1 Test #993: tutorial-rcanvas-rbox-py .........***Failed 3.69 sec. 0% tests passed, 1 tests failed out of 1. Label Time Summary:; tutorial = 3.69 sec*proc (1 test). Total Test time (real) = 6.60 sec. The following tests FAILED:; 993 - tutorial-rcanvas-rbox-py (Failed); Errors while running CTest; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9035
https://github.com/root-project/root/pull/9035:2387,Testability,Test,Test,2387,"mldoc"" ""-P"" ""C:/Users/bellenot/build/release/RootTestDriver.cmake""; 993: Environment variables:; 993: ROOT_HIST=0; 993: Test timeout computed to be: 1500; 993: input_line_35:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RCanvas>*)obj)->operator-><ROOT::Experimental::RCanvas, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: input_line_39:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RBox>*)obj)->operator-><ROOT::Experimental::RBox, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: Traceback (most recent call last):; 993: File ""C:\Users\bellenot\git\master\tutorials\launcher.py"", line 34, in <module>; 993: spec.loader.exec_module(module); 993: File ""<frozen importlib._bootstrap_external>"", line 850, in exec_module; 993: File ""<frozen importlib._bootstrap>"", line 228, in _call_with_frames_removed; 993: File ""C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py"", line 24, in <module>; 993: box1.border.color = RColor.kBlue; 993: AttributeError: <class cppyy.gbl.ROOT.Experimental.RColor at 0x12092B98> has no attribute 'kBlue'. Full details:; 993: attribute access requires an instance; 993: 'ROOT::Experimental::RColor::kBlue' is not a known C++ class; 993: 'kBlue' is not a known C++ template; 993: 'kBlue' is not a known C++ enum; 993: CMake Error at C:/Users/bellenot/build/release/RootTestDriver.cmake:227 (message):; 993: error code: 1; 993:; 993:; 1/1 Test #993: tutorial-rcanvas-rbox-py .........***Failed 3.69 sec. 0% tests passed, 1 tests failed out of 1. Label Time Summary:; tutorial = 3.69 sec*proc (1 test). Total Test time (real) = 6.60 sec. The following tests FAILED:; 993 - tutorial-rcanvas-rbox-py (Failed); Errors while running CTest; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9035
https://github.com/root-project/root/pull/9035:2430,Testability,test,tests,2430,"mldoc"" ""-P"" ""C:/Users/bellenot/build/release/RootTestDriver.cmake""; 993: Environment variables:; 993: ROOT_HIST=0; 993: Test timeout computed to be: 1500; 993: input_line_35:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RCanvas>*)obj)->operator-><ROOT::Experimental::RCanvas, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: input_line_39:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RBox>*)obj)->operator-><ROOT::Experimental::RBox, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: Traceback (most recent call last):; 993: File ""C:\Users\bellenot\git\master\tutorials\launcher.py"", line 34, in <module>; 993: spec.loader.exec_module(module); 993: File ""<frozen importlib._bootstrap_external>"", line 850, in exec_module; 993: File ""<frozen importlib._bootstrap>"", line 228, in _call_with_frames_removed; 993: File ""C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py"", line 24, in <module>; 993: box1.border.color = RColor.kBlue; 993: AttributeError: <class cppyy.gbl.ROOT.Experimental.RColor at 0x12092B98> has no attribute 'kBlue'. Full details:; 993: attribute access requires an instance; 993: 'ROOT::Experimental::RColor::kBlue' is not a known C++ class; 993: 'kBlue' is not a known C++ template; 993: 'kBlue' is not a known C++ enum; 993: CMake Error at C:/Users/bellenot/build/release/RootTestDriver.cmake:227 (message):; 993: error code: 1; 993:; 993:; 1/1 Test #993: tutorial-rcanvas-rbox-py .........***Failed 3.69 sec. 0% tests passed, 1 tests failed out of 1. Label Time Summary:; tutorial = 3.69 sec*proc (1 test). Total Test time (real) = 6.60 sec. The following tests FAILED:; 993 - tutorial-rcanvas-rbox-py (Failed); Errors while running CTest; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9035
https://github.com/root-project/root/issues/9036:427,Availability,Error,Error-Unknown,427,"I'm trying to build root (v6.24.06) with nvc++ from NVIDIA's nvhpc project (ver 21.9), as I get runtime segfaults when I build a project with nvc++ and link it against root built with gcc 9.3.0. However, building root fails during cmake (3.21.3) with; ```; CMake Warning at cmake/modules/CheckCompiler.cmake:12 (message):; Unsupported compiler: NVHPC.; Call Stack (most recent call first):; CMakeLists.txt:130 (include). nvc++-Error-Unknown switch: -; CMake Error at cmake/modules/CheckCompiler.cmake:129 (if):; if given arguments:. ""STRGREATER"" ""201703L"". Unknown arguments specified; Call Stack (most recent call first):; CMakeLists.txt:130 (include); ```. so it looks like nvc++ doesn't know about the `__cplusplus` macro. If I hack around this, cmake finishes, but then the compilation dies with ; ```; [ 27%] Building CXX object interpreter/llvm/src/lib/Support/CMakeFiles/LLVMSupport.dir/GraphWriter.cpp.o; ""/bld4/atlas/root/src_6.24/interpreter/llvm/src/lib/Support/ErrorHandling.cpp"", line 116: error: the global scope has no ""write""; ssize_t written = ::write(2, MessageStr.data(), MessageStr.size());; ^; ```; and; ```; NVC++-F-0000-Internal compiler error. get_call_sptr(): indirect call not via LDA/ACON 154 (/bld4/atlas/root/src_6.24/interpreter/llvm/src/lib/DebugInfo/DWARF/DWARFContext.cpp: 193); NVC++/x86-64 Linux 21.9-0: compilation aborted; make[2]: *** [interpreter/llvm/src/lib/DebugInfo/DWARF/CMakeFiles/LLVMDebugInfoDWARF.dir/DWARFContext.cpp.o] Error 2; make[2]: *** Waiting for unfinished jobs....; [ 52%] Built target obj.clang-tblgen; make[1]: *** [interpreter/llvm/src/lib/DebugInfo/DWARF/CMakeFiles/LLVMDebugInfoDWARF.dir/all] Error 2; CMake Error at /bld4/atlas/root/bld.v6-24-06_nvhpc_c17/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):; Command failed: 2. 'make' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/opt/nvidia/hpc_sdk/Linux_x86_64/21.9/compilers/bin/nvc++' 'CONLY=/opt/nvidia/hpc_sdk/Linux_x86_64/21.9/compilers/bin/nvc' 'LDFLAGS='; ```. Has anyone tr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9036
https://github.com/root-project/root/issues/9036:458,Availability,Error,Error,458,"I'm trying to build root (v6.24.06) with nvc++ from NVIDIA's nvhpc project (ver 21.9), as I get runtime segfaults when I build a project with nvc++ and link it against root built with gcc 9.3.0. However, building root fails during cmake (3.21.3) with; ```; CMake Warning at cmake/modules/CheckCompiler.cmake:12 (message):; Unsupported compiler: NVHPC.; Call Stack (most recent call first):; CMakeLists.txt:130 (include). nvc++-Error-Unknown switch: -; CMake Error at cmake/modules/CheckCompiler.cmake:129 (if):; if given arguments:. ""STRGREATER"" ""201703L"". Unknown arguments specified; Call Stack (most recent call first):; CMakeLists.txt:130 (include); ```. so it looks like nvc++ doesn't know about the `__cplusplus` macro. If I hack around this, cmake finishes, but then the compilation dies with ; ```; [ 27%] Building CXX object interpreter/llvm/src/lib/Support/CMakeFiles/LLVMSupport.dir/GraphWriter.cpp.o; ""/bld4/atlas/root/src_6.24/interpreter/llvm/src/lib/Support/ErrorHandling.cpp"", line 116: error: the global scope has no ""write""; ssize_t written = ::write(2, MessageStr.data(), MessageStr.size());; ^; ```; and; ```; NVC++-F-0000-Internal compiler error. get_call_sptr(): indirect call not via LDA/ACON 154 (/bld4/atlas/root/src_6.24/interpreter/llvm/src/lib/DebugInfo/DWARF/DWARFContext.cpp: 193); NVC++/x86-64 Linux 21.9-0: compilation aborted; make[2]: *** [interpreter/llvm/src/lib/DebugInfo/DWARF/CMakeFiles/LLVMDebugInfoDWARF.dir/DWARFContext.cpp.o] Error 2; make[2]: *** Waiting for unfinished jobs....; [ 52%] Built target obj.clang-tblgen; make[1]: *** [interpreter/llvm/src/lib/DebugInfo/DWARF/CMakeFiles/LLVMDebugInfoDWARF.dir/all] Error 2; CMake Error at /bld4/atlas/root/bld.v6-24-06_nvhpc_c17/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):; Command failed: 2. 'make' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/opt/nvidia/hpc_sdk/Linux_x86_64/21.9/compilers/bin/nvc++' 'CONLY=/opt/nvidia/hpc_sdk/Linux_x86_64/21.9/compilers/bin/nvc' 'LDFLAGS='; ```. Has anyone tr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9036
https://github.com/root-project/root/issues/9036:973,Availability,Error,ErrorHandling,973,"I'm trying to build root (v6.24.06) with nvc++ from NVIDIA's nvhpc project (ver 21.9), as I get runtime segfaults when I build a project with nvc++ and link it against root built with gcc 9.3.0. However, building root fails during cmake (3.21.3) with; ```; CMake Warning at cmake/modules/CheckCompiler.cmake:12 (message):; Unsupported compiler: NVHPC.; Call Stack (most recent call first):; CMakeLists.txt:130 (include). nvc++-Error-Unknown switch: -; CMake Error at cmake/modules/CheckCompiler.cmake:129 (if):; if given arguments:. ""STRGREATER"" ""201703L"". Unknown arguments specified; Call Stack (most recent call first):; CMakeLists.txt:130 (include); ```. so it looks like nvc++ doesn't know about the `__cplusplus` macro. If I hack around this, cmake finishes, but then the compilation dies with ; ```; [ 27%] Building CXX object interpreter/llvm/src/lib/Support/CMakeFiles/LLVMSupport.dir/GraphWriter.cpp.o; ""/bld4/atlas/root/src_6.24/interpreter/llvm/src/lib/Support/ErrorHandling.cpp"", line 116: error: the global scope has no ""write""; ssize_t written = ::write(2, MessageStr.data(), MessageStr.size());; ^; ```; and; ```; NVC++-F-0000-Internal compiler error. get_call_sptr(): indirect call not via LDA/ACON 154 (/bld4/atlas/root/src_6.24/interpreter/llvm/src/lib/DebugInfo/DWARF/DWARFContext.cpp: 193); NVC++/x86-64 Linux 21.9-0: compilation aborted; make[2]: *** [interpreter/llvm/src/lib/DebugInfo/DWARF/CMakeFiles/LLVMDebugInfoDWARF.dir/DWARFContext.cpp.o] Error 2; make[2]: *** Waiting for unfinished jobs....; [ 52%] Built target obj.clang-tblgen; make[1]: *** [interpreter/llvm/src/lib/DebugInfo/DWARF/CMakeFiles/LLVMDebugInfoDWARF.dir/all] Error 2; CMake Error at /bld4/atlas/root/bld.v6-24-06_nvhpc_c17/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):; Command failed: 2. 'make' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/opt/nvidia/hpc_sdk/Linux_x86_64/21.9/compilers/bin/nvc++' 'CONLY=/opt/nvidia/hpc_sdk/Linux_x86_64/21.9/compilers/bin/nvc' 'LDFLAGS='; ```. Has anyone tr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9036
https://github.com/root-project/root/issues/9036:1003,Availability,error,error,1003," with nvc++ from NVIDIA's nvhpc project (ver 21.9), as I get runtime segfaults when I build a project with nvc++ and link it against root built with gcc 9.3.0. However, building root fails during cmake (3.21.3) with; ```; CMake Warning at cmake/modules/CheckCompiler.cmake:12 (message):; Unsupported compiler: NVHPC.; Call Stack (most recent call first):; CMakeLists.txt:130 (include). nvc++-Error-Unknown switch: -; CMake Error at cmake/modules/CheckCompiler.cmake:129 (if):; if given arguments:. ""STRGREATER"" ""201703L"". Unknown arguments specified; Call Stack (most recent call first):; CMakeLists.txt:130 (include); ```. so it looks like nvc++ doesn't know about the `__cplusplus` macro. If I hack around this, cmake finishes, but then the compilation dies with ; ```; [ 27%] Building CXX object interpreter/llvm/src/lib/Support/CMakeFiles/LLVMSupport.dir/GraphWriter.cpp.o; ""/bld4/atlas/root/src_6.24/interpreter/llvm/src/lib/Support/ErrorHandling.cpp"", line 116: error: the global scope has no ""write""; ssize_t written = ::write(2, MessageStr.data(), MessageStr.size());; ^; ```; and; ```; NVC++-F-0000-Internal compiler error. get_call_sptr(): indirect call not via LDA/ACON 154 (/bld4/atlas/root/src_6.24/interpreter/llvm/src/lib/DebugInfo/DWARF/DWARFContext.cpp: 193); NVC++/x86-64 Linux 21.9-0: compilation aborted; make[2]: *** [interpreter/llvm/src/lib/DebugInfo/DWARF/CMakeFiles/LLVMDebugInfoDWARF.dir/DWARFContext.cpp.o] Error 2; make[2]: *** Waiting for unfinished jobs....; [ 52%] Built target obj.clang-tblgen; make[1]: *** [interpreter/llvm/src/lib/DebugInfo/DWARF/CMakeFiles/LLVMDebugInfoDWARF.dir/all] Error 2; CMake Error at /bld4/atlas/root/bld.v6-24-06_nvhpc_c17/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):; Command failed: 2. 'make' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/opt/nvidia/hpc_sdk/Linux_x86_64/21.9/compilers/bin/nvc++' 'CONLY=/opt/nvidia/hpc_sdk/Linux_x86_64/21.9/compilers/bin/nvc' 'LDFLAGS='; ```. Has anyone tried/succeeded building root with n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9036
https://github.com/root-project/root/issues/9036:1161,Availability,error,error,1161,"), as I get runtime segfaults when I build a project with nvc++ and link it against root built with gcc 9.3.0. However, building root fails during cmake (3.21.3) with; ```; CMake Warning at cmake/modules/CheckCompiler.cmake:12 (message):; Unsupported compiler: NVHPC.; Call Stack (most recent call first):; CMakeLists.txt:130 (include). nvc++-Error-Unknown switch: -; CMake Error at cmake/modules/CheckCompiler.cmake:129 (if):; if given arguments:. ""STRGREATER"" ""201703L"". Unknown arguments specified; Call Stack (most recent call first):; CMakeLists.txt:130 (include); ```. so it looks like nvc++ doesn't know about the `__cplusplus` macro. If I hack around this, cmake finishes, but then the compilation dies with ; ```; [ 27%] Building CXX object interpreter/llvm/src/lib/Support/CMakeFiles/LLVMSupport.dir/GraphWriter.cpp.o; ""/bld4/atlas/root/src_6.24/interpreter/llvm/src/lib/Support/ErrorHandling.cpp"", line 116: error: the global scope has no ""write""; ssize_t written = ::write(2, MessageStr.data(), MessageStr.size());; ^; ```; and; ```; NVC++-F-0000-Internal compiler error. get_call_sptr(): indirect call not via LDA/ACON 154 (/bld4/atlas/root/src_6.24/interpreter/llvm/src/lib/DebugInfo/DWARF/DWARFContext.cpp: 193); NVC++/x86-64 Linux 21.9-0: compilation aborted; make[2]: *** [interpreter/llvm/src/lib/DebugInfo/DWARF/CMakeFiles/LLVMDebugInfoDWARF.dir/DWARFContext.cpp.o] Error 2; make[2]: *** Waiting for unfinished jobs....; [ 52%] Built target obj.clang-tblgen; make[1]: *** [interpreter/llvm/src/lib/DebugInfo/DWARF/CMakeFiles/LLVMDebugInfoDWARF.dir/all] Error 2; CMake Error at /bld4/atlas/root/bld.v6-24-06_nvhpc_c17/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):; Command failed: 2. 'make' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/opt/nvidia/hpc_sdk/Linux_x86_64/21.9/compilers/bin/nvc++' 'CONLY=/opt/nvidia/hpc_sdk/Linux_x86_64/21.9/compilers/bin/nvc' 'LDFLAGS='; ```. Has anyone tried/succeeded building root with nvc++?. FWIW, nvc++ was configured with gcc 9.3.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9036
https://github.com/root-project/root/issues/9036:1469,Availability,Error,Error,1469,"), as I get runtime segfaults when I build a project with nvc++ and link it against root built with gcc 9.3.0. However, building root fails during cmake (3.21.3) with; ```; CMake Warning at cmake/modules/CheckCompiler.cmake:12 (message):; Unsupported compiler: NVHPC.; Call Stack (most recent call first):; CMakeLists.txt:130 (include). nvc++-Error-Unknown switch: -; CMake Error at cmake/modules/CheckCompiler.cmake:129 (if):; if given arguments:. ""STRGREATER"" ""201703L"". Unknown arguments specified; Call Stack (most recent call first):; CMakeLists.txt:130 (include); ```. so it looks like nvc++ doesn't know about the `__cplusplus` macro. If I hack around this, cmake finishes, but then the compilation dies with ; ```; [ 27%] Building CXX object interpreter/llvm/src/lib/Support/CMakeFiles/LLVMSupport.dir/GraphWriter.cpp.o; ""/bld4/atlas/root/src_6.24/interpreter/llvm/src/lib/Support/ErrorHandling.cpp"", line 116: error: the global scope has no ""write""; ssize_t written = ::write(2, MessageStr.data(), MessageStr.size());; ^; ```; and; ```; NVC++-F-0000-Internal compiler error. get_call_sptr(): indirect call not via LDA/ACON 154 (/bld4/atlas/root/src_6.24/interpreter/llvm/src/lib/DebugInfo/DWARF/DWARFContext.cpp: 193); NVC++/x86-64 Linux 21.9-0: compilation aborted; make[2]: *** [interpreter/llvm/src/lib/DebugInfo/DWARF/CMakeFiles/LLVMDebugInfoDWARF.dir/DWARFContext.cpp.o] Error 2; make[2]: *** Waiting for unfinished jobs....; [ 52%] Built target obj.clang-tblgen; make[1]: *** [interpreter/llvm/src/lib/DebugInfo/DWARF/CMakeFiles/LLVMDebugInfoDWARF.dir/all] Error 2; CMake Error at /bld4/atlas/root/bld.v6-24-06_nvhpc_c17/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):; Command failed: 2. 'make' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/opt/nvidia/hpc_sdk/Linux_x86_64/21.9/compilers/bin/nvc++' 'CONLY=/opt/nvidia/hpc_sdk/Linux_x86_64/21.9/compilers/bin/nvc' 'LDFLAGS='; ```. Has anyone tried/succeeded building root with nvc++?. FWIW, nvc++ was configured with gcc 9.3.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9036
https://github.com/root-project/root/issues/9036:1656,Availability,Error,Error,1656,"), as I get runtime segfaults when I build a project with nvc++ and link it against root built with gcc 9.3.0. However, building root fails during cmake (3.21.3) with; ```; CMake Warning at cmake/modules/CheckCompiler.cmake:12 (message):; Unsupported compiler: NVHPC.; Call Stack (most recent call first):; CMakeLists.txt:130 (include). nvc++-Error-Unknown switch: -; CMake Error at cmake/modules/CheckCompiler.cmake:129 (if):; if given arguments:. ""STRGREATER"" ""201703L"". Unknown arguments specified; Call Stack (most recent call first):; CMakeLists.txt:130 (include); ```. so it looks like nvc++ doesn't know about the `__cplusplus` macro. If I hack around this, cmake finishes, but then the compilation dies with ; ```; [ 27%] Building CXX object interpreter/llvm/src/lib/Support/CMakeFiles/LLVMSupport.dir/GraphWriter.cpp.o; ""/bld4/atlas/root/src_6.24/interpreter/llvm/src/lib/Support/ErrorHandling.cpp"", line 116: error: the global scope has no ""write""; ssize_t written = ::write(2, MessageStr.data(), MessageStr.size());; ^; ```; and; ```; NVC++-F-0000-Internal compiler error. get_call_sptr(): indirect call not via LDA/ACON 154 (/bld4/atlas/root/src_6.24/interpreter/llvm/src/lib/DebugInfo/DWARF/DWARFContext.cpp: 193); NVC++/x86-64 Linux 21.9-0: compilation aborted; make[2]: *** [interpreter/llvm/src/lib/DebugInfo/DWARF/CMakeFiles/LLVMDebugInfoDWARF.dir/DWARFContext.cpp.o] Error 2; make[2]: *** Waiting for unfinished jobs....; [ 52%] Built target obj.clang-tblgen; make[1]: *** [interpreter/llvm/src/lib/DebugInfo/DWARF/CMakeFiles/LLVMDebugInfoDWARF.dir/all] Error 2; CMake Error at /bld4/atlas/root/bld.v6-24-06_nvhpc_c17/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):; Command failed: 2. 'make' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/opt/nvidia/hpc_sdk/Linux_x86_64/21.9/compilers/bin/nvc++' 'CONLY=/opt/nvidia/hpc_sdk/Linux_x86_64/21.9/compilers/bin/nvc' 'LDFLAGS='; ```. Has anyone tried/succeeded building root with nvc++?. FWIW, nvc++ was configured with gcc 9.3.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9036
https://github.com/root-project/root/issues/9036:1671,Availability,Error,Error,1671,"), as I get runtime segfaults when I build a project with nvc++ and link it against root built with gcc 9.3.0. However, building root fails during cmake (3.21.3) with; ```; CMake Warning at cmake/modules/CheckCompiler.cmake:12 (message):; Unsupported compiler: NVHPC.; Call Stack (most recent call first):; CMakeLists.txt:130 (include). nvc++-Error-Unknown switch: -; CMake Error at cmake/modules/CheckCompiler.cmake:129 (if):; if given arguments:. ""STRGREATER"" ""201703L"". Unknown arguments specified; Call Stack (most recent call first):; CMakeLists.txt:130 (include); ```. so it looks like nvc++ doesn't know about the `__cplusplus` macro. If I hack around this, cmake finishes, but then the compilation dies with ; ```; [ 27%] Building CXX object interpreter/llvm/src/lib/Support/CMakeFiles/LLVMSupport.dir/GraphWriter.cpp.o; ""/bld4/atlas/root/src_6.24/interpreter/llvm/src/lib/Support/ErrorHandling.cpp"", line 116: error: the global scope has no ""write""; ssize_t written = ::write(2, MessageStr.data(), MessageStr.size());; ^; ```; and; ```; NVC++-F-0000-Internal compiler error. get_call_sptr(): indirect call not via LDA/ACON 154 (/bld4/atlas/root/src_6.24/interpreter/llvm/src/lib/DebugInfo/DWARF/DWARFContext.cpp: 193); NVC++/x86-64 Linux 21.9-0: compilation aborted; make[2]: *** [interpreter/llvm/src/lib/DebugInfo/DWARF/CMakeFiles/LLVMDebugInfoDWARF.dir/DWARFContext.cpp.o] Error 2; make[2]: *** Waiting for unfinished jobs....; [ 52%] Built target obj.clang-tblgen; make[1]: *** [interpreter/llvm/src/lib/DebugInfo/DWARF/CMakeFiles/LLVMDebugInfoDWARF.dir/all] Error 2; CMake Error at /bld4/atlas/root/bld.v6-24-06_nvhpc_c17/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):; Command failed: 2. 'make' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/opt/nvidia/hpc_sdk/Linux_x86_64/21.9/compilers/bin/nvc++' 'CONLY=/opt/nvidia/hpc_sdk/Linux_x86_64/21.9/compilers/bin/nvc' 'LDFLAGS='; ```. Has anyone tried/succeeded building root with nvc++?. FWIW, nvc++ was configured with gcc 9.3.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9036
https://github.com/root-project/root/issues/9036:1755,Deployability,Release,Release,1755,"), as I get runtime segfaults when I build a project with nvc++ and link it against root built with gcc 9.3.0. However, building root fails during cmake (3.21.3) with; ```; CMake Warning at cmake/modules/CheckCompiler.cmake:12 (message):; Unsupported compiler: NVHPC.; Call Stack (most recent call first):; CMakeLists.txt:130 (include). nvc++-Error-Unknown switch: -; CMake Error at cmake/modules/CheckCompiler.cmake:129 (if):; if given arguments:. ""STRGREATER"" ""201703L"". Unknown arguments specified; Call Stack (most recent call first):; CMakeLists.txt:130 (include); ```. so it looks like nvc++ doesn't know about the `__cplusplus` macro. If I hack around this, cmake finishes, but then the compilation dies with ; ```; [ 27%] Building CXX object interpreter/llvm/src/lib/Support/CMakeFiles/LLVMSupport.dir/GraphWriter.cpp.o; ""/bld4/atlas/root/src_6.24/interpreter/llvm/src/lib/Support/ErrorHandling.cpp"", line 116: error: the global scope has no ""write""; ssize_t written = ::write(2, MessageStr.data(), MessageStr.size());; ^; ```; and; ```; NVC++-F-0000-Internal compiler error. get_call_sptr(): indirect call not via LDA/ACON 154 (/bld4/atlas/root/src_6.24/interpreter/llvm/src/lib/DebugInfo/DWARF/DWARFContext.cpp: 193); NVC++/x86-64 Linux 21.9-0: compilation aborted; make[2]: *** [interpreter/llvm/src/lib/DebugInfo/DWARF/CMakeFiles/LLVMDebugInfoDWARF.dir/DWARFContext.cpp.o] Error 2; make[2]: *** Waiting for unfinished jobs....; [ 52%] Built target obj.clang-tblgen; make[1]: *** [interpreter/llvm/src/lib/DebugInfo/DWARF/CMakeFiles/LLVMDebugInfoDWARF.dir/all] Error 2; CMake Error at /bld4/atlas/root/bld.v6-24-06_nvhpc_c17/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):; Command failed: 2. 'make' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/opt/nvidia/hpc_sdk/Linux_x86_64/21.9/compilers/bin/nvc++' 'CONLY=/opt/nvidia/hpc_sdk/Linux_x86_64/21.9/compilers/bin/nvc' 'LDFLAGS='; ```. Has anyone tried/succeeded building root with nvc++?. FWIW, nvc++ was configured with gcc 9.3.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9036
https://github.com/root-project/root/issues/9036:312,Integrability,message,message,312,"I'm trying to build root (v6.24.06) with nvc++ from NVIDIA's nvhpc project (ver 21.9), as I get runtime segfaults when I build a project with nvc++ and link it against root built with gcc 9.3.0. However, building root fails during cmake (3.21.3) with; ```; CMake Warning at cmake/modules/CheckCompiler.cmake:12 (message):; Unsupported compiler: NVHPC.; Call Stack (most recent call first):; CMakeLists.txt:130 (include). nvc++-Error-Unknown switch: -; CMake Error at cmake/modules/CheckCompiler.cmake:129 (if):; if given arguments:. ""STRGREATER"" ""201703L"". Unknown arguments specified; Call Stack (most recent call first):; CMakeLists.txt:130 (include); ```. so it looks like nvc++ doesn't know about the `__cplusplus` macro. If I hack around this, cmake finishes, but then the compilation dies with ; ```; [ 27%] Building CXX object interpreter/llvm/src/lib/Support/CMakeFiles/LLVMSupport.dir/GraphWriter.cpp.o; ""/bld4/atlas/root/src_6.24/interpreter/llvm/src/lib/Support/ErrorHandling.cpp"", line 116: error: the global scope has no ""write""; ssize_t written = ::write(2, MessageStr.data(), MessageStr.size());; ^; ```; and; ```; NVC++-F-0000-Internal compiler error. get_call_sptr(): indirect call not via LDA/ACON 154 (/bld4/atlas/root/src_6.24/interpreter/llvm/src/lib/DebugInfo/DWARF/DWARFContext.cpp: 193); NVC++/x86-64 Linux 21.9-0: compilation aborted; make[2]: *** [interpreter/llvm/src/lib/DebugInfo/DWARF/CMakeFiles/LLVMDebugInfoDWARF.dir/DWARFContext.cpp.o] Error 2; make[2]: *** Waiting for unfinished jobs....; [ 52%] Built target obj.clang-tblgen; make[1]: *** [interpreter/llvm/src/lib/DebugInfo/DWARF/CMakeFiles/LLVMDebugInfoDWARF.dir/all] Error 2; CMake Error at /bld4/atlas/root/bld.v6-24-06_nvhpc_c17/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):; Command failed: 2. 'make' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/opt/nvidia/hpc_sdk/Linux_x86_64/21.9/compilers/bin/nvc++' 'CONLY=/opt/nvidia/hpc_sdk/Linux_x86_64/21.9/compilers/bin/nvc' 'LDFLAGS='; ```. Has anyone tr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9036
https://github.com/root-project/root/issues/9036:1072,Integrability,Message,MessageStr,1072," with nvc++ from NVIDIA's nvhpc project (ver 21.9), as I get runtime segfaults when I build a project with nvc++ and link it against root built with gcc 9.3.0. However, building root fails during cmake (3.21.3) with; ```; CMake Warning at cmake/modules/CheckCompiler.cmake:12 (message):; Unsupported compiler: NVHPC.; Call Stack (most recent call first):; CMakeLists.txt:130 (include). nvc++-Error-Unknown switch: -; CMake Error at cmake/modules/CheckCompiler.cmake:129 (if):; if given arguments:. ""STRGREATER"" ""201703L"". Unknown arguments specified; Call Stack (most recent call first):; CMakeLists.txt:130 (include); ```. so it looks like nvc++ doesn't know about the `__cplusplus` macro. If I hack around this, cmake finishes, but then the compilation dies with ; ```; [ 27%] Building CXX object interpreter/llvm/src/lib/Support/CMakeFiles/LLVMSupport.dir/GraphWriter.cpp.o; ""/bld4/atlas/root/src_6.24/interpreter/llvm/src/lib/Support/ErrorHandling.cpp"", line 116: error: the global scope has no ""write""; ssize_t written = ::write(2, MessageStr.data(), MessageStr.size());; ^; ```; and; ```; NVC++-F-0000-Internal compiler error. get_call_sptr(): indirect call not via LDA/ACON 154 (/bld4/atlas/root/src_6.24/interpreter/llvm/src/lib/DebugInfo/DWARF/DWARFContext.cpp: 193); NVC++/x86-64 Linux 21.9-0: compilation aborted; make[2]: *** [interpreter/llvm/src/lib/DebugInfo/DWARF/CMakeFiles/LLVMDebugInfoDWARF.dir/DWARFContext.cpp.o] Error 2; make[2]: *** Waiting for unfinished jobs....; [ 52%] Built target obj.clang-tblgen; make[1]: *** [interpreter/llvm/src/lib/DebugInfo/DWARF/CMakeFiles/LLVMDebugInfoDWARF.dir/all] Error 2; CMake Error at /bld4/atlas/root/bld.v6-24-06_nvhpc_c17/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):; Command failed: 2. 'make' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/opt/nvidia/hpc_sdk/Linux_x86_64/21.9/compilers/bin/nvc++' 'CONLY=/opt/nvidia/hpc_sdk/Linux_x86_64/21.9/compilers/bin/nvc' 'LDFLAGS='; ```. Has anyone tried/succeeded building root with n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9036
https://github.com/root-project/root/issues/9036:1091,Integrability,Message,MessageStr,1091,"), as I get runtime segfaults when I build a project with nvc++ and link it against root built with gcc 9.3.0. However, building root fails during cmake (3.21.3) with; ```; CMake Warning at cmake/modules/CheckCompiler.cmake:12 (message):; Unsupported compiler: NVHPC.; Call Stack (most recent call first):; CMakeLists.txt:130 (include). nvc++-Error-Unknown switch: -; CMake Error at cmake/modules/CheckCompiler.cmake:129 (if):; if given arguments:. ""STRGREATER"" ""201703L"". Unknown arguments specified; Call Stack (most recent call first):; CMakeLists.txt:130 (include); ```. so it looks like nvc++ doesn't know about the `__cplusplus` macro. If I hack around this, cmake finishes, but then the compilation dies with ; ```; [ 27%] Building CXX object interpreter/llvm/src/lib/Support/CMakeFiles/LLVMSupport.dir/GraphWriter.cpp.o; ""/bld4/atlas/root/src_6.24/interpreter/llvm/src/lib/Support/ErrorHandling.cpp"", line 116: error: the global scope has no ""write""; ssize_t written = ::write(2, MessageStr.data(), MessageStr.size());; ^; ```; and; ```; NVC++-F-0000-Internal compiler error. get_call_sptr(): indirect call not via LDA/ACON 154 (/bld4/atlas/root/src_6.24/interpreter/llvm/src/lib/DebugInfo/DWARF/DWARFContext.cpp: 193); NVC++/x86-64 Linux 21.9-0: compilation aborted; make[2]: *** [interpreter/llvm/src/lib/DebugInfo/DWARF/CMakeFiles/LLVMDebugInfoDWARF.dir/DWARFContext.cpp.o] Error 2; make[2]: *** Waiting for unfinished jobs....; [ 52%] Built target obj.clang-tblgen; make[1]: *** [interpreter/llvm/src/lib/DebugInfo/DWARF/CMakeFiles/LLVMDebugInfoDWARF.dir/all] Error 2; CMake Error at /bld4/atlas/root/bld.v6-24-06_nvhpc_c17/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):; Command failed: 2. 'make' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/opt/nvidia/hpc_sdk/Linux_x86_64/21.9/compilers/bin/nvc++' 'CONLY=/opt/nvidia/hpc_sdk/Linux_x86_64/21.9/compilers/bin/nvc' 'LDFLAGS='; ```. Has anyone tried/succeeded building root with nvc++?. FWIW, nvc++ was configured with gcc 9.3.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9036
https://github.com/root-project/root/issues/9036:1773,Integrability,message,message,1773,"), as I get runtime segfaults when I build a project with nvc++ and link it against root built with gcc 9.3.0. However, building root fails during cmake (3.21.3) with; ```; CMake Warning at cmake/modules/CheckCompiler.cmake:12 (message):; Unsupported compiler: NVHPC.; Call Stack (most recent call first):; CMakeLists.txt:130 (include). nvc++-Error-Unknown switch: -; CMake Error at cmake/modules/CheckCompiler.cmake:129 (if):; if given arguments:. ""STRGREATER"" ""201703L"". Unknown arguments specified; Call Stack (most recent call first):; CMakeLists.txt:130 (include); ```. so it looks like nvc++ doesn't know about the `__cplusplus` macro. If I hack around this, cmake finishes, but then the compilation dies with ; ```; [ 27%] Building CXX object interpreter/llvm/src/lib/Support/CMakeFiles/LLVMSupport.dir/GraphWriter.cpp.o; ""/bld4/atlas/root/src_6.24/interpreter/llvm/src/lib/Support/ErrorHandling.cpp"", line 116: error: the global scope has no ""write""; ssize_t written = ::write(2, MessageStr.data(), MessageStr.size());; ^; ```; and; ```; NVC++-F-0000-Internal compiler error. get_call_sptr(): indirect call not via LDA/ACON 154 (/bld4/atlas/root/src_6.24/interpreter/llvm/src/lib/DebugInfo/DWARF/DWARFContext.cpp: 193); NVC++/x86-64 Linux 21.9-0: compilation aborted; make[2]: *** [interpreter/llvm/src/lib/DebugInfo/DWARF/CMakeFiles/LLVMDebugInfoDWARF.dir/DWARFContext.cpp.o] Error 2; make[2]: *** Waiting for unfinished jobs....; [ 52%] Built target obj.clang-tblgen; make[1]: *** [interpreter/llvm/src/lib/DebugInfo/DWARF/CMakeFiles/LLVMDebugInfoDWARF.dir/all] Error 2; CMake Error at /bld4/atlas/root/bld.v6-24-06_nvhpc_c17/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):; Command failed: 2. 'make' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/opt/nvidia/hpc_sdk/Linux_x86_64/21.9/compilers/bin/nvc++' 'CONLY=/opt/nvidia/hpc_sdk/Linux_x86_64/21.9/compilers/bin/nvc' 'LDFLAGS='; ```. Has anyone tried/succeeded building root with nvc++?. FWIW, nvc++ was configured with gcc 9.3.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9036
https://github.com/root-project/root/issues/9036:2058,Modifiability,config,configured,2058,"), as I get runtime segfaults when I build a project with nvc++ and link it against root built with gcc 9.3.0. However, building root fails during cmake (3.21.3) with; ```; CMake Warning at cmake/modules/CheckCompiler.cmake:12 (message):; Unsupported compiler: NVHPC.; Call Stack (most recent call first):; CMakeLists.txt:130 (include). nvc++-Error-Unknown switch: -; CMake Error at cmake/modules/CheckCompiler.cmake:129 (if):; if given arguments:. ""STRGREATER"" ""201703L"". Unknown arguments specified; Call Stack (most recent call first):; CMakeLists.txt:130 (include); ```. so it looks like nvc++ doesn't know about the `__cplusplus` macro. If I hack around this, cmake finishes, but then the compilation dies with ; ```; [ 27%] Building CXX object interpreter/llvm/src/lib/Support/CMakeFiles/LLVMSupport.dir/GraphWriter.cpp.o; ""/bld4/atlas/root/src_6.24/interpreter/llvm/src/lib/Support/ErrorHandling.cpp"", line 116: error: the global scope has no ""write""; ssize_t written = ::write(2, MessageStr.data(), MessageStr.size());; ^; ```; and; ```; NVC++-F-0000-Internal compiler error. get_call_sptr(): indirect call not via LDA/ACON 154 (/bld4/atlas/root/src_6.24/interpreter/llvm/src/lib/DebugInfo/DWARF/DWARFContext.cpp: 193); NVC++/x86-64 Linux 21.9-0: compilation aborted; make[2]: *** [interpreter/llvm/src/lib/DebugInfo/DWARF/CMakeFiles/LLVMDebugInfoDWARF.dir/DWARFContext.cpp.o] Error 2; make[2]: *** Waiting for unfinished jobs....; [ 52%] Built target obj.clang-tblgen; make[1]: *** [interpreter/llvm/src/lib/DebugInfo/DWARF/CMakeFiles/LLVMDebugInfoDWARF.dir/all] Error 2; CMake Error at /bld4/atlas/root/bld.v6-24-06_nvhpc_c17/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):; Command failed: 2. 'make' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/opt/nvidia/hpc_sdk/Linux_x86_64/21.9/compilers/bin/nvc++' 'CONLY=/opt/nvidia/hpc_sdk/Linux_x86_64/21.9/compilers/bin/nvc' 'LDFLAGS='; ```. Has anyone tried/succeeded building root with nvc++?. FWIW, nvc++ was configured with gcc 9.3.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9036
https://github.com/root-project/root/issues/9036:1351,Safety,abort,aborted,1351,"), as I get runtime segfaults when I build a project with nvc++ and link it against root built with gcc 9.3.0. However, building root fails during cmake (3.21.3) with; ```; CMake Warning at cmake/modules/CheckCompiler.cmake:12 (message):; Unsupported compiler: NVHPC.; Call Stack (most recent call first):; CMakeLists.txt:130 (include). nvc++-Error-Unknown switch: -; CMake Error at cmake/modules/CheckCompiler.cmake:129 (if):; if given arguments:. ""STRGREATER"" ""201703L"". Unknown arguments specified; Call Stack (most recent call first):; CMakeLists.txt:130 (include); ```. so it looks like nvc++ doesn't know about the `__cplusplus` macro. If I hack around this, cmake finishes, but then the compilation dies with ; ```; [ 27%] Building CXX object interpreter/llvm/src/lib/Support/CMakeFiles/LLVMSupport.dir/GraphWriter.cpp.o; ""/bld4/atlas/root/src_6.24/interpreter/llvm/src/lib/Support/ErrorHandling.cpp"", line 116: error: the global scope has no ""write""; ssize_t written = ::write(2, MessageStr.data(), MessageStr.size());; ^; ```; and; ```; NVC++-F-0000-Internal compiler error. get_call_sptr(): indirect call not via LDA/ACON 154 (/bld4/atlas/root/src_6.24/interpreter/llvm/src/lib/DebugInfo/DWARF/DWARFContext.cpp: 193); NVC++/x86-64 Linux 21.9-0: compilation aborted; make[2]: *** [interpreter/llvm/src/lib/DebugInfo/DWARF/CMakeFiles/LLVMDebugInfoDWARF.dir/DWARFContext.cpp.o] Error 2; make[2]: *** Waiting for unfinished jobs....; [ 52%] Built target obj.clang-tblgen; make[1]: *** [interpreter/llvm/src/lib/DebugInfo/DWARF/CMakeFiles/LLVMDebugInfoDWARF.dir/all] Error 2; CMake Error at /bld4/atlas/root/bld.v6-24-06_nvhpc_c17/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):; Command failed: 2. 'make' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/opt/nvidia/hpc_sdk/Linux_x86_64/21.9/compilers/bin/nvc++' 'CONLY=/opt/nvidia/hpc_sdk/Linux_x86_64/21.9/compilers/bin/nvc' 'LDFLAGS='; ```. Has anyone tried/succeeded building root with nvc++?. FWIW, nvc++ was configured with gcc 9.3.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9036
https://github.com/root-project/root/pull/9040:14,Deployability,release,release,14,`+` test; `+` release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9040
https://github.com/root-project/root/pull/9040:4,Testability,test,test,4,`+` test; `+` release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9040
https://github.com/root-project/root/pull/9041:13,Testability,test,test,13,It makes the test code more readable.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9041
https://github.com/root-project/root/pull/9046:13,Availability,failure,failures,13,"It fixes the failures in projectroot.math.vecops.test.gtest_math_vecops_test_vecops_rvec that are cropping up all over the place. Sorry, did not realize that the PR that introduced the change was not tested by jenkins because the title said `[N-F-C]` :disappointed:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9046
https://github.com/root-project/root/pull/9046:49,Testability,test,test,49,"It fixes the failures in projectroot.math.vecops.test.gtest_math_vecops_test_vecops_rvec that are cropping up all over the place. Sorry, did not realize that the PR that introduced the change was not tested by jenkins because the title said `[N-F-C]` :disappointed:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9046
https://github.com/root-project/root/pull/9046:200,Testability,test,tested,200,"It fixes the failures in projectroot.math.vecops.test.gtest_math_vecops_test_vecops_rvec that are cropping up all over the place. Sorry, did not realize that the PR that introduced the change was not tested by jenkins because the title said `[N-F-C]` :disappointed:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9046
https://github.com/root-project/root/pull/9047:32,Availability,failure,failures,32,"This might or might not fix the failures at https://lcgapp-services.cern.ch/root-jenkins/job/root-incremental-master/LABEL=ROOT-ubuntu1804-clangHEAD,SPEC=noimt/10051/testReport/junit/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_samplecallback/ , but it's anyway an improvement",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9047
https://github.com/root-project/root/pull/9047:166,Testability,test,testReport,166,"This might or might not fix the failures at https://lcgapp-services.cern.ch/root-jenkins/job/root-incremental-master/LABEL=ROOT-ubuntu1804-clangHEAD,SPEC=noimt/10051/testReport/junit/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_samplecallback/ , but it's anyway an improvement",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9047
https://github.com/root-project/root/pull/9047:210,Testability,test,test,210,"This might or might not fix the failures at https://lcgapp-services.cern.ch/root-jenkins/job/root-incremental-master/LABEL=ROOT-ubuntu1804-clangHEAD,SPEC=noimt/10051/testReport/junit/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_samplecallback/ , but it's anyway an improvement",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9047
https://github.com/root-project/root/pull/9054:179,Testability,test,tested,179,"This pull-request fixes a typo in `CustomStructLinkDef.h` that generated a warning during build, i.e.; ```; Warning: Unused class rule: PackedContainer; ```. ## Checklist:; - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9054
https://github.com/root-project/root/pull/9056:5,Deployability,patch,patch,5,This patch should fix root-project/root#7125 and root-project/root#8959,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9056
https://github.com/root-project/root/pull/9059:15,Usability,guid,guide,15,The old users' guide contains valuable information for the geometry package. As it will be removed this PR imports all this documentation into the Reference Guide.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9059
https://github.com/root-project/root/pull/9059:157,Usability,Guid,Guide,157,The old users' guide contains valuable information for the geometry package. As it will be removed this PR imports all this documentation into the Reference Guide.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9059
https://github.com/root-project/root/pull/9060:172,Deployability,release,released,172,"Since the distributed RDataFrame feature is experimental let's give it access to more modern features of the Python language. 3.7 seems a good compromise between maturity (released in October 2018) and features (typing, dataclasses). **NOTE**:; I'm uncertain about whether giving a message at configure time that DistRDF is active in the build process. I have put a simple message for now, could be changed or removed. Let me know your opinions",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9060
https://github.com/root-project/root/pull/9060:282,Integrability,message,message,282,"Since the distributed RDataFrame feature is experimental let's give it access to more modern features of the Python language. 3.7 seems a good compromise between maturity (released in October 2018) and features (typing, dataclasses). **NOTE**:; I'm uncertain about whether giving a message at configure time that DistRDF is active in the build process. I have put a simple message for now, could be changed or removed. Let me know your opinions",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9060
https://github.com/root-project/root/pull/9060:373,Integrability,message,message,373,"Since the distributed RDataFrame feature is experimental let's give it access to more modern features of the Python language. 3.7 seems a good compromise between maturity (released in October 2018) and features (typing, dataclasses). **NOTE**:; I'm uncertain about whether giving a message at configure time that DistRDF is active in the build process. I have put a simple message for now, could be changed or removed. Let me know your opinions",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9060
https://github.com/root-project/root/pull/9060:293,Modifiability,config,configure,293,"Since the distributed RDataFrame feature is experimental let's give it access to more modern features of the Python language. 3.7 seems a good compromise between maturity (released in October 2018) and features (typing, dataclasses). **NOTE**:; I'm uncertain about whether giving a message at configure time that DistRDF is active in the build process. I have put a simple message for now, could be changed or removed. Let me know your opinions",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9060
https://github.com/root-project/root/pull/9060:71,Security,access,access,71,"Since the distributed RDataFrame feature is experimental let's give it access to more modern features of the Python language. 3.7 seems a good compromise between maturity (released in October 2018) and features (typing, dataclasses). **NOTE**:; I'm uncertain about whether giving a message at configure time that DistRDF is active in the build process. I have put a simple message for now, could be changed or removed. Let me know your opinions",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9060
https://github.com/root-project/root/pull/9060:366,Usability,simpl,simple,366,"Since the distributed RDataFrame feature is experimental let's give it access to more modern features of the Python language. 3.7 seems a good compromise between maturity (released in October 2018) and features (typing, dataclasses). **NOTE**:; I'm uncertain about whether giving a message at configure time that DistRDF is active in the build process. I have put a simple message for now, could be changed or removed. Let me know your opinions",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9060
https://github.com/root-project/root/pull/9066:77,Security,validat,validate,77,"I'd like to test that issue #9020 is triggered also on our Fedora34 node, to validate #9065",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9066
https://github.com/root-project/root/pull/9066:12,Testability,test,test,12,"I'd like to test that issue #9020 is triggered also on our Fedora34 node, to validate #9065",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9066
https://github.com/root-project/root/pull/9067:427,Usability,clear,clearing,427,"Should fix the following compilation warnings with `gcc 11` and the current `builtin_tbb`:; ```; In file included from ginclude/tbb/tbb.h:48,; from /home/vpadulan/Programs/rootproject/root/core/imt/src/TThreadExecutor.cxx:10:; ginclude/tbb/concurrent_hash_map.h: In constructor 'tbb::interface5::internal::hash_map_base::hash_map_base()':; ginclude/tbb/concurrent_hash_map.h:131:24: warning: 'void* memset(void*, int, size_t)' clearing an object of type 'struct tbb::interface5::internal::hash_map_base::bucket' with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]; 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));; | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ginclude/tbb/concurrent_hash_map.h:93:16: note: 'struct tbb::interface5::internal::hash_map_base::bucket' declared here; 93 | struct bucket : tbb::internal::no_copy {; | ^~~~~~; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9067
https://github.com/root-project/root/issues/9069:1091,Usability,clear,clear,1091,"I would like to write (something equivalent to) the following:. ```cpp; auto m = RNTupleModel::Create();; auto field = RFieldBase::Create(""v"", ""ROOT::VecOps::RVec<int>"").Unwrap();; ROOT::RVec<int> rvec = {1, 2, 3};; m->AddField(std::move(field), (void*)&rvec);; auto w = RNTupleWriter::Recreate(std::move(m), ""r"", ""somefile.root"");; ```. but that `RNTupleModel::AddField` signature is missing and I could not find another way to do this correctly.; For example the following example code adds a single field to the model (""v"") but it adds _two_ corresponding RFieldValues to `model->GetDefaultEntry()`, one explicitly with `m->GetDefaultEntry()->CaptureValue()` and one implicitly with the `m->AddField(std::move(field))` call. ```cpp; // write out RVec; {; auto m = RNTupleModel::Create();; auto field = RFieldBase::Create(""v"", ""ROOT::VecOps::RVec<int>"").Unwrap();; ROOT::RVec<int> rvec = {1, 2, 3};; m->GetDefaultEntry()->CaptureValue(field->CaptureValue(&rvec));; m->AddField(std::move(field));. auto w = RNTupleWriter::Recreate(std::move(m), ""r"", fileGuard.GetPath());; w->Fill();; rvec.clear();; rvec.push_back(42);; w->Fill();; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9069
https://github.com/root-project/root/issues/9070:1090,Availability,Down,Download,1090,"straint terms of nuisance parameters in the measurement with constructions like:; ```xml; <ConstraintTerm Type=""Uniform"" RelativeUncertainty=""1"">NP_norm</ConstraintTerm>; ```. Constraint terms can be removed from `OverallSys` modifiers, but the same method does not seem to work for `HistoSys` modifiers (and the setting seems to be silently ignored). Constraint term ""removal"" can be achieved by changing the constraint term to be uniform, but `RooStats::HistFactory::Measurement::AddNoSyst` also provides an alternative method. The xml created from that seems to be incompatible with `hist2workspace`, as the xml uses `NoSyst` and `hist2workspace` seems to (at least parse) `NoConstraint` instead, but crashes for `NoSyst`. ### Expected behavior; I expect constraint term editing to work for both `OverallSys` and `HistoSys` modifiers. Both approaches of changing the constraint term to be uniform and removing it completely should work with `hist2workspace`. . ### To Reproduce; Download the required input files from https://cernbox.cern.ch/index.php/s/AO4ruN3G7LNtcRo. They contain a minimal HistFactory workspace specification (xml + ROOT file with histograms) and a simple script to fit the workspace. #### Baseline for comparisons; To establish the baseline behavior, run `hist2workspace` on the provided HistFactory workspace (xml + ROOT) and perform a fit:; ```bash; cd input; hist2workspace minimal_example.xml; cd ..; root -l -q fit.cxx; ```; The relevant best-fit parameter values are:; ```txt; NO. NAME VALUE; 1 alpha_NP_norm -4.66233e-01; 2 alpha_NP_shape -1.70517e-01; 3 mu 1.04248e+00; ```. #### `OverallSys` with uniform constraint [working as expected]. To see the behavior of the `OverallSys` modifier when removing the associated constraint term, edit the xml and add the `ConstraintTerm` configuration. The measurement should then look like this:; ```xml; <Measurement Name=""minimal_example"" Lumi=""1"" LumiRelErr=""0.1"" ExportOnly=""True"">; <POI>mu</POI>; <ParamSetting Const=""True",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9070
https://github.com/root-project/root/issues/9070:3719,Availability,avail,available,3719,"` modifier when removing the associated constraint term, edit the xml and add the `ConstraintTerm` configuration for `NP_shape`. The measurement should then look like this:; ```xml; <Measurement Name=""minimal_example"" Lumi=""1"" LumiRelErr=""0.1"" ExportOnly=""True"">; <POI>mu</POI>; <ParamSetting Const=""True"">Lumi</ParamSetting>; <ConstraintTerm Type=""Uniform"" RelativeUncertainty=""1"">NP_shape</ConstraintTerm>; </Measurement>; ```; Repeat the workspace conversion and fitting:; ```bash; cd input; hist2workspace minimal_example.xml; cd ..; root -l -q fit.cxx; ```; and the result is again; ```txt; NO. NAME VALUE; 1 alpha_NP_norm -4.66233e-01; 2 alpha_NP_shape -1.70517e-01; 3 mu 1.04248e+00; ```; which is exactly the same as the initial result when; ```xml; <ConstraintTerm Type=""Uniform"" RelativeUncertainty=""1"">NP_shape</ConstraintTerm>; ```; was not used. The setting seems to have been ignored. #### Using `NoSyst` [crashing, unexpected behavior in workaround]. In addition to `Uniform`, `NoSyst` is also available:; https://github.com/root-project/root/blob/c2c918c2662a02f3668b5044007e12d220133e71/roofit/histfactory/src/Measurement.cxx#L401-L406. When using the following measurement (`Uniform` replaced by `NoSyst`):; ```xml; <Measurement Name=""minimal_example"" Lumi=""1"" LumiRelErr=""0.1"" ExportOnly=""True"">; <POI>mu</POI>; <ParamSetting Const=""True"">Lumi</ParamSetting>; <ConstraintTerm Type=""NoSyst"" RelativeUncertainty=""1"">NP_norm</ConstraintTerm>; </Measurement>; ```; `hist2workspace` crashes:; ```txt; [#2] ERROR:HistFactory -- Error: Encountered unknown type for ConstraintTerm: NoSyst; HistFactory - Exception; hist2workspace - Caught Exception: HistFactory - Exception; ```; In `ConfigParser.cxx`, `NoConstraint` appears:; https://github.com/root-project/root/blob/c2c918c2662a02f3668b5044007e12d220133e71/roofit/histfactory/src/ConfigParser.cxx#L509-L514. When using that via; ```xml; <ConstraintTerm Type=""NoConstraint"" RelativeUncertainty=""1"">NP_norm</ConstraintTerm>; ```; `hist2wo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9070
https://github.com/root-project/root/issues/9070:4230,Availability,ERROR,ERROR,4230,"is:; ```xml; <Measurement Name=""minimal_example"" Lumi=""1"" LumiRelErr=""0.1"" ExportOnly=""True"">; <POI>mu</POI>; <ParamSetting Const=""True"">Lumi</ParamSetting>; <ConstraintTerm Type=""Uniform"" RelativeUncertainty=""1"">NP_shape</ConstraintTerm>; </Measurement>; ```; Repeat the workspace conversion and fitting:; ```bash; cd input; hist2workspace minimal_example.xml; cd ..; root -l -q fit.cxx; ```; and the result is again; ```txt; NO. NAME VALUE; 1 alpha_NP_norm -4.66233e-01; 2 alpha_NP_shape -1.70517e-01; 3 mu 1.04248e+00; ```; which is exactly the same as the initial result when; ```xml; <ConstraintTerm Type=""Uniform"" RelativeUncertainty=""1"">NP_shape</ConstraintTerm>; ```; was not used. The setting seems to have been ignored. #### Using `NoSyst` [crashing, unexpected behavior in workaround]. In addition to `Uniform`, `NoSyst` is also available:; https://github.com/root-project/root/blob/c2c918c2662a02f3668b5044007e12d220133e71/roofit/histfactory/src/Measurement.cxx#L401-L406. When using the following measurement (`Uniform` replaced by `NoSyst`):; ```xml; <Measurement Name=""minimal_example"" Lumi=""1"" LumiRelErr=""0.1"" ExportOnly=""True"">; <POI>mu</POI>; <ParamSetting Const=""True"">Lumi</ParamSetting>; <ConstraintTerm Type=""NoSyst"" RelativeUncertainty=""1"">NP_norm</ConstraintTerm>; </Measurement>; ```; `hist2workspace` crashes:; ```txt; [#2] ERROR:HistFactory -- Error: Encountered unknown type for ConstraintTerm: NoSyst; HistFactory - Exception; hist2workspace - Caught Exception: HistFactory - Exception; ```; In `ConfigParser.cxx`, `NoConstraint` appears:; https://github.com/root-project/root/blob/c2c918c2662a02f3668b5044007e12d220133e71/roofit/histfactory/src/ConfigParser.cxx#L509-L514. When using that via; ```xml; <ConstraintTerm Type=""NoConstraint"" RelativeUncertainty=""1"">NP_norm</ConstraintTerm>; ```; `hist2workspace` runs but the parameter for `NP_norm` disappears from the fit results. ### Setup; ROOT 6.24/06 in a container built with Debian 10. ### Additional context; none",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9070
https://github.com/root-project/root/issues/9070:4251,Availability,Error,Error,4251,"is:; ```xml; <Measurement Name=""minimal_example"" Lumi=""1"" LumiRelErr=""0.1"" ExportOnly=""True"">; <POI>mu</POI>; <ParamSetting Const=""True"">Lumi</ParamSetting>; <ConstraintTerm Type=""Uniform"" RelativeUncertainty=""1"">NP_shape</ConstraintTerm>; </Measurement>; ```; Repeat the workspace conversion and fitting:; ```bash; cd input; hist2workspace minimal_example.xml; cd ..; root -l -q fit.cxx; ```; and the result is again; ```txt; NO. NAME VALUE; 1 alpha_NP_norm -4.66233e-01; 2 alpha_NP_shape -1.70517e-01; 3 mu 1.04248e+00; ```; which is exactly the same as the initial result when; ```xml; <ConstraintTerm Type=""Uniform"" RelativeUncertainty=""1"">NP_shape</ConstraintTerm>; ```; was not used. The setting seems to have been ignored. #### Using `NoSyst` [crashing, unexpected behavior in workaround]. In addition to `Uniform`, `NoSyst` is also available:; https://github.com/root-project/root/blob/c2c918c2662a02f3668b5044007e12d220133e71/roofit/histfactory/src/Measurement.cxx#L401-L406. When using the following measurement (`Uniform` replaced by `NoSyst`):; ```xml; <Measurement Name=""minimal_example"" Lumi=""1"" LumiRelErr=""0.1"" ExportOnly=""True"">; <POI>mu</POI>; <ParamSetting Const=""True"">Lumi</ParamSetting>; <ConstraintTerm Type=""NoSyst"" RelativeUncertainty=""1"">NP_norm</ConstraintTerm>; </Measurement>; ```; `hist2workspace` crashes:; ```txt; [#2] ERROR:HistFactory -- Error: Encountered unknown type for ConstraintTerm: NoSyst; HistFactory - Exception; hist2workspace - Caught Exception: HistFactory - Exception; ```; In `ConfigParser.cxx`, `NoConstraint` appears:; https://github.com/root-project/root/blob/c2c918c2662a02f3668b5044007e12d220133e71/roofit/histfactory/src/ConfigParser.cxx#L509-L514. When using that via; ```xml; <ConstraintTerm Type=""NoConstraint"" RelativeUncertainty=""1"">NP_norm</ConstraintTerm>; ```; `hist2workspace` runs but the parameter for `NP_norm` disappears from the fit results. ### Setup; ROOT 6.24/06 in a container built with Debian 10. ### Additional context; none",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9070
https://github.com/root-project/root/issues/9070:1918,Deployability,configurat,configuration,1918," I expect constraint term editing to work for both `OverallSys` and `HistoSys` modifiers. Both approaches of changing the constraint term to be uniform and removing it completely should work with `hist2workspace`. . ### To Reproduce; Download the required input files from https://cernbox.cern.ch/index.php/s/AO4ruN3G7LNtcRo. They contain a minimal HistFactory workspace specification (xml + ROOT file with histograms) and a simple script to fit the workspace. #### Baseline for comparisons; To establish the baseline behavior, run `hist2workspace` on the provided HistFactory workspace (xml + ROOT) and perform a fit:; ```bash; cd input; hist2workspace minimal_example.xml; cd ..; root -l -q fit.cxx; ```; The relevant best-fit parameter values are:; ```txt; NO. NAME VALUE; 1 alpha_NP_norm -4.66233e-01; 2 alpha_NP_shape -1.70517e-01; 3 mu 1.04248e+00; ```. #### `OverallSys` with uniform constraint [working as expected]. To see the behavior of the `OverallSys` modifier when removing the associated constraint term, edit the xml and add the `ConstraintTerm` configuration. The measurement should then look like this:; ```xml; <Measurement Name=""minimal_example"" Lumi=""1"" LumiRelErr=""0.1"" ExportOnly=""True"">; <POI>mu</POI>; <ParamSetting Const=""True"">Lumi</ParamSetting>; <ConstraintTerm Type=""Uniform"" RelativeUncertainty=""1"">NP_norm</ConstraintTerm>; </Measurement>; ```; Repeat the workspace conversion and fitting:; ```bash; cd input; hist2workspace minimal_example.xml; cd ..; root -l -q fit.cxx; ```; and the result is now; ```txt; NO. NAME VALUE; 1 alpha_NP_norm -6.61703e-01; 2 alpha_NP_shape -2.12313e-01; 3 mu 1.10747e+00; ```; where the pull for `alpha_NP_norm` has increased, which makes sense given the removal of its constraint term. #### `HistoSys` with uniform constraint [not working as expected]. To see the behavior of the `HistoSys` modifier when removing the associated constraint term, edit the xml and add the `ConstraintTerm` configuration for `NP_shape`. The measurement s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9070
https://github.com/root-project/root/issues/9070:2809,Deployability,configurat,configuration,2809,"nt [working as expected]. To see the behavior of the `OverallSys` modifier when removing the associated constraint term, edit the xml and add the `ConstraintTerm` configuration. The measurement should then look like this:; ```xml; <Measurement Name=""minimal_example"" Lumi=""1"" LumiRelErr=""0.1"" ExportOnly=""True"">; <POI>mu</POI>; <ParamSetting Const=""True"">Lumi</ParamSetting>; <ConstraintTerm Type=""Uniform"" RelativeUncertainty=""1"">NP_norm</ConstraintTerm>; </Measurement>; ```; Repeat the workspace conversion and fitting:; ```bash; cd input; hist2workspace minimal_example.xml; cd ..; root -l -q fit.cxx; ```; and the result is now; ```txt; NO. NAME VALUE; 1 alpha_NP_norm -6.61703e-01; 2 alpha_NP_shape -2.12313e-01; 3 mu 1.10747e+00; ```; where the pull for `alpha_NP_norm` has increased, which makes sense given the removal of its constraint term. #### `HistoSys` with uniform constraint [not working as expected]. To see the behavior of the `HistoSys` modifier when removing the associated constraint term, edit the xml and add the `ConstraintTerm` configuration for `NP_shape`. The measurement should then look like this:; ```xml; <Measurement Name=""minimal_example"" Lumi=""1"" LumiRelErr=""0.1"" ExportOnly=""True"">; <POI>mu</POI>; <ParamSetting Const=""True"">Lumi</ParamSetting>; <ConstraintTerm Type=""Uniform"" RelativeUncertainty=""1"">NP_shape</ConstraintTerm>; </Measurement>; ```; Repeat the workspace conversion and fitting:; ```bash; cd input; hist2workspace minimal_example.xml; cd ..; root -l -q fit.cxx; ```; and the result is again; ```txt; NO. NAME VALUE; 1 alpha_NP_norm -4.66233e-01; 2 alpha_NP_shape -1.70517e-01; 3 mu 1.04248e+00; ```; which is exactly the same as the initial result when; ```xml; <ConstraintTerm Type=""Uniform"" RelativeUncertainty=""1"">NP_shape</ConstraintTerm>; ```; was not used. The setting seems to have been ignored. #### Using `NoSyst` [crashing, unexpected behavior in workaround]. In addition to `Uniform`, `NoSyst` is also available:; https://github.com/root-p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9070
https://github.com/root-project/root/issues/9070:1918,Modifiability,config,configuration,1918," I expect constraint term editing to work for both `OverallSys` and `HistoSys` modifiers. Both approaches of changing the constraint term to be uniform and removing it completely should work with `hist2workspace`. . ### To Reproduce; Download the required input files from https://cernbox.cern.ch/index.php/s/AO4ruN3G7LNtcRo. They contain a minimal HistFactory workspace specification (xml + ROOT file with histograms) and a simple script to fit the workspace. #### Baseline for comparisons; To establish the baseline behavior, run `hist2workspace` on the provided HistFactory workspace (xml + ROOT) and perform a fit:; ```bash; cd input; hist2workspace minimal_example.xml; cd ..; root -l -q fit.cxx; ```; The relevant best-fit parameter values are:; ```txt; NO. NAME VALUE; 1 alpha_NP_norm -4.66233e-01; 2 alpha_NP_shape -1.70517e-01; 3 mu 1.04248e+00; ```. #### `OverallSys` with uniform constraint [working as expected]. To see the behavior of the `OverallSys` modifier when removing the associated constraint term, edit the xml and add the `ConstraintTerm` configuration. The measurement should then look like this:; ```xml; <Measurement Name=""minimal_example"" Lumi=""1"" LumiRelErr=""0.1"" ExportOnly=""True"">; <POI>mu</POI>; <ParamSetting Const=""True"">Lumi</ParamSetting>; <ConstraintTerm Type=""Uniform"" RelativeUncertainty=""1"">NP_norm</ConstraintTerm>; </Measurement>; ```; Repeat the workspace conversion and fitting:; ```bash; cd input; hist2workspace minimal_example.xml; cd ..; root -l -q fit.cxx; ```; and the result is now; ```txt; NO. NAME VALUE; 1 alpha_NP_norm -6.61703e-01; 2 alpha_NP_shape -2.12313e-01; 3 mu 1.10747e+00; ```; where the pull for `alpha_NP_norm` has increased, which makes sense given the removal of its constraint term. #### `HistoSys` with uniform constraint [not working as expected]. To see the behavior of the `HistoSys` modifier when removing the associated constraint term, edit the xml and add the `ConstraintTerm` configuration for `NP_shape`. The measurement s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9070
https://github.com/root-project/root/issues/9070:2809,Modifiability,config,configuration,2809,"nt [working as expected]. To see the behavior of the `OverallSys` modifier when removing the associated constraint term, edit the xml and add the `ConstraintTerm` configuration. The measurement should then look like this:; ```xml; <Measurement Name=""minimal_example"" Lumi=""1"" LumiRelErr=""0.1"" ExportOnly=""True"">; <POI>mu</POI>; <ParamSetting Const=""True"">Lumi</ParamSetting>; <ConstraintTerm Type=""Uniform"" RelativeUncertainty=""1"">NP_norm</ConstraintTerm>; </Measurement>; ```; Repeat the workspace conversion and fitting:; ```bash; cd input; hist2workspace minimal_example.xml; cd ..; root -l -q fit.cxx; ```; and the result is now; ```txt; NO. NAME VALUE; 1 alpha_NP_norm -6.61703e-01; 2 alpha_NP_shape -2.12313e-01; 3 mu 1.10747e+00; ```; where the pull for `alpha_NP_norm` has increased, which makes sense given the removal of its constraint term. #### `HistoSys` with uniform constraint [not working as expected]. To see the behavior of the `HistoSys` modifier when removing the associated constraint term, edit the xml and add the `ConstraintTerm` configuration for `NP_shape`. The measurement should then look like this:; ```xml; <Measurement Name=""minimal_example"" Lumi=""1"" LumiRelErr=""0.1"" ExportOnly=""True"">; <POI>mu</POI>; <ParamSetting Const=""True"">Lumi</ParamSetting>; <ConstraintTerm Type=""Uniform"" RelativeUncertainty=""1"">NP_shape</ConstraintTerm>; </Measurement>; ```; Repeat the workspace conversion and fitting:; ```bash; cd input; hist2workspace minimal_example.xml; cd ..; root -l -q fit.cxx; ```; and the result is again; ```txt; NO. NAME VALUE; 1 alpha_NP_norm -4.66233e-01; 2 alpha_NP_shape -1.70517e-01; 3 mu 1.04248e+00; ```; which is exactly the same as the initial result when; ```xml; <ConstraintTerm Type=""Uniform"" RelativeUncertainty=""1"">NP_shape</ConstraintTerm>; ```; was not used. The setting seems to have been ignored. #### Using `NoSyst` [crashing, unexpected behavior in workaround]. In addition to `Uniform`, `NoSyst` is also available:; https://github.com/root-p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9070
https://github.com/root-project/root/issues/9070:4405,Modifiability,Config,ConfigParser,4405,"is:; ```xml; <Measurement Name=""minimal_example"" Lumi=""1"" LumiRelErr=""0.1"" ExportOnly=""True"">; <POI>mu</POI>; <ParamSetting Const=""True"">Lumi</ParamSetting>; <ConstraintTerm Type=""Uniform"" RelativeUncertainty=""1"">NP_shape</ConstraintTerm>; </Measurement>; ```; Repeat the workspace conversion and fitting:; ```bash; cd input; hist2workspace minimal_example.xml; cd ..; root -l -q fit.cxx; ```; and the result is again; ```txt; NO. NAME VALUE; 1 alpha_NP_norm -4.66233e-01; 2 alpha_NP_shape -1.70517e-01; 3 mu 1.04248e+00; ```; which is exactly the same as the initial result when; ```xml; <ConstraintTerm Type=""Uniform"" RelativeUncertainty=""1"">NP_shape</ConstraintTerm>; ```; was not used. The setting seems to have been ignored. #### Using `NoSyst` [crashing, unexpected behavior in workaround]. In addition to `Uniform`, `NoSyst` is also available:; https://github.com/root-project/root/blob/c2c918c2662a02f3668b5044007e12d220133e71/roofit/histfactory/src/Measurement.cxx#L401-L406. When using the following measurement (`Uniform` replaced by `NoSyst`):; ```xml; <Measurement Name=""minimal_example"" Lumi=""1"" LumiRelErr=""0.1"" ExportOnly=""True"">; <POI>mu</POI>; <ParamSetting Const=""True"">Lumi</ParamSetting>; <ConstraintTerm Type=""NoSyst"" RelativeUncertainty=""1"">NP_norm</ConstraintTerm>; </Measurement>; ```; `hist2workspace` crashes:; ```txt; [#2] ERROR:HistFactory -- Error: Encountered unknown type for ConstraintTerm: NoSyst; HistFactory - Exception; hist2workspace - Caught Exception: HistFactory - Exception; ```; In `ConfigParser.cxx`, `NoConstraint` appears:; https://github.com/root-project/root/blob/c2c918c2662a02f3668b5044007e12d220133e71/roofit/histfactory/src/ConfigParser.cxx#L509-L514. When using that via; ```xml; <ConstraintTerm Type=""NoConstraint"" RelativeUncertainty=""1"">NP_norm</ConstraintTerm>; ```; `hist2workspace` runs but the parameter for `NP_norm` disappears from the fit results. ### Setup; ROOT 6.24/06 in a container built with Debian 10. ### Additional context; none",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9070
https://github.com/root-project/root/issues/9070:4555,Modifiability,Config,ConfigParser,4555,"is:; ```xml; <Measurement Name=""minimal_example"" Lumi=""1"" LumiRelErr=""0.1"" ExportOnly=""True"">; <POI>mu</POI>; <ParamSetting Const=""True"">Lumi</ParamSetting>; <ConstraintTerm Type=""Uniform"" RelativeUncertainty=""1"">NP_shape</ConstraintTerm>; </Measurement>; ```; Repeat the workspace conversion and fitting:; ```bash; cd input; hist2workspace minimal_example.xml; cd ..; root -l -q fit.cxx; ```; and the result is again; ```txt; NO. NAME VALUE; 1 alpha_NP_norm -4.66233e-01; 2 alpha_NP_shape -1.70517e-01; 3 mu 1.04248e+00; ```; which is exactly the same as the initial result when; ```xml; <ConstraintTerm Type=""Uniform"" RelativeUncertainty=""1"">NP_shape</ConstraintTerm>; ```; was not used. The setting seems to have been ignored. #### Using `NoSyst` [crashing, unexpected behavior in workaround]. In addition to `Uniform`, `NoSyst` is also available:; https://github.com/root-project/root/blob/c2c918c2662a02f3668b5044007e12d220133e71/roofit/histfactory/src/Measurement.cxx#L401-L406. When using the following measurement (`Uniform` replaced by `NoSyst`):; ```xml; <Measurement Name=""minimal_example"" Lumi=""1"" LumiRelErr=""0.1"" ExportOnly=""True"">; <POI>mu</POI>; <ParamSetting Const=""True"">Lumi</ParamSetting>; <ConstraintTerm Type=""NoSyst"" RelativeUncertainty=""1"">NP_norm</ConstraintTerm>; </Measurement>; ```; `hist2workspace` crashes:; ```txt; [#2] ERROR:HistFactory -- Error: Encountered unknown type for ConstraintTerm: NoSyst; HistFactory - Exception; hist2workspace - Caught Exception: HistFactory - Exception; ```; In `ConfigParser.cxx`, `NoConstraint` appears:; https://github.com/root-project/root/blob/c2c918c2662a02f3668b5044007e12d220133e71/roofit/histfactory/src/ConfigParser.cxx#L509-L514. When using that via; ```xml; <ConstraintTerm Type=""NoConstraint"" RelativeUncertainty=""1"">NP_norm</ConstraintTerm>; ```; `hist2workspace` runs but the parameter for `NP_norm` disappears from the fit results. ### Setup; ROOT 6.24/06 in a container built with Debian 10. ### Additional context; none",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9070
https://github.com/root-project/root/issues/9070:1460,Performance,perform,perform,1460,"setting seems to be silently ignored). Constraint term ""removal"" can be achieved by changing the constraint term to be uniform, but `RooStats::HistFactory::Measurement::AddNoSyst` also provides an alternative method. The xml created from that seems to be incompatible with `hist2workspace`, as the xml uses `NoSyst` and `hist2workspace` seems to (at least parse) `NoConstraint` instead, but crashes for `NoSyst`. ### Expected behavior; I expect constraint term editing to work for both `OverallSys` and `HistoSys` modifiers. Both approaches of changing the constraint term to be uniform and removing it completely should work with `hist2workspace`. . ### To Reproduce; Download the required input files from https://cernbox.cern.ch/index.php/s/AO4ruN3G7LNtcRo. They contain a minimal HistFactory workspace specification (xml + ROOT file with histograms) and a simple script to fit the workspace. #### Baseline for comparisons; To establish the baseline behavior, run `hist2workspace` on the provided HistFactory workspace (xml + ROOT) and perform a fit:; ```bash; cd input; hist2workspace minimal_example.xml; cd ..; root -l -q fit.cxx; ```; The relevant best-fit parameter values are:; ```txt; NO. NAME VALUE; 1 alpha_NP_norm -4.66233e-01; 2 alpha_NP_shape -1.70517e-01; 3 mu 1.04248e+00; ```. #### `OverallSys` with uniform constraint [working as expected]. To see the behavior of the `OverallSys` modifier when removing the associated constraint term, edit the xml and add the `ConstraintTerm` configuration. The measurement should then look like this:; ```xml; <Measurement Name=""minimal_example"" Lumi=""1"" LumiRelErr=""0.1"" ExportOnly=""True"">; <POI>mu</POI>; <ParamSetting Const=""True"">Lumi</ParamSetting>; <ConstraintTerm Type=""Uniform"" RelativeUncertainty=""1"">NP_norm</ConstraintTerm>; </Measurement>; ```; Repeat the workspace conversion and fitting:; ```bash; cd input; hist2workspace minimal_example.xml; cd ..; root -l -q fit.cxx; ```; and the result is now; ```txt; NO. NAME VALUE; 1 alpha_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9070
https://github.com/root-project/root/issues/9070:1281,Usability,simpl,simple,1281,"=""1"">NP_norm</ConstraintTerm>; ```. Constraint terms can be removed from `OverallSys` modifiers, but the same method does not seem to work for `HistoSys` modifiers (and the setting seems to be silently ignored). Constraint term ""removal"" can be achieved by changing the constraint term to be uniform, but `RooStats::HistFactory::Measurement::AddNoSyst` also provides an alternative method. The xml created from that seems to be incompatible with `hist2workspace`, as the xml uses `NoSyst` and `hist2workspace` seems to (at least parse) `NoConstraint` instead, but crashes for `NoSyst`. ### Expected behavior; I expect constraint term editing to work for both `OverallSys` and `HistoSys` modifiers. Both approaches of changing the constraint term to be uniform and removing it completely should work with `hist2workspace`. . ### To Reproduce; Download the required input files from https://cernbox.cern.ch/index.php/s/AO4ruN3G7LNtcRo. They contain a minimal HistFactory workspace specification (xml + ROOT file with histograms) and a simple script to fit the workspace. #### Baseline for comparisons; To establish the baseline behavior, run `hist2workspace` on the provided HistFactory workspace (xml + ROOT) and perform a fit:; ```bash; cd input; hist2workspace minimal_example.xml; cd ..; root -l -q fit.cxx; ```; The relevant best-fit parameter values are:; ```txt; NO. NAME VALUE; 1 alpha_NP_norm -4.66233e-01; 2 alpha_NP_shape -1.70517e-01; 3 mu 1.04248e+00; ```. #### `OverallSys` with uniform constraint [working as expected]. To see the behavior of the `OverallSys` modifier when removing the associated constraint term, edit the xml and add the `ConstraintTerm` configuration. The measurement should then look like this:; ```xml; <Measurement Name=""minimal_example"" Lumi=""1"" LumiRelErr=""0.1"" ExportOnly=""True"">; <POI>mu</POI>; <ParamSetting Const=""True"">Lumi</ParamSetting>; <ConstraintTerm Type=""Uniform"" RelativeUncertainty=""1"">NP_norm</ConstraintTerm>; </Measurement>; ```; Repeat the works",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9070
https://github.com/root-project/root/issues/9072:34,Deployability,install,installed,34,"### Describe the bug; If DaviX is installed, it is used for TFile::Open(""https://..."") likes, but unlike TWebFile, it does not seem to support basic auth for passwords with @ in them. (or it supports them differently?). . ### Expected behavior; `auto f = TFile::Open(""https://user:p\\@ssword@example.org/lotterynumbers.root"")` should work regardless of if DaviX is installed or not, as `auto f = TFile::Open(""https://user:password@example.org/lotterynumbers.root"")` does. . ### To Reproduce. Try to access a file hidden behind http basic authentication using TFile::Open with and without DaviX where the password contains an @. Without DaviX installed, TFile::Open( ) delegates to TWebFile and it works. With DaviX, DaviX tries to handle it but it doesn't support basic auth. . ### Setup; root 6.24/04 on Fedora 34 (x86-64) installed via dnf, with and without root-net-davix. . ### Additional context; Note that there is some functionality supported by DaviX not supported by TWebFile (see e.g. #8890), so delegating to TWebFile is not necessarily the right solution. Probably better have Davix do the same TUrl parsing of passwords, so that escaping @ remains the same.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9072
https://github.com/root-project/root/issues/9072:365,Deployability,install,installed,365,"### Describe the bug; If DaviX is installed, it is used for TFile::Open(""https://..."") likes, but unlike TWebFile, it does not seem to support basic auth for passwords with @ in them. (or it supports them differently?). . ### Expected behavior; `auto f = TFile::Open(""https://user:p\\@ssword@example.org/lotterynumbers.root"")` should work regardless of if DaviX is installed or not, as `auto f = TFile::Open(""https://user:password@example.org/lotterynumbers.root"")` does. . ### To Reproduce. Try to access a file hidden behind http basic authentication using TFile::Open with and without DaviX where the password contains an @. Without DaviX installed, TFile::Open( ) delegates to TWebFile and it works. With DaviX, DaviX tries to handle it but it doesn't support basic auth. . ### Setup; root 6.24/04 on Fedora 34 (x86-64) installed via dnf, with and without root-net-davix. . ### Additional context; Note that there is some functionality supported by DaviX not supported by TWebFile (see e.g. #8890), so delegating to TWebFile is not necessarily the right solution. Probably better have Davix do the same TUrl parsing of passwords, so that escaping @ remains the same.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9072
https://github.com/root-project/root/issues/9072:642,Deployability,install,installed,642,"### Describe the bug; If DaviX is installed, it is used for TFile::Open(""https://..."") likes, but unlike TWebFile, it does not seem to support basic auth for passwords with @ in them. (or it supports them differently?). . ### Expected behavior; `auto f = TFile::Open(""https://user:p\\@ssword@example.org/lotterynumbers.root"")` should work regardless of if DaviX is installed or not, as `auto f = TFile::Open(""https://user:password@example.org/lotterynumbers.root"")` does. . ### To Reproduce. Try to access a file hidden behind http basic authentication using TFile::Open with and without DaviX where the password contains an @. Without DaviX installed, TFile::Open( ) delegates to TWebFile and it works. With DaviX, DaviX tries to handle it but it doesn't support basic auth. . ### Setup; root 6.24/04 on Fedora 34 (x86-64) installed via dnf, with and without root-net-davix. . ### Additional context; Note that there is some functionality supported by DaviX not supported by TWebFile (see e.g. #8890), so delegating to TWebFile is not necessarily the right solution. Probably better have Davix do the same TUrl parsing of passwords, so that escaping @ remains the same.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9072
https://github.com/root-project/root/issues/9072:824,Deployability,install,installed,824,"### Describe the bug; If DaviX is installed, it is used for TFile::Open(""https://..."") likes, but unlike TWebFile, it does not seem to support basic auth for passwords with @ in them. (or it supports them differently?). . ### Expected behavior; `auto f = TFile::Open(""https://user:p\\@ssword@example.org/lotterynumbers.root"")` should work regardless of if DaviX is installed or not, as `auto f = TFile::Open(""https://user:password@example.org/lotterynumbers.root"")` does. . ### To Reproduce. Try to access a file hidden behind http basic authentication using TFile::Open with and without DaviX where the password contains an @. Without DaviX installed, TFile::Open( ) delegates to TWebFile and it works. With DaviX, DaviX tries to handle it but it doesn't support basic auth. . ### Setup; root 6.24/04 on Fedora 34 (x86-64) installed via dnf, with and without root-net-davix. . ### Additional context; Note that there is some functionality supported by DaviX not supported by TWebFile (see e.g. #8890), so delegating to TWebFile is not necessarily the right solution. Probably better have Davix do the same TUrl parsing of passwords, so that escaping @ remains the same.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9072
https://github.com/root-project/root/issues/9072:158,Security,password,passwords,158,"### Describe the bug; If DaviX is installed, it is used for TFile::Open(""https://..."") likes, but unlike TWebFile, it does not seem to support basic auth for passwords with @ in them. (or it supports them differently?). . ### Expected behavior; `auto f = TFile::Open(""https://user:p\\@ssword@example.org/lotterynumbers.root"")` should work regardless of if DaviX is installed or not, as `auto f = TFile::Open(""https://user:password@example.org/lotterynumbers.root"")` does. . ### To Reproduce. Try to access a file hidden behind http basic authentication using TFile::Open with and without DaviX where the password contains an @. Without DaviX installed, TFile::Open( ) delegates to TWebFile and it works. With DaviX, DaviX tries to handle it but it doesn't support basic auth. . ### Setup; root 6.24/04 on Fedora 34 (x86-64) installed via dnf, with and without root-net-davix. . ### Additional context; Note that there is some functionality supported by DaviX not supported by TWebFile (see e.g. #8890), so delegating to TWebFile is not necessarily the right solution. Probably better have Davix do the same TUrl parsing of passwords, so that escaping @ remains the same.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9072
https://github.com/root-project/root/issues/9072:422,Security,password,password,422,"### Describe the bug; If DaviX is installed, it is used for TFile::Open(""https://..."") likes, but unlike TWebFile, it does not seem to support basic auth for passwords with @ in them. (or it supports them differently?). . ### Expected behavior; `auto f = TFile::Open(""https://user:p\\@ssword@example.org/lotterynumbers.root"")` should work regardless of if DaviX is installed or not, as `auto f = TFile::Open(""https://user:password@example.org/lotterynumbers.root"")` does. . ### To Reproduce. Try to access a file hidden behind http basic authentication using TFile::Open with and without DaviX where the password contains an @. Without DaviX installed, TFile::Open( ) delegates to TWebFile and it works. With DaviX, DaviX tries to handle it but it doesn't support basic auth. . ### Setup; root 6.24/04 on Fedora 34 (x86-64) installed via dnf, with and without root-net-davix. . ### Additional context; Note that there is some functionality supported by DaviX not supported by TWebFile (see e.g. #8890), so delegating to TWebFile is not necessarily the right solution. Probably better have Davix do the same TUrl parsing of passwords, so that escaping @ remains the same.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9072
https://github.com/root-project/root/issues/9072:499,Security,access,access,499,"### Describe the bug; If DaviX is installed, it is used for TFile::Open(""https://..."") likes, but unlike TWebFile, it does not seem to support basic auth for passwords with @ in them. (or it supports them differently?). . ### Expected behavior; `auto f = TFile::Open(""https://user:p\\@ssword@example.org/lotterynumbers.root"")` should work regardless of if DaviX is installed or not, as `auto f = TFile::Open(""https://user:password@example.org/lotterynumbers.root"")` does. . ### To Reproduce. Try to access a file hidden behind http basic authentication using TFile::Open with and without DaviX where the password contains an @. Without DaviX installed, TFile::Open( ) delegates to TWebFile and it works. With DaviX, DaviX tries to handle it but it doesn't support basic auth. . ### Setup; root 6.24/04 on Fedora 34 (x86-64) installed via dnf, with and without root-net-davix. . ### Additional context; Note that there is some functionality supported by DaviX not supported by TWebFile (see e.g. #8890), so delegating to TWebFile is not necessarily the right solution. Probably better have Davix do the same TUrl parsing of passwords, so that escaping @ remains the same.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9072
https://github.com/root-project/root/issues/9072:538,Security,authenticat,authentication,538,"### Describe the bug; If DaviX is installed, it is used for TFile::Open(""https://..."") likes, but unlike TWebFile, it does not seem to support basic auth for passwords with @ in them. (or it supports them differently?). . ### Expected behavior; `auto f = TFile::Open(""https://user:p\\@ssword@example.org/lotterynumbers.root"")` should work regardless of if DaviX is installed or not, as `auto f = TFile::Open(""https://user:password@example.org/lotterynumbers.root"")` does. . ### To Reproduce. Try to access a file hidden behind http basic authentication using TFile::Open with and without DaviX where the password contains an @. Without DaviX installed, TFile::Open( ) delegates to TWebFile and it works. With DaviX, DaviX tries to handle it but it doesn't support basic auth. . ### Setup; root 6.24/04 on Fedora 34 (x86-64) installed via dnf, with and without root-net-davix. . ### Additional context; Note that there is some functionality supported by DaviX not supported by TWebFile (see e.g. #8890), so delegating to TWebFile is not necessarily the right solution. Probably better have Davix do the same TUrl parsing of passwords, so that escaping @ remains the same.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9072
https://github.com/root-project/root/issues/9072:604,Security,password,password,604,"### Describe the bug; If DaviX is installed, it is used for TFile::Open(""https://..."") likes, but unlike TWebFile, it does not seem to support basic auth for passwords with @ in them. (or it supports them differently?). . ### Expected behavior; `auto f = TFile::Open(""https://user:p\\@ssword@example.org/lotterynumbers.root"")` should work regardless of if DaviX is installed or not, as `auto f = TFile::Open(""https://user:password@example.org/lotterynumbers.root"")` does. . ### To Reproduce. Try to access a file hidden behind http basic authentication using TFile::Open with and without DaviX where the password contains an @. Without DaviX installed, TFile::Open( ) delegates to TWebFile and it works. With DaviX, DaviX tries to handle it but it doesn't support basic auth. . ### Setup; root 6.24/04 on Fedora 34 (x86-64) installed via dnf, with and without root-net-davix. . ### Additional context; Note that there is some functionality supported by DaviX not supported by TWebFile (see e.g. #8890), so delegating to TWebFile is not necessarily the right solution. Probably better have Davix do the same TUrl parsing of passwords, so that escaping @ remains the same.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9072
https://github.com/root-project/root/issues/9072:1123,Security,password,passwords,1123,"### Describe the bug; If DaviX is installed, it is used for TFile::Open(""https://..."") likes, but unlike TWebFile, it does not seem to support basic auth for passwords with @ in them. (or it supports them differently?). . ### Expected behavior; `auto f = TFile::Open(""https://user:p\\@ssword@example.org/lotterynumbers.root"")` should work regardless of if DaviX is installed or not, as `auto f = TFile::Open(""https://user:password@example.org/lotterynumbers.root"")` does. . ### To Reproduce. Try to access a file hidden behind http basic authentication using TFile::Open with and without DaviX where the password contains an @. Without DaviX installed, TFile::Open( ) delegates to TWebFile and it works. With DaviX, DaviX tries to handle it but it doesn't support basic auth. . ### Setup; root 6.24/04 on Fedora 34 (x86-64) installed via dnf, with and without root-net-davix. . ### Additional context; Note that there is some functionality supported by DaviX not supported by TWebFile (see e.g. #8890), so delegating to TWebFile is not necessarily the right solution. Probably better have Davix do the same TUrl parsing of passwords, so that escaping @ remains the same.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9072
https://github.com/root-project/root/pull/9075:28,Availability,error,error,28,To prevent `TypeError: aap` error in `addressof`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9075
https://github.com/root-project/root/pull/9076:35,Usability,guid,guide,35,Improve the clean up after the ref guide build in order to not pollute the sources.; As requested here: https://github.com/root-project/root/issues/8947,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9076
https://github.com/root-project/root/pull/9078:173,Deployability,patch,patched,173,"This PR is a do-over of #8385 and #8412 and, as such, again the second part of a split and clean-up of #8294. The most important blocker in those PRs was the inclusion of a patched libzmq in RooFitZMQ itself. [This patch has now been included in libzmq proper](https://github.com/zeromq/libzmq/pull/4255). Another blocking review comment was that libzmq symbols must not be allowed to be exported through our libraries. [This has been solved in theory, and in practice is pending another PR to libzmq](https://github.com/zeromq/libzmq/pull/4266). Having fixed these two blockers, we should now be able to continue. To recap:. > In this PR, we introduce two packages: RooFitZMQ and RooFit::MultiProcess. It also adds two builtins for ZeroMQ to ease dependency management: libzmq and cppzmq. The builtin for libzmq is especially necessary at this point because it has recently gained a necessary feature that has not been released yet.; > ; > RooFit::MultiProcess is a task-based parallelization framework.; > ; > It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are partial derivatives -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize.; > ; > The communication between processes is done using ZeroMQ. The ZeroMQ dependency is wrapped in convenience classes contributed by @roelaaij which here are packaged as RooFitZMQ. Will un-draft the PR once the following is done (based on previous review comments by @guitargeek @hageboeck @amadio @lmoneta and also some other things from myself):; - [x] includes: correct order (matching header, RooF",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9078
https://github.com/root-project/root/pull/9078:215,Deployability,patch,patch,215,"This PR is a do-over of #8385 and #8412 and, as such, again the second part of a split and clean-up of #8294. The most important blocker in those PRs was the inclusion of a patched libzmq in RooFitZMQ itself. [This patch has now been included in libzmq proper](https://github.com/zeromq/libzmq/pull/4255). Another blocking review comment was that libzmq symbols must not be allowed to be exported through our libraries. [This has been solved in theory, and in practice is pending another PR to libzmq](https://github.com/zeromq/libzmq/pull/4266). Having fixed these two blockers, we should now be able to continue. To recap:. > In this PR, we introduce two packages: RooFitZMQ and RooFit::MultiProcess. It also adds two builtins for ZeroMQ to ease dependency management: libzmq and cppzmq. The builtin for libzmq is especially necessary at this point because it has recently gained a necessary feature that has not been released yet.; > ; > RooFit::MultiProcess is a task-based parallelization framework.; > ; > It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are partial derivatives -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize.; > ; > The communication between processes is done using ZeroMQ. The ZeroMQ dependency is wrapped in convenience classes contributed by @roelaaij which here are packaged as RooFitZMQ. Will un-draft the PR once the following is done (based on previous review comments by @guitargeek @hageboeck @amadio @lmoneta and also some other things from myself):; - [x] includes: correct order (matching header, RooF",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9078
https://github.com/root-project/root/pull/9078:920,Deployability,release,released,920,"This PR is a do-over of #8385 and #8412 and, as such, again the second part of a split and clean-up of #8294. The most important blocker in those PRs was the inclusion of a patched libzmq in RooFitZMQ itself. [This patch has now been included in libzmq proper](https://github.com/zeromq/libzmq/pull/4255). Another blocking review comment was that libzmq symbols must not be allowed to be exported through our libraries. [This has been solved in theory, and in practice is pending another PR to libzmq](https://github.com/zeromq/libzmq/pull/4266). Having fixed these two blockers, we should now be able to continue. To recap:. > In this PR, we introduce two packages: RooFitZMQ and RooFit::MultiProcess. It also adds two builtins for ZeroMQ to ease dependency management: libzmq and cppzmq. The builtin for libzmq is especially necessary at this point because it has recently gained a necessary feature that has not been released yet.; > ; > RooFit::MultiProcess is a task-based parallelization framework.; > ; > It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are partial derivatives -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize.; > ; > The communication between processes is done using ZeroMQ. The ZeroMQ dependency is wrapped in convenience classes contributed by @roelaaij which here are packaged as RooFitZMQ. Will un-draft the PR once the following is done (based on previous review comments by @guitargeek @hageboeck @amadio @lmoneta and also some other things from myself):; - [x] includes: correct order (matching header, RooF",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9078
https://github.com/root-project/root/pull/9078:748,Integrability,depend,dependency,748,"This PR is a do-over of #8385 and #8412 and, as such, again the second part of a split and clean-up of #8294. The most important blocker in those PRs was the inclusion of a patched libzmq in RooFitZMQ itself. [This patch has now been included in libzmq proper](https://github.com/zeromq/libzmq/pull/4255). Another blocking review comment was that libzmq symbols must not be allowed to be exported through our libraries. [This has been solved in theory, and in practice is pending another PR to libzmq](https://github.com/zeromq/libzmq/pull/4266). Having fixed these two blockers, we should now be able to continue. To recap:. > In this PR, we introduce two packages: RooFitZMQ and RooFit::MultiProcess. It also adds two builtins for ZeroMQ to ease dependency management: libzmq and cppzmq. The builtin for libzmq is especially necessary at this point because it has recently gained a necessary feature that has not been released yet.; > ; > RooFit::MultiProcess is a task-based parallelization framework.; > ; > It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are partial derivatives -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize.; > ; > The communication between processes is done using ZeroMQ. The ZeroMQ dependency is wrapped in convenience classes contributed by @roelaaij which here are packaged as RooFitZMQ. Will un-draft the PR once the following is done (based on previous review comments by @guitargeek @hageboeck @amadio @lmoneta and also some other things from myself):; - [x] includes: correct order (matching header, RooF",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9078
https://github.com/root-project/root/pull/9078:1673,Integrability,depend,dependency,1673,"builtins for ZeroMQ to ease dependency management: libzmq and cppzmq. The builtin for libzmq is especially necessary at this point because it has recently gained a necessary feature that has not been released yet.; > ; > RooFit::MultiProcess is a task-based parallelization framework.; > ; > It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are partial derivatives -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize.; > ; > The communication between processes is done using ZeroMQ. The ZeroMQ dependency is wrapped in convenience classes contributed by @roelaaij which here are packaged as RooFitZMQ. Will un-draft the PR once the following is done (based on previous review comments by @guitargeek @hageboeck @amadio @lmoneta and also some other things from myself):; - [x] includes: correct order (matching header, RooFit, ROOT, std) and ROOT includes in quotation marks; - [x] fix ZMQ deprecation warnings; - [x] refactor member names: underscore suffix; - [x] document important things with doxygen; - [x] remove commented out code and TODOs and other junk; - [x] fix copyright headers + author lists (RooFitZMQ: me, Roel; MP: me, Inti, Vince); - [ ] rebase in 2-3 neat commits that all compile and pass tests; - [x] clang-tidy up; - [x] change libzmq builtin back to master after PR is merged: https://github.com/zeromq/libzmq/pull/4266; - [ ] ~use `enum class` instead of template parameters for minimizer function implementation choice~ -> next PR. _Edit 18 Nov 2021:_ the following list is to keep track of unaddressed (at time of wr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9078
https://github.com/root-project/root/pull/9078:1687,Integrability,wrap,wrapped,1687,"builtins for ZeroMQ to ease dependency management: libzmq and cppzmq. The builtin for libzmq is especially necessary at this point because it has recently gained a necessary feature that has not been released yet.; > ; > RooFit::MultiProcess is a task-based parallelization framework.; > ; > It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are partial derivatives -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize.; > ; > The communication between processes is done using ZeroMQ. The ZeroMQ dependency is wrapped in convenience classes contributed by @roelaaij which here are packaged as RooFitZMQ. Will un-draft the PR once the following is done (based on previous review comments by @guitargeek @hageboeck @amadio @lmoneta and also some other things from myself):; - [x] includes: correct order (matching header, RooFit, ROOT, std) and ROOT includes in quotation marks; - [x] fix ZMQ deprecation warnings; - [x] refactor member names: underscore suffix; - [x] document important things with doxygen; - [x] remove commented out code and TODOs and other junk; - [x] fix copyright headers + author lists (RooFitZMQ: me, Roel; MP: me, Inti, Vince); - [ ] rebase in 2-3 neat commits that all compile and pass tests; - [x] clang-tidy up; - [x] change libzmq builtin back to master after PR is merged: https://github.com/zeromq/libzmq/pull/4266; - [ ] ~use `enum class` instead of template parameters for minimizer function implementation choice~ -> next PR. _Edit 18 Nov 2021:_ the following list is to keep track of unaddressed (at time of wr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9078
https://github.com/root-project/root/pull/9078:2096,Modifiability,refactor,refactor,2096,"FE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are partial derivatives -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize.; > ; > The communication between processes is done using ZeroMQ. The ZeroMQ dependency is wrapped in convenience classes contributed by @roelaaij which here are packaged as RooFitZMQ. Will un-draft the PR once the following is done (based on previous review comments by @guitargeek @hageboeck @amadio @lmoneta and also some other things from myself):; - [x] includes: correct order (matching header, RooFit, ROOT, std) and ROOT includes in quotation marks; - [x] fix ZMQ deprecation warnings; - [x] refactor member names: underscore suffix; - [x] document important things with doxygen; - [x] remove commented out code and TODOs and other junk; - [x] fix copyright headers + author lists (RooFitZMQ: me, Roel; MP: me, Inti, Vince); - [ ] rebase in 2-3 neat commits that all compile and pass tests; - [x] clang-tidy up; - [x] change libzmq builtin back to master after PR is merged: https://github.com/zeromq/libzmq/pull/4266; - [ ] ~use `enum class` instead of template parameters for minimizer function implementation choice~ -> next PR. _Edit 18 Nov 2021:_ the following list is to keep track of unaddressed (at time of writing) comments made in this thread (because the thread is so long that it is very inconvenient to navigate on GitHub which doesn't load it all at once):; - [x] https://github.com/root-project/root/pull/9078#pullrequestreview-773656413: only need to rebase, but that is already listed above. ; - [x] https://github.com/root-project/root/pull/9078#pullrequestreview-790026907: we have to double check whether the buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9078
https://github.com/root-project/root/pull/9078:2853,Performance,load,load,2853," as RooFitZMQ. Will un-draft the PR once the following is done (based on previous review comments by @guitargeek @hageboeck @amadio @lmoneta and also some other things from myself):; - [x] includes: correct order (matching header, RooFit, ROOT, std) and ROOT includes in quotation marks; - [x] fix ZMQ deprecation warnings; - [x] refactor member names: underscore suffix; - [x] document important things with doxygen; - [x] remove commented out code and TODOs and other junk; - [x] fix copyright headers + author lists (RooFitZMQ: me, Roel; MP: me, Inti, Vince); - [ ] rebase in 2-3 neat commits that all compile and pass tests; - [x] clang-tidy up; - [x] change libzmq builtin back to master after PR is merged: https://github.com/zeromq/libzmq/pull/4266; - [ ] ~use `enum class` instead of template parameters for minimizer function implementation choice~ -> next PR. _Edit 18 Nov 2021:_ the following list is to keep track of unaddressed (at time of writing) comments made in this thread (because the thread is so long that it is very inconvenient to navigate on GitHub which doesn't load it all at once):; - [x] https://github.com/root-project/root/pull/9078#pullrequestreview-773656413: only need to rebase, but that is already listed above. ; - [x] https://github.com/root-project/root/pull/9078#pullrequestreview-790026907: we have to double check whether the build issues still exist. They should be gone, because we don't build dictionaries anymore.; - [x] https://github.com/root-project/root/pull/9078#discussion_r736998615: Related to the issue above, iiuc, because the include was missing from the dictionary, so this can probably also be marked resolved now.; - [x] https://github.com/root-project/root/pull/9078#pullrequestreview-791797535: change `inc` to `res` in RooFitZMQ and MultiProcess and only include these zmq header exposing include directories to specific targets that need them using `target_include_directories`. This way, we don't transitively expose zmq includes to ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9078
https://github.com/root-project/root/pull/9078:1320,Safety,safe,safety,1320,"self. [This patch has now been included in libzmq proper](https://github.com/zeromq/libzmq/pull/4255). Another blocking review comment was that libzmq symbols must not be allowed to be exported through our libraries. [This has been solved in theory, and in practice is pending another PR to libzmq](https://github.com/zeromq/libzmq/pull/4266). Having fixed these two blockers, we should now be able to continue. To recap:. > In this PR, we introduce two packages: RooFitZMQ and RooFit::MultiProcess. It also adds two builtins for ZeroMQ to ease dependency management: libzmq and cppzmq. The builtin for libzmq is especially necessary at this point because it has recently gained a necessary feature that has not been released yet.; > ; > RooFit::MultiProcess is a task-based parallelization framework.; > ; > It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are partial derivatives -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize.; > ; > The communication between processes is done using ZeroMQ. The ZeroMQ dependency is wrapped in convenience classes contributed by @roelaaij which here are packaged as RooFitZMQ. Will un-draft the PR once the following is done (based on previous review comments by @guitargeek @hageboeck @amadio @lmoneta and also some other things from myself):; - [x] includes: correct order (matching header, RooFit, ROOT, std) and ROOT includes in quotation marks; - [x] fix ZMQ deprecation warnings; - [x] refactor member names: underscore suffix; - [x] document important things with doxygen; - [x] remove comment",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9078
https://github.com/root-project/root/pull/9078:3740,Security,expose,expose,3740,"re suffix; - [x] document important things with doxygen; - [x] remove commented out code and TODOs and other junk; - [x] fix copyright headers + author lists (RooFitZMQ: me, Roel; MP: me, Inti, Vince); - [ ] rebase in 2-3 neat commits that all compile and pass tests; - [x] clang-tidy up; - [x] change libzmq builtin back to master after PR is merged: https://github.com/zeromq/libzmq/pull/4266; - [ ] ~use `enum class` instead of template parameters for minimizer function implementation choice~ -> next PR. _Edit 18 Nov 2021:_ the following list is to keep track of unaddressed (at time of writing) comments made in this thread (because the thread is so long that it is very inconvenient to navigate on GitHub which doesn't load it all at once):; - [x] https://github.com/root-project/root/pull/9078#pullrequestreview-773656413: only need to rebase, but that is already listed above. ; - [x] https://github.com/root-project/root/pull/9078#pullrequestreview-790026907: we have to double check whether the build issues still exist. They should be gone, because we don't build dictionaries anymore.; - [x] https://github.com/root-project/root/pull/9078#discussion_r736998615: Related to the issue above, iiuc, because the include was missing from the dictionary, so this can probably also be marked resolved now.; - [x] https://github.com/root-project/root/pull/9078#pullrequestreview-791797535: change `inc` to `res` in RooFitZMQ and MultiProcess and only include these zmq header exposing include directories to specific targets that need them using `target_include_directories`. This way, we don't transitively expose zmq includes to ROOT users.; - [x] https://github.com/root-project/root/pull/9078#pullrequestreview-791786326: The above solution also circumvents this issue with `ZMQ_ENABLE_DRAFT` preprocessor defines.; - [x] https://github.com/root-project/root/pull/9078#pullrequestreview-791883192: change copyright/license headers. Let me know if you find additional items for the todo list.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9078
https://github.com/root-project/root/pull/9078:2388,Testability,test,tests,2388,"FE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are partial derivatives -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize.; > ; > The communication between processes is done using ZeroMQ. The ZeroMQ dependency is wrapped in convenience classes contributed by @roelaaij which here are packaged as RooFitZMQ. Will un-draft the PR once the following is done (based on previous review comments by @guitargeek @hageboeck @amadio @lmoneta and also some other things from myself):; - [x] includes: correct order (matching header, RooFit, ROOT, std) and ROOT includes in quotation marks; - [x] fix ZMQ deprecation warnings; - [x] refactor member names: underscore suffix; - [x] document important things with doxygen; - [x] remove commented out code and TODOs and other junk; - [x] fix copyright headers + author lists (RooFitZMQ: me, Roel; MP: me, Inti, Vince); - [ ] rebase in 2-3 neat commits that all compile and pass tests; - [x] clang-tidy up; - [x] change libzmq builtin back to master after PR is merged: https://github.com/zeromq/libzmq/pull/4266; - [ ] ~use `enum class` instead of template parameters for minimizer function implementation choice~ -> next PR. _Edit 18 Nov 2021:_ the following list is to keep track of unaddressed (at time of writing) comments made in this thread (because the thread is so long that it is very inconvenient to navigate on GitHub which doesn't load it all at once):; - [x] https://github.com/root-project/root/pull/9078#pullrequestreview-773656413: only need to rebase, but that is already listed above. ; - [x] https://github.com/root-project/root/pull/9078#pullrequestreview-790026907: we have to double check whether the buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9078
https://github.com/root-project/root/issues/9079:92,Availability,error,error,92,"- [x] Checked for duplicates. ### Describe the bug; During compilation, I get the following error:; ```; [6/20] Running utility command for SofieCompileModels_PyTorch; Torch Version: 1.7.0; RecursiveScriptModule(; original_name=Model; (fc1): RecursiveScriptModule(original_name=Linear); (relu): RecursiveScriptModule(original_name=ReLU); ); RecursiveScriptModule(; original_name=Model; (fc1): RecursiveScriptModule(original_name=Linear); (relu): RecursiveScriptModule(original_name=ReLU); ); libc++abi: terminating with uncaught exception of type std::runtime_error: TMVA::SOFIE - Parsing PyTorch node onnx::Shape is not yet supported ; /bin/sh: line 1: 21308 Abort trap: 6 ./emitFromPyTorch; ```. ### Expected behavior; I expect this to just compile. I believe the problem may lie with the PyTorch version I had installed, 1.7.0. CMake should detect the version and disable incompatible tests. Indeed, installing PyTorch 1.9.1 makes the problem go away. ### To Reproduce; Install PyTorch 1.7.0 with conda or pip, make sure it's in your PATH so CMake detects it, and build the `SofieCompileModels_PyTorch` target. ### Setup; 1. ROOT version: master; 2. Operating system: macOS 11.6; 3. How you obtained ROOT: built it myself",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9079
https://github.com/root-project/root/issues/9079:813,Deployability,install,installed,813,"- [x] Checked for duplicates. ### Describe the bug; During compilation, I get the following error:; ```; [6/20] Running utility command for SofieCompileModels_PyTorch; Torch Version: 1.7.0; RecursiveScriptModule(; original_name=Model; (fc1): RecursiveScriptModule(original_name=Linear); (relu): RecursiveScriptModule(original_name=ReLU); ); RecursiveScriptModule(; original_name=Model; (fc1): RecursiveScriptModule(original_name=Linear); (relu): RecursiveScriptModule(original_name=ReLU); ); libc++abi: terminating with uncaught exception of type std::runtime_error: TMVA::SOFIE - Parsing PyTorch node onnx::Shape is not yet supported ; /bin/sh: line 1: 21308 Abort trap: 6 ./emitFromPyTorch; ```. ### Expected behavior; I expect this to just compile. I believe the problem may lie with the PyTorch version I had installed, 1.7.0. CMake should detect the version and disable incompatible tests. Indeed, installing PyTorch 1.9.1 makes the problem go away. ### To Reproduce; Install PyTorch 1.7.0 with conda or pip, make sure it's in your PATH so CMake detects it, and build the `SofieCompileModels_PyTorch` target. ### Setup; 1. ROOT version: master; 2. Operating system: macOS 11.6; 3. How you obtained ROOT: built it myself",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9079
https://github.com/root-project/root/issues/9079:903,Deployability,install,installing,903,"- [x] Checked for duplicates. ### Describe the bug; During compilation, I get the following error:; ```; [6/20] Running utility command for SofieCompileModels_PyTorch; Torch Version: 1.7.0; RecursiveScriptModule(; original_name=Model; (fc1): RecursiveScriptModule(original_name=Linear); (relu): RecursiveScriptModule(original_name=ReLU); ); RecursiveScriptModule(; original_name=Model; (fc1): RecursiveScriptModule(original_name=Linear); (relu): RecursiveScriptModule(original_name=ReLU); ); libc++abi: terminating with uncaught exception of type std::runtime_error: TMVA::SOFIE - Parsing PyTorch node onnx::Shape is not yet supported ; /bin/sh: line 1: 21308 Abort trap: 6 ./emitFromPyTorch; ```. ### Expected behavior; I expect this to just compile. I believe the problem may lie with the PyTorch version I had installed, 1.7.0. CMake should detect the version and disable incompatible tests. Indeed, installing PyTorch 1.9.1 makes the problem go away. ### To Reproduce; Install PyTorch 1.7.0 with conda or pip, make sure it's in your PATH so CMake detects it, and build the `SofieCompileModels_PyTorch` target. ### Setup; 1. ROOT version: master; 2. Operating system: macOS 11.6; 3. How you obtained ROOT: built it myself",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9079
https://github.com/root-project/root/issues/9079:973,Deployability,Install,Install,973,"- [x] Checked for duplicates. ### Describe the bug; During compilation, I get the following error:; ```; [6/20] Running utility command for SofieCompileModels_PyTorch; Torch Version: 1.7.0; RecursiveScriptModule(; original_name=Model; (fc1): RecursiveScriptModule(original_name=Linear); (relu): RecursiveScriptModule(original_name=ReLU); ); RecursiveScriptModule(; original_name=Model; (fc1): RecursiveScriptModule(original_name=Linear); (relu): RecursiveScriptModule(original_name=ReLU); ); libc++abi: terminating with uncaught exception of type std::runtime_error: TMVA::SOFIE - Parsing PyTorch node onnx::Shape is not yet supported ; /bin/sh: line 1: 21308 Abort trap: 6 ./emitFromPyTorch; ```. ### Expected behavior; I expect this to just compile. I believe the problem may lie with the PyTorch version I had installed, 1.7.0. CMake should detect the version and disable incompatible tests. Indeed, installing PyTorch 1.9.1 makes the problem go away. ### To Reproduce; Install PyTorch 1.7.0 with conda or pip, make sure it's in your PATH so CMake detects it, and build the `SofieCompileModels_PyTorch` target. ### Setup; 1. ROOT version: master; 2. Operating system: macOS 11.6; 3. How you obtained ROOT: built it myself",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9079
https://github.com/root-project/root/issues/9079:660,Safety,Abort,Abort,660,"- [x] Checked for duplicates. ### Describe the bug; During compilation, I get the following error:; ```; [6/20] Running utility command for SofieCompileModels_PyTorch; Torch Version: 1.7.0; RecursiveScriptModule(; original_name=Model; (fc1): RecursiveScriptModule(original_name=Linear); (relu): RecursiveScriptModule(original_name=ReLU); ); RecursiveScriptModule(; original_name=Model; (fc1): RecursiveScriptModule(original_name=Linear); (relu): RecursiveScriptModule(original_name=ReLU); ); libc++abi: terminating with uncaught exception of type std::runtime_error: TMVA::SOFIE - Parsing PyTorch node onnx::Shape is not yet supported ; /bin/sh: line 1: 21308 Abort trap: 6 ./emitFromPyTorch; ```. ### Expected behavior; I expect this to just compile. I believe the problem may lie with the PyTorch version I had installed, 1.7.0. CMake should detect the version and disable incompatible tests. Indeed, installing PyTorch 1.9.1 makes the problem go away. ### To Reproduce; Install PyTorch 1.7.0 with conda or pip, make sure it's in your PATH so CMake detects it, and build the `SofieCompileModels_PyTorch` target. ### Setup; 1. ROOT version: master; 2. Operating system: macOS 11.6; 3. How you obtained ROOT: built it myself",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9079
https://github.com/root-project/root/issues/9079:844,Safety,detect,detect,844,"- [x] Checked for duplicates. ### Describe the bug; During compilation, I get the following error:; ```; [6/20] Running utility command for SofieCompileModels_PyTorch; Torch Version: 1.7.0; RecursiveScriptModule(; original_name=Model; (fc1): RecursiveScriptModule(original_name=Linear); (relu): RecursiveScriptModule(original_name=ReLU); ); RecursiveScriptModule(; original_name=Model; (fc1): RecursiveScriptModule(original_name=Linear); (relu): RecursiveScriptModule(original_name=ReLU); ); libc++abi: terminating with uncaught exception of type std::runtime_error: TMVA::SOFIE - Parsing PyTorch node onnx::Shape is not yet supported ; /bin/sh: line 1: 21308 Abort trap: 6 ./emitFromPyTorch; ```. ### Expected behavior; I expect this to just compile. I believe the problem may lie with the PyTorch version I had installed, 1.7.0. CMake should detect the version and disable incompatible tests. Indeed, installing PyTorch 1.9.1 makes the problem go away. ### To Reproduce; Install PyTorch 1.7.0 with conda or pip, make sure it's in your PATH so CMake detects it, and build the `SofieCompileModels_PyTorch` target. ### Setup; 1. ROOT version: master; 2. Operating system: macOS 11.6; 3. How you obtained ROOT: built it myself",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9079
https://github.com/root-project/root/issues/9079:1051,Safety,detect,detects,1051,"- [x] Checked for duplicates. ### Describe the bug; During compilation, I get the following error:; ```; [6/20] Running utility command for SofieCompileModels_PyTorch; Torch Version: 1.7.0; RecursiveScriptModule(; original_name=Model; (fc1): RecursiveScriptModule(original_name=Linear); (relu): RecursiveScriptModule(original_name=ReLU); ); RecursiveScriptModule(; original_name=Model; (fc1): RecursiveScriptModule(original_name=Linear); (relu): RecursiveScriptModule(original_name=ReLU); ); libc++abi: terminating with uncaught exception of type std::runtime_error: TMVA::SOFIE - Parsing PyTorch node onnx::Shape is not yet supported ; /bin/sh: line 1: 21308 Abort trap: 6 ./emitFromPyTorch; ```. ### Expected behavior; I expect this to just compile. I believe the problem may lie with the PyTorch version I had installed, 1.7.0. CMake should detect the version and disable incompatible tests. Indeed, installing PyTorch 1.9.1 makes the problem go away. ### To Reproduce; Install PyTorch 1.7.0 with conda or pip, make sure it's in your PATH so CMake detects it, and build the `SofieCompileModels_PyTorch` target. ### Setup; 1. ROOT version: master; 2. Operating system: macOS 11.6; 3. How you obtained ROOT: built it myself",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9079
https://github.com/root-project/root/issues/9079:888,Testability,test,tests,888,"- [x] Checked for duplicates. ### Describe the bug; During compilation, I get the following error:; ```; [6/20] Running utility command for SofieCompileModels_PyTorch; Torch Version: 1.7.0; RecursiveScriptModule(; original_name=Model; (fc1): RecursiveScriptModule(original_name=Linear); (relu): RecursiveScriptModule(original_name=ReLU); ); RecursiveScriptModule(; original_name=Model; (fc1): RecursiveScriptModule(original_name=Linear); (relu): RecursiveScriptModule(original_name=ReLU); ); libc++abi: terminating with uncaught exception of type std::runtime_error: TMVA::SOFIE - Parsing PyTorch node onnx::Shape is not yet supported ; /bin/sh: line 1: 21308 Abort trap: 6 ./emitFromPyTorch; ```. ### Expected behavior; I expect this to just compile. I believe the problem may lie with the PyTorch version I had installed, 1.7.0. CMake should detect the version and disable incompatible tests. Indeed, installing PyTorch 1.9.1 makes the problem go away. ### To Reproduce; Install PyTorch 1.7.0 with conda or pip, make sure it's in your PATH so CMake detects it, and build the `SofieCompileModels_PyTorch` target. ### Setup; 1. ROOT version: master; 2. Operating system: macOS 11.6; 3. How you obtained ROOT: built it myself",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9079
https://github.com/root-project/root/pull/9083:43,Integrability,depend,depending,43,- Set the `-std:c++14` / `-std:c++17` flag depending on the version of Visual Studio (only if building outside ROOT); - Split the one line exports in three lines to fix a potential issue with Ninja on Windows (missing a white space between each `/EXPORT:` specifier),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9083
https://github.com/root-project/root/pull/9084:16,Availability,error,error,16,Fix compilation error of TBB with the coming soon Visual Studio 2022 (using MSBuild instead of devenv) and silence a couple of deprecation warnings with `-std:c++17`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9084
https://github.com/root-project/root/pull/9086:588,Deployability,release,release,588,"Adds support for sending RDataFrame computations to a distributed Dask cluster. This looks like. ```python; import ROOT; from dask.distributed import Client; RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. # In a Python script the Dask client needs to be initalized in a context; # Jupyter notebooks / Python session don't need this; if __name__ == ""__main__"":; client = Client(""SCHEDULER_ADDRESS""); df = RDataFrame(""mytree"",""myfile.root"", daskclient=client); # Proceed as usual; df.Define(""x"",""someoperation"").Histo1D(""x""); ```. Missing pieces:; - [ ] The current way to release the GIL in the mapper function of the `Base` backend assumes the first result of the list is a `RResultPtr` in order to be able to set the `__release_gil__` attribute on its `GetValue` function. I.e. this doesn't work for all operations, such as `AsNumpy` or `Snapshot` that do not return a `RResultPtr`; - [ ] Tutorial; - [ ] Tests",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9086
https://github.com/root-project/root/pull/9086:923,Testability,Test,Tests,923,"Adds support for sending RDataFrame computations to a distributed Dask cluster. This looks like. ```python; import ROOT; from dask.distributed import Client; RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. # In a Python script the Dask client needs to be initalized in a context; # Jupyter notebooks / Python session don't need this; if __name__ == ""__main__"":; client = Client(""SCHEDULER_ADDRESS""); df = RDataFrame(""mytree"",""myfile.root"", daskclient=client); # Proceed as usual; df.Define(""x"",""someoperation"").Histo1D(""x""); ```. Missing pieces:; - [ ] The current way to release the GIL in the mapper function of the `Base` backend assumes the first result of the list is a `RResultPtr` in order to be able to set the `__release_gil__` attribute on its `GetValue` function. I.e. this doesn't work for all operations, such as `AsNumpy` or `Snapshot` that do not return a `RResultPtr`; - [ ] Tutorial; - [ ] Tests",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9086
https://github.com/root-project/root/issues/9087:1815,Availability,down,download,1815,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When running an RDataFrame-based analysis macro with ~1000 histogram outputs (each of them has 20000 bins) on a 8-core laptop (16 logical processors), `EnableImplicitMT()` cause ROOT to use up the 32GB RAM and ~30GB swap space. This sometimes causes segmentation violation. Workaround: Drop the line `EnableImplicitMT()`. Related issue: #6676 . ### Expected behavior; Get a way to reduce/restrict the RAM usage of RDataFrame when `EnableImplicitMT()`. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup. 1. ROOT version: 6.25/01 built against revision 24ea49d4702ba0aa9b1ea5521950520154ee151c from the master branch; ```console; $ root --version; ROOT Version: 6.25/01; Built for linuxx8664gcc on Jan 01 1980, 00:00:00; From @; ```; 2. Operating system: NixOS, x86_64-linux; ```console; $ nix-info -m; - system: `""x86_64-linux""`; - host os: `Linux 5.10.67, NixOS, 21.05.20210922.83413f4 (Okapi)`; - multi-user?: `yes`; - sandbox: `yes`; - version: `nix-env (Nix) 2.4pre20210908_3c56f62`; - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`; ```; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; Custom build from source with the Nix package manager. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9087
https://github.com/root-project/root/issues/9087:1797,Deployability,install,install,1797,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When running an RDataFrame-based analysis macro with ~1000 histogram outputs (each of them has 20000 bins) on a 8-core laptop (16 logical processors), `EnableImplicitMT()` cause ROOT to use up the 32GB RAM and ~30GB swap space. This sometimes causes segmentation violation. Workaround: Drop the line `EnableImplicitMT()`. Related issue: #6676 . ### Expected behavior; Get a way to reduce/restrict the RAM usage of RDataFrame when `EnableImplicitMT()`. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup. 1. ROOT version: 6.25/01 built against revision 24ea49d4702ba0aa9b1ea5521950520154ee151c from the master branch; ```console; $ root --version; ROOT Version: 6.25/01; Built for linuxx8664gcc on Jan 01 1980, 00:00:00; From @; ```; 2. Operating system: NixOS, x86_64-linux; ```console; $ nix-info -m; - system: `""x86_64-linux""`; - host os: `Linux 5.10.67, NixOS, 21.05.20210922.83413f4 (Okapi)`; - multi-user?: `yes`; - sandbox: `yes`; - version: `nix-env (Nix) 2.4pre20210908_3c56f62`; - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`; ```; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; Custom build from source with the Nix package manager. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9087
https://github.com/root-project/root/issues/9087:839,Energy Efficiency,reduce,reduce,839,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When running an RDataFrame-based analysis macro with ~1000 histogram outputs (each of them has 20000 bins) on a 8-core laptop (16 logical processors), `EnableImplicitMT()` cause ROOT to use up the 32GB RAM and ~30GB swap space. This sometimes causes segmentation violation. Workaround: Drop the line `EnableImplicitMT()`. Related issue: #6676 . ### Expected behavior; Get a way to reduce/restrict the RAM usage of RDataFrame when `EnableImplicitMT()`. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup. 1. ROOT version: 6.25/01 built against revision 24ea49d4702ba0aa9b1ea5521950520154ee151c from the master branch; ```console; $ root --version; ROOT Version: 6.25/01; Built for linuxx8664gcc on Jan 01 1980, 00:00:00; From @; ```; 2. Operating system: NixOS, x86_64-linux; ```console; $ nix-info -m; - system: `""x86_64-linux""`; - host os: `Linux 5.10.67, NixOS, 21.05.20210922.83413f4 (Okapi)`; - multi-user?: `yes`; - sandbox: `yes`; - version: `nix-env (Nix) 2.4pre20210908_3c56f62`; - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`; ```; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; Custom build from source with the Nix package manager. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9087
https://github.com/root-project/root/issues/9087:1621,Modifiability,sandbox,sandbox,1621,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When running an RDataFrame-based analysis macro with ~1000 histogram outputs (each of them has 20000 bins) on a 8-core laptop (16 logical processors), `EnableImplicitMT()` cause ROOT to use up the 32GB RAM and ~30GB swap space. This sometimes causes segmentation violation. Workaround: Drop the line `EnableImplicitMT()`. Related issue: #6676 . ### Expected behavior; Get a way to reduce/restrict the RAM usage of RDataFrame when `EnableImplicitMT()`. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup. 1. ROOT version: 6.25/01 built against revision 24ea49d4702ba0aa9b1ea5521950520154ee151c from the master branch; ```console; $ root --version; ROOT Version: 6.25/01; Built for linuxx8664gcc on Jan 01 1980, 00:00:00; From @; ```; 2. Operating system: NixOS, x86_64-linux; ```console; $ nix-info -m; - system: `""x86_64-linux""`; - host os: `Linux 5.10.67, NixOS, 21.05.20210922.83413f4 (Okapi)`; - multi-user?: `yes`; - sandbox: `yes`; - version: `nix-env (Nix) 2.4pre20210908_3c56f62`; - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`; ```; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; Custom build from source with the Nix package manager. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9087
https://github.com/root-project/root/issues/9087:588,Testability,log,logical,588,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When running an RDataFrame-based analysis macro with ~1000 histogram outputs (each of them has 20000 bins) on a 8-core laptop (16 logical processors), `EnableImplicitMT()` cause ROOT to use up the 32GB RAM and ~30GB swap space. This sometimes causes segmentation violation. Workaround: Drop the line `EnableImplicitMT()`. Related issue: #6676 . ### Expected behavior; Get a way to reduce/restrict the RAM usage of RDataFrame when `EnableImplicitMT()`. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup. 1. ROOT version: 6.25/01 built against revision 24ea49d4702ba0aa9b1ea5521950520154ee151c from the master branch; ```console; $ root --version; ROOT Version: 6.25/01; Built for linuxx8664gcc on Jan 01 1980, 00:00:00; From @; ```; 2. Operating system: NixOS, x86_64-linux; ```console; $ nix-info -m; - system: `""x86_64-linux""`; - host os: `Linux 5.10.67, NixOS, 21.05.20210922.83413f4 (Okapi)`; - multi-user?: `yes`; - sandbox: `yes`; - version: `nix-env (Nix) 2.4pre20210908_3c56f62`; - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`; ```; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; Custom build from source with the Nix package manager. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9087
https://github.com/root-project/root/issues/9087:1621,Testability,sandbox,sandbox,1621,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When running an RDataFrame-based analysis macro with ~1000 histogram outputs (each of them has 20000 bins) on a 8-core laptop (16 logical processors), `EnableImplicitMT()` cause ROOT to use up the 32GB RAM and ~30GB swap space. This sometimes causes segmentation violation. Workaround: Drop the line `EnableImplicitMT()`. Related issue: #6676 . ### Expected behavior; Get a way to reduce/restrict the RAM usage of RDataFrame when `EnableImplicitMT()`. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup. 1. ROOT version: 6.25/01 built against revision 24ea49d4702ba0aa9b1ea5521950520154ee151c from the master branch; ```console; $ root --version; ROOT Version: 6.25/01; Built for linuxx8664gcc on Jan 01 1980, 00:00:00; From @; ```; 2. Operating system: NixOS, x86_64-linux; ```console; $ nix-info -m; - system: `""x86_64-linux""`; - host os: `Linux 5.10.67, NixOS, 21.05.20210922.83413f4 (Okapi)`; - multi-user?: `yes`; - sandbox: `yes`; - version: `nix-env (Nix) 2.4pre20210908_3c56f62`; - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`; ```; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; Custom build from source with the Nix package manager. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9087
https://github.com/root-project/root/issues/9087:391,Usability,clear,clear,391,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When running an RDataFrame-based analysis macro with ~1000 histogram outputs (each of them has 20000 bins) on a 8-core laptop (16 logical processors), `EnableImplicitMT()` cause ROOT to use up the 32GB RAM and ~30GB swap space. This sometimes causes segmentation violation. Workaround: Drop the line `EnableImplicitMT()`. Related issue: #6676 . ### Expected behavior; Get a way to reduce/restrict the RAM usage of RDataFrame when `EnableImplicitMT()`. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup. 1. ROOT version: 6.25/01 built against revision 24ea49d4702ba0aa9b1ea5521950520154ee151c from the master branch; ```console; $ root --version; ROOT Version: 6.25/01; Built for linuxx8664gcc on Jan 01 1980, 00:00:00; From @; ```; 2. Operating system: NixOS, x86_64-linux; ```console; $ nix-info -m; - system: `""x86_64-linux""`; - host os: `Linux 5.10.67, NixOS, 21.05.20210922.83413f4 (Okapi)`; - multi-user?: `yes`; - sandbox: `yes`; - version: `nix-env (Nix) 2.4pre20210908_3c56f62`; - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`; ```; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; Custom build from source with the Nix package manager. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9087
https://github.com/root-project/root/issues/9090:280,Modifiability,config,config,280,"### Explain what you would like to see improved; ROOT migrated some time ago from Makefile to CMakeLists, but there are a couple of places where there are still some legacy Makefiles, check https://github.com/root-project/root/find/master:. ```; test/Makefile; etc/Makefile.arch; config/Makefile.in; test/Makefile.win32; test/rhtml/Makefile; test/RootIDE/Makefile; test/periodic/Makefile; config/Makefile-comp.in; tutorials/tmva/makefile; test/RootShower/Makefile; test/histviewer/Makefile; test/rhtml/Makefile.win32; gui/fitpanel/test/Makefile; math/smatrix/test/Makefile; proof/doc/confman/Makefile; test/RootIDE/Makefile.win32; math/genvector/test/Makefile; test/ProofBench/Makefile_event; test/RootShower/Makefile.win32; math/mathcore/test/fit/Makefile; test/dt_Makefile; core/textinput/src/textinput/Makefile; documentation/*/Makefile; graf2d/asimage/src/libAfterImage/Makefile.in; graf2d/asimage/src/libAfterImage/configure.in; ```. ### Optional: share how it could be improved; It could be done all via CMakeLists to be more homogeneous. This allows easier overview from IDEs like QtCreator that show the whole CMake subdirectories and subprojects. Moreover, it also allows to pass correctly or more easily the CMAKE_CXX_STANDARD to subprojects. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |; | From heads/master@v6-25-01-1584-g068c20d159 |; | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. ```. ### Additional context; https://github.com/root-project/root/issues/8125#issuecomment-841519742",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9090
https://github.com/root-project/root/issues/9090:389,Modifiability,config,config,389,"### Explain what you would like to see improved; ROOT migrated some time ago from Makefile to CMakeLists, but there are a couple of places where there are still some legacy Makefiles, check https://github.com/root-project/root/find/master:. ```; test/Makefile; etc/Makefile.arch; config/Makefile.in; test/Makefile.win32; test/rhtml/Makefile; test/RootIDE/Makefile; test/periodic/Makefile; config/Makefile-comp.in; tutorials/tmva/makefile; test/RootShower/Makefile; test/histviewer/Makefile; test/rhtml/Makefile.win32; gui/fitpanel/test/Makefile; math/smatrix/test/Makefile; proof/doc/confman/Makefile; test/RootIDE/Makefile.win32; math/genvector/test/Makefile; test/ProofBench/Makefile_event; test/RootShower/Makefile.win32; math/mathcore/test/fit/Makefile; test/dt_Makefile; core/textinput/src/textinput/Makefile; documentation/*/Makefile; graf2d/asimage/src/libAfterImage/Makefile.in; graf2d/asimage/src/libAfterImage/configure.in; ```. ### Optional: share how it could be improved; It could be done all via CMakeLists to be more homogeneous. This allows easier overview from IDEs like QtCreator that show the whole CMake subdirectories and subprojects. Moreover, it also allows to pass correctly or more easily the CMAKE_CXX_STANDARD to subprojects. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |; | From heads/master@v6-25-01-1584-g068c20d159 |; | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. ```. ### Additional context; https://github.com/root-project/root/issues/8125#issuecomment-841519742",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9090
https://github.com/root-project/root/issues/9090:920,Modifiability,config,configure,920,"### Explain what you would like to see improved; ROOT migrated some time ago from Makefile to CMakeLists, but there are a couple of places where there are still some legacy Makefiles, check https://github.com/root-project/root/find/master:. ```; test/Makefile; etc/Makefile.arch; config/Makefile.in; test/Makefile.win32; test/rhtml/Makefile; test/RootIDE/Makefile; test/periodic/Makefile; config/Makefile-comp.in; tutorials/tmva/makefile; test/RootShower/Makefile; test/histviewer/Makefile; test/rhtml/Makefile.win32; gui/fitpanel/test/Makefile; math/smatrix/test/Makefile; proof/doc/confman/Makefile; test/RootIDE/Makefile.win32; math/genvector/test/Makefile; test/ProofBench/Makefile_event; test/RootShower/Makefile.win32; math/mathcore/test/fit/Makefile; test/dt_Makefile; core/textinput/src/textinput/Makefile; documentation/*/Makefile; graf2d/asimage/src/libAfterImage/Makefile.in; graf2d/asimage/src/libAfterImage/configure.in; ```. ### Optional: share how it could be improved; It could be done all via CMakeLists to be more homogeneous. This allows easier overview from IDEs like QtCreator that show the whole CMake subdirectories and subprojects. Moreover, it also allows to pass correctly or more easily the CMAKE_CXX_STANDARD to subprojects. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |; | From heads/master@v6-25-01-1584-g068c20d159 |; | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. ```. ### Additional context; https://github.com/root-project/root/issues/8125#issuecomment-841519742",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9090
https://github.com/root-project/root/issues/9090:246,Testability,test,test,246,"### Explain what you would like to see improved; ROOT migrated some time ago from Makefile to CMakeLists, but there are a couple of places where there are still some legacy Makefiles, check https://github.com/root-project/root/find/master:. ```; test/Makefile; etc/Makefile.arch; config/Makefile.in; test/Makefile.win32; test/rhtml/Makefile; test/RootIDE/Makefile; test/periodic/Makefile; config/Makefile-comp.in; tutorials/tmva/makefile; test/RootShower/Makefile; test/histviewer/Makefile; test/rhtml/Makefile.win32; gui/fitpanel/test/Makefile; math/smatrix/test/Makefile; proof/doc/confman/Makefile; test/RootIDE/Makefile.win32; math/genvector/test/Makefile; test/ProofBench/Makefile_event; test/RootShower/Makefile.win32; math/mathcore/test/fit/Makefile; test/dt_Makefile; core/textinput/src/textinput/Makefile; documentation/*/Makefile; graf2d/asimage/src/libAfterImage/Makefile.in; graf2d/asimage/src/libAfterImage/configure.in; ```. ### Optional: share how it could be improved; It could be done all via CMakeLists to be more homogeneous. This allows easier overview from IDEs like QtCreator that show the whole CMake subdirectories and subprojects. Moreover, it also allows to pass correctly or more easily the CMAKE_CXX_STANDARD to subprojects. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |; | From heads/master@v6-25-01-1584-g068c20d159 |; | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. ```. ### Additional context; https://github.com/root-project/root/issues/8125#issuecomment-841519742",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9090
https://github.com/root-project/root/issues/9090:300,Testability,test,test,300,"### Explain what you would like to see improved; ROOT migrated some time ago from Makefile to CMakeLists, but there are a couple of places where there are still some legacy Makefiles, check https://github.com/root-project/root/find/master:. ```; test/Makefile; etc/Makefile.arch; config/Makefile.in; test/Makefile.win32; test/rhtml/Makefile; test/RootIDE/Makefile; test/periodic/Makefile; config/Makefile-comp.in; tutorials/tmva/makefile; test/RootShower/Makefile; test/histviewer/Makefile; test/rhtml/Makefile.win32; gui/fitpanel/test/Makefile; math/smatrix/test/Makefile; proof/doc/confman/Makefile; test/RootIDE/Makefile.win32; math/genvector/test/Makefile; test/ProofBench/Makefile_event; test/RootShower/Makefile.win32; math/mathcore/test/fit/Makefile; test/dt_Makefile; core/textinput/src/textinput/Makefile; documentation/*/Makefile; graf2d/asimage/src/libAfterImage/Makefile.in; graf2d/asimage/src/libAfterImage/configure.in; ```. ### Optional: share how it could be improved; It could be done all via CMakeLists to be more homogeneous. This allows easier overview from IDEs like QtCreator that show the whole CMake subdirectories and subprojects. Moreover, it also allows to pass correctly or more easily the CMAKE_CXX_STANDARD to subprojects. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |; | From heads/master@v6-25-01-1584-g068c20d159 |; | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. ```. ### Additional context; https://github.com/root-project/root/issues/8125#issuecomment-841519742",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9090
https://github.com/root-project/root/issues/9090:321,Testability,test,test,321,"### Explain what you would like to see improved; ROOT migrated some time ago from Makefile to CMakeLists, but there are a couple of places where there are still some legacy Makefiles, check https://github.com/root-project/root/find/master:. ```; test/Makefile; etc/Makefile.arch; config/Makefile.in; test/Makefile.win32; test/rhtml/Makefile; test/RootIDE/Makefile; test/periodic/Makefile; config/Makefile-comp.in; tutorials/tmva/makefile; test/RootShower/Makefile; test/histviewer/Makefile; test/rhtml/Makefile.win32; gui/fitpanel/test/Makefile; math/smatrix/test/Makefile; proof/doc/confman/Makefile; test/RootIDE/Makefile.win32; math/genvector/test/Makefile; test/ProofBench/Makefile_event; test/RootShower/Makefile.win32; math/mathcore/test/fit/Makefile; test/dt_Makefile; core/textinput/src/textinput/Makefile; documentation/*/Makefile; graf2d/asimage/src/libAfterImage/Makefile.in; graf2d/asimage/src/libAfterImage/configure.in; ```. ### Optional: share how it could be improved; It could be done all via CMakeLists to be more homogeneous. This allows easier overview from IDEs like QtCreator that show the whole CMake subdirectories and subprojects. Moreover, it also allows to pass correctly or more easily the CMAKE_CXX_STANDARD to subprojects. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |; | From heads/master@v6-25-01-1584-g068c20d159 |; | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. ```. ### Additional context; https://github.com/root-project/root/issues/8125#issuecomment-841519742",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9090
https://github.com/root-project/root/issues/9090:342,Testability,test,test,342,"### Explain what you would like to see improved; ROOT migrated some time ago from Makefile to CMakeLists, but there are a couple of places where there are still some legacy Makefiles, check https://github.com/root-project/root/find/master:. ```; test/Makefile; etc/Makefile.arch; config/Makefile.in; test/Makefile.win32; test/rhtml/Makefile; test/RootIDE/Makefile; test/periodic/Makefile; config/Makefile-comp.in; tutorials/tmva/makefile; test/RootShower/Makefile; test/histviewer/Makefile; test/rhtml/Makefile.win32; gui/fitpanel/test/Makefile; math/smatrix/test/Makefile; proof/doc/confman/Makefile; test/RootIDE/Makefile.win32; math/genvector/test/Makefile; test/ProofBench/Makefile_event; test/RootShower/Makefile.win32; math/mathcore/test/fit/Makefile; test/dt_Makefile; core/textinput/src/textinput/Makefile; documentation/*/Makefile; graf2d/asimage/src/libAfterImage/Makefile.in; graf2d/asimage/src/libAfterImage/configure.in; ```. ### Optional: share how it could be improved; It could be done all via CMakeLists to be more homogeneous. This allows easier overview from IDEs like QtCreator that show the whole CMake subdirectories and subprojects. Moreover, it also allows to pass correctly or more easily the CMAKE_CXX_STANDARD to subprojects. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |; | From heads/master@v6-25-01-1584-g068c20d159 |; | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. ```. ### Additional context; https://github.com/root-project/root/issues/8125#issuecomment-841519742",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9090
https://github.com/root-project/root/issues/9090:365,Testability,test,test,365,"### Explain what you would like to see improved; ROOT migrated some time ago from Makefile to CMakeLists, but there are a couple of places where there are still some legacy Makefiles, check https://github.com/root-project/root/find/master:. ```; test/Makefile; etc/Makefile.arch; config/Makefile.in; test/Makefile.win32; test/rhtml/Makefile; test/RootIDE/Makefile; test/periodic/Makefile; config/Makefile-comp.in; tutorials/tmva/makefile; test/RootShower/Makefile; test/histviewer/Makefile; test/rhtml/Makefile.win32; gui/fitpanel/test/Makefile; math/smatrix/test/Makefile; proof/doc/confman/Makefile; test/RootIDE/Makefile.win32; math/genvector/test/Makefile; test/ProofBench/Makefile_event; test/RootShower/Makefile.win32; math/mathcore/test/fit/Makefile; test/dt_Makefile; core/textinput/src/textinput/Makefile; documentation/*/Makefile; graf2d/asimage/src/libAfterImage/Makefile.in; graf2d/asimage/src/libAfterImage/configure.in; ```. ### Optional: share how it could be improved; It could be done all via CMakeLists to be more homogeneous. This allows easier overview from IDEs like QtCreator that show the whole CMake subdirectories and subprojects. Moreover, it also allows to pass correctly or more easily the CMAKE_CXX_STANDARD to subprojects. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |; | From heads/master@v6-25-01-1584-g068c20d159 |; | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. ```. ### Additional context; https://github.com/root-project/root/issues/8125#issuecomment-841519742",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9090
https://github.com/root-project/root/issues/9090:439,Testability,test,test,439,"### Explain what you would like to see improved; ROOT migrated some time ago from Makefile to CMakeLists, but there are a couple of places where there are still some legacy Makefiles, check https://github.com/root-project/root/find/master:. ```; test/Makefile; etc/Makefile.arch; config/Makefile.in; test/Makefile.win32; test/rhtml/Makefile; test/RootIDE/Makefile; test/periodic/Makefile; config/Makefile-comp.in; tutorials/tmva/makefile; test/RootShower/Makefile; test/histviewer/Makefile; test/rhtml/Makefile.win32; gui/fitpanel/test/Makefile; math/smatrix/test/Makefile; proof/doc/confman/Makefile; test/RootIDE/Makefile.win32; math/genvector/test/Makefile; test/ProofBench/Makefile_event; test/RootShower/Makefile.win32; math/mathcore/test/fit/Makefile; test/dt_Makefile; core/textinput/src/textinput/Makefile; documentation/*/Makefile; graf2d/asimage/src/libAfterImage/Makefile.in; graf2d/asimage/src/libAfterImage/configure.in; ```. ### Optional: share how it could be improved; It could be done all via CMakeLists to be more homogeneous. This allows easier overview from IDEs like QtCreator that show the whole CMake subdirectories and subprojects. Moreover, it also allows to pass correctly or more easily the CMAKE_CXX_STANDARD to subprojects. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |; | From heads/master@v6-25-01-1584-g068c20d159 |; | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. ```. ### Additional context; https://github.com/root-project/root/issues/8125#issuecomment-841519742",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9090
https://github.com/root-project/root/issues/9090:465,Testability,test,test,465,"### Explain what you would like to see improved; ROOT migrated some time ago from Makefile to CMakeLists, but there are a couple of places where there are still some legacy Makefiles, check https://github.com/root-project/root/find/master:. ```; test/Makefile; etc/Makefile.arch; config/Makefile.in; test/Makefile.win32; test/rhtml/Makefile; test/RootIDE/Makefile; test/periodic/Makefile; config/Makefile-comp.in; tutorials/tmva/makefile; test/RootShower/Makefile; test/histviewer/Makefile; test/rhtml/Makefile.win32; gui/fitpanel/test/Makefile; math/smatrix/test/Makefile; proof/doc/confman/Makefile; test/RootIDE/Makefile.win32; math/genvector/test/Makefile; test/ProofBench/Makefile_event; test/RootShower/Makefile.win32; math/mathcore/test/fit/Makefile; test/dt_Makefile; core/textinput/src/textinput/Makefile; documentation/*/Makefile; graf2d/asimage/src/libAfterImage/Makefile.in; graf2d/asimage/src/libAfterImage/configure.in; ```. ### Optional: share how it could be improved; It could be done all via CMakeLists to be more homogeneous. This allows easier overview from IDEs like QtCreator that show the whole CMake subdirectories and subprojects. Moreover, it also allows to pass correctly or more easily the CMAKE_CXX_STANDARD to subprojects. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |; | From heads/master@v6-25-01-1584-g068c20d159 |; | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. ```. ### Additional context; https://github.com/root-project/root/issues/8125#issuecomment-841519742",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9090
https://github.com/root-project/root/issues/9090:491,Testability,test,test,491,"### Explain what you would like to see improved; ROOT migrated some time ago from Makefile to CMakeLists, but there are a couple of places where there are still some legacy Makefiles, check https://github.com/root-project/root/find/master:. ```; test/Makefile; etc/Makefile.arch; config/Makefile.in; test/Makefile.win32; test/rhtml/Makefile; test/RootIDE/Makefile; test/periodic/Makefile; config/Makefile-comp.in; tutorials/tmva/makefile; test/RootShower/Makefile; test/histviewer/Makefile; test/rhtml/Makefile.win32; gui/fitpanel/test/Makefile; math/smatrix/test/Makefile; proof/doc/confman/Makefile; test/RootIDE/Makefile.win32; math/genvector/test/Makefile; test/ProofBench/Makefile_event; test/RootShower/Makefile.win32; math/mathcore/test/fit/Makefile; test/dt_Makefile; core/textinput/src/textinput/Makefile; documentation/*/Makefile; graf2d/asimage/src/libAfterImage/Makefile.in; graf2d/asimage/src/libAfterImage/configure.in; ```. ### Optional: share how it could be improved; It could be done all via CMakeLists to be more homogeneous. This allows easier overview from IDEs like QtCreator that show the whole CMake subdirectories and subprojects. Moreover, it also allows to pass correctly or more easily the CMAKE_CXX_STANDARD to subprojects. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |; | From heads/master@v6-25-01-1584-g068c20d159 |; | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. ```. ### Additional context; https://github.com/root-project/root/issues/8125#issuecomment-841519742",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9090
https://github.com/root-project/root/issues/9090:531,Testability,test,test,531,"### Explain what you would like to see improved; ROOT migrated some time ago from Makefile to CMakeLists, but there are a couple of places where there are still some legacy Makefiles, check https://github.com/root-project/root/find/master:. ```; test/Makefile; etc/Makefile.arch; config/Makefile.in; test/Makefile.win32; test/rhtml/Makefile; test/RootIDE/Makefile; test/periodic/Makefile; config/Makefile-comp.in; tutorials/tmva/makefile; test/RootShower/Makefile; test/histviewer/Makefile; test/rhtml/Makefile.win32; gui/fitpanel/test/Makefile; math/smatrix/test/Makefile; proof/doc/confman/Makefile; test/RootIDE/Makefile.win32; math/genvector/test/Makefile; test/ProofBench/Makefile_event; test/RootShower/Makefile.win32; math/mathcore/test/fit/Makefile; test/dt_Makefile; core/textinput/src/textinput/Makefile; documentation/*/Makefile; graf2d/asimage/src/libAfterImage/Makefile.in; graf2d/asimage/src/libAfterImage/configure.in; ```. ### Optional: share how it could be improved; It could be done all via CMakeLists to be more homogeneous. This allows easier overview from IDEs like QtCreator that show the whole CMake subdirectories and subprojects. Moreover, it also allows to pass correctly or more easily the CMAKE_CXX_STANDARD to subprojects. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |; | From heads/master@v6-25-01-1584-g068c20d159 |; | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. ```. ### Additional context; https://github.com/root-project/root/issues/8125#issuecomment-841519742",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9090
https://github.com/root-project/root/issues/9090:559,Testability,test,test,559,"### Explain what you would like to see improved; ROOT migrated some time ago from Makefile to CMakeLists, but there are a couple of places where there are still some legacy Makefiles, check https://github.com/root-project/root/find/master:. ```; test/Makefile; etc/Makefile.arch; config/Makefile.in; test/Makefile.win32; test/rhtml/Makefile; test/RootIDE/Makefile; test/periodic/Makefile; config/Makefile-comp.in; tutorials/tmva/makefile; test/RootShower/Makefile; test/histviewer/Makefile; test/rhtml/Makefile.win32; gui/fitpanel/test/Makefile; math/smatrix/test/Makefile; proof/doc/confman/Makefile; test/RootIDE/Makefile.win32; math/genvector/test/Makefile; test/ProofBench/Makefile_event; test/RootShower/Makefile.win32; math/mathcore/test/fit/Makefile; test/dt_Makefile; core/textinput/src/textinput/Makefile; documentation/*/Makefile; graf2d/asimage/src/libAfterImage/Makefile.in; graf2d/asimage/src/libAfterImage/configure.in; ```. ### Optional: share how it could be improved; It could be done all via CMakeLists to be more homogeneous. This allows easier overview from IDEs like QtCreator that show the whole CMake subdirectories and subprojects. Moreover, it also allows to pass correctly or more easily the CMAKE_CXX_STANDARD to subprojects. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |; | From heads/master@v6-25-01-1584-g068c20d159 |; | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. ```. ### Additional context; https://github.com/root-project/root/issues/8125#issuecomment-841519742",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9090
https://github.com/root-project/root/issues/9090:602,Testability,test,test,602,"### Explain what you would like to see improved; ROOT migrated some time ago from Makefile to CMakeLists, but there are a couple of places where there are still some legacy Makefiles, check https://github.com/root-project/root/find/master:. ```; test/Makefile; etc/Makefile.arch; config/Makefile.in; test/Makefile.win32; test/rhtml/Makefile; test/RootIDE/Makefile; test/periodic/Makefile; config/Makefile-comp.in; tutorials/tmva/makefile; test/RootShower/Makefile; test/histviewer/Makefile; test/rhtml/Makefile.win32; gui/fitpanel/test/Makefile; math/smatrix/test/Makefile; proof/doc/confman/Makefile; test/RootIDE/Makefile.win32; math/genvector/test/Makefile; test/ProofBench/Makefile_event; test/RootShower/Makefile.win32; math/mathcore/test/fit/Makefile; test/dt_Makefile; core/textinput/src/textinput/Makefile; documentation/*/Makefile; graf2d/asimage/src/libAfterImage/Makefile.in; graf2d/asimage/src/libAfterImage/configure.in; ```. ### Optional: share how it could be improved; It could be done all via CMakeLists to be more homogeneous. This allows easier overview from IDEs like QtCreator that show the whole CMake subdirectories and subprojects. Moreover, it also allows to pass correctly or more easily the CMAKE_CXX_STANDARD to subprojects. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |; | From heads/master@v6-25-01-1584-g068c20d159 |; | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. ```. ### Additional context; https://github.com/root-project/root/issues/8125#issuecomment-841519742",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9090
https://github.com/root-project/root/issues/9090:646,Testability,test,test,646,"### Explain what you would like to see improved; ROOT migrated some time ago from Makefile to CMakeLists, but there are a couple of places where there are still some legacy Makefiles, check https://github.com/root-project/root/find/master:. ```; test/Makefile; etc/Makefile.arch; config/Makefile.in; test/Makefile.win32; test/rhtml/Makefile; test/RootIDE/Makefile; test/periodic/Makefile; config/Makefile-comp.in; tutorials/tmva/makefile; test/RootShower/Makefile; test/histviewer/Makefile; test/rhtml/Makefile.win32; gui/fitpanel/test/Makefile; math/smatrix/test/Makefile; proof/doc/confman/Makefile; test/RootIDE/Makefile.win32; math/genvector/test/Makefile; test/ProofBench/Makefile_event; test/RootShower/Makefile.win32; math/mathcore/test/fit/Makefile; test/dt_Makefile; core/textinput/src/textinput/Makefile; documentation/*/Makefile; graf2d/asimage/src/libAfterImage/Makefile.in; graf2d/asimage/src/libAfterImage/configure.in; ```. ### Optional: share how it could be improved; It could be done all via CMakeLists to be more homogeneous. This allows easier overview from IDEs like QtCreator that show the whole CMake subdirectories and subprojects. Moreover, it also allows to pass correctly or more easily the CMAKE_CXX_STANDARD to subprojects. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |; | From heads/master@v6-25-01-1584-g068c20d159 |; | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. ```. ### Additional context; https://github.com/root-project/root/issues/8125#issuecomment-841519742",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9090
https://github.com/root-project/root/issues/9090:661,Testability,test,test,661,"### Explain what you would like to see improved; ROOT migrated some time ago from Makefile to CMakeLists, but there are a couple of places where there are still some legacy Makefiles, check https://github.com/root-project/root/find/master:. ```; test/Makefile; etc/Makefile.arch; config/Makefile.in; test/Makefile.win32; test/rhtml/Makefile; test/RootIDE/Makefile; test/periodic/Makefile; config/Makefile-comp.in; tutorials/tmva/makefile; test/RootShower/Makefile; test/histviewer/Makefile; test/rhtml/Makefile.win32; gui/fitpanel/test/Makefile; math/smatrix/test/Makefile; proof/doc/confman/Makefile; test/RootIDE/Makefile.win32; math/genvector/test/Makefile; test/ProofBench/Makefile_event; test/RootShower/Makefile.win32; math/mathcore/test/fit/Makefile; test/dt_Makefile; core/textinput/src/textinput/Makefile; documentation/*/Makefile; graf2d/asimage/src/libAfterImage/Makefile.in; graf2d/asimage/src/libAfterImage/configure.in; ```. ### Optional: share how it could be improved; It could be done all via CMakeLists to be more homogeneous. This allows easier overview from IDEs like QtCreator that show the whole CMake subdirectories and subprojects. Moreover, it also allows to pass correctly or more easily the CMAKE_CXX_STANDARD to subprojects. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |; | From heads/master@v6-25-01-1584-g068c20d159 |; | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. ```. ### Additional context; https://github.com/root-project/root/issues/8125#issuecomment-841519742",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9090
https://github.com/root-project/root/issues/9090:693,Testability,test,test,693,"### Explain what you would like to see improved; ROOT migrated some time ago from Makefile to CMakeLists, but there are a couple of places where there are still some legacy Makefiles, check https://github.com/root-project/root/find/master:. ```; test/Makefile; etc/Makefile.arch; config/Makefile.in; test/Makefile.win32; test/rhtml/Makefile; test/RootIDE/Makefile; test/periodic/Makefile; config/Makefile-comp.in; tutorials/tmva/makefile; test/RootShower/Makefile; test/histviewer/Makefile; test/rhtml/Makefile.win32; gui/fitpanel/test/Makefile; math/smatrix/test/Makefile; proof/doc/confman/Makefile; test/RootIDE/Makefile.win32; math/genvector/test/Makefile; test/ProofBench/Makefile_event; test/RootShower/Makefile.win32; math/mathcore/test/fit/Makefile; test/dt_Makefile; core/textinput/src/textinput/Makefile; documentation/*/Makefile; graf2d/asimage/src/libAfterImage/Makefile.in; graf2d/asimage/src/libAfterImage/configure.in; ```. ### Optional: share how it could be improved; It could be done all via CMakeLists to be more homogeneous. This allows easier overview from IDEs like QtCreator that show the whole CMake subdirectories and subprojects. Moreover, it also allows to pass correctly or more easily the CMAKE_CXX_STANDARD to subprojects. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |; | From heads/master@v6-25-01-1584-g068c20d159 |; | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. ```. ### Additional context; https://github.com/root-project/root/issues/8125#issuecomment-841519742",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9090
https://github.com/root-project/root/issues/9090:739,Testability,test,test,739,"### Explain what you would like to see improved; ROOT migrated some time ago from Makefile to CMakeLists, but there are a couple of places where there are still some legacy Makefiles, check https://github.com/root-project/root/find/master:. ```; test/Makefile; etc/Makefile.arch; config/Makefile.in; test/Makefile.win32; test/rhtml/Makefile; test/RootIDE/Makefile; test/periodic/Makefile; config/Makefile-comp.in; tutorials/tmva/makefile; test/RootShower/Makefile; test/histviewer/Makefile; test/rhtml/Makefile.win32; gui/fitpanel/test/Makefile; math/smatrix/test/Makefile; proof/doc/confman/Makefile; test/RootIDE/Makefile.win32; math/genvector/test/Makefile; test/ProofBench/Makefile_event; test/RootShower/Makefile.win32; math/mathcore/test/fit/Makefile; test/dt_Makefile; core/textinput/src/textinput/Makefile; documentation/*/Makefile; graf2d/asimage/src/libAfterImage/Makefile.in; graf2d/asimage/src/libAfterImage/configure.in; ```. ### Optional: share how it could be improved; It could be done all via CMakeLists to be more homogeneous. This allows easier overview from IDEs like QtCreator that show the whole CMake subdirectories and subprojects. Moreover, it also allows to pass correctly or more easily the CMAKE_CXX_STANDARD to subprojects. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |; | From heads/master@v6-25-01-1584-g068c20d159 |; | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. ```. ### Additional context; https://github.com/root-project/root/issues/8125#issuecomment-841519742",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9090
https://github.com/root-project/root/issues/9090:758,Testability,test,test,758,"### Explain what you would like to see improved; ROOT migrated some time ago from Makefile to CMakeLists, but there are a couple of places where there are still some legacy Makefiles, check https://github.com/root-project/root/find/master:. ```; test/Makefile; etc/Makefile.arch; config/Makefile.in; test/Makefile.win32; test/rhtml/Makefile; test/RootIDE/Makefile; test/periodic/Makefile; config/Makefile-comp.in; tutorials/tmva/makefile; test/RootShower/Makefile; test/histviewer/Makefile; test/rhtml/Makefile.win32; gui/fitpanel/test/Makefile; math/smatrix/test/Makefile; proof/doc/confman/Makefile; test/RootIDE/Makefile.win32; math/genvector/test/Makefile; test/ProofBench/Makefile_event; test/RootShower/Makefile.win32; math/mathcore/test/fit/Makefile; test/dt_Makefile; core/textinput/src/textinput/Makefile; documentation/*/Makefile; graf2d/asimage/src/libAfterImage/Makefile.in; graf2d/asimage/src/libAfterImage/configure.in; ```. ### Optional: share how it could be improved; It could be done all via CMakeLists to be more homogeneous. This allows easier overview from IDEs like QtCreator that show the whole CMake subdirectories and subprojects. Moreover, it also allows to pass correctly or more easily the CMAKE_CXX_STANDARD to subprojects. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |; | From heads/master@v6-25-01-1584-g068c20d159 |; | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. ```. ### Additional context; https://github.com/root-project/root/issues/8125#issuecomment-841519742",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9090
https://github.com/root-project/root/pull/9093:326,Deployability,update,updated,326,"ROOT ""swallows"" `std::`, and we need to figure out how to handle the namespaces; `std::foo` vs `::foo`. Until we do that, avoid the issue by renaming the only; known ""clash"", using `std::__ROOT` as in several other backport cases. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9093
https://github.com/root-project/root/pull/9093:122,Safety,avoid,avoid,122,"ROOT ""swallows"" `std::`, and we need to figure out how to handle the namespaces; `std::foo` vs `::foo`. Until we do that, avoid the issue by renaming the only; known ""clash"", using `std::__ROOT` as in several other backport cases. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9093
https://github.com/root-project/root/pull/9093:296,Testability,test,tested,296,"ROOT ""swallows"" `std::`, and we need to figure out how to handle the namespaces; `std::foo` vs `::foo`. Until we do that, avoid the issue by renaming the only; known ""clash"", using `std::__ROOT` as in several other backport cases. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9093
https://github.com/root-project/root/pull/9094:44,Deployability,Update,Update,44,Improve RWebWindow/RWebWindowsManager docu; Update JSROOT with recent fixes,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9094
https://github.com/root-project/root/pull/9095:702,Deployability,update,updated,702,"# This Pull request:. [Fix #6981] RDisplay::Print to show more elements from collections. ## Changes or fixes:. AddCollectionToRow() modified so that the first 10 elements of long collections; are to be printed, then followed by ""..."". Previously, only the first and last; elements of collections of size >=3 were printed. Print() logic is now simplified, since after ""..."" there is no guarantee; that there is going to be a next element. Current unit tests were adapted and a new one is added, to test showing; elements around the treshold, i.e. of <10, 10, 11, >11 elements. Regarding #6981 - to display the whole collection, please use AsString(). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #6981",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9095
https://github.com/root-project/root/pull/9095:463,Energy Efficiency,adapt,adapted,463,"# This Pull request:. [Fix #6981] RDisplay::Print to show more elements from collections. ## Changes or fixes:. AddCollectionToRow() modified so that the first 10 elements of long collections; are to be printed, then followed by ""..."". Previously, only the first and last; elements of collections of size >=3 were printed. Print() logic is now simplified, since after ""..."" there is no guarantee; that there is going to be a next element. Current unit tests were adapted and a new one is added, to test showing; elements around the treshold, i.e. of <10, 10, 11, >11 elements. Regarding #6981 - to display the whole collection, please use AsString(). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #6981",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9095
https://github.com/root-project/root/pull/9095:463,Modifiability,adapt,adapted,463,"# This Pull request:. [Fix #6981] RDisplay::Print to show more elements from collections. ## Changes or fixes:. AddCollectionToRow() modified so that the first 10 elements of long collections; are to be printed, then followed by ""..."". Previously, only the first and last; elements of collections of size >=3 were printed. Print() logic is now simplified, since after ""..."" there is no guarantee; that there is going to be a next element. Current unit tests were adapted and a new one is added, to test showing; elements around the treshold, i.e. of <10, 10, 11, >11 elements. Regarding #6981 - to display the whole collection, please use AsString(). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #6981",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9095
https://github.com/root-project/root/pull/9095:331,Testability,log,logic,331,"# This Pull request:. [Fix #6981] RDisplay::Print to show more elements from collections. ## Changes or fixes:. AddCollectionToRow() modified so that the first 10 elements of long collections; are to be printed, then followed by ""..."". Previously, only the first and last; elements of collections of size >=3 were printed. Print() logic is now simplified, since after ""..."" there is no guarantee; that there is going to be a next element. Current unit tests were adapted and a new one is added, to test showing; elements around the treshold, i.e. of <10, 10, 11, >11 elements. Regarding #6981 - to display the whole collection, please use AsString(). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #6981",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9095
https://github.com/root-project/root/pull/9095:452,Testability,test,tests,452,"# This Pull request:. [Fix #6981] RDisplay::Print to show more elements from collections. ## Changes or fixes:. AddCollectionToRow() modified so that the first 10 elements of long collections; are to be printed, then followed by ""..."". Previously, only the first and last; elements of collections of size >=3 were printed. Print() logic is now simplified, since after ""..."" there is no guarantee; that there is going to be a next element. Current unit tests were adapted and a new one is added, to test showing; elements around the treshold, i.e. of <10, 10, 11, >11 elements. Regarding #6981 - to display the whole collection, please use AsString(). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #6981",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9095
https://github.com/root-project/root/pull/9095:498,Testability,test,test,498,"# This Pull request:. [Fix #6981] RDisplay::Print to show more elements from collections. ## Changes or fixes:. AddCollectionToRow() modified so that the first 10 elements of long collections; are to be printed, then followed by ""..."". Previously, only the first and last; elements of collections of size >=3 were printed. Print() logic is now simplified, since after ""..."" there is no guarantee; that there is going to be a next element. Current unit tests were adapted and a new one is added, to test showing; elements around the treshold, i.e. of <10, 10, 11, >11 elements. Regarding #6981 - to display the whole collection, please use AsString(). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #6981",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9095
https://github.com/root-project/root/pull/9095:672,Testability,test,tested,672,"# This Pull request:. [Fix #6981] RDisplay::Print to show more elements from collections. ## Changes or fixes:. AddCollectionToRow() modified so that the first 10 elements of long collections; are to be printed, then followed by ""..."". Previously, only the first and last; elements of collections of size >=3 were printed. Print() logic is now simplified, since after ""..."" there is no guarantee; that there is going to be a next element. Current unit tests were adapted and a new one is added, to test showing; elements around the treshold, i.e. of <10, 10, 11, >11 elements. Regarding #6981 - to display the whole collection, please use AsString(). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #6981",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9095
https://github.com/root-project/root/pull/9095:344,Usability,simpl,simplified,344,"# This Pull request:. [Fix #6981] RDisplay::Print to show more elements from collections. ## Changes or fixes:. AddCollectionToRow() modified so that the first 10 elements of long collections; are to be printed, then followed by ""..."". Previously, only the first and last; elements of collections of size >=3 were printed. Print() logic is now simplified, since after ""..."" there is no guarantee; that there is going to be a next element. Current unit tests were adapted and a new one is added, to test showing; elements around the treshold, i.e. of <10, 10, 11, >11 elements. Regarding #6981 - to display the whole collection, please use AsString(). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #6981",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9095
https://github.com/root-project/root/pull/9096:115,Energy Efficiency,schedul,scheduling,115,"# This Pull request:. In preparation of multi-cluster prefetching, this PR fixes a few issues with the current I/O scheduling, namely:. - It fixes reading of offset columns where currently it can happen that we are by accident jumping back one cluster. This is due to the fact that in order to get the size of a collection in entry $n$, we have to read elements $n$ and $n-1$ of the offset column. Except when we are at the start of the new cluster, where we can simply read the first offset element in the cluster. - A problem in page coalescing of the file backend. The file backend should ensure that while coalescing page requests to a single read requests, we are not reading more than $x$ percent of the actual required payload. This mechanism was potentially breaking if the gaps between pages were all the same size. That's now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9096
https://github.com/root-project/root/pull/9096:463,Usability,simpl,simply,463,"# This Pull request:. In preparation of multi-cluster prefetching, this PR fixes a few issues with the current I/O scheduling, namely:. - It fixes reading of offset columns where currently it can happen that we are by accident jumping back one cluster. This is due to the fact that in order to get the size of a collection in entry $n$, we have to read elements $n$ and $n-1$ of the offset column. Except when we are at the start of the new cluster, where we can simply read the first offset element in the cluster. - A problem in page coalescing of the file backend. The file backend should ensure that while coalescing page requests to a single read requests, we are not reading more than $x$ percent of the actual required payload. This mechanism was potentially breaking if the gaps between pages were all the same size. That's now fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9096
https://github.com/root-project/root/issues/9098:292,Availability,error,error,292,"There are two functions, [GetErrorYhigh](https://root.cern.ch/doc/master/classTGraphErrors.html#aa4864989829fc9f9b3d132b24d28112b)() and [GetErrorYlow](https://root.cern.ch/doc/master/classTGraphErrors.html#a329d183f60726d97cf543b996b65251f), where the docs erroneously write ""It returns the error along *X* at point i."" - it must be *Y*.; I would fix it myself, but I don't have the recent root source. Maybe it would be worth adding a word about ""high"" and ""low"" errors in the corresponding place. What ""error high"" or ""error"" would be if there is only ""error"" or ""error high""?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9098
https://github.com/root-project/root/issues/9098:465,Availability,error,errors,465,"There are two functions, [GetErrorYhigh](https://root.cern.ch/doc/master/classTGraphErrors.html#aa4864989829fc9f9b3d132b24d28112b)() and [GetErrorYlow](https://root.cern.ch/doc/master/classTGraphErrors.html#a329d183f60726d97cf543b996b65251f), where the docs erroneously write ""It returns the error along *X* at point i."" - it must be *Y*.; I would fix it myself, but I don't have the recent root source. Maybe it would be worth adding a word about ""high"" and ""low"" errors in the corresponding place. What ""error high"" or ""error"" would be if there is only ""error"" or ""error high""?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9098
https://github.com/root-project/root/issues/9098:506,Availability,error,error,506,"There are two functions, [GetErrorYhigh](https://root.cern.ch/doc/master/classTGraphErrors.html#aa4864989829fc9f9b3d132b24d28112b)() and [GetErrorYlow](https://root.cern.ch/doc/master/classTGraphErrors.html#a329d183f60726d97cf543b996b65251f), where the docs erroneously write ""It returns the error along *X* at point i."" - it must be *Y*.; I would fix it myself, but I don't have the recent root source. Maybe it would be worth adding a word about ""high"" and ""low"" errors in the corresponding place. What ""error high"" or ""error"" would be if there is only ""error"" or ""error high""?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9098
https://github.com/root-project/root/issues/9098:522,Availability,error,error,522,"There are two functions, [GetErrorYhigh](https://root.cern.ch/doc/master/classTGraphErrors.html#aa4864989829fc9f9b3d132b24d28112b)() and [GetErrorYlow](https://root.cern.ch/doc/master/classTGraphErrors.html#a329d183f60726d97cf543b996b65251f), where the docs erroneously write ""It returns the error along *X* at point i."" - it must be *Y*.; I would fix it myself, but I don't have the recent root source. Maybe it would be worth adding a word about ""high"" and ""low"" errors in the corresponding place. What ""error high"" or ""error"" would be if there is only ""error"" or ""error high""?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9098
https://github.com/root-project/root/issues/9098:556,Availability,error,error,556,"There are two functions, [GetErrorYhigh](https://root.cern.ch/doc/master/classTGraphErrors.html#aa4864989829fc9f9b3d132b24d28112b)() and [GetErrorYlow](https://root.cern.ch/doc/master/classTGraphErrors.html#a329d183f60726d97cf543b996b65251f), where the docs erroneously write ""It returns the error along *X* at point i."" - it must be *Y*.; I would fix it myself, but I don't have the recent root source. Maybe it would be worth adding a word about ""high"" and ""low"" errors in the corresponding place. What ""error high"" or ""error"" would be if there is only ""error"" or ""error high""?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9098
https://github.com/root-project/root/issues/9098:567,Availability,error,error,567,"There are two functions, [GetErrorYhigh](https://root.cern.ch/doc/master/classTGraphErrors.html#aa4864989829fc9f9b3d132b24d28112b)() and [GetErrorYlow](https://root.cern.ch/doc/master/classTGraphErrors.html#a329d183f60726d97cf543b996b65251f), where the docs erroneously write ""It returns the error along *X* at point i."" - it must be *Y*.; I would fix it myself, but I don't have the recent root source. Maybe it would be worth adding a word about ""high"" and ""low"" errors in the corresponding place. What ""error high"" or ""error"" would be if there is only ""error"" or ""error high""?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9098
https://github.com/root-project/root/pull/9100:165,Modifiability,config,configurable,165,"Change the logic in `RClusterPool` such that it will prefetch the next _bunch_ of clusters while the current bunch of clusters is being processed. The bunch size is configurable on construction of `RClusterPool`. At the moment, it needs to be explicitly set (if different from 1) via `RNTupleReadOptions`. Eventually, there should be some mechanism to figure out a sensible default, given the source of data (e.g., remote or local) and the set of active columns. Compared to the current cluster prefetching, the combined set of pages of a bunch of clusters can now be given to a single vector read requests. That increases the size of vector reads and leads to significant throughput increases in certain cases. In particular for remote I/O but also, within limits, for SSDs. This PR is based on the fixes of #9096",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9100
https://github.com/root-project/root/pull/9100:673,Performance,throughput,throughput,673,"Change the logic in `RClusterPool` such that it will prefetch the next _bunch_ of clusters while the current bunch of clusters is being processed. The bunch size is configurable on construction of `RClusterPool`. At the moment, it needs to be explicitly set (if different from 1) via `RNTupleReadOptions`. Eventually, there should be some mechanism to figure out a sensible default, given the source of data (e.g., remote or local) and the set of active columns. Compared to the current cluster prefetching, the combined set of pages of a bunch of clusters can now be given to a single vector read requests. That increases the size of vector reads and leads to significant throughput increases in certain cases. In particular for remote I/O but also, within limits, for SSDs. This PR is based on the fixes of #9096",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9100
https://github.com/root-project/root/pull/9100:11,Testability,log,logic,11,"Change the logic in `RClusterPool` such that it will prefetch the next _bunch_ of clusters while the current bunch of clusters is being processed. The bunch size is configurable on construction of `RClusterPool`. At the moment, it needs to be explicitly set (if different from 1) via `RNTupleReadOptions`. Eventually, there should be some mechanism to figure out a sensible default, given the source of data (e.g., remote or local) and the set of active columns. Compared to the current cluster prefetching, the combined set of pages of a bunch of clusters can now be given to a single vector read requests. That increases the size of vector reads and leads to significant throughput increases in certain cases. In particular for remote I/O but also, within limits, for SSDs. This PR is based on the fixes of #9096",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9100
https://github.com/root-project/root/pull/9103:122,Availability,Failure,Failure,122,"Apparently xrootd 5.3.1 have a different sha256 hash (not clear how it could happened or if maybe in PR I was using old). Failure was detected on centos8 rootbench machine (https://lcgapp-services.cern.ch/root-jenkins/job/root-benchmark/):; ```; -- verifying file...; file='/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/nortcxxmod/build/builtins/xrootd/XROOTD-prefix/src/v5.3.1.tar.gz'; -- SHA256 hash of; /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/nortcxxmod/build/builtins/xrootd/XROOTD-prefix/src/v5.3.1.tar.gz; does not match expected value; expected: '1194ba435dc1e243f3cdb8273f6385407183799faf7622a582a828f4aff6807d'; actual: '0800b4c6444591a6514c5b81b2c4c79439875136ab2267ce4bed99cb94ead6e6'; -- Hash mismatch, removing...; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9103
https://github.com/root-project/root/pull/9103:324,Deployability,Release,Release,324,"Apparently xrootd 5.3.1 have a different sha256 hash (not clear how it could happened or if maybe in PR I was using old). Failure was detected on centos8 rootbench machine (https://lcgapp-services.cern.ch/root-jenkins/job/root-benchmark/):; ```; -- verifying file...; file='/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/nortcxxmod/build/builtins/xrootd/XROOTD-prefix/src/v5.3.1.tar.gz'; -- SHA256 hash of; /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/nortcxxmod/build/builtins/xrootd/XROOTD-prefix/src/v5.3.1.tar.gz; does not match expected value; expected: '1194ba435dc1e243f3cdb8273f6385407183799faf7622a582a828f4aff6807d'; actual: '0800b4c6444591a6514c5b81b2c4c79439875136ab2267ce4bed99cb94ead6e6'; -- Hash mismatch, removing...; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9103
https://github.com/root-project/root/pull/9103:512,Deployability,Release,Release,512,"Apparently xrootd 5.3.1 have a different sha256 hash (not clear how it could happened or if maybe in PR I was using old). Failure was detected on centos8 rootbench machine (https://lcgapp-services.cern.ch/root-jenkins/job/root-benchmark/):; ```; -- verifying file...; file='/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/nortcxxmod/build/builtins/xrootd/XROOTD-prefix/src/v5.3.1.tar.gz'; -- SHA256 hash of; /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/nortcxxmod/build/builtins/xrootd/XROOTD-prefix/src/v5.3.1.tar.gz; does not match expected value; expected: '1194ba435dc1e243f3cdb8273f6385407183799faf7622a582a828f4aff6807d'; actual: '0800b4c6444591a6514c5b81b2c4c79439875136ab2267ce4bed99cb94ead6e6'; -- Hash mismatch, removing...; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9103
https://github.com/root-project/root/pull/9103:355,Performance,perform,performance-,355,"Apparently xrootd 5.3.1 have a different sha256 hash (not clear how it could happened or if maybe in PR I was using old). Failure was detected on centos8 rootbench machine (https://lcgapp-services.cern.ch/root-jenkins/job/root-benchmark/):; ```; -- verifying file...; file='/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/nortcxxmod/build/builtins/xrootd/XROOTD-prefix/src/v5.3.1.tar.gz'; -- SHA256 hash of; /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/nortcxxmod/build/builtins/xrootd/XROOTD-prefix/src/v5.3.1.tar.gz; does not match expected value; expected: '1194ba435dc1e243f3cdb8273f6385407183799faf7622a582a828f4aff6807d'; actual: '0800b4c6444591a6514c5b81b2c4c79439875136ab2267ce4bed99cb94ead6e6'; -- Hash mismatch, removing...; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9103
https://github.com/root-project/root/pull/9103:543,Performance,perform,performance-,543,"Apparently xrootd 5.3.1 have a different sha256 hash (not clear how it could happened or if maybe in PR I was using old). Failure was detected on centos8 rootbench machine (https://lcgapp-services.cern.ch/root-jenkins/job/root-benchmark/):; ```; -- verifying file...; file='/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/nortcxxmod/build/builtins/xrootd/XROOTD-prefix/src/v5.3.1.tar.gz'; -- SHA256 hash of; /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/nortcxxmod/build/builtins/xrootd/XROOTD-prefix/src/v5.3.1.tar.gz; does not match expected value; expected: '1194ba435dc1e243f3cdb8273f6385407183799faf7622a582a828f4aff6807d'; actual: '0800b4c6444591a6514c5b81b2c4c79439875136ab2267ce4bed99cb94ead6e6'; -- Hash mismatch, removing...; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9103
https://github.com/root-project/root/pull/9103:134,Safety,detect,detected,134,"Apparently xrootd 5.3.1 have a different sha256 hash (not clear how it could happened or if maybe in PR I was using old). Failure was detected on centos8 rootbench machine (https://lcgapp-services.cern.ch/root-jenkins/job/root-benchmark/):; ```; -- verifying file...; file='/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/nortcxxmod/build/builtins/xrootd/XROOTD-prefix/src/v5.3.1.tar.gz'; -- SHA256 hash of; /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/nortcxxmod/build/builtins/xrootd/XROOTD-prefix/src/v5.3.1.tar.gz; does not match expected value; expected: '1194ba435dc1e243f3cdb8273f6385407183799faf7622a582a828f4aff6807d'; actual: '0800b4c6444591a6514c5b81b2c4c79439875136ab2267ce4bed99cb94ead6e6'; -- Hash mismatch, removing...; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9103
https://github.com/root-project/root/pull/9103:48,Security,hash,hash,48,"Apparently xrootd 5.3.1 have a different sha256 hash (not clear how it could happened or if maybe in PR I was using old). Failure was detected on centos8 rootbench machine (https://lcgapp-services.cern.ch/root-jenkins/job/root-benchmark/):; ```; -- verifying file...; file='/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/nortcxxmod/build/builtins/xrootd/XROOTD-prefix/src/v5.3.1.tar.gz'; -- SHA256 hash of; /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/nortcxxmod/build/builtins/xrootd/XROOTD-prefix/src/v5.3.1.tar.gz; does not match expected value; expected: '1194ba435dc1e243f3cdb8273f6385407183799faf7622a582a828f4aff6807d'; actual: '0800b4c6444591a6514c5b81b2c4c79439875136ab2267ce4bed99cb94ead6e6'; -- Hash mismatch, removing...; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9103
https://github.com/root-project/root/pull/9103:453,Security,hash,hash,453,"Apparently xrootd 5.3.1 have a different sha256 hash (not clear how it could happened or if maybe in PR I was using old). Failure was detected on centos8 rootbench machine (https://lcgapp-services.cern.ch/root-jenkins/job/root-benchmark/):; ```; -- verifying file...; file='/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/nortcxxmod/build/builtins/xrootd/XROOTD-prefix/src/v5.3.1.tar.gz'; -- SHA256 hash of; /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/nortcxxmod/build/builtins/xrootd/XROOTD-prefix/src/v5.3.1.tar.gz; does not match expected value; expected: '1194ba435dc1e243f3cdb8273f6385407183799faf7622a582a828f4aff6807d'; actual: '0800b4c6444591a6514c5b81b2c4c79439875136ab2267ce4bed99cb94ead6e6'; -- Hash mismatch, removing...; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9103
https://github.com/root-project/root/pull/9103:818,Security,Hash,Hash,818,"Apparently xrootd 5.3.1 have a different sha256 hash (not clear how it could happened or if maybe in PR I was using old). Failure was detected on centos8 rootbench machine (https://lcgapp-services.cern.ch/root-jenkins/job/root-benchmark/):; ```; -- verifying file...; file='/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/nortcxxmod/build/builtins/xrootd/XROOTD-prefix/src/v5.3.1.tar.gz'; -- SHA256 hash of; /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/nortcxxmod/build/builtins/xrootd/XROOTD-prefix/src/v5.3.1.tar.gz; does not match expected value; expected: '1194ba435dc1e243f3cdb8273f6385407183799faf7622a582a828f4aff6807d'; actual: '0800b4c6444591a6514c5b81b2c4c79439875136ab2267ce4bed99cb94ead6e6'; -- Hash mismatch, removing...; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9103
https://github.com/root-project/root/pull/9103:227,Testability,benchmark,benchmark,227,"Apparently xrootd 5.3.1 have a different sha256 hash (not clear how it could happened or if maybe in PR I was using old). Failure was detected on centos8 rootbench machine (https://lcgapp-services.cern.ch/root-jenkins/job/root-benchmark/):; ```; -- verifying file...; file='/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/nortcxxmod/build/builtins/xrootd/XROOTD-prefix/src/v5.3.1.tar.gz'; -- SHA256 hash of; /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/nortcxxmod/build/builtins/xrootd/XROOTD-prefix/src/v5.3.1.tar.gz; does not match expected value; expected: '1194ba435dc1e243f3cdb8273f6385407183799faf7622a582a828f4aff6807d'; actual: '0800b4c6444591a6514c5b81b2c4c79439875136ab2267ce4bed99cb94ead6e6'; -- Hash mismatch, removing...; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9103
https://github.com/root-project/root/pull/9103:304,Testability,benchmark,benchmark,304,"Apparently xrootd 5.3.1 have a different sha256 hash (not clear how it could happened or if maybe in PR I was using old). Failure was detected on centos8 rootbench machine (https://lcgapp-services.cern.ch/root-jenkins/job/root-benchmark/):; ```; -- verifying file...; file='/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/nortcxxmod/build/builtins/xrootd/XROOTD-prefix/src/v5.3.1.tar.gz'; -- SHA256 hash of; /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/nortcxxmod/build/builtins/xrootd/XROOTD-prefix/src/v5.3.1.tar.gz; does not match expected value; expected: '1194ba435dc1e243f3cdb8273f6385407183799faf7622a582a828f4aff6807d'; actual: '0800b4c6444591a6514c5b81b2c4c79439875136ab2267ce4bed99cb94ead6e6'; -- Hash mismatch, removing...; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9103
https://github.com/root-project/root/pull/9103:492,Testability,benchmark,benchmark,492,"Apparently xrootd 5.3.1 have a different sha256 hash (not clear how it could happened or if maybe in PR I was using old). Failure was detected on centos8 rootbench machine (https://lcgapp-services.cern.ch/root-jenkins/job/root-benchmark/):; ```; -- verifying file...; file='/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/nortcxxmod/build/builtins/xrootd/XROOTD-prefix/src/v5.3.1.tar.gz'; -- SHA256 hash of; /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/nortcxxmod/build/builtins/xrootd/XROOTD-prefix/src/v5.3.1.tar.gz; does not match expected value; expected: '1194ba435dc1e243f3cdb8273f6385407183799faf7622a582a828f4aff6807d'; actual: '0800b4c6444591a6514c5b81b2c4c79439875136ab2267ce4bed99cb94ead6e6'; -- Hash mismatch, removing...; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9103
https://github.com/root-project/root/pull/9103:58,Usability,clear,clear,58,"Apparently xrootd 5.3.1 have a different sha256 hash (not clear how it could happened or if maybe in PR I was using old). Failure was detected on centos8 rootbench machine (https://lcgapp-services.cern.ch/root-jenkins/job/root-benchmark/):; ```; -- verifying file...; file='/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/nortcxxmod/build/builtins/xrootd/XROOTD-prefix/src/v5.3.1.tar.gz'; -- SHA256 hash of; /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/nortcxxmod/build/builtins/xrootd/XROOTD-prefix/src/v5.3.1.tar.gz; does not match expected value; expected: '1194ba435dc1e243f3cdb8273f6385407183799faf7622a582a828f4aff6807d'; actual: '0800b4c6444591a6514c5b81b2c4c79439875136ab2267ce4bed99cb94ead6e6'; -- Hash mismatch, removing...; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9103
https://github.com/root-project/root/pull/9105:876,Deployability,update,updated,876,"# This Pull request: [Fix #6981] RDisplay::Print to list custom number of elements from collections. ## Changes or fixes:. AddCollectionToRow() modified so that the first 10 elements of long collections; are to be printed, then followed by ""..."". Previously, only the first and last; elements of collections of size >=3 were printed.; ; Print() logic is now simplified, since after ""..."" there is no guarantee; that there is going to be a next element.; ; Additional paramter to the constructor of the the RDisplay() was added,; that is the nMaxCollectionElements. It determines, number of elements to be; shown from long collction. Default is 10.; ; Corresponding tests were adapted and additional ones were added to check; the new functionality.; ; Regarding #6981 - to display the whole collection, please use AsString(). ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #6981",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9105
https://github.com/root-project/root/pull/9105:676,Energy Efficiency,adapt,adapted,676,"# This Pull request: [Fix #6981] RDisplay::Print to list custom number of elements from collections. ## Changes or fixes:. AddCollectionToRow() modified so that the first 10 elements of long collections; are to be printed, then followed by ""..."". Previously, only the first and last; elements of collections of size >=3 were printed.; ; Print() logic is now simplified, since after ""..."" there is no guarantee; that there is going to be a next element.; ; Additional paramter to the constructor of the the RDisplay() was added,; that is the nMaxCollectionElements. It determines, number of elements to be; shown from long collction. Default is 10.; ; Corresponding tests were adapted and additional ones were added to check; the new functionality.; ; Regarding #6981 - to display the whole collection, please use AsString(). ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #6981",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9105
https://github.com/root-project/root/pull/9105:676,Modifiability,adapt,adapted,676,"# This Pull request: [Fix #6981] RDisplay::Print to list custom number of elements from collections. ## Changes or fixes:. AddCollectionToRow() modified so that the first 10 elements of long collections; are to be printed, then followed by ""..."". Previously, only the first and last; elements of collections of size >=3 were printed.; ; Print() logic is now simplified, since after ""..."" there is no guarantee; that there is going to be a next element.; ; Additional paramter to the constructor of the the RDisplay() was added,; that is the nMaxCollectionElements. It determines, number of elements to be; shown from long collction. Default is 10.; ; Corresponding tests were adapted and additional ones were added to check; the new functionality.; ; Regarding #6981 - to display the whole collection, please use AsString(). ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #6981",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9105
https://github.com/root-project/root/pull/9105:345,Testability,log,logic,345,"# This Pull request: [Fix #6981] RDisplay::Print to list custom number of elements from collections. ## Changes or fixes:. AddCollectionToRow() modified so that the first 10 elements of long collections; are to be printed, then followed by ""..."". Previously, only the first and last; elements of collections of size >=3 were printed.; ; Print() logic is now simplified, since after ""..."" there is no guarantee; that there is going to be a next element.; ; Additional paramter to the constructor of the the RDisplay() was added,; that is the nMaxCollectionElements. It determines, number of elements to be; shown from long collction. Default is 10.; ; Corresponding tests were adapted and additional ones were added to check; the new functionality.; ; Regarding #6981 - to display the whole collection, please use AsString(). ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #6981",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9105
https://github.com/root-project/root/pull/9105:665,Testability,test,tests,665,"# This Pull request: [Fix #6981] RDisplay::Print to list custom number of elements from collections. ## Changes or fixes:. AddCollectionToRow() modified so that the first 10 elements of long collections; are to be printed, then followed by ""..."". Previously, only the first and last; elements of collections of size >=3 were printed.; ; Print() logic is now simplified, since after ""..."" there is no guarantee; that there is going to be a next element.; ; Additional paramter to the constructor of the the RDisplay() was added,; that is the nMaxCollectionElements. It determines, number of elements to be; shown from long collction. Default is 10.; ; Corresponding tests were adapted and additional ones were added to check; the new functionality.; ; Regarding #6981 - to display the whole collection, please use AsString(). ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #6981",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9105
https://github.com/root-project/root/pull/9105:846,Testability,test,tested,846,"# This Pull request: [Fix #6981] RDisplay::Print to list custom number of elements from collections. ## Changes or fixes:. AddCollectionToRow() modified so that the first 10 elements of long collections; are to be printed, then followed by ""..."". Previously, only the first and last; elements of collections of size >=3 were printed.; ; Print() logic is now simplified, since after ""..."" there is no guarantee; that there is going to be a next element.; ; Additional paramter to the constructor of the the RDisplay() was added,; that is the nMaxCollectionElements. It determines, number of elements to be; shown from long collction. Default is 10.; ; Corresponding tests were adapted and additional ones were added to check; the new functionality.; ; Regarding #6981 - to display the whole collection, please use AsString(). ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #6981",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9105
https://github.com/root-project/root/pull/9105:358,Usability,simpl,simplified,358,"# This Pull request: [Fix #6981] RDisplay::Print to list custom number of elements from collections. ## Changes or fixes:. AddCollectionToRow() modified so that the first 10 elements of long collections; are to be printed, then followed by ""..."". Previously, only the first and last; elements of collections of size >=3 were printed.; ; Print() logic is now simplified, since after ""..."" there is no guarantee; that there is going to be a next element.; ; Additional paramter to the constructor of the the RDisplay() was added,; that is the nMaxCollectionElements. It determines, number of elements to be; shown from long collction. Default is 10.; ; Corresponding tests were adapted and additional ones were added to check; the new functionality.; ; Regarding #6981 - to display the whole collection, please use AsString(). ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #6981",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9105
https://github.com/root-project/root/issues/9106:136,Availability,error,error-in-tcollectionlessstlreader-getcp-read-error-in-tbranchproxy,136,"- [] Checked for duplicates. ### Describe the bug. Origin of the issue is from the forum discussion [here](https://root-forum.cern.ch/t/error-in-tcollectionlessstlreader-getcp-read-error-in-tbranchproxy/47178). During the event loop over the friend `TTree` with `ROOT.EnableImplicitMT()` enabled using `RDataFrame` at some point, many errors pop up:; `Error in <TCollectionLessSTLReader::GetCP()>: Read error in TBranchProxy.`. I couldn't reproduce this behavior with manually produced fresh root files, so I assume something might have gone wrong with a root file itself during the creation.. However, without using ""Friend"" `TTree` or with `TTree` with `ROOT.EnableImplicitMT()` disabled, the file is analized correctly without any errors. This makes me wonder is this is a bug, or what is an explanation for such a behavior?. ### Expected behavior. No errors should appear... ### To Reproduce. Run following code snippet:. ```; import ROOT; # Commenting MT line makes this example work; ROOT.EnableImplicitMT(). ch = ROOT.TChain(""lumical""); ch.Add(""test_default.root""); ch.AddFriend(""emv=lumical"", ""test_emv.root""); # Adding test_emv.root as the only one but not as a friend, also works...; # ch = ROOT.TChain(""lumical""); # ch.Add(""test_emv.root""). h_emv = ROOT.RDataFrame(ch).Filter(""if (rdfentry_ % 500000 == 0){cout<<rdfentry_<<endl;} return true;"")\; .Histo1D((""h_emv"", ""emv"", 100, -100, 100), ""emv.mc_cont_posy"" ); h_emv.Draw(); input(""wait""); ```. The links for the root files:; https://syncandshare.desy.de/index.php/s/2Lf6469S22sYt3T. ### Setup; Tested with:; `source /cvmfs/sft.cern.ch/lcg/views/LCG_100rc2/x86_64-centos7-gcc10-opt/setup.sh`. 1. ROOT version 6.24/00; 2. Operating system Centos7; 3. Python 3.8.6. ### Additional context. After stopping and killing the job which produces errors above, restarting the script can sometimes produce following error:; `Error in <TTreeReaderArrayBase::GetBranchAndLeaf()>: The tree does not have a branch called emv.mc_cont_posy. You could chec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9106
https://github.com/root-project/root/issues/9106:335,Availability,error,errors,335,"- [] Checked for duplicates. ### Describe the bug. Origin of the issue is from the forum discussion [here](https://root-forum.cern.ch/t/error-in-tcollectionlessstlreader-getcp-read-error-in-tbranchproxy/47178). During the event loop over the friend `TTree` with `ROOT.EnableImplicitMT()` enabled using `RDataFrame` at some point, many errors pop up:; `Error in <TCollectionLessSTLReader::GetCP()>: Read error in TBranchProxy.`. I couldn't reproduce this behavior with manually produced fresh root files, so I assume something might have gone wrong with a root file itself during the creation.. However, without using ""Friend"" `TTree` or with `TTree` with `ROOT.EnableImplicitMT()` disabled, the file is analized correctly without any errors. This makes me wonder is this is a bug, or what is an explanation for such a behavior?. ### Expected behavior. No errors should appear... ### To Reproduce. Run following code snippet:. ```; import ROOT; # Commenting MT line makes this example work; ROOT.EnableImplicitMT(). ch = ROOT.TChain(""lumical""); ch.Add(""test_default.root""); ch.AddFriend(""emv=lumical"", ""test_emv.root""); # Adding test_emv.root as the only one but not as a friend, also works...; # ch = ROOT.TChain(""lumical""); # ch.Add(""test_emv.root""). h_emv = ROOT.RDataFrame(ch).Filter(""if (rdfentry_ % 500000 == 0){cout<<rdfentry_<<endl;} return true;"")\; .Histo1D((""h_emv"", ""emv"", 100, -100, 100), ""emv.mc_cont_posy"" ); h_emv.Draw(); input(""wait""); ```. The links for the root files:; https://syncandshare.desy.de/index.php/s/2Lf6469S22sYt3T. ### Setup; Tested with:; `source /cvmfs/sft.cern.ch/lcg/views/LCG_100rc2/x86_64-centos7-gcc10-opt/setup.sh`. 1. ROOT version 6.24/00; 2. Operating system Centos7; 3. Python 3.8.6. ### Additional context. After stopping and killing the job which produces errors above, restarting the script can sometimes produce following error:; `Error in <TTreeReaderArrayBase::GetBranchAndLeaf()>: The tree does not have a branch called emv.mc_cont_posy. You could chec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9106
https://github.com/root-project/root/issues/9106:352,Availability,Error,Error,352,"- [] Checked for duplicates. ### Describe the bug. Origin of the issue is from the forum discussion [here](https://root-forum.cern.ch/t/error-in-tcollectionlessstlreader-getcp-read-error-in-tbranchproxy/47178). During the event loop over the friend `TTree` with `ROOT.EnableImplicitMT()` enabled using `RDataFrame` at some point, many errors pop up:; `Error in <TCollectionLessSTLReader::GetCP()>: Read error in TBranchProxy.`. I couldn't reproduce this behavior with manually produced fresh root files, so I assume something might have gone wrong with a root file itself during the creation.. However, without using ""Friend"" `TTree` or with `TTree` with `ROOT.EnableImplicitMT()` disabled, the file is analized correctly without any errors. This makes me wonder is this is a bug, or what is an explanation for such a behavior?. ### Expected behavior. No errors should appear... ### To Reproduce. Run following code snippet:. ```; import ROOT; # Commenting MT line makes this example work; ROOT.EnableImplicitMT(). ch = ROOT.TChain(""lumical""); ch.Add(""test_default.root""); ch.AddFriend(""emv=lumical"", ""test_emv.root""); # Adding test_emv.root as the only one but not as a friend, also works...; # ch = ROOT.TChain(""lumical""); # ch.Add(""test_emv.root""). h_emv = ROOT.RDataFrame(ch).Filter(""if (rdfentry_ % 500000 == 0){cout<<rdfentry_<<endl;} return true;"")\; .Histo1D((""h_emv"", ""emv"", 100, -100, 100), ""emv.mc_cont_posy"" ); h_emv.Draw(); input(""wait""); ```. The links for the root files:; https://syncandshare.desy.de/index.php/s/2Lf6469S22sYt3T. ### Setup; Tested with:; `source /cvmfs/sft.cern.ch/lcg/views/LCG_100rc2/x86_64-centos7-gcc10-opt/setup.sh`. 1. ROOT version 6.24/00; 2. Operating system Centos7; 3. Python 3.8.6. ### Additional context. After stopping and killing the job which produces errors above, restarting the script can sometimes produce following error:; `Error in <TTreeReaderArrayBase::GetBranchAndLeaf()>: The tree does not have a branch called emv.mc_cont_posy. You could chec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9106
https://github.com/root-project/root/issues/9106:403,Availability,error,error,403,"- [] Checked for duplicates. ### Describe the bug. Origin of the issue is from the forum discussion [here](https://root-forum.cern.ch/t/error-in-tcollectionlessstlreader-getcp-read-error-in-tbranchproxy/47178). During the event loop over the friend `TTree` with `ROOT.EnableImplicitMT()` enabled using `RDataFrame` at some point, many errors pop up:; `Error in <TCollectionLessSTLReader::GetCP()>: Read error in TBranchProxy.`. I couldn't reproduce this behavior with manually produced fresh root files, so I assume something might have gone wrong with a root file itself during the creation.. However, without using ""Friend"" `TTree` or with `TTree` with `ROOT.EnableImplicitMT()` disabled, the file is analized correctly without any errors. This makes me wonder is this is a bug, or what is an explanation for such a behavior?. ### Expected behavior. No errors should appear... ### To Reproduce. Run following code snippet:. ```; import ROOT; # Commenting MT line makes this example work; ROOT.EnableImplicitMT(). ch = ROOT.TChain(""lumical""); ch.Add(""test_default.root""); ch.AddFriend(""emv=lumical"", ""test_emv.root""); # Adding test_emv.root as the only one but not as a friend, also works...; # ch = ROOT.TChain(""lumical""); # ch.Add(""test_emv.root""). h_emv = ROOT.RDataFrame(ch).Filter(""if (rdfentry_ % 500000 == 0){cout<<rdfentry_<<endl;} return true;"")\; .Histo1D((""h_emv"", ""emv"", 100, -100, 100), ""emv.mc_cont_posy"" ); h_emv.Draw(); input(""wait""); ```. The links for the root files:; https://syncandshare.desy.de/index.php/s/2Lf6469S22sYt3T. ### Setup; Tested with:; `source /cvmfs/sft.cern.ch/lcg/views/LCG_100rc2/x86_64-centos7-gcc10-opt/setup.sh`. 1. ROOT version 6.24/00; 2. Operating system Centos7; 3. Python 3.8.6. ### Additional context. After stopping and killing the job which produces errors above, restarting the script can sometimes produce following error:; `Error in <TTreeReaderArrayBase::GetBranchAndLeaf()>: The tree does not have a branch called emv.mc_cont_posy. You could chec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9106
https://github.com/root-project/root/issues/9106:734,Availability,error,errors,734,"- [] Checked for duplicates. ### Describe the bug. Origin of the issue is from the forum discussion [here](https://root-forum.cern.ch/t/error-in-tcollectionlessstlreader-getcp-read-error-in-tbranchproxy/47178). During the event loop over the friend `TTree` with `ROOT.EnableImplicitMT()` enabled using `RDataFrame` at some point, many errors pop up:; `Error in <TCollectionLessSTLReader::GetCP()>: Read error in TBranchProxy.`. I couldn't reproduce this behavior with manually produced fresh root files, so I assume something might have gone wrong with a root file itself during the creation.. However, without using ""Friend"" `TTree` or with `TTree` with `ROOT.EnableImplicitMT()` disabled, the file is analized correctly without any errors. This makes me wonder is this is a bug, or what is an explanation for such a behavior?. ### Expected behavior. No errors should appear... ### To Reproduce. Run following code snippet:. ```; import ROOT; # Commenting MT line makes this example work; ROOT.EnableImplicitMT(). ch = ROOT.TChain(""lumical""); ch.Add(""test_default.root""); ch.AddFriend(""emv=lumical"", ""test_emv.root""); # Adding test_emv.root as the only one but not as a friend, also works...; # ch = ROOT.TChain(""lumical""); # ch.Add(""test_emv.root""). h_emv = ROOT.RDataFrame(ch).Filter(""if (rdfentry_ % 500000 == 0){cout<<rdfentry_<<endl;} return true;"")\; .Histo1D((""h_emv"", ""emv"", 100, -100, 100), ""emv.mc_cont_posy"" ); h_emv.Draw(); input(""wait""); ```. The links for the root files:; https://syncandshare.desy.de/index.php/s/2Lf6469S22sYt3T. ### Setup; Tested with:; `source /cvmfs/sft.cern.ch/lcg/views/LCG_100rc2/x86_64-centos7-gcc10-opt/setup.sh`. 1. ROOT version 6.24/00; 2. Operating system Centos7; 3. Python 3.8.6. ### Additional context. After stopping and killing the job which produces errors above, restarting the script can sometimes produce following error:; `Error in <TTreeReaderArrayBase::GetBranchAndLeaf()>: The tree does not have a branch called emv.mc_cont_posy. You could chec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9106
https://github.com/root-project/root/issues/9106:855,Availability,error,errors,855,"- [] Checked for duplicates. ### Describe the bug. Origin of the issue is from the forum discussion [here](https://root-forum.cern.ch/t/error-in-tcollectionlessstlreader-getcp-read-error-in-tbranchproxy/47178). During the event loop over the friend `TTree` with `ROOT.EnableImplicitMT()` enabled using `RDataFrame` at some point, many errors pop up:; `Error in <TCollectionLessSTLReader::GetCP()>: Read error in TBranchProxy.`. I couldn't reproduce this behavior with manually produced fresh root files, so I assume something might have gone wrong with a root file itself during the creation.. However, without using ""Friend"" `TTree` or with `TTree` with `ROOT.EnableImplicitMT()` disabled, the file is analized correctly without any errors. This makes me wonder is this is a bug, or what is an explanation for such a behavior?. ### Expected behavior. No errors should appear... ### To Reproduce. Run following code snippet:. ```; import ROOT; # Commenting MT line makes this example work; ROOT.EnableImplicitMT(). ch = ROOT.TChain(""lumical""); ch.Add(""test_default.root""); ch.AddFriend(""emv=lumical"", ""test_emv.root""); # Adding test_emv.root as the only one but not as a friend, also works...; # ch = ROOT.TChain(""lumical""); # ch.Add(""test_emv.root""). h_emv = ROOT.RDataFrame(ch).Filter(""if (rdfentry_ % 500000 == 0){cout<<rdfentry_<<endl;} return true;"")\; .Histo1D((""h_emv"", ""emv"", 100, -100, 100), ""emv.mc_cont_posy"" ); h_emv.Draw(); input(""wait""); ```. The links for the root files:; https://syncandshare.desy.de/index.php/s/2Lf6469S22sYt3T. ### Setup; Tested with:; `source /cvmfs/sft.cern.ch/lcg/views/LCG_100rc2/x86_64-centos7-gcc10-opt/setup.sh`. 1. ROOT version 6.24/00; 2. Operating system Centos7; 3. Python 3.8.6. ### Additional context. After stopping and killing the job which produces errors above, restarting the script can sometimes produce following error:; `Error in <TTreeReaderArrayBase::GetBranchAndLeaf()>: The tree does not have a branch called emv.mc_cont_posy. You could chec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9106
https://github.com/root-project/root/issues/9106:1800,Availability,error,errors,1800,"discussion [here](https://root-forum.cern.ch/t/error-in-tcollectionlessstlreader-getcp-read-error-in-tbranchproxy/47178). During the event loop over the friend `TTree` with `ROOT.EnableImplicitMT()` enabled using `RDataFrame` at some point, many errors pop up:; `Error in <TCollectionLessSTLReader::GetCP()>: Read error in TBranchProxy.`. I couldn't reproduce this behavior with manually produced fresh root files, so I assume something might have gone wrong with a root file itself during the creation.. However, without using ""Friend"" `TTree` or with `TTree` with `ROOT.EnableImplicitMT()` disabled, the file is analized correctly without any errors. This makes me wonder is this is a bug, or what is an explanation for such a behavior?. ### Expected behavior. No errors should appear... ### To Reproduce. Run following code snippet:. ```; import ROOT; # Commenting MT line makes this example work; ROOT.EnableImplicitMT(). ch = ROOT.TChain(""lumical""); ch.Add(""test_default.root""); ch.AddFriend(""emv=lumical"", ""test_emv.root""); # Adding test_emv.root as the only one but not as a friend, also works...; # ch = ROOT.TChain(""lumical""); # ch.Add(""test_emv.root""). h_emv = ROOT.RDataFrame(ch).Filter(""if (rdfentry_ % 500000 == 0){cout<<rdfentry_<<endl;} return true;"")\; .Histo1D((""h_emv"", ""emv"", 100, -100, 100), ""emv.mc_cont_posy"" ); h_emv.Draw(); input(""wait""); ```. The links for the root files:; https://syncandshare.desy.de/index.php/s/2Lf6469S22sYt3T. ### Setup; Tested with:; `source /cvmfs/sft.cern.ch/lcg/views/LCG_100rc2/x86_64-centos7-gcc10-opt/setup.sh`. 1. ROOT version 6.24/00; 2. Operating system Centos7; 3. Python 3.8.6. ### Additional context. After stopping and killing the job which produces errors above, restarting the script can sometimes produce following error:; `Error in <TTreeReaderArrayBase::GetBranchAndLeaf()>: The tree does not have a branch called emv.mc_cont_posy. You could check with TTree::Print() for available branches.`. Which disappears on the next relaunch...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9106
https://github.com/root-project/root/issues/9106:1868,Availability,error,error,1868,"discussion [here](https://root-forum.cern.ch/t/error-in-tcollectionlessstlreader-getcp-read-error-in-tbranchproxy/47178). During the event loop over the friend `TTree` with `ROOT.EnableImplicitMT()` enabled using `RDataFrame` at some point, many errors pop up:; `Error in <TCollectionLessSTLReader::GetCP()>: Read error in TBranchProxy.`. I couldn't reproduce this behavior with manually produced fresh root files, so I assume something might have gone wrong with a root file itself during the creation.. However, without using ""Friend"" `TTree` or with `TTree` with `ROOT.EnableImplicitMT()` disabled, the file is analized correctly without any errors. This makes me wonder is this is a bug, or what is an explanation for such a behavior?. ### Expected behavior. No errors should appear... ### To Reproduce. Run following code snippet:. ```; import ROOT; # Commenting MT line makes this example work; ROOT.EnableImplicitMT(). ch = ROOT.TChain(""lumical""); ch.Add(""test_default.root""); ch.AddFriend(""emv=lumical"", ""test_emv.root""); # Adding test_emv.root as the only one but not as a friend, also works...; # ch = ROOT.TChain(""lumical""); # ch.Add(""test_emv.root""). h_emv = ROOT.RDataFrame(ch).Filter(""if (rdfentry_ % 500000 == 0){cout<<rdfentry_<<endl;} return true;"")\; .Histo1D((""h_emv"", ""emv"", 100, -100, 100), ""emv.mc_cont_posy"" ); h_emv.Draw(); input(""wait""); ```. The links for the root files:; https://syncandshare.desy.de/index.php/s/2Lf6469S22sYt3T. ### Setup; Tested with:; `source /cvmfs/sft.cern.ch/lcg/views/LCG_100rc2/x86_64-centos7-gcc10-opt/setup.sh`. 1. ROOT version 6.24/00; 2. Operating system Centos7; 3. Python 3.8.6. ### Additional context. After stopping and killing the job which produces errors above, restarting the script can sometimes produce following error:; `Error in <TTreeReaderArrayBase::GetBranchAndLeaf()>: The tree does not have a branch called emv.mc_cont_posy. You could check with TTree::Print() for available branches.`. Which disappears on the next relaunch...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9106
https://github.com/root-project/root/issues/9106:1877,Availability,Error,Error,1877,"discussion [here](https://root-forum.cern.ch/t/error-in-tcollectionlessstlreader-getcp-read-error-in-tbranchproxy/47178). During the event loop over the friend `TTree` with `ROOT.EnableImplicitMT()` enabled using `RDataFrame` at some point, many errors pop up:; `Error in <TCollectionLessSTLReader::GetCP()>: Read error in TBranchProxy.`. I couldn't reproduce this behavior with manually produced fresh root files, so I assume something might have gone wrong with a root file itself during the creation.. However, without using ""Friend"" `TTree` or with `TTree` with `ROOT.EnableImplicitMT()` disabled, the file is analized correctly without any errors. This makes me wonder is this is a bug, or what is an explanation for such a behavior?. ### Expected behavior. No errors should appear... ### To Reproduce. Run following code snippet:. ```; import ROOT; # Commenting MT line makes this example work; ROOT.EnableImplicitMT(). ch = ROOT.TChain(""lumical""); ch.Add(""test_default.root""); ch.AddFriend(""emv=lumical"", ""test_emv.root""); # Adding test_emv.root as the only one but not as a friend, also works...; # ch = ROOT.TChain(""lumical""); # ch.Add(""test_emv.root""). h_emv = ROOT.RDataFrame(ch).Filter(""if (rdfentry_ % 500000 == 0){cout<<rdfentry_<<endl;} return true;"")\; .Histo1D((""h_emv"", ""emv"", 100, -100, 100), ""emv.mc_cont_posy"" ); h_emv.Draw(); input(""wait""); ```. The links for the root files:; https://syncandshare.desy.de/index.php/s/2Lf6469S22sYt3T. ### Setup; Tested with:; `source /cvmfs/sft.cern.ch/lcg/views/LCG_100rc2/x86_64-centos7-gcc10-opt/setup.sh`. 1. ROOT version 6.24/00; 2. Operating system Centos7; 3. Python 3.8.6. ### Additional context. After stopping and killing the job which produces errors above, restarting the script can sometimes produce following error:; `Error in <TTreeReaderArrayBase::GetBranchAndLeaf()>: The tree does not have a branch called emv.mc_cont_posy. You could check with TTree::Print() for available branches.`. Which disappears on the next relaunch...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9106
https://github.com/root-project/root/issues/9106:2027,Availability,avail,available,2027,"discussion [here](https://root-forum.cern.ch/t/error-in-tcollectionlessstlreader-getcp-read-error-in-tbranchproxy/47178). During the event loop over the friend `TTree` with `ROOT.EnableImplicitMT()` enabled using `RDataFrame` at some point, many errors pop up:; `Error in <TCollectionLessSTLReader::GetCP()>: Read error in TBranchProxy.`. I couldn't reproduce this behavior with manually produced fresh root files, so I assume something might have gone wrong with a root file itself during the creation.. However, without using ""Friend"" `TTree` or with `TTree` with `ROOT.EnableImplicitMT()` disabled, the file is analized correctly without any errors. This makes me wonder is this is a bug, or what is an explanation for such a behavior?. ### Expected behavior. No errors should appear... ### To Reproduce. Run following code snippet:. ```; import ROOT; # Commenting MT line makes this example work; ROOT.EnableImplicitMT(). ch = ROOT.TChain(""lumical""); ch.Add(""test_default.root""); ch.AddFriend(""emv=lumical"", ""test_emv.root""); # Adding test_emv.root as the only one but not as a friend, also works...; # ch = ROOT.TChain(""lumical""); # ch.Add(""test_emv.root""). h_emv = ROOT.RDataFrame(ch).Filter(""if (rdfentry_ % 500000 == 0){cout<<rdfentry_<<endl;} return true;"")\; .Histo1D((""h_emv"", ""emv"", 100, -100, 100), ""emv.mc_cont_posy"" ); h_emv.Draw(); input(""wait""); ```. The links for the root files:; https://syncandshare.desy.de/index.php/s/2Lf6469S22sYt3T. ### Setup; Tested with:; `source /cvmfs/sft.cern.ch/lcg/views/LCG_100rc2/x86_64-centos7-gcc10-opt/setup.sh`. 1. ROOT version 6.24/00; 2. Operating system Centos7; 3. Python 3.8.6. ### Additional context. After stopping and killing the job which produces errors above, restarting the script can sometimes produce following error:; `Error in <TTreeReaderArrayBase::GetBranchAndLeaf()>: The tree does not have a branch called emv.mc_cont_posy. You could check with TTree::Print() for available branches.`. Which disappears on the next relaunch...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9106
https://github.com/root-project/root/issues/9106:1557,Testability,Test,Tested,1557,"discussion [here](https://root-forum.cern.ch/t/error-in-tcollectionlessstlreader-getcp-read-error-in-tbranchproxy/47178). During the event loop over the friend `TTree` with `ROOT.EnableImplicitMT()` enabled using `RDataFrame` at some point, many errors pop up:; `Error in <TCollectionLessSTLReader::GetCP()>: Read error in TBranchProxy.`. I couldn't reproduce this behavior with manually produced fresh root files, so I assume something might have gone wrong with a root file itself during the creation.. However, without using ""Friend"" `TTree` or with `TTree` with `ROOT.EnableImplicitMT()` disabled, the file is analized correctly without any errors. This makes me wonder is this is a bug, or what is an explanation for such a behavior?. ### Expected behavior. No errors should appear... ### To Reproduce. Run following code snippet:. ```; import ROOT; # Commenting MT line makes this example work; ROOT.EnableImplicitMT(). ch = ROOT.TChain(""lumical""); ch.Add(""test_default.root""); ch.AddFriend(""emv=lumical"", ""test_emv.root""); # Adding test_emv.root as the only one but not as a friend, also works...; # ch = ROOT.TChain(""lumical""); # ch.Add(""test_emv.root""). h_emv = ROOT.RDataFrame(ch).Filter(""if (rdfentry_ % 500000 == 0){cout<<rdfentry_<<endl;} return true;"")\; .Histo1D((""h_emv"", ""emv"", 100, -100, 100), ""emv.mc_cont_posy"" ); h_emv.Draw(); input(""wait""); ```. The links for the root files:; https://syncandshare.desy.de/index.php/s/2Lf6469S22sYt3T. ### Setup; Tested with:; `source /cvmfs/sft.cern.ch/lcg/views/LCG_100rc2/x86_64-centos7-gcc10-opt/setup.sh`. 1. ROOT version 6.24/00; 2. Operating system Centos7; 3. Python 3.8.6. ### Additional context. After stopping and killing the job which produces errors above, restarting the script can sometimes produce following error:; `Error in <TTreeReaderArrayBase::GetBranchAndLeaf()>: The tree does not have a branch called emv.mc_cont_posy. You could check with TTree::Print() for available branches.`. Which disappears on the next relaunch...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9106
https://github.com/root-project/root/pull/9108:49,Integrability,interface,interface,49,# This Pull request:. - Simplifies the `\legacy` interface. It has now only one parameter.; - The text has been rephrased.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9108
https://github.com/root-project/root/pull/9108:24,Usability,Simpl,Simplifies,24,# This Pull request:. - Simplifies the `\legacy` interface. It has now only one parameter.; - The text has been rephrased.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9108
https://github.com/root-project/root/pull/9109:393,Availability,error,error,393,"- Remove unused `import pty`; - Disable stream capture (currently not working on Windows). The output coming from C++ (ROOT) will only print in the command prompt and not in the notebook (to be investigated); - Disable tab completion (currently not working on Windows).; - Add the `delete=False` argument in `NamedTemporaryFile()` and manually delete the created file to prevent the following error:; ```; Error in callback <bound method CaptureDrawnPrimitives._post_execute of <JupyROOT.helpers.utils.CaptureDrawnPrimitives object at 0x0C321C58>> (for post_execute):; ---------------------------------------------------------------------------; PermissionError Traceback (most recent call last); ~\build\release\bin\JupyROOT\helpers\utils.py in _post_execute(self); 461; 462 def _post_execute(self):; --> 463 NotebookDraw(); 464; 465 def register(self):. ~\build\release\bin\JupyROOT\helpers\utils.py in NotebookDraw(); 450 def NotebookDraw():; 451 DrawGeometry(); --> 452 DrawCanvases(); 453 DrawRCanvases(); 454. ~\build\release\bin\JupyROOT\helpers\utils.py in DrawCanvases(); 441 drawers = GetCanvasDrawers(); 442 for drawer in drawers:; --> 443 drawer.Draw(); 444; 445 def DrawRCanvases():. ~\build\release\bin\JupyROOT\helpers\utils.py in Draw(self); 598; 599 def Draw(self):; --> 600 self._display(); 601 return 0; 602. ~\build\release\bin\JupyROOT\helpers\utils.py in _display(self); 583 self._jsDisplay(); 584 else:; --> 585 self._pngDisplay(); 586; 587 def GetDrawableObjects(self):. ~\build\release\bin\JupyROOT\helpers\utils.py in _pngDisplay(self); 572; 573 def _pngDisplay(self):; --> 574 img = self._getPngImage(); 575 IPython.display.display(img); 576. ~\build\release\bin\JupyROOT\helpers\utils.py in _getPngImage(self); 566 with _setIgnoreLevel(ROOT.kError):; 567 self.drawableObject.SaveAs(ofile.name); --> 568 img = IPython.display.Image(filename=ofile.name, format='png', embed=True); 569 #ofile.close(); 570 #os.unlink(ofile.name). c:\python38-32\lib\site-packages\IPython\core\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9109
https://github.com/root-project/root/pull/9109:406,Availability,Error,Error,406,"- Remove unused `import pty`; - Disable stream capture (currently not working on Windows). The output coming from C++ (ROOT) will only print in the command prompt and not in the notebook (to be investigated); - Disable tab completion (currently not working on Windows).; - Add the `delete=False` argument in `NamedTemporaryFile()` and manually delete the created file to prevent the following error:; ```; Error in callback <bound method CaptureDrawnPrimitives._post_execute of <JupyROOT.helpers.utils.CaptureDrawnPrimitives object at 0x0C321C58>> (for post_execute):; ---------------------------------------------------------------------------; PermissionError Traceback (most recent call last); ~\build\release\bin\JupyROOT\helpers\utils.py in _post_execute(self); 461; 462 def _post_execute(self):; --> 463 NotebookDraw(); 464; 465 def register(self):. ~\build\release\bin\JupyROOT\helpers\utils.py in NotebookDraw(); 450 def NotebookDraw():; 451 DrawGeometry(); --> 452 DrawCanvases(); 453 DrawRCanvases(); 454. ~\build\release\bin\JupyROOT\helpers\utils.py in DrawCanvases(); 441 drawers = GetCanvasDrawers(); 442 for drawer in drawers:; --> 443 drawer.Draw(); 444; 445 def DrawRCanvases():. ~\build\release\bin\JupyROOT\helpers\utils.py in Draw(self); 598; 599 def Draw(self):; --> 600 self._display(); 601 return 0; 602. ~\build\release\bin\JupyROOT\helpers\utils.py in _display(self); 583 self._jsDisplay(); 584 else:; --> 585 self._pngDisplay(); 586; 587 def GetDrawableObjects(self):. ~\build\release\bin\JupyROOT\helpers\utils.py in _pngDisplay(self); 572; 573 def _pngDisplay(self):; --> 574 img = self._getPngImage(); 575 IPython.display.display(img); 576. ~\build\release\bin\JupyROOT\helpers\utils.py in _getPngImage(self); 566 with _setIgnoreLevel(ROOT.kError):; 567 self.drawableObject.SaveAs(ofile.name); --> 568 img = IPython.display.Image(filename=ofile.name, format='png', embed=True); 569 #ofile.close(); 570 #os.unlink(ofile.name). c:\python38-32\lib\site-packages\IPython\core\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9109
https://github.com/root-project/root/pull/9109:705,Deployability,release,release,705,"- Remove unused `import pty`; - Disable stream capture (currently not working on Windows). The output coming from C++ (ROOT) will only print in the command prompt and not in the notebook (to be investigated); - Disable tab completion (currently not working on Windows).; - Add the `delete=False` argument in `NamedTemporaryFile()` and manually delete the created file to prevent the following error:; ```; Error in callback <bound method CaptureDrawnPrimitives._post_execute of <JupyROOT.helpers.utils.CaptureDrawnPrimitives object at 0x0C321C58>> (for post_execute):; ---------------------------------------------------------------------------; PermissionError Traceback (most recent call last); ~\build\release\bin\JupyROOT\helpers\utils.py in _post_execute(self); 461; 462 def _post_execute(self):; --> 463 NotebookDraw(); 464; 465 def register(self):. ~\build\release\bin\JupyROOT\helpers\utils.py in NotebookDraw(); 450 def NotebookDraw():; 451 DrawGeometry(); --> 452 DrawCanvases(); 453 DrawRCanvases(); 454. ~\build\release\bin\JupyROOT\helpers\utils.py in DrawCanvases(); 441 drawers = GetCanvasDrawers(); 442 for drawer in drawers:; --> 443 drawer.Draw(); 444; 445 def DrawRCanvases():. ~\build\release\bin\JupyROOT\helpers\utils.py in Draw(self); 598; 599 def Draw(self):; --> 600 self._display(); 601 return 0; 602. ~\build\release\bin\JupyROOT\helpers\utils.py in _display(self); 583 self._jsDisplay(); 584 else:; --> 585 self._pngDisplay(); 586; 587 def GetDrawableObjects(self):. ~\build\release\bin\JupyROOT\helpers\utils.py in _pngDisplay(self); 572; 573 def _pngDisplay(self):; --> 574 img = self._getPngImage(); 575 IPython.display.display(img); 576. ~\build\release\bin\JupyROOT\helpers\utils.py in _getPngImage(self); 566 with _setIgnoreLevel(ROOT.kError):; 567 self.drawableObject.SaveAs(ofile.name); --> 568 img = IPython.display.Image(filename=ofile.name, format='png', embed=True); 569 #ofile.close(); 570 #os.unlink(ofile.name). c:\python38-32\lib\site-packages\IPython\core\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9109
https://github.com/root-project/root/pull/9109:864,Deployability,release,release,864,"- Remove unused `import pty`; - Disable stream capture (currently not working on Windows). The output coming from C++ (ROOT) will only print in the command prompt and not in the notebook (to be investigated); - Disable tab completion (currently not working on Windows).; - Add the `delete=False` argument in `NamedTemporaryFile()` and manually delete the created file to prevent the following error:; ```; Error in callback <bound method CaptureDrawnPrimitives._post_execute of <JupyROOT.helpers.utils.CaptureDrawnPrimitives object at 0x0C321C58>> (for post_execute):; ---------------------------------------------------------------------------; PermissionError Traceback (most recent call last); ~\build\release\bin\JupyROOT\helpers\utils.py in _post_execute(self); 461; 462 def _post_execute(self):; --> 463 NotebookDraw(); 464; 465 def register(self):. ~\build\release\bin\JupyROOT\helpers\utils.py in NotebookDraw(); 450 def NotebookDraw():; 451 DrawGeometry(); --> 452 DrawCanvases(); 453 DrawRCanvases(); 454. ~\build\release\bin\JupyROOT\helpers\utils.py in DrawCanvases(); 441 drawers = GetCanvasDrawers(); 442 for drawer in drawers:; --> 443 drawer.Draw(); 444; 445 def DrawRCanvases():. ~\build\release\bin\JupyROOT\helpers\utils.py in Draw(self); 598; 599 def Draw(self):; --> 600 self._display(); 601 return 0; 602. ~\build\release\bin\JupyROOT\helpers\utils.py in _display(self); 583 self._jsDisplay(); 584 else:; --> 585 self._pngDisplay(); 586; 587 def GetDrawableObjects(self):. ~\build\release\bin\JupyROOT\helpers\utils.py in _pngDisplay(self); 572; 573 def _pngDisplay(self):; --> 574 img = self._getPngImage(); 575 IPython.display.display(img); 576. ~\build\release\bin\JupyROOT\helpers\utils.py in _getPngImage(self); 566 with _setIgnoreLevel(ROOT.kError):; 567 self.drawableObject.SaveAs(ofile.name); --> 568 img = IPython.display.Image(filename=ofile.name, format='png', embed=True); 569 #ofile.close(); 570 #os.unlink(ofile.name). c:\python38-32\lib\site-packages\IPython\core\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9109
https://github.com/root-project/root/pull/9109:1024,Deployability,release,release,1024,"le stream capture (currently not working on Windows). The output coming from C++ (ROOT) will only print in the command prompt and not in the notebook (to be investigated); - Disable tab completion (currently not working on Windows).; - Add the `delete=False` argument in `NamedTemporaryFile()` and manually delete the created file to prevent the following error:; ```; Error in callback <bound method CaptureDrawnPrimitives._post_execute of <JupyROOT.helpers.utils.CaptureDrawnPrimitives object at 0x0C321C58>> (for post_execute):; ---------------------------------------------------------------------------; PermissionError Traceback (most recent call last); ~\build\release\bin\JupyROOT\helpers\utils.py in _post_execute(self); 461; 462 def _post_execute(self):; --> 463 NotebookDraw(); 464; 465 def register(self):. ~\build\release\bin\JupyROOT\helpers\utils.py in NotebookDraw(); 450 def NotebookDraw():; 451 DrawGeometry(); --> 452 DrawCanvases(); 453 DrawRCanvases(); 454. ~\build\release\bin\JupyROOT\helpers\utils.py in DrawCanvases(); 441 drawers = GetCanvasDrawers(); 442 for drawer in drawers:; --> 443 drawer.Draw(); 444; 445 def DrawRCanvases():. ~\build\release\bin\JupyROOT\helpers\utils.py in Draw(self); 598; 599 def Draw(self):; --> 600 self._display(); 601 return 0; 602. ~\build\release\bin\JupyROOT\helpers\utils.py in _display(self); 583 self._jsDisplay(); 584 else:; --> 585 self._pngDisplay(); 586; 587 def GetDrawableObjects(self):. ~\build\release\bin\JupyROOT\helpers\utils.py in _pngDisplay(self); 572; 573 def _pngDisplay(self):; --> 574 img = self._getPngImage(); 575 IPython.display.display(img); 576. ~\build\release\bin\JupyROOT\helpers\utils.py in _getPngImage(self); 566 with _setIgnoreLevel(ROOT.kError):; 567 self.drawableObject.SaveAs(ofile.name); --> 568 img = IPython.display.Image(filename=ofile.name, format='png', embed=True); 569 #ofile.close(); 570 #os.unlink(ofile.name). c:\python38-32\lib\site-packages\IPython\core\display.py in __init__(self, data, u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9109
https://github.com/root-project/root/pull/9109:1205,Deployability,release,release,1205," tab completion (currently not working on Windows).; - Add the `delete=False` argument in `NamedTemporaryFile()` and manually delete the created file to prevent the following error:; ```; Error in callback <bound method CaptureDrawnPrimitives._post_execute of <JupyROOT.helpers.utils.CaptureDrawnPrimitives object at 0x0C321C58>> (for post_execute):; ---------------------------------------------------------------------------; PermissionError Traceback (most recent call last); ~\build\release\bin\JupyROOT\helpers\utils.py in _post_execute(self); 461; 462 def _post_execute(self):; --> 463 NotebookDraw(); 464; 465 def register(self):. ~\build\release\bin\JupyROOT\helpers\utils.py in NotebookDraw(); 450 def NotebookDraw():; 451 DrawGeometry(); --> 452 DrawCanvases(); 453 DrawRCanvases(); 454. ~\build\release\bin\JupyROOT\helpers\utils.py in DrawCanvases(); 441 drawers = GetCanvasDrawers(); 442 for drawer in drawers:; --> 443 drawer.Draw(); 444; 445 def DrawRCanvases():. ~\build\release\bin\JupyROOT\helpers\utils.py in Draw(self); 598; 599 def Draw(self):; --> 600 self._display(); 601 return 0; 602. ~\build\release\bin\JupyROOT\helpers\utils.py in _display(self); 583 self._jsDisplay(); 584 else:; --> 585 self._pngDisplay(); 586; 587 def GetDrawableObjects(self):. ~\build\release\bin\JupyROOT\helpers\utils.py in _pngDisplay(self); 572; 573 def _pngDisplay(self):; --> 574 img = self._getPngImage(); 575 IPython.display.display(img); 576. ~\build\release\bin\JupyROOT\helpers\utils.py in _getPngImage(self); 566 with _setIgnoreLevel(ROOT.kError):; 567 self.drawableObject.SaveAs(ofile.name); --> 568 img = IPython.display.Image(filename=ofile.name, format='png', embed=True); 569 #ofile.close(); 570 #os.unlink(ofile.name). c:\python38-32\lib\site-packages\IPython\core\display.py in __init__(self, data, url, filename, format, embed, width, height, retina, unconfined, metadata); 1229 self.retina = retina; 1230 self.unconfined = unconfined; -> 1231 super(Image, self).__init__(data=dat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9109
https://github.com/root-project/root/pull/9109:1336,Deployability,release,release,1336,"e the created file to prevent the following error:; ```; Error in callback <bound method CaptureDrawnPrimitives._post_execute of <JupyROOT.helpers.utils.CaptureDrawnPrimitives object at 0x0C321C58>> (for post_execute):; ---------------------------------------------------------------------------; PermissionError Traceback (most recent call last); ~\build\release\bin\JupyROOT\helpers\utils.py in _post_execute(self); 461; 462 def _post_execute(self):; --> 463 NotebookDraw(); 464; 465 def register(self):. ~\build\release\bin\JupyROOT\helpers\utils.py in NotebookDraw(); 450 def NotebookDraw():; 451 DrawGeometry(); --> 452 DrawCanvases(); 453 DrawRCanvases(); 454. ~\build\release\bin\JupyROOT\helpers\utils.py in DrawCanvases(); 441 drawers = GetCanvasDrawers(); 442 for drawer in drawers:; --> 443 drawer.Draw(); 444; 445 def DrawRCanvases():. ~\build\release\bin\JupyROOT\helpers\utils.py in Draw(self); 598; 599 def Draw(self):; --> 600 self._display(); 601 return 0; 602. ~\build\release\bin\JupyROOT\helpers\utils.py in _display(self); 583 self._jsDisplay(); 584 else:; --> 585 self._pngDisplay(); 586; 587 def GetDrawableObjects(self):. ~\build\release\bin\JupyROOT\helpers\utils.py in _pngDisplay(self); 572; 573 def _pngDisplay(self):; --> 574 img = self._getPngImage(); 575 IPython.display.display(img); 576. ~\build\release\bin\JupyROOT\helpers\utils.py in _getPngImage(self); 566 with _setIgnoreLevel(ROOT.kError):; 567 self.drawableObject.SaveAs(ofile.name); --> 568 img = IPython.display.Image(filename=ofile.name, format='png', embed=True); 569 #ofile.close(); 570 #os.unlink(ofile.name). c:\python38-32\lib\site-packages\IPython\core\display.py in __init__(self, data, url, filename, format, embed, width, height, retina, unconfined, metadata); 1229 self.retina = retina; 1230 self.unconfined = unconfined; -> 1231 super(Image, self).__init__(data=data, url=url, filename=filename,; 1232 metadata=metadata); 1233. c:\python38-32\lib\site-packages\IPython\core\display.py in __init__",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9109
https://github.com/root-project/root/pull/9109:1503,Deployability,release,release,1503,"imitives object at 0x0C321C58>> (for post_execute):; ---------------------------------------------------------------------------; PermissionError Traceback (most recent call last); ~\build\release\bin\JupyROOT\helpers\utils.py in _post_execute(self); 461; 462 def _post_execute(self):; --> 463 NotebookDraw(); 464; 465 def register(self):. ~\build\release\bin\JupyROOT\helpers\utils.py in NotebookDraw(); 450 def NotebookDraw():; 451 DrawGeometry(); --> 452 DrawCanvases(); 453 DrawRCanvases(); 454. ~\build\release\bin\JupyROOT\helpers\utils.py in DrawCanvases(); 441 drawers = GetCanvasDrawers(); 442 for drawer in drawers:; --> 443 drawer.Draw(); 444; 445 def DrawRCanvases():. ~\build\release\bin\JupyROOT\helpers\utils.py in Draw(self); 598; 599 def Draw(self):; --> 600 self._display(); 601 return 0; 602. ~\build\release\bin\JupyROOT\helpers\utils.py in _display(self); 583 self._jsDisplay(); 584 else:; --> 585 self._pngDisplay(); 586; 587 def GetDrawableObjects(self):. ~\build\release\bin\JupyROOT\helpers\utils.py in _pngDisplay(self); 572; 573 def _pngDisplay(self):; --> 574 img = self._getPngImage(); 575 IPython.display.display(img); 576. ~\build\release\bin\JupyROOT\helpers\utils.py in _getPngImage(self); 566 with _setIgnoreLevel(ROOT.kError):; 567 self.drawableObject.SaveAs(ofile.name); --> 568 img = IPython.display.Image(filename=ofile.name, format='png', embed=True); 569 #ofile.close(); 570 #os.unlink(ofile.name). c:\python38-32\lib\site-packages\IPython\core\display.py in __init__(self, data, url, filename, format, embed, width, height, retina, unconfined, metadata); 1229 self.retina = retina; 1230 self.unconfined = unconfined; -> 1231 super(Image, self).__init__(data=data, url=url, filename=filename,; 1232 metadata=metadata); 1233. c:\python38-32\lib\site-packages\IPython\core\display.py in __init__(self, data, url, filename, metadata); 635 self.metadata = {}; 636; --> 637 self.reload(); 638 self._check_data(); 639. c:\python38-32\lib\site-packages\IPython\core\d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9109
https://github.com/root-project/root/pull/9109:1678,Deployability,release,release,1678,"ast); ~\build\release\bin\JupyROOT\helpers\utils.py in _post_execute(self); 461; 462 def _post_execute(self):; --> 463 NotebookDraw(); 464; 465 def register(self):. ~\build\release\bin\JupyROOT\helpers\utils.py in NotebookDraw(); 450 def NotebookDraw():; 451 DrawGeometry(); --> 452 DrawCanvases(); 453 DrawRCanvases(); 454. ~\build\release\bin\JupyROOT\helpers\utils.py in DrawCanvases(); 441 drawers = GetCanvasDrawers(); 442 for drawer in drawers:; --> 443 drawer.Draw(); 444; 445 def DrawRCanvases():. ~\build\release\bin\JupyROOT\helpers\utils.py in Draw(self); 598; 599 def Draw(self):; --> 600 self._display(); 601 return 0; 602. ~\build\release\bin\JupyROOT\helpers\utils.py in _display(self); 583 self._jsDisplay(); 584 else:; --> 585 self._pngDisplay(); 586; 587 def GetDrawableObjects(self):. ~\build\release\bin\JupyROOT\helpers\utils.py in _pngDisplay(self); 572; 573 def _pngDisplay(self):; --> 574 img = self._getPngImage(); 575 IPython.display.display(img); 576. ~\build\release\bin\JupyROOT\helpers\utils.py in _getPngImage(self); 566 with _setIgnoreLevel(ROOT.kError):; 567 self.drawableObject.SaveAs(ofile.name); --> 568 img = IPython.display.Image(filename=ofile.name, format='png', embed=True); 569 #ofile.close(); 570 #os.unlink(ofile.name). c:\python38-32\lib\site-packages\IPython\core\display.py in __init__(self, data, url, filename, format, embed, width, height, retina, unconfined, metadata); 1229 self.retina = retina; 1230 self.unconfined = unconfined; -> 1231 super(Image, self).__init__(data=data, url=url, filename=filename,; 1232 metadata=metadata); 1233. c:\python38-32\lib\site-packages\IPython\core\display.py in __init__(self, data, url, filename, metadata); 635 self.metadata = {}; 636; --> 637 self.reload(); 638 self._check_data(); 639. c:\python38-32\lib\site-packages\IPython\core\display.py in reload(self); 1261 """"""Reload the raw data from file or URL.""""""; 1262 if self.embed:; -> 1263 super(Image,self).reload(); 1264 if self.retina:; 1265 self._retina_s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9109
https://github.com/root-project/root/pull/9110:119,Availability,error,error-in-pyroot-tutorial-twoscales-py,119,This tutorial didn't produce the same results as the C++ equivalent.; As mentioned here:; https://root-forum.cern.ch/t/error-in-pyroot-tutorial-twoscales-py/47215/2,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9110
https://github.com/root-project/root/pull/9111:0,Deployability,Update,Update,0,Update Doxyfile to doxygen 1.9.3 (doxygen -u),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9111
https://github.com/root-project/root/issues/9112:98,Integrability,inject,injecting,98,"As per discussion with Axel: have the ROOT interpreter warn about nullptr dereferences, but avoid injecting the checks in code that is not used interactively, as they bring a notable slowdown even to bug-free code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9112
https://github.com/root-project/root/issues/9112:92,Safety,avoid,avoid,92,"As per discussion with Axel: have the ROOT interpreter warn about nullptr dereferences, but avoid injecting the checks in code that is not used interactively, as they bring a notable slowdown even to bug-free code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9112
https://github.com/root-project/root/issues/9112:98,Security,inject,injecting,98,"As per discussion with Axel: have the ROOT interpreter warn about nullptr dereferences, but avoid injecting the checks in code that is not used interactively, as they bring a notable slowdown even to bug-free code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9112
https://github.com/root-project/root/issues/9114:83,Deployability,configurat,configuration,83,"ROOT is expecting to be built with exceptions since years. The corresponding CMake configuration flag needs to be removed (after deprecation). Already deprecated in 6.28, to be removed in 6.30:; - jemalloc; - tcmalloc; - pyroot_legacy. Updated list of build options to deprecate in 6.30:; - exceptions; - pythia6_nolink; - pythia6; - pyroot-python2; - oracle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9114
https://github.com/root-project/root/issues/9114:236,Deployability,Update,Updated,236,"ROOT is expecting to be built with exceptions since years. The corresponding CMake configuration flag needs to be removed (after deprecation). Already deprecated in 6.28, to be removed in 6.30:; - jemalloc; - tcmalloc; - pyroot_legacy. Updated list of build options to deprecate in 6.30:; - exceptions; - pythia6_nolink; - pythia6; - pyroot-python2; - oracle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9114
https://github.com/root-project/root/issues/9114:83,Modifiability,config,configuration,83,"ROOT is expecting to be built with exceptions since years. The corresponding CMake configuration flag needs to be removed (after deprecation). Already deprecated in 6.28, to be removed in 6.30:; - jemalloc; - tcmalloc; - pyroot_legacy. Updated list of build options to deprecate in 6.30:; - exceptions; - pythia6_nolink; - pythia6; - pyroot-python2; - oracle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9114
https://github.com/root-project/root/issues/9115:3209,Availability,down,download,3209," ; It generates a tree with `x`, `y` and `eventID`, and using weights saved in `dataset/weights/` to evaluate BDTG output. ; For each eventID it decides which fold using split expression `int([eventID])%int([numFolds])` for all the cases below:; - each event with a unique eventID as integer (as in official ROOT tutorial);; - all eventID fixed to 1 as integer;; - all eventID fixed to 2 as integer (equivalent as fixed to 0);; - all eventID fixed to 1 as float;; - all eventID fixed to 2 as float (equivalent as fixed to 0);. It can be run with `root -l TMVACrossValidationApplication.C`, and the output for ten events are listed here:; ```; eventID	 | BDT int(eventID) | BDT int(1) | BDT float(1) | BDT int(2) | BDT float(2) ; 1	 | 0.478264	 | 0.478264	 | 0.81558	 | 0.478264	 | 0.478264	 | ; 2	 | -0.626303	 | -0.626303	 | -0.796553	 | -0.626303	 | -0.626303	 | ; 3	 | -0.612484	 | -0.612484	 | -0.335053	 | -0.612484	 | -0.612484	 | ; 4	 | 0.981251	 | 0.981251	 | 0.939638	 | 0.981251	 | 0.981251	 | ; 5	 | 0.964202	 | 0.964202	 | 0.696889	 | 0.964202	 | 0.964202	 | ; 6	 | 0.992213	 | 0.992213	 | 0.989813	 | 0.992213	 | 0.992213	 | ; 7	 | 0.948738	 | 0.948738	 | 0.971397	 | 0.948738	 | 0.948738	 | ; 8	 | 0.927619	 | 0.927619	 | 0.932366	 | 0.927619	 | 0.927619	 | ; 9	 | 0.478264	 | 0.478264	 | 0.778263	 | 0.478264	 | 0.478264	 | ; 10	 | 0.994266	 | 0.994266	 | 0.996632	 | 0.994266	 | 0.994266	 | ; ```. The BDT output when fixing eventID to 1 or 2 should be different, which is the case when they are floats (column 4 and 6); ; But if eventID has integer type, whatever the value it has the BDT output is the same as if they were 0 (or the same the numFolds = 2). ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; The test above is run with ROOT 6.22 installed in macOS Catalina, though it does seem to matter much. [demo.zip](https://github.com/root-project/root/files/7342885/demo.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9115
https://github.com/root-project/root/issues/9115:3191,Deployability,install,install,3191," ; It generates a tree with `x`, `y` and `eventID`, and using weights saved in `dataset/weights/` to evaluate BDTG output. ; For each eventID it decides which fold using split expression `int([eventID])%int([numFolds])` for all the cases below:; - each event with a unique eventID as integer (as in official ROOT tutorial);; - all eventID fixed to 1 as integer;; - all eventID fixed to 2 as integer (equivalent as fixed to 0);; - all eventID fixed to 1 as float;; - all eventID fixed to 2 as float (equivalent as fixed to 0);. It can be run with `root -l TMVACrossValidationApplication.C`, and the output for ten events are listed here:; ```; eventID	 | BDT int(eventID) | BDT int(1) | BDT float(1) | BDT int(2) | BDT float(2) ; 1	 | 0.478264	 | 0.478264	 | 0.81558	 | 0.478264	 | 0.478264	 | ; 2	 | -0.626303	 | -0.626303	 | -0.796553	 | -0.626303	 | -0.626303	 | ; 3	 | -0.612484	 | -0.612484	 | -0.335053	 | -0.612484	 | -0.612484	 | ; 4	 | 0.981251	 | 0.981251	 | 0.939638	 | 0.981251	 | 0.981251	 | ; 5	 | 0.964202	 | 0.964202	 | 0.696889	 | 0.964202	 | 0.964202	 | ; 6	 | 0.992213	 | 0.992213	 | 0.989813	 | 0.992213	 | 0.992213	 | ; 7	 | 0.948738	 | 0.948738	 | 0.971397	 | 0.948738	 | 0.948738	 | ; 8	 | 0.927619	 | 0.927619	 | 0.932366	 | 0.927619	 | 0.927619	 | ; 9	 | 0.478264	 | 0.478264	 | 0.778263	 | 0.478264	 | 0.478264	 | ; 10	 | 0.994266	 | 0.994266	 | 0.996632	 | 0.994266	 | 0.994266	 | ; ```. The BDT output when fixing eventID to 1 or 2 should be different, which is the case when they are floats (column 4 and 6); ; But if eventID has integer type, whatever the value it has the BDT output is the same as if they were 0 (or the same the numFolds = 2). ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; The test above is run with ROOT 6.22 installed in macOS Catalina, though it does seem to matter much. [demo.zip](https://github.com/root-project/root/files/7342885/demo.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9115
https://github.com/root-project/root/issues/9115:3286,Deployability,install,installed,3286," ; It generates a tree with `x`, `y` and `eventID`, and using weights saved in `dataset/weights/` to evaluate BDTG output. ; For each eventID it decides which fold using split expression `int([eventID])%int([numFolds])` for all the cases below:; - each event with a unique eventID as integer (as in official ROOT tutorial);; - all eventID fixed to 1 as integer;; - all eventID fixed to 2 as integer (equivalent as fixed to 0);; - all eventID fixed to 1 as float;; - all eventID fixed to 2 as float (equivalent as fixed to 0);. It can be run with `root -l TMVACrossValidationApplication.C`, and the output for ten events are listed here:; ```; eventID	 | BDT int(eventID) | BDT int(1) | BDT float(1) | BDT int(2) | BDT float(2) ; 1	 | 0.478264	 | 0.478264	 | 0.81558	 | 0.478264	 | 0.478264	 | ; 2	 | -0.626303	 | -0.626303	 | -0.796553	 | -0.626303	 | -0.626303	 | ; 3	 | -0.612484	 | -0.612484	 | -0.335053	 | -0.612484	 | -0.612484	 | ; 4	 | 0.981251	 | 0.981251	 | 0.939638	 | 0.981251	 | 0.981251	 | ; 5	 | 0.964202	 | 0.964202	 | 0.696889	 | 0.964202	 | 0.964202	 | ; 6	 | 0.992213	 | 0.992213	 | 0.989813	 | 0.992213	 | 0.992213	 | ; 7	 | 0.948738	 | 0.948738	 | 0.971397	 | 0.948738	 | 0.948738	 | ; 8	 | 0.927619	 | 0.927619	 | 0.932366	 | 0.927619	 | 0.927619	 | ; 9	 | 0.478264	 | 0.478264	 | 0.778263	 | 0.478264	 | 0.478264	 | ; 10	 | 0.994266	 | 0.994266	 | 0.996632	 | 0.994266	 | 0.994266	 | ; ```. The BDT output when fixing eventID to 1 or 2 should be different, which is the case when they are floats (column 4 and 6); ; But if eventID has integer type, whatever the value it has the BDT output is the same as if they were 0 (or the same the numFolds = 2). ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; The test above is run with ROOT 6.22 installed in macOS Catalina, though it does seem to matter much. [demo.zip](https://github.com/root-project/root/files/7342885/demo.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9115
https://github.com/root-project/root/issues/9115:301,Modifiability,variab,variables,301,"### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `$ROOTSYS/tutorial/tmva/TMVACrossValidationApplication.C` provides a nice example of applying weights trained using the code `$ROOTSYS/tutorial/tmva/TMVACrossValidation.C`. It assumes the data file has variables `x`, `y` and `eventID`, and assigns the fold deterministically using split expression `int([eventID])%int([numFolds])`, where in this case `numFolds = 2`. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; The spectator `eventID` has integer type in training and in application, however TMVA seems to treat all variables as float, and there is problem in converting integer type into float when treating the split expression. My observation is the split expression returns 0 all the time, namely instead of assigning weights from fold `int([eventID])%int([numFolds])` it actually always assigning to fold 0 or `numFolds`. A simple fix is to require `eventID` in the data has type float. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Attached files contains a modified `TMVACrossValidationApplication.C` demonstrating the issues. ; It generates a tree with `x`, `y` and `eventID`, and using weights saved in `dataset/weights/` to evaluate BDTG output. ; For each eventID it decides which fold using split expression `int([eventID])%int([numFolds])` for all the cases below:; - each event with a unique eventID as integer (as in official ROOT tutorial);; - all eventID fixed to 1 as integer;; - all eventID fixed to 2 as integer (equivalent as fixed to 0);; - all eventID fixed to 1 as float;; - all eventID fixed to 2 as float (equivalent as fixed to 0);. It can be run with `root -l TMVACrossValidationAppli",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9115
https://github.com/root-project/root/issues/9115:668,Modifiability,variab,variables,668,"### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `$ROOTSYS/tutorial/tmva/TMVACrossValidationApplication.C` provides a nice example of applying weights trained using the code `$ROOTSYS/tutorial/tmva/TMVACrossValidation.C`. It assumes the data file has variables `x`, `y` and `eventID`, and assigns the fold deterministically using split expression `int([eventID])%int([numFolds])`, where in this case `numFolds = 2`. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; The spectator `eventID` has integer type in training and in application, however TMVA seems to treat all variables as float, and there is problem in converting integer type into float when treating the split expression. My observation is the split expression returns 0 all the time, namely instead of assigning weights from fold `int([eventID])%int([numFolds])` it actually always assigning to fold 0 or `numFolds`. A simple fix is to require `eventID` in the data has type float. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Attached files contains a modified `TMVACrossValidationApplication.C` demonstrating the issues. ; It generates a tree with `x`, `y` and `eventID`, and using weights saved in `dataset/weights/` to evaluate BDTG output. ; For each eventID it decides which fold using split expression `int([eventID])%int([numFolds])` for all the cases below:; - each event with a unique eventID as integer (as in official ROOT tutorial);; - all eventID fixed to 1 as integer;; - all eventID fixed to 2 as integer (equivalent as fixed to 0);; - all eventID fixed to 1 as float;; - all eventID fixed to 2 as float (equivalent as fixed to 0);. It can be run with `root -l TMVACrossValidationAppli",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9115
https://github.com/root-project/root/issues/9115:3253,Testability,test,test,3253," ; It generates a tree with `x`, `y` and `eventID`, and using weights saved in `dataset/weights/` to evaluate BDTG output. ; For each eventID it decides which fold using split expression `int([eventID])%int([numFolds])` for all the cases below:; - each event with a unique eventID as integer (as in official ROOT tutorial);; - all eventID fixed to 1 as integer;; - all eventID fixed to 2 as integer (equivalent as fixed to 0);; - all eventID fixed to 1 as float;; - all eventID fixed to 2 as float (equivalent as fixed to 0);. It can be run with `root -l TMVACrossValidationApplication.C`, and the output for ten events are listed here:; ```; eventID	 | BDT int(eventID) | BDT int(1) | BDT float(1) | BDT int(2) | BDT float(2) ; 1	 | 0.478264	 | 0.478264	 | 0.81558	 | 0.478264	 | 0.478264	 | ; 2	 | -0.626303	 | -0.626303	 | -0.796553	 | -0.626303	 | -0.626303	 | ; 3	 | -0.612484	 | -0.612484	 | -0.335053	 | -0.612484	 | -0.612484	 | ; 4	 | 0.981251	 | 0.981251	 | 0.939638	 | 0.981251	 | 0.981251	 | ; 5	 | 0.964202	 | 0.964202	 | 0.696889	 | 0.964202	 | 0.964202	 | ; 6	 | 0.992213	 | 0.992213	 | 0.989813	 | 0.992213	 | 0.992213	 | ; 7	 | 0.948738	 | 0.948738	 | 0.971397	 | 0.948738	 | 0.948738	 | ; 8	 | 0.927619	 | 0.927619	 | 0.932366	 | 0.927619	 | 0.927619	 | ; 9	 | 0.478264	 | 0.478264	 | 0.778263	 | 0.478264	 | 0.478264	 | ; 10	 | 0.994266	 | 0.994266	 | 0.996632	 | 0.994266	 | 0.994266	 | ; ```. The BDT output when fixing eventID to 1 or 2 should be different, which is the case when they are floats (column 4 and 6); ; But if eventID has integer type, whatever the value it has the BDT output is the same as if they were 0 (or the same the numFolds = 2). ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; The test above is run with ROOT 6.22 installed in macOS Catalina, though it does seem to matter much. [demo.zip](https://github.com/root-project/root/files/7342885/demo.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9115
https://github.com/root-project/root/issues/9115:31,Usability,clear,clear,31,"### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `$ROOTSYS/tutorial/tmva/TMVACrossValidationApplication.C` provides a nice example of applying weights trained using the code `$ROOTSYS/tutorial/tmva/TMVACrossValidation.C`. It assumes the data file has variables `x`, `y` and `eventID`, and assigns the fold deterministically using split expression `int([eventID])%int([numFolds])`, where in this case `numFolds = 2`. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; The spectator `eventID` has integer type in training and in application, however TMVA seems to treat all variables as float, and there is problem in converting integer type into float when treating the split expression. My observation is the split expression returns 0 all the time, namely instead of assigning weights from fold `int([eventID])%int([numFolds])` it actually always assigning to fold 0 or `numFolds`. A simple fix is to require `eventID` in the data has type float. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Attached files contains a modified `TMVACrossValidationApplication.C` demonstrating the issues. ; It generates a tree with `x`, `y` and `eventID`, and using weights saved in `dataset/weights/` to evaluate BDTG output. ; For each eventID it decides which fold using split expression `int([eventID])%int([numFolds])` for all the cases below:; - each event with a unique eventID as integer (as in official ROOT tutorial);; - all eventID fixed to 1 as integer;; - all eventID fixed to 2 as integer (equivalent as fixed to 0);; - all eventID fixed to 1 as float;; - all eventID fixed to 2 as float (equivalent as fixed to 0);. It can be run with `root -l TMVACrossValidationAppli",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9115
https://github.com/root-project/root/issues/9115:496,Usability,clear,clear,496,"### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `$ROOTSYS/tutorial/tmva/TMVACrossValidationApplication.C` provides a nice example of applying weights trained using the code `$ROOTSYS/tutorial/tmva/TMVACrossValidation.C`. It assumes the data file has variables `x`, `y` and `eventID`, and assigns the fold deterministically using split expression `int([eventID])%int([numFolds])`, where in this case `numFolds = 2`. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; The spectator `eventID` has integer type in training and in application, however TMVA seems to treat all variables as float, and there is problem in converting integer type into float when treating the split expression. My observation is the split expression returns 0 all the time, namely instead of assigning weights from fold `int([eventID])%int([numFolds])` it actually always assigning to fold 0 or `numFolds`. A simple fix is to require `eventID` in the data has type float. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Attached files contains a modified `TMVACrossValidationApplication.C` demonstrating the issues. ; It generates a tree with `x`, `y` and `eventID`, and using weights saved in `dataset/weights/` to evaluate BDTG output. ; For each eventID it decides which fold using split expression `int([eventID])%int([numFolds])` for all the cases below:; - each event with a unique eventID as integer (as in official ROOT tutorial);; - all eventID fixed to 1 as integer;; - all eventID fixed to 2 as integer (equivalent as fixed to 0);; - all eventID fixed to 1 as float;; - all eventID fixed to 2 as float (equivalent as fixed to 0);. It can be run with `root -l TMVACrossValidationAppli",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9115
https://github.com/root-project/root/issues/9115:981,Usability,simpl,simple,981,"ed behavior; <!--; A clear and concise description of what you expected to happen.; -->; `$ROOTSYS/tutorial/tmva/TMVACrossValidationApplication.C` provides a nice example of applying weights trained using the code `$ROOTSYS/tutorial/tmva/TMVACrossValidation.C`. It assumes the data file has variables `x`, `y` and `eventID`, and assigns the fold deterministically using split expression `int([eventID])%int([numFolds])`, where in this case `numFolds = 2`. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; The spectator `eventID` has integer type in training and in application, however TMVA seems to treat all variables as float, and there is problem in converting integer type into float when treating the split expression. My observation is the split expression returns 0 all the time, namely instead of assigning weights from fold `int([eventID])%int([numFolds])` it actually always assigning to fold 0 or `numFolds`. A simple fix is to require `eventID` in the data has type float. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Attached files contains a modified `TMVACrossValidationApplication.C` demonstrating the issues. ; It generates a tree with `x`, `y` and `eventID`, and using weights saved in `dataset/weights/` to evaluate BDTG output. ; For each eventID it decides which fold using split expression `int([eventID])%int([numFolds])` for all the cases below:; - each event with a unique eventID as integer (as in official ROOT tutorial);; - all eventID fixed to 1 as integer;; - all eventID fixed to 2 as integer (equivalent as fixed to 0);; - all eventID fixed to 1 as float;; - all eventID fixed to 2 as float (equivalent as fixed to 0);. It can be run with `root -l TMVACrossValidationApplication.C`,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9115
https://github.com/root-project/root/issues/9118:86,Availability,error,errors,86,"Running a weighted batch fit in Batch mode on an unweighted data set results in wrong errors du to a wrong Hessian computed the second time. ; Here is the code reproducing the problem:; ```; import ROOT as r. c1 = r.TCanvas(). def fit(sumw2 = False, batchmode = False, binned = False, minimizer = ""Minuit2"", printLevel = 0 ):; if (batchmode) :; print(""running in batchmode""); if (sumw2) :; print(""using weight correction""); r.RooRandom.randomGenerator().SetSeed(4357); ws = r.RooWorkspace(""workspace""); x = ws.factory(""x[-10, 10]""); sig = ws.factory(""Gaussian::sig(x, mu[-1, 1], s[0.1, 5])""); bkg = ws.factory(""Chebychev::bkg(x, {c1[0.1, -1, 1]})""); shp = ws.factory(""SUM::shp(Nsig[0, 20000] * sig, Nbkg[0, 20000] * bkg)""); if (binned) :; data = shp.generateBinned(r.RooArgSet(x)); else :; data = shp.generate(r.RooArgSet(x)); data.Print(); ws.Import(data); res1 = shp.fitTo(; data,; r.RooFit.Extended(),; r.RooFit.Save(),; r.RooFit.SumW2Error(sumw2),; r.RooFit.Strategy(1),; r.RooFit.BatchMode(batchmode),; r.RooFit.Minimizer(minimizer),; r.RooFit.PrintLevel(printLevel); ); res1.Print(); pl = x.frame(); data.plotOn(pl); shp.plotOn(pl); pl.Draw(); c1.SaveAs(""fit.png""). ; fit(1,1,1,""Minuit"",2) # you can see second covariance matrix is completely wrong ; ```. This was reported in https://root-forum.cern.ch/t/sumw2error-gives-unexpected-results-with-unweighted-datasets-batchmode/47206",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9118
https://github.com/root-project/root/issues/9118:893,Modifiability,Extend,Extended,893,"Running a weighted batch fit in Batch mode on an unweighted data set results in wrong errors du to a wrong Hessian computed the second time. ; Here is the code reproducing the problem:; ```; import ROOT as r. c1 = r.TCanvas(). def fit(sumw2 = False, batchmode = False, binned = False, minimizer = ""Minuit2"", printLevel = 0 ):; if (batchmode) :; print(""running in batchmode""); if (sumw2) :; print(""using weight correction""); r.RooRandom.randomGenerator().SetSeed(4357); ws = r.RooWorkspace(""workspace""); x = ws.factory(""x[-10, 10]""); sig = ws.factory(""Gaussian::sig(x, mu[-1, 1], s[0.1, 5])""); bkg = ws.factory(""Chebychev::bkg(x, {c1[0.1, -1, 1]})""); shp = ws.factory(""SUM::shp(Nsig[0, 20000] * sig, Nbkg[0, 20000] * bkg)""); if (binned) :; data = shp.generateBinned(r.RooArgSet(x)); else :; data = shp.generate(r.RooArgSet(x)); data.Print(); ws.Import(data); res1 = shp.fitTo(; data,; r.RooFit.Extended(),; r.RooFit.Save(),; r.RooFit.SumW2Error(sumw2),; r.RooFit.Strategy(1),; r.RooFit.BatchMode(batchmode),; r.RooFit.Minimizer(minimizer),; r.RooFit.PrintLevel(printLevel); ); res1.Print(); pl = x.frame(); data.plotOn(pl); shp.plotOn(pl); pl.Draw(); c1.SaveAs(""fit.png""). ; fit(1,1,1,""Minuit"",2) # you can see second covariance matrix is completely wrong ; ```. This was reported in https://root-forum.cern.ch/t/sumw2error-gives-unexpected-results-with-unweighted-datasets-batchmode/47206",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9118
https://github.com/root-project/root/pull/9119:45,Modifiability,layers,layers,45,This PR adds support for parsing Convolution layers from PyTorch models into an RModel object. Progress; - [x] Support for PyTorch Convolution Layers (Conv2D); - [x] Tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9119
https://github.com/root-project/root/pull/9119:143,Modifiability,Layers,Layers,143,This PR adds support for parsing Convolution layers from PyTorch models into an RModel object. Progress; - [x] Support for PyTorch Convolution Layers (Conv2D); - [x] Tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9119
https://github.com/root-project/root/pull/9119:166,Testability,Test,Tests,166,This PR adds support for parsing Convolution layers from PyTorch models into an RModel object. Progress; - [x] Support for PyTorch Convolution Layers (Conv2D); - [x] Tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9119
https://github.com/root-project/root/pull/9120:520,Usability,Simpl,Simple,520,"In the special RooFit workspace functions implemented in; RooFactoryWSTool, the tool creates a given RooFit object that is then; imported in the workspace. For example, a RooAddPdf is created when you; use `SUM` in `RooWorkspace::factory()`. When these objects are; imported, they are copied, so the original object is still owned by the; RooFactoryWSTool. In some cases, the original object is not deleted,; causing a memory leak and even worse duplicate client nodes in the; computation graph. This commit fixes that. Simple reproducer for the problem with the duplicate client nodes that; this commit solves:. ```C++; RooWorkspace w;; w.factory(""Gaussian::g1(x[0,20],mx1[10,0,20],sx1[3,0,10])"");; w.factory(""Gaussian::g2(x,mx2[10,0,20],sx2[1,0,10])"");; w.factory(""Gaussian::g3(y[0,20],my[10,0,20],sy[2,0,10])"");; w.factory(""Polynomial::pol(y,a[-0.01,-0.05,0.1])"");. w.factory(""SUM::pdfx(fx[0.2,0,1]*g1,g2)"");; w.factory(""SUM::pdfy(fy[0.4,0.,1.]*g3,pol)"");. w.pdf(""g1"")->Print(""V"");; w.pdf(""g3"")->Print(""V"");; ```. You will see that `pdfx` appears twice as a client of `g1`, and `pdfy`; appears twice as a client of `g3`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9120
https://github.com/root-project/root/pull/9122:71,Deployability,release,release,71,"In preparation for the Dask backend, we need to be sure that we always release the GIL while running distributed RDataFrame applications. In this context, it is better to have a single coherent place where all the computation graph nodes are triggered. This PR introduces changes in the `ComputationGraphGenerator` class so that the `ROOT.RDF.RunGraphs` function can be called (with the GIL released beforehand) in order to trigger the computations.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9122
https://github.com/root-project/root/pull/9122:391,Deployability,release,released,391,"In preparation for the Dask backend, we need to be sure that we always release the GIL while running distributed RDataFrame applications. In this context, it is better to have a single coherent place where all the computation graph nodes are triggered. This PR introduces changes in the `ComputationGraphGenerator` class so that the `ROOT.RDF.RunGraphs` function can be called (with the GIL released beforehand) in order to trigger the computations.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9122
https://github.com/root-project/root/issues/9123:134,Availability,avail,available,134,"when i want to run root file like root (filename).root this came Warning in <TClass::Init>: no dictionary for class TRootLHEFEvent is available Warning in <TClass::Init>: no dictionary for class TRootWeight is available Warning in <TClass::Init>: no dictionary for class TRootLHEFParticle is available Warning in <TClass::Init>: no dictionary for class TSortableObject is available (TFile *) 0x5614f99a3290 how can i resolve this. - [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9123
https://github.com/root-project/root/issues/9123:210,Availability,avail,available,210,"when i want to run root file like root (filename).root this came Warning in <TClass::Init>: no dictionary for class TRootLHEFEvent is available Warning in <TClass::Init>: no dictionary for class TRootWeight is available Warning in <TClass::Init>: no dictionary for class TRootLHEFParticle is available Warning in <TClass::Init>: no dictionary for class TSortableObject is available (TFile *) 0x5614f99a3290 how can i resolve this. - [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9123
https://github.com/root-project/root/issues/9123:292,Availability,avail,available,292,"when i want to run root file like root (filename).root this came Warning in <TClass::Init>: no dictionary for class TRootLHEFEvent is available Warning in <TClass::Init>: no dictionary for class TRootWeight is available Warning in <TClass::Init>: no dictionary for class TRootLHEFParticle is available Warning in <TClass::Init>: no dictionary for class TSortableObject is available (TFile *) 0x5614f99a3290 how can i resolve this. - [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9123
https://github.com/root-project/root/issues/9123:372,Availability,avail,available,372,"when i want to run root file like root (filename).root this came Warning in <TClass::Init>: no dictionary for class TRootLHEFEvent is available Warning in <TClass::Init>: no dictionary for class TRootWeight is available Warning in <TClass::Init>: no dictionary for class TRootLHEFParticle is available Warning in <TClass::Init>: no dictionary for class TSortableObject is available (TFile *) 0x5614f99a3290 how can i resolve this. - [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9123
https://github.com/root-project/root/issues/9123:1383,Availability,down,download,1383,"when i want to run root file like root (filename).root this came Warning in <TClass::Init>: no dictionary for class TRootLHEFEvent is available Warning in <TClass::Init>: no dictionary for class TRootWeight is available Warning in <TClass::Init>: no dictionary for class TRootLHEFParticle is available Warning in <TClass::Init>: no dictionary for class TSortableObject is available (TFile *) 0x5614f99a3290 how can i resolve this. - [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9123
https://github.com/root-project/root/issues/9123:1365,Deployability,install,install,1365,"when i want to run root file like root (filename).root this came Warning in <TClass::Init>: no dictionary for class TRootLHEFEvent is available Warning in <TClass::Init>: no dictionary for class TRootWeight is available Warning in <TClass::Init>: no dictionary for class TRootLHEFParticle is available Warning in <TClass::Init>: no dictionary for class TSortableObject is available (TFile *) 0x5614f99a3290 how can i resolve this. - [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9123
https://github.com/root-project/root/issues/9123:822,Usability,clear,clear,822,"when i want to run root file like root (filename).root this came Warning in <TClass::Init>: no dictionary for class TRootLHEFEvent is available Warning in <TClass::Init>: no dictionary for class TRootWeight is available Warning in <TClass::Init>: no dictionary for class TRootLHEFParticle is available Warning in <TClass::Init>: no dictionary for class TSortableObject is available (TFile *) 0x5614f99a3290 how can i resolve this. - [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9123
https://github.com/root-project/root/issues/9123:920,Usability,clear,clear,920,"when i want to run root file like root (filename).root this came Warning in <TClass::Init>: no dictionary for class TRootLHEFEvent is available Warning in <TClass::Init>: no dictionary for class TRootWeight is available Warning in <TClass::Init>: no dictionary for class TRootLHEFParticle is available Warning in <TClass::Init>: no dictionary for class TSortableObject is available (TFile *) 0x5614f99a3290 how can i resolve this. - [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9123
https://github.com/root-project/root/pull/9124:559,Deployability,update,updated,559,"# This Pull request: [RDFD][Fix #7205] Print() now indicates non-fitting columns. ## Changes or fixes:. In case of tables of many columns, Print() now have a right-most; column of dots (...). Moreover, the user will be notified with an; info message as well. Print() guarantees that at least 1 column of the table is displayed; (regardless the width of the first column). The default maximum allowed width of the table is increased to 100; (from 80). New tests written to check the behaviour of wide tables. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #7205",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9124
https://github.com/root-project/root/pull/9124:242,Integrability,message,message,242,"# This Pull request: [RDFD][Fix #7205] Print() now indicates non-fitting columns. ## Changes or fixes:. In case of tables of many columns, Print() now have a right-most; column of dots (...). Moreover, the user will be notified with an; info message as well. Print() guarantees that at least 1 column of the table is displayed; (regardless the width of the first column). The default maximum allowed width of the table is increased to 100; (from 80). New tests written to check the behaviour of wide tables. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #7205",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9124
https://github.com/root-project/root/pull/9124:455,Testability,test,tests,455,"# This Pull request: [RDFD][Fix #7205] Print() now indicates non-fitting columns. ## Changes or fixes:. In case of tables of many columns, Print() now have a right-most; column of dots (...). Moreover, the user will be notified with an; info message as well. Print() guarantees that at least 1 column of the table is displayed; (regardless the width of the first column). The default maximum allowed width of the table is increased to 100; (from 80). New tests written to check the behaviour of wide tables. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #7205",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9124
https://github.com/root-project/root/pull/9124:529,Testability,test,tested,529,"# This Pull request: [RDFD][Fix #7205] Print() now indicates non-fitting columns. ## Changes or fixes:. In case of tables of many columns, Print() now have a right-most; column of dots (...). Moreover, the user will be notified with an; info message as well. Print() guarantees that at least 1 column of the table is displayed; (regardless the width of the first column). The default maximum allowed width of the table is increased to 100; (from 80). New tests written to check the behaviour of wide tables. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #7205",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9124
https://github.com/root-project/root/pull/9128:166,Availability,avail,available,166,"A `@pythonization` decorator was already being used internally in ROOT to register pythonizor functions for ROOT classes. Such decorator has been redesigned and made available to users via the ROOT module to pythonize their classes. The decorator accepts two parameters: the target of the pythonization (a string or an iterable of strings) and - optionally - a boolean that says if the string(s) are full class names or prefixes. Let's see this better with examples. If I want to pythonize class `C`, I can define a pythonizor function like this:; ```python; from ROOT import pythonization. @pythonization(""C""); def pythonizor_C(klass, name):; ...; ```; where `klass` is the Python proxy class for `C` and `name` is the name of the class (i.e. ""C""). The reason I kept `name` as parameter is for convenience for the user, since she might want to do some more complex filtering than what the decorator offers (this will be more useful in the examples for prefixes below). If I want to apply the same pythonizor to more than one class, e.g. `C` and `B`, I can do:; ```python; @pythonization([ ""C"", ""B"" ]); def pythonizor_C_B(klass, name):; ...; ```; Note that classes in namespaces also work, e.g. `@pythonization(""NS1::C"")` or `@pythonization([""NS1::C"", ""NS1::NS2::B""])` are also valid. Regarding prefixes, I wanted to provide an option to match multiple classes without specifying their names one by one. This can be useful, for instance, for templated classes, since we might want to apply the same pythonizor to any instantiation of the templated class no matter with what type it was instantiated (note that pythonizors are not applied to templates but to classes). So it is also possible to do (this time picking a real example from ROOT):; ```python; @pythonization(""ROOT::VecOps::RVec<"", is_prefix=True); def pythonizor_RVec(klass, name):; ...; ```; The `is_prefix` argument (`False` by default) tells that I want to match anything that starts with `ROOT::VecOps::RVec<`, e.g. `ROOT::VecOps::RVec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9128
https://github.com/root-project/root/pull/9128:2595,Energy Efficiency,efficient,efficient,2595,"). So it is also possible to do (this time picking a real example from ROOT):; ```python; @pythonization(""ROOT::VecOps::RVec<"", is_prefix=True); def pythonizor_RVec(klass, name):; ...; ```; The `is_prefix` argument (`False` by default) tells that I want to match anything that starts with `ROOT::VecOps::RVec<`, e.g. `ROOT::VecOps::RVec<float>`. The same thing can be done with an iterable too:; ```python; @pythonization([ ""ROOT::VecOps::RVec<"", ""std::vector<"" ], is_prefix=True); def pythonizor_RVec_stdvec(klass, name):; ...; ```. Alternatively, I could have allowed regular expressions. I discarded that because of two reasons:; - They are more costly that simple string comparison.; - They complicate the registration of pythonizors per scope. In this new `@pythonization` decorator, the scope of the class is parsed (e.g. `NS1::NS2` for `NS1::NS2::C`) and the pythonizor is _registered for that scope_. This allows for more efficient lookup of the pythonizors to apply, because when a class is accessed for the first time, only the pythonizors registered for its scope will be attempted. This is nice for user classes, because if a user class belongs to `UserNamespace`, when the user script first accesses the class only the pythonizors for classes in `UserNamespace` will be tried, and not every single registered pythonizor (in particular, not all the pythonizors ROOT registers for its classes in the global namespace). So I prefer to have a clean static prefix that unambiguously tells me what the target scope is than something like `NS1::(.+)::C`. And if the user wants to do an additional complex matching with regular expressions, they can still do so in their pythonizor code via the `name` parameter. I'd like to hear the opinion of @pikacic and @daritter about this since we've discussed about this decorator in the past (no need to review the whole PR, giving your opinion on the programming examples is already more than enough!). EDIT: I have received some feedback from @eguiraud",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9128
https://github.com/root-project/root/pull/9128:3849,Integrability,inject,injected,3849,"ressions. I discarded that because of two reasons:; - They are more costly that simple string comparison.; - They complicate the registration of pythonizors per scope. In this new `@pythonization` decorator, the scope of the class is parsed (e.g. `NS1::NS2` for `NS1::NS2::C`) and the pythonizor is _registered for that scope_. This allows for more efficient lookup of the pythonizors to apply, because when a class is accessed for the first time, only the pythonizors registered for its scope will be attempted. This is nice for user classes, because if a user class belongs to `UserNamespace`, when the user script first accesses the class only the pythonizors for classes in `UserNamespace` will be tried, and not every single registered pythonizor (in particular, not all the pythonizors ROOT registers for its classes in the global namespace). So I prefer to have a clean static prefix that unambiguously tells me what the target scope is than something like `NS1::(.+)::C`. And if the user wants to do an additional complex matching with regular expressions, they can still do so in their pythonizor code via the `name` parameter. I'd like to hear the opinion of @pikacic and @daritter about this since we've discussed about this decorator in the past (no need to review the whole PR, giving your opinion on the programming examples is already more than enough!). EDIT: I have received some feedback from @eguiraud on the `name` parameter: he thinks it could be removed since some users won't need it (they won't do any further filtering inside the pythonizor). As an alternative, `name` could be injected in `klass` before the user pythonizor runs (so users would access it as `klass.name`), but that could cause a clash if `name` is already a static member of the class. There is also `klass.__cpp_name__` that is provided by cppyy with the fully qualified name of the class, so we could rely on that too. @vepadulano would rather keep `name` as a parameter. I'd like to hear more opinions :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9128
https://github.com/root-project/root/pull/9128:2665,Security,access,accessed,2665,"). So it is also possible to do (this time picking a real example from ROOT):; ```python; @pythonization(""ROOT::VecOps::RVec<"", is_prefix=True); def pythonizor_RVec(klass, name):; ...; ```; The `is_prefix` argument (`False` by default) tells that I want to match anything that starts with `ROOT::VecOps::RVec<`, e.g. `ROOT::VecOps::RVec<float>`. The same thing can be done with an iterable too:; ```python; @pythonization([ ""ROOT::VecOps::RVec<"", ""std::vector<"" ], is_prefix=True); def pythonizor_RVec_stdvec(klass, name):; ...; ```. Alternatively, I could have allowed regular expressions. I discarded that because of two reasons:; - They are more costly that simple string comparison.; - They complicate the registration of pythonizors per scope. In this new `@pythonization` decorator, the scope of the class is parsed (e.g. `NS1::NS2` for `NS1::NS2::C`) and the pythonizor is _registered for that scope_. This allows for more efficient lookup of the pythonizors to apply, because when a class is accessed for the first time, only the pythonizors registered for its scope will be attempted. This is nice for user classes, because if a user class belongs to `UserNamespace`, when the user script first accesses the class only the pythonizors for classes in `UserNamespace` will be tried, and not every single registered pythonizor (in particular, not all the pythonizors ROOT registers for its classes in the global namespace). So I prefer to have a clean static prefix that unambiguously tells me what the target scope is than something like `NS1::(.+)::C`. And if the user wants to do an additional complex matching with regular expressions, they can still do so in their pythonizor code via the `name` parameter. I'd like to hear the opinion of @pikacic and @daritter about this since we've discussed about this decorator in the past (no need to review the whole PR, giving your opinion on the programming examples is already more than enough!). EDIT: I have received some feedback from @eguiraud",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9128
https://github.com/root-project/root/pull/9128:2869,Security,access,accesses,2869,"h anything that starts with `ROOT::VecOps::RVec<`, e.g. `ROOT::VecOps::RVec<float>`. The same thing can be done with an iterable too:; ```python; @pythonization([ ""ROOT::VecOps::RVec<"", ""std::vector<"" ], is_prefix=True); def pythonizor_RVec_stdvec(klass, name):; ...; ```. Alternatively, I could have allowed regular expressions. I discarded that because of two reasons:; - They are more costly that simple string comparison.; - They complicate the registration of pythonizors per scope. In this new `@pythonization` decorator, the scope of the class is parsed (e.g. `NS1::NS2` for `NS1::NS2::C`) and the pythonizor is _registered for that scope_. This allows for more efficient lookup of the pythonizors to apply, because when a class is accessed for the first time, only the pythonizors registered for its scope will be attempted. This is nice for user classes, because if a user class belongs to `UserNamespace`, when the user script first accesses the class only the pythonizors for classes in `UserNamespace` will be tried, and not every single registered pythonizor (in particular, not all the pythonizors ROOT registers for its classes in the global namespace). So I prefer to have a clean static prefix that unambiguously tells me what the target scope is than something like `NS1::(.+)::C`. And if the user wants to do an additional complex matching with regular expressions, they can still do so in their pythonizor code via the `name` parameter. I'd like to hear the opinion of @pikacic and @daritter about this since we've discussed about this decorator in the past (no need to review the whole PR, giving your opinion on the programming examples is already more than enough!). EDIT: I have received some feedback from @eguiraud on the `name` parameter: he thinks it could be removed since some users won't need it (they won't do any further filtering inside the pythonizor). As an alternative, `name` could be injected in `klass` before the user pythonizor runs (so users would access it",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9128
https://github.com/root-project/root/pull/9128:3849,Security,inject,injected,3849,"ressions. I discarded that because of two reasons:; - They are more costly that simple string comparison.; - They complicate the registration of pythonizors per scope. In this new `@pythonization` decorator, the scope of the class is parsed (e.g. `NS1::NS2` for `NS1::NS2::C`) and the pythonizor is _registered for that scope_. This allows for more efficient lookup of the pythonizors to apply, because when a class is accessed for the first time, only the pythonizors registered for its scope will be attempted. This is nice for user classes, because if a user class belongs to `UserNamespace`, when the user script first accesses the class only the pythonizors for classes in `UserNamespace` will be tried, and not every single registered pythonizor (in particular, not all the pythonizors ROOT registers for its classes in the global namespace). So I prefer to have a clean static prefix that unambiguously tells me what the target scope is than something like `NS1::(.+)::C`. And if the user wants to do an additional complex matching with regular expressions, they can still do so in their pythonizor code via the `name` parameter. I'd like to hear the opinion of @pikacic and @daritter about this since we've discussed about this decorator in the past (no need to review the whole PR, giving your opinion on the programming examples is already more than enough!). EDIT: I have received some feedback from @eguiraud on the `name` parameter: he thinks it could be removed since some users won't need it (they won't do any further filtering inside the pythonizor). As an alternative, `name` could be injected in `klass` before the user pythonizor runs (so users would access it as `klass.name`), but that could cause a clash if `name` is already a static member of the class. There is also `klass.__cpp_name__` that is provided by cppyy with the fully qualified name of the class, so we could rely on that too. @vepadulano would rather keep `name` as a parameter. I'd like to hear more opinions :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9128
https://github.com/root-project/root/pull/9128:3917,Security,access,access,3917,"ressions. I discarded that because of two reasons:; - They are more costly that simple string comparison.; - They complicate the registration of pythonizors per scope. In this new `@pythonization` decorator, the scope of the class is parsed (e.g. `NS1::NS2` for `NS1::NS2::C`) and the pythonizor is _registered for that scope_. This allows for more efficient lookup of the pythonizors to apply, because when a class is accessed for the first time, only the pythonizors registered for its scope will be attempted. This is nice for user classes, because if a user class belongs to `UserNamespace`, when the user script first accesses the class only the pythonizors for classes in `UserNamespace` will be tried, and not every single registered pythonizor (in particular, not all the pythonizors ROOT registers for its classes in the global namespace). So I prefer to have a clean static prefix that unambiguously tells me what the target scope is than something like `NS1::(.+)::C`. And if the user wants to do an additional complex matching with regular expressions, they can still do so in their pythonizor code via the `name` parameter. I'd like to hear the opinion of @pikacic and @daritter about this since we've discussed about this decorator in the past (no need to review the whole PR, giving your opinion on the programming examples is already more than enough!). EDIT: I have received some feedback from @eguiraud on the `name` parameter: he thinks it could be removed since some users won't need it (they won't do any further filtering inside the pythonizor). As an alternative, `name` could be injected in `klass` before the user pythonizor runs (so users would access it as `klass.name`), but that could cause a clash if `name` is already a static member of the class. There is also `klass.__cpp_name__` that is provided by cppyy with the fully qualified name of the class, so we could rely on that too. @vepadulano would rather keep `name` as a parameter. I'd like to hear more opinions :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9128
https://github.com/root-project/root/pull/9128:2326,Usability,simpl,simple,2326,", I wanted to provide an option to match multiple classes without specifying their names one by one. This can be useful, for instance, for templated classes, since we might want to apply the same pythonizor to any instantiation of the templated class no matter with what type it was instantiated (note that pythonizors are not applied to templates but to classes). So it is also possible to do (this time picking a real example from ROOT):; ```python; @pythonization(""ROOT::VecOps::RVec<"", is_prefix=True); def pythonizor_RVec(klass, name):; ...; ```; The `is_prefix` argument (`False` by default) tells that I want to match anything that starts with `ROOT::VecOps::RVec<`, e.g. `ROOT::VecOps::RVec<float>`. The same thing can be done with an iterable too:; ```python; @pythonization([ ""ROOT::VecOps::RVec<"", ""std::vector<"" ], is_prefix=True); def pythonizor_RVec_stdvec(klass, name):; ...; ```. Alternatively, I could have allowed regular expressions. I discarded that because of two reasons:; - They are more costly that simple string comparison.; - They complicate the registration of pythonizors per scope. In this new `@pythonization` decorator, the scope of the class is parsed (e.g. `NS1::NS2` for `NS1::NS2::C`) and the pythonizor is _registered for that scope_. This allows for more efficient lookup of the pythonizors to apply, because when a class is accessed for the first time, only the pythonizors registered for its scope will be attempted. This is nice for user classes, because if a user class belongs to `UserNamespace`, when the user script first accesses the class only the pythonizors for classes in `UserNamespace` will be tried, and not every single registered pythonizor (in particular, not all the pythonizors ROOT registers for its classes in the global namespace). So I prefer to have a clean static prefix that unambiguously tells me what the target scope is than something like `NS1::(.+)::C`. And if the user wants to do an additional complex matching with regular expre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9128
https://github.com/root-project/root/pull/9128:3643,Usability,feedback,feedback,3643,"ressions. I discarded that because of two reasons:; - They are more costly that simple string comparison.; - They complicate the registration of pythonizors per scope. In this new `@pythonization` decorator, the scope of the class is parsed (e.g. `NS1::NS2` for `NS1::NS2::C`) and the pythonizor is _registered for that scope_. This allows for more efficient lookup of the pythonizors to apply, because when a class is accessed for the first time, only the pythonizors registered for its scope will be attempted. This is nice for user classes, because if a user class belongs to `UserNamespace`, when the user script first accesses the class only the pythonizors for classes in `UserNamespace` will be tried, and not every single registered pythonizor (in particular, not all the pythonizors ROOT registers for its classes in the global namespace). So I prefer to have a clean static prefix that unambiguously tells me what the target scope is than something like `NS1::(.+)::C`. And if the user wants to do an additional complex matching with regular expressions, they can still do so in their pythonizor code via the `name` parameter. I'd like to hear the opinion of @pikacic and @daritter about this since we've discussed about this decorator in the past (no need to review the whole PR, giving your opinion on the programming examples is already more than enough!). EDIT: I have received some feedback from @eguiraud on the `name` parameter: he thinks it could be removed since some users won't need it (they won't do any further filtering inside the pythonizor). As an alternative, `name` could be injected in `klass` before the user pythonizor runs (so users would access it as `klass.name`), but that could cause a clash if `name` is already a static member of the class. There is also `klass.__cpp_name__` that is provided by cppyy with the fully qualified name of the class, so we could rely on that too. @vepadulano would rather keep `name` as a parameter. I'd like to hear more opinions :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9128
https://github.com/root-project/root/pull/9129:313,Deployability,update,updated,313,"# This Pull request:; ... fixes grammar mistakes and typos in the documentation.; ## Changes or fixes:; The documentation for the TH1 class had quite a few problems, so this PR fixes the ones I found. ## Checklist:; No code has been changed, so tests are probably not needed.; - [ ] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9129
https://github.com/root-project/root/pull/9129:245,Testability,test,tests,245,"# This Pull request:; ... fixes grammar mistakes and typos in the documentation.; ## Changes or fixes:; The documentation for the TH1 class had quite a few problems, so this PR fixes the ones I found. ## Checklist:; No code has been changed, so tests are probably not needed.; - [ ] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9129
https://github.com/root-project/root/pull/9129:283,Testability,test,tested,283,"# This Pull request:; ... fixes grammar mistakes and typos in the documentation.; ## Changes or fixes:; The documentation for the TH1 class had quite a few problems, so this PR fixes the ones I found. ## Checklist:; No code has been changed, so tests are probably not needed.; - [ ] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9129
https://github.com/root-project/root/issues/9133:185,Energy Efficiency,allocate,allocates,185,"- [X] Checked for duplicates. ### Describe the bug; While working on #8770, it turns out that the reading of `std::vector<T>` in RNTuple appears to be affected by memory leaks, if ``T` allocates memory in its constructor. This should be fixed and unit-tested, with a custom class that tracks constructor and destructor calls.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9133
https://github.com/root-project/root/issues/9133:252,Testability,test,tested,252,"- [X] Checked for duplicates. ### Describe the bug; While working on #8770, it turns out that the reading of `std::vector<T>` in RNTuple appears to be affected by memory leaks, if ``T` allocates memory in its constructor. This should be fixed and unit-tested, with a custom class that tracks constructor and destructor calls.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/9133
https://github.com/root-project/root/pull/9134:205,Availability,error,error,205,This Pull request provides a small fix to stressRooFit by doing correctly the plot in the full range and in the restricted range as it is done in the corresponding tutorial.; It also provides a fix for an error message in the RooUnitTest class,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/9134
