id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/qutip/qutip/issues/2#issuecomment-10319087:126,Testability,test,test,126,"I think this a good idea. I would add: . ``` python; if not isinstance(Q, Qobj):; return False; ```. at the beginning of each test. If you would like to do a pull requests on this go ahead, otherwise I'll do this change soon.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/2#issuecomment-10319087
https://github.com/qutip/qutip/pull/4#issuecomment-10321240:59,Testability,test,tests,59,Looks good. The cyclical import problem indicates that the tests should have been in Qobj in the first place. I will run some tests to make it does not have any unexpected consequences.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/4#issuecomment-10321240
https://github.com/qutip/qutip/pull/4#issuecomment-10321240:126,Testability,test,tests,126,Looks good. The cyclical import problem indicates that the tests should have been in Qobj in the first place. I will run some tests to make it does not have any unexpected consequences.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/4#issuecomment-10321240
https://github.com/qutip/qutip/pull/6#issuecomment-10948380:257,Testability,test,tests,257,Hi Markus. I think it is a good idea to pep8ify the code. I have had that in mind for some time so it's great that you took the initiative to do get started on this. I'm travelling now so it might take a while but I'll look through your PR and run the unit tests on it just to make sure nothing breaks (even though shouldn't of course..).,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/6#issuecomment-10948380
https://github.com/qutip/qutip/pull/6#issuecomment-10955326:92,Testability,test,tests,92,"Ok, I will go ahead then and fix the trivial PEP8 issues. I try to remember to run the unit tests before pushing to this pull request, so that nothing is obviously broken in it. As I went along the files there were a few issues I noticed, which I didn't want to or didn't know how to fix immediately. I will open separate issues for these.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/6#issuecomment-10955326
https://github.com/qutip/qutip/issues/10#issuecomment-10960905:65,Testability,test,tested,65,"i dont see any problem with changing to . if Object is None: . i tested in a few places and it seems fine, and since it is the preferred way of writing it i guess we should change these.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/10#issuecomment-10960905
https://github.com/qutip/qutip/issues/10#issuecomment-10983787:378,Modifiability,variab,variables,378,"tl;dr We should go ahead and change it according to PEP8. I vaguely remembered that. ```; string_one == string_two; ```. and. ```; string_one is string_two; ```. do something different. According to [post on stackoverflow](http://stackoverflow.com/questions/132988/is-there-a-difference-between-and-is-in-python) ""=="" tests for value equality, while ""is"" checks for whether the variables point to the same thing. Since ""None"" is a singleton the two are the same (except for some [oddball cases](http://jaredgrubb.blogspot.sg/2009/04/python-is-none-vs-none.html)). The [post about the oddball case](http://jaredgrubb.blogspot.sg/2009/04/python-is-none-vs-none.html) also seems to suggest that ""is"" is faster. Anyway, it's a) safe to change and b) recommended, so we should do that.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/10#issuecomment-10983787
https://github.com/qutip/qutip/issues/10#issuecomment-10983787:724,Safety,safe,safe,724,"tl;dr We should go ahead and change it according to PEP8. I vaguely remembered that. ```; string_one == string_two; ```. and. ```; string_one is string_two; ```. do something different. According to [post on stackoverflow](http://stackoverflow.com/questions/132988/is-there-a-difference-between-and-is-in-python) ""=="" tests for value equality, while ""is"" checks for whether the variables point to the same thing. Since ""None"" is a singleton the two are the same (except for some [oddball cases](http://jaredgrubb.blogspot.sg/2009/04/python-is-none-vs-none.html)). The [post about the oddball case](http://jaredgrubb.blogspot.sg/2009/04/python-is-none-vs-none.html) also seems to suggest that ""is"" is faster. Anyway, it's a) safe to change and b) recommended, so we should do that.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/10#issuecomment-10983787
https://github.com/qutip/qutip/issues/10#issuecomment-10983787:318,Testability,test,tests,318,"tl;dr We should go ahead and change it according to PEP8. I vaguely remembered that. ```; string_one == string_two; ```. and. ```; string_one is string_two; ```. do something different. According to [post on stackoverflow](http://stackoverflow.com/questions/132988/is-there-a-difference-between-and-is-in-python) ""=="" tests for value equality, while ""is"" checks for whether the variables point to the same thing. Since ""None"" is a singleton the two are the same (except for some [oddball cases](http://jaredgrubb.blogspot.sg/2009/04/python-is-none-vs-none.html)). The [post about the oddball case](http://jaredgrubb.blogspot.sg/2009/04/python-is-none-vs-none.html) also seems to suggest that ""is"" is faster. Anyway, it's a) safe to change and b) recommended, so we should do that.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/10#issuecomment-10983787
https://github.com/qutip/qutip/pull/11#issuecomment-11231763:66,Testability,test,tests,66,"Thanks, it's looking good!. I'm merging the PR. We don't have any tests for the appearance of the figures unfortunately. We should look into that.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/11#issuecomment-11231763
https://github.com/qutip/qutip/pull/11#issuecomment-11232352:49,Testability,test,test,49,"Ok, I opened an issue for the question of how to test for plotting functioniality, see #12",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/11#issuecomment-11232352
https://github.com/qutip/qutip/issues/12#issuecomment-11232492:26,Testability,test,tests,26,matplotlib have some unit tests that include image comparison using PIL. might be something to look into. http://matplotlib.org/devel/testing.html. but in our case it might be sufficient to have a set of script files that generate test figures that we can inspecct visually to see if something broke?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/12#issuecomment-11232492
https://github.com/qutip/qutip/issues/12#issuecomment-11232492:134,Testability,test,testing,134,matplotlib have some unit tests that include image comparison using PIL. might be something to look into. http://matplotlib.org/devel/testing.html. but in our case it might be sufficient to have a set of script files that generate test figures that we can inspecct visually to see if something broke?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/12#issuecomment-11232492
https://github.com/qutip/qutip/issues/12#issuecomment-11232492:231,Testability,test,test,231,matplotlib have some unit tests that include image comparison using PIL. might be something to look into. http://matplotlib.org/devel/testing.html. but in our case it might be sufficient to have a set of script files that generate test figures that we can inspecct visually to see if something broke?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/12#issuecomment-11232492
https://github.com/qutip/qutip/issues/16#issuecomment-16150979:629,Deployability,patch,patch,629,"I think I have found the problem and will submit a bugfix. The problem was a bug in sp_eigs: when selecting large eigenvalues the eigenvalue vectors is flip (left <-> right) but then later on still the highest (which has become the lowest) eigenvalues was extracted from the total list of eivenvalues... We should probably restructure the function sp_eigs a bit... right now it is trying to do a little bit too many things. At least it should be split into sp_eigs and dense_eigs. Thanks for finding and reporting the problem. If seen this in other problems, in addition to your bug report problem. please check if the following patch fixes it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/16#issuecomment-16150979
https://github.com/qutip/qutip/issues/16#issuecomment-16361728:140,Integrability,rout,routine,140,"Hi Robert. I think the bug is still there for the sparse solver. Also, just by looking at the code, I think there is some bug in the sparse routine in terms of what the eigenvalues are sorted by for sort='high'. It appears that if sparse=True, sort='high' and op.isherm=False, then eigenvalues are sorted by largest magnitude (which='LM' argument to sp.linalg.eigs), whereas in non-sparse solver they are sorted by largest real part (which='LR'). Cheers, Arne.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/16#issuecomment-16361728
https://github.com/qutip/qutip/issues/16#issuecomment-16367480:557,Testability,test,test,557,"Yes there seems to be an inconsistency in when LM and LR are used. Will try to sort this out.; - sp.linalg.eigsh should be used with LM and SM.; - http://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.linalg.eigsh.html; - sp.linalg.eigs should be used LR and SR (sort by real value) or LM and SM (sort by magnitude), but should LR and LM should not be mixed.; - http://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.linalg.eigs.html. For eigs/eigsh LR and SR might correspond closer to the behavior for dense matrices. I'll write some test cases for this before I do any changes.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/16#issuecomment-16367480
https://github.com/qutip/qutip/issues/16#issuecomment-16368695:386,Availability,toler,tolerance,386,"This is somewhat unrelated, but I might also mention that I have experienced getting different answers for the dense and the sparse solver. This has nothing to do with qutip, as I tried calling scipy.linalg.eigvals() and scipy.sparse.eigs() directly. In certain cases, the sparse solver would output completely different values (difference being much larger than the specified relative tolerance), even though the maximum number of iterations was not reached. Not sure what to make of it, but I guess I would trust the dense solver more than the sparse one.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/16#issuecomment-16368695
https://github.com/qutip/qutip/issues/16#issuecomment-16369180:462,Testability,test,test,462,"Interesting.. I have not seen that behavior. If you could show an example next time you run into that I'd be interesting to see it, and probably the scipy people would be too if it really can be traced to a problem in scipy.linalg.eigvals or scipy.sparse.eigs. You could also try to compare with what numpy.linalg.eigvals gives... I have made one small change in the qutip sp_eigs function (50e5231b9c732ee3d6a9f6f35978d376fcfda287), and created a notebook with test cases, which seems to behave as expected (68579ffdff74502a9274c46a9ffc62910ee00867). You can see the notebook through nbviewer as well:. http://nbviewer.ipython.org/urls/raw.github.com/qutip/qutip/master/notebooks/test-eigenvalues.ipynb",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/16#issuecomment-16369180
https://github.com/qutip/qutip/issues/16#issuecomment-16369180:681,Testability,test,test-eigenvalues,681,"Interesting.. I have not seen that behavior. If you could show an example next time you run into that I'd be interesting to see it, and probably the scipy people would be too if it really can be traced to a problem in scipy.linalg.eigvals or scipy.sparse.eigs. You could also try to compare with what numpy.linalg.eigvals gives... I have made one small change in the qutip sp_eigs function (50e5231b9c732ee3d6a9f6f35978d376fcfda287), and created a notebook with test cases, which seems to behave as expected (68579ffdff74502a9274c46a9ffc62910ee00867). You can see the notebook through nbviewer as well:. http://nbviewer.ipython.org/urls/raw.github.com/qutip/qutip/master/notebooks/test-eigenvalues.ipynb",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/16#issuecomment-16369180
https://github.com/qutip/qutip/issues/16#issuecomment-16369344:272,Testability,test,test,272,"I take that back... there seems to be a bug with the argument combination ""sparse=True, eigvals=5, sort='low'"". Edit: With a1fe271e6c885c881beb09b8c0ee9370336ba4cb sorting of both sparse/dense and hermitian/nonhermitian eigenvalues seems to be consistent, according to my test cases anyways.. . Let us know if you still see some strange behavior..",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/16#issuecomment-16369344
https://github.com/qutip/qutip/issues/16#issuecomment-16416062:1363,Energy Efficiency,green,green,1363,"emal eigenvalues: that is, eigenvalues with large magnitudes. In particular, using which = 'SM' may lead to slow execution time and/or anomalous results. A better approach is to use shift-invert mode."". See also the example on that page. I tried using the 'shift-invert mode' as suggested, and that gave better results. But, they are still pretty bad for the problem I want to solve: I'm trying to find the low lying spectrum for a very large Liouvillian, as I vary a single external Hamiltonian parameter. The smallest one (in magnitude) is always zero, and all others are negative. Supposedly, the vanishing of the real part of the eigenvalue with the second largest (closest to zero) real part can be useful for characterizing phase transitions, see, for example, this recent paper: http://prl.aps.org/abstract/PRL/v110/i15/e150401. I attach a plot where I have computed the eigenvalue with second largest real part (which is also the one with second smallest magnitude; the two criteria coincide) using 1) scipy.linalg.eigvals (green line) and 2) scipy.sparse.linalg.eigs (blue line): https://dl.dropboxusercontent.com/u/6042643/liouvspec.png. As you can see, the results from the sparse solver are pretty poor (I assume the dense solver results are correct). . As far as the physics goes: Another thing to notice is that the system goes through phase transitions at -2.0, 0.5 and 2.0 for the parameter along the x-axis, and there are no signs of that in the plot. On a side note, I also wasn't able to reproduce Fig 2(a), middle panel, of the PRL paper I linked to, although I got qualitative agreement if I tried with different parameters than what is quoted in the figure caption. Do you by any chance happen to have any experience with this way of characterizing dynamical phase transitions?. I might try to make a simpler example illustrating the problem later. The Liouvillian I am considering now is too big to use as an example, as using the dense solver requires a huge amount of memory.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/16#issuecomment-16416062
https://github.com/qutip/qutip/issues/16#issuecomment-16416062:130,Performance,perform,perform,130,"Thanks Robert. As far as the problems with the sparse solver in scipy, I have read around a bit and found that the solver doesn't perform well for finding eigenvalues with small magnitude. From a scipy tutorial:. http://docs.scipy.org/doc/scipy/reference/tutorial/arpack.html. > Note that ARPACK is generally better at finding extremal eigenvalues: that is, eigenvalues with large magnitudes. In particular, using which = 'SM' may lead to slow execution time and/or anomalous results. A better approach is to use shift-invert mode."". See also the example on that page. I tried using the 'shift-invert mode' as suggested, and that gave better results. But, they are still pretty bad for the problem I want to solve: I'm trying to find the low lying spectrum for a very large Liouvillian, as I vary a single external Hamiltonian parameter. The smallest one (in magnitude) is always zero, and all others are negative. Supposedly, the vanishing of the real part of the eigenvalue with the second largest (closest to zero) real part can be useful for characterizing phase transitions, see, for example, this recent paper: http://prl.aps.org/abstract/PRL/v110/i15/e150401. I attach a plot where I have computed the eigenvalue with second largest real part (which is also the one with second smallest magnitude; the two criteria coincide) using 1) scipy.linalg.eigvals (green line) and 2) scipy.sparse.linalg.eigs (blue line): https://dl.dropboxusercontent.com/u/6042643/liouvspec.png. As you can see, the results from the sparse solver are pretty poor (I assume the dense solver results are correct). . As far as the physics goes: Another thing to notice is that the system goes through phase transitions at -2.0, 0.5 and 2.0 for the parameter along the x-axis, and there are no signs of that in the plot. On a side note, I also wasn't able to reproduce Fig 2(a), middle panel, of the PRL paper I linked to, although I got qualitative agreement if I tried with different parameters than what is quoted in th",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/16#issuecomment-16416062
https://github.com/qutip/qutip/issues/16#issuecomment-16416062:2154,Usability,simpl,simpler,2154,"emal eigenvalues: that is, eigenvalues with large magnitudes. In particular, using which = 'SM' may lead to slow execution time and/or anomalous results. A better approach is to use shift-invert mode."". See also the example on that page. I tried using the 'shift-invert mode' as suggested, and that gave better results. But, they are still pretty bad for the problem I want to solve: I'm trying to find the low lying spectrum for a very large Liouvillian, as I vary a single external Hamiltonian parameter. The smallest one (in magnitude) is always zero, and all others are negative. Supposedly, the vanishing of the real part of the eigenvalue with the second largest (closest to zero) real part can be useful for characterizing phase transitions, see, for example, this recent paper: http://prl.aps.org/abstract/PRL/v110/i15/e150401. I attach a plot where I have computed the eigenvalue with second largest real part (which is also the one with second smallest magnitude; the two criteria coincide) using 1) scipy.linalg.eigvals (green line) and 2) scipy.sparse.linalg.eigs (blue line): https://dl.dropboxusercontent.com/u/6042643/liouvspec.png. As you can see, the results from the sparse solver are pretty poor (I assume the dense solver results are correct). . As far as the physics goes: Another thing to notice is that the system goes through phase transitions at -2.0, 0.5 and 2.0 for the parameter along the x-axis, and there are no signs of that in the plot. On a side note, I also wasn't able to reproduce Fig 2(a), middle panel, of the PRL paper I linked to, although I got qualitative agreement if I tried with different parameters than what is quoted in the figure caption. Do you by any chance happen to have any experience with this way of characterizing dynamical phase transitions?. I might try to make a simpler example illustrating the problem later. The Liouvillian I am considering now is too big to use as an example, as using the dense solver requires a huge amount of memory.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/16#issuecomment-16416062
https://github.com/qutip/qutip/issues/16#issuecomment-34325017:69,Availability,down,down,69,"Arne,. Do you still have the code where the eigenvalue solver breaks down for the Liouvillian? I am starting to work on the matrix balancing functions and would like something known to cause trouble to test on. Cheers,. Paul",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/16#issuecomment-34325017
https://github.com/qutip/qutip/issues/16#issuecomment-34325017:202,Testability,test,test,202,"Arne,. Do you still have the code where the eigenvalue solver breaks down for the Liouvillian? I am starting to work on the matrix balancing functions and would like something known to cause trouble to test on. Cheers,. Paul",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/16#issuecomment-34325017
https://github.com/qutip/qutip/issues/17#issuecomment-16149887:333,Safety,avoid,avoid,333,"liouvillian_fast doesn't set the isherm flag at all, so it becomes the default value True. Unless H=0, the liouvillian should usually be nonhermitian, so False would be a better default value.. Will fix this. Don't think I want to do a full check of the underlaying data in this funciton, because the point of liouvillian_fast is to avoid some unnecessary overhead (although it is still a bit experimental).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/17#issuecomment-16149887
https://github.com/qutip/qutip/issues/18#issuecomment-17106896:371,Integrability,depend,dependency,371,"Hi. Thanks for reporting this problem. I'm not sure if I'd call it a bug or not, but I understand that this behavior can be a bit confusing. With odeOpts.rhs_reuse = True the same function will be use until rhs_clear() is called, which in your case would be. qtp.rhs_clear(); qtp.propagator([H0, [Hint, '1-w*t']], 5, [], {'w':1/5.}, opt=odeOpts). when yo change the time-dependency function strings. . Maybe this needs to be emphasized more in the documentation, or perhaps rhs_clear() could be called automatrically from within propagator, but this could prevent one from really reusing the rhs function for several propagators with the same rhs function (for example with different H0 or Hint). . I'll leave this ticket open for now so we'll remember to think some more about how this issue should be handled in the best way. . Thanks again for your feedback!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/18#issuecomment-17106896
https://github.com/qutip/qutip/issues/18#issuecomment-17106896:852,Usability,feedback,feedback,852,"Hi. Thanks for reporting this problem. I'm not sure if I'd call it a bug or not, but I understand that this behavior can be a bit confusing. With odeOpts.rhs_reuse = True the same function will be use until rhs_clear() is called, which in your case would be. qtp.rhs_clear(); qtp.propagator([H0, [Hint, '1-w*t']], 5, [], {'w':1/5.}, opt=odeOpts). when yo change the time-dependency function strings. . Maybe this needs to be emphasized more in the documentation, or perhaps rhs_clear() could be called automatrically from within propagator, but this could prevent one from really reusing the rhs function for several propagators with the same rhs function (for example with different H0 or Hint). . I'll leave this ticket open for now so we'll remember to think some more about how this issue should be handled in the best way. . Thanks again for your feedback!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/18#issuecomment-17106896
https://github.com/qutip/qutip/issues/18#issuecomment-17175299:246,Availability,fault,faulty,246,Your welcome and thanks for looking into this. I understand that there are functionality considerations to be made. Perhaps a simple assertion check would strike the right balance -- giving the functionality you want while avoiding the danger of faulty assumptions.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/18#issuecomment-17175299
https://github.com/qutip/qutip/issues/18#issuecomment-17175299:223,Safety,avoid,avoiding,223,Your welcome and thanks for looking into this. I understand that there are functionality considerations to be made. Perhaps a simple assertion check would strike the right balance -- giving the functionality you want while avoiding the danger of faulty assumptions.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/18#issuecomment-17175299
https://github.com/qutip/qutip/issues/18#issuecomment-17175299:133,Testability,assert,assertion,133,Your welcome and thanks for looking into this. I understand that there are functionality considerations to be made. Perhaps a simple assertion check would strike the right balance -- giving the functionality you want while avoiding the danger of faulty assumptions.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/18#issuecomment-17175299
https://github.com/qutip/qutip/issues/18#issuecomment-17175299:126,Usability,simpl,simple,126,Your welcome and thanks for looking into this. I understand that there are functionality considerations to be made. Perhaps a simple assertion check would strike the right balance -- giving the functionality you want while avoiding the danger of faulty assumptions.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/18#issuecomment-17175299
https://github.com/qutip/qutip/issues/19#issuecomment-18893809:353,Availability,robust,robust,353,"It seems like 4fa892932b1062b31fcaf2640987c8ecfa7d7a19 fixed the problem with the broken demos(). But if demos application is going to continue to be an official part of qutip, I think it would be better to dispatch each demo in a separate process, using ""fork() and exec()"", instead of the current method of ""compile() and eval()"" which seems not very robust (that is, it crashes the application if something goes wrong in the example script). Also, the text-based demos can probably be dropped because I doubt anyone use that function. . But work on new qutip demos should probably be using ipython notebooks, I think, so I'm not sure how much energy we should spend on the demos application.. But on the other hand not everyone uses the ipython notebook, so the qt demos application probably might still has a role to play.. and some effort to make it more robust might be worthwhile?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/19#issuecomment-18893809
https://github.com/qutip/qutip/issues/19#issuecomment-18893809:860,Availability,robust,robust,860,"It seems like 4fa892932b1062b31fcaf2640987c8ecfa7d7a19 fixed the problem with the broken demos(). But if demos application is going to continue to be an official part of qutip, I think it would be better to dispatch each demo in a separate process, using ""fork() and exec()"", instead of the current method of ""compile() and eval()"" which seems not very robust (that is, it crashes the application if something goes wrong in the example script). Also, the text-based demos can probably be dropped because I doubt anyone use that function. . But work on new qutip demos should probably be using ipython notebooks, I think, so I'm not sure how much energy we should spend on the demos application.. But on the other hand not everyone uses the ipython notebook, so the qt demos application probably might still has a role to play.. and some effort to make it more robust might be worthwhile?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/19#issuecomment-18893809
https://github.com/qutip/qutip/issues/19#issuecomment-18893809:646,Energy Efficiency,energy,energy,646,"It seems like 4fa892932b1062b31fcaf2640987c8ecfa7d7a19 fixed the problem with the broken demos(). But if demos application is going to continue to be an official part of qutip, I think it would be better to dispatch each demo in a separate process, using ""fork() and exec()"", instead of the current method of ""compile() and eval()"" which seems not very robust (that is, it crashes the application if something goes wrong in the example script). Also, the text-based demos can probably be dropped because I doubt anyone use that function. . But work on new qutip demos should probably be using ipython notebooks, I think, so I'm not sure how much energy we should spend on the demos application.. But on the other hand not everyone uses the ipython notebook, so the qt demos application probably might still has a role to play.. and some effort to make it more robust might be worthwhile?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/19#issuecomment-18893809
https://github.com/qutip/qutip/issues/19#issuecomment-18917941:157,Deployability,release,release,157,"Yes, the QT stuff is bit troublesome.. and it is not a core functionality in qutip. The about() and demos() does not do much harm, so deprecate them in next release we can drop them alltogether in the following release. The progressbar is a bigger problem, because (if I got this right) it is partly due to the event-loop tricks we need to do to get the qt progressbar to work we have problems with catching keyboardinterrupt properly in for example mcsolve, and this makes it difficult to abort a calculation cleanly. This is big problem in IPython notebooks, where one cannot hit Ctrl-C and Ctrl-Z until process is stopped.. Factoring the qt progressbar out of mcsolve should therefore be a priority, and the simplest way to do this would obviously be to drop the qt progressbar function completely... I'll add a note about this in the roadmap wiki and closing this issue now.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/19#issuecomment-18917941
https://github.com/qutip/qutip/issues/19#issuecomment-18917941:211,Deployability,release,release,211,"Yes, the QT stuff is bit troublesome.. and it is not a core functionality in qutip. The about() and demos() does not do much harm, so deprecate them in next release we can drop them alltogether in the following release. The progressbar is a bigger problem, because (if I got this right) it is partly due to the event-loop tricks we need to do to get the qt progressbar to work we have problems with catching keyboardinterrupt properly in for example mcsolve, and this makes it difficult to abort a calculation cleanly. This is big problem in IPython notebooks, where one cannot hit Ctrl-C and Ctrl-Z until process is stopped.. Factoring the qt progressbar out of mcsolve should therefore be a priority, and the simplest way to do this would obviously be to drop the qt progressbar function completely... I'll add a note about this in the roadmap wiki and closing this issue now.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/19#issuecomment-18917941
https://github.com/qutip/qutip/issues/19#issuecomment-18917941:490,Safety,abort,abort,490,"Yes, the QT stuff is bit troublesome.. and it is not a core functionality in qutip. The about() and demos() does not do much harm, so deprecate them in next release we can drop them alltogether in the following release. The progressbar is a bigger problem, because (if I got this right) it is partly due to the event-loop tricks we need to do to get the qt progressbar to work we have problems with catching keyboardinterrupt properly in for example mcsolve, and this makes it difficult to abort a calculation cleanly. This is big problem in IPython notebooks, where one cannot hit Ctrl-C and Ctrl-Z until process is stopped.. Factoring the qt progressbar out of mcsolve should therefore be a priority, and the simplest way to do this would obviously be to drop the qt progressbar function completely... I'll add a note about this in the roadmap wiki and closing this issue now.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/19#issuecomment-18917941
https://github.com/qutip/qutip/issues/19#issuecomment-18917941:711,Usability,simpl,simplest,711,"Yes, the QT stuff is bit troublesome.. and it is not a core functionality in qutip. The about() and demos() does not do much harm, so deprecate them in next release we can drop them alltogether in the following release. The progressbar is a bigger problem, because (if I got this right) it is partly due to the event-loop tricks we need to do to get the qt progressbar to work we have problems with catching keyboardinterrupt properly in for example mcsolve, and this makes it difficult to abort a calculation cleanly. This is big problem in IPython notebooks, where one cannot hit Ctrl-C and Ctrl-Z until process is stopped.. Factoring the qt progressbar out of mcsolve should therefore be a priority, and the simplest way to do this would obviously be to drop the qt progressbar function completely... I'll add a note about this in the roadmap wiki and closing this issue now.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/19#issuecomment-18917941
https://github.com/qutip/qutip/pull/22#issuecomment-18592742:745,Integrability,depend,dependencies,745,"Hi Ben. Thanks a lot for your contribution. It's looking great!. A couple of small things:; - We try to make qutip python3 compatible, so please use python3 compatible print(...) function calls instead of print ... statements.; - Functions super_to_choi and choi_to_super seems to do the same thing, while the function names suggest complementary conversion. Is this intentional?; - I think it would be better if you move the test code from within the if **name** == '**main**' to a separate file in the examples directory, or even better as unit tests in qutip/tests/; - Avoid global import of qutip ""from qutip import *"" by only selectively importing the functions that you need (we try to do this internally in qutip to avoid circular module dependencies).; - Make relative import of qutip functions (for example from qutip.super_to_choi import super_to_choi). This is also required for python3 compatibility.; - Add an import of the main functions (for example subsystem_apply) to qutip/**init**.py ; - I would probably prefer the super_to_choi.py module be called something more general, like choi_decomposition,py (or something like that), which would reflect that it does not only contain the super_to_choi function but other related functions as well.; - Avoid printouts in choi_to_kraus function. If you want to enable debugging or diagnostic info, consider adding an optional function argument debug=False or verbose=False and print the vals and vecs variables only if the user explicitly asks for it. Otherwise, one could get an excessive amount of printouts if your code is used in a loop.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/22#issuecomment-18592742
https://github.com/qutip/qutip/pull/22#issuecomment-18592742:1461,Modifiability,variab,variables,1461,"Hi Ben. Thanks a lot for your contribution. It's looking great!. A couple of small things:; - We try to make qutip python3 compatible, so please use python3 compatible print(...) function calls instead of print ... statements.; - Functions super_to_choi and choi_to_super seems to do the same thing, while the function names suggest complementary conversion. Is this intentional?; - I think it would be better if you move the test code from within the if **name** == '**main**' to a separate file in the examples directory, or even better as unit tests in qutip/tests/; - Avoid global import of qutip ""from qutip import *"" by only selectively importing the functions that you need (we try to do this internally in qutip to avoid circular module dependencies).; - Make relative import of qutip functions (for example from qutip.super_to_choi import super_to_choi). This is also required for python3 compatibility.; - Add an import of the main functions (for example subsystem_apply) to qutip/**init**.py ; - I would probably prefer the super_to_choi.py module be called something more general, like choi_decomposition,py (or something like that), which would reflect that it does not only contain the super_to_choi function but other related functions as well.; - Avoid printouts in choi_to_kraus function. If you want to enable debugging or diagnostic info, consider adding an optional function argument debug=False or verbose=False and print the vals and vecs variables only if the user explicitly asks for it. Otherwise, one could get an excessive amount of printouts if your code is used in a loop.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/22#issuecomment-18592742
https://github.com/qutip/qutip/pull/22#issuecomment-18592742:572,Safety,Avoid,Avoid,572,"Hi Ben. Thanks a lot for your contribution. It's looking great!. A couple of small things:; - We try to make qutip python3 compatible, so please use python3 compatible print(...) function calls instead of print ... statements.; - Functions super_to_choi and choi_to_super seems to do the same thing, while the function names suggest complementary conversion. Is this intentional?; - I think it would be better if you move the test code from within the if **name** == '**main**' to a separate file in the examples directory, or even better as unit tests in qutip/tests/; - Avoid global import of qutip ""from qutip import *"" by only selectively importing the functions that you need (we try to do this internally in qutip to avoid circular module dependencies).; - Make relative import of qutip functions (for example from qutip.super_to_choi import super_to_choi). This is also required for python3 compatibility.; - Add an import of the main functions (for example subsystem_apply) to qutip/**init**.py ; - I would probably prefer the super_to_choi.py module be called something more general, like choi_decomposition,py (or something like that), which would reflect that it does not only contain the super_to_choi function but other related functions as well.; - Avoid printouts in choi_to_kraus function. If you want to enable debugging or diagnostic info, consider adding an optional function argument debug=False or verbose=False and print the vals and vecs variables only if the user explicitly asks for it. Otherwise, one could get an excessive amount of printouts if your code is used in a loop.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/22#issuecomment-18592742
https://github.com/qutip/qutip/pull/22#issuecomment-18592742:723,Safety,avoid,avoid,723,"Hi Ben. Thanks a lot for your contribution. It's looking great!. A couple of small things:; - We try to make qutip python3 compatible, so please use python3 compatible print(...) function calls instead of print ... statements.; - Functions super_to_choi and choi_to_super seems to do the same thing, while the function names suggest complementary conversion. Is this intentional?; - I think it would be better if you move the test code from within the if **name** == '**main**' to a separate file in the examples directory, or even better as unit tests in qutip/tests/; - Avoid global import of qutip ""from qutip import *"" by only selectively importing the functions that you need (we try to do this internally in qutip to avoid circular module dependencies).; - Make relative import of qutip functions (for example from qutip.super_to_choi import super_to_choi). This is also required for python3 compatibility.; - Add an import of the main functions (for example subsystem_apply) to qutip/**init**.py ; - I would probably prefer the super_to_choi.py module be called something more general, like choi_decomposition,py (or something like that), which would reflect that it does not only contain the super_to_choi function but other related functions as well.; - Avoid printouts in choi_to_kraus function. If you want to enable debugging or diagnostic info, consider adding an optional function argument debug=False or verbose=False and print the vals and vecs variables only if the user explicitly asks for it. Otherwise, one could get an excessive amount of printouts if your code is used in a loop.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/22#issuecomment-18592742
https://github.com/qutip/qutip/pull/22#issuecomment-18592742:1263,Safety,Avoid,Avoid,1263,"Hi Ben. Thanks a lot for your contribution. It's looking great!. A couple of small things:; - We try to make qutip python3 compatible, so please use python3 compatible print(...) function calls instead of print ... statements.; - Functions super_to_choi and choi_to_super seems to do the same thing, while the function names suggest complementary conversion. Is this intentional?; - I think it would be better if you move the test code from within the if **name** == '**main**' to a separate file in the examples directory, or even better as unit tests in qutip/tests/; - Avoid global import of qutip ""from qutip import *"" by only selectively importing the functions that you need (we try to do this internally in qutip to avoid circular module dependencies).; - Make relative import of qutip functions (for example from qutip.super_to_choi import super_to_choi). This is also required for python3 compatibility.; - Add an import of the main functions (for example subsystem_apply) to qutip/**init**.py ; - I would probably prefer the super_to_choi.py module be called something more general, like choi_decomposition,py (or something like that), which would reflect that it does not only contain the super_to_choi function but other related functions as well.; - Avoid printouts in choi_to_kraus function. If you want to enable debugging or diagnostic info, consider adding an optional function argument debug=False or verbose=False and print the vals and vecs variables only if the user explicitly asks for it. Otherwise, one could get an excessive amount of printouts if your code is used in a loop.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/22#issuecomment-18592742
https://github.com/qutip/qutip/pull/22#issuecomment-18592742:426,Testability,test,test,426,"Hi Ben. Thanks a lot for your contribution. It's looking great!. A couple of small things:; - We try to make qutip python3 compatible, so please use python3 compatible print(...) function calls instead of print ... statements.; - Functions super_to_choi and choi_to_super seems to do the same thing, while the function names suggest complementary conversion. Is this intentional?; - I think it would be better if you move the test code from within the if **name** == '**main**' to a separate file in the examples directory, or even better as unit tests in qutip/tests/; - Avoid global import of qutip ""from qutip import *"" by only selectively importing the functions that you need (we try to do this internally in qutip to avoid circular module dependencies).; - Make relative import of qutip functions (for example from qutip.super_to_choi import super_to_choi). This is also required for python3 compatibility.; - Add an import of the main functions (for example subsystem_apply) to qutip/**init**.py ; - I would probably prefer the super_to_choi.py module be called something more general, like choi_decomposition,py (or something like that), which would reflect that it does not only contain the super_to_choi function but other related functions as well.; - Avoid printouts in choi_to_kraus function. If you want to enable debugging or diagnostic info, consider adding an optional function argument debug=False or verbose=False and print the vals and vecs variables only if the user explicitly asks for it. Otherwise, one could get an excessive amount of printouts if your code is used in a loop.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/22#issuecomment-18592742
https://github.com/qutip/qutip/pull/22#issuecomment-18592742:547,Testability,test,tests,547,"Hi Ben. Thanks a lot for your contribution. It's looking great!. A couple of small things:; - We try to make qutip python3 compatible, so please use python3 compatible print(...) function calls instead of print ... statements.; - Functions super_to_choi and choi_to_super seems to do the same thing, while the function names suggest complementary conversion. Is this intentional?; - I think it would be better if you move the test code from within the if **name** == '**main**' to a separate file in the examples directory, or even better as unit tests in qutip/tests/; - Avoid global import of qutip ""from qutip import *"" by only selectively importing the functions that you need (we try to do this internally in qutip to avoid circular module dependencies).; - Make relative import of qutip functions (for example from qutip.super_to_choi import super_to_choi). This is also required for python3 compatibility.; - Add an import of the main functions (for example subsystem_apply) to qutip/**init**.py ; - I would probably prefer the super_to_choi.py module be called something more general, like choi_decomposition,py (or something like that), which would reflect that it does not only contain the super_to_choi function but other related functions as well.; - Avoid printouts in choi_to_kraus function. If you want to enable debugging or diagnostic info, consider adding an optional function argument debug=False or verbose=False and print the vals and vecs variables only if the user explicitly asks for it. Otherwise, one could get an excessive amount of printouts if your code is used in a loop.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/22#issuecomment-18592742
https://github.com/qutip/qutip/pull/22#issuecomment-18592742:562,Testability,test,tests,562,"Hi Ben. Thanks a lot for your contribution. It's looking great!. A couple of small things:; - We try to make qutip python3 compatible, so please use python3 compatible print(...) function calls instead of print ... statements.; - Functions super_to_choi and choi_to_super seems to do the same thing, while the function names suggest complementary conversion. Is this intentional?; - I think it would be better if you move the test code from within the if **name** == '**main**' to a separate file in the examples directory, or even better as unit tests in qutip/tests/; - Avoid global import of qutip ""from qutip import *"" by only selectively importing the functions that you need (we try to do this internally in qutip to avoid circular module dependencies).; - Make relative import of qutip functions (for example from qutip.super_to_choi import super_to_choi). This is also required for python3 compatibility.; - Add an import of the main functions (for example subsystem_apply) to qutip/**init**.py ; - I would probably prefer the super_to_choi.py module be called something more general, like choi_decomposition,py (or something like that), which would reflect that it does not only contain the super_to_choi function but other related functions as well.; - Avoid printouts in choi_to_kraus function. If you want to enable debugging or diagnostic info, consider adding an optional function argument debug=False or verbose=False and print the vals and vecs variables only if the user explicitly asks for it. Otherwise, one could get an excessive amount of printouts if your code is used in a loop.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/22#issuecomment-18592742
https://github.com/qutip/qutip/pull/22#issuecomment-18782823:133,Availability,error,errors,133,"Looking great, good job! . Just a few minor problems with the unit tests:; - use .np.array on line 214 in random_objects.py; - I get errors like ""AttributeError: 'numpy.ndarray' object has no attribute 'H'"". We need to use numpy.matrix instead of numpy.ndarray if .H is to be used.; - line 57 insuperop_reps: ""inpt=q_oper.data.reshape([sqrt_shape] \* 4)."" gives an error because q_oper.data is csr sparse matrix and does not implement reshape. I guess that the unit tests work on your system (maybe some version differences of numpy/scipy), so I'll go ahead and merge this PR now, and try to fix the unit test problems I get here. Just go ahead and make a new PR if there is anything else that you want to add or update. We really appreciate your contribution!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/22#issuecomment-18782823
https://github.com/qutip/qutip/pull/22#issuecomment-18782823:365,Availability,error,error,365,"Looking great, good job! . Just a few minor problems with the unit tests:; - use .np.array on line 214 in random_objects.py; - I get errors like ""AttributeError: 'numpy.ndarray' object has no attribute 'H'"". We need to use numpy.matrix instead of numpy.ndarray if .H is to be used.; - line 57 insuperop_reps: ""inpt=q_oper.data.reshape([sqrt_shape] \* 4)."" gives an error because q_oper.data is csr sparse matrix and does not implement reshape. I guess that the unit tests work on your system (maybe some version differences of numpy/scipy), so I'll go ahead and merge this PR now, and try to fix the unit test problems I get here. Just go ahead and make a new PR if there is anything else that you want to add or update. We really appreciate your contribution!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/22#issuecomment-18782823
https://github.com/qutip/qutip/pull/22#issuecomment-18782823:713,Deployability,update,update,713,"Looking great, good job! . Just a few minor problems with the unit tests:; - use .np.array on line 214 in random_objects.py; - I get errors like ""AttributeError: 'numpy.ndarray' object has no attribute 'H'"". We need to use numpy.matrix instead of numpy.ndarray if .H is to be used.; - line 57 insuperop_reps: ""inpt=q_oper.data.reshape([sqrt_shape] \* 4)."" gives an error because q_oper.data is csr sparse matrix and does not implement reshape. I guess that the unit tests work on your system (maybe some version differences of numpy/scipy), so I'll go ahead and merge this PR now, and try to fix the unit test problems I get here. Just go ahead and make a new PR if there is anything else that you want to add or update. We really appreciate your contribution!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/22#issuecomment-18782823
https://github.com/qutip/qutip/pull/22#issuecomment-18782823:67,Testability,test,tests,67,"Looking great, good job! . Just a few minor problems with the unit tests:; - use .np.array on line 214 in random_objects.py; - I get errors like ""AttributeError: 'numpy.ndarray' object has no attribute 'H'"". We need to use numpy.matrix instead of numpy.ndarray if .H is to be used.; - line 57 insuperop_reps: ""inpt=q_oper.data.reshape([sqrt_shape] \* 4)."" gives an error because q_oper.data is csr sparse matrix and does not implement reshape. I guess that the unit tests work on your system (maybe some version differences of numpy/scipy), so I'll go ahead and merge this PR now, and try to fix the unit test problems I get here. Just go ahead and make a new PR if there is anything else that you want to add or update. We really appreciate your contribution!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/22#issuecomment-18782823
https://github.com/qutip/qutip/pull/22#issuecomment-18782823:466,Testability,test,tests,466,"Looking great, good job! . Just a few minor problems with the unit tests:; - use .np.array on line 214 in random_objects.py; - I get errors like ""AttributeError: 'numpy.ndarray' object has no attribute 'H'"". We need to use numpy.matrix instead of numpy.ndarray if .H is to be used.; - line 57 insuperop_reps: ""inpt=q_oper.data.reshape([sqrt_shape] \* 4)."" gives an error because q_oper.data is csr sparse matrix and does not implement reshape. I guess that the unit tests work on your system (maybe some version differences of numpy/scipy), so I'll go ahead and merge this PR now, and try to fix the unit test problems I get here. Just go ahead and make a new PR if there is anything else that you want to add or update. We really appreciate your contribution!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/22#issuecomment-18782823
https://github.com/qutip/qutip/pull/22#issuecomment-18782823:605,Testability,test,test,605,"Looking great, good job! . Just a few minor problems with the unit tests:; - use .np.array on line 214 in random_objects.py; - I get errors like ""AttributeError: 'numpy.ndarray' object has no attribute 'H'"". We need to use numpy.matrix instead of numpy.ndarray if .H is to be used.; - line 57 insuperop_reps: ""inpt=q_oper.data.reshape([sqrt_shape] \* 4)."" gives an error because q_oper.data is csr sparse matrix and does not implement reshape. I guess that the unit tests work on your system (maybe some version differences of numpy/scipy), so I'll go ahead and merge this PR now, and try to fix the unit test problems I get here. Just go ahead and make a new PR if there is anything else that you want to add or update. We really appreciate your contribution!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/22#issuecomment-18782823
https://github.com/qutip/qutip/issues/24#issuecomment-18720853:212,Integrability,depend,dependent,212,"Hi Arne. Thanks a lot for the bug report. I'll go through the code fix it so that the qutip_gui = NONE flag is handled consistently. In the long run I think we need to refactor the code a little bit, so that GUI dependent module aren't imported at all if qutip_gui = NONE, rather that having a lot of if-else statements scattered around, but for now I'll try to make a quick fix by adding more if statements.. Rob",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/24#issuecomment-18720853
https://github.com/qutip/qutip/issues/24#issuecomment-18720853:168,Modifiability,refactor,refactor,168,"Hi Arne. Thanks a lot for the bug report. I'll go through the code fix it so that the qutip_gui = NONE flag is handled consistently. In the long run I think we need to refactor the code a little bit, so that GUI dependent module aren't imported at all if qutip_gui = NONE, rather that having a lot of if-else statements scattered around, but for now I'll try to make a quick fix by adding more if statements.. Rob",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/24#issuecomment-18720853
https://github.com/qutip/qutip/issues/25#issuecomment-18951570:57,Availability,error,error,57,"Yes, this can happen.. But I dont think this is a bug or error, although it can be confusing. There is always a risk of namespace collisions when importing different packages into the global namespace. For example, many conflicts of this kind occur between the math and numpy packages.. The only way to get around it safely is to import packages in different namespaces.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/25#issuecomment-18951570
https://github.com/qutip/qutip/issues/25#issuecomment-18951570:112,Safety,risk,risk,112,"Yes, this can happen.. But I dont think this is a bug or error, although it can be confusing. There is always a risk of namespace collisions when importing different packages into the global namespace. For example, many conflicts of this kind occur between the math and numpy packages.. The only way to get around it safely is to import packages in different namespaces.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/25#issuecomment-18951570
https://github.com/qutip/qutip/issues/25#issuecomment-18951570:317,Safety,safe,safely,317,"Yes, this can happen.. But I dont think this is a bug or error, although it can be confusing. There is always a risk of namespace collisions when importing different packages into the global namespace. For example, many conflicts of this kind occur between the math and numpy packages.. The only way to get around it safely is to import packages in different namespaces.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/25#issuecomment-18951570
https://github.com/qutip/qutip/issues/25#issuecomment-18951920:212,Availability,error,errors,212,"But it seems to me that it would be best to avoid this type of issue when possible. For example, the squeezing operator is called squeez just to get around a namespace conflict. Otherwise people are bound to get errors that don't make any sense just because of the import order and then they will be emailing us. Of course we can not avoid all conflicts, but since loading scipy is so fundamental to what we do, having no conflicts with this package seems to be reasonable, at least to me. . On Wednesday, June 5, 2013 at 11:12 AM, Robert Johansson wrote:. > Yes, this can happen.. But I dont think this is a bug or error, although it can be confusing. There is always a risk of namespace collisions when importing different packages into the global namespace. For example, many conflicts of this kind occur between the math and numpy packages.. The only way to get around it safely is to import packages in different namespaces.; > ; > —; > Reply to this email directly or view it on GitHub (https://github.com/qutip/qutip/issues/25#issuecomment-18951570).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/25#issuecomment-18951920
https://github.com/qutip/qutip/issues/25#issuecomment-18951920:616,Availability,error,error,616,"But it seems to me that it would be best to avoid this type of issue when possible. For example, the squeezing operator is called squeez just to get around a namespace conflict. Otherwise people are bound to get errors that don't make any sense just because of the import order and then they will be emailing us. Of course we can not avoid all conflicts, but since loading scipy is so fundamental to what we do, having no conflicts with this package seems to be reasonable, at least to me. . On Wednesday, June 5, 2013 at 11:12 AM, Robert Johansson wrote:. > Yes, this can happen.. But I dont think this is a bug or error, although it can be confusing. There is always a risk of namespace collisions when importing different packages into the global namespace. For example, many conflicts of this kind occur between the math and numpy packages.. The only way to get around it safely is to import packages in different namespaces.; > ; > —; > Reply to this email directly or view it on GitHub (https://github.com/qutip/qutip/issues/25#issuecomment-18951570).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/25#issuecomment-18951920
https://github.com/qutip/qutip/issues/25#issuecomment-18951920:365,Performance,load,loading,365,"But it seems to me that it would be best to avoid this type of issue when possible. For example, the squeezing operator is called squeez just to get around a namespace conflict. Otherwise people are bound to get errors that don't make any sense just because of the import order and then they will be emailing us. Of course we can not avoid all conflicts, but since loading scipy is so fundamental to what we do, having no conflicts with this package seems to be reasonable, at least to me. . On Wednesday, June 5, 2013 at 11:12 AM, Robert Johansson wrote:. > Yes, this can happen.. But I dont think this is a bug or error, although it can be confusing. There is always a risk of namespace collisions when importing different packages into the global namespace. For example, many conflicts of this kind occur between the math and numpy packages.. The only way to get around it safely is to import packages in different namespaces.; > ; > —; > Reply to this email directly or view it on GitHub (https://github.com/qutip/qutip/issues/25#issuecomment-18951570).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/25#issuecomment-18951920
https://github.com/qutip/qutip/issues/25#issuecomment-18951920:44,Safety,avoid,avoid,44,"But it seems to me that it would be best to avoid this type of issue when possible. For example, the squeezing operator is called squeez just to get around a namespace conflict. Otherwise people are bound to get errors that don't make any sense just because of the import order and then they will be emailing us. Of course we can not avoid all conflicts, but since loading scipy is so fundamental to what we do, having no conflicts with this package seems to be reasonable, at least to me. . On Wednesday, June 5, 2013 at 11:12 AM, Robert Johansson wrote:. > Yes, this can happen.. But I dont think this is a bug or error, although it can be confusing. There is always a risk of namespace collisions when importing different packages into the global namespace. For example, many conflicts of this kind occur between the math and numpy packages.. The only way to get around it safely is to import packages in different namespaces.; > ; > —; > Reply to this email directly or view it on GitHub (https://github.com/qutip/qutip/issues/25#issuecomment-18951570).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/25#issuecomment-18951920
https://github.com/qutip/qutip/issues/25#issuecomment-18951920:334,Safety,avoid,avoid,334,"But it seems to me that it would be best to avoid this type of issue when possible. For example, the squeezing operator is called squeez just to get around a namespace conflict. Otherwise people are bound to get errors that don't make any sense just because of the import order and then they will be emailing us. Of course we can not avoid all conflicts, but since loading scipy is so fundamental to what we do, having no conflicts with this package seems to be reasonable, at least to me. . On Wednesday, June 5, 2013 at 11:12 AM, Robert Johansson wrote:. > Yes, this can happen.. But I dont think this is a bug or error, although it can be confusing. There is always a risk of namespace collisions when importing different packages into the global namespace. For example, many conflicts of this kind occur between the math and numpy packages.. The only way to get around it safely is to import packages in different namespaces.; > ; > —; > Reply to this email directly or view it on GitHub (https://github.com/qutip/qutip/issues/25#issuecomment-18951570).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/25#issuecomment-18951920
https://github.com/qutip/qutip/issues/25#issuecomment-18951920:671,Safety,risk,risk,671,"But it seems to me that it would be best to avoid this type of issue when possible. For example, the squeezing operator is called squeez just to get around a namespace conflict. Otherwise people are bound to get errors that don't make any sense just because of the import order and then they will be emailing us. Of course we can not avoid all conflicts, but since loading scipy is so fundamental to what we do, having no conflicts with this package seems to be reasonable, at least to me. . On Wednesday, June 5, 2013 at 11:12 AM, Robert Johansson wrote:. > Yes, this can happen.. But I dont think this is a bug or error, although it can be confusing. There is always a risk of namespace collisions when importing different packages into the global namespace. For example, many conflicts of this kind occur between the math and numpy packages.. The only way to get around it safely is to import packages in different namespaces.; > ; > —; > Reply to this email directly or view it on GitHub (https://github.com/qutip/qutip/issues/25#issuecomment-18951570).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/25#issuecomment-18951920
https://github.com/qutip/qutip/issues/25#issuecomment-18951920:876,Safety,safe,safely,876,"But it seems to me that it would be best to avoid this type of issue when possible. For example, the squeezing operator is called squeez just to get around a namespace conflict. Otherwise people are bound to get errors that don't make any sense just because of the import order and then they will be emailing us. Of course we can not avoid all conflicts, but since loading scipy is so fundamental to what we do, having no conflicts with this package seems to be reasonable, at least to me. . On Wednesday, June 5, 2013 at 11:12 AM, Robert Johansson wrote:. > Yes, this can happen.. But I dont think this is a bug or error, although it can be confusing. There is always a risk of namespace collisions when importing different packages into the global namespace. For example, many conflicts of this kind occur between the math and numpy packages.. The only way to get around it safely is to import packages in different namespaces.; > ; > —; > Reply to this email directly or view it on GitHub (https://github.com/qutip/qutip/issues/25#issuecomment-18951570).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/25#issuecomment-18951920
https://github.com/qutip/qutip/issues/25#issuecomment-18952812:736,Integrability,depend,dependency,736,"I would have preferred if the squeez function was called squeeze... but that's just a personal preference. There are many very generic symbol names in qutip, such as tensor, create, etc. These could easily appear in some other package, such as scipy or numpy sometime in the future, and then become a conflict, so I tend to prefer not relying on distorting the function names to make them more unique. For example, identity seems more readable to qeye, which is why i prefer it. What is your suggestion? That we remove identity again? If you think that's the best thing to do that I'm ok with that. However, if best practices python programming is followed, either by not importing into the global namespace or by importing packages in dependency order (for example numpy, matplotlob, scipy. followed by qutip), then this isn't really a problem.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/25#issuecomment-18952812
https://github.com/qutip/qutip/issues/25#issuecomment-18955374:86,Deployability,release,release,86,"Well how about we just stick with the way it is, change squeez to squeeze in the next release (with squeez depreciated and calling the new version), and mentioning in the docs that qutip should probably be imported last?. On Wednesday, June 5, 2013 at 11:54 AM, Robert Johansson wrote:. > I would have preferred if the squeez function was called squeeze... but that's just a personal preference. There are many very generic symbol names in qutip, such as tensor, create, etc. These could easily appear in some other package, such as scipy or numpy sometime in the future, and then become a conflict, so I tend to prefer not relying on distorting the function names to make them more unique. For example, identity seems more readable to qeye, which is why i prefer it.; > What is your suggestion? That we remove identity again? If you think that's the best thing to do that I'm ok with that.; > However, if best practices python programming is followed, either by not importing into the global namespace or by importing packages in dependency order (for example numpy, matplotlob, scipy. followed by qutip), then this isn't really a problem.; > ; > —; > Reply to this email directly or view it on GitHub (https://github.com/qutip/qutip/issues/25#issuecomment-18952812).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/25#issuecomment-18955374
https://github.com/qutip/qutip/issues/25#issuecomment-18955374:1031,Integrability,depend,dependency,1031,"Well how about we just stick with the way it is, change squeez to squeeze in the next release (with squeez depreciated and calling the new version), and mentioning in the docs that qutip should probably be imported last?. On Wednesday, June 5, 2013 at 11:54 AM, Robert Johansson wrote:. > I would have preferred if the squeez function was called squeeze... but that's just a personal preference. There are many very generic symbol names in qutip, such as tensor, create, etc. These could easily appear in some other package, such as scipy or numpy sometime in the future, and then become a conflict, so I tend to prefer not relying on distorting the function names to make them more unique. For example, identity seems more readable to qeye, which is why i prefer it.; > What is your suggestion? That we remove identity again? If you think that's the best thing to do that I'm ok with that.; > However, if best practices python programming is followed, either by not importing into the global namespace or by importing packages in dependency order (for example numpy, matplotlob, scipy. followed by qutip), then this isn't really a problem.; > ; > —; > Reply to this email directly or view it on GitHub (https://github.com/qutip/qutip/issues/25#issuecomment-18952812).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/25#issuecomment-18955374
https://github.com/qutip/qutip/pull/27#issuecomment-19307072:29,Availability,error,error,29,Hi! Thanks for spotting this error and sending a fix! The patch looks good so I'm merging.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/27#issuecomment-19307072
https://github.com/qutip/qutip/pull/27#issuecomment-19307072:58,Deployability,patch,patch,58,Hi! Thanks for spotting this error and sending a fix! The patch looks good so I'm merging.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/27#issuecomment-19307072
https://github.com/qutip/qutip/issues/28#issuecomment-19604526:88,Availability,down,downside,88,"I can definitely see the appeal in having bra_ket returning a c-number, but the obvious downside it that one loses the ability to call Qobjs methods and attributes on the result, and maybe not use it as input to some of qutips other functions. But these might be corner cases since the data of bra_ket is after all a c-number so it might not be necessary to represent it with a Qobj. Still I feel hesitant to change this behavior without carefully thinking through the consequences. There is also a function Qobj.overlap that can be used if a c number result is what one wants. . Maybe @nonhermitian has some opinion/insights on this issue?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/28#issuecomment-19604526
https://github.com/qutip/qutip/issues/28#issuecomment-28289086:105,Availability,down,downsides,105,"We will probably change this behavior in version 3. Indeed, the benefits probably out weigh the possible downsides, if any. > On 2013. 11. 12., at 20:51, Piotr Migdał notifications@github.com wrote:; > ; > When it comes to bra*ket results, I would prefer to have a c-number, not an Qobj.; > ; > Why?; > ; > Because typical things like; > ; > if abs(some_bra \* some_ket) > 0.5:; > do_something(); > won't work.; > ; > Also things like creating a Gramian matrix (as np.matrix or np.array) from a set of quantum states won't work (unless I extract them by [0,0]); > ; > Moreover, Qobj.tr() returns a c-number not a Qobj, and here I would expect to have similar behavior for both tr and inner product.; > ; > Also, things like number of particles or dimensionality have (IMHO) little sense for a 1x1 Qobj.; > ; > I do understand why, from matrix multiplication perspective, scalar products may result in a 1x1 Qobj.; > But in mathematics a vector is not a nx1 matrix, and a scalar product is a function to c-numbers.; > ; > Anyway, I do understand that it's not pure mathematics, and there is implementation and other factors.; > ; > @jrjohansson Do you know any particular use-cases when it is preferable to distinguish between 1x1 Qobj and c-numbers?; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/28#issuecomment-28289086
https://github.com/qutip/qutip/issues/28#issuecomment-28302814:641,Energy Efficiency,reduce,reduced,641,"I still vote for keeping it as it is, because I think it makes sense to keep Qobj \* Qobj in the space of Qobj. This is now numpy.ndarray, numpy.matrix and scipy,sparse.spmatrix works, and I think that one would expect Qobj to do the same. A simple example: imagine you get a Qobj x as an argument to a function, and you do some computation like x.dag() \* op \* x with some operator op. If x is a ket you will get a Python complex as a result with your suggested behavior. But if x is an operator instead you will get a Qobj. Or if x is a tensor of an operator and a ket (like in the top of this issue) you will get something in between, a reduced dimensionality operator. I think it makes a lot more sense to keep the results of all these cases as Qobj. Then if one for example want to do the trace of the result it should work in all cases, and no special handing of C-numbers would be required since Qobj([1]).tr() would give something reasonable, but (Python complex).tr() would obviously fail. The use-case you are interested in, abs(some_bra \* some_ket), could easily be implemented in Qobj by implementing the **abs** special function. I think that would be a better way.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/28#issuecomment-28302814
https://github.com/qutip/qutip/issues/28#issuecomment-28302814:242,Usability,simpl,simple,242,"I still vote for keeping it as it is, because I think it makes sense to keep Qobj \* Qobj in the space of Qobj. This is now numpy.ndarray, numpy.matrix and scipy,sparse.spmatrix works, and I think that one would expect Qobj to do the same. A simple example: imagine you get a Qobj x as an argument to a function, and you do some computation like x.dag() \* op \* x with some operator op. If x is a ket you will get a Python complex as a result with your suggested behavior. But if x is an operator instead you will get a Qobj. Or if x is a tensor of an operator and a ket (like in the top of this issue) you will get something in between, a reduced dimensionality operator. I think it makes a lot more sense to keep the results of all these cases as Qobj. Then if one for example want to do the trace of the result it should work in all cases, and no special handing of C-numbers would be required since Qobj([1]).tr() would give something reasonable, but (Python complex).tr() would obviously fail. The use-case you are interested in, abs(some_bra \* some_ket), could easily be implemented in Qobj by implementing the **abs** special function. I think that would be a better way.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/28#issuecomment-28302814
https://github.com/qutip/qutip/issues/29#issuecomment-20343868:61,Availability,toler,tolerance,61,"It appears that the iterative methods do not converge to the tolerance value within the maxiter number of steps. The bicgstab method is particularly bad. Another option is lgmres that I have found to give the correct answer with fewer iterations. I have also noticed that we are still having issues with the preconditioner failing, but that is for another day.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/29#issuecomment-20343868
https://github.com/qutip/qutip/issues/29#issuecomment-20392672:30,Performance,perform,performance,30,"Nice, good job!! How does the performance look like for small problems? Does it make any sense to add an option to select bicgstab or lmgres, or does lmgres beat bicgstab in all cases you have looked at? Anyways, performance for systems is not that important, but we badly need better performing steadystate solvers for large systems so your benchmarks looks very promising :-)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/29#issuecomment-20392672
https://github.com/qutip/qutip/issues/29#issuecomment-20392672:213,Performance,perform,performance,213,"Nice, good job!! How does the performance look like for small problems? Does it make any sense to add an option to select bicgstab or lmgres, or does lmgres beat bicgstab in all cases you have looked at? Anyways, performance for systems is not that important, but we badly need better performing steadystate solvers for large systems so your benchmarks looks very promising :-)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/29#issuecomment-20392672
https://github.com/qutip/qutip/issues/29#issuecomment-20392672:285,Performance,perform,performing,285,"Nice, good job!! How does the performance look like for small problems? Does it make any sense to add an option to select bicgstab or lmgres, or does lmgres beat bicgstab in all cases you have looked at? Anyways, performance for systems is not that important, but we badly need better performing steadystate solvers for large systems so your benchmarks looks very promising :-)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/29#issuecomment-20392672
https://github.com/qutip/qutip/issues/29#issuecomment-20392672:342,Testability,benchmark,benchmarks,342,"Nice, good job!! How does the performance look like for small problems? Does it make any sense to add an option to select bicgstab or lmgres, or does lmgres beat bicgstab in all cases you have looked at? Anyways, performance for systems is not that important, but we badly need better performing steadystate solvers for large systems so your benchmarks looks very promising :-)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/29#issuecomment-20392672
https://github.com/qutip/qutip/issues/29#issuecomment-20393941:558,Performance,perform,performance,558,"You can see from the attached figure that it works pretty good, even at lower Hilbert space sizes. I would be hesitant to add both options because the bicgstab method fails not because of too few iterations, but because of some ""breakdown"" that can not be figured out. Since the current method works so well, and the only issues are the number of iterations, which is taken care of by using a preconditioner, it seems that the LMGRES method is the way to go. . On Wednesday, July 3, 2013 at 11:52 AM, Robert Johansson wrote:. > Nice, good job!! How does the performance look like for small problems? Does it make any sense to add an option to select bicgstab or lmgres, or does lmgres beat bicgstab in all cases you have looked at? Anyways, performance for systems is not that important, but we badly need better performing steadystate solvers for large systems so your benchmarks looks very promising :-); > ; > —; > Reply to this email directly or view it on GitHub (https://github.com/qutip/qutip/issues/29#issuecomment-20392672).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/29#issuecomment-20393941
https://github.com/qutip/qutip/issues/29#issuecomment-20393941:741,Performance,perform,performance,741,"You can see from the attached figure that it works pretty good, even at lower Hilbert space sizes. I would be hesitant to add both options because the bicgstab method fails not because of too few iterations, but because of some ""breakdown"" that can not be figured out. Since the current method works so well, and the only issues are the number of iterations, which is taken care of by using a preconditioner, it seems that the LMGRES method is the way to go. . On Wednesday, July 3, 2013 at 11:52 AM, Robert Johansson wrote:. > Nice, good job!! How does the performance look like for small problems? Does it make any sense to add an option to select bicgstab or lmgres, or does lmgres beat bicgstab in all cases you have looked at? Anyways, performance for systems is not that important, but we badly need better performing steadystate solvers for large systems so your benchmarks looks very promising :-); > ; > —; > Reply to this email directly or view it on GitHub (https://github.com/qutip/qutip/issues/29#issuecomment-20392672).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/29#issuecomment-20393941
https://github.com/qutip/qutip/issues/29#issuecomment-20393941:813,Performance,perform,performing,813,"You can see from the attached figure that it works pretty good, even at lower Hilbert space sizes. I would be hesitant to add both options because the bicgstab method fails not because of too few iterations, but because of some ""breakdown"" that can not be figured out. Since the current method works so well, and the only issues are the number of iterations, which is taken care of by using a preconditioner, it seems that the LMGRES method is the way to go. . On Wednesday, July 3, 2013 at 11:52 AM, Robert Johansson wrote:. > Nice, good job!! How does the performance look like for small problems? Does it make any sense to add an option to select bicgstab or lmgres, or does lmgres beat bicgstab in all cases you have looked at? Anyways, performance for systems is not that important, but we badly need better performing steadystate solvers for large systems so your benchmarks looks very promising :-); > ; > —; > Reply to this email directly or view it on GitHub (https://github.com/qutip/qutip/issues/29#issuecomment-20392672).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/29#issuecomment-20393941
https://github.com/qutip/qutip/issues/29#issuecomment-20393941:870,Testability,benchmark,benchmarks,870,"You can see from the attached figure that it works pretty good, even at lower Hilbert space sizes. I would be hesitant to add both options because the bicgstab method fails not because of too few iterations, but because of some ""breakdown"" that can not be figured out. Since the current method works so well, and the only issues are the number of iterations, which is taken care of by using a preconditioner, it seems that the LMGRES method is the way to go. . On Wednesday, July 3, 2013 at 11:52 AM, Robert Johansson wrote:. > Nice, good job!! How does the performance look like for small problems? Does it make any sense to add an option to select bicgstab or lmgres, or does lmgres beat bicgstab in all cases you have looked at? Anyways, performance for systems is not that important, but we badly need better performing steadystate solvers for large systems so your benchmarks looks very promising :-); > ; > —; > Reply to this email directly or view it on GitHub (https://github.com/qutip/qutip/issues/29#issuecomment-20392672).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/29#issuecomment-20393941
https://github.com/qutip/qutip/issues/29#issuecomment-20661092:75,Testability,test,testing,75,"I would like to draw your attention to this problem once again. I did some testing with steady state for my high dimensional model. The direct method runs out of memory so I was trying all sorts of iterative methods. My conclusion was that the BicgSTAB method is the best for my particular problem. However, the iterative methods are very sensitive to basically everything this is why there are so many different kinds of them. Moreover, the Scipy realisation of these methods is not the most optimal. PyAMG realisation of bicgSTAB worked better for me than the one from scipy. So, please, keep both of the methods in qutip.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/29#issuecomment-20661092
https://github.com/qutip/qutip/issues/29#issuecomment-20662801:193,Availability,error,error,193,"The SS solver has been heavily modifed since version 2.2. The bicgstab; method has been replaced in the development version with the LGMRES solver.; The bicgstab method would exit with a fatal error. The new method in; combination with the preconditioner is quite fast. However preconditioning; does fail for some models. Paul; On Jul 9, 2013 5:54 PM, ""Vutshi"" notifications@github.com wrote:. > I would like to draw your attention to this problem once again. I did some; > testing with steady state for my high dimensional model. The direct method; > runs out of memory so I was trying all sorts of iterative methods. My; > conclusion was that the BicgSTAB method is the best for my particular; > problem. However, the iterative methods are very sensitive to everything; > basically this is why there are so many different kinds of them. Moreover,; > the Scipy realisation of these methods is not the most optimal. PyAMG; > realisation of bicgSTAB worked better for me than the one from scipy. So,; > please, keep both of the methods in qutip.; > ; > —; > Reply to this email directly or view it on GitHubhttps://github.com/qutip/qutip/issues/29#issuecomment-20661092; > .",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/29#issuecomment-20662801
https://github.com/qutip/qutip/issues/29#issuecomment-20662801:474,Testability,test,testing,474,"The SS solver has been heavily modifed since version 2.2. The bicgstab; method has been replaced in the development version with the LGMRES solver.; The bicgstab method would exit with a fatal error. The new method in; combination with the preconditioner is quite fast. However preconditioning; does fail for some models. Paul; On Jul 9, 2013 5:54 PM, ""Vutshi"" notifications@github.com wrote:. > I would like to draw your attention to this problem once again. I did some; > testing with steady state for my high dimensional model. The direct method; > runs out of memory so I was trying all sorts of iterative methods. My; > conclusion was that the BicgSTAB method is the best for my particular; > problem. However, the iterative methods are very sensitive to everything; > basically this is why there are so many different kinds of them. Moreover,; > the Scipy realisation of these methods is not the most optimal. PyAMG; > realisation of bicgSTAB worked better for me than the one from scipy. So,; > please, keep both of the methods in qutip.; > ; > —; > Reply to this email directly or view it on GitHubhttps://github.com/qutip/qutip/issues/29#issuecomment-20661092; > .",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/29#issuecomment-20662801
https://github.com/qutip/qutip/issues/29#issuecomment-20720708:132,Availability,down,down,132,"After playing around with PyAMG, I do not see any benefit over our current implementation. In fact, the PyAMG solvers were breaking down just like the SciPy versions did. The only issue we are having is the superLU preconditioner fails for some systems. Once that issue is figured out (hopefully) we will be in a good position with respect to SS solving.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/29#issuecomment-20720708
https://github.com/qutip/qutip/issues/30#issuecomment-35974556:97,Deployability,release,release,97,"These tests are now skipped with the skipif decorator, but should be looked at again before next release.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/30#issuecomment-35974556
https://github.com/qutip/qutip/issues/30#issuecomment-35974556:6,Testability,test,tests,6,"These tests are now skipped with the skipif decorator, but should be looked at again before next release.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/30#issuecomment-35974556
https://github.com/qutip/qutip/issues/35#issuecomment-22011953:1267,Availability,down,down,1267,"first look it's looking great! I've been working a lot on the stochastic solvers the last few months, but it is still very much under development. The milstein method has been on my todo list for a long time, but I've not gotten around to work on it yet, so your contribution is very timely and most welcome!. I have tried to design the API in the most general way I could think of while still keeping the complexity from growing too much. Defining an SME with its RHS function, D1 and D2 functions has worked for most problems I considered so far, but I'd be happy to discuss further if this could be changed to something more flexible, like a function for calculating rho_{n+1} like you suggest. We hope to have the stochastic solver API ready and mature enough to include in the next qutip release sometime this fall, so it would be good to have these things tested and thoroughly discussed before then. But until the stochastic module is officially in the QuTiP API we still have a lot of freedom to shake things up if necessary. Also, to keep complexity and code duplication down I wanted to follow the pattern. smesolve (choose solver by argument) -> smesolve_generic -> specific method and SDE by rhs, d1, d2 selection. So it would be good if smesolve_mil and smesolve_impl in your code could be combined with smesolve, and if smesolve_implicit and smesolve_milstein could be combined with smesolve_generic, etc. That would reduce a lot of code duplication I think. Of course, if smesolve_generic needs to be changed to accommodate this that would be totally fine with me. It would be great if you could do a pull request of this to the qutip master, then we could discuss details in the PR. You'd need to rebase your branch to the current master tip though, because things already changed a bit since the version you based your additions on. If you have troubles with this or no not know how to do it I could also try to merge your modifications into the qutip master, it's totally up to you.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/35#issuecomment-22011953
https://github.com/qutip/qutip/issues/35#issuecomment-22011953:980,Deployability,release,release,980,"Hi Vutshi. Thanks a lot for this contribution! It's looking very interesting indeed. I'll be looking into the details of your code, notebook and your paper in the coming days, but from a first look it's looking great! I've been working a lot on the stochastic solvers the last few months, but it is still very much under development. The milstein method has been on my todo list for a long time, but I've not gotten around to work on it yet, so your contribution is very timely and most welcome!. I have tried to design the API in the most general way I could think of while still keeping the complexity from growing too much. Defining an SME with its RHS function, D1 and D2 functions has worked for most problems I considered so far, but I'd be happy to discuss further if this could be changed to something more flexible, like a function for calculating rho_{n+1} like you suggest. We hope to have the stochastic solver API ready and mature enough to include in the next qutip release sometime this fall, so it would be good to have these things tested and thoroughly discussed before then. But until the stochastic module is officially in the QuTiP API we still have a lot of freedom to shake things up if necessary. Also, to keep complexity and code duplication down I wanted to follow the pattern. smesolve (choose solver by argument) -> smesolve_generic -> specific method and SDE by rhs, d1, d2 selection. So it would be good if smesolve_mil and smesolve_impl in your code could be combined with smesolve, and if smesolve_implicit and smesolve_milstein could be combined with smesolve_generic, etc. That would reduce a lot of code duplication I think. Of course, if smesolve_generic needs to be changed to accommodate this that would be totally fine with me. It would be great if you could do a pull request of this to the qutip master, then we could discuss details in the PR. You'd need to rebase your branch to the current master tip though, because things already changed a bit since the v",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/35#issuecomment-22011953
https://github.com/qutip/qutip/issues/35#issuecomment-22011953:1618,Energy Efficiency,reduce,reduce,1618,"first look it's looking great! I've been working a lot on the stochastic solvers the last few months, but it is still very much under development. The milstein method has been on my todo list for a long time, but I've not gotten around to work on it yet, so your contribution is very timely and most welcome!. I have tried to design the API in the most general way I could think of while still keeping the complexity from growing too much. Defining an SME with its RHS function, D1 and D2 functions has worked for most problems I considered so far, but I'd be happy to discuss further if this could be changed to something more flexible, like a function for calculating rho_{n+1} like you suggest. We hope to have the stochastic solver API ready and mature enough to include in the next qutip release sometime this fall, so it would be good to have these things tested and thoroughly discussed before then. But until the stochastic module is officially in the QuTiP API we still have a lot of freedom to shake things up if necessary. Also, to keep complexity and code duplication down I wanted to follow the pattern. smesolve (choose solver by argument) -> smesolve_generic -> specific method and SDE by rhs, d1, d2 selection. So it would be good if smesolve_mil and smesolve_impl in your code could be combined with smesolve, and if smesolve_implicit and smesolve_milstein could be combined with smesolve_generic, etc. That would reduce a lot of code duplication I think. Of course, if smesolve_generic needs to be changed to accommodate this that would be totally fine with me. It would be great if you could do a pull request of this to the qutip master, then we could discuss details in the PR. You'd need to rebase your branch to the current master tip though, because things already changed a bit since the version you based your additions on. If you have troubles with this or no not know how to do it I could also try to merge your modifications into the qutip master, it's totally up to you.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/35#issuecomment-22011953
https://github.com/qutip/qutip/issues/35#issuecomment-22011953:815,Modifiability,flexible,flexible,815,"Hi Vutshi. Thanks a lot for this contribution! It's looking very interesting indeed. I'll be looking into the details of your code, notebook and your paper in the coming days, but from a first look it's looking great! I've been working a lot on the stochastic solvers the last few months, but it is still very much under development. The milstein method has been on my todo list for a long time, but I've not gotten around to work on it yet, so your contribution is very timely and most welcome!. I have tried to design the API in the most general way I could think of while still keeping the complexity from growing too much. Defining an SME with its RHS function, D1 and D2 functions has worked for most problems I considered so far, but I'd be happy to discuss further if this could be changed to something more flexible, like a function for calculating rho_{n+1} like you suggest. We hope to have the stochastic solver API ready and mature enough to include in the next qutip release sometime this fall, so it would be good to have these things tested and thoroughly discussed before then. But until the stochastic module is officially in the QuTiP API we still have a lot of freedom to shake things up if necessary. Also, to keep complexity and code duplication down I wanted to follow the pattern. smesolve (choose solver by argument) -> smesolve_generic -> specific method and SDE by rhs, d1, d2 selection. So it would be good if smesolve_mil and smesolve_impl in your code could be combined with smesolve, and if smesolve_implicit and smesolve_milstein could be combined with smesolve_generic, etc. That would reduce a lot of code duplication I think. Of course, if smesolve_generic needs to be changed to accommodate this that would be totally fine with me. It would be great if you could do a pull request of this to the qutip master, then we could discuss details in the PR. You'd need to rebase your branch to the current master tip though, because things already changed a bit since the v",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/35#issuecomment-22011953
https://github.com/qutip/qutip/issues/35#issuecomment-22011953:1049,Testability,test,tested,1049,"Hi Vutshi. Thanks a lot for this contribution! It's looking very interesting indeed. I'll be looking into the details of your code, notebook and your paper in the coming days, but from a first look it's looking great! I've been working a lot on the stochastic solvers the last few months, but it is still very much under development. The milstein method has been on my todo list for a long time, but I've not gotten around to work on it yet, so your contribution is very timely and most welcome!. I have tried to design the API in the most general way I could think of while still keeping the complexity from growing too much. Defining an SME with its RHS function, D1 and D2 functions has worked for most problems I considered so far, but I'd be happy to discuss further if this could be changed to something more flexible, like a function for calculating rho_{n+1} like you suggest. We hope to have the stochastic solver API ready and mature enough to include in the next qutip release sometime this fall, so it would be good to have these things tested and thoroughly discussed before then. But until the stochastic module is officially in the QuTiP API we still have a lot of freedom to shake things up if necessary. Also, to keep complexity and code duplication down I wanted to follow the pattern. smesolve (choose solver by argument) -> smesolve_generic -> specific method and SDE by rhs, d1, d2 selection. So it would be good if smesolve_mil and smesolve_impl in your code could be combined with smesolve, and if smesolve_implicit and smesolve_milstein could be combined with smesolve_generic, etc. That would reduce a lot of code duplication I think. Of course, if smesolve_generic needs to be changed to accommodate this that would be totally fine with me. It would be great if you could do a pull request of this to the qutip master, then we could discuss details in the PR. You'd need to rebase your branch to the current master tip though, because things already changed a bit since the v",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/35#issuecomment-22011953
https://github.com/qutip/qutip/issues/35#issuecomment-22015755:41,Availability,redundant,redundant,41,What I did in stochastic.py is a totally redundant mess. This is the reason I didn't do the pull request. I feel that an elegant way to add the Milstein with multiple Wiener increments (as well as any other more advanced methods) is to switch to a RHS function which is provided with all A_ops and which returns rho_{n+1}. Since it involves changing of API I want to discuss it with you first.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/35#issuecomment-22015755
https://github.com/qutip/qutip/issues/35#issuecomment-22015755:41,Safety,redund,redundant,41,What I did in stochastic.py is a totally redundant mess. This is the reason I didn't do the pull request. I feel that an elegant way to add the Milstein with multiple Wiener increments (as well as any other more advanced methods) is to switch to a RHS function which is provided with all A_ops and which returns rho_{n+1}. Since it involves changing of API I want to discuss it with you first.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/35#issuecomment-22015755
https://github.com/qutip/qutip/issues/35#issuecomment-22088170:1770,Deployability,integrat,integrator,1770,"or each stochastic collapse operator, but now it is also possible to do something more sophisticated, like in your milstein solver. I've edited your notebook so that it uses the standard (now modified) smesolve and your rhs functions for the milstein methods. http://nbviewer.ipython.org/6153688. Note that I still only use the rhs function for the contributions due to the stochastic collapse operators (both the deterministic and stochastic part), and it does not include the unitary part or the deterministic collapse operators (if those are given as well), so it is not quite what you suggested when proposing that the rhs should calculate \rho_{n+1}. Do you think this approach is reasonable, or do you see any problems with it?. Regarding your milstein implementation, it seems that it is only valid for homodyne detection, since your have hardcoded the d1 and d2 function into the rhs function. I've tried to separate the definition of the SDE (d1 and d2) from the implementation of the SDE integrator (rhs), and naively it seems like you could use the d1 and d2 functions in rhs_milstein to make it possible to use it with hetrodyne detection as well. Is there any difficulties in generalizing the milstein method and parameterize it in terms of d1 and d2 functions in this way?. I've also tried to use the smesolve_imp and smesolve_milstein with explicit=False in your original notebook, but I do not get resuls that agree with the other methods if I use these. Looking at the code for smesolve_imp, you do an inversion of some variant of the liouvillian to calculate Lsparse, what is the purpose of that calculation? And finally, I see you use expm in _smesolve_single_milstein_implicit: I think this should be avoided because it will be very computationally demanding for larger systems. If you are satisfied with how the new rhs functions work I'll merge the branch sme-rhs-restructuring into qutip master and then feel free to submit a pull request with your milstein rhs implementation.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/35#issuecomment-22088170
https://github.com/qutip/qutip/issues/35#issuecomment-22088170:241,Integrability,depend,depended,241,"Hi again. I've looked at your notebook and code in some more detail now, and I have attempted to make the change in how the rhs function behaves. I had not seen an example where the contributions form different stochastic collapse operators depended on each other before, but I now see the need for having this possibility from looking at your implementation of the Milstein implementation with multiple Wiener processes. I have created a new branch in qutip called sme-rhs-restructuring (see commit 0b4a1a7a6591aca27ff6cb71310cf73af7ae2d7f and https://github.com/qutip/qutip/tree/sme-rhs-restructuring) where I have experimented with rhs functions that internally loop through the A_ops list. In simple cases it only loops through the list and calculates a contribution for each stochastic collapse operator, but now it is also possible to do something more sophisticated, like in your milstein solver. I've edited your notebook so that it uses the standard (now modified) smesolve and your rhs functions for the milstein methods. http://nbviewer.ipython.org/6153688. Note that I still only use the rhs function for the contributions due to the stochastic collapse operators (both the deterministic and stochastic part), and it does not include the unitary part or the deterministic collapse operators (if those are given as well), so it is not quite what you suggested when proposing that the rhs should calculate \rho_{n+1}. Do you think this approach is reasonable, or do you see any problems with it?. Regarding your milstein implementation, it seems that it is only valid for homodyne detection, since your have hardcoded the d1 and d2 function into the rhs function. I've tried to separate the definition of the SDE (d1 and d2) from the implementation of the SDE integrator (rhs), and naively it seems like you could use the d1 and d2 functions in rhs_milstein to make it possible to use it with hetrodyne detection as well. Is there any difficulties in generalizing the milstein method and par",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/35#issuecomment-22088170
https://github.com/qutip/qutip/issues/35#issuecomment-22088170:1770,Integrability,integrat,integrator,1770,"or each stochastic collapse operator, but now it is also possible to do something more sophisticated, like in your milstein solver. I've edited your notebook so that it uses the standard (now modified) smesolve and your rhs functions for the milstein methods. http://nbviewer.ipython.org/6153688. Note that I still only use the rhs function for the contributions due to the stochastic collapse operators (both the deterministic and stochastic part), and it does not include the unitary part or the deterministic collapse operators (if those are given as well), so it is not quite what you suggested when proposing that the rhs should calculate \rho_{n+1}. Do you think this approach is reasonable, or do you see any problems with it?. Regarding your milstein implementation, it seems that it is only valid for homodyne detection, since your have hardcoded the d1 and d2 function into the rhs function. I've tried to separate the definition of the SDE (d1 and d2) from the implementation of the SDE integrator (rhs), and naively it seems like you could use the d1 and d2 functions in rhs_milstein to make it possible to use it with hetrodyne detection as well. Is there any difficulties in generalizing the milstein method and parameterize it in terms of d1 and d2 functions in this way?. I've also tried to use the smesolve_imp and smesolve_milstein with explicit=False in your original notebook, but I do not get resuls that agree with the other methods if I use these. Looking at the code for smesolve_imp, you do an inversion of some variant of the liouvillian to calculate Lsparse, what is the purpose of that calculation? And finally, I see you use expm in _smesolve_single_milstein_implicit: I think this should be avoided because it will be very computationally demanding for larger systems. If you are satisfied with how the new rhs functions work I'll merge the branch sme-rhs-restructuring into qutip master and then feel free to submit a pull request with your milstein rhs implementation.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/35#issuecomment-22088170
https://github.com/qutip/qutip/issues/35#issuecomment-22088170:1998,Modifiability,parameteriz,parameterize,1998,"or each stochastic collapse operator, but now it is also possible to do something more sophisticated, like in your milstein solver. I've edited your notebook so that it uses the standard (now modified) smesolve and your rhs functions for the milstein methods. http://nbviewer.ipython.org/6153688. Note that I still only use the rhs function for the contributions due to the stochastic collapse operators (both the deterministic and stochastic part), and it does not include the unitary part or the deterministic collapse operators (if those are given as well), so it is not quite what you suggested when proposing that the rhs should calculate \rho_{n+1}. Do you think this approach is reasonable, or do you see any problems with it?. Regarding your milstein implementation, it seems that it is only valid for homodyne detection, since your have hardcoded the d1 and d2 function into the rhs function. I've tried to separate the definition of the SDE (d1 and d2) from the implementation of the SDE integrator (rhs), and naively it seems like you could use the d1 and d2 functions in rhs_milstein to make it possible to use it with hetrodyne detection as well. Is there any difficulties in generalizing the milstein method and parameterize it in terms of d1 and d2 functions in this way?. I've also tried to use the smesolve_imp and smesolve_milstein with explicit=False in your original notebook, but I do not get resuls that agree with the other methods if I use these. Looking at the code for smesolve_imp, you do an inversion of some variant of the liouvillian to calculate Lsparse, what is the purpose of that calculation? And finally, I see you use expm in _smesolve_single_milstein_implicit: I think this should be avoided because it will be very computationally demanding for larger systems. If you are satisfied with how the new rhs functions work I'll merge the branch sme-rhs-restructuring into qutip master and then feel free to submit a pull request with your milstein rhs implementation.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/35#issuecomment-22088170
https://github.com/qutip/qutip/issues/35#issuecomment-22088170:1591,Safety,detect,detection,1591,"restructuring) where I have experimented with rhs functions that internally loop through the A_ops list. In simple cases it only loops through the list and calculates a contribution for each stochastic collapse operator, but now it is also possible to do something more sophisticated, like in your milstein solver. I've edited your notebook so that it uses the standard (now modified) smesolve and your rhs functions for the milstein methods. http://nbviewer.ipython.org/6153688. Note that I still only use the rhs function for the contributions due to the stochastic collapse operators (both the deterministic and stochastic part), and it does not include the unitary part or the deterministic collapse operators (if those are given as well), so it is not quite what you suggested when proposing that the rhs should calculate \rho_{n+1}. Do you think this approach is reasonable, or do you see any problems with it?. Regarding your milstein implementation, it seems that it is only valid for homodyne detection, since your have hardcoded the d1 and d2 function into the rhs function. I've tried to separate the definition of the SDE (d1 and d2) from the implementation of the SDE integrator (rhs), and naively it seems like you could use the d1 and d2 functions in rhs_milstein to make it possible to use it with hetrodyne detection as well. Is there any difficulties in generalizing the milstein method and parameterize it in terms of d1 and d2 functions in this way?. I've also tried to use the smesolve_imp and smesolve_milstein with explicit=False in your original notebook, but I do not get resuls that agree with the other methods if I use these. Looking at the code for smesolve_imp, you do an inversion of some variant of the liouvillian to calculate Lsparse, what is the purpose of that calculation? And finally, I see you use expm in _smesolve_single_milstein_implicit: I think this should be avoided because it will be very computationally demanding for larger systems. If you are satisfie",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/35#issuecomment-22088170
https://github.com/qutip/qutip/issues/35#issuecomment-22088170:1913,Safety,detect,detection,1913,"or each stochastic collapse operator, but now it is also possible to do something more sophisticated, like in your milstein solver. I've edited your notebook so that it uses the standard (now modified) smesolve and your rhs functions for the milstein methods. http://nbviewer.ipython.org/6153688. Note that I still only use the rhs function for the contributions due to the stochastic collapse operators (both the deterministic and stochastic part), and it does not include the unitary part or the deterministic collapse operators (if those are given as well), so it is not quite what you suggested when proposing that the rhs should calculate \rho_{n+1}. Do you think this approach is reasonable, or do you see any problems with it?. Regarding your milstein implementation, it seems that it is only valid for homodyne detection, since your have hardcoded the d1 and d2 function into the rhs function. I've tried to separate the definition of the SDE (d1 and d2) from the implementation of the SDE integrator (rhs), and naively it seems like you could use the d1 and d2 functions in rhs_milstein to make it possible to use it with hetrodyne detection as well. Is there any difficulties in generalizing the milstein method and parameterize it in terms of d1 and d2 functions in this way?. I've also tried to use the smesolve_imp and smesolve_milstein with explicit=False in your original notebook, but I do not get resuls that agree with the other methods if I use these. Looking at the code for smesolve_imp, you do an inversion of some variant of the liouvillian to calculate Lsparse, what is the purpose of that calculation? And finally, I see you use expm in _smesolve_single_milstein_implicit: I think this should be avoided because it will be very computationally demanding for larger systems. If you are satisfied with how the new rhs functions work I'll merge the branch sme-rhs-restructuring into qutip master and then feel free to submit a pull request with your milstein rhs implementation.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/35#issuecomment-22088170
https://github.com/qutip/qutip/issues/35#issuecomment-22088170:2493,Safety,avoid,avoided,2493,"or each stochastic collapse operator, but now it is also possible to do something more sophisticated, like in your milstein solver. I've edited your notebook so that it uses the standard (now modified) smesolve and your rhs functions for the milstein methods. http://nbviewer.ipython.org/6153688. Note that I still only use the rhs function for the contributions due to the stochastic collapse operators (both the deterministic and stochastic part), and it does not include the unitary part or the deterministic collapse operators (if those are given as well), so it is not quite what you suggested when proposing that the rhs should calculate \rho_{n+1}. Do you think this approach is reasonable, or do you see any problems with it?. Regarding your milstein implementation, it seems that it is only valid for homodyne detection, since your have hardcoded the d1 and d2 function into the rhs function. I've tried to separate the definition of the SDE (d1 and d2) from the implementation of the SDE integrator (rhs), and naively it seems like you could use the d1 and d2 functions in rhs_milstein to make it possible to use it with hetrodyne detection as well. Is there any difficulties in generalizing the milstein method and parameterize it in terms of d1 and d2 functions in this way?. I've also tried to use the smesolve_imp and smesolve_milstein with explicit=False in your original notebook, but I do not get resuls that agree with the other methods if I use these. Looking at the code for smesolve_imp, you do an inversion of some variant of the liouvillian to calculate Lsparse, what is the purpose of that calculation? And finally, I see you use expm in _smesolve_single_milstein_implicit: I think this should be avoided because it will be very computationally demanding for larger systems. If you are satisfied with how the new rhs functions work I'll merge the branch sme-rhs-restructuring into qutip master and then feel free to submit a pull request with your milstein rhs implementation.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/35#issuecomment-22088170
https://github.com/qutip/qutip/issues/35#issuecomment-22088170:697,Usability,simpl,simple,697,"Hi again. I've looked at your notebook and code in some more detail now, and I have attempted to make the change in how the rhs function behaves. I had not seen an example where the contributions form different stochastic collapse operators depended on each other before, but I now see the need for having this possibility from looking at your implementation of the Milstein implementation with multiple Wiener processes. I have created a new branch in qutip called sme-rhs-restructuring (see commit 0b4a1a7a6591aca27ff6cb71310cf73af7ae2d7f and https://github.com/qutip/qutip/tree/sme-rhs-restructuring) where I have experimented with rhs functions that internally loop through the A_ops list. In simple cases it only loops through the list and calculates a contribution for each stochastic collapse operator, but now it is also possible to do something more sophisticated, like in your milstein solver. I've edited your notebook so that it uses the standard (now modified) smesolve and your rhs functions for the milstein methods. http://nbviewer.ipython.org/6153688. Note that I still only use the rhs function for the contributions due to the stochastic collapse operators (both the deterministic and stochastic part), and it does not include the unitary part or the deterministic collapse operators (if those are given as well), so it is not quite what you suggested when proposing that the rhs should calculate \rho_{n+1}. Do you think this approach is reasonable, or do you see any problems with it?. Regarding your milstein implementation, it seems that it is only valid for homodyne detection, since your have hardcoded the d1 and d2 function into the rhs function. I've tried to separate the definition of the SDE (d1 and d2) from the implementation of the SDE integrator (rhs), and naively it seems like you could use the d1 and d2 functions in rhs_milstein to make it possible to use it with hetrodyne detection as well. Is there any difficulties in generalizing the milstein method and par",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/35#issuecomment-22088170
https://github.com/qutip/qutip/issues/35#issuecomment-22116628:54,Modifiability,flexible,flexible,54,"Hi,. I think your new implementation of API should be flexible enough to incorporate any explicit scheme. The reason I think it is useful to calculate \rho_{n+1} is to apply a semi implicit method. This is what is done by Lsparse. I tried two ways of doing it. First, one can calculate (1 - (L+d1)_dt)^(-1) and apply it to to the stochastic part of the equation. Another way is to calculate the deterministic evolution expm[(L+d1)_dt] and also apply it to the stochastic part. Both of these methods work for linear deterministic part like in the homodyne detection. I've got good results with these semi-implicit methods on a problem with a few qubits. Due to a big nonlinearity for some parameters regime it really helps to apply the true deterministic evolution (or its approximation). For another regime it is better to use explicit method. In principle it should be good to adjust degree of implicitness. Anyway I'm still looking into the problem and comparing different possibilities. I hope to produce a new notebook with tests soon. This Milstein realisation is compatible in principle with the heterodyne detection. I'm not sure it is possible to express everything in terms of d1 and d2 only. The point is that I need to use derivatives of d2. I don't really see a problem to have separate RHSs for homodyne, heterodyne and photocurrent detections. I'll think a bit more about unification of homodyne and heterodyne and then I'll submit a pull request. Regarding expm for large systems. We need to calculate it only once, it works for small systems so I think it is a good option to have.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/35#issuecomment-22116628
https://github.com/qutip/qutip/issues/35#issuecomment-22116628:555,Safety,detect,detection,555,"Hi,. I think your new implementation of API should be flexible enough to incorporate any explicit scheme. The reason I think it is useful to calculate \rho_{n+1} is to apply a semi implicit method. This is what is done by Lsparse. I tried two ways of doing it. First, one can calculate (1 - (L+d1)_dt)^(-1) and apply it to to the stochastic part of the equation. Another way is to calculate the deterministic evolution expm[(L+d1)_dt] and also apply it to the stochastic part. Both of these methods work for linear deterministic part like in the homodyne detection. I've got good results with these semi-implicit methods on a problem with a few qubits. Due to a big nonlinearity for some parameters regime it really helps to apply the true deterministic evolution (or its approximation). For another regime it is better to use explicit method. In principle it should be good to adjust degree of implicitness. Anyway I'm still looking into the problem and comparing different possibilities. I hope to produce a new notebook with tests soon. This Milstein realisation is compatible in principle with the heterodyne detection. I'm not sure it is possible to express everything in terms of d1 and d2 only. The point is that I need to use derivatives of d2. I don't really see a problem to have separate RHSs for homodyne, heterodyne and photocurrent detections. I'll think a bit more about unification of homodyne and heterodyne and then I'll submit a pull request. Regarding expm for large systems. We need to calculate it only once, it works for small systems so I think it is a good option to have.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/35#issuecomment-22116628
https://github.com/qutip/qutip/issues/35#issuecomment-22116628:1113,Safety,detect,detection,1113,"Hi,. I think your new implementation of API should be flexible enough to incorporate any explicit scheme. The reason I think it is useful to calculate \rho_{n+1} is to apply a semi implicit method. This is what is done by Lsparse. I tried two ways of doing it. First, one can calculate (1 - (L+d1)_dt)^(-1) and apply it to to the stochastic part of the equation. Another way is to calculate the deterministic evolution expm[(L+d1)_dt] and also apply it to the stochastic part. Both of these methods work for linear deterministic part like in the homodyne detection. I've got good results with these semi-implicit methods on a problem with a few qubits. Due to a big nonlinearity for some parameters regime it really helps to apply the true deterministic evolution (or its approximation). For another regime it is better to use explicit method. In principle it should be good to adjust degree of implicitness. Anyway I'm still looking into the problem and comparing different possibilities. I hope to produce a new notebook with tests soon. This Milstein realisation is compatible in principle with the heterodyne detection. I'm not sure it is possible to express everything in terms of d1 and d2 only. The point is that I need to use derivatives of d2. I don't really see a problem to have separate RHSs for homodyne, heterodyne and photocurrent detections. I'll think a bit more about unification of homodyne and heterodyne and then I'll submit a pull request. Regarding expm for large systems. We need to calculate it only once, it works for small systems so I think it is a good option to have.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/35#issuecomment-22116628
https://github.com/qutip/qutip/issues/35#issuecomment-22116628:1346,Safety,detect,detections,1346,"Hi,. I think your new implementation of API should be flexible enough to incorporate any explicit scheme. The reason I think it is useful to calculate \rho_{n+1} is to apply a semi implicit method. This is what is done by Lsparse. I tried two ways of doing it. First, one can calculate (1 - (L+d1)_dt)^(-1) and apply it to to the stochastic part of the equation. Another way is to calculate the deterministic evolution expm[(L+d1)_dt] and also apply it to the stochastic part. Both of these methods work for linear deterministic part like in the homodyne detection. I've got good results with these semi-implicit methods on a problem with a few qubits. Due to a big nonlinearity for some parameters regime it really helps to apply the true deterministic evolution (or its approximation). For another regime it is better to use explicit method. In principle it should be good to adjust degree of implicitness. Anyway I'm still looking into the problem and comparing different possibilities. I hope to produce a new notebook with tests soon. This Milstein realisation is compatible in principle with the heterodyne detection. I'm not sure it is possible to express everything in terms of d1 and d2 only. The point is that I need to use derivatives of d2. I don't really see a problem to have separate RHSs for homodyne, heterodyne and photocurrent detections. I'll think a bit more about unification of homodyne and heterodyne and then I'll submit a pull request. Regarding expm for large systems. We need to calculate it only once, it works for small systems so I think it is a good option to have.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/35#issuecomment-22116628
https://github.com/qutip/qutip/issues/35#issuecomment-22116628:1028,Testability,test,tests,1028,"Hi,. I think your new implementation of API should be flexible enough to incorporate any explicit scheme. The reason I think it is useful to calculate \rho_{n+1} is to apply a semi implicit method. This is what is done by Lsparse. I tried two ways of doing it. First, one can calculate (1 - (L+d1)_dt)^(-1) and apply it to to the stochastic part of the equation. Another way is to calculate the deterministic evolution expm[(L+d1)_dt] and also apply it to the stochastic part. Both of these methods work for linear deterministic part like in the homodyne detection. I've got good results with these semi-implicit methods on a problem with a few qubits. Due to a big nonlinearity for some parameters regime it really helps to apply the true deterministic evolution (or its approximation). For another regime it is better to use explicit method. In principle it should be good to adjust degree of implicitness. Anyway I'm still looking into the problem and comparing different possibilities. I hope to produce a new notebook with tests soon. This Milstein realisation is compatible in principle with the heterodyne detection. I'm not sure it is possible to express everything in terms of d1 and d2 only. The point is that I need to use derivatives of d2. I don't really see a problem to have separate RHSs for homodyne, heterodyne and photocurrent detections. I'll think a bit more about unification of homodyne and heterodyne and then I'll submit a pull request. Regarding expm for large systems. We need to calculate it only once, it works for small systems so I think it is a good option to have.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/35#issuecomment-22116628
https://github.com/qutip/qutip/issues/35#issuecomment-22156426:1418,Deployability,update,updated,1418,"c rhs function exposed to all that is a bit unnecessary and makes things more complicated than it needs to be. However, I think I found a reasonable compromise in that I created new _rhs_psi_deterministic and _rhs_rho_deterministic where the current deterministic contributions are calculated. These functions can now be called from a stochastic rhs implementation, like this. ```; dpsi_t = _rhs_psi_deterministic(H, psi_t, t, dt, args); ```. In this way the implementation of a stochastic rhs function is relatively isolated from how the deterministic part is calculated (which right now is trivial, but which could become more complex when time-dependent systems are implemented). However, it also gives all the flexibility needed in the rhs function, and these deterministic rhs functions do not need to be used if it is not suitable in a particular stochastic rhs implementation. . I've added the changes to the rhs behavior to the https://github.com/qutip/qutip/tree/sme-rhs-restructuring and updated the gist with the variant of your notebook. http://nbviewer.ipython.org/6153688. Note that a few other things, like the rhs function signature, had to change in the process. I hope that this updated API will be flexible enough to let you implement implicit solver. Regards rhs implementation and d1,d2 function: Yes, I understand that not all possible rhs schemes might be compatible with the parameterization with d1 and d2 functions, but when it is possible it has the great advantage that the user do not need to worry about how the rhs is implemented, only define the SDE in terms of d1 and d2, and then possibly select a rhs solver using the solver argument to smesolve. This will not work in general for solvers like the milstein scheme, since it requires an analytical derivative (unless it can be evaluated numerically?), and in those cases it would be sufficient to implement problem specific rhs functions (like rhs_rho_milstein_homodyne etc). Regarding the use of expm: OK, I agree t",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/35#issuecomment-22156426
https://github.com/qutip/qutip/issues/35#issuecomment-22156426:1617,Deployability,update,updated,1617,"inistic where the current deterministic contributions are calculated. These functions can now be called from a stochastic rhs implementation, like this. ```; dpsi_t = _rhs_psi_deterministic(H, psi_t, t, dt, args); ```. In this way the implementation of a stochastic rhs function is relatively isolated from how the deterministic part is calculated (which right now is trivial, but which could become more complex when time-dependent systems are implemented). However, it also gives all the flexibility needed in the rhs function, and these deterministic rhs functions do not need to be used if it is not suitable in a particular stochastic rhs implementation. . I've added the changes to the rhs behavior to the https://github.com/qutip/qutip/tree/sme-rhs-restructuring and updated the gist with the variant of your notebook. http://nbviewer.ipython.org/6153688. Note that a few other things, like the rhs function signature, had to change in the process. I hope that this updated API will be flexible enough to let you implement implicit solver. Regards rhs implementation and d1,d2 function: Yes, I understand that not all possible rhs schemes might be compatible with the parameterization with d1 and d2 functions, but when it is possible it has the great advantage that the user do not need to worry about how the rhs is implemented, only define the SDE in terms of d1 and d2, and then possibly select a rhs solver using the solver argument to smesolve. This will not work in general for solvers like the milstein scheme, since it requires an analytical derivative (unless it can be evaluated numerically?), and in those cases it would be sufficient to implement problem specific rhs functions (like rhs_rho_milstein_homodyne etc). Regarding the use of expm: OK, I agree that it could be a nice method to have to be used on smallish system. However, since we are stepping with a small timestep dt, shouldn't it be sufficient to use an expansion of of expm as usual? Perhaps a second-order expansio",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/35#issuecomment-22156426
https://github.com/qutip/qutip/issues/35#issuecomment-22156426:354,Integrability,depend,dependent,354,"Hi. OK, I see. For implicit SDE solvers there is and advantage in having the rhs function calculating the state at the next time-step. I hesitated doing it like that, because I didn't want to mix up the definition of the stochastic SDE contribution with the deterministic part, which sometime in the future should use qutip's existing framework for time-dependent hamiltonian and collapse operators. Having the stochastic rhs function exposed to all that is a bit unnecessary and makes things more complicated than it needs to be. However, I think I found a reasonable compromise in that I created new _rhs_psi_deterministic and _rhs_rho_deterministic where the current deterministic contributions are calculated. These functions can now be called from a stochastic rhs implementation, like this. ```; dpsi_t = _rhs_psi_deterministic(H, psi_t, t, dt, args); ```. In this way the implementation of a stochastic rhs function is relatively isolated from how the deterministic part is calculated (which right now is trivial, but which could become more complex when time-dependent systems are implemented). However, it also gives all the flexibility needed in the rhs function, and these deterministic rhs functions do not need to be used if it is not suitable in a particular stochastic rhs implementation. . I've added the changes to the rhs behavior to the https://github.com/qutip/qutip/tree/sme-rhs-restructuring and updated the gist with the variant of your notebook. http://nbviewer.ipython.org/6153688. Note that a few other things, like the rhs function signature, had to change in the process. I hope that this updated API will be flexible enough to let you implement implicit solver. Regards rhs implementation and d1,d2 function: Yes, I understand that not all possible rhs schemes might be compatible with the parameterization with d1 and d2 functions, but when it is possible it has the great advantage that the user do not need to worry about how the rhs is implemented, only define the SDE",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/35#issuecomment-22156426
https://github.com/qutip/qutip/issues/35#issuecomment-22156426:1067,Integrability,depend,dependent,1067,"Hi. OK, I see. For implicit SDE solvers there is and advantage in having the rhs function calculating the state at the next time-step. I hesitated doing it like that, because I didn't want to mix up the definition of the stochastic SDE contribution with the deterministic part, which sometime in the future should use qutip's existing framework for time-dependent hamiltonian and collapse operators. Having the stochastic rhs function exposed to all that is a bit unnecessary and makes things more complicated than it needs to be. However, I think I found a reasonable compromise in that I created new _rhs_psi_deterministic and _rhs_rho_deterministic where the current deterministic contributions are calculated. These functions can now be called from a stochastic rhs implementation, like this. ```; dpsi_t = _rhs_psi_deterministic(H, psi_t, t, dt, args); ```. In this way the implementation of a stochastic rhs function is relatively isolated from how the deterministic part is calculated (which right now is trivial, but which could become more complex when time-dependent systems are implemented). However, it also gives all the flexibility needed in the rhs function, and these deterministic rhs functions do not need to be used if it is not suitable in a particular stochastic rhs implementation. . I've added the changes to the rhs behavior to the https://github.com/qutip/qutip/tree/sme-rhs-restructuring and updated the gist with the variant of your notebook. http://nbviewer.ipython.org/6153688. Note that a few other things, like the rhs function signature, had to change in the process. I hope that this updated API will be flexible enough to let you implement implicit solver. Regards rhs implementation and d1,d2 function: Yes, I understand that not all possible rhs schemes might be compatible with the parameterization with d1 and d2 functions, but when it is possible it has the great advantage that the user do not need to worry about how the rhs is implemented, only define the SDE",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/35#issuecomment-22156426
https://github.com/qutip/qutip/issues/35#issuecomment-22156426:1637,Modifiability,flexible,flexible,1637,"inistic where the current deterministic contributions are calculated. These functions can now be called from a stochastic rhs implementation, like this. ```; dpsi_t = _rhs_psi_deterministic(H, psi_t, t, dt, args); ```. In this way the implementation of a stochastic rhs function is relatively isolated from how the deterministic part is calculated (which right now is trivial, but which could become more complex when time-dependent systems are implemented). However, it also gives all the flexibility needed in the rhs function, and these deterministic rhs functions do not need to be used if it is not suitable in a particular stochastic rhs implementation. . I've added the changes to the rhs behavior to the https://github.com/qutip/qutip/tree/sme-rhs-restructuring and updated the gist with the variant of your notebook. http://nbviewer.ipython.org/6153688. Note that a few other things, like the rhs function signature, had to change in the process. I hope that this updated API will be flexible enough to let you implement implicit solver. Regards rhs implementation and d1,d2 function: Yes, I understand that not all possible rhs schemes might be compatible with the parameterization with d1 and d2 functions, but when it is possible it has the great advantage that the user do not need to worry about how the rhs is implemented, only define the SDE in terms of d1 and d2, and then possibly select a rhs solver using the solver argument to smesolve. This will not work in general for solvers like the milstein scheme, since it requires an analytical derivative (unless it can be evaluated numerically?), and in those cases it would be sufficient to implement problem specific rhs functions (like rhs_rho_milstein_homodyne etc). Regarding the use of expm: OK, I agree that it could be a nice method to have to be used on smallish system. However, since we are stepping with a small timestep dt, shouldn't it be sufficient to use an expansion of of expm as usual? Perhaps a second-order expansio",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/35#issuecomment-22156426
https://github.com/qutip/qutip/issues/35#issuecomment-22156426:1819,Modifiability,parameteriz,parameterization,1819,"y the implementation of a stochastic rhs function is relatively isolated from how the deterministic part is calculated (which right now is trivial, but which could become more complex when time-dependent systems are implemented). However, it also gives all the flexibility needed in the rhs function, and these deterministic rhs functions do not need to be used if it is not suitable in a particular stochastic rhs implementation. . I've added the changes to the rhs behavior to the https://github.com/qutip/qutip/tree/sme-rhs-restructuring and updated the gist with the variant of your notebook. http://nbviewer.ipython.org/6153688. Note that a few other things, like the rhs function signature, had to change in the process. I hope that this updated API will be flexible enough to let you implement implicit solver. Regards rhs implementation and d1,d2 function: Yes, I understand that not all possible rhs schemes might be compatible with the parameterization with d1 and d2 functions, but when it is possible it has the great advantage that the user do not need to worry about how the rhs is implemented, only define the SDE in terms of d1 and d2, and then possibly select a rhs solver using the solver argument to smesolve. This will not work in general for solvers like the milstein scheme, since it requires an analytical derivative (unless it can be evaluated numerically?), and in those cases it would be sufficient to implement problem specific rhs functions (like rhs_rho_milstein_homodyne etc). Regarding the use of expm: OK, I agree that it could be a nice method to have to be used on smallish system. However, since we are stepping with a small timestep dt, shouldn't it be sufficient to use an expansion of of expm as usual? Perhaps a second-order expansion would do if the first order isn't sufficient. Doing a full expm is fine too I guess, but if it can be avoided then the same method could be used on larger systems too. . Looking forward to seeing your new notebooks and the PR!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/35#issuecomment-22156426
https://github.com/qutip/qutip/issues/35#issuecomment-22156426:2749,Safety,avoid,avoided,2749,"y the implementation of a stochastic rhs function is relatively isolated from how the deterministic part is calculated (which right now is trivial, but which could become more complex when time-dependent systems are implemented). However, it also gives all the flexibility needed in the rhs function, and these deterministic rhs functions do not need to be used if it is not suitable in a particular stochastic rhs implementation. . I've added the changes to the rhs behavior to the https://github.com/qutip/qutip/tree/sme-rhs-restructuring and updated the gist with the variant of your notebook. http://nbviewer.ipython.org/6153688. Note that a few other things, like the rhs function signature, had to change in the process. I hope that this updated API will be flexible enough to let you implement implicit solver. Regards rhs implementation and d1,d2 function: Yes, I understand that not all possible rhs schemes might be compatible with the parameterization with d1 and d2 functions, but when it is possible it has the great advantage that the user do not need to worry about how the rhs is implemented, only define the SDE in terms of d1 and d2, and then possibly select a rhs solver using the solver argument to smesolve. This will not work in general for solvers like the milstein scheme, since it requires an analytical derivative (unless it can be evaluated numerically?), and in those cases it would be sufficient to implement problem specific rhs functions (like rhs_rho_milstein_homodyne etc). Regarding the use of expm: OK, I agree that it could be a nice method to have to be used on smallish system. However, since we are stepping with a small timestep dt, shouldn't it be sufficient to use an expansion of of expm as usual? Perhaps a second-order expansion would do if the first order isn't sufficient. Doing a full expm is fine too I guess, but if it can be avoided then the same method could be used on larger systems too. . Looking forward to seeing your new notebooks and the PR!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/35#issuecomment-22156426
https://github.com/qutip/qutip/issues/35#issuecomment-22156426:435,Security,expose,exposed,435,"Hi. OK, I see. For implicit SDE solvers there is and advantage in having the rhs function calculating the state at the next time-step. I hesitated doing it like that, because I didn't want to mix up the definition of the stochastic SDE contribution with the deterministic part, which sometime in the future should use qutip's existing framework for time-dependent hamiltonian and collapse operators. Having the stochastic rhs function exposed to all that is a bit unnecessary and makes things more complicated than it needs to be. However, I think I found a reasonable compromise in that I created new _rhs_psi_deterministic and _rhs_rho_deterministic where the current deterministic contributions are calculated. These functions can now be called from a stochastic rhs implementation, like this. ```; dpsi_t = _rhs_psi_deterministic(H, psi_t, t, dt, args); ```. In this way the implementation of a stochastic rhs function is relatively isolated from how the deterministic part is calculated (which right now is trivial, but which could become more complex when time-dependent systems are implemented). However, it also gives all the flexibility needed in the rhs function, and these deterministic rhs functions do not need to be used if it is not suitable in a particular stochastic rhs implementation. . I've added the changes to the rhs behavior to the https://github.com/qutip/qutip/tree/sme-rhs-restructuring and updated the gist with the variant of your notebook. http://nbviewer.ipython.org/6153688. Note that a few other things, like the rhs function signature, had to change in the process. I hope that this updated API will be flexible enough to let you implement implicit solver. Regards rhs implementation and d1,d2 function: Yes, I understand that not all possible rhs schemes might be compatible with the parameterization with d1 and d2 functions, but when it is possible it has the great advantage that the user do not need to worry about how the rhs is implemented, only define the SDE",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/35#issuecomment-22156426
https://github.com/qutip/qutip/issues/35#issuecomment-22238086:57,Safety,detect,detection,57,"Hi Robert,. I was thinking about heterodyne and homodyne detection unification. It seems to me that the way how the heterodyne is done now in QuTip is a bit overcomplicated. Why don't we just produce two jump operators $s/sqrt2$ and $-is/sqrt2$ out of one heterodyne $s$ and run the homodyne scheme with these two operators. The Milstein will work automatically. Do I miss something?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/35#issuecomment-22238086
https://github.com/qutip/qutip/issues/35#issuecomment-22543416:1163,Modifiability,flexible,flexible,1163,"cy, like you suggest. For the Milstein solver it might be the best, or at least the quickest, way to implement heterodyne, but I don't really agree that the current method is overcomplicated. It is in fact basically the same as the method you suggest, so I don't see that either would be more complicated or simpler than the other. The only issue is whether the two stochastic increments are divided up in several stochastic collapse operators or if the d2 function internally takes care of the both stochastic increments for a given stochastic collapse operator. The complexity is just shifted from the d2 function to somewhere else, which in general doesn't simplify anything. However, since the milstein solver you submitted is written so that it only support one increment per collapse operators, then there might be a real advantage of splitting the heterodyne process into two homodyne processes. . I've tried to make the qutip stochastic solver API as general as I could (and it is still a work in process), so that it will be as flexible as possible for implementing custom types of SMEs. Having support for multiple stochastic increments per collapse operators seems to be useful in certain applications. Although such SMEs could probably always be rewritten as multiple collapse operators with single stochastic increments, it might not always be the most natural way to define the SME. The heterodyne detection is one example of this, and it can be formulated in both ways, but I want the qutip SME API to work with both methods (at least with the basic euler solver, not necessarily with every solver we implement). However, that doesn't mean that the implementation of heterodyne for a particular solver has to use one way or the other. We should just document which solvers support multiple increments per operators and which solvers don't. So if it is easier to get the milstein solver working for heterodyne by simulating two homodyne detections, then let's go ahead use that method f",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/35#issuecomment-22543416
https://github.com/qutip/qutip/issues/35#issuecomment-22543416:69,Safety,detect,detection,69,"Hi Vutshi. Yes, it is perfectly possible to implement the heterodyne detection using two homodyne detections with 50% efficiency, like you suggest. For the Milstein solver it might be the best, or at least the quickest, way to implement heterodyne, but I don't really agree that the current method is overcomplicated. It is in fact basically the same as the method you suggest, so I don't see that either would be more complicated or simpler than the other. The only issue is whether the two stochastic increments are divided up in several stochastic collapse operators or if the d2 function internally takes care of the both stochastic increments for a given stochastic collapse operator. The complexity is just shifted from the d2 function to somewhere else, which in general doesn't simplify anything. However, since the milstein solver you submitted is written so that it only support one increment per collapse operators, then there might be a real advantage of splitting the heterodyne process into two homodyne processes. . I've tried to make the qutip stochastic solver API as general as I could (and it is still a work in process), so that it will be as flexible as possible for implementing custom types of SMEs. Having support for multiple stochastic increments per collapse operators seems to be useful in certain applications. Although such SMEs could probably always be rewritten as multiple collapse operators with single stochastic increments, it might not always be the most natural way to define the SME. The heterodyne detection is one example of this, and it can be formulated in both ways, but I want the qutip SME API to work with both methods (at least with the basic euler solver, not necessarily with every solver we implement). However, that doesn't mean that the implementation of heterodyne for a particular solver has to use one way or the other. We should just document which solvers support multiple increments per operators and which solvers don't. So if it is easier t",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/35#issuecomment-22543416
https://github.com/qutip/qutip/issues/35#issuecomment-22543416:98,Safety,detect,detections,98,"Hi Vutshi. Yes, it is perfectly possible to implement the heterodyne detection using two homodyne detections with 50% efficiency, like you suggest. For the Milstein solver it might be the best, or at least the quickest, way to implement heterodyne, but I don't really agree that the current method is overcomplicated. It is in fact basically the same as the method you suggest, so I don't see that either would be more complicated or simpler than the other. The only issue is whether the two stochastic increments are divided up in several stochastic collapse operators or if the d2 function internally takes care of the both stochastic increments for a given stochastic collapse operator. The complexity is just shifted from the d2 function to somewhere else, which in general doesn't simplify anything. However, since the milstein solver you submitted is written so that it only support one increment per collapse operators, then there might be a real advantage of splitting the heterodyne process into two homodyne processes. . I've tried to make the qutip stochastic solver API as general as I could (and it is still a work in process), so that it will be as flexible as possible for implementing custom types of SMEs. Having support for multiple stochastic increments per collapse operators seems to be useful in certain applications. Although such SMEs could probably always be rewritten as multiple collapse operators with single stochastic increments, it might not always be the most natural way to define the SME. The heterodyne detection is one example of this, and it can be formulated in both ways, but I want the qutip SME API to work with both methods (at least with the basic euler solver, not necessarily with every solver we implement). However, that doesn't mean that the implementation of heterodyne for a particular solver has to use one way or the other. We should just document which solvers support multiple increments per operators and which solvers don't. So if it is easier t",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/35#issuecomment-22543416
https://github.com/qutip/qutip/issues/35#issuecomment-22543416:1538,Safety,detect,detection,1538,"lement heterodyne, but I don't really agree that the current method is overcomplicated. It is in fact basically the same as the method you suggest, so I don't see that either would be more complicated or simpler than the other. The only issue is whether the two stochastic increments are divided up in several stochastic collapse operators or if the d2 function internally takes care of the both stochastic increments for a given stochastic collapse operator. The complexity is just shifted from the d2 function to somewhere else, which in general doesn't simplify anything. However, since the milstein solver you submitted is written so that it only support one increment per collapse operators, then there might be a real advantage of splitting the heterodyne process into two homodyne processes. . I've tried to make the qutip stochastic solver API as general as I could (and it is still a work in process), so that it will be as flexible as possible for implementing custom types of SMEs. Having support for multiple stochastic increments per collapse operators seems to be useful in certain applications. Although such SMEs could probably always be rewritten as multiple collapse operators with single stochastic increments, it might not always be the most natural way to define the SME. The heterodyne detection is one example of this, and it can be formulated in both ways, but I want the qutip SME API to work with both methods (at least with the basic euler solver, not necessarily with every solver we implement). However, that doesn't mean that the implementation of heterodyne for a particular solver has to use one way or the other. We should just document which solvers support multiple increments per operators and which solvers don't. So if it is easier to get the milstein solver working for heterodyne by simulating two homodyne detections, then let's go ahead use that method for that solver. The required preprocessing can be done in the smesolve function, or something like that.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/35#issuecomment-22543416
https://github.com/qutip/qutip/issues/35#issuecomment-22543416:2077,Safety,detect,detections,2077,"lement heterodyne, but I don't really agree that the current method is overcomplicated. It is in fact basically the same as the method you suggest, so I don't see that either would be more complicated or simpler than the other. The only issue is whether the two stochastic increments are divided up in several stochastic collapse operators or if the d2 function internally takes care of the both stochastic increments for a given stochastic collapse operator. The complexity is just shifted from the d2 function to somewhere else, which in general doesn't simplify anything. However, since the milstein solver you submitted is written so that it only support one increment per collapse operators, then there might be a real advantage of splitting the heterodyne process into two homodyne processes. . I've tried to make the qutip stochastic solver API as general as I could (and it is still a work in process), so that it will be as flexible as possible for implementing custom types of SMEs. Having support for multiple stochastic increments per collapse operators seems to be useful in certain applications. Although such SMEs could probably always be rewritten as multiple collapse operators with single stochastic increments, it might not always be the most natural way to define the SME. The heterodyne detection is one example of this, and it can be formulated in both ways, but I want the qutip SME API to work with both methods (at least with the basic euler solver, not necessarily with every solver we implement). However, that doesn't mean that the implementation of heterodyne for a particular solver has to use one way or the other. We should just document which solvers support multiple increments per operators and which solvers don't. So if it is easier to get the milstein solver working for heterodyne by simulating two homodyne detections, then let's go ahead use that method for that solver. The required preprocessing can be done in the smesolve function, or something like that.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/35#issuecomment-22543416
https://github.com/qutip/qutip/issues/35#issuecomment-22543416:434,Usability,simpl,simpler,434,"Hi Vutshi. Yes, it is perfectly possible to implement the heterodyne detection using two homodyne detections with 50% efficiency, like you suggest. For the Milstein solver it might be the best, or at least the quickest, way to implement heterodyne, but I don't really agree that the current method is overcomplicated. It is in fact basically the same as the method you suggest, so I don't see that either would be more complicated or simpler than the other. The only issue is whether the two stochastic increments are divided up in several stochastic collapse operators or if the d2 function internally takes care of the both stochastic increments for a given stochastic collapse operator. The complexity is just shifted from the d2 function to somewhere else, which in general doesn't simplify anything. However, since the milstein solver you submitted is written so that it only support one increment per collapse operators, then there might be a real advantage of splitting the heterodyne process into two homodyne processes. . I've tried to make the qutip stochastic solver API as general as I could (and it is still a work in process), so that it will be as flexible as possible for implementing custom types of SMEs. Having support for multiple stochastic increments per collapse operators seems to be useful in certain applications. Although such SMEs could probably always be rewritten as multiple collapse operators with single stochastic increments, it might not always be the most natural way to define the SME. The heterodyne detection is one example of this, and it can be formulated in both ways, but I want the qutip SME API to work with both methods (at least with the basic euler solver, not necessarily with every solver we implement). However, that doesn't mean that the implementation of heterodyne for a particular solver has to use one way or the other. We should just document which solvers support multiple increments per operators and which solvers don't. So if it is easier t",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/35#issuecomment-22543416
https://github.com/qutip/qutip/issues/35#issuecomment-22543416:786,Usability,simpl,simplify,786,"Hi Vutshi. Yes, it is perfectly possible to implement the heterodyne detection using two homodyne detections with 50% efficiency, like you suggest. For the Milstein solver it might be the best, or at least the quickest, way to implement heterodyne, but I don't really agree that the current method is overcomplicated. It is in fact basically the same as the method you suggest, so I don't see that either would be more complicated or simpler than the other. The only issue is whether the two stochastic increments are divided up in several stochastic collapse operators or if the d2 function internally takes care of the both stochastic increments for a given stochastic collapse operator. The complexity is just shifted from the d2 function to somewhere else, which in general doesn't simplify anything. However, since the milstein solver you submitted is written so that it only support one increment per collapse operators, then there might be a real advantage of splitting the heterodyne process into two homodyne processes. . I've tried to make the qutip stochastic solver API as general as I could (and it is still a work in process), so that it will be as flexible as possible for implementing custom types of SMEs. Having support for multiple stochastic increments per collapse operators seems to be useful in certain applications. Although such SMEs could probably always be rewritten as multiple collapse operators with single stochastic increments, it might not always be the most natural way to define the SME. The heterodyne detection is one example of this, and it can be formulated in both ways, but I want the qutip SME API to work with both methods (at least with the basic euler solver, not necessarily with every solver we implement). However, that doesn't mean that the implementation of heterodyne for a particular solver has to use one way or the other. We should just document which solvers support multiple increments per operators and which solvers don't. So if it is easier t",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/35#issuecomment-22543416
https://github.com/qutip/qutip/issues/37#issuecomment-22224680:558,Deployability,release,release,558,"Hi Arne. Thanks for the bug report. Yes, you're right, it is the change in default value of the average_states (used to be called mc_avg) that is the course of the failing tests. And it could break backwards compatibility so perhaps it should be reverted. However, if average_states defaults to True it breaks backwards compatibility with the stochastic master equation solvers (which did not use this flag before, and had a different default behavior). However, since the stochastic ME and SE solvers has not yet been an official part of the qutip API in a release, perhaps priority should be to keep the mcsolve backward compatible (although I think it makes more sense not to take an average over the trajectories by default).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/37#issuecomment-22224680
https://github.com/qutip/qutip/issues/37#issuecomment-22224680:172,Testability,test,tests,172,"Hi Arne. Thanks for the bug report. Yes, you're right, it is the change in default value of the average_states (used to be called mc_avg) that is the course of the failing tests. And it could break backwards compatibility so perhaps it should be reverted. However, if average_states defaults to True it breaks backwards compatibility with the stochastic master equation solvers (which did not use this flag before, and had a different default behavior). However, since the stochastic ME and SE solvers has not yet been an official part of the qutip API in a release, perhaps priority should be to keep the mcsolve backward compatible (although I think it makes more sense not to take an average over the trajectories by default).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/37#issuecomment-22224680
https://github.com/qutip/qutip/pull/38#issuecomment-22305995:23,Usability,intuit,intuitive,23,Yes I think it is more intuitive to interpret the given vectors as vectors with cartesian coordinates. I just modified Bloch3d to behave in the same way.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/38#issuecomment-22305995
https://github.com/qutip/qutip/issues/39#issuecomment-22436060:388,Availability,error,error,388,"crap . ---. Paul D. Nation; Assistant Professor; Korea University; Department of Physics; Anam-dong 5, Seongbuk-gu; Seoul 136-713, South Korea; Email: pnation@korea.ac.kr (mailto:pnation@korea.ac.kr); Phone: +82-02-3290-3092. ## Web: nqdl.korea.ac.kr (http://nqdl.korea.ac.kr/). On Saturday, August 10, 2013 at 5:03 PM, Robert Johansson wrote:. > qutip import now fail with the following error message; > /usr/local/lib/python3.3/dist-packages/qutip/cyQ/**init**.py in <module>() 1 from qutip.cyQ.spmatfuncs import \* ----> 2 from qutip.cyQ.blas_funcs import \* ImportError: /usr/local/lib/python3.3/dist-packages/qutip/cyQ/blas_funcs.cpython-33m.so: undefined symbol: dznrm2_ ; > ; > —; > Reply to this email directly or view it on GitHub (https://github.com/qutip/qutip/issues/39).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/39#issuecomment-22436060
https://github.com/qutip/qutip/issues/39#issuecomment-22436060:394,Integrability,message,message,394,"crap . ---. Paul D. Nation; Assistant Professor; Korea University; Department of Physics; Anam-dong 5, Seongbuk-gu; Seoul 136-713, South Korea; Email: pnation@korea.ac.kr (mailto:pnation@korea.ac.kr); Phone: +82-02-3290-3092. ## Web: nqdl.korea.ac.kr (http://nqdl.korea.ac.kr/). On Saturday, August 10, 2013 at 5:03 PM, Robert Johansson wrote:. > qutip import now fail with the following error message; > /usr/local/lib/python3.3/dist-packages/qutip/cyQ/**init**.py in <module>() 1 from qutip.cyQ.spmatfuncs import \* ----> 2 from qutip.cyQ.blas_funcs import \* ImportError: /usr/local/lib/python3.3/dist-packages/qutip/cyQ/blas_funcs.cpython-33m.so: undefined symbol: dznrm2_ ; > ; > —; > Reply to this email directly or view it on GitHub (https://github.com/qutip/qutip/issues/39).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/39#issuecomment-22436060
https://github.com/qutip/qutip/issues/39#issuecomment-22436095:116,Integrability,wrap,wrapping,116,"blas is cool but it is a mess.. different libraries might to the underscores and stuff differently, in c to fortran wrapping etc, but i'm guessing the header files should sort this out if used properly. it would be really nice to get this to work. nice speedup!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/39#issuecomment-22436095
https://github.com/qutip/qutip/issues/39#issuecomment-22436635:109,Performance,perform,performance,109,Now with a8b79f7bd2ad58713e9ed7b104e204b155fcdc20 it works again on my machine. Is there a big difference in performance between accessing the blas stuff through scipy instead of directly from a cython module? If not it would be good to let the scipy ppl worry about the linking to blas and not have to deal with that in qutip.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/39#issuecomment-22436635
https://github.com/qutip/qutip/issues/39#issuecomment-22436635:129,Security,access,accessing,129,Now with a8b79f7bd2ad58713e9ed7b104e204b155fcdc20 it works again on my machine. Is there a big difference in performance between accessing the blas stuff through scipy instead of directly from a cython module? If not it would be good to let the scipy ppl worry about the linking to blas and not have to deal with that in qutip.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/39#issuecomment-22436635
https://github.com/qutip/qutip/issues/39#issuecomment-22436693:494,Performance,perform,performance,494,"I guess not. But my original motivation was to try to do the mcsolver in; cython. Perhaps the scipy blas calls work just as good in cython. I; already ran into these blas difficulties on the mac. You would think the; calling structure would be uniform by now.; On Aug 10, 2013 6:08 PM, ""Robert Johansson"" notifications@github.com; wrote:. > Now with a8b79f7https://github.com/qutip/qutip/commit/a8b79f7bd2ad58713e9ed7b104e204b155fcdc20it works again on my machine. Is there a big difference in performance; > between accessing the blas stuff through scipy instead of directly from a; > cython module? If not it would be good to let the scipy ppl worry about the; > linking to blas and not have to deal with that in qutip.; > ; > —; > Reply to this email directly or view it on GitHubhttps://github.com/qutip/qutip/issues/39#issuecomment-22436635; > .",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/39#issuecomment-22436693
https://github.com/qutip/qutip/issues/39#issuecomment-22436693:517,Security,access,accessing,517,"I guess not. But my original motivation was to try to do the mcsolver in; cython. Perhaps the scipy blas calls work just as good in cython. I; already ran into these blas difficulties on the mac. You would think the; calling structure would be uniform by now.; On Aug 10, 2013 6:08 PM, ""Robert Johansson"" notifications@github.com; wrote:. > Now with a8b79f7https://github.com/qutip/qutip/commit/a8b79f7bd2ad58713e9ed7b104e204b155fcdc20it works again on my machine. Is there a big difference in performance; > between accessing the blas stuff through scipy instead of directly from a; > cython module? If not it would be good to let the scipy ppl worry about the; > linking to blas and not have to deal with that in qutip.; > ; > —; > Reply to this email directly or view it on GitHubhttps://github.com/qutip/qutip/issues/39#issuecomment-22436635; > .",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/39#issuecomment-22436693
https://github.com/qutip/qutip/issues/39#issuecomment-48557119:100,Security,access,access,100,Do you have any plans to continue working on `qutip/cy/blas_funcs.pyx` or would it be sufficient to access blas through `scipy.linalg.blas.get_blas_funcs`? In that case I think `qutip/cy/blas_funcs.pyx` should be removed and this issue could be closed.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/39#issuecomment-48557119
https://github.com/qutip/qutip/issues/39#issuecomment-48557254:317,Security,access,access,317,"I think we can get rid of it for the moment. It might be useful to call these via Cython at some point, but for now this can be removed. On Jul 10, 2014, at 10:55 AM, Robert Johansson notifications@github.com wrote:. > Do you have any plans to continue working on qutip/cy/blas_funcs.pyx or would it be sufficient to access blas through scipy.linalg.blas.get_blas_funcs? In that case I think qutip/cy/blas_funcs.pyx should be removed and this issue could be closed.; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/39#issuecomment-48557254
https://github.com/qutip/qutip/pull/41#issuecomment-22757904:40,Testability,test,test,40,Is there already a function in qutip to test for commuting operators?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/41#issuecomment-22757904
https://github.com/qutip/qutip/pull/41#issuecomment-22768490:249,Performance,perform,performs,249,"Not directly testing for commuting operators, but Qobj implements **eq** and **ne** which means that you can test for commuting operators simply by doing. ```; if a * b == b * a:; # a and b commutes; ```. Maybe it could be useful with function that performs this test for two Qobj instances, but currently we do not have such a function. The PR looks good so I'll merge it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/41#issuecomment-22768490
https://github.com/qutip/qutip/pull/41#issuecomment-22768490:13,Testability,test,testing,13,"Not directly testing for commuting operators, but Qobj implements **eq** and **ne** which means that you can test for commuting operators simply by doing. ```; if a * b == b * a:; # a and b commutes; ```. Maybe it could be useful with function that performs this test for two Qobj instances, but currently we do not have such a function. The PR looks good so I'll merge it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/41#issuecomment-22768490
https://github.com/qutip/qutip/pull/41#issuecomment-22768490:109,Testability,test,test,109,"Not directly testing for commuting operators, but Qobj implements **eq** and **ne** which means that you can test for commuting operators simply by doing. ```; if a * b == b * a:; # a and b commutes; ```. Maybe it could be useful with function that performs this test for two Qobj instances, but currently we do not have such a function. The PR looks good so I'll merge it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/41#issuecomment-22768490
https://github.com/qutip/qutip/pull/41#issuecomment-22768490:263,Testability,test,test,263,"Not directly testing for commuting operators, but Qobj implements **eq** and **ne** which means that you can test for commuting operators simply by doing. ```; if a * b == b * a:; # a and b commutes; ```. Maybe it could be useful with function that performs this test for two Qobj instances, but currently we do not have such a function. The PR looks good so I'll merge it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/41#issuecomment-22768490
https://github.com/qutip/qutip/pull/41#issuecomment-22768490:138,Usability,simpl,simply,138,"Not directly testing for commuting operators, but Qobj implements **eq** and **ne** which means that you can test for commuting operators simply by doing. ```; if a * b == b * a:; # a and b commutes; ```. Maybe it could be useful with function that performs this test for two Qobj instances, but currently we do not have such a function. The PR looks good so I'll merge it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/41#issuecomment-22768490
https://github.com/qutip/qutip/pull/44#issuecomment-22769605:225,Deployability,update,updated,225,"Thanks. Looking good so I'm merging. PS. You do not need to create a new PR when updating a file in a PR. Just commit and push more changes into the branch that you made the pull request from and the PR will be automatically updated. This PR #44 could therefore have a continuation of PR #43. Not a big deal, JFYI.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/44#issuecomment-22769605
https://github.com/qutip/qutip/issues/46#issuecomment-23545094:131,Deployability,install,install,131,Hi. Thanks for reporting this problem. I'm not sure what the reason for this behavior might be. Do you see the same thing when you install with and without the f90 solver? Are you running the tests in the python interpreter or from IPython?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/46#issuecomment-23545094
https://github.com/qutip/qutip/issues/46#issuecomment-23545094:192,Testability,test,tests,192,Hi. Thanks for reporting this problem. I'm not sure what the reason for this behavior might be. Do you see the same thing when you install with and without the f90 solver? Are you running the tests in the python interpreter or from IPython?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/46#issuecomment-23545094
https://github.com/qutip/qutip/issues/46#issuecomment-25209786:233,Deployability,install,installing,233,"This problem appears to have resolved itself. Testing now runs correctly. The only change to the system has been keeping SciPy packages up to date using the Enthought Canopy package manager. Originally the problem only occurred when installing with the f90 solver, installing without the f90 solver everything ran normally. I was using IPython to run the tests. Testing now runs successfully from IPython (qtconsole and notebook) and from the python interpreter.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/46#issuecomment-25209786
https://github.com/qutip/qutip/issues/46#issuecomment-25209786:265,Deployability,install,installing,265,"This problem appears to have resolved itself. Testing now runs correctly. The only change to the system has been keeping SciPy packages up to date using the Enthought Canopy package manager. Originally the problem only occurred when installing with the f90 solver, installing without the f90 solver everything ran normally. I was using IPython to run the tests. Testing now runs successfully from IPython (qtconsole and notebook) and from the python interpreter.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/46#issuecomment-25209786
https://github.com/qutip/qutip/issues/46#issuecomment-25209786:46,Testability,Test,Testing,46,"This problem appears to have resolved itself. Testing now runs correctly. The only change to the system has been keeping SciPy packages up to date using the Enthought Canopy package manager. Originally the problem only occurred when installing with the f90 solver, installing without the f90 solver everything ran normally. I was using IPython to run the tests. Testing now runs successfully from IPython (qtconsole and notebook) and from the python interpreter.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/46#issuecomment-25209786
https://github.com/qutip/qutip/issues/46#issuecomment-25209786:355,Testability,test,tests,355,"This problem appears to have resolved itself. Testing now runs correctly. The only change to the system has been keeping SciPy packages up to date using the Enthought Canopy package manager. Originally the problem only occurred when installing with the f90 solver, installing without the f90 solver everything ran normally. I was using IPython to run the tests. Testing now runs successfully from IPython (qtconsole and notebook) and from the python interpreter.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/46#issuecomment-25209786
https://github.com/qutip/qutip/issues/46#issuecomment-25209786:362,Testability,Test,Testing,362,"This problem appears to have resolved itself. Testing now runs correctly. The only change to the system has been keeping SciPy packages up to date using the Enthought Canopy package manager. Originally the problem only occurred when installing with the f90 solver, installing without the f90 solver everything ran normally. I was using IPython to run the tests. Testing now runs successfully from IPython (qtconsole and notebook) and from the python interpreter.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/46#issuecomment-25209786
https://github.com/qutip/qutip/pull/48#issuecomment-27609676:168,Integrability,interface,interface,168,"Hi,. I notice that there are cases that the Python version of QuTIP is slower; than the QOToolbox written in Matlab. I naively think, for those cases, can; you make an interface so that users can call the corresponding Matlab; programs from Python? Seems PyMat, Pymatbridge, Mlabwrap and maybe other; programs can do this job. Have you considered this option to make QuTIP; better at this stage? Thanks. Kind regards,; Qi",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/48#issuecomment-27609676
https://github.com/qutip/qutip/pull/48#issuecomment-27611560:471,Energy Efficiency,efficient,efficient,471,"Hi. I can only speak for myself, but personally this is not something that I'd be willing to work on, or recommend anyone to work on for that matter. That said, if you or someone else think it is important, work it out, and are willing to maintain it, we could of course consider including it in the qutip project (probably as an extension package or so). However, I think it would be better to spend time on improving qutip itself by identifying where qotoolbox is more efficient and do something about the corresponding code in qutip. What parts of qotoolbox are you interested in using from qutip and how much slower do you experience qutip to be compared to the qotoolbox in those areas?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/48#issuecomment-27611560
https://github.com/qutip/qutip/pull/48#issuecomment-27613005:152,Energy Efficiency,power,power,152,Yes I would agree that this is not something that we will add to qutip at least not directly. Of course if someone wants to add such features then more power to them. Like Rob I think that time is better spent optimizing qutip.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/48#issuecomment-27613005
https://github.com/qutip/qutip/pull/48#issuecomment-27613005:210,Performance,optimiz,optimizing,210,Yes I would agree that this is not something that we will add to qutip at least not directly. Of course if someone wants to add such features then more power to them. Like Rob I think that time is better spent optimizing qutip.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/48#issuecomment-27613005
https://github.com/qutip/qutip/issues/50#issuecomment-29263828:155,Availability,down,downside,155,"This is because I switched the linear solver used by expm to the sparse version added to scipy. The upside is that we can use expm for larger systems, the downside is that the routine now obviously takes longer.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/50#issuecomment-29263828
https://github.com/qutip/qutip/issues/50#issuecomment-29263828:176,Integrability,rout,routine,176,"This is because I switched the linear solver used by expm to the sparse version added to scipy. The upside is that we can use expm for larger systems, the downside is that the routine now obviously takes longer.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/50#issuecomment-29263828
https://github.com/qutip/qutip/pull/51#issuecomment-25335125:67,Testability,test,test,67,"Hi Denis. Nice work, thanks! It would be great if you could create test notebooks that compares 'euler-maruyama' and 'euler-maruyama_fast', and 'milstein' and 'milstein_fast', and submit a pull request to our new repository for development notebooks at https://github.com/qutip/qutip-notebooks. I'll merge this PR now and do more tests later on. I might also make some small changes in your modifications, especially with the API for A_ops is still quite experimental (for example, not all operators that are precomputed and added to A_ops are used, so some could be dropped).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/51#issuecomment-25335125
https://github.com/qutip/qutip/pull/51#issuecomment-25335125:330,Testability,test,tests,330,"Hi Denis. Nice work, thanks! It would be great if you could create test notebooks that compares 'euler-maruyama' and 'euler-maruyama_fast', and 'milstein' and 'milstein_fast', and submit a pull request to our new repository for development notebooks at https://github.com/qutip/qutip-notebooks. I'll merge this PR now and do more tests later on. I might also make some small changes in your modifications, especially with the API for A_ops is still quite experimental (for example, not all operators that are precomputed and added to A_ops are used, so some could be dropped).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/51#issuecomment-25335125
https://github.com/qutip/qutip/pull/52#issuecomment-25343399:210,Safety,avoid,avoid,210,"You can run. ```; cython spmatfuncs.pyx; ```. to generate the C file. Yes I agree, there isn't a huge point in using spmv over. We get some speed improvement because we type checks and stuff like that, and can avoid the overhead of an extra function call. It is mostly useful when the RHS function itself is implemented in cython, but also in that case it doesn't make a huge difference.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/52#issuecomment-25343399
https://github.com/qutip/qutip/pull/52#issuecomment-25343953:45,Availability,error,error,45,"If I run ""cython spmatfuncs.pyx"" it gives an error:. ```; Error compiling Cython file:; ------------------------------------------------------------; ...; import numpy as np; cimport numpy as np; cimport cython; cimport libc.math. ctypedef np.complex128_t CTYPE_t; ^; ------------------------------------------------------------. spmatfuncs.pyx:24:0: 'CTYPE_t' redeclared ; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/52#issuecomment-25343953
https://github.com/qutip/qutip/pull/52#issuecomment-25343953:58,Availability,Error,Error,58,"If I run ""cython spmatfuncs.pyx"" it gives an error:. ```; Error compiling Cython file:; ------------------------------------------------------------; ...; import numpy as np; cimport numpy as np; cimport cython; cimport libc.math. ctypedef np.complex128_t CTYPE_t; ^; ------------------------------------------------------------. spmatfuncs.pyx:24:0: 'CTYPE_t' redeclared ; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/52#issuecomment-25343953
https://github.com/qutip/qutip/pull/52#issuecomment-25344028:24,Deployability,update,updates,24,Try again after pulling updates from master. I've just fixed it (the declaration was moved to the pxd 'header' file),MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/52#issuecomment-25344028
https://github.com/qutip/qutip/issues/55#issuecomment-25364351:149,Integrability,rout,routines,149,"I'm not sure, I've never used MKL, but I don't think it give much (or any) improvement for sparse matrix products since it probably doesn't use BLAS routines. Perhaps @nonhermitian knows something about it, or perhaps if sparse matrix products is any faster with OpenBLAS?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/55#issuecomment-25364351
https://github.com/qutip/qutip/issues/55#issuecomment-25365509:436,Availability,error,errors,436,"I have noticed some performance benefits with openblas but nothing noticeable for the sparse matrix routines. Multithreading gets some extra performance but the scaling is sublinear for sure. Just a couple of percent. From what I understand many sparse routines are limited by memory bandwidth. This is usually discussed in the context of the spmv. The biggest benefit when going to openblas is the removal of the umfpack out of memory errors. I dont think this has anything to do with the actual openblas functions but somewhere in the build process (suitesparse, metis, or something) the memory limitation is removed.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/55#issuecomment-25365509
https://github.com/qutip/qutip/issues/55#issuecomment-25365509:100,Integrability,rout,routines,100,"I have noticed some performance benefits with openblas but nothing noticeable for the sparse matrix routines. Multithreading gets some extra performance but the scaling is sublinear for sure. Just a couple of percent. From what I understand many sparse routines are limited by memory bandwidth. This is usually discussed in the context of the spmv. The biggest benefit when going to openblas is the removal of the umfpack out of memory errors. I dont think this has anything to do with the actual openblas functions but somewhere in the build process (suitesparse, metis, or something) the memory limitation is removed.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/55#issuecomment-25365509
https://github.com/qutip/qutip/issues/55#issuecomment-25365509:253,Integrability,rout,routines,253,"I have noticed some performance benefits with openblas but nothing noticeable for the sparse matrix routines. Multithreading gets some extra performance but the scaling is sublinear for sure. Just a couple of percent. From what I understand many sparse routines are limited by memory bandwidth. This is usually discussed in the context of the spmv. The biggest benefit when going to openblas is the removal of the umfpack out of memory errors. I dont think this has anything to do with the actual openblas functions but somewhere in the build process (suitesparse, metis, or something) the memory limitation is removed.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/55#issuecomment-25365509
https://github.com/qutip/qutip/issues/55#issuecomment-25365509:20,Performance,perform,performance,20,"I have noticed some performance benefits with openblas but nothing noticeable for the sparse matrix routines. Multithreading gets some extra performance but the scaling is sublinear for sure. Just a couple of percent. From what I understand many sparse routines are limited by memory bandwidth. This is usually discussed in the context of the spmv. The biggest benefit when going to openblas is the removal of the umfpack out of memory errors. I dont think this has anything to do with the actual openblas functions but somewhere in the build process (suitesparse, metis, or something) the memory limitation is removed.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/55#issuecomment-25365509
https://github.com/qutip/qutip/issues/55#issuecomment-25365509:141,Performance,perform,performance,141,"I have noticed some performance benefits with openblas but nothing noticeable for the sparse matrix routines. Multithreading gets some extra performance but the scaling is sublinear for sure. Just a couple of percent. From what I understand many sparse routines are limited by memory bandwidth. This is usually discussed in the context of the spmv. The biggest benefit when going to openblas is the removal of the umfpack out of memory errors. I dont think this has anything to do with the actual openblas functions but somewhere in the build process (suitesparse, metis, or something) the memory limitation is removed.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/55#issuecomment-25365509
https://github.com/qutip/qutip/issues/55#issuecomment-25367184:70,Integrability,rout,routines,70,"Hi Paul,; How do you use openblas from python? I found that some blas routines are exposed in numpy but not all of them. Are there some examples of sparse blas calls from python? ; EPD and Anaconda python include MKL so I would like to play a bit with sparse blas routines.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/55#issuecomment-25367184
https://github.com/qutip/qutip/issues/55#issuecomment-25367184:264,Integrability,rout,routines,264,"Hi Paul,; How do you use openblas from python? I found that some blas routines are exposed in numpy but not all of them. Are there some examples of sparse blas calls from python? ; EPD and Anaconda python include MKL so I would like to play a bit with sparse blas routines.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/55#issuecomment-25367184
https://github.com/qutip/qutip/issues/55#issuecomment-25367184:83,Security,expose,exposed,83,"Hi Paul,; How do you use openblas from python? I found that some blas routines are exposed in numpy but not all of them. Are there some examples of sparse blas calls from python? ; EPD and Anaconda python include MKL so I would like to play a bit with sparse blas routines.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/55#issuecomment-25367184
https://github.com/qutip/qutip/issues/55#issuecomment-25426540:7,Usability,guid,guide,7,"I good guide for compiling openblas and building numpy against it can be found here:. osdf.github.io/blog/numpyscipy-w ith-openblas-for-ubuntu-1204-second-try.html. Calling the blas functions from inside of cython was a project called Tokyo:. https://github.com/tokyo/tokyo. As you can tell by the file dates, it has more or less been abandoned. However, the work they have done would obviously be a good starting point for doing something similar.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/55#issuecomment-25426540
https://github.com/qutip/qutip/pull/56#issuecomment-25355844:340,Performance,perform,performance,340,"Why not replace the current cy_expect_rho_vec instead of adding a new function cy_expect_rho_vec_fast? If we need both then a more descriptive name difference than _fast would be desirable. The key difference in the API is that one takes a sparse matrix and the other its data, idx and ptr components as arguments. I recall not seeing much performance difference between these two options so I opted for the sparse matrix as argument because it makes it more convenient.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/56#issuecomment-25355844
https://github.com/qutip/qutip/pull/56#issuecomment-25357042:337,Integrability,wrap,wrapper,337,The difference in performance is huge for large dimensions. In the case of cy_expect_rho_vec we calculate n*(n-1) unnecessary values which we drop immediately with trace operation.; I didn't replace the cy_expect_rho_vec because of the API change. I don't know exactly where it is used. Maybe it make sense to use cy_expect_rho_vec as a wrapper for cy_expect_rho_vec_fast?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/56#issuecomment-25357042
https://github.com/qutip/qutip/pull/56#issuecomment-25357042:18,Performance,perform,performance,18,The difference in performance is huge for large dimensions. In the case of cy_expect_rho_vec we calculate n*(n-1) unnecessary values which we drop immediately with trace operation.; I didn't replace the cy_expect_rho_vec because of the API change. I don't know exactly where it is used. Maybe it make sense to use cy_expect_rho_vec as a wrapper for cy_expect_rho_vec_fast?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/56#issuecomment-25357042
https://github.com/qutip/qutip/pull/56#issuecomment-25358782:326,Performance,perform,performance,326,"I was not referring to the implementation, I agree that the method you implemented is clearly much better, because as you say it only calculates matrix-vector product and trace in one go. However, you could have kept the same function API as previous cy_expect_rho_vec function and I doubt it would make any difference in the performance (perhaps a a small difference, and in that case we can keep both, but then the old cy_expect_rho_vec should use the same implementation as the one you suggested for cy_expect_rho_vec_fast).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/56#issuecomment-25358782
https://github.com/qutip/qutip/pull/56#issuecomment-25358782:86,Usability,clear,clearly,86,"I was not referring to the implementation, I agree that the method you implemented is clearly much better, because as you say it only calculates matrix-vector product and trace in one go. However, you could have kept the same function API as previous cy_expect_rho_vec function and I doubt it would make any difference in the performance (perhaps a a small difference, and in that case we can keep both, but then the old cy_expect_rho_vec should use the same implementation as the one you suggested for cy_expect_rho_vec_fast).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/56#issuecomment-25358782
https://github.com/qutip/qutip/pull/57#issuecomment-25391731:16,Testability,test,tests,16,Now all mcsolve tests are passed.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/57#issuecomment-25391731
https://github.com/qutip/qutip/pull/58#issuecomment-25672612:146,Deployability,continuous,continuous-benchmark,146,"Thanks again for this, that's good to know. With these and related changes we have got some nice speed improvements :-). https://github.com/qutip/continuous-benchmark",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/58#issuecomment-25672612
https://github.com/qutip/qutip/pull/58#issuecomment-25672612:157,Testability,benchmark,benchmark,157,"Thanks again for this, that's good to know. With these and related changes we have got some nice speed improvements :-). https://github.com/qutip/continuous-benchmark",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/58#issuecomment-25672612
https://github.com/qutip/qutip/issues/62#issuecomment-27490347:77,Deployability,install,installing,77,"Hi Robert!. An even more Python-friendly alternative would be to allow `pip` installing it (i.e. adding to https://pypi.python.org/pypi/pip). As `homebrew` is for _everything_ on Mac,; while `pip` is for Python stuff (and is system-independent). (However, I have no experience it writing installs for any of them.). On 31 Oct 2013, at 15:15, Robert Johansson notifications@github.com wrote:. > Hi Piotr. Yes sure, sounds like a good idea, I'm looking into it.; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/62#issuecomment-27490347
https://github.com/qutip/qutip/issues/62#issuecomment-27490347:288,Deployability,install,installs,288,"Hi Robert!. An even more Python-friendly alternative would be to allow `pip` installing it (i.e. adding to https://pypi.python.org/pypi/pip). As `homebrew` is for _everything_ on Mac,; while `pip` is for Python stuff (and is system-independent). (However, I have no experience it writing installs for any of them.). On 31 Oct 2013, at 15:15, Robert Johansson notifications@github.com wrote:. > Hi Piotr. Yes sure, sounds like a good idea, I'm looking into it.; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/62#issuecomment-27490347
https://github.com/qutip/qutip/issues/62#issuecomment-27491906:84,Deployability,release,release,84,"I started to look into pypi a while ago and plan to add qutip there before the next release. However qutip depends on a C compiler and optionally fortran compiler, and some changes in our setup.py file is required to get it to work with pip, so it hasn't been done yet. It's on the todo list though. As for homebrew, it doesn't seem to have many of the requirements that qutip needs, such as numpy and scipy etc. For some reason they are in a separate homebrew repository.. Without these it wouldn't make much sense to submit a qutip formula to the official homebrew repository.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/62#issuecomment-27491906
https://github.com/qutip/qutip/issues/62#issuecomment-27491906:107,Integrability,depend,depends,107,"I started to look into pypi a while ago and plan to add qutip there before the next release. However qutip depends on a C compiler and optionally fortran compiler, and some changes in our setup.py file is required to get it to work with pip, so it hasn't been done yet. It's on the todo list though. As for homebrew, it doesn't seem to have many of the requirements that qutip needs, such as numpy and scipy etc. For some reason they are in a separate homebrew repository.. Without these it wouldn't make much sense to submit a qutip formula to the official homebrew repository.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/62#issuecomment-27491906
https://github.com/qutip/qutip/issues/62#issuecomment-27495167:197,Deployability,install,install,197,"Thanks, it works!; (And actually, PyPi is a better solution. (As you were using MacPorts, and its direct replacement is Homebrew, I though that there is a particular reason it won't work with `pip install qutip`.))",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/62#issuecomment-27495167
https://github.com/qutip/qutip/issues/62#issuecomment-27496281:140,Deployability,install,installing,140,"Thanks for testing it. Macports still have some advantages over pip, since it supports dependencies on non-python packages. I'm not sure if installing qutip via pip from on a fresh system will resolve all dependencies properly (will have to test this more carefully before next qutip release). Homebrew looks interesting from this point of view (I don't like that everything has to be built from source with macports..) but it is a bit unfortunate that not all qutip dependencies are in the standard homebrew repository.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/62#issuecomment-27496281
https://github.com/qutip/qutip/issues/62#issuecomment-27496281:284,Deployability,release,release,284,"Thanks for testing it. Macports still have some advantages over pip, since it supports dependencies on non-python packages. I'm not sure if installing qutip via pip from on a fresh system will resolve all dependencies properly (will have to test this more carefully before next qutip release). Homebrew looks interesting from this point of view (I don't like that everything has to be built from source with macports..) but it is a bit unfortunate that not all qutip dependencies are in the standard homebrew repository.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/62#issuecomment-27496281
https://github.com/qutip/qutip/issues/62#issuecomment-27496281:87,Integrability,depend,dependencies,87,"Thanks for testing it. Macports still have some advantages over pip, since it supports dependencies on non-python packages. I'm not sure if installing qutip via pip from on a fresh system will resolve all dependencies properly (will have to test this more carefully before next qutip release). Homebrew looks interesting from this point of view (I don't like that everything has to be built from source with macports..) but it is a bit unfortunate that not all qutip dependencies are in the standard homebrew repository.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/62#issuecomment-27496281
https://github.com/qutip/qutip/issues/62#issuecomment-27496281:205,Integrability,depend,dependencies,205,"Thanks for testing it. Macports still have some advantages over pip, since it supports dependencies on non-python packages. I'm not sure if installing qutip via pip from on a fresh system will resolve all dependencies properly (will have to test this more carefully before next qutip release). Homebrew looks interesting from this point of view (I don't like that everything has to be built from source with macports..) but it is a bit unfortunate that not all qutip dependencies are in the standard homebrew repository.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/62#issuecomment-27496281
https://github.com/qutip/qutip/issues/62#issuecomment-27496281:467,Integrability,depend,dependencies,467,"Thanks for testing it. Macports still have some advantages over pip, since it supports dependencies on non-python packages. I'm not sure if installing qutip via pip from on a fresh system will resolve all dependencies properly (will have to test this more carefully before next qutip release). Homebrew looks interesting from this point of view (I don't like that everything has to be built from source with macports..) but it is a bit unfortunate that not all qutip dependencies are in the standard homebrew repository.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/62#issuecomment-27496281
https://github.com/qutip/qutip/issues/62#issuecomment-27496281:11,Testability,test,testing,11,"Thanks for testing it. Macports still have some advantages over pip, since it supports dependencies on non-python packages. I'm not sure if installing qutip via pip from on a fresh system will resolve all dependencies properly (will have to test this more carefully before next qutip release). Homebrew looks interesting from this point of view (I don't like that everything has to be built from source with macports..) but it is a bit unfortunate that not all qutip dependencies are in the standard homebrew repository.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/62#issuecomment-27496281
https://github.com/qutip/qutip/issues/62#issuecomment-27496281:241,Testability,test,test,241,"Thanks for testing it. Macports still have some advantages over pip, since it supports dependencies on non-python packages. I'm not sure if installing qutip via pip from on a fresh system will resolve all dependencies properly (will have to test this more carefully before next qutip release). Homebrew looks interesting from this point of view (I don't like that everything has to be built from source with macports..) but it is a bit unfortunate that not all qutip dependencies are in the standard homebrew repository.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/62#issuecomment-27496281
https://github.com/qutip/qutip/issues/64#issuecomment-28288241:221,Availability,down,down,221,"I missed `qstate` for some reason, thanks for pointing to it. Anyway, I needed something more general. Anyway, I was thinking how to combine different notations. . That is, for qubits, people use:; - `u` / `d` for up and down (as it is is `qstate`),; - `g` / `e` for ground and excited,; - `H` / `V` for horizontal and vertical (polarizations),. and, of course, numbers. I was thinking about making a dictionary, but I am not sure if it is going to help or not (e.g. there may be intersecting conventions). But it would be nice to write e.g.:. ```; ket(""e00"") + ket(""g01"") + ket(""g10""); ```. I will clean things and do a PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/64#issuecomment-28288241
https://github.com/qutip/qutip/pull/65#issuecomment-28300877:55,Testability,test,testing,55,This is looking great. Will try it out and merge after testing. One small thing: could you pep8 format the code? (some long lines),MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/65#issuecomment-28300877
https://github.com/qutip/qutip/pull/65#issuecomment-28357138:34,Testability,test,tests,34,"This have been working fine in my tests, so I'm merging now. Thanks for the contribution!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/65#issuecomment-28357138
https://github.com/qutip/qutip/issues/1516#issuecomment-467538074:242,Deployability,release,releases,242,"So, I did a lot of digging around trying to add the banner for all the older documentation to point towards the latest. But it was a pain to modify and add manually a message on each page to point towards the latest docs. However, for future releases, we could use the `cannonical_url` option of `sphinx_rtd_theme` which makes search engines index the latest links to the documentations. https://docs.readthedocs.io/en/stable/canonical.html",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1516#issuecomment-467538074
https://github.com/qutip/qutip/issues/1516#issuecomment-467538074:167,Integrability,message,message,167,"So, I did a lot of digging around trying to add the banner for all the older documentation to point towards the latest. But it was a pain to modify and add manually a message on each page to point towards the latest docs. However, for future releases, we could use the `cannonical_url` option of `sphinx_rtd_theme` which makes search engines index the latest links to the documentations. https://docs.readthedocs.io/en/stable/canonical.html",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1516#issuecomment-467538074
https://github.com/qutip/qutip/issues/1516#issuecomment-468017470:410,Deployability,release,release,410,"Coming soon! I did more digging and modified the sphinx_rtd_theme to add this warning message. ![screenshot 2019-02-27 17 11 28](https://user-images.githubusercontent.com/6968324/53504756-d003a400-3ab2-11e9-9578-87761dddfce2.png). @ajgpitch At this moment, do we rebuild the old docs or add this message manually to them? . Also, for the future docs, how are we going to make sure that everytime we make a new release, the old documentation gets this warning message? Maybe we make some release-documentation notes similar to the release notes, and add this as one of the steps. When you build new documentation, you also have to rebuild the older version and change the conf.py file to include the warning message. I poked around a bit and could change the sphinx_rtd_theme so that we can have something like . ```; version = 4.2; is_latest = False; ```. and the documentation inserts this message based on this value.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1516#issuecomment-468017470
https://github.com/qutip/qutip/issues/1516#issuecomment-468017470:487,Deployability,release,release-documentation,487,"Coming soon! I did more digging and modified the sphinx_rtd_theme to add this warning message. ![screenshot 2019-02-27 17 11 28](https://user-images.githubusercontent.com/6968324/53504756-d003a400-3ab2-11e9-9578-87761dddfce2.png). @ajgpitch At this moment, do we rebuild the old docs or add this message manually to them? . Also, for the future docs, how are we going to make sure that everytime we make a new release, the old documentation gets this warning message? Maybe we make some release-documentation notes similar to the release notes, and add this as one of the steps. When you build new documentation, you also have to rebuild the older version and change the conf.py file to include the warning message. I poked around a bit and could change the sphinx_rtd_theme so that we can have something like . ```; version = 4.2; is_latest = False; ```. and the documentation inserts this message based on this value.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1516#issuecomment-468017470
https://github.com/qutip/qutip/issues/1516#issuecomment-468017470:530,Deployability,release,release,530,"Coming soon! I did more digging and modified the sphinx_rtd_theme to add this warning message. ![screenshot 2019-02-27 17 11 28](https://user-images.githubusercontent.com/6968324/53504756-d003a400-3ab2-11e9-9578-87761dddfce2.png). @ajgpitch At this moment, do we rebuild the old docs or add this message manually to them? . Also, for the future docs, how are we going to make sure that everytime we make a new release, the old documentation gets this warning message? Maybe we make some release-documentation notes similar to the release notes, and add this as one of the steps. When you build new documentation, you also have to rebuild the older version and change the conf.py file to include the warning message. I poked around a bit and could change the sphinx_rtd_theme so that we can have something like . ```; version = 4.2; is_latest = False; ```. and the documentation inserts this message based on this value.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1516#issuecomment-468017470
https://github.com/qutip/qutip/issues/1516#issuecomment-468017470:86,Integrability,message,message,86,"Coming soon! I did more digging and modified the sphinx_rtd_theme to add this warning message. ![screenshot 2019-02-27 17 11 28](https://user-images.githubusercontent.com/6968324/53504756-d003a400-3ab2-11e9-9578-87761dddfce2.png). @ajgpitch At this moment, do we rebuild the old docs or add this message manually to them? . Also, for the future docs, how are we going to make sure that everytime we make a new release, the old documentation gets this warning message? Maybe we make some release-documentation notes similar to the release notes, and add this as one of the steps. When you build new documentation, you also have to rebuild the older version and change the conf.py file to include the warning message. I poked around a bit and could change the sphinx_rtd_theme so that we can have something like . ```; version = 4.2; is_latest = False; ```. and the documentation inserts this message based on this value.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1516#issuecomment-468017470
https://github.com/qutip/qutip/issues/1516#issuecomment-468017470:296,Integrability,message,message,296,"Coming soon! I did more digging and modified the sphinx_rtd_theme to add this warning message. ![screenshot 2019-02-27 17 11 28](https://user-images.githubusercontent.com/6968324/53504756-d003a400-3ab2-11e9-9578-87761dddfce2.png). @ajgpitch At this moment, do we rebuild the old docs or add this message manually to them? . Also, for the future docs, how are we going to make sure that everytime we make a new release, the old documentation gets this warning message? Maybe we make some release-documentation notes similar to the release notes, and add this as one of the steps. When you build new documentation, you also have to rebuild the older version and change the conf.py file to include the warning message. I poked around a bit and could change the sphinx_rtd_theme so that we can have something like . ```; version = 4.2; is_latest = False; ```. and the documentation inserts this message based on this value.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1516#issuecomment-468017470
https://github.com/qutip/qutip/issues/1516#issuecomment-468017470:459,Integrability,message,message,459,"Coming soon! I did more digging and modified the sphinx_rtd_theme to add this warning message. ![screenshot 2019-02-27 17 11 28](https://user-images.githubusercontent.com/6968324/53504756-d003a400-3ab2-11e9-9578-87761dddfce2.png). @ajgpitch At this moment, do we rebuild the old docs or add this message manually to them? . Also, for the future docs, how are we going to make sure that everytime we make a new release, the old documentation gets this warning message? Maybe we make some release-documentation notes similar to the release notes, and add this as one of the steps. When you build new documentation, you also have to rebuild the older version and change the conf.py file to include the warning message. I poked around a bit and could change the sphinx_rtd_theme so that we can have something like . ```; version = 4.2; is_latest = False; ```. and the documentation inserts this message based on this value.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1516#issuecomment-468017470
https://github.com/qutip/qutip/issues/1516#issuecomment-468017470:707,Integrability,message,message,707,"Coming soon! I did more digging and modified the sphinx_rtd_theme to add this warning message. ![screenshot 2019-02-27 17 11 28](https://user-images.githubusercontent.com/6968324/53504756-d003a400-3ab2-11e9-9578-87761dddfce2.png). @ajgpitch At this moment, do we rebuild the old docs or add this message manually to them? . Also, for the future docs, how are we going to make sure that everytime we make a new release, the old documentation gets this warning message? Maybe we make some release-documentation notes similar to the release notes, and add this as one of the steps. When you build new documentation, you also have to rebuild the older version and change the conf.py file to include the warning message. I poked around a bit and could change the sphinx_rtd_theme so that we can have something like . ```; version = 4.2; is_latest = False; ```. and the documentation inserts this message based on this value.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1516#issuecomment-468017470
https://github.com/qutip/qutip/issues/1516#issuecomment-468017470:891,Integrability,message,message,891,"Coming soon! I did more digging and modified the sphinx_rtd_theme to add this warning message. ![screenshot 2019-02-27 17 11 28](https://user-images.githubusercontent.com/6968324/53504756-d003a400-3ab2-11e9-9578-87761dddfce2.png). @ajgpitch At this moment, do we rebuild the old docs or add this message manually to them? . Also, for the future docs, how are we going to make sure that everytime we make a new release, the old documentation gets this warning message? Maybe we make some release-documentation notes similar to the release notes, and add this as one of the steps. When you build new documentation, you also have to rebuild the older version and change the conf.py file to include the warning message. I poked around a bit and could change the sphinx_rtd_theme so that we can have something like . ```; version = 4.2; is_latest = False; ```. and the documentation inserts this message based on this value.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1516#issuecomment-468017470
https://github.com/qutip/qutip/issues/1516#issuecomment-468176031:96,Deployability,release,release-distribution,96,"@quantshah Great work, this seems like exactly what we need. ; We already have a section in the release-distribution document about building the docs, so we can add a bit about rebuilding the previous version docs with `is_latest = False` and uploading. ; I don't think that it is feasible to rebuild all the old docs. Would be a lot of work, as we would have to recreate working envs for the versions. Would seem more feasible to edit the HTML - I guess we could script this, as each guide file would need to be fixed. We could also consider just removing some of the older versions.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1516#issuecomment-468176031
https://github.com/qutip/qutip/issues/1516#issuecomment-468176031:485,Usability,guid,guide,485,"@quantshah Great work, this seems like exactly what we need. ; We already have a section in the release-distribution document about building the docs, so we can add a bit about rebuilding the previous version docs with `is_latest = False` and uploading. ; I don't think that it is feasible to rebuild all the old docs. Would be a lot of work, as we would have to recreate working envs for the versions. Would seem more feasible to edit the HTML - I guess we could script this, as each guide file would need to be fixed. We could also consider just removing some of the older versions.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1516#issuecomment-468176031
https://github.com/qutip/qutip/issues/73#issuecomment-35583331:316,Availability,ERROR,ERROR,316,"Is this on, Linux? All the tests run fine under Ubuntu 13.10, Python ; 2.7 & 3.3, as well as the Mac. Maybe you need to check out the latest ; copy or something funny is going on. On 02/20/2014 11:56 AM, Robert Johansson wrote:. > On my system the following tests fails:; > ; > Sparse: Symmetric Reverse Permute ... ERROR; > Sparse: Nonsymmetric Reverse Permute ... ERROR; > Sparse: Bandwidth ... ERROR; > ; > More detailed info:; > ; > ```; > ERROR: Sparse: Symmetric Reverse Permute; > ```; > ; > Traceback (most recent call last):; > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", ; > line 198, in runTest; > self.test(*self.arg); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", ; > line 73, in test_sparse_symmetric_reverse_permute; > B=sparse_reverse_permute(x,perm,perm); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", ; > line 566, in sparse_reverse_permute; > A.indptr, nrows, ncols, rperm, cperm, flag); > File ""sparse_utils.pyx"", line 266, in ; > qutip.cy.sparse_utils./sparse/reverse_permute_complex ; > (qutip/cy/sparse_utils.c:5740); > ValueError: Buffer dtype mismatch, expected 'int' but got 'long'; > ; > ```; > ERROR: Sparse: Nonsymmetric Reverse Permute; > ```; > ; > Traceback (most recent call last):; > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", ; > line 198, in runTest; > self.test(*self.arg); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", ; > line 89, in test_sparse_nonsymmetric_reverse_permute; > B=sparse_reverse_permute(x,rperm,cperm); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", ; > line 566, in sparse_reverse_permute; > A.indptr, nrows, ncols, rperm, cperm, flag); > File ""sparse_utils.pyx"", line 266, in ; > qutip.cy.sparse_utils./sparse/reverse_permute_complex ; > (qutip/c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/73#issuecomment-35583331
https://github.com/qutip/qutip/issues/73#issuecomment-35583331:366,Availability,ERROR,ERROR,366,"Is this on, Linux? All the tests run fine under Ubuntu 13.10, Python ; 2.7 & 3.3, as well as the Mac. Maybe you need to check out the latest ; copy or something funny is going on. On 02/20/2014 11:56 AM, Robert Johansson wrote:. > On my system the following tests fails:; > ; > Sparse: Symmetric Reverse Permute ... ERROR; > Sparse: Nonsymmetric Reverse Permute ... ERROR; > Sparse: Bandwidth ... ERROR; > ; > More detailed info:; > ; > ```; > ERROR: Sparse: Symmetric Reverse Permute; > ```; > ; > Traceback (most recent call last):; > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", ; > line 198, in runTest; > self.test(*self.arg); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", ; > line 73, in test_sparse_symmetric_reverse_permute; > B=sparse_reverse_permute(x,perm,perm); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", ; > line 566, in sparse_reverse_permute; > A.indptr, nrows, ncols, rperm, cperm, flag); > File ""sparse_utils.pyx"", line 266, in ; > qutip.cy.sparse_utils./sparse/reverse_permute_complex ; > (qutip/cy/sparse_utils.c:5740); > ValueError: Buffer dtype mismatch, expected 'int' but got 'long'; > ; > ```; > ERROR: Sparse: Nonsymmetric Reverse Permute; > ```; > ; > Traceback (most recent call last):; > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", ; > line 198, in runTest; > self.test(*self.arg); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", ; > line 89, in test_sparse_nonsymmetric_reverse_permute; > B=sparse_reverse_permute(x,rperm,cperm); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", ; > line 566, in sparse_reverse_permute; > A.indptr, nrows, ncols, rperm, cperm, flag); > File ""sparse_utils.pyx"", line 266, in ; > qutip.cy.sparse_utils./sparse/reverse_permute_complex ; > (qutip/c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/73#issuecomment-35583331
https://github.com/qutip/qutip/issues/73#issuecomment-35583331:397,Availability,ERROR,ERROR,397,"Is this on, Linux? All the tests run fine under Ubuntu 13.10, Python ; 2.7 & 3.3, as well as the Mac. Maybe you need to check out the latest ; copy or something funny is going on. On 02/20/2014 11:56 AM, Robert Johansson wrote:. > On my system the following tests fails:; > ; > Sparse: Symmetric Reverse Permute ... ERROR; > Sparse: Nonsymmetric Reverse Permute ... ERROR; > Sparse: Bandwidth ... ERROR; > ; > More detailed info:; > ; > ```; > ERROR: Sparse: Symmetric Reverse Permute; > ```; > ; > Traceback (most recent call last):; > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", ; > line 198, in runTest; > self.test(*self.arg); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", ; > line 73, in test_sparse_symmetric_reverse_permute; > B=sparse_reverse_permute(x,perm,perm); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", ; > line 566, in sparse_reverse_permute; > A.indptr, nrows, ncols, rperm, cperm, flag); > File ""sparse_utils.pyx"", line 266, in ; > qutip.cy.sparse_utils./sparse/reverse_permute_complex ; > (qutip/cy/sparse_utils.c:5740); > ValueError: Buffer dtype mismatch, expected 'int' but got 'long'; > ; > ```; > ERROR: Sparse: Nonsymmetric Reverse Permute; > ```; > ; > Traceback (most recent call last):; > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", ; > line 198, in runTest; > self.test(*self.arg); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", ; > line 89, in test_sparse_nonsymmetric_reverse_permute; > B=sparse_reverse_permute(x,rperm,cperm); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", ; > line 566, in sparse_reverse_permute; > A.indptr, nrows, ncols, rperm, cperm, flag); > File ""sparse_utils.pyx"", line 266, in ; > qutip.cy.sparse_utils./sparse/reverse_permute_complex ; > (qutip/c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/73#issuecomment-35583331
https://github.com/qutip/qutip/issues/73#issuecomment-35583331:444,Availability,ERROR,ERROR,444,"Is this on, Linux? All the tests run fine under Ubuntu 13.10, Python ; 2.7 & 3.3, as well as the Mac. Maybe you need to check out the latest ; copy or something funny is going on. On 02/20/2014 11:56 AM, Robert Johansson wrote:. > On my system the following tests fails:; > ; > Sparse: Symmetric Reverse Permute ... ERROR; > Sparse: Nonsymmetric Reverse Permute ... ERROR; > Sparse: Bandwidth ... ERROR; > ; > More detailed info:; > ; > ```; > ERROR: Sparse: Symmetric Reverse Permute; > ```; > ; > Traceback (most recent call last):; > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", ; > line 198, in runTest; > self.test(*self.arg); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", ; > line 73, in test_sparse_symmetric_reverse_permute; > B=sparse_reverse_permute(x,perm,perm); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", ; > line 566, in sparse_reverse_permute; > A.indptr, nrows, ncols, rperm, cperm, flag); > File ""sparse_utils.pyx"", line 266, in ; > qutip.cy.sparse_utils./sparse/reverse_permute_complex ; > (qutip/cy/sparse_utils.c:5740); > ValueError: Buffer dtype mismatch, expected 'int' but got 'long'; > ; > ```; > ERROR: Sparse: Nonsymmetric Reverse Permute; > ```; > ; > Traceback (most recent call last):; > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", ; > line 198, in runTest; > self.test(*self.arg); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", ; > line 89, in test_sparse_nonsymmetric_reverse_permute; > B=sparse_reverse_permute(x,rperm,cperm); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", ; > line 566, in sparse_reverse_permute; > A.indptr, nrows, ncols, rperm, cperm, flag); > File ""sparse_utils.pyx"", line 266, in ; > qutip.cy.sparse_utils./sparse/reverse_permute_complex ; > (qutip/c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/73#issuecomment-35583331
https://github.com/qutip/qutip/issues/73#issuecomment-35583331:1271,Availability,ERROR,ERROR,1271,"erse Permute ... ERROR; > Sparse: Nonsymmetric Reverse Permute ... ERROR; > Sparse: Bandwidth ... ERROR; > ; > More detailed info:; > ; > ```; > ERROR: Sparse: Symmetric Reverse Permute; > ```; > ; > Traceback (most recent call last):; > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", ; > line 198, in runTest; > self.test(*self.arg); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", ; > line 73, in test_sparse_symmetric_reverse_permute; > B=sparse_reverse_permute(x,perm,perm); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", ; > line 566, in sparse_reverse_permute; > A.indptr, nrows, ncols, rperm, cperm, flag); > File ""sparse_utils.pyx"", line 266, in ; > qutip.cy.sparse_utils./sparse/reverse_permute_complex ; > (qutip/cy/sparse_utils.c:5740); > ValueError: Buffer dtype mismatch, expected 'int' but got 'long'; > ; > ```; > ERROR: Sparse: Nonsymmetric Reverse Permute; > ```; > ; > Traceback (most recent call last):; > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", ; > line 198, in runTest; > self.test(*self.arg); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", ; > line 89, in test_sparse_nonsymmetric_reverse_permute; > B=sparse_reverse_permute(x,rperm,cperm); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", ; > line 566, in sparse_reverse_permute; > A.indptr, nrows, ncols, rperm, cperm, flag); > File ""sparse_utils.pyx"", line 266, in ; > qutip.cy.sparse_utils./sparse/reverse_permute_complex ; > (qutip/cy/sparse_utils.c:5740); > ValueError: Buffer dtype mismatch, expected 'int' but got 'long'; > ; > ```; > ERROR: Sparse: Bandwidth; > ```; > ; > Traceback (most recent call last):; > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", ; > line 198, ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/73#issuecomment-35583331
https://github.com/qutip/qutip/issues/73#issuecomment-35583331:2106,Availability,ERROR,ERROR,2106,", ; > line 566, in sparse_reverse_permute; > A.indptr, nrows, ncols, rperm, cperm, flag); > File ""sparse_utils.pyx"", line 266, in ; > qutip.cy.sparse_utils./sparse/reverse_permute_complex ; > (qutip/cy/sparse_utils.c:5740); > ValueError: Buffer dtype mismatch, expected 'int' but got 'long'; > ; > ```; > ERROR: Sparse: Nonsymmetric Reverse Permute; > ```; > ; > Traceback (most recent call last):; > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", ; > line 198, in runTest; > self.test(*self.arg); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", ; > line 89, in test_sparse_nonsymmetric_reverse_permute; > B=sparse_reverse_permute(x,rperm,cperm); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", ; > line 566, in sparse_reverse_permute; > A.indptr, nrows, ncols, rperm, cperm, flag); > File ""sparse_utils.pyx"", line 266, in ; > qutip.cy.sparse_utils./sparse/reverse_permute_complex ; > (qutip/cy/sparse_utils.c:5740); > ValueError: Buffer dtype mismatch, expected 'int' but got 'long'; > ; > ```; > ERROR: Sparse: Bandwidth; > ```; > ; > Traceback (most recent call last):; > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", ; > line 198, in runTest; > self.test(*self.arg); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", ; > line 144, in test_sparse_bandwidth; > out2=sparse_bandwidth(B); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", ; > line 603, in sparse_bandwidth; > return /sparse/bandwidth(A.indices, A.indptr, nrows); > File ""sparse_utils.pyx"", line 42, in ; > qutip.cy.sparse_utils./sparse/bandwidth (qutip/cy/sparse_utils.c:1458); > ValueError: Buffer dtype mismatch, expected 'int' but got 'long'; > ; > —; > Reply to this email directly or view it on GitHub ; > https://github.com/qutip/qutip/issues/73.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/73#issuecomment-35583331
https://github.com/qutip/qutip/issues/73#issuecomment-35583331:27,Testability,test,tests,27,"Is this on, Linux? All the tests run fine under Ubuntu 13.10, Python ; 2.7 & 3.3, as well as the Mac. Maybe you need to check out the latest ; copy or something funny is going on. On 02/20/2014 11:56 AM, Robert Johansson wrote:. > On my system the following tests fails:; > ; > Sparse: Symmetric Reverse Permute ... ERROR; > Sparse: Nonsymmetric Reverse Permute ... ERROR; > Sparse: Bandwidth ... ERROR; > ; > More detailed info:; > ; > ```; > ERROR: Sparse: Symmetric Reverse Permute; > ```; > ; > Traceback (most recent call last):; > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", ; > line 198, in runTest; > self.test(*self.arg); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", ; > line 73, in test_sparse_symmetric_reverse_permute; > B=sparse_reverse_permute(x,perm,perm); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", ; > line 566, in sparse_reverse_permute; > A.indptr, nrows, ncols, rperm, cperm, flag); > File ""sparse_utils.pyx"", line 266, in ; > qutip.cy.sparse_utils./sparse/reverse_permute_complex ; > (qutip/cy/sparse_utils.c:5740); > ValueError: Buffer dtype mismatch, expected 'int' but got 'long'; > ; > ```; > ERROR: Sparse: Nonsymmetric Reverse Permute; > ```; > ; > Traceback (most recent call last):; > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", ; > line 198, in runTest; > self.test(*self.arg); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", ; > line 89, in test_sparse_nonsymmetric_reverse_permute; > B=sparse_reverse_permute(x,rperm,cperm); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", ; > line 566, in sparse_reverse_permute; > A.indptr, nrows, ncols, rperm, cperm, flag); > File ""sparse_utils.pyx"", line 266, in ; > qutip.cy.sparse_utils./sparse/reverse_permute_complex ; > (qutip/c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/73#issuecomment-35583331
https://github.com/qutip/qutip/issues/73#issuecomment-35583331:258,Testability,test,tests,258,"Is this on, Linux? All the tests run fine under Ubuntu 13.10, Python ; 2.7 & 3.3, as well as the Mac. Maybe you need to check out the latest ; copy or something funny is going on. On 02/20/2014 11:56 AM, Robert Johansson wrote:. > On my system the following tests fails:; > ; > Sparse: Symmetric Reverse Permute ... ERROR; > Sparse: Nonsymmetric Reverse Permute ... ERROR; > Sparse: Bandwidth ... ERROR; > ; > More detailed info:; > ; > ```; > ERROR: Sparse: Symmetric Reverse Permute; > ```; > ; > Traceback (most recent call last):; > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", ; > line 198, in runTest; > self.test(*self.arg); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", ; > line 73, in test_sparse_symmetric_reverse_permute; > B=sparse_reverse_permute(x,perm,perm); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", ; > line 566, in sparse_reverse_permute; > A.indptr, nrows, ncols, rperm, cperm, flag); > File ""sparse_utils.pyx"", line 266, in ; > qutip.cy.sparse_utils./sparse/reverse_permute_complex ; > (qutip/cy/sparse_utils.c:5740); > ValueError: Buffer dtype mismatch, expected 'int' but got 'long'; > ; > ```; > ERROR: Sparse: Nonsymmetric Reverse Permute; > ```; > ; > Traceback (most recent call last):; > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", ; > line 198, in runTest; > self.test(*self.arg); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", ; > line 89, in test_sparse_nonsymmetric_reverse_permute; > B=sparse_reverse_permute(x,rperm,cperm); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", ; > line 566, in sparse_reverse_permute; > A.indptr, nrows, ncols, rperm, cperm, flag); > File ""sparse_utils.pyx"", line 266, in ; > qutip.cy.sparse_utils./sparse/reverse_permute_complex ; > (qutip/c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/73#issuecomment-35583331
https://github.com/qutip/qutip/issues/73#issuecomment-35583331:672,Testability,test,test,672,"Is this on, Linux? All the tests run fine under Ubuntu 13.10, Python ; 2.7 & 3.3, as well as the Mac. Maybe you need to check out the latest ; copy or something funny is going on. On 02/20/2014 11:56 AM, Robert Johansson wrote:. > On my system the following tests fails:; > ; > Sparse: Symmetric Reverse Permute ... ERROR; > Sparse: Nonsymmetric Reverse Permute ... ERROR; > Sparse: Bandwidth ... ERROR; > ; > More detailed info:; > ; > ```; > ERROR: Sparse: Symmetric Reverse Permute; > ```; > ; > Traceback (most recent call last):; > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", ; > line 198, in runTest; > self.test(*self.arg); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", ; > line 73, in test_sparse_symmetric_reverse_permute; > B=sparse_reverse_permute(x,perm,perm); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", ; > line 566, in sparse_reverse_permute; > A.indptr, nrows, ncols, rperm, cperm, flag); > File ""sparse_utils.pyx"", line 266, in ; > qutip.cy.sparse_utils./sparse/reverse_permute_complex ; > (qutip/cy/sparse_utils.c:5740); > ValueError: Buffer dtype mismatch, expected 'int' but got 'long'; > ; > ```; > ERROR: Sparse: Nonsymmetric Reverse Permute; > ```; > ; > Traceback (most recent call last):; > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", ; > line 198, in runTest; > self.test(*self.arg); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", ; > line 89, in test_sparse_nonsymmetric_reverse_permute; > B=sparse_reverse_permute(x,rperm,cperm); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", ; > line 566, in sparse_reverse_permute; > A.indptr, nrows, ncols, rperm, cperm, flag); > File ""sparse_utils.pyx"", line 266, in ; > qutip.cy.sparse_utils./sparse/reverse_permute_complex ; > (qutip/c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/73#issuecomment-35583331
https://github.com/qutip/qutip/issues/73#issuecomment-35583331:763,Testability,test,tests,763,"Is this on, Linux? All the tests run fine under Ubuntu 13.10, Python ; 2.7 & 3.3, as well as the Mac. Maybe you need to check out the latest ; copy or something funny is going on. On 02/20/2014 11:56 AM, Robert Johansson wrote:. > On my system the following tests fails:; > ; > Sparse: Symmetric Reverse Permute ... ERROR; > Sparse: Nonsymmetric Reverse Permute ... ERROR; > Sparse: Bandwidth ... ERROR; > ; > More detailed info:; > ; > ```; > ERROR: Sparse: Symmetric Reverse Permute; > ```; > ; > Traceback (most recent call last):; > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", ; > line 198, in runTest; > self.test(*self.arg); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", ; > line 73, in test_sparse_symmetric_reverse_permute; > B=sparse_reverse_permute(x,perm,perm); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", ; > line 566, in sparse_reverse_permute; > A.indptr, nrows, ncols, rperm, cperm, flag); > File ""sparse_utils.pyx"", line 266, in ; > qutip.cy.sparse_utils./sparse/reverse_permute_complex ; > (qutip/cy/sparse_utils.c:5740); > ValueError: Buffer dtype mismatch, expected 'int' but got 'long'; > ; > ```; > ERROR: Sparse: Nonsymmetric Reverse Permute; > ```; > ; > Traceback (most recent call last):; > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", ; > line 198, in runTest; > self.test(*self.arg); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", ; > line 89, in test_sparse_nonsymmetric_reverse_permute; > B=sparse_reverse_permute(x,rperm,cperm); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", ; > line 566, in sparse_reverse_permute; > A.indptr, nrows, ncols, rperm, cperm, flag); > File ""sparse_utils.pyx"", line 266, in ; > qutip.cy.sparse_utils./sparse/reverse_permute_complex ; > (qutip/c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/73#issuecomment-35583331
https://github.com/qutip/qutip/issues/73#issuecomment-35583331:1502,Testability,test,test,1502,"k (most recent call last):; > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", ; > line 198, in runTest; > self.test(*self.arg); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", ; > line 73, in test_sparse_symmetric_reverse_permute; > B=sparse_reverse_permute(x,perm,perm); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", ; > line 566, in sparse_reverse_permute; > A.indptr, nrows, ncols, rperm, cperm, flag); > File ""sparse_utils.pyx"", line 266, in ; > qutip.cy.sparse_utils./sparse/reverse_permute_complex ; > (qutip/cy/sparse_utils.c:5740); > ValueError: Buffer dtype mismatch, expected 'int' but got 'long'; > ; > ```; > ERROR: Sparse: Nonsymmetric Reverse Permute; > ```; > ; > Traceback (most recent call last):; > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", ; > line 198, in runTest; > self.test(*self.arg); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", ; > line 89, in test_sparse_nonsymmetric_reverse_permute; > B=sparse_reverse_permute(x,rperm,cperm); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", ; > line 566, in sparse_reverse_permute; > A.indptr, nrows, ncols, rperm, cperm, flag); > File ""sparse_utils.pyx"", line 266, in ; > qutip.cy.sparse_utils./sparse/reverse_permute_complex ; > (qutip/cy/sparse_utils.c:5740); > ValueError: Buffer dtype mismatch, expected 'int' but got 'long'; > ; > ```; > ERROR: Sparse: Bandwidth; > ```; > ; > Traceback (most recent call last):; > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", ; > line 198, in runTest; > self.test(*self.arg); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", ; > line 144, in test_sparse_bandwidth; > out2=sparse_bandwidth(B); > File ;",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/73#issuecomment-35583331
https://github.com/qutip/qutip/issues/73#issuecomment-35583331:1593,Testability,test,tests,1593,"te-packages/nose-1.3.0-py3.3.egg/nose/case.py"", ; > line 198, in runTest; > self.test(*self.arg); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", ; > line 73, in test_sparse_symmetric_reverse_permute; > B=sparse_reverse_permute(x,perm,perm); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", ; > line 566, in sparse_reverse_permute; > A.indptr, nrows, ncols, rperm, cperm, flag); > File ""sparse_utils.pyx"", line 266, in ; > qutip.cy.sparse_utils./sparse/reverse_permute_complex ; > (qutip/cy/sparse_utils.c:5740); > ValueError: Buffer dtype mismatch, expected 'int' but got 'long'; > ; > ```; > ERROR: Sparse: Nonsymmetric Reverse Permute; > ```; > ; > Traceback (most recent call last):; > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", ; > line 198, in runTest; > self.test(*self.arg); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", ; > line 89, in test_sparse_nonsymmetric_reverse_permute; > B=sparse_reverse_permute(x,rperm,cperm); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", ; > line 566, in sparse_reverse_permute; > A.indptr, nrows, ncols, rperm, cperm, flag); > File ""sparse_utils.pyx"", line 266, in ; > qutip.cy.sparse_utils./sparse/reverse_permute_complex ; > (qutip/cy/sparse_utils.c:5740); > ValueError: Buffer dtype mismatch, expected 'int' but got 'long'; > ; > ```; > ERROR: Sparse: Bandwidth; > ```; > ; > Traceback (most recent call last):; > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", ; > line 198, in runTest; > self.test(*self.arg); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", ; > line 144, in test_sparse_bandwidth; > out2=sparse_bandwidth(B); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", ; > l",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/73#issuecomment-35583331
https://github.com/qutip/qutip/issues/73#issuecomment-35583331:2318,Testability,test,test,2318,", ; > line 566, in sparse_reverse_permute; > A.indptr, nrows, ncols, rperm, cperm, flag); > File ""sparse_utils.pyx"", line 266, in ; > qutip.cy.sparse_utils./sparse/reverse_permute_complex ; > (qutip/cy/sparse_utils.c:5740); > ValueError: Buffer dtype mismatch, expected 'int' but got 'long'; > ; > ```; > ERROR: Sparse: Nonsymmetric Reverse Permute; > ```; > ; > Traceback (most recent call last):; > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", ; > line 198, in runTest; > self.test(*self.arg); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", ; > line 89, in test_sparse_nonsymmetric_reverse_permute; > B=sparse_reverse_permute(x,rperm,cperm); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", ; > line 566, in sparse_reverse_permute; > A.indptr, nrows, ncols, rperm, cperm, flag); > File ""sparse_utils.pyx"", line 266, in ; > qutip.cy.sparse_utils./sparse/reverse_permute_complex ; > (qutip/cy/sparse_utils.c:5740); > ValueError: Buffer dtype mismatch, expected 'int' but got 'long'; > ; > ```; > ERROR: Sparse: Bandwidth; > ```; > ; > Traceback (most recent call last):; > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", ; > line 198, in runTest; > self.test(*self.arg); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", ; > line 144, in test_sparse_bandwidth; > out2=sparse_bandwidth(B); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", ; > line 603, in sparse_bandwidth; > return /sparse/bandwidth(A.indices, A.indptr, nrows); > File ""sparse_utils.pyx"", line 42, in ; > qutip.cy.sparse_utils./sparse/bandwidth (qutip/cy/sparse_utils.c:1458); > ValueError: Buffer dtype mismatch, expected 'int' but got 'long'; > ; > —; > Reply to this email directly or view it on GitHub ; > https://github.com/qutip/qutip/issues/73.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/73#issuecomment-35583331
https://github.com/qutip/qutip/issues/73#issuecomment-35583331:2409,Testability,test,tests,2409,", ; > line 566, in sparse_reverse_permute; > A.indptr, nrows, ncols, rperm, cperm, flag); > File ""sparse_utils.pyx"", line 266, in ; > qutip.cy.sparse_utils./sparse/reverse_permute_complex ; > (qutip/cy/sparse_utils.c:5740); > ValueError: Buffer dtype mismatch, expected 'int' but got 'long'; > ; > ```; > ERROR: Sparse: Nonsymmetric Reverse Permute; > ```; > ; > Traceback (most recent call last):; > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", ; > line 198, in runTest; > self.test(*self.arg); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", ; > line 89, in test_sparse_nonsymmetric_reverse_permute; > B=sparse_reverse_permute(x,rperm,cperm); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", ; > line 566, in sparse_reverse_permute; > A.indptr, nrows, ncols, rperm, cperm, flag); > File ""sparse_utils.pyx"", line 266, in ; > qutip.cy.sparse_utils./sparse/reverse_permute_complex ; > (qutip/cy/sparse_utils.c:5740); > ValueError: Buffer dtype mismatch, expected 'int' but got 'long'; > ; > ```; > ERROR: Sparse: Bandwidth; > ```; > ; > Traceback (most recent call last):; > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", ; > line 198, in runTest; > self.test(*self.arg); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", ; > line 144, in test_sparse_bandwidth; > out2=sparse_bandwidth(B); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", ; > line 603, in sparse_bandwidth; > return /sparse/bandwidth(A.indices, A.indptr, nrows); > File ""sparse_utils.pyx"", line 42, in ; > qutip.cy.sparse_utils./sparse/bandwidth (qutip/cy/sparse_utils.c:1458); > ValueError: Buffer dtype mismatch, expected 'int' but got 'long'; > ; > —; > Reply to this email directly or view it on GitHub ; > https://github.com/qutip/qutip/issues/73.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/73#issuecomment-35583331
https://github.com/qutip/qutip/issues/74#issuecomment-35886105:98,Deployability,update,updated,98,"Hi Robert. Yes, I saw that, but still annoying - I could have saved an hour this morning if I had updated beforehand :)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/74#issuecomment-35886105
https://github.com/qutip/qutip/pull/76#issuecomment-35965183:74,Integrability,depend,dependencies,74,This looks good. I've tested with both stable and development versions of dependencies (numpy/scipy) and the tests passes. There are two failing tests but they are not related to this issue (but the long-standing issue #30). Nice code cleanup too.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/76#issuecomment-35965183
https://github.com/qutip/qutip/pull/76#issuecomment-35965183:22,Testability,test,tested,22,This looks good. I've tested with both stable and development versions of dependencies (numpy/scipy) and the tests passes. There are two failing tests but they are not related to this issue (but the long-standing issue #30). Nice code cleanup too.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/76#issuecomment-35965183
https://github.com/qutip/qutip/pull/76#issuecomment-35965183:109,Testability,test,tests,109,This looks good. I've tested with both stable and development versions of dependencies (numpy/scipy) and the tests passes. There are two failing tests but they are not related to this issue (but the long-standing issue #30). Nice code cleanup too.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/76#issuecomment-35965183
https://github.com/qutip/qutip/pull/76#issuecomment-35965183:145,Testability,test,tests,145,This looks good. I've tested with both stable and development versions of dependencies (numpy/scipy) and the tests passes. There are two failing tests but they are not related to this issue (but the long-standing issue #30). Nice code cleanup too.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/76#issuecomment-35965183
https://github.com/qutip/qutip/pull/76#issuecomment-36082072:119,Deployability,configurat,configuration,119,The Travis CI should be up and running now. Can you rebase your PR so we can rerun the tests with the latest travis ci configuration?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/76#issuecomment-36082072
https://github.com/qutip/qutip/pull/76#issuecomment-36082072:119,Modifiability,config,configuration,119,The Travis CI should be up and running now. Can you rebase your PR so we can rerun the tests with the latest travis ci configuration?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/76#issuecomment-36082072
https://github.com/qutip/qutip/pull/76#issuecomment-36082072:87,Testability,test,tests,87,The Travis CI should be up and running now. Can you rebase your PR so we can rerun the tests with the latest travis ci configuration?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/76#issuecomment-36082072
https://github.com/qutip/qutip/pull/76#issuecomment-36082785:139,Testability,test,test,139,"There should be a button for the project owners to restart TravisCI for a particular PR, but I've closed/reopened myself to force it to re-test. The PR should merge into qutip/master branch so I don't think I need to rebase unless there's some conflict.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/76#issuecomment-36082785
https://github.com/qutip/qutip/pull/76#issuecomment-36083074:6,Energy Efficiency,green,green,6,"looks green!. **Edit**: wait, adding that comment is making it restart the testing... Here's the one that passed https://travis-ci.org/qutip/qutip/builds/19623192",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/76#issuecomment-36083074
https://github.com/qutip/qutip/pull/76#issuecomment-36083074:75,Testability,test,testing,75,"looks green!. **Edit**: wait, adding that comment is making it restart the testing... Here's the one that passed https://travis-ci.org/qutip/qutip/builds/19623192",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/76#issuecomment-36083074
https://github.com/qutip/qutip/pull/76#issuecomment-36083480:45,Deployability,configurat,configuration,45,"Hmm, it still seems to use the old travis ci configuration, where I tried to install numpy/scipy with pip without wheels. But took too long to install the dependencies that way, and the tests will probably timeout and get cancelled. In the current travis ci configuration uses pip with wheels to install numpy/scipy much faster.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/76#issuecomment-36083480
https://github.com/qutip/qutip/pull/76#issuecomment-36083480:77,Deployability,install,install,77,"Hmm, it still seems to use the old travis ci configuration, where I tried to install numpy/scipy with pip without wheels. But took too long to install the dependencies that way, and the tests will probably timeout and get cancelled. In the current travis ci configuration uses pip with wheels to install numpy/scipy much faster.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/76#issuecomment-36083480
https://github.com/qutip/qutip/pull/76#issuecomment-36083480:143,Deployability,install,install,143,"Hmm, it still seems to use the old travis ci configuration, where I tried to install numpy/scipy with pip without wheels. But took too long to install the dependencies that way, and the tests will probably timeout and get cancelled. In the current travis ci configuration uses pip with wheels to install numpy/scipy much faster.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/76#issuecomment-36083480
https://github.com/qutip/qutip/pull/76#issuecomment-36083480:258,Deployability,configurat,configuration,258,"Hmm, it still seems to use the old travis ci configuration, where I tried to install numpy/scipy with pip without wheels. But took too long to install the dependencies that way, and the tests will probably timeout and get cancelled. In the current travis ci configuration uses pip with wheels to install numpy/scipy much faster.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/76#issuecomment-36083480
https://github.com/qutip/qutip/pull/76#issuecomment-36083480:296,Deployability,install,install,296,"Hmm, it still seems to use the old travis ci configuration, where I tried to install numpy/scipy with pip without wheels. But took too long to install the dependencies that way, and the tests will probably timeout and get cancelled. In the current travis ci configuration uses pip with wheels to install numpy/scipy much faster.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/76#issuecomment-36083480
https://github.com/qutip/qutip/pull/76#issuecomment-36083480:155,Integrability,depend,dependencies,155,"Hmm, it still seems to use the old travis ci configuration, where I tried to install numpy/scipy with pip without wheels. But took too long to install the dependencies that way, and the tests will probably timeout and get cancelled. In the current travis ci configuration uses pip with wheels to install numpy/scipy much faster.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/76#issuecomment-36083480
https://github.com/qutip/qutip/pull/76#issuecomment-36083480:45,Modifiability,config,configuration,45,"Hmm, it still seems to use the old travis ci configuration, where I tried to install numpy/scipy with pip without wheels. But took too long to install the dependencies that way, and the tests will probably timeout and get cancelled. In the current travis ci configuration uses pip with wheels to install numpy/scipy much faster.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/76#issuecomment-36083480
https://github.com/qutip/qutip/pull/76#issuecomment-36083480:258,Modifiability,config,configuration,258,"Hmm, it still seems to use the old travis ci configuration, where I tried to install numpy/scipy with pip without wheels. But took too long to install the dependencies that way, and the tests will probably timeout and get cancelled. In the current travis ci configuration uses pip with wheels to install numpy/scipy much faster.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/76#issuecomment-36083480
https://github.com/qutip/qutip/pull/76#issuecomment-36083480:206,Safety,timeout,timeout,206,"Hmm, it still seems to use the old travis ci configuration, where I tried to install numpy/scipy with pip without wheels. But took too long to install the dependencies that way, and the tests will probably timeout and get cancelled. In the current travis ci configuration uses pip with wheels to install numpy/scipy much faster.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/76#issuecomment-36083480
https://github.com/qutip/qutip/pull/76#issuecomment-36083480:186,Testability,test,tests,186,"Hmm, it still seems to use the old travis ci configuration, where I tried to install numpy/scipy with pip without wheels. But took too long to install the dependencies that way, and the tests will probably timeout and get cancelled. In the current travis ci configuration uses pip with wheels to install numpy/scipy much faster.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/76#issuecomment-36083480
https://github.com/qutip/qutip/pull/76#issuecomment-36083715:83,Testability,test,tested,83,"Travis appears to be buggy. When I closed/reopened to force a retest, it correctly tested ""Merge 60651d6 into 0711347"" but then when I added the celebratory comment it buggily started testing against an old version ""Merge 60651d6 into 42d1c72"". I guess I'll try rebasing, although I don't think I've ever done this before so I might screw it up.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/76#issuecomment-36083715
https://github.com/qutip/qutip/pull/76#issuecomment-36083715:184,Testability,test,testing,184,"Travis appears to be buggy. When I closed/reopened to force a retest, it correctly tested ""Merge 60651d6 into 0711347"" but then when I added the celebratory comment it buggily started testing against an old version ""Merge 60651d6 into 42d1c72"". I guess I'll try rebasing, although I don't think I've ever done this before so I might screw it up.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/76#issuecomment-36083715
https://github.com/qutip/qutip/pull/76#issuecomment-36084634:92,Deployability,continuous,continuous-benchmark,92,OK that seemed to work. I'm curious how these changes might affect https://github.com/qutip/continuous-benchmark,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/76#issuecomment-36084634
https://github.com/qutip/qutip/pull/76#issuecomment-36084634:103,Testability,benchmark,benchmark,103,OK that seemed to work. I'm curious how these changes might affect https://github.com/qutip/continuous-benchmark,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/76#issuecomment-36084634
https://github.com/qutip/qutip/pull/76#issuecomment-36086389:33,Deployability,continuous,continuous-benchmark,33,Unfortunately I do not think the continuous-benchmark tests that we have in https://github.com/qutip/continuous-benchmark covers any of the code that has been changed in this PR.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/76#issuecomment-36086389
https://github.com/qutip/qutip/pull/76#issuecomment-36086389:101,Deployability,continuous,continuous-benchmark,101,Unfortunately I do not think the continuous-benchmark tests that we have in https://github.com/qutip/continuous-benchmark covers any of the code that has been changed in this PR.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/76#issuecomment-36086389
https://github.com/qutip/qutip/pull/76#issuecomment-36086389:44,Testability,benchmark,benchmark,44,Unfortunately I do not think the continuous-benchmark tests that we have in https://github.com/qutip/continuous-benchmark covers any of the code that has been changed in this PR.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/76#issuecomment-36086389
https://github.com/qutip/qutip/pull/76#issuecomment-36086389:54,Testability,test,tests,54,Unfortunately I do not think the continuous-benchmark tests that we have in https://github.com/qutip/continuous-benchmark covers any of the code that has been changed in this PR.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/76#issuecomment-36086389
https://github.com/qutip/qutip/pull/76#issuecomment-36086389:112,Testability,benchmark,benchmark,112,Unfortunately I do not think the continuous-benchmark tests that we have in https://github.com/qutip/continuous-benchmark covers any of the code that has been changed in this PR.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/76#issuecomment-36086389
https://github.com/qutip/qutip/pull/76#issuecomment-36465061:449,Deployability,release,release,449,"I opened an issue https://github.com/scipy/scipy/issues/3424 for this, but it will probably not happen unless a PR mysteriously appears at the doorstep. Also consider that combinations of {linux, pc, mac} x {32 bit OS, 64 bit} x {small matrices (< 2^31 rows, cols, nnz), big matrices} will probably have to be tested somehow. Getting sparse matrix algorithms to work on all these combinations seems to have been a sticking point in the recent scipy release.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/76#issuecomment-36465061
https://github.com/qutip/qutip/pull/76#issuecomment-36465061:310,Testability,test,tested,310,"I opened an issue https://github.com/scipy/scipy/issues/3424 for this, but it will probably not happen unless a PR mysteriously appears at the doorstep. Also consider that combinations of {linux, pc, mac} x {32 bit OS, 64 bit} x {small matrices (< 2^31 rows, cols, nnz), big matrices} will probably have to be tested somehow. Getting sparse matrix algorithms to work on all these combinations seems to have been a sticking point in the recent scipy release.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/76#issuecomment-36465061
https://github.com/qutip/qutip/issues/77#issuecomment-35958903:112,Testability,test,tests,112,"Hi. I've been looking in to this and plan to add it at some point, but we would need to rework some of our unit tests before adding travisci (because some of our tests take too long to run).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/77#issuecomment-35958903
https://github.com/qutip/qutip/issues/77#issuecomment-35958903:162,Testability,test,tests,162,"Hi. I've been looking in to this and plan to add it at some point, but we would need to rework some of our unit tests before adding travisci (because some of our tests take too long to run).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/77#issuecomment-35958903
https://github.com/qutip/qutip/issues/77#issuecomment-35959405:299,Availability,toler,tolerate,299,"scipy deals with some slow tests by decorating them using `@slow` from `numpy.testing.decorators` and then using something like `nosetests` for testing. So TravisCI by default will not run the slow tests, but you can manually override this option if you want to run them locally. Also TravisCI will tolerate quite slow tests up to maybe 50min total (build+test).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/77#issuecomment-35959405
https://github.com/qutip/qutip/issues/77#issuecomment-35959405:27,Testability,test,tests,27,"scipy deals with some slow tests by decorating them using `@slow` from `numpy.testing.decorators` and then using something like `nosetests` for testing. So TravisCI by default will not run the slow tests, but you can manually override this option if you want to run them locally. Also TravisCI will tolerate quite slow tests up to maybe 50min total (build+test).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/77#issuecomment-35959405
https://github.com/qutip/qutip/issues/77#issuecomment-35959405:78,Testability,test,testing,78,"scipy deals with some slow tests by decorating them using `@slow` from `numpy.testing.decorators` and then using something like `nosetests` for testing. So TravisCI by default will not run the slow tests, but you can manually override this option if you want to run them locally. Also TravisCI will tolerate quite slow tests up to maybe 50min total (build+test).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/77#issuecomment-35959405
https://github.com/qutip/qutip/issues/77#issuecomment-35959405:144,Testability,test,testing,144,"scipy deals with some slow tests by decorating them using `@slow` from `numpy.testing.decorators` and then using something like `nosetests` for testing. So TravisCI by default will not run the slow tests, but you can manually override this option if you want to run them locally. Also TravisCI will tolerate quite slow tests up to maybe 50min total (build+test).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/77#issuecomment-35959405
https://github.com/qutip/qutip/issues/77#issuecomment-35959405:198,Testability,test,tests,198,"scipy deals with some slow tests by decorating them using `@slow` from `numpy.testing.decorators` and then using something like `nosetests` for testing. So TravisCI by default will not run the slow tests, but you can manually override this option if you want to run them locally. Also TravisCI will tolerate quite slow tests up to maybe 50min total (build+test).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/77#issuecomment-35959405
https://github.com/qutip/qutip/issues/77#issuecomment-35959405:319,Testability,test,tests,319,"scipy deals with some slow tests by decorating them using `@slow` from `numpy.testing.decorators` and then using something like `nosetests` for testing. So TravisCI by default will not run the slow tests, but you can manually override this option if you want to run them locally. Also TravisCI will tolerate quite slow tests up to maybe 50min total (build+test).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/77#issuecomment-35959405
https://github.com/qutip/qutip/issues/77#issuecomment-35959405:356,Testability,test,test,356,"scipy deals with some slow tests by decorating them using `@slow` from `numpy.testing.decorators` and then using something like `nosetests` for testing. So TravisCI by default will not run the slow tests, but you can manually override this option if you want to run them locally. Also TravisCI will tolerate quite slow tests up to maybe 50min total (build+test).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/77#issuecomment-35959405
https://github.com/qutip/qutip/issues/80#issuecomment-76656356:88,Deployability,install,installer,88,"As discussed earlier, we will move the mcf90 solver into its own module with a separate installer",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/80#issuecomment-76656356
https://github.com/qutip/qutip/pull/83#issuecomment-36420130:445,Testability,test,tests,445,"Hi Ben. Thanks for getting back to his and finding the problem! However I think this PR has become a bit messy. I'm a bit concerned with f4e6dccb726d7d35415fd2208c4a4b84faab685d which seems to have introduced some merge conflicts and many changes. I think it is better to you create a new branch, apply the changes you want and create a new PR. I think this would create a much cleaner merge and perhaps fix the problems with the failing travis tests.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/83#issuecomment-36420130
https://github.com/qutip/qutip/issues/84#issuecomment-242475532:158,Testability,test,testing,158,"I have finally gotten around to look at this. Compared to usual ODE evolution, the expm_multiply (as of SciPy 0.18) is over an order of magnitude slower when testing against simple harmonic oscillator evolution. Profiling showed that the inf and one norms were the main issue as they cannot call BLAS functions for complex numbers. I wrote Cython versions that were ~5x faster. The next profile suggested replacing the dot calls with our own spmv. All together, I could get a factor of 3x improvement over the base SciPy code, but the spmv is still the dominate time consumer, so there is nothing further I could do to speed things up.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/84#issuecomment-242475532
https://github.com/qutip/qutip/issues/84#issuecomment-242475532:174,Usability,simpl,simple,174,"I have finally gotten around to look at this. Compared to usual ODE evolution, the expm_multiply (as of SciPy 0.18) is over an order of magnitude slower when testing against simple harmonic oscillator evolution. Profiling showed that the inf and one norms were the main issue as they cannot call BLAS functions for complex numbers. I wrote Cython versions that were ~5x faster. The next profile suggested replacing the dot calls with our own spmv. All together, I could get a factor of 3x improvement over the base SciPy code, but the spmv is still the dominate time consumer, so there is nothing further I could do to speed things up.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/84#issuecomment-242475532
https://github.com/qutip/qutip/pull/85#issuecomment-36420410:69,Testability,test,tests,69,"Excellent, thank you! I'll wait and see what happens with the travis tests.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/85#issuecomment-36420410
https://github.com/qutip/qutip/pull/85#issuecomment-36420433:125,Testability,test,tests,125,"Perhaps you need to reverse the change 568d46e68513e2cca420f4292ab55abf9dadb316 that I made in an attempt to fix the failing tests, now that you have fixed super_to_choi?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/85#issuecomment-36420433
https://github.com/qutip/qutip/pull/85#issuecomment-36421094:19,Testability,test,tests,19,"Thanks!! Since the tests are passing now I'll merge now. Do you think you could write a short tutorial on how to use these modules, or perhaps some examples that introduce how the transformations between superoperators, kraus and choi representations are connected (it doesn't need to be very long) ? It would be nice with some examples, perhaps as an IPython notebook to be added to the collection we have here:. https://github.com/qutip/qutip-notebooks/tree/master/examples",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/85#issuecomment-36421094
https://github.com/qutip/qutip/issues/88#issuecomment-37779597:291,Modifiability,maintainab,maintainable,291,"As I mentioned in the discussion of #90, I think it would make more sense to add this information in Qobj.superrep rather than allowing Qobj.type to have more values, because for some purposes it is sufficient to know if Qobj is a superoperator or not, and it would be a lot easier and more maintainable to add new types of superoperator represenations if we don't have to make changes in many places in the code (which check if Qobj.type is a superoperator)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/88#issuecomment-37779597
https://github.com/qutip/qutip/issues/88#issuecomment-37781929:216,Usability,feedback,feedback,216,"Sounds good. I think that makes sense in a lot of ways, but I was initially wary of adding additional attributes. I'd be happy to rework PR #90 to be in terms of a new attribute `Qobj.superrep`, then. Thanks for the feedback!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/88#issuecomment-37781929
https://github.com/qutip/qutip/pull/90#issuecomment-37779230:21,Deployability,patch,patch,21,"You probably need to patch this line in Qobj.norm. https://github.com/cgranade/qutip/blob/feature-supermeta/qutip/qobj.py#L766. so that matrix norm functions are used instead of vector norm. . But there are probably many other places where the code relies on Qobj.type being either of ket/bra/oper/super, so I think it might be a better idea to add the new information about the superoperator representation in another Qobj attribute, such as Qobj.superrep.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/90#issuecomment-37779230
https://github.com/qutip/qutip/pull/90#issuecomment-37784118:99,Testability,test,tests,99,"With the change away from `type='choi'` for `superrep='choi'` instead, `norm()` now works, and the tests all pass on my local machine. Additionally, I added an implementation of an average gate fidelity function that uses the new `to_choi`, `to_super` and `to_kraus` functions to calculate fidelities from any of several superreps.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/90#issuecomment-37784118
https://github.com/qutip/qutip/pull/90#issuecomment-37785827:70,Testability,test,tests,70,"I went on and applied the changes you suggested, including adding new tests to ensure that the conditions mentioned in the new docstrings are correct. To finish it up, made sure that `average_gate_fidelity` is covered by a new test as well. Please let me know if there's anything else I can add to this PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/90#issuecomment-37785827
https://github.com/qutip/qutip/pull/90#issuecomment-37785827:227,Testability,test,test,227,"I went on and applied the changes you suggested, including adding new tests to ensure that the conditions mentioned in the new docstrings are correct. To finish it up, made sure that `average_gate_fidelity` is covered by a new test as well. Please let me know if there's anything else I can add to this PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/90#issuecomment-37785827
https://github.com/qutip/qutip/pull/90#issuecomment-37786513:425,Safety,avoid,avoid,425,"I made some tests with this PR and ran into one problem: the iscptp is very computationally demanding for large system, so it cannot be used in the `__str__` and `_latex_repr_`, because it prevents large systems from being displayed. Also, whether a super operator is CPTP is not always relevant so it does not need to be shown in every printed Qobj. Also, superrep should probably only be displayed if it is not 'super' (to avoid both type and superrep duplicating the same information),",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/90#issuecomment-37786513
https://github.com/qutip/qutip/pull/90#issuecomment-37786513:12,Testability,test,tests,12,"I made some tests with this PR and ran into one problem: the iscptp is very computationally demanding for large system, so it cannot be used in the `__str__` and `_latex_repr_`, because it prevents large systems from being displayed. Also, whether a super operator is CPTP is not always relevant so it does not need to be shown in every printed Qobj. Also, superrep should probably only be displayed if it is not 'super' (to avoid both type and superrep duplicating the same information),",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/90#issuecomment-37786513
https://github.com/qutip/qutip/pull/90#issuecomment-37786575:26,Testability,test,tests,26,"As for the failing travis tests, don't use xrange since it is not python 3 compatible.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/90#issuecomment-37786575
https://github.com/qutip/qutip/pull/94#issuecomment-38997570:5,Testability,test,tests,5,"Unit tests for superop_reps now work on my system, and without the ugly import hack I was using earlier. Thanks for teaching me that trick! Once Travis catches up, hopefully this should do it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/94#issuecomment-38997570
https://github.com/qutip/qutip/pull/95#issuecomment-39346763:100,Testability,test,tests,100,"With all the new checks you've added for arithmetic on superoperators, it might be good to add unit tests to make sure those new checks don't regress. If you like, I can work on doing that in a new branch after this PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/95#issuecomment-39346763
https://github.com/qutip/qutip/pull/95#issuecomment-39404287:30,Testability,test,test,30,"@cgranade thanks, better unit test coverage would be highly appreciated. I'm about to add a few more tests before merging this PR, but there will be plenty of room for additional test after this PR is merged and it would be great if you could have a look at that.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/95#issuecomment-39404287
https://github.com/qutip/qutip/pull/95#issuecomment-39404287:101,Testability,test,tests,101,"@cgranade thanks, better unit test coverage would be highly appreciated. I'm about to add a few more tests before merging this PR, but there will be plenty of room for additional test after this PR is merged and it would be great if you could have a look at that.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/95#issuecomment-39404287
https://github.com/qutip/qutip/pull/95#issuecomment-39404287:179,Testability,test,test,179,"@cgranade thanks, better unit test coverage would be highly appreciated. I'm about to add a few more tests before merging this PR, but there will be plenty of room for additional test after this PR is merged and it would be great if you could have a look at that.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/95#issuecomment-39404287
https://github.com/qutip/qutip/issues/96#issuecomment-39052411:46,Modifiability,refactor,refactoring,46,"Thanks for reporting this bug. I'm working on refactoring the Qobj class in PR #95, and I have tried to fix this problem there. The PR is still work in progress though, and not quite ready for merging yet, but I think the problems you describe are fixed now. If you are interested you are very welcome to try it with the cleanup-qobj branch which that PR is based on. Code reviewing and general comments on the changes would also be very welcome of course :-)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/96#issuecomment-39052411
https://github.com/qutip/qutip/issues/96#issuecomment-39052803:214,Testability,test,test,214,"Glad to be of service! I've been using a MATLAB-based library for most of my open-systems work, and I'm really excited to be able to move more things over to Python, thanks to QuTiP. Anyway, I can confirm that the test cases above now work as expected, and that `E_psi` correctly is identified as an `operator-bra`. As for code review, I'd be happy to help. It's a little late here, but I'll get to it soon.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/96#issuecomment-39052803
https://github.com/qutip/qutip/issues/96#issuecomment-39093076:62,Usability,learn,learning,62,"I've marked out a few things that I noticed, though I'm still learning about the internals, so I'm not sure I caught anything of great importance. As for terminology for `type`, I don't see anything wrong with `operator-ket` or `operator-bra`, nor am I sure that there's any particularly standard terminology. Especially given that your terminology choice is clearly marked in `Qobj`'s docstring, I think it works quite well.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/96#issuecomment-39093076
https://github.com/qutip/qutip/issues/96#issuecomment-39093076:359,Usability,clear,clearly,359,"I've marked out a few things that I noticed, though I'm still learning about the internals, so I'm not sure I caught anything of great importance. As for terminology for `type`, I don't see anything wrong with `operator-ket` or `operator-bra`, nor am I sure that there's any particularly standard terminology. Especially given that your terminology choice is clearly marked in `Qobj`'s docstring, I think it works quite well.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/96#issuecomment-39093076
https://github.com/qutip/qutip/pull/97#issuecomment-39404327:60,Testability,test,tests,60,"Thanks, this is looking good. I think resolving the failing tests could wait until after PR #95 is merged.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/97#issuecomment-39404327
https://github.com/qutip/qutip/pull/97#issuecomment-39652247:131,Availability,failure,failures,131,"Now that #99 is coming along, I went back to this one, and it seems to fix the unit tests for the new superrep. There's still some failures left over from #99, but they don't seem to be caused by the chi matrix support.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/97#issuecomment-39652247
https://github.com/qutip/qutip/pull/97#issuecomment-39652247:84,Testability,test,tests,84,"Now that #99 is coming along, I went back to this one, and it seems to fix the unit tests for the new superrep. There's still some failures left over from #99, but they don't seem to be caused by the chi matrix support.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/97#issuecomment-39652247
https://github.com/qutip/qutip/pull/99#issuecomment-39528800:556,Availability,error,error,556,"I'm not sure about this, but I think that we should keep tensor as simple as possible. Meaning that we could support tensor products of superoperators with the same representation, if that operation makes any sense, but not have it converting between different representations or doing any reshuffling to make sure that `to_super(tensor(A, B)) == tensor(to_super(A), to_super(B))`. If there are any important use-cases where this property would be important we could reconsider this. Do you have any examples in mind?. If not I would recommend we raise an error if tensor is called with superoperators with different representations, and set Qobj.superrep to the correct representation if all arguments are the same.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/99#issuecomment-39528800
https://github.com/qutip/qutip/pull/99#issuecomment-39528800:67,Usability,simpl,simple,67,"I'm not sure about this, but I think that we should keep tensor as simple as possible. Meaning that we could support tensor products of superoperators with the same representation, if that operation makes any sense, but not have it converting between different representations or doing any reshuffling to make sure that `to_super(tensor(A, B)) == tensor(to_super(A), to_super(B))`. If there are any important use-cases where this property would be important we could reconsider this. Do you have any examples in mind?. If not I would recommend we raise an error if tensor is called with superoperators with different representations, and set Qobj.superrep to the correct representation if all arguments are the same.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/99#issuecomment-39528800
https://github.com/qutip/qutip/pull/99#issuecomment-39529579:38,Usability,simpl,simple,38,"I like the idea of keeping `tensor()` simple, and a literal implementation of the tensor product— while there is a usecase for the reshuffling in that way (it's actually pretty common if you have a channel that you want to act on each subsystem in some register), I think your strategy makes a lot of sense for `tensor()` itself.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/99#issuecomment-39529579
https://github.com/qutip/qutip/pull/99#issuecomment-39531063:168,Availability,error,error,168,"Cool, that would be nice. I'll have a look at restructuring qutip.tensor.tensor a bit so that it at least preserves the superreps attribute when possible and raises an error when called with superoperators with different superreps.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/99#issuecomment-39531063
https://github.com/qutip/qutip/pull/99#issuecomment-39584350:66,Testability,test,tests,66,"The new `super_tensor` function now works and passes all relevant tests. This required getting permutation defined and working for superoperators, which in turn will need better documentation.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/99#issuecomment-39584350
https://github.com/qutip/qutip/pull/99#issuecomment-39624151:29,Testability,test,test,29,"Nice work! Still a few units test that fails, both in travis and on my local machine when testing this branch. Mostly minor stuff. Will merge when that has been sorted out.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/99#issuecomment-39624151
https://github.com/qutip/qutip/pull/99#issuecomment-39624151:90,Testability,test,testing,90,"Nice work! Still a few units test that fails, both in travis and on my local machine when testing this branch. Mostly minor stuff. Will merge when that has been sorted out.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/99#issuecomment-39624151
https://github.com/qutip/qutip/pull/99#issuecomment-39650759:14,Availability,failure,failure,14,"Turns out the failure in the Python 2 tests was because `Qobj` was declared `class Qobj():`, which supports getting properties, but not setting them. Thus, `isherm = None` was overriding the property call. I have less experience with Python 3, though, so I'm not sure why the reshuffling is causing the `dims` property to be set to `[[], []]`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/99#issuecomment-39650759
https://github.com/qutip/qutip/pull/99#issuecomment-39650759:38,Testability,test,tests,38,"Turns out the failure in the Python 2 tests was because `Qobj` was declared `class Qobj():`, which supports getting properties, but not setting them. Thus, `isherm = None` was overriding the property call. I have less experience with Python 3, though, so I'm not sure why the reshuffling is causing the `dims` property to be set to `[[], []]`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/99#issuecomment-39650759
https://github.com/qutip/qutip/pull/99#issuecomment-39657663:117,Testability,test,tests,117,"Right. I forgot that I had used map there, too. Anyway, it's fixed now, and that makes the `test_superoperator` unit tests pass on my system with Python 3.3.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/99#issuecomment-39657663
https://github.com/qutip/qutip/pull/99#issuecomment-39657680:159,Testability,test,test,159,"Thanks. Both py2.7 and py3.3 passes on my system too now, so this should be ready for merging. Thanks a lot of all the work on this. I'll just wait for travis test to run as a final check.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/99#issuecomment-39657680
https://github.com/qutip/qutip/issues/101#issuecomment-39626760:20,Modifiability,enhance,enhancement,20,I have started this enhancement.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/101#issuecomment-39626760
https://github.com/qutip/qutip/issues/101#issuecomment-39639648:92,Testability,test,test,92,Sounds cool. It would be nice with an early PR on this so one could follow the progress and test/bm it before it lands in master.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/101#issuecomment-39639648
https://github.com/qutip/qutip/pull/105#issuecomment-41377018:975,Security,expose,exposed,975,"@jrjohansson Thanks for comments, and I am happy you like it!. I will fix things (also, there is some internal stuff). With respect to plots - still I learnt them how to _make_ plots instead of just _using_ them, so after I make fixes I would appreciate . `complex_array_to_rgb` I am exposing it on purpose, not by an accident (see `__init__.py`).; The rationale is following: in QM one works with complex numbers, be it in wave functions, density matrices or other operators. However, I am not aware of cmap-like functions for complex numbers in Scipy (except for some dedicated packages; see also: [my answer to this StackOverflow question](http://stackoverflow.com/questions/15207255/is-there-any-way-to-use-bivariate-colormaps-in-matplotlib/17113417#17113417)). If you do know a more standard/supported/general/canonical method of mapping complex numbers to colors, I would be happy to use it (instead of `complex_array_to_rgb`). Otherwise, having `complex_array_to_rgb` exposed allows plotting other kinds of things.; For example:. ```; imshow(complex_array_to_rgb(a_density_matrix.full()), interpolation='none'); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/105#issuecomment-41377018
https://github.com/qutip/qutip/pull/105#issuecomment-41377018:151,Usability,learn,learnt,151,"@jrjohansson Thanks for comments, and I am happy you like it!. I will fix things (also, there is some internal stuff). With respect to plots - still I learnt them how to _make_ plots instead of just _using_ them, so after I make fixes I would appreciate . `complex_array_to_rgb` I am exposing it on purpose, not by an accident (see `__init__.py`).; The rationale is following: in QM one works with complex numbers, be it in wave functions, density matrices or other operators. However, I am not aware of cmap-like functions for complex numbers in Scipy (except for some dedicated packages; see also: [my answer to this StackOverflow question](http://stackoverflow.com/questions/15207255/is-there-any-way-to-use-bivariate-colormaps-in-matplotlib/17113417#17113417)). If you do know a more standard/supported/general/canonical method of mapping complex numbers to colors, I would be happy to use it (instead of `complex_array_to_rgb`). Otherwise, having `complex_array_to_rgb` exposed allows plotting other kinds of things.; For example:. ```; imshow(complex_array_to_rgb(a_density_matrix.full()), interpolation='none'); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/105#issuecomment-41377018
https://github.com/qutip/qutip/pull/105#issuecomment-41473950:806,Energy Efficiency,green,green,806,"OK, I see. `complex_array_to_rgb` could be useful in other contexts as well. I am not aware of any standard way of doing this, but if you are interested in this kind of mapping you might want to have a look at a similar mapping of complex values to color that we have in the function `matrix_histogram_complex`. In that case we map only the phase to the color, and the magnitude is shown by the bar heights, but if you map the magnitude to the alpha channel or the overall intensity you get something the is similar to what you use. For example, with the code from `matrix_histogram_complex` you get something like. ```; x = np.linspace(-5, 5, 100); X, Y = np.meshgrid(x,x); Z = X + 1j * Y; cdict = {'blue': ((0.00, 0.0, 0.0),; (0.25, 0.0, 0.0),; (0.50, 1.0, 1.0),; (0.75, 1.0, 1.0),; (1.00, 0.0, 0.0)),; 'green': ((0.00, 0.0, 0.0),; (0.25, 1.0, 1.0),; (0.50, 0.0, 0.0),; (0.75, 1.0, 1.0),; (1.00, 0.0, 0.0)),; 'red': ((0.00, 1.0, 1.0),; (0.25, 0.5, 0.5),; (0.50, 0.0, 0.0),; (0.75, 0.0, 0.0),; (1.00, 1.0, 1.0))}. cmap = mpl.colors.LinearSegmentedColormap('phase_colormap', cdict, 256); norm = mpl.colors.Normalize(-pi, pi); colors = cmap(norm(np.angle(Z))); colors[:,:,3] = sqrt(abs(Z)) / sqrt(abs(Z)).max(). plt.imshow(colors, interpolation='none');; ```. which produces the following map of the complex plane:. ![complex-plane-2](https://cloud.githubusercontent.com/assets/1198183/2809239/c3f6c3cc-cd61-11e3-83a1-cc4fff3f303c.png). compared to. ```; plt.imshow(complex_array_to_rgb(Z), interpolation='none');; ```. which produces. ![complex-plane-1](https://cloud.githubusercontent.com/assets/1198183/2809256/29caad3e-cd63-11e3-8e7a-3187afc2744f.png). Either mapping is fine of course, but I think a nice property of the first one is that real numbers and imaginary numbers are mapped to simple colors (real positive->blue, negative->red and imaginary positive green, imaginary negative turquoise), and complex number with both real and imaginary part are mapped to colors that are relatively simp",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/105#issuecomment-41473950
https://github.com/qutip/qutip/pull/105#issuecomment-41473950:1865,Energy Efficiency,green,green,1865,"ex_array_to_rgb` could be useful in other contexts as well. I am not aware of any standard way of doing this, but if you are interested in this kind of mapping you might want to have a look at a similar mapping of complex values to color that we have in the function `matrix_histogram_complex`. In that case we map only the phase to the color, and the magnitude is shown by the bar heights, but if you map the magnitude to the alpha channel or the overall intensity you get something the is similar to what you use. For example, with the code from `matrix_histogram_complex` you get something like. ```; x = np.linspace(-5, 5, 100); X, Y = np.meshgrid(x,x); Z = X + 1j * Y; cdict = {'blue': ((0.00, 0.0, 0.0),; (0.25, 0.0, 0.0),; (0.50, 1.0, 1.0),; (0.75, 1.0, 1.0),; (1.00, 0.0, 0.0)),; 'green': ((0.00, 0.0, 0.0),; (0.25, 1.0, 1.0),; (0.50, 0.0, 0.0),; (0.75, 1.0, 1.0),; (1.00, 0.0, 0.0)),; 'red': ((0.00, 1.0, 1.0),; (0.25, 0.5, 0.5),; (0.50, 0.0, 0.0),; (0.75, 0.0, 0.0),; (1.00, 1.0, 1.0))}. cmap = mpl.colors.LinearSegmentedColormap('phase_colormap', cdict, 256); norm = mpl.colors.Normalize(-pi, pi); colors = cmap(norm(np.angle(Z))); colors[:,:,3] = sqrt(abs(Z)) / sqrt(abs(Z)).max(). plt.imshow(colors, interpolation='none');; ```. which produces the following map of the complex plane:. ![complex-plane-2](https://cloud.githubusercontent.com/assets/1198183/2809239/c3f6c3cc-cd61-11e3-83a1-cc4fff3f303c.png). compared to. ```; plt.imshow(complex_array_to_rgb(Z), interpolation='none');; ```. which produces. ![complex-plane-1](https://cloud.githubusercontent.com/assets/1198183/2809256/29caad3e-cd63-11e3-8e7a-3187afc2744f.png). Either mapping is fine of course, but I think a nice property of the first one is that real numbers and imaginary numbers are mapped to simple colors (real positive->blue, negative->red and imaginary positive green, imaginary negative turquoise), and complex number with both real and imaginary part are mapped to colors that are relatively simple to interpret.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/105#issuecomment-41473950
https://github.com/qutip/qutip/pull/105#issuecomment-41473950:1792,Usability,simpl,simple,1792,"ex_array_to_rgb` could be useful in other contexts as well. I am not aware of any standard way of doing this, but if you are interested in this kind of mapping you might want to have a look at a similar mapping of complex values to color that we have in the function `matrix_histogram_complex`. In that case we map only the phase to the color, and the magnitude is shown by the bar heights, but if you map the magnitude to the alpha channel or the overall intensity you get something the is similar to what you use. For example, with the code from `matrix_histogram_complex` you get something like. ```; x = np.linspace(-5, 5, 100); X, Y = np.meshgrid(x,x); Z = X + 1j * Y; cdict = {'blue': ((0.00, 0.0, 0.0),; (0.25, 0.0, 0.0),; (0.50, 1.0, 1.0),; (0.75, 1.0, 1.0),; (1.00, 0.0, 0.0)),; 'green': ((0.00, 0.0, 0.0),; (0.25, 1.0, 1.0),; (0.50, 0.0, 0.0),; (0.75, 1.0, 1.0),; (1.00, 0.0, 0.0)),; 'red': ((0.00, 1.0, 1.0),; (0.25, 0.5, 0.5),; (0.50, 0.0, 0.0),; (0.75, 0.0, 0.0),; (1.00, 1.0, 1.0))}. cmap = mpl.colors.LinearSegmentedColormap('phase_colormap', cdict, 256); norm = mpl.colors.Normalize(-pi, pi); colors = cmap(norm(np.angle(Z))); colors[:,:,3] = sqrt(abs(Z)) / sqrt(abs(Z)).max(). plt.imshow(colors, interpolation='none');; ```. which produces the following map of the complex plane:. ![complex-plane-2](https://cloud.githubusercontent.com/assets/1198183/2809239/c3f6c3cc-cd61-11e3-83a1-cc4fff3f303c.png). compared to. ```; plt.imshow(complex_array_to_rgb(Z), interpolation='none');; ```. which produces. ![complex-plane-1](https://cloud.githubusercontent.com/assets/1198183/2809256/29caad3e-cd63-11e3-8e7a-3187afc2744f.png). Either mapping is fine of course, but I think a nice property of the first one is that real numbers and imaginary numbers are mapped to simple colors (real positive->blue, negative->red and imaginary positive green, imaginary negative turquoise), and complex number with both real and imaginary part are mapped to colors that are relatively simple to interpret.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/105#issuecomment-41473950
https://github.com/qutip/qutip/pull/105#issuecomment-41473950:1997,Usability,simpl,simple,1997,"ex_array_to_rgb` could be useful in other contexts as well. I am not aware of any standard way of doing this, but if you are interested in this kind of mapping you might want to have a look at a similar mapping of complex values to color that we have in the function `matrix_histogram_complex`. In that case we map only the phase to the color, and the magnitude is shown by the bar heights, but if you map the magnitude to the alpha channel or the overall intensity you get something the is similar to what you use. For example, with the code from `matrix_histogram_complex` you get something like. ```; x = np.linspace(-5, 5, 100); X, Y = np.meshgrid(x,x); Z = X + 1j * Y; cdict = {'blue': ((0.00, 0.0, 0.0),; (0.25, 0.0, 0.0),; (0.50, 1.0, 1.0),; (0.75, 1.0, 1.0),; (1.00, 0.0, 0.0)),; 'green': ((0.00, 0.0, 0.0),; (0.25, 1.0, 1.0),; (0.50, 0.0, 0.0),; (0.75, 1.0, 1.0),; (1.00, 0.0, 0.0)),; 'red': ((0.00, 1.0, 1.0),; (0.25, 0.5, 0.5),; (0.50, 0.0, 0.0),; (0.75, 0.0, 0.0),; (1.00, 1.0, 1.0))}. cmap = mpl.colors.LinearSegmentedColormap('phase_colormap', cdict, 256); norm = mpl.colors.Normalize(-pi, pi); colors = cmap(norm(np.angle(Z))); colors[:,:,3] = sqrt(abs(Z)) / sqrt(abs(Z)).max(). plt.imshow(colors, interpolation='none');; ```. which produces the following map of the complex plane:. ![complex-plane-2](https://cloud.githubusercontent.com/assets/1198183/2809239/c3f6c3cc-cd61-11e3-83a1-cc4fff3f303c.png). compared to. ```; plt.imshow(complex_array_to_rgb(Z), interpolation='none');; ```. which produces. ![complex-plane-1](https://cloud.githubusercontent.com/assets/1198183/2809256/29caad3e-cd63-11e3-8e7a-3187afc2744f.png). Either mapping is fine of course, but I think a nice property of the first one is that real numbers and imaginary numbers are mapped to simple colors (real positive->blue, negative->red and imaginary positive green, imaginary negative turquoise), and complex number with both real and imaginary part are mapped to colors that are relatively simple to interpret.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/105#issuecomment-41473950
https://github.com/qutip/qutip/pull/105#issuecomment-41480460:1410,Energy Efficiency,green,green,1410,"cal. ; (And in quantum mechanics negative values is not much different from any other complex value.). On 26 Apr 2014, at 18:55, Robert Johansson notifications@github.com wrote:. > OK, I see. complex_array_to_rgb could be useful in other contexts as well. I am not aware of any standard way of doing this, but if you are interested in this kind of mapping you might want to have a look at a similar mapping of complex values to color that we have in the function matrix_histogram_complex. In that case we map only the phase to the color, and the magnitude is shown by the bar heights, but if you map the magnitude to the alpha channel or the overall intensity you get something the is similar to what you use. For example, with the code from matrix_histogram_complex you get something like; > ; > x = np.linspace(-5, 5, 100); > X, Y = np.meshgrid(x,x); > Z = X + 1j \* Y; > cdict = {'blue': ((0.00, 0.0, 0.0),; > (0.25, 0.0, 0.0),; > (0.50, 1.0, 1.0),; > (0.75, 1.0, 1.0),; > (1.00, 0.0, 0.0)),; > 'green': ((0.00, 0.0, 0.0),; > (0.25, 1.0, 1.0),; > (0.50, 0.0, 0.0),; > (0.75, 1.0, 1.0),; > (1.00, 0.0, 0.0)),; > 'red': ((0.00, 1.0, 1.0),; > (0.25, 0.5, 0.5),; > (0.50, 0.0, 0.0),; > (0.75, 0.0, 0.0),; > (1.00, 1.0, 1.0))}; > ; > cmap = mpl.colors.LinearSegmentedColormap('phase_colormap', cdict, 256); > norm = mpl.colors.Normalize(-pi, pi); > colors = cmap(norm(np.angle(Z))); > colors[:,:,3] = sqrt(abs(Z)) / sqrt(abs(Z)).max(); > ; > plt.imshow(colors, interpolation='none');; > which produces the following map of the complex plane:; > ; > compared to; > ; > plt.imshow(complex_array_to_rgb(Z), interpolation='none');; > which produces; > ; > Either mapping is fine of course, but I think a nice property of the first one is that real numbers and imaginary numbers are mapped to simple colors (real positive->blue, negative->red and imaginary positive green, imaginary negative turquoise), and complex number with both real and imaginary part are mapped to colors that are relatively simple to ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/105#issuecomment-41480460
https://github.com/qutip/qutip/pull/105#issuecomment-41480460:2270,Energy Efficiency,green,green,2270,"m any other complex value.). On 26 Apr 2014, at 18:55, Robert Johansson notifications@github.com wrote:. > OK, I see. complex_array_to_rgb could be useful in other contexts as well. I am not aware of any standard way of doing this, but if you are interested in this kind of mapping you might want to have a look at a similar mapping of complex values to color that we have in the function matrix_histogram_complex. In that case we map only the phase to the color, and the magnitude is shown by the bar heights, but if you map the magnitude to the alpha channel or the overall intensity you get something the is similar to what you use. For example, with the code from matrix_histogram_complex you get something like; > ; > x = np.linspace(-5, 5, 100); > X, Y = np.meshgrid(x,x); > Z = X + 1j \* Y; > cdict = {'blue': ((0.00, 0.0, 0.0),; > (0.25, 0.0, 0.0),; > (0.50, 1.0, 1.0),; > (0.75, 1.0, 1.0),; > (1.00, 0.0, 0.0)),; > 'green': ((0.00, 0.0, 0.0),; > (0.25, 1.0, 1.0),; > (0.50, 0.0, 0.0),; > (0.75, 1.0, 1.0),; > (1.00, 0.0, 0.0)),; > 'red': ((0.00, 1.0, 1.0),; > (0.25, 0.5, 0.5),; > (0.50, 0.0, 0.0),; > (0.75, 0.0, 0.0),; > (1.00, 1.0, 1.0))}; > ; > cmap = mpl.colors.LinearSegmentedColormap('phase_colormap', cdict, 256); > norm = mpl.colors.Normalize(-pi, pi); > colors = cmap(norm(np.angle(Z))); > colors[:,:,3] = sqrt(abs(Z)) / sqrt(abs(Z)).max(); > ; > plt.imshow(colors, interpolation='none');; > which produces the following map of the complex plane:; > ; > compared to; > ; > plt.imshow(complex_array_to_rgb(Z), interpolation='none');; > which produces; > ; > Either mapping is fine of course, but I think a nice property of the first one is that real numbers and imaginary numbers are mapped to simple colors (real positive->blue, negative->red and imaginary positive green, imaginary negative turquoise), and complex number with both real and imaginary part are mapped to colors that are relatively simple to interpret.; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/105#issuecomment-41480460
https://github.com/qutip/qutip/pull/105#issuecomment-41480460:2197,Usability,simpl,simple,2197,"m any other complex value.). On 26 Apr 2014, at 18:55, Robert Johansson notifications@github.com wrote:. > OK, I see. complex_array_to_rgb could be useful in other contexts as well. I am not aware of any standard way of doing this, but if you are interested in this kind of mapping you might want to have a look at a similar mapping of complex values to color that we have in the function matrix_histogram_complex. In that case we map only the phase to the color, and the magnitude is shown by the bar heights, but if you map the magnitude to the alpha channel or the overall intensity you get something the is similar to what you use. For example, with the code from matrix_histogram_complex you get something like; > ; > x = np.linspace(-5, 5, 100); > X, Y = np.meshgrid(x,x); > Z = X + 1j \* Y; > cdict = {'blue': ((0.00, 0.0, 0.0),; > (0.25, 0.0, 0.0),; > (0.50, 1.0, 1.0),; > (0.75, 1.0, 1.0),; > (1.00, 0.0, 0.0)),; > 'green': ((0.00, 0.0, 0.0),; > (0.25, 1.0, 1.0),; > (0.50, 0.0, 0.0),; > (0.75, 1.0, 1.0),; > (1.00, 0.0, 0.0)),; > 'red': ((0.00, 1.0, 1.0),; > (0.25, 0.5, 0.5),; > (0.50, 0.0, 0.0),; > (0.75, 0.0, 0.0),; > (1.00, 1.0, 1.0))}; > ; > cmap = mpl.colors.LinearSegmentedColormap('phase_colormap', cdict, 256); > norm = mpl.colors.Normalize(-pi, pi); > colors = cmap(norm(np.angle(Z))); > colors[:,:,3] = sqrt(abs(Z)) / sqrt(abs(Z)).max(); > ; > plt.imshow(colors, interpolation='none');; > which produces the following map of the complex plane:; > ; > compared to; > ; > plt.imshow(complex_array_to_rgb(Z), interpolation='none');; > which produces; > ; > Either mapping is fine of course, but I think a nice property of the first one is that real numbers and imaginary numbers are mapped to simple colors (real positive->blue, negative->red and imaginary positive green, imaginary negative turquoise), and complex number with both real and imaginary part are mapped to colors that are relatively simple to interpret.; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/105#issuecomment-41480460
https://github.com/qutip/qutip/pull/105#issuecomment-41480460:2402,Usability,simpl,simple,2402,"m any other complex value.). On 26 Apr 2014, at 18:55, Robert Johansson notifications@github.com wrote:. > OK, I see. complex_array_to_rgb could be useful in other contexts as well. I am not aware of any standard way of doing this, but if you are interested in this kind of mapping you might want to have a look at a similar mapping of complex values to color that we have in the function matrix_histogram_complex. In that case we map only the phase to the color, and the magnitude is shown by the bar heights, but if you map the magnitude to the alpha channel or the overall intensity you get something the is similar to what you use. For example, with the code from matrix_histogram_complex you get something like; > ; > x = np.linspace(-5, 5, 100); > X, Y = np.meshgrid(x,x); > Z = X + 1j \* Y; > cdict = {'blue': ((0.00, 0.0, 0.0),; > (0.25, 0.0, 0.0),; > (0.50, 1.0, 1.0),; > (0.75, 1.0, 1.0),; > (1.00, 0.0, 0.0)),; > 'green': ((0.00, 0.0, 0.0),; > (0.25, 1.0, 1.0),; > (0.50, 0.0, 0.0),; > (0.75, 1.0, 1.0),; > (1.00, 0.0, 0.0)),; > 'red': ((0.00, 1.0, 1.0),; > (0.25, 0.5, 0.5),; > (0.50, 0.0, 0.0),; > (0.75, 0.0, 0.0),; > (1.00, 1.0, 1.0))}; > ; > cmap = mpl.colors.LinearSegmentedColormap('phase_colormap', cdict, 256); > norm = mpl.colors.Normalize(-pi, pi); > colors = cmap(norm(np.angle(Z))); > colors[:,:,3] = sqrt(abs(Z)) / sqrt(abs(Z)).max(); > ; > plt.imshow(colors, interpolation='none');; > which produces the following map of the complex plane:; > ; > compared to; > ; > plt.imshow(complex_array_to_rgb(Z), interpolation='none');; > which produces; > ; > Either mapping is fine of course, but I think a nice property of the first one is that real numbers and imaginary numbers are mapped to simple colors (real positive->blue, negative->red and imaginary positive green, imaginary negative turquoise), and complex number with both real and imaginary part are mapped to colors that are relatively simple to interpret.; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/105#issuecomment-41480460
https://github.com/qutip/qutip/pull/105#issuecomment-43737566:74,Energy Efficiency,reduce,reduce,74,"Thanks!. I haven't thought about python3 (is it about divisions `//` and `reduce`, or did you spot other problems?). `numpy.prod` - I guess I should rather use it, since `numpy` is already there; (a second thought: at least in python2 for lists of few elements `reduce` is significantly faster; I am not sure though, it in this particular case it makes a difference). ```; from numpy import prod; from operator import mul. prod([1,2,3]) # 22.6 µs; reduce(mul, [1,2,3]) # 737 ns; ```. `plot_qubism` for density matrix it is a different plot. In any case, I will think about it when I doing it (and I will adopt to QuTiP guidelines).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/105#issuecomment-43737566
https://github.com/qutip/qutip/pull/105#issuecomment-43737566:262,Energy Efficiency,reduce,reduce,262,"Thanks!. I haven't thought about python3 (is it about divisions `//` and `reduce`, or did you spot other problems?). `numpy.prod` - I guess I should rather use it, since `numpy` is already there; (a second thought: at least in python2 for lists of few elements `reduce` is significantly faster; I am not sure though, it in this particular case it makes a difference). ```; from numpy import prod; from operator import mul. prod([1,2,3]) # 22.6 µs; reduce(mul, [1,2,3]) # 737 ns; ```. `plot_qubism` for density matrix it is a different plot. In any case, I will think about it when I doing it (and I will adopt to QuTiP guidelines).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/105#issuecomment-43737566
https://github.com/qutip/qutip/pull/105#issuecomment-43737566:448,Energy Efficiency,reduce,reduce,448,"Thanks!. I haven't thought about python3 (is it about divisions `//` and `reduce`, or did you spot other problems?). `numpy.prod` - I guess I should rather use it, since `numpy` is already there; (a second thought: at least in python2 for lists of few elements `reduce` is significantly faster; I am not sure though, it in this particular case it makes a difference). ```; from numpy import prod; from operator import mul. prod([1,2,3]) # 22.6 µs; reduce(mul, [1,2,3]) # 737 ns; ```. `plot_qubism` for density matrix it is a different plot. In any case, I will think about it when I doing it (and I will adopt to QuTiP guidelines).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/105#issuecomment-43737566
https://github.com/qutip/qutip/pull/105#issuecomment-43737566:619,Usability,guid,guidelines,619,"Thanks!. I haven't thought about python3 (is it about divisions `//` and `reduce`, or did you spot other problems?). `numpy.prod` - I guess I should rather use it, since `numpy` is already there; (a second thought: at least in python2 for lists of few elements `reduce` is significantly faster; I am not sure though, it in this particular case it makes a difference). ```; from numpy import prod; from operator import mul. prod([1,2,3]) # 22.6 µs; reduce(mul, [1,2,3]) # 737 ns; ```. `plot_qubism` for density matrix it is a different plot. In any case, I will think about it when I doing it (and I will adopt to QuTiP guidelines).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/105#issuecomment-43737566
https://github.com/qutip/qutip/pull/105#issuecomment-43740558:99,Performance,perform,performance,99,"That's the only two problems I ran into when testing the code, but I didn't test everything. About performance of numpy/lists for small arrays; I wouldn't worry much about that in this case. On a different note: Since we don't have unit tests for the plot functions in qutip it would be great if you could consider adding an ipython notebook to qutip/qutip-notebooks that demonstrates how to use these plot function, with some suitable input states.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/105#issuecomment-43740558
https://github.com/qutip/qutip/pull/105#issuecomment-43740558:45,Testability,test,testing,45,"That's the only two problems I ran into when testing the code, but I didn't test everything. About performance of numpy/lists for small arrays; I wouldn't worry much about that in this case. On a different note: Since we don't have unit tests for the plot functions in qutip it would be great if you could consider adding an ipython notebook to qutip/qutip-notebooks that demonstrates how to use these plot function, with some suitable input states.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/105#issuecomment-43740558
https://github.com/qutip/qutip/pull/105#issuecomment-43740558:76,Testability,test,test,76,"That's the only two problems I ran into when testing the code, but I didn't test everything. About performance of numpy/lists for small arrays; I wouldn't worry much about that in this case. On a different note: Since we don't have unit tests for the plot functions in qutip it would be great if you could consider adding an ipython notebook to qutip/qutip-notebooks that demonstrates how to use these plot function, with some suitable input states.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/105#issuecomment-43740558
https://github.com/qutip/qutip/pull/105#issuecomment-43740558:237,Testability,test,tests,237,"That's the only two problems I ran into when testing the code, but I didn't test everything. About performance of numpy/lists for small arrays; I wouldn't worry much about that in this case. On a different note: Since we don't have unit tests for the plot functions in qutip it would be great if you could consider adding an ipython notebook to qutip/qutip-notebooks that demonstrates how to use these plot function, with some suitable input states.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/105#issuecomment-43740558
https://github.com/qutip/qutip/pull/105#issuecomment-43785864:95,Testability,test,test,95,"I had some issues with python3 on my OS X (it dislikes my python2 and vice versa), so I didn't test it for python3. Otherwise, it should be fine and merge-ready. Great thanks for your help! . (I have a few more ideas, but for other plots, so let they come as separate issues.). With respect to the IPython Notebook demonstrating visualizations - definitely I should prepare (or rather: polish) one of two.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/105#issuecomment-43785864
https://github.com/qutip/qutip/pull/105#issuecomment-43838064:7,Testability,test,tests,7,"OK, my tests on python 3 has been working fine, so I'm merging this now. Thanks a lot for this nice contribution, and I'm looking forward to more PRs in the future :-)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/105#issuecomment-43838064
https://github.com/qutip/qutip/issues/108#issuecomment-41362284:967,Energy Efficiency,reduce,reduce,967,"I agree that is is getting a bit unwieldy with all the options to the steadystate function, many of which only have meaning for specific solvers. We should do something about that. I wouldn't favor getting rid of the steadystate function though.. It might break a lot of old code and I think it is nice to have a high-level API that is decoupled from the specific implementation (direct, interative, or something else). Currently steadystate is only dispatching to other functions, and I think that is how it is supposed to be. To solve the problem with diverging options requirements for different solvers I would suggest changing the function signature to. ```; def steadystate(A, c_ops=[], method='direct', **kwargs):; ...; if method == 'direct'; steadystate_direct(A, c_ops, **kwargs); ```. and defer all the specifics about kwargs to specific solvers (including docstrings). That would bring the default values of those options closer to where they are used and reduce duplication. It would also allow us more flexibility in maintaining a backwards compatible api, and future maintainability. It's fine with me to make _steadystate_direct and _steadystate_iterative publicly accessible.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/108#issuecomment-41362284
https://github.com/qutip/qutip/issues/108#issuecomment-41362284:1081,Modifiability,maintainab,maintainability,1081,"I agree that is is getting a bit unwieldy with all the options to the steadystate function, many of which only have meaning for specific solvers. We should do something about that. I wouldn't favor getting rid of the steadystate function though.. It might break a lot of old code and I think it is nice to have a high-level API that is decoupled from the specific implementation (direct, interative, or something else). Currently steadystate is only dispatching to other functions, and I think that is how it is supposed to be. To solve the problem with diverging options requirements for different solvers I would suggest changing the function signature to. ```; def steadystate(A, c_ops=[], method='direct', **kwargs):; ...; if method == 'direct'; steadystate_direct(A, c_ops, **kwargs); ```. and defer all the specifics about kwargs to specific solvers (including docstrings). That would bring the default values of those options closer to where they are used and reduce duplication. It would also allow us more flexibility in maintaining a backwards compatible api, and future maintainability. It's fine with me to make _steadystate_direct and _steadystate_iterative publicly accessible.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/108#issuecomment-41362284
https://github.com/qutip/qutip/issues/108#issuecomment-41362284:1180,Security,access,accessible,1180,"I agree that is is getting a bit unwieldy with all the options to the steadystate function, many of which only have meaning for specific solvers. We should do something about that. I wouldn't favor getting rid of the steadystate function though.. It might break a lot of old code and I think it is nice to have a high-level API that is decoupled from the specific implementation (direct, interative, or something else). Currently steadystate is only dispatching to other functions, and I think that is how it is supposed to be. To solve the problem with diverging options requirements for different solvers I would suggest changing the function signature to. ```; def steadystate(A, c_ops=[], method='direct', **kwargs):; ...; if method == 'direct'; steadystate_direct(A, c_ops, **kwargs); ```. and defer all the specifics about kwargs to specific solvers (including docstrings). That would bring the default values of those options closer to where they are used and reduce duplication. It would also allow us more flexibility in maintaining a backwards compatible api, and future maintainability. It's fine with me to make _steadystate_direct and _steadystate_iterative publicly accessible.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/108#issuecomment-41362284
https://github.com/qutip/qutip/issues/111#issuecomment-41977425:124,Usability,guid,guide,124,"Hi Qi, thanks for your post. If you want to work on this it would be a very welcome contribution, and we can assist you and guide you along the way. However, I think it is difficult to write a general solver using waiting time distributions, because they usually require some analytical treatment and are therefore problem specific. As far as I know, if you don't have an analytical mean of finding the correct waiting time distribution you need to use the comparison of the decaying norm and a random number. In the paper by Dum et al that you refer to they also use this method, which is very similar to the one we use in mcsolve (the description you give in the first paragraph is not quite correct; we do use the decay of the wavefunction norm in the condition for when jumps occurs, like in Dum et al). See Fig. 1 in that paper for example. However, in some problems the waiting time distribution can be obtained analytically, and then it could be beneficial to be able to specify this waiting time distribution for the mcsolver in some way. Is that the kind of feature you are asking for?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/111#issuecomment-41977425
https://github.com/qutip/qutip/issues/111#issuecomment-42091087:456,Modifiability,evolve,evolve,456,"Sorry, I made some mistakes in my previous post, and you are right on the paper. I think I can summarize the two MC simulation strategies into two kinds: one is that we generate a random number at each time step, and then compare it with the jumping probability (**1-P(no jump)**), and decide which jump to make using the jumping operators; the other one is that we generate a random number, and let it to be the no-jumping probability, and let the system evolve until it ends at the so-called waiting time by judging if the probability of no-jumping reaches the generated random number, and then decide which state to jump. My hope is that our mcsolve function can allow users to choose which strategy to employ in the simulation, as both of the strategies are valuable for different purposes, as I have claimed in my earlier thread. This is the feature I am looking for. Is that feasible and reasonable? . I read over the mcsolve code a little bit. From my understanding, the core algorithm of the MC simulation is in the ODE's single-trajectory definition part (_mc_alg_evolve...). Looks like the code is applying the second strategy I mentioned before. But I am not totally sure, as I am confused and got lost on many variables. Like, what does the RHS of the ODE mean? How comes the **array[1, 10, 11]**? ... . At this stage, I have to resort to the original author of the code, and would like to hear your opinions and detailed guidelines. I will write some test codes in Matlab first in the coming weeks, if I have time. Thanks for your response. Cheers,; Qi",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/111#issuecomment-42091087
https://github.com/qutip/qutip/issues/111#issuecomment-42091087:1222,Modifiability,variab,variables,1222,"Sorry, I made some mistakes in my previous post, and you are right on the paper. I think I can summarize the two MC simulation strategies into two kinds: one is that we generate a random number at each time step, and then compare it with the jumping probability (**1-P(no jump)**), and decide which jump to make using the jumping operators; the other one is that we generate a random number, and let it to be the no-jumping probability, and let the system evolve until it ends at the so-called waiting time by judging if the probability of no-jumping reaches the generated random number, and then decide which state to jump. My hope is that our mcsolve function can allow users to choose which strategy to employ in the simulation, as both of the strategies are valuable for different purposes, as I have claimed in my earlier thread. This is the feature I am looking for. Is that feasible and reasonable? . I read over the mcsolve code a little bit. From my understanding, the core algorithm of the MC simulation is in the ODE's single-trajectory definition part (_mc_alg_evolve...). Looks like the code is applying the second strategy I mentioned before. But I am not totally sure, as I am confused and got lost on many variables. Like, what does the RHS of the ODE mean? How comes the **array[1, 10, 11]**? ... . At this stage, I have to resort to the original author of the code, and would like to hear your opinions and detailed guidelines. I will write some test codes in Matlab first in the coming weeks, if I have time. Thanks for your response. Cheers,; Qi",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/111#issuecomment-42091087
https://github.com/qutip/qutip/issues/111#issuecomment-42091087:1464,Testability,test,test,1464,"Sorry, I made some mistakes in my previous post, and you are right on the paper. I think I can summarize the two MC simulation strategies into two kinds: one is that we generate a random number at each time step, and then compare it with the jumping probability (**1-P(no jump)**), and decide which jump to make using the jumping operators; the other one is that we generate a random number, and let it to be the no-jumping probability, and let the system evolve until it ends at the so-called waiting time by judging if the probability of no-jumping reaches the generated random number, and then decide which state to jump. My hope is that our mcsolve function can allow users to choose which strategy to employ in the simulation, as both of the strategies are valuable for different purposes, as I have claimed in my earlier thread. This is the feature I am looking for. Is that feasible and reasonable? . I read over the mcsolve code a little bit. From my understanding, the core algorithm of the MC simulation is in the ODE's single-trajectory definition part (_mc_alg_evolve...). Looks like the code is applying the second strategy I mentioned before. But I am not totally sure, as I am confused and got lost on many variables. Like, what does the RHS of the ODE mean? How comes the **array[1, 10, 11]**? ... . At this stage, I have to resort to the original author of the code, and would like to hear your opinions and detailed guidelines. I will write some test codes in Matlab first in the coming weeks, if I have time. Thanks for your response. Cheers,; Qi",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/111#issuecomment-42091087
https://github.com/qutip/qutip/issues/111#issuecomment-42091087:1434,Usability,guid,guidelines,1434,"Sorry, I made some mistakes in my previous post, and you are right on the paper. I think I can summarize the two MC simulation strategies into two kinds: one is that we generate a random number at each time step, and then compare it with the jumping probability (**1-P(no jump)**), and decide which jump to make using the jumping operators; the other one is that we generate a random number, and let it to be the no-jumping probability, and let the system evolve until it ends at the so-called waiting time by judging if the probability of no-jumping reaches the generated random number, and then decide which state to jump. My hope is that our mcsolve function can allow users to choose which strategy to employ in the simulation, as both of the strategies are valuable for different purposes, as I have claimed in my earlier thread. This is the feature I am looking for. Is that feasible and reasonable? . I read over the mcsolve code a little bit. From my understanding, the core algorithm of the MC simulation is in the ODE's single-trajectory definition part (_mc_alg_evolve...). Looks like the code is applying the second strategy I mentioned before. But I am not totally sure, as I am confused and got lost on many variables. Like, what does the RHS of the ODE mean? How comes the **array[1, 10, 11]**? ... . At this stage, I have to resort to the original author of the code, and would like to hear your opinions and detailed guidelines. I will write some test codes in Matlab first in the coming weeks, if I have time. Thanks for your response. Cheers,; Qi",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/111#issuecomment-42091087
https://github.com/qutip/qutip/issues/111#issuecomment-42092984:294,Energy Efficiency,adapt,adaptive,294,"Picking a new random number at each time step would be an expensive way to do the computation since each call to the random number generator is costly. One could pre-generate a large array of random numbers before hand, but there is no way to know if you generated enough since we are using an adaptive step size ODE method. You are correct about the way mcsolve does its calculations. The other array you are talking about [1,10,11] is an array that tells the solver about the time-depdendence of the Hamiltonian and/or collapse terms. These arguments could be clearer, however since it is an internal thing, we have not bothered to mess with it. Regards,. Paul; On May 3, 2014, at 9:24 AM, Qi notifications@github.com wrote:. > Sorry, I made some mistakes in my previous post, and you are right on the paper. I think I can summarize the two MC simulation strategies into two kinds: one is that we generate a random number at each time step, and then compare it with the jumping probability (1-P(no jump)), and decide which jump to make using the jumping operators; the other one is that we generate a random number, and let it to be the no-jumping probability, and let the system evolve until it ends at the so-called waiting time by judging if the probability of no-jumping reaches the generated random number, and then decide which state to jump. My hope is that our mcsolve function can allow users to choose which strategy to employ in the simulation, as both of the strategies are valuable for different purposes, as I have claimed in my earlier thread. This is the feature I am looking for. Is that feasible and reasonable?; > ; > I read over the mcsolve code a little bit. From my understanding, the core algorithm of the MC simulation is in the ODE's single-trajectory definition part (_mc_alg_evolve...). Looks like the code is applying the second strategy I mentioned before. But I am not totally sure, as I am confused and got lost on many variables. Like, what does the RHS of the ODE me",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/111#issuecomment-42092984
https://github.com/qutip/qutip/issues/111#issuecomment-42092984:294,Modifiability,adapt,adaptive,294,"Picking a new random number at each time step would be an expensive way to do the computation since each call to the random number generator is costly. One could pre-generate a large array of random numbers before hand, but there is no way to know if you generated enough since we are using an adaptive step size ODE method. You are correct about the way mcsolve does its calculations. The other array you are talking about [1,10,11] is an array that tells the solver about the time-depdendence of the Hamiltonian and/or collapse terms. These arguments could be clearer, however since it is an internal thing, we have not bothered to mess with it. Regards,. Paul; On May 3, 2014, at 9:24 AM, Qi notifications@github.com wrote:. > Sorry, I made some mistakes in my previous post, and you are right on the paper. I think I can summarize the two MC simulation strategies into two kinds: one is that we generate a random number at each time step, and then compare it with the jumping probability (1-P(no jump)), and decide which jump to make using the jumping operators; the other one is that we generate a random number, and let it to be the no-jumping probability, and let the system evolve until it ends at the so-called waiting time by judging if the probability of no-jumping reaches the generated random number, and then decide which state to jump. My hope is that our mcsolve function can allow users to choose which strategy to employ in the simulation, as both of the strategies are valuable for different purposes, as I have claimed in my earlier thread. This is the feature I am looking for. Is that feasible and reasonable?; > ; > I read over the mcsolve code a little bit. From my understanding, the core algorithm of the MC simulation is in the ODE's single-trajectory definition part (_mc_alg_evolve...). Looks like the code is applying the second strategy I mentioned before. But I am not totally sure, as I am confused and got lost on many variables. Like, what does the RHS of the ODE me",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/111#issuecomment-42092984
https://github.com/qutip/qutip/issues/111#issuecomment-42092984:1182,Modifiability,evolve,evolve,1182,"e computation since each call to the random number generator is costly. One could pre-generate a large array of random numbers before hand, but there is no way to know if you generated enough since we are using an adaptive step size ODE method. You are correct about the way mcsolve does its calculations. The other array you are talking about [1,10,11] is an array that tells the solver about the time-depdendence of the Hamiltonian and/or collapse terms. These arguments could be clearer, however since it is an internal thing, we have not bothered to mess with it. Regards,. Paul; On May 3, 2014, at 9:24 AM, Qi notifications@github.com wrote:. > Sorry, I made some mistakes in my previous post, and you are right on the paper. I think I can summarize the two MC simulation strategies into two kinds: one is that we generate a random number at each time step, and then compare it with the jumping probability (1-P(no jump)), and decide which jump to make using the jumping operators; the other one is that we generate a random number, and let it to be the no-jumping probability, and let the system evolve until it ends at the so-called waiting time by judging if the probability of no-jumping reaches the generated random number, and then decide which state to jump. My hope is that our mcsolve function can allow users to choose which strategy to employ in the simulation, as both of the strategies are valuable for different purposes, as I have claimed in my earlier thread. This is the feature I am looking for. Is that feasible and reasonable?; > ; > I read over the mcsolve code a little bit. From my understanding, the core algorithm of the MC simulation is in the ODE's single-trajectory definition part (_mc_alg_evolve...). Looks like the code is applying the second strategy I mentioned before. But I am not totally sure, as I am confused and got lost on many variables. Like, what does the RHS of the ODE mean? How comes the array[1, 10, 11]? ...; > ; > At this stage, I have to resort ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/111#issuecomment-42092984
https://github.com/qutip/qutip/issues/111#issuecomment-42092984:1953,Modifiability,variab,variables,1953,"ts calculations. The other array you are talking about [1,10,11] is an array that tells the solver about the time-depdendence of the Hamiltonian and/or collapse terms. These arguments could be clearer, however since it is an internal thing, we have not bothered to mess with it. Regards,. Paul; On May 3, 2014, at 9:24 AM, Qi notifications@github.com wrote:. > Sorry, I made some mistakes in my previous post, and you are right on the paper. I think I can summarize the two MC simulation strategies into two kinds: one is that we generate a random number at each time step, and then compare it with the jumping probability (1-P(no jump)), and decide which jump to make using the jumping operators; the other one is that we generate a random number, and let it to be the no-jumping probability, and let the system evolve until it ends at the so-called waiting time by judging if the probability of no-jumping reaches the generated random number, and then decide which state to jump. My hope is that our mcsolve function can allow users to choose which strategy to employ in the simulation, as both of the strategies are valuable for different purposes, as I have claimed in my earlier thread. This is the feature I am looking for. Is that feasible and reasonable?; > ; > I read over the mcsolve code a little bit. From my understanding, the core algorithm of the MC simulation is in the ODE's single-trajectory definition part (_mc_alg_evolve...). Looks like the code is applying the second strategy I mentioned before. But I am not totally sure, as I am confused and got lost on many variables. Like, what does the RHS of the ODE mean? How comes the array[1, 10, 11]? ...; > ; > At this stage, I have to resort to the original author of the code, and would like to hear your opinions and detailed guidelines. I will write some test codes in Matlab first in the coming weeks, if I have time. Thanks for your response.; > ; > Cheers,; > Qi; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/111#issuecomment-42092984
https://github.com/qutip/qutip/issues/111#issuecomment-42092984:2196,Testability,test,test,2196,"ts calculations. The other array you are talking about [1,10,11] is an array that tells the solver about the time-depdendence of the Hamiltonian and/or collapse terms. These arguments could be clearer, however since it is an internal thing, we have not bothered to mess with it. Regards,. Paul; On May 3, 2014, at 9:24 AM, Qi notifications@github.com wrote:. > Sorry, I made some mistakes in my previous post, and you are right on the paper. I think I can summarize the two MC simulation strategies into two kinds: one is that we generate a random number at each time step, and then compare it with the jumping probability (1-P(no jump)), and decide which jump to make using the jumping operators; the other one is that we generate a random number, and let it to be the no-jumping probability, and let the system evolve until it ends at the so-called waiting time by judging if the probability of no-jumping reaches the generated random number, and then decide which state to jump. My hope is that our mcsolve function can allow users to choose which strategy to employ in the simulation, as both of the strategies are valuable for different purposes, as I have claimed in my earlier thread. This is the feature I am looking for. Is that feasible and reasonable?; > ; > I read over the mcsolve code a little bit. From my understanding, the core algorithm of the MC simulation is in the ODE's single-trajectory definition part (_mc_alg_evolve...). Looks like the code is applying the second strategy I mentioned before. But I am not totally sure, as I am confused and got lost on many variables. Like, what does the RHS of the ODE mean? How comes the array[1, 10, 11]? ...; > ; > At this stage, I have to resort to the original author of the code, and would like to hear your opinions and detailed guidelines. I will write some test codes in Matlab first in the coming weeks, if I have time. Thanks for your response.; > ; > Cheers,; > Qi; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/111#issuecomment-42092984
https://github.com/qutip/qutip/issues/111#issuecomment-42092984:562,Usability,clear,clearer,562,"Picking a new random number at each time step would be an expensive way to do the computation since each call to the random number generator is costly. One could pre-generate a large array of random numbers before hand, but there is no way to know if you generated enough since we are using an adaptive step size ODE method. You are correct about the way mcsolve does its calculations. The other array you are talking about [1,10,11] is an array that tells the solver about the time-depdendence of the Hamiltonian and/or collapse terms. These arguments could be clearer, however since it is an internal thing, we have not bothered to mess with it. Regards,. Paul; On May 3, 2014, at 9:24 AM, Qi notifications@github.com wrote:. > Sorry, I made some mistakes in my previous post, and you are right on the paper. I think I can summarize the two MC simulation strategies into two kinds: one is that we generate a random number at each time step, and then compare it with the jumping probability (1-P(no jump)), and decide which jump to make using the jumping operators; the other one is that we generate a random number, and let it to be the no-jumping probability, and let the system evolve until it ends at the so-called waiting time by judging if the probability of no-jumping reaches the generated random number, and then decide which state to jump. My hope is that our mcsolve function can allow users to choose which strategy to employ in the simulation, as both of the strategies are valuable for different purposes, as I have claimed in my earlier thread. This is the feature I am looking for. Is that feasible and reasonable?; > ; > I read over the mcsolve code a little bit. From my understanding, the core algorithm of the MC simulation is in the ODE's single-trajectory definition part (_mc_alg_evolve...). Looks like the code is applying the second strategy I mentioned before. But I am not totally sure, as I am confused and got lost on many variables. Like, what does the RHS of the ODE me",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/111#issuecomment-42092984
https://github.com/qutip/qutip/issues/111#issuecomment-42092984:2166,Usability,guid,guidelines,2166,"ts calculations. The other array you are talking about [1,10,11] is an array that tells the solver about the time-depdendence of the Hamiltonian and/or collapse terms. These arguments could be clearer, however since it is an internal thing, we have not bothered to mess with it. Regards,. Paul; On May 3, 2014, at 9:24 AM, Qi notifications@github.com wrote:. > Sorry, I made some mistakes in my previous post, and you are right on the paper. I think I can summarize the two MC simulation strategies into two kinds: one is that we generate a random number at each time step, and then compare it with the jumping probability (1-P(no jump)), and decide which jump to make using the jumping operators; the other one is that we generate a random number, and let it to be the no-jumping probability, and let the system evolve until it ends at the so-called waiting time by judging if the probability of no-jumping reaches the generated random number, and then decide which state to jump. My hope is that our mcsolve function can allow users to choose which strategy to employ in the simulation, as both of the strategies are valuable for different purposes, as I have claimed in my earlier thread. This is the feature I am looking for. Is that feasible and reasonable?; > ; > I read over the mcsolve code a little bit. From my understanding, the core algorithm of the MC simulation is in the ODE's single-trajectory definition part (_mc_alg_evolve...). Looks like the code is applying the second strategy I mentioned before. But I am not totally sure, as I am confused and got lost on many variables. Like, what does the RHS of the ODE mean? How comes the array[1, 10, 11]? ...; > ; > At this stage, I have to resort to the original author of the code, and would like to hear your opinions and detailed guidelines. I will write some test codes in Matlab first in the coming weeks, if I have time. Thanks for your response.; > ; > Cheers,; > Qi; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/111#issuecomment-42092984
https://github.com/qutip/qutip/issues/111#issuecomment-220744432:439,Deployability,continuous,continuous,439,"@goerz I think one of Mølmer's papers (maybe the one I have pointed out) addressed the equivalence of the two methods. Sorry, I don't have a definite paper to point out at this moment. I was actually organizing the Julia community to work on this direction (see [JuliaQuantum](http://juliaquantum.github.io)) from scratch, and hence didn't follow up the efforts in the measurement simulation within QuTiP. . When I was writing my paper on continuous measurement ([PRA, 93.023817](http://journals.aps.org/pra/abstract/10.1103/PhysRevA.93.023817)), I came up the argument that the former method may be more appropriate for measurement models. This is because measurements have to happen in evenly spaced time steps determined by the detector's integrating time, so it is intuitive to use a random number to judge if on each measurement step the quantum jump will happen. There may be a way to use the second method to implement the same measurement simulation model, but I didn't think too much on it. In reality, I developed another more efficient method without actually evolving the density operator in my paper to simulate continuous measurement using a set of stochastic equations for squeezing thousands of atoms' state which has not been included in QuTiP yet. Sorry I don't have more useful reference that explains this point in more details at this moment. Good luck!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/111#issuecomment-220744432
https://github.com/qutip/qutip/issues/111#issuecomment-220744432:742,Deployability,integrat,integrating,742,"@goerz I think one of Mølmer's papers (maybe the one I have pointed out) addressed the equivalence of the two methods. Sorry, I don't have a definite paper to point out at this moment. I was actually organizing the Julia community to work on this direction (see [JuliaQuantum](http://juliaquantum.github.io)) from scratch, and hence didn't follow up the efforts in the measurement simulation within QuTiP. . When I was writing my paper on continuous measurement ([PRA, 93.023817](http://journals.aps.org/pra/abstract/10.1103/PhysRevA.93.023817)), I came up the argument that the former method may be more appropriate for measurement models. This is because measurements have to happen in evenly spaced time steps determined by the detector's integrating time, so it is intuitive to use a random number to judge if on each measurement step the quantum jump will happen. There may be a way to use the second method to implement the same measurement simulation model, but I didn't think too much on it. In reality, I developed another more efficient method without actually evolving the density operator in my paper to simulate continuous measurement using a set of stochastic equations for squeezing thousands of atoms' state which has not been included in QuTiP yet. Sorry I don't have more useful reference that explains this point in more details at this moment. Good luck!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/111#issuecomment-220744432
https://github.com/qutip/qutip/issues/111#issuecomment-220744432:1125,Deployability,continuous,continuous,1125,"@goerz I think one of Mølmer's papers (maybe the one I have pointed out) addressed the equivalence of the two methods. Sorry, I don't have a definite paper to point out at this moment. I was actually organizing the Julia community to work on this direction (see [JuliaQuantum](http://juliaquantum.github.io)) from scratch, and hence didn't follow up the efforts in the measurement simulation within QuTiP. . When I was writing my paper on continuous measurement ([PRA, 93.023817](http://journals.aps.org/pra/abstract/10.1103/PhysRevA.93.023817)), I came up the argument that the former method may be more appropriate for measurement models. This is because measurements have to happen in evenly spaced time steps determined by the detector's integrating time, so it is intuitive to use a random number to judge if on each measurement step the quantum jump will happen. There may be a way to use the second method to implement the same measurement simulation model, but I didn't think too much on it. In reality, I developed another more efficient method without actually evolving the density operator in my paper to simulate continuous measurement using a set of stochastic equations for squeezing thousands of atoms' state which has not been included in QuTiP yet. Sorry I don't have more useful reference that explains this point in more details at this moment. Good luck!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/111#issuecomment-220744432
https://github.com/qutip/qutip/issues/111#issuecomment-220744432:1037,Energy Efficiency,efficient,efficient,1037,"@goerz I think one of Mølmer's papers (maybe the one I have pointed out) addressed the equivalence of the two methods. Sorry, I don't have a definite paper to point out at this moment. I was actually organizing the Julia community to work on this direction (see [JuliaQuantum](http://juliaquantum.github.io)) from scratch, and hence didn't follow up the efforts in the measurement simulation within QuTiP. . When I was writing my paper on continuous measurement ([PRA, 93.023817](http://journals.aps.org/pra/abstract/10.1103/PhysRevA.93.023817)), I came up the argument that the former method may be more appropriate for measurement models. This is because measurements have to happen in evenly spaced time steps determined by the detector's integrating time, so it is intuitive to use a random number to judge if on each measurement step the quantum jump will happen. There may be a way to use the second method to implement the same measurement simulation model, but I didn't think too much on it. In reality, I developed another more efficient method without actually evolving the density operator in my paper to simulate continuous measurement using a set of stochastic equations for squeezing thousands of atoms' state which has not been included in QuTiP yet. Sorry I don't have more useful reference that explains this point in more details at this moment. Good luck!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/111#issuecomment-220744432
https://github.com/qutip/qutip/issues/111#issuecomment-220744432:742,Integrability,integrat,integrating,742,"@goerz I think one of Mølmer's papers (maybe the one I have pointed out) addressed the equivalence of the two methods. Sorry, I don't have a definite paper to point out at this moment. I was actually organizing the Julia community to work on this direction (see [JuliaQuantum](http://juliaquantum.github.io)) from scratch, and hence didn't follow up the efforts in the measurement simulation within QuTiP. . When I was writing my paper on continuous measurement ([PRA, 93.023817](http://journals.aps.org/pra/abstract/10.1103/PhysRevA.93.023817)), I came up the argument that the former method may be more appropriate for measurement models. This is because measurements have to happen in evenly spaced time steps determined by the detector's integrating time, so it is intuitive to use a random number to judge if on each measurement step the quantum jump will happen. There may be a way to use the second method to implement the same measurement simulation model, but I didn't think too much on it. In reality, I developed another more efficient method without actually evolving the density operator in my paper to simulate continuous measurement using a set of stochastic equations for squeezing thousands of atoms' state which has not been included in QuTiP yet. Sorry I don't have more useful reference that explains this point in more details at this moment. Good luck!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/111#issuecomment-220744432
https://github.com/qutip/qutip/issues/111#issuecomment-220744432:731,Safety,detect,detector,731,"@goerz I think one of Mølmer's papers (maybe the one I have pointed out) addressed the equivalence of the two methods. Sorry, I don't have a definite paper to point out at this moment. I was actually organizing the Julia community to work on this direction (see [JuliaQuantum](http://juliaquantum.github.io)) from scratch, and hence didn't follow up the efforts in the measurement simulation within QuTiP. . When I was writing my paper on continuous measurement ([PRA, 93.023817](http://journals.aps.org/pra/abstract/10.1103/PhysRevA.93.023817)), I came up the argument that the former method may be more appropriate for measurement models. This is because measurements have to happen in evenly spaced time steps determined by the detector's integrating time, so it is intuitive to use a random number to judge if on each measurement step the quantum jump will happen. There may be a way to use the second method to implement the same measurement simulation model, but I didn't think too much on it. In reality, I developed another more efficient method without actually evolving the density operator in my paper to simulate continuous measurement using a set of stochastic equations for squeezing thousands of atoms' state which has not been included in QuTiP yet. Sorry I don't have more useful reference that explains this point in more details at this moment. Good luck!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/111#issuecomment-220744432
https://github.com/qutip/qutip/issues/111#issuecomment-220744432:769,Usability,intuit,intuitive,769,"@goerz I think one of Mølmer's papers (maybe the one I have pointed out) addressed the equivalence of the two methods. Sorry, I don't have a definite paper to point out at this moment. I was actually organizing the Julia community to work on this direction (see [JuliaQuantum](http://juliaquantum.github.io)) from scratch, and hence didn't follow up the efforts in the measurement simulation within QuTiP. . When I was writing my paper on continuous measurement ([PRA, 93.023817](http://journals.aps.org/pra/abstract/10.1103/PhysRevA.93.023817)), I came up the argument that the former method may be more appropriate for measurement models. This is because measurements have to happen in evenly spaced time steps determined by the detector's integrating time, so it is intuitive to use a random number to judge if on each measurement step the quantum jump will happen. There may be a way to use the second method to implement the same measurement simulation model, but I didn't think too much on it. In reality, I developed another more efficient method without actually evolving the density operator in my paper to simulate continuous measurement using a set of stochastic equations for squeezing thousands of atoms' state which has not been included in QuTiP yet. Sorry I don't have more useful reference that explains this point in more details at this moment. Good luck!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/111#issuecomment-220744432
https://github.com/qutip/qutip/pull/114#issuecomment-41647033:95,Usability,responsiv,responsive,95,"I've tried this PR and it seems to work fine, and it indeed seems to make TextProgressBar more responsive, so I'll merge this now. Thanks. The coding style policy is that the code is supposed to be pep8 compliant, and style fixes are very welcome, so no need to revert anything.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/114#issuecomment-41647033
https://github.com/qutip/qutip/issues/119#issuecomment-41887009:403,Deployability,release,release,403,"Good point. Lets do that for the next version. On 05/01/2014 04:10 PM, Robert Johansson wrote:. > Two suggestions:; > ; > 1.; > ; > ```; > QuTiP uses an environment variable |NUM_THREADS|. We should; > probably name-space this variable, calling it |QUTIP_NUM_THREADS|; > (consistent with how other packages name their variables, like; > |MKL_NUM_THREADS| and |OPENBLAS_NUM_THREADS|. The upcoming 3.0; > release would be a good time to make this change.; > ```; > ; > 2.; > ; > ```; > Considering that QuTiP does not use thread but processes, it would; > be even better to call the variable |QUTIP_NUM_PROCESSES|.; > ```; > ; > —; > Reply to this email directly or view it on GitHub ; > https://github.com/qutip/qutip/issues/119.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/119#issuecomment-41887009
https://github.com/qutip/qutip/issues/119#issuecomment-41887009:165,Modifiability,variab,variable,165,"Good point. Lets do that for the next version. On 05/01/2014 04:10 PM, Robert Johansson wrote:. > Two suggestions:; > ; > 1.; > ; > ```; > QuTiP uses an environment variable |NUM_THREADS|. We should; > probably name-space this variable, calling it |QUTIP_NUM_THREADS|; > (consistent with how other packages name their variables, like; > |MKL_NUM_THREADS| and |OPENBLAS_NUM_THREADS|. The upcoming 3.0; > release would be a good time to make this change.; > ```; > ; > 2.; > ; > ```; > Considering that QuTiP does not use thread but processes, it would; > be even better to call the variable |QUTIP_NUM_PROCESSES|.; > ```; > ; > —; > Reply to this email directly or view it on GitHub ; > https://github.com/qutip/qutip/issues/119.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/119#issuecomment-41887009
https://github.com/qutip/qutip/issues/119#issuecomment-41887009:227,Modifiability,variab,variable,227,"Good point. Lets do that for the next version. On 05/01/2014 04:10 PM, Robert Johansson wrote:. > Two suggestions:; > ; > 1.; > ; > ```; > QuTiP uses an environment variable |NUM_THREADS|. We should; > probably name-space this variable, calling it |QUTIP_NUM_THREADS|; > (consistent with how other packages name their variables, like; > |MKL_NUM_THREADS| and |OPENBLAS_NUM_THREADS|. The upcoming 3.0; > release would be a good time to make this change.; > ```; > ; > 2.; > ; > ```; > Considering that QuTiP does not use thread but processes, it would; > be even better to call the variable |QUTIP_NUM_PROCESSES|.; > ```; > ; > —; > Reply to this email directly or view it on GitHub ; > https://github.com/qutip/qutip/issues/119.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/119#issuecomment-41887009
https://github.com/qutip/qutip/issues/119#issuecomment-41887009:318,Modifiability,variab,variables,318,"Good point. Lets do that for the next version. On 05/01/2014 04:10 PM, Robert Johansson wrote:. > Two suggestions:; > ; > 1.; > ; > ```; > QuTiP uses an environment variable |NUM_THREADS|. We should; > probably name-space this variable, calling it |QUTIP_NUM_THREADS|; > (consistent with how other packages name their variables, like; > |MKL_NUM_THREADS| and |OPENBLAS_NUM_THREADS|. The upcoming 3.0; > release would be a good time to make this change.; > ```; > ; > 2.; > ; > ```; > Considering that QuTiP does not use thread but processes, it would; > be even better to call the variable |QUTIP_NUM_PROCESSES|.; > ```; > ; > —; > Reply to this email directly or view it on GitHub ; > https://github.com/qutip/qutip/issues/119.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/119#issuecomment-41887009
https://github.com/qutip/qutip/issues/119#issuecomment-41887009:581,Modifiability,variab,variable,581,"Good point. Lets do that for the next version. On 05/01/2014 04:10 PM, Robert Johansson wrote:. > Two suggestions:; > ; > 1.; > ; > ```; > QuTiP uses an environment variable |NUM_THREADS|. We should; > probably name-space this variable, calling it |QUTIP_NUM_THREADS|; > (consistent with how other packages name their variables, like; > |MKL_NUM_THREADS| and |OPENBLAS_NUM_THREADS|. The upcoming 3.0; > release would be a good time to make this change.; > ```; > ; > 2.; > ; > ```; > Considering that QuTiP does not use thread but processes, it would; > be even better to call the variable |QUTIP_NUM_PROCESSES|.; > ```; > ; > —; > Reply to this email directly or view it on GitHub ; > https://github.com/qutip/qutip/issues/119.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/119#issuecomment-41887009
https://github.com/qutip/qutip/issues/119#issuecomment-41984812:174,Modifiability,variab,variable,174,"NUM_THREADS actually does not do anything as far as I can tell. We store the number of CPUs to use in qutip.settings.num_cpus. We can of course replace this with and environ variable, but is it needed?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/119#issuecomment-41984812
https://github.com/qutip/qutip/issues/119#issuecomment-41985199:176,Deployability,configurat,configuration,176,"You can use it to select number of processes to use, right? I think it is useful if you don't want to use all processors for a calculation, although I usually use the .qutiprc configuration file for this rather than environment variables. I guess it is not really necessary but could be useful I guess.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/119#issuecomment-41985199
https://github.com/qutip/qutip/issues/119#issuecomment-41985199:176,Modifiability,config,configuration,176,"You can use it to select number of processes to use, right? I think it is useful if you don't want to use all processors for a calculation, although I usually use the .qutiprc configuration file for this rather than environment variables. I guess it is not really necessary but could be useful I guess.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/119#issuecomment-41985199
https://github.com/qutip/qutip/issues/119#issuecomment-41985199:228,Modifiability,variab,variables,228,"You can use it to select number of processes to use, right? I think it is useful if you don't want to use all processors for a calculation, although I usually use the .qutiprc configuration file for this rather than environment variables. I guess it is not really necessary but could be useful I guess.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/119#issuecomment-41985199
https://github.com/qutip/qutip/issues/119#issuecomment-41985338:430,Deployability,configurat,configuration,430,"Every routine that uses multiple processes has a kwarg to change the number and if this is not set then it falls back on qutip.settings.num_cpus which is set in **init**.py. On May 2, 2014, at 1:04 PM, Robert Johansson notifications@github.com wrote:. > You can use it to select number of processes to use, right? I think it is useful if you don't want to use all processors for a calculation, although I usually use the .qutiprc configuration file for this rather than environment variables. I guess it is not really necessary but could be useful I guess.; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/119#issuecomment-41985338
https://github.com/qutip/qutip/issues/119#issuecomment-41985338:6,Integrability,rout,routine,6,"Every routine that uses multiple processes has a kwarg to change the number and if this is not set then it falls back on qutip.settings.num_cpus which is set in **init**.py. On May 2, 2014, at 1:04 PM, Robert Johansson notifications@github.com wrote:. > You can use it to select number of processes to use, right? I think it is useful if you don't want to use all processors for a calculation, although I usually use the .qutiprc configuration file for this rather than environment variables. I guess it is not really necessary but could be useful I guess.; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/119#issuecomment-41985338
https://github.com/qutip/qutip/issues/119#issuecomment-41985338:430,Modifiability,config,configuration,430,"Every routine that uses multiple processes has a kwarg to change the number and if this is not set then it falls back on qutip.settings.num_cpus which is set in **init**.py. On May 2, 2014, at 1:04 PM, Robert Johansson notifications@github.com wrote:. > You can use it to select number of processes to use, right? I think it is useful if you don't want to use all processors for a calculation, although I usually use the .qutiprc configuration file for this rather than environment variables. I guess it is not really necessary but could be useful I guess.; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/119#issuecomment-41985338
https://github.com/qutip/qutip/issues/119#issuecomment-41985338:482,Modifiability,variab,variables,482,"Every routine that uses multiple processes has a kwarg to change the number and if this is not set then it falls back on qutip.settings.num_cpus which is set in **init**.py. On May 2, 2014, at 1:04 PM, Robert Johansson notifications@github.com wrote:. > You can use it to select number of processes to use, right? I think it is useful if you don't want to use all processors for a calculation, although I usually use the .qutiprc configuration file for this rather than environment variables. I guess it is not really necessary but could be useful I guess.; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/119#issuecomment-41985338
https://github.com/qutip/qutip/issues/119#issuecomment-41985674:97,Deployability,configurat,configuration,97,I think the priority order should be. *. Default value from `qutip.hardware_info`; *. Value from configuration file if exists; *. Environment variable if set,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/119#issuecomment-41985674
https://github.com/qutip/qutip/issues/119#issuecomment-41985674:97,Modifiability,config,configuration,97,I think the priority order should be. *. Default value from `qutip.hardware_info`; *. Value from configuration file if exists; *. Environment variable if set,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/119#issuecomment-41985674
https://github.com/qutip/qutip/issues/119#issuecomment-41985674:142,Modifiability,variab,variable,142,I think the priority order should be. *. Default value from `qutip.hardware_info`; *. Value from configuration file if exists; *. Environment variable if set,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/119#issuecomment-41985674
https://github.com/qutip/qutip/issues/120#issuecomment-41975397:70,Modifiability,enhance,enhancements,70,"Hi. I don't quite understand what you are proposing to implement, but enhancements and extensions are of course very welcome!. Edit. OK, thinking about it a bit more I think I understand what you want to accomplish. Instead of giving a single wavefunction as initial state, you want to pass a list of wavefunctions that will ack at different initial states for each trajectory? That would be a very welcome improvement.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/120#issuecomment-41975397
https://github.com/qutip/qutip/issues/120#issuecomment-41978600:131,Modifiability,evolve,evolve,131,"Sorry for the bad description. What I need to do (and which is already possible with `mesolve`) is to start with a hamiltonian H1, evolve for time T1, stop, change the hamiltonian to H2 and evolve for additional time T2. With `mesolve` I just use the final result of `mesolve(H1, initial_state,...)` as the initial result in `mesolve(H2,...)`. In `mcsolve` I can not do this, because I can not start `mcsolve` with a set of initial states over which to run single trajectories. In other words, I want to be able to run `mcsolve` up to time T1 and then be able to use the result in another call to `mcsolve` in order to run the trajectories for additional time T2.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/120#issuecomment-41978600
https://github.com/qutip/qutip/issues/120#issuecomment-41978600:190,Modifiability,evolve,evolve,190,"Sorry for the bad description. What I need to do (and which is already possible with `mesolve`) is to start with a hamiltonian H1, evolve for time T1, stop, change the hamiltonian to H2 and evolve for additional time T2. With `mesolve` I just use the final result of `mesolve(H1, initial_state,...)` as the initial result in `mesolve(H2,...)`. In `mcsolve` I can not do this, because I can not start `mcsolve` with a set of initial states over which to run single trajectories. In other words, I want to be able to run `mcsolve` up to time T1 and then be able to use the result in another call to `mcsolve` in order to run the trajectories for additional time T2.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/120#issuecomment-41978600
https://github.com/qutip/qutip/pull/121#issuecomment-41988948:261,Availability,down,down,261,"That sound strange. At the end it does remove the bar to show only the total time, so there is the small chance that you just missed the bar. Otherwise it might be an issue with the ipython notebook version. I am running on 2.0 and it works. I can try to track down the issue with some more details (ipython version, python version, etc).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/121#issuecomment-41988948
https://github.com/qutip/qutip/pull/121#issuecomment-41989690:107,Testability,test,test,107,"OK, I think I know why. It works fine if I try to use TextProgressBar directly in the notebook, but when I test it using mcsolve it doesn't work. It is probably because mcsolve uses multiprocessing and spawns new processes.. I'm not sure why mcsolve works with the old TextProgressBar and not this new one.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/121#issuecomment-41989690
https://github.com/qutip/qutip/pull/121#issuecomment-42067292:283,Performance,Queue,Queue,283,"It seems the entire idea of printing from different threads in python is deeply troublesome. https://stackoverflow.com/questions/3029816/how-do-i-get-a-thread-safe-print-in-python-2-6. My guess is that the appropriate solution is to move all the printing to a single thread and use `Queue`, but I am not quite certain of that. I will see what I can do.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/121#issuecomment-42067292
https://github.com/qutip/qutip/pull/121#issuecomment-42067292:159,Safety,safe,safe-print-in-python-,159,"It seems the entire idea of printing from different threads in python is deeply troublesome. https://stackoverflow.com/questions/3029816/how-do-i-get-a-thread-safe-print-in-python-2-6. My guess is that the appropriate solution is to move all the printing to a single thread and use `Queue`, but I am not quite certain of that. I will see what I can do.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/121#issuecomment-42067292
https://github.com/qutip/qutip/pull/121#issuecomment-42090970:112,Safety,safe,safe,112,"Note that we don't use threads but the multiprocessing library, which uses processes. So print not being thread safe is not an issue, but there might be other difficulties.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/121#issuecomment-42090970
https://github.com/qutip/qutip/pull/121#issuecomment-63221901:141,Testability,test,tests,141,Actually I am almost certain that they fixed the buffering issue (or at least one of the buffering issues if this happens to persist in your tests). It was discussed here: https://github.com/ipython/ipython/issues/5779,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/121#issuecomment-63221901
https://github.com/qutip/qutip/pull/121#issuecomment-63223907:5,Testability,test,tested,5,I've tested that PR and as far as I could see it didn't solve the problem. But maybe I did something wrong.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/121#issuecomment-63223907
https://github.com/qutip/qutip/pull/121#issuecomment-63265163:52,Modifiability,config,configuring,52,That's a bit unfortunate. Perhaps there is a way of configuring the textmate console to support the \r carriage return? Exactly how do you run a script from textmate?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/121#issuecomment-63265163
https://github.com/qutip/qutip/pull/121#issuecomment-63265244:53,Usability,progress bar,progress bar,53,"I have a similar problem in Sublime Text, though the progress bar does work in the terminal, IPython QtConsole and IPython Notebook for me.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/121#issuecomment-63265244
https://github.com/qutip/qutip/pull/121#issuecomment-63265342:59,Integrability,interface,interface,59,"Well the usual way is command+R for running through a ruby interface. Although, one can do shift+command+R to run directly in the terminal. The latter works fine.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/121#issuecomment-63265342
https://github.com/qutip/qutip/pull/121#issuecomment-63267628:326,Modifiability,Enhance,EnhancedTextProgressBar,326,"If those editors claim to provide terminal emulation it should be reported as bugs to them. However, even if it is fixed there it will take a long time before such a fix would reach end-users. I think in the interest of avoiding regressions I think we should restore the previous TextProgressBar and rename the current one to EnhancedTextProgressBar or something like that. Then this new progress bar would not disrupt peoples workflow and users who wants to use it can do so by creating an instance of it and pass it to progress-bar enabled functions using the progress_bar keyword argument.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/121#issuecomment-63267628
https://github.com/qutip/qutip/pull/121#issuecomment-63267628:220,Safety,avoid,avoiding,220,"If those editors claim to provide terminal emulation it should be reported as bugs to them. However, even if it is fixed there it will take a long time before such a fix would reach end-users. I think in the interest of avoiding regressions I think we should restore the previous TextProgressBar and rename the current one to EnhancedTextProgressBar or something like that. Then this new progress bar would not disrupt peoples workflow and users who wants to use it can do so by creating an instance of it and pass it to progress-bar enabled functions using the progress_bar keyword argument.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/121#issuecomment-63267628
https://github.com/qutip/qutip/pull/121#issuecomment-63267628:388,Usability,progress bar,progress bar,388,"If those editors claim to provide terminal emulation it should be reported as bugs to them. However, even if it is fixed there it will take a long time before such a fix would reach end-users. I think in the interest of avoiding regressions I think we should restore the previous TextProgressBar and rename the current one to EnhancedTextProgressBar or something like that. Then this new progress bar would not disrupt peoples workflow and users who wants to use it can do so by creating an instance of it and pass it to progress-bar enabled functions using the progress_bar keyword argument.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/121#issuecomment-63267628
https://github.com/qutip/qutip/pull/121#issuecomment-63271426:93,Modifiability,Enhance,EnhancedTextProgressBar,93,PR #256 restores the old progress bar as TextProgressBar and renames the new progress bar to EnhancedTextProgressBar. Considering the circumstances I think this is the best solution at this point.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/121#issuecomment-63271426
https://github.com/qutip/qutip/pull/121#issuecomment-63271426:25,Usability,progress bar,progress bar,25,PR #256 restores the old progress bar as TextProgressBar and renames the new progress bar to EnhancedTextProgressBar. Considering the circumstances I think this is the best solution at this point.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/121#issuecomment-63271426
https://github.com/qutip/qutip/pull/121#issuecomment-63271426:77,Usability,progress bar,progress bar,77,PR #256 restores the old progress bar as TextProgressBar and renames the new progress bar to EnhancedTextProgressBar. Considering the circumstances I think this is the best solution at this point.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/121#issuecomment-63271426
https://github.com/qutip/qutip/pull/121#issuecomment-63328522:162,Safety,detect,detect,162,"At least in Sublime Text 3's case, it doesn't claim to be a TTY, such that checking `sys.stdout.isatty()` returns False. It's possible that this could be used to detect which bar to use. Since IPython QtConsole and Notebook also return `False` for `isatty()`, a combination of checking `qutip.settings.ipython` and `isatty()` may help eliminate edge cases.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/121#issuecomment-63328522
https://github.com/qutip/qutip/pull/121#issuecomment-63399345:312,Usability,simpl,simple,312,"This is a possibility.. but I think we might be heading into a big mess if we are to autodetect terminal capabilities and different kinds of environment. Whatever we come up with might break if the behavior of any of environments change, and it might be time consuming to maintain. I think I would rather have a simple progressbar that works ok everywhere as default, and if a user wants to use something more fancy it would be easy to do that using the progress_bar keyword argument.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/121#issuecomment-63399345
https://github.com/qutip/qutip/issues/122#issuecomment-42121559:37,Availability,error,errors,37,"Yes, I would suspect it is numerical errors. How large is the nonhermicity? For example, what does something like `abs(rho - rho.dag()).data).max()` give? In some places in qutip where we know that a Qobj is hermitian we enforce it with something like `rho = (rho+rho.dag())/2`, but I'm not a big fan of this introducing more of this kind enforcement on the matrix data level. But we could perhaps have some convenient functions for helping users enforcing hermiticity?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/122#issuecomment-42121559
https://github.com/qutip/qutip/issues/122#issuecomment-42121578:28,Availability,error,error,28,"It most likely is. Roundoff error and errors due to discreteness of the; ode methods will lead to some errors. One way to get around this is to; operate only on the upper or lower triangle of rho. This would also speed; things up; - Sent from my Sony Z Tablet. Frequently while I am using mesolve for some long protracted evolution the; density matrix at some point becomes nonhermitian (isherm and; checkherm()return false). I am guessing that this is just because of; numeric noise, as; there is nothing physically that can cause that (and it is happening even; when the evolution is purely unitary). Is this actually because of numerical noise?. If yes, I was wondering whether this can be addressed from within qutip or; whether the burden on addressing numerical noise should be on the user?. Is there a ""canonical qutip way"" to remove the nonhermitian numerical noise; from matrices that should be hermitian?. —; Reply to this email directly or view it on; GitHubhttps://github.com/qutip/qutip/issues/122; .",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/122#issuecomment-42121578
https://github.com/qutip/qutip/issues/122#issuecomment-42121578:38,Availability,error,errors,38,"It most likely is. Roundoff error and errors due to discreteness of the; ode methods will lead to some errors. One way to get around this is to; operate only on the upper or lower triangle of rho. This would also speed; things up; - Sent from my Sony Z Tablet. Frequently while I am using mesolve for some long protracted evolution the; density matrix at some point becomes nonhermitian (isherm and; checkherm()return false). I am guessing that this is just because of; numeric noise, as; there is nothing physically that can cause that (and it is happening even; when the evolution is purely unitary). Is this actually because of numerical noise?. If yes, I was wondering whether this can be addressed from within qutip or; whether the burden on addressing numerical noise should be on the user?. Is there a ""canonical qutip way"" to remove the nonhermitian numerical noise; from matrices that should be hermitian?. —; Reply to this email directly or view it on; GitHubhttps://github.com/qutip/qutip/issues/122; .",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/122#issuecomment-42121578
https://github.com/qutip/qutip/issues/122#issuecomment-42121578:103,Availability,error,errors,103,"It most likely is. Roundoff error and errors due to discreteness of the; ode methods will lead to some errors. One way to get around this is to; operate only on the upper or lower triangle of rho. This would also speed; things up; - Sent from my Sony Z Tablet. Frequently while I am using mesolve for some long protracted evolution the; density matrix at some point becomes nonhermitian (isherm and; checkherm()return false). I am guessing that this is just because of; numeric noise, as; there is nothing physically that can cause that (and it is happening even; when the evolution is purely unitary). Is this actually because of numerical noise?. If yes, I was wondering whether this can be addressed from within qutip or; whether the burden on addressing numerical noise should be on the user?. Is there a ""canonical qutip way"" to remove the nonhermitian numerical noise; from matrices that should be hermitian?. —; Reply to this email directly or view it on; GitHubhttps://github.com/qutip/qutip/issues/122; .",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/122#issuecomment-42121578
https://github.com/qutip/qutip/issues/122#issuecomment-107400015:116,Availability,error,errors,116,I was wondering if this is still an issue? If so I could try to spend some thinking on possible ways to correct the errors.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/122#issuecomment-107400015
https://github.com/qutip/qutip/issues/122#issuecomment-108683653:68,Availability,error,error,68,"Whether it is an issue likely depends on you school of thought. The error comes from the finite accuracy of the solvers. By default, the solutions are found using a method that is accurate 12-order in the step size and looks for absolute and relative errors at the 1e-8 and 1e-6 levels, respectively. If you evolve for long enough then inevitably there is going to be some error, and you will not get perfectly Hermitian matrices. One can accept this, and possibly lower the tolerance levels for more accuracy, or you can take 0.5*(A+A.dag()) to force the Hermicity. What method you use likely depends on your question and taste. Either way, I do not think that I would call this an issue. It is more of a fact of life when doing numerics. Paul. > On Jun 1, 2015, at 20:00, mmensing notifications@github.com wrote:; > ; > I was wondering if this is still an issue? If so I could try to spend some thinking on possible ways to correct the errors.; > ; > —; > Reply to this email directly or view it on GitHub https://github.com/qutip/qutip/issues/122#issuecomment-107400015.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/122#issuecomment-108683653
https://github.com/qutip/qutip/issues/122#issuecomment-108683653:251,Availability,error,errors,251,"Whether it is an issue likely depends on you school of thought. The error comes from the finite accuracy of the solvers. By default, the solutions are found using a method that is accurate 12-order in the step size and looks for absolute and relative errors at the 1e-8 and 1e-6 levels, respectively. If you evolve for long enough then inevitably there is going to be some error, and you will not get perfectly Hermitian matrices. One can accept this, and possibly lower the tolerance levels for more accuracy, or you can take 0.5*(A+A.dag()) to force the Hermicity. What method you use likely depends on your question and taste. Either way, I do not think that I would call this an issue. It is more of a fact of life when doing numerics. Paul. > On Jun 1, 2015, at 20:00, mmensing notifications@github.com wrote:; > ; > I was wondering if this is still an issue? If so I could try to spend some thinking on possible ways to correct the errors.; > ; > —; > Reply to this email directly or view it on GitHub https://github.com/qutip/qutip/issues/122#issuecomment-107400015.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/122#issuecomment-108683653
https://github.com/qutip/qutip/issues/122#issuecomment-108683653:373,Availability,error,error,373,"Whether it is an issue likely depends on you school of thought. The error comes from the finite accuracy of the solvers. By default, the solutions are found using a method that is accurate 12-order in the step size and looks for absolute and relative errors at the 1e-8 and 1e-6 levels, respectively. If you evolve for long enough then inevitably there is going to be some error, and you will not get perfectly Hermitian matrices. One can accept this, and possibly lower the tolerance levels for more accuracy, or you can take 0.5*(A+A.dag()) to force the Hermicity. What method you use likely depends on your question and taste. Either way, I do not think that I would call this an issue. It is more of a fact of life when doing numerics. Paul. > On Jun 1, 2015, at 20:00, mmensing notifications@github.com wrote:; > ; > I was wondering if this is still an issue? If so I could try to spend some thinking on possible ways to correct the errors.; > ; > —; > Reply to this email directly or view it on GitHub https://github.com/qutip/qutip/issues/122#issuecomment-107400015.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/122#issuecomment-108683653
https://github.com/qutip/qutip/issues/122#issuecomment-108683653:475,Availability,toler,tolerance,475,"Whether it is an issue likely depends on you school of thought. The error comes from the finite accuracy of the solvers. By default, the solutions are found using a method that is accurate 12-order in the step size and looks for absolute and relative errors at the 1e-8 and 1e-6 levels, respectively. If you evolve for long enough then inevitably there is going to be some error, and you will not get perfectly Hermitian matrices. One can accept this, and possibly lower the tolerance levels for more accuracy, or you can take 0.5*(A+A.dag()) to force the Hermicity. What method you use likely depends on your question and taste. Either way, I do not think that I would call this an issue. It is more of a fact of life when doing numerics. Paul. > On Jun 1, 2015, at 20:00, mmensing notifications@github.com wrote:; > ; > I was wondering if this is still an issue? If so I could try to spend some thinking on possible ways to correct the errors.; > ; > —; > Reply to this email directly or view it on GitHub https://github.com/qutip/qutip/issues/122#issuecomment-107400015.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/122#issuecomment-108683653
https://github.com/qutip/qutip/issues/122#issuecomment-108683653:938,Availability,error,errors,938,"Whether it is an issue likely depends on you school of thought. The error comes from the finite accuracy of the solvers. By default, the solutions are found using a method that is accurate 12-order in the step size and looks for absolute and relative errors at the 1e-8 and 1e-6 levels, respectively. If you evolve for long enough then inevitably there is going to be some error, and you will not get perfectly Hermitian matrices. One can accept this, and possibly lower the tolerance levels for more accuracy, or you can take 0.5*(A+A.dag()) to force the Hermicity. What method you use likely depends on your question and taste. Either way, I do not think that I would call this an issue. It is more of a fact of life when doing numerics. Paul. > On Jun 1, 2015, at 20:00, mmensing notifications@github.com wrote:; > ; > I was wondering if this is still an issue? If so I could try to spend some thinking on possible ways to correct the errors.; > ; > —; > Reply to this email directly or view it on GitHub https://github.com/qutip/qutip/issues/122#issuecomment-107400015.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/122#issuecomment-108683653
https://github.com/qutip/qutip/issues/122#issuecomment-108683653:30,Integrability,depend,depends,30,"Whether it is an issue likely depends on you school of thought. The error comes from the finite accuracy of the solvers. By default, the solutions are found using a method that is accurate 12-order in the step size and looks for absolute and relative errors at the 1e-8 and 1e-6 levels, respectively. If you evolve for long enough then inevitably there is going to be some error, and you will not get perfectly Hermitian matrices. One can accept this, and possibly lower the tolerance levels for more accuracy, or you can take 0.5*(A+A.dag()) to force the Hermicity. What method you use likely depends on your question and taste. Either way, I do not think that I would call this an issue. It is more of a fact of life when doing numerics. Paul. > On Jun 1, 2015, at 20:00, mmensing notifications@github.com wrote:; > ; > I was wondering if this is still an issue? If so I could try to spend some thinking on possible ways to correct the errors.; > ; > —; > Reply to this email directly or view it on GitHub https://github.com/qutip/qutip/issues/122#issuecomment-107400015.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/122#issuecomment-108683653
https://github.com/qutip/qutip/issues/122#issuecomment-108683653:594,Integrability,depend,depends,594,"Whether it is an issue likely depends on you school of thought. The error comes from the finite accuracy of the solvers. By default, the solutions are found using a method that is accurate 12-order in the step size and looks for absolute and relative errors at the 1e-8 and 1e-6 levels, respectively. If you evolve for long enough then inevitably there is going to be some error, and you will not get perfectly Hermitian matrices. One can accept this, and possibly lower the tolerance levels for more accuracy, or you can take 0.5*(A+A.dag()) to force the Hermicity. What method you use likely depends on your question and taste. Either way, I do not think that I would call this an issue. It is more of a fact of life when doing numerics. Paul. > On Jun 1, 2015, at 20:00, mmensing notifications@github.com wrote:; > ; > I was wondering if this is still an issue? If so I could try to spend some thinking on possible ways to correct the errors.; > ; > —; > Reply to this email directly or view it on GitHub https://github.com/qutip/qutip/issues/122#issuecomment-107400015.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/122#issuecomment-108683653
https://github.com/qutip/qutip/issues/122#issuecomment-108683653:308,Modifiability,evolve,evolve,308,"Whether it is an issue likely depends on you school of thought. The error comes from the finite accuracy of the solvers. By default, the solutions are found using a method that is accurate 12-order in the step size and looks for absolute and relative errors at the 1e-8 and 1e-6 levels, respectively. If you evolve for long enough then inevitably there is going to be some error, and you will not get perfectly Hermitian matrices. One can accept this, and possibly lower the tolerance levels for more accuracy, or you can take 0.5*(A+A.dag()) to force the Hermicity. What method you use likely depends on your question and taste. Either way, I do not think that I would call this an issue. It is more of a fact of life when doing numerics. Paul. > On Jun 1, 2015, at 20:00, mmensing notifications@github.com wrote:; > ; > I was wondering if this is still an issue? If so I could try to spend some thinking on possible ways to correct the errors.; > ; > —; > Reply to this email directly or view it on GitHub https://github.com/qutip/qutip/issues/122#issuecomment-107400015.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/122#issuecomment-108683653
https://github.com/qutip/qutip/issues/123#issuecomment-42158885:757,Availability,error,error,757,"`[]` is a list while 'identity' is function, so they will invoke two different type of time-dependent functions (list-string or list-function type or function callback type, respectively). `rhs_reuse` only applies to the list-string type, so it should only affect the first type of call to `mesolve`. It might be that we have a bug in handing of empty lists as first argument to mesolve, I will look into that. Regarding `rhs_reuse` it can behave a bit differently in a script and the notebook because a notebook is one long-running python process, so the state of `rhs_reuse` might be retained from one call to `mesolve` to another, while a script would get reset between successive calls (runs of the script). I guess this is the reason for the backtrace error you show. Note that you cannot use `rhs_reuse` with successive calls to `mesolve` if you change the function signature. If this is not the case, then it would be useful with a small minimum example (script or notebook) that reproduces the error. ps.. In your second use-case you qouted `mesolve(identity, ..)`. In this case I would rather use `mesolve(identity(), ..)`, so that the first argument is a `Qobj` instance rather than the function that returns one.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/123#issuecomment-42158885
https://github.com/qutip/qutip/issues/123#issuecomment-42158885:1002,Availability,error,error,1002,"`[]` is a list while 'identity' is function, so they will invoke two different type of time-dependent functions (list-string or list-function type or function callback type, respectively). `rhs_reuse` only applies to the list-string type, so it should only affect the first type of call to `mesolve`. It might be that we have a bug in handing of empty lists as first argument to mesolve, I will look into that. Regarding `rhs_reuse` it can behave a bit differently in a script and the notebook because a notebook is one long-running python process, so the state of `rhs_reuse` might be retained from one call to `mesolve` to another, while a script would get reset between successive calls (runs of the script). I guess this is the reason for the backtrace error you show. Note that you cannot use `rhs_reuse` with successive calls to `mesolve` if you change the function signature. If this is not the case, then it would be useful with a small minimum example (script or notebook) that reproduces the error. ps.. In your second use-case you qouted `mesolve(identity, ..)`. In this case I would rather use `mesolve(identity(), ..)`, so that the first argument is a `Qobj` instance rather than the function that returns one.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/123#issuecomment-42158885
https://github.com/qutip/qutip/issues/123#issuecomment-42158885:92,Integrability,depend,dependent,92,"`[]` is a list while 'identity' is function, so they will invoke two different type of time-dependent functions (list-string or list-function type or function callback type, respectively). `rhs_reuse` only applies to the list-string type, so it should only affect the first type of call to `mesolve`. It might be that we have a bug in handing of empty lists as first argument to mesolve, I will look into that. Regarding `rhs_reuse` it can behave a bit differently in a script and the notebook because a notebook is one long-running python process, so the state of `rhs_reuse` might be retained from one call to `mesolve` to another, while a script would get reset between successive calls (runs of the script). I guess this is the reason for the backtrace error you show. Note that you cannot use `rhs_reuse` with successive calls to `mesolve` if you change the function signature. If this is not the case, then it would be useful with a small minimum example (script or notebook) that reproduces the error. ps.. In your second use-case you qouted `mesolve(identity, ..)`. In this case I would rather use `mesolve(identity(), ..)`, so that the first argument is a `Qobj` instance rather than the function that returns one.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/123#issuecomment-42158885
https://github.com/qutip/qutip/issues/126#issuecomment-42841619:126,Availability,error,error,126,"Which version of QuTiP and which version of Cython do you have? I think this is an issue with a Cython version number parsing error in QuTiP, but if I am not mistaken it has been fixed in the development version of qutip that you find here on github,",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42841619
https://github.com/qutip/qutip/issues/126#issuecomment-42849332:51,Deployability,release,release,51,"It's ""Cython version 0.20.1post0"" and the official release of QuTiP (2.2.0) I'm using.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42849332
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:26,Availability,error,error,26,"Now it gives me one other error and a failure (and I have the impression the I can deal with the prior errors better than with the new one):. > > > import qutip.testing as qt; > > > qt.run(); > > > Qobj data ... ok; > > > Qobj type ... ok; > > > Qobj Hermicity ... ok; > > > Qobj shape ... ok; > > > Qobj addition ... ERROR; > > > Qobj subtraction ... ok; > > > Qobj multiplication ... ok; > > > Qobj division ... ok; > > > Qobj power ... FAIL; > > > Qobj negation ... ok; > > > Qobj equals ... ok; > > > Qobj getitem ... ok; > > > Qobj multiplication type ... ok; > > > Qobj conjugate ... ok; > > > Qobj adjoint (dagger) ... ok; > > > Qobj diagonals ... ok; > > > Qobj eigenenergies ... ok; > > > Qobj eigenstates ... ok; > > > Qobj expm ... ok; > > > Qobj full ... ok; > > > Qobj ket type ... ok; > > > Qobj bra type ... ok; > > > Qobj operator type ... ok; > > > Qobj superoperator type ... ok; > > > Sparse: Symmetric Permute ... ok; > > > Sparse: Nonsymmetric Permute ... ok; > > > Sparse: Symmetric Reverse Permute ... ok; > > > Sparse: Nonsymmetric Reverse Permute ... ok; > > > Sparse: Bandwidth ... ok; > > > Transform 2-level to eigenbasis and back ... ok; > > > Transform 10-level real-values to eigenbasis and back ... ok; > > > Transform 10-level to eigenbasis and back ... ok; > > > Transform 10-level imag to eigenbasis and back ... ok; > > > Check diagonalization via eigenbasis transformation ... ok; > > > brmesolve: harmonic oscillator, finite temperature ... ok; > > > brmesolve: harmonic oscillator, finite temperature, states ... ok; > > > brmesolve: harmonic oscillator, zero temperature ... ok; > > > brmesolve: Jaynes-Cummings model, zero temperature ... ok; > > > brmesolve: qubit ... ok; > > > correlation: comparing me and es for oscillator in coherent initial state ... ok; > > > correlation: comparing me and es for oscillator in steady state ... ok; > > > correlation: compare spectrum from eseries and pseudo-inverse methods ... ok; > > > Diagonalization of random two-",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:38,Availability,failure,failure,38,"Now it gives me one other error and a failure (and I have the impression the I can deal with the prior errors better than with the new one):. > > > import qutip.testing as qt; > > > qt.run(); > > > Qobj data ... ok; > > > Qobj type ... ok; > > > Qobj Hermicity ... ok; > > > Qobj shape ... ok; > > > Qobj addition ... ERROR; > > > Qobj subtraction ... ok; > > > Qobj multiplication ... ok; > > > Qobj division ... ok; > > > Qobj power ... FAIL; > > > Qobj negation ... ok; > > > Qobj equals ... ok; > > > Qobj getitem ... ok; > > > Qobj multiplication type ... ok; > > > Qobj conjugate ... ok; > > > Qobj adjoint (dagger) ... ok; > > > Qobj diagonals ... ok; > > > Qobj eigenenergies ... ok; > > > Qobj eigenstates ... ok; > > > Qobj expm ... ok; > > > Qobj full ... ok; > > > Qobj ket type ... ok; > > > Qobj bra type ... ok; > > > Qobj operator type ... ok; > > > Qobj superoperator type ... ok; > > > Sparse: Symmetric Permute ... ok; > > > Sparse: Nonsymmetric Permute ... ok; > > > Sparse: Symmetric Reverse Permute ... ok; > > > Sparse: Nonsymmetric Reverse Permute ... ok; > > > Sparse: Bandwidth ... ok; > > > Transform 2-level to eigenbasis and back ... ok; > > > Transform 10-level real-values to eigenbasis and back ... ok; > > > Transform 10-level to eigenbasis and back ... ok; > > > Transform 10-level imag to eigenbasis and back ... ok; > > > Check diagonalization via eigenbasis transformation ... ok; > > > brmesolve: harmonic oscillator, finite temperature ... ok; > > > brmesolve: harmonic oscillator, finite temperature, states ... ok; > > > brmesolve: harmonic oscillator, zero temperature ... ok; > > > brmesolve: Jaynes-Cummings model, zero temperature ... ok; > > > brmesolve: qubit ... ok; > > > correlation: comparing me and es for oscillator in coherent initial state ... ok; > > > correlation: comparing me and es for oscillator in steady state ... ok; > > > correlation: compare spectrum from eseries and pseudo-inverse methods ... ok; > > > Diagonalization of random two-",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:103,Availability,error,errors,103,"Now it gives me one other error and a failure (and I have the impression the I can deal with the prior errors better than with the new one):. > > > import qutip.testing as qt; > > > qt.run(); > > > Qobj data ... ok; > > > Qobj type ... ok; > > > Qobj Hermicity ... ok; > > > Qobj shape ... ok; > > > Qobj addition ... ERROR; > > > Qobj subtraction ... ok; > > > Qobj multiplication ... ok; > > > Qobj division ... ok; > > > Qobj power ... FAIL; > > > Qobj negation ... ok; > > > Qobj equals ... ok; > > > Qobj getitem ... ok; > > > Qobj multiplication type ... ok; > > > Qobj conjugate ... ok; > > > Qobj adjoint (dagger) ... ok; > > > Qobj diagonals ... ok; > > > Qobj eigenenergies ... ok; > > > Qobj eigenstates ... ok; > > > Qobj expm ... ok; > > > Qobj full ... ok; > > > Qobj ket type ... ok; > > > Qobj bra type ... ok; > > > Qobj operator type ... ok; > > > Qobj superoperator type ... ok; > > > Sparse: Symmetric Permute ... ok; > > > Sparse: Nonsymmetric Permute ... ok; > > > Sparse: Symmetric Reverse Permute ... ok; > > > Sparse: Nonsymmetric Reverse Permute ... ok; > > > Sparse: Bandwidth ... ok; > > > Transform 2-level to eigenbasis and back ... ok; > > > Transform 10-level real-values to eigenbasis and back ... ok; > > > Transform 10-level to eigenbasis and back ... ok; > > > Transform 10-level imag to eigenbasis and back ... ok; > > > Check diagonalization via eigenbasis transformation ... ok; > > > brmesolve: harmonic oscillator, finite temperature ... ok; > > > brmesolve: harmonic oscillator, finite temperature, states ... ok; > > > brmesolve: harmonic oscillator, zero temperature ... ok; > > > brmesolve: Jaynes-Cummings model, zero temperature ... ok; > > > brmesolve: qubit ... ok; > > > correlation: comparing me and es for oscillator in coherent initial state ... ok; > > > correlation: comparing me and es for oscillator in steady state ... ok; > > > correlation: compare spectrum from eseries and pseudo-inverse methods ... ok; > > > Diagonalization of random two-",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:318,Availability,ERROR,ERROR,318,"Now it gives me one other error and a failure (and I have the impression the I can deal with the prior errors better than with the new one):. > > > import qutip.testing as qt; > > > qt.run(); > > > Qobj data ... ok; > > > Qobj type ... ok; > > > Qobj Hermicity ... ok; > > > Qobj shape ... ok; > > > Qobj addition ... ERROR; > > > Qobj subtraction ... ok; > > > Qobj multiplication ... ok; > > > Qobj division ... ok; > > > Qobj power ... FAIL; > > > Qobj negation ... ok; > > > Qobj equals ... ok; > > > Qobj getitem ... ok; > > > Qobj multiplication type ... ok; > > > Qobj conjugate ... ok; > > > Qobj adjoint (dagger) ... ok; > > > Qobj diagonals ... ok; > > > Qobj eigenenergies ... ok; > > > Qobj eigenstates ... ok; > > > Qobj expm ... ok; > > > Qobj full ... ok; > > > Qobj ket type ... ok; > > > Qobj bra type ... ok; > > > Qobj operator type ... ok; > > > Qobj superoperator type ... ok; > > > Sparse: Symmetric Permute ... ok; > > > Sparse: Nonsymmetric Permute ... ok; > > > Sparse: Symmetric Reverse Permute ... ok; > > > Sparse: Nonsymmetric Reverse Permute ... ok; > > > Sparse: Bandwidth ... ok; > > > Transform 2-level to eigenbasis and back ... ok; > > > Transform 10-level real-values to eigenbasis and back ... ok; > > > Transform 10-level to eigenbasis and back ... ok; > > > Transform 10-level imag to eigenbasis and back ... ok; > > > Check diagonalization via eigenbasis transformation ... ok; > > > brmesolve: harmonic oscillator, finite temperature ... ok; > > > brmesolve: harmonic oscillator, finite temperature, states ... ok; > > > brmesolve: harmonic oscillator, zero temperature ... ok; > > > brmesolve: Jaynes-Cummings model, zero temperature ... ok; > > > brmesolve: qubit ... ok; > > > correlation: comparing me and es for oscillator in coherent initial state ... ok; > > > correlation: comparing me and es for oscillator in steady state ... ok; > > > correlation: compare spectrum from eseries and pseudo-inverse methods ... ok; > > > Diagonalization of random two-",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:12043,Availability,ERROR,ERROR,12043,"or: Checks that randomly generated superoperators are ... ok; > > > Superoperator: Randomized comparison of standard and optimized ... ok; > > > Superoperator: Conversion matrix to vector to matrix ... ok; > > > Superoperator: Test unitary transformation with operators and superoperators. ... ok; > > > Superoperator: Test compability between matrix/vector conversion and ... ok; > > > Superoperator: Conversion between matrix and vector indices ... ok; > > > Superoperator: Conversion vector to matrix to vector ... ok; > > > qutip.tests.test_superoperator.TestMatrixVector.test_reshuffle ... ok; > > > utilities: energy unit conversions ... ok; > > > wigner: test wigner function calculation for coherent states ... ok; > > > wigner: test wigner function calculation for Fock states ... ok; > > > wigner: compare wigner methods for random density matrices ... ok; > > > wigner: compare wigner methods for random state vectors ... ok; > > > Wigner: Compare Wigner fft and iterative for rand. ket ... ok; > > > Wigner: Compare Wigner fft and iterative for rand. dm ... ok. # . ## ERROR: Qobj addition. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py"", line 139, in test_QobjAddition; assert_equal(q4.type, ischeck(q4)); NameError: global name 'ischeck' is not defined. # . ## FAIL: Qobj power. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(_self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py"", line 225, in test_QobjPower; assert_equal(all(q3.data.todense() - matrix(data) *_ 3), 0); File ""/usr/lib/python2.7/dist-packages/numpy/testing/utils.py"", line 317, in assert_equal; raise AssertionError(msg); AssertionError: ; Items are not equal:; ACTUAL: True; DESIRED: 0. ---. Ran 221 tests in 256.712s. FAILED (SKIP=1, errors=1, failures=1)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:12941,Availability,error,errors,12941,"or: Checks that randomly generated superoperators are ... ok; > > > Superoperator: Randomized comparison of standard and optimized ... ok; > > > Superoperator: Conversion matrix to vector to matrix ... ok; > > > Superoperator: Test unitary transformation with operators and superoperators. ... ok; > > > Superoperator: Test compability between matrix/vector conversion and ... ok; > > > Superoperator: Conversion between matrix and vector indices ... ok; > > > Superoperator: Conversion vector to matrix to vector ... ok; > > > qutip.tests.test_superoperator.TestMatrixVector.test_reshuffle ... ok; > > > utilities: energy unit conversions ... ok; > > > wigner: test wigner function calculation for coherent states ... ok; > > > wigner: test wigner function calculation for Fock states ... ok; > > > wigner: compare wigner methods for random density matrices ... ok; > > > wigner: compare wigner methods for random state vectors ... ok; > > > Wigner: Compare Wigner fft and iterative for rand. ket ... ok; > > > Wigner: Compare Wigner fft and iterative for rand. dm ... ok. # . ## ERROR: Qobj addition. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py"", line 139, in test_QobjAddition; assert_equal(q4.type, ischeck(q4)); NameError: global name 'ischeck' is not defined. # . ## FAIL: Qobj power. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(_self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py"", line 225, in test_QobjPower; assert_equal(all(q3.data.todense() - matrix(data) *_ 3), 0); File ""/usr/lib/python2.7/dist-packages/numpy/testing/utils.py"", line 317, in assert_equal; raise AssertionError(msg); AssertionError: ; Items are not equal:; ACTUAL: True; DESIRED: 0. ---. Ran 221 tests in 256.712s. FAILED (SKIP=1, errors=1, failures=1)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:12951,Availability,failure,failures,12951,"or: Checks that randomly generated superoperators are ... ok; > > > Superoperator: Randomized comparison of standard and optimized ... ok; > > > Superoperator: Conversion matrix to vector to matrix ... ok; > > > Superoperator: Test unitary transformation with operators and superoperators. ... ok; > > > Superoperator: Test compability between matrix/vector conversion and ... ok; > > > Superoperator: Conversion between matrix and vector indices ... ok; > > > Superoperator: Conversion vector to matrix to vector ... ok; > > > qutip.tests.test_superoperator.TestMatrixVector.test_reshuffle ... ok; > > > utilities: energy unit conversions ... ok; > > > wigner: test wigner function calculation for coherent states ... ok; > > > wigner: test wigner function calculation for Fock states ... ok; > > > wigner: compare wigner methods for random density matrices ... ok; > > > wigner: compare wigner methods for random state vectors ... ok; > > > Wigner: Compare Wigner fft and iterative for rand. ket ... ok; > > > Wigner: Compare Wigner fft and iterative for rand. dm ... ok. # . ## ERROR: Qobj addition. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py"", line 139, in test_QobjAddition; assert_equal(q4.type, ischeck(q4)); NameError: global name 'ischeck' is not defined. # . ## FAIL: Qobj power. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(_self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py"", line 225, in test_QobjPower; assert_equal(all(q3.data.todense() - matrix(data) *_ 3), 0); File ""/usr/lib/python2.7/dist-packages/numpy/testing/utils.py"", line 317, in assert_equal; raise AssertionError(msg); AssertionError: ; Items are not equal:; ACTUAL: True; DESIRED: 0. ---. Ran 221 tests in 256.712s. FAILED (SKIP=1, errors=1, failures=1)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:3397,Deployability,install,installed,3397,"list and state ... ok; > > > expect: operator list and state list ... ok; > > > expect: operator and state list ... ok; > > > Read and write complex valued decimal formatted data ... ok; > > > Read and write complex valued default formatted data ... ok; > > > Read and write complex valued exp formatted data ... ok; > > > Read and write real valued decimal formatted data ... ok; > > > Read and write real valued default formatted data ... ok; > > > Read and write real valued exp formatted data ... ok; > > > Read and write with automatic separator detection ... ok; > > > Floquet: test unitary evolution of time-dependent two-level system ... ok; > > > gates: expand 1 to N ... ok; > > > gates: expand 2 to N (using cnot, iswap, sqrtswap) ... ok; > > > gates: expand 2 to N (using swap) ... ok; > > > gates: expand 3 to N (using toffoli, fredkin, and random 3 qubit gate) ... ok; > > > gates: swap gate ... ok; > > > Graph: Breadth-First Search ... ok; > > > Graph: Graph Degree ... SKIP: Networkx not installed.; > > > Graph: Reverse Cuthill-McKee Ordering (simple) ... ok; > > > Graph: Reverse Cuthill-McKee Ordering (Bucky) ... ok; > > > Graph: Reverse Cuthill-McKee Ordering (boost) ... ok; > > > Monte-carlo: Constant H with no collapse ops (expect) ... ok; > > > Monte-carlo: Constant H with no collapse ops (states) ... ok; > > > Monte-carlo: Constant H (str format) with no collapse ops (expect) ... ok; > > > Monte-carlo: Constant H (func format) with no collapse ops (expect) ... ok; > > > Monte-carlo: Constant H (str format) with no collapse ops (states) ... ok; > > > Monte-carlo: Constant H (func format) with no collapse ops (states) ... ok; > > > Monte-carlo: Constant H with constant collapse ... ok; > > > Monte-carlo: Constant H with single collapse operator ... ok; > > > Monte-carlo: Constant H with single expect operator ... ok; > > > Monte-carlo: Collapse terms constant (func format) ... ok; > > > Monte-carlo: Collapse terms constant (str format) ... ok; > > > Monte-carl",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:429,Energy Efficiency,power,power,429,"Now it gives me one other error and a failure (and I have the impression the I can deal with the prior errors better than with the new one):. > > > import qutip.testing as qt; > > > qt.run(); > > > Qobj data ... ok; > > > Qobj type ... ok; > > > Qobj Hermicity ... ok; > > > Qobj shape ... ok; > > > Qobj addition ... ERROR; > > > Qobj subtraction ... ok; > > > Qobj multiplication ... ok; > > > Qobj division ... ok; > > > Qobj power ... FAIL; > > > Qobj negation ... ok; > > > Qobj equals ... ok; > > > Qobj getitem ... ok; > > > Qobj multiplication type ... ok; > > > Qobj conjugate ... ok; > > > Qobj adjoint (dagger) ... ok; > > > Qobj diagonals ... ok; > > > Qobj eigenenergies ... ok; > > > Qobj eigenstates ... ok; > > > Qobj expm ... ok; > > > Qobj full ... ok; > > > Qobj ket type ... ok; > > > Qobj bra type ... ok; > > > Qobj operator type ... ok; > > > Qobj superoperator type ... ok; > > > Sparse: Symmetric Permute ... ok; > > > Sparse: Nonsymmetric Permute ... ok; > > > Sparse: Symmetric Reverse Permute ... ok; > > > Sparse: Nonsymmetric Reverse Permute ... ok; > > > Sparse: Bandwidth ... ok; > > > Transform 2-level to eigenbasis and back ... ok; > > > Transform 10-level real-values to eigenbasis and back ... ok; > > > Transform 10-level to eigenbasis and back ... ok; > > > Transform 10-level imag to eigenbasis and back ... ok; > > > Check diagonalization via eigenbasis transformation ... ok; > > > brmesolve: harmonic oscillator, finite temperature ... ok; > > > brmesolve: harmonic oscillator, finite temperature, states ... ok; > > > brmesolve: harmonic oscillator, zero temperature ... ok; > > > brmesolve: Jaynes-Cummings model, zero temperature ... ok; > > > brmesolve: qubit ... ok; > > > correlation: comparing me and es for oscillator in coherent initial state ... ok; > > > correlation: comparing me and es for oscillator in steady state ... ok; > > > correlation: compare spectrum from eseries and pseudo-inverse methods ... ok; > > > Diagonalization of random two-",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:6697,Energy Efficiency,power,power,6697,ist ... ok; > > > mesolve: simple constant decay ... ok; > > > mesolve: simple constant decay ... ok; > > > Metrics: Checks that average gate fidelities are sensible for random ... ok; > > > odechecks: monte-carlo ... ok; > > > Spin 1/2 operators ... ok; > > > Spin 3/2 operators ... ok; > > > Spin 2 operators ... ok; > > > Spin 5/2 operators ... ok; > > > Destruction operator ... ok; > > > Creation operator ... ok; > > > Identity operator ... ok; > > > Number operator ... ok; > > > Squeezing operator ... ok; > > > Displacement operator ... ok; > > > parfor ... ok; > > > partial transpose of bipartite systems ... ok; > > > partial transpose: comparing sparse and dense implementations ... ok; > > > partial transpose: randomized tests on tripartite system ... ok; > > > Qobj data ... ok; > > > Qobj type ... ok; > > > Qobj Hermicity ... ok; > > > Qobj shape ... ok; > > > Qobj addition ... ok; > > > Qobj subtraction ... ok; > > > Qobj multiplication ... ok; > > > Qobj division ... ok; > > > Qobj power ... ok; > > > Qobj negation ... ok; > > > Qobj equals ... ok; > > > Qobj getitem ... ok; > > > Qobj multiplication type ... ok; > > > Qobj conjugate ... ok; > > > Qobj adjoint (dagger) ... ok; > > > Qobj diagonals ... ok; > > > Qobj eigenenergies ... ok; > > > Qobj eigenstates ... ok; > > > Qobj expm ... ok; > > > Qobj full ... ok; > > > Qobj norm ... ok; > > > Qobj permute ... ok; > > > Qobj ket type ... ok; > > > Qobj bra type ... ok; > > > Qobj operator type ... ok; > > > Qobj superoperator type ... ok; > > > Superoperator arithmetic: Checks that binary ops preserve 'superrep'. ... ok; > > > Superoperator arithmetic: Checks that binary ops preserve 'superrep'. ... ok; > > > Superoperator arithmetic: Checks that binary ops preserve 'superrep'. ... ok; > > > Superoperator arithmetic: Checks that binary ops preserve 'superrep'. ... ok; > > > Superoperator arithmetic: Checks that binary ops preserve 'superrep'. ... ok; > > > Superoperator arithmetic: Checks that binary ops pre,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:10021,Energy Efficiency,Efficient,Efficient,10021,"y ... ok; > > > random density matrix ... ok; > > > random hermitian ... ok; > > > random ket ... ok; > > > Sparse eigs Hermitian ... ok; > > > Sparse eigs non-Hermitian ... ok; > > > Sparse eigvals only Hermitian. ... ok; > > > Dense eigs Hermitian. ... ok; > > > Dense eigs non-Hermitian ... ok; > > > Dense eigvals only Hermitian ... ok; > > > states: coherent density matrix ... ok; > > > states: Fock density matrix ... ok; > > > states: thermal density matrix ... ok; > > > Steady state: Thermal qubit ... ok; > > > Steady state: Thermal harmonic oscillator ... ok; > > > Steady state: Driven cavity ... ok; > > > Stochastic: smesolve: photo-current ... ok; > > > Stochastic: smesolve: homodyne ... ok; > > > Stochastic: smesolve: heterodyne ... ok; > > > Stochastic: ssesolve: photo-current ... ; > > > ok; > > > Stochastic: ssesolve: homodyne ... ok; > > > Stochastic: ssesolve: heterodyne ... ok; > > > Composite system, operator on Hilbert space. ... ok; > > > Superoperator: Efficient numerics and reference return same result, ... ok; > > > Non-composite system, operator on Hilbert space. ... ok; > > > Non-composite system, operator on Liouville space. ... ok; > > > Superoperator: Converting superoperator to Choi matrix and back. ... ok; > > > Superoperator: Test that to_choi(q) returns q if q is already Choi. ... ok; > > > Superoperator: Test that converting a two-qubit superoperator through ... /usr/local/lib/python2.7/dist-packages/qutip/qobj.py:412: UserWarning: Multiplying superoperators with different representations; > > > warnings.warn(msg); > > > ok; > > > Superoperator: Converting superoperator to Choi matrix and back. ... ok; > > > Superoperator: Test that to_super(q) returns q if q is already a ... ok; > > > Superoperator: Checks that the trace of matrices returned by to_choi ... ok; > > > Superoperator: Checks that iscp, istp and iscptp work in a few different ... ok; > > > Superoperator: Checks that randomly generated superoperators are ... ok; > > > Super",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:11578,Energy Efficiency,energy,energy,11578,"; > > > warnings.warn(msg); > > > ok; > > > Superoperator: Converting superoperator to Choi matrix and back. ... ok; > > > Superoperator: Test that to_super(q) returns q if q is already a ... ok; > > > Superoperator: Checks that the trace of matrices returned by to_choi ... ok; > > > Superoperator: Checks that iscp, istp and iscptp work in a few different ... ok; > > > Superoperator: Checks that randomly generated superoperators are ... ok; > > > Superoperator: Randomized comparison of standard and optimized ... ok; > > > Superoperator: Conversion matrix to vector to matrix ... ok; > > > Superoperator: Test unitary transformation with operators and superoperators. ... ok; > > > Superoperator: Test compability between matrix/vector conversion and ... ok; > > > Superoperator: Conversion between matrix and vector indices ... ok; > > > Superoperator: Conversion vector to matrix to vector ... ok; > > > qutip.tests.test_superoperator.TestMatrixVector.test_reshuffle ... ok; > > > utilities: energy unit conversions ... ok; > > > wigner: test wigner function calculation for coherent states ... ok; > > > wigner: test wigner function calculation for Fock states ... ok; > > > wigner: compare wigner methods for random density matrices ... ok; > > > wigner: compare wigner methods for random state vectors ... ok; > > > Wigner: Compare Wigner fft and iterative for rand. ket ... ok; > > > Wigner: Compare Wigner fft and iterative for rand. dm ... ok. # . ## ERROR: Qobj addition. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py"", line 139, in test_QobjAddition; assert_equal(q4.type, ischeck(q4)); NameError: global name 'ischeck' is not defined. # . ## FAIL: Qobj power. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(_self.arg); File ""/usr/local/lib/python2.7/di",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:12406,Energy Efficiency,power,power,12406,"or: Checks that randomly generated superoperators are ... ok; > > > Superoperator: Randomized comparison of standard and optimized ... ok; > > > Superoperator: Conversion matrix to vector to matrix ... ok; > > > Superoperator: Test unitary transformation with operators and superoperators. ... ok; > > > Superoperator: Test compability between matrix/vector conversion and ... ok; > > > Superoperator: Conversion between matrix and vector indices ... ok; > > > Superoperator: Conversion vector to matrix to vector ... ok; > > > qutip.tests.test_superoperator.TestMatrixVector.test_reshuffle ... ok; > > > utilities: energy unit conversions ... ok; > > > wigner: test wigner function calculation for coherent states ... ok; > > > wigner: test wigner function calculation for Fock states ... ok; > > > wigner: compare wigner methods for random density matrices ... ok; > > > wigner: compare wigner methods for random state vectors ... ok; > > > Wigner: Compare Wigner fft and iterative for rand. ket ... ok; > > > Wigner: Compare Wigner fft and iterative for rand. dm ... ok. # . ## ERROR: Qobj addition. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py"", line 139, in test_QobjAddition; assert_equal(q4.type, ischeck(q4)); NameError: global name 'ischeck' is not defined. # . ## FAIL: Qobj power. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(_self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py"", line 225, in test_QobjPower; assert_equal(all(q3.data.todense() - matrix(data) *_ 3), 0); File ""/usr/lib/python2.7/dist-packages/numpy/testing/utils.py"", line 317, in assert_equal; raise AssertionError(msg); AssertionError: ; Items are not equal:; ACTUAL: True; DESIRED: 0. ---. Ran 221 tests in 256.712s. FAILED (SKIP=1, errors=1, failures=1)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:3007,Integrability,depend,dependent,3007,"m two-level system ... ok; > > > Diagonalization of composite systems ... ok; > > > von-Neumann entropy ... ok; > > > Linear entropy ... ok; > > > Concurrence ... ok; > > > Mutual information ... ok; > > > Conditional entropy ... ok; > > > expect: operator list and state list ... ok; > > > expect: operator and density matrix ... ok; > > > expect: operator and ket ... ok; > > > expect: operator list and state ... ok; > > > expect: operator list and state list ... ok; > > > expect: operator and state list ... ok; > > > Read and write complex valued decimal formatted data ... ok; > > > Read and write complex valued default formatted data ... ok; > > > Read and write complex valued exp formatted data ... ok; > > > Read and write real valued decimal formatted data ... ok; > > > Read and write real valued default formatted data ... ok; > > > Read and write real valued exp formatted data ... ok; > > > Read and write with automatic separator detection ... ok; > > > Floquet: test unitary evolution of time-dependent two-level system ... ok; > > > gates: expand 1 to N ... ok; > > > gates: expand 2 to N (using cnot, iswap, sqrtswap) ... ok; > > > gates: expand 2 to N (using swap) ... ok; > > > gates: expand 3 to N (using toffoli, fredkin, and random 3 qubit gate) ... ok; > > > gates: swap gate ... ok; > > > Graph: Breadth-First Search ... ok; > > > Graph: Graph Degree ... SKIP: Networkx not installed.; > > > Graph: Reverse Cuthill-McKee Ordering (simple) ... ok; > > > Graph: Reverse Cuthill-McKee Ordering (Bucky) ... ok; > > > Graph: Reverse Cuthill-McKee Ordering (boost) ... ok; > > > Monte-carlo: Constant H with no collapse ops (expect) ... ok; > > > Monte-carlo: Constant H with no collapse ops (states) ... ok; > > > Monte-carlo: Constant H (str format) with no collapse ops (expect) ... ok; > > > Monte-carlo: Constant H (func format) with no collapse ops (expect) ... ok; > > > Monte-carlo: Constant H (str format) with no collapse ops (states) ... ok; > > > Monte-carlo: Constan",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:4400,Integrability,depend,dependent,4400,"stalled.; > > > Graph: Reverse Cuthill-McKee Ordering (simple) ... ok; > > > Graph: Reverse Cuthill-McKee Ordering (Bucky) ... ok; > > > Graph: Reverse Cuthill-McKee Ordering (boost) ... ok; > > > Monte-carlo: Constant H with no collapse ops (expect) ... ok; > > > Monte-carlo: Constant H with no collapse ops (states) ... ok; > > > Monte-carlo: Constant H (str format) with no collapse ops (expect) ... ok; > > > Monte-carlo: Constant H (func format) with no collapse ops (expect) ... ok; > > > Monte-carlo: Constant H (str format) with no collapse ops (states) ... ok; > > > Monte-carlo: Constant H (func format) with no collapse ops (states) ... ok; > > > Monte-carlo: Constant H with constant collapse ... ok; > > > Monte-carlo: Constant H with single collapse operator ... ok; > > > Monte-carlo: Constant H with single expect operator ... ok; > > > Monte-carlo: Collapse terms constant (func format) ... ok; > > > Monte-carlo: Collapse terms constant (str format) ... ok; > > > Monte-carlo: Time-dependent H (func format) ... ok; > > > Monte-carlo: Time-dependent H (str format) ... ok; > > > Monte-carlo: check for correct dtypes (average_states=True) ... ok; > > > Monte-carlo: check for correct dtypes (average_states=False) ... ok; > > > mcsolve_f90: Constant H with no collapse ops (expect) ... ok; > > > mcsolve_f90: Constant H with no collapse ops (states) ... ok; > > > mcsolve_f90: Constant H with constant collapse ... ok; > > > mcsolve_f90: Constant H with single collapse operator ... ok; > > > mcsolve_f90: Constant H with single expect operator ... ok; > > > mcsolve_f90: check for correct dtypes (average_states=True) ... ok; > > > mcsolve_f90: check for correct dtypes (average_states=False) ... ok; > > > mesolve: cavity-qubit interaction, no dissipation ... ok; > > > mesolve: cavity-qubit without interaction, decay ... ok; > > > mesolve: cavity-qubit with interaction, decay ... ok; > > > mesolve: qubit without dissipation ... ok; > > > mesolve: simple time-dependence as fu",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:4458,Integrability,depend,dependent,4458,"mple) ... ok; > > > Graph: Reverse Cuthill-McKee Ordering (Bucky) ... ok; > > > Graph: Reverse Cuthill-McKee Ordering (boost) ... ok; > > > Monte-carlo: Constant H with no collapse ops (expect) ... ok; > > > Monte-carlo: Constant H with no collapse ops (states) ... ok; > > > Monte-carlo: Constant H (str format) with no collapse ops (expect) ... ok; > > > Monte-carlo: Constant H (func format) with no collapse ops (expect) ... ok; > > > Monte-carlo: Constant H (str format) with no collapse ops (states) ... ok; > > > Monte-carlo: Constant H (func format) with no collapse ops (states) ... ok; > > > Monte-carlo: Constant H with constant collapse ... ok; > > > Monte-carlo: Constant H with single collapse operator ... ok; > > > Monte-carlo: Constant H with single expect operator ... ok; > > > Monte-carlo: Collapse terms constant (func format) ... ok; > > > Monte-carlo: Collapse terms constant (str format) ... ok; > > > Monte-carlo: Time-dependent H (func format) ... ok; > > > Monte-carlo: Time-dependent H (str format) ... ok; > > > Monte-carlo: check for correct dtypes (average_states=True) ... ok; > > > Monte-carlo: check for correct dtypes (average_states=False) ... ok; > > > mcsolve_f90: Constant H with no collapse ops (expect) ... ok; > > > mcsolve_f90: Constant H with no collapse ops (states) ... ok; > > > mcsolve_f90: Constant H with constant collapse ... ok; > > > mcsolve_f90: Constant H with single collapse operator ... ok; > > > mcsolve_f90: Constant H with single expect operator ... ok; > > > mcsolve_f90: check for correct dtypes (average_states=True) ... ok; > > > mcsolve_f90: check for correct dtypes (average_states=False) ... ok; > > > mesolve: cavity-qubit interaction, no dissipation ... ok; > > > mesolve: cavity-qubit without interaction, decay ... ok; > > > mesolve: cavity-qubit with interaction, decay ... ok; > > > mesolve: qubit without dissipation ... ok; > > > mesolve: simple time-dependence as function list ... ok; > > > mesolve: simple time-dependence ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:5383,Integrability,depend,dependence,5383," Monte-carlo: Time-dependent H (func format) ... ok; > > > Monte-carlo: Time-dependent H (str format) ... ok; > > > Monte-carlo: check for correct dtypes (average_states=True) ... ok; > > > Monte-carlo: check for correct dtypes (average_states=False) ... ok; > > > mcsolve_f90: Constant H with no collapse ops (expect) ... ok; > > > mcsolve_f90: Constant H with no collapse ops (states) ... ok; > > > mcsolve_f90: Constant H with constant collapse ... ok; > > > mcsolve_f90: Constant H with single collapse operator ... ok; > > > mcsolve_f90: Constant H with single expect operator ... ok; > > > mcsolve_f90: check for correct dtypes (average_states=True) ... ok; > > > mcsolve_f90: check for correct dtypes (average_states=False) ... ok; > > > mesolve: cavity-qubit interaction, no dissipation ... ok; > > > mesolve: cavity-qubit without interaction, decay ... ok; > > > mesolve: cavity-qubit with interaction, decay ... ok; > > > mesolve: qubit without dissipation ... ok; > > > mesolve: simple time-dependence as function list ... ok; > > > mesolve: simple time-dependence as partial function list ... ok; > > > mesolve: simple time-dependence as string list ... ok; > > > mesolve: simple constant decay ... ok; > > > mesolve: constant decay as function list ... ok; > > > mesolve: constant decay as string list ... ok; > > > mesolve: simple constant decay ... ok; > > > mesolve: simple constant decay ... ok; > > > Metrics: Checks that average gate fidelities are sensible for random ... ok; > > > odechecks: monte-carlo ... ok; > > > Spin 1/2 operators ... ok; > > > Spin 3/2 operators ... ok; > > > Spin 2 operators ... ok; > > > Spin 5/2 operators ... ok; > > > Destruction operator ... ok; > > > Creation operator ... ok; > > > Identity operator ... ok; > > > Number operator ... ok; > > > Squeezing operator ... ok; > > > Displacement operator ... ok; > > > parfor ... ok; > > > partial transpose of bipartite systems ... ok; > > > partial transpose: comparing sparse and dense implementation",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:5446,Integrability,depend,dependence,5446,"rlo: Time-dependent H (str format) ... ok; > > > Monte-carlo: check for correct dtypes (average_states=True) ... ok; > > > Monte-carlo: check for correct dtypes (average_states=False) ... ok; > > > mcsolve_f90: Constant H with no collapse ops (expect) ... ok; > > > mcsolve_f90: Constant H with no collapse ops (states) ... ok; > > > mcsolve_f90: Constant H with constant collapse ... ok; > > > mcsolve_f90: Constant H with single collapse operator ... ok; > > > mcsolve_f90: Constant H with single expect operator ... ok; > > > mcsolve_f90: check for correct dtypes (average_states=True) ... ok; > > > mcsolve_f90: check for correct dtypes (average_states=False) ... ok; > > > mesolve: cavity-qubit interaction, no dissipation ... ok; > > > mesolve: cavity-qubit without interaction, decay ... ok; > > > mesolve: cavity-qubit with interaction, decay ... ok; > > > mesolve: qubit without dissipation ... ok; > > > mesolve: simple time-dependence as function list ... ok; > > > mesolve: simple time-dependence as partial function list ... ok; > > > mesolve: simple time-dependence as string list ... ok; > > > mesolve: simple constant decay ... ok; > > > mesolve: constant decay as function list ... ok; > > > mesolve: constant decay as string list ... ok; > > > mesolve: simple constant decay ... ok; > > > mesolve: simple constant decay ... ok; > > > Metrics: Checks that average gate fidelities are sensible for random ... ok; > > > odechecks: monte-carlo ... ok; > > > Spin 1/2 operators ... ok; > > > Spin 3/2 operators ... ok; > > > Spin 2 operators ... ok; > > > Spin 5/2 operators ... ok; > > > Destruction operator ... ok; > > > Creation operator ... ok; > > > Identity operator ... ok; > > > Number operator ... ok; > > > Squeezing operator ... ok; > > > Displacement operator ... ok; > > > parfor ... ok; > > > partial transpose of bipartite systems ... ok; > > > partial transpose: comparing sparse and dense implementations ... ok; > > > partial transpose: randomized tests on tripartite s",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:5517,Integrability,depend,dependence,5517,"k for correct dtypes (average_states=True) ... ok; > > > Monte-carlo: check for correct dtypes (average_states=False) ... ok; > > > mcsolve_f90: Constant H with no collapse ops (expect) ... ok; > > > mcsolve_f90: Constant H with no collapse ops (states) ... ok; > > > mcsolve_f90: Constant H with constant collapse ... ok; > > > mcsolve_f90: Constant H with single collapse operator ... ok; > > > mcsolve_f90: Constant H with single expect operator ... ok; > > > mcsolve_f90: check for correct dtypes (average_states=True) ... ok; > > > mcsolve_f90: check for correct dtypes (average_states=False) ... ok; > > > mesolve: cavity-qubit interaction, no dissipation ... ok; > > > mesolve: cavity-qubit without interaction, decay ... ok; > > > mesolve: cavity-qubit with interaction, decay ... ok; > > > mesolve: qubit without dissipation ... ok; > > > mesolve: simple time-dependence as function list ... ok; > > > mesolve: simple time-dependence as partial function list ... ok; > > > mesolve: simple time-dependence as string list ... ok; > > > mesolve: simple constant decay ... ok; > > > mesolve: constant decay as function list ... ok; > > > mesolve: constant decay as string list ... ok; > > > mesolve: simple constant decay ... ok; > > > mesolve: simple constant decay ... ok; > > > Metrics: Checks that average gate fidelities are sensible for random ... ok; > > > odechecks: monte-carlo ... ok; > > > Spin 1/2 operators ... ok; > > > Spin 3/2 operators ... ok; > > > Spin 2 operators ... ok; > > > Spin 5/2 operators ... ok; > > > Destruction operator ... ok; > > > Creation operator ... ok; > > > Identity operator ... ok; > > > Number operator ... ok; > > > Squeezing operator ... ok; > > > Displacement operator ... ok; > > > parfor ... ok; > > > partial transpose of bipartite systems ... ok; > > > partial transpose: comparing sparse and dense implementations ... ok; > > > partial transpose: randomized tests on tripartite system ... ok; > > > Qobj data ... ok; > > > Qobj type ... ok; > > ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:2142,Performance,Concurren,Concurrence,2142,"nbasis and back ... ok; > > > Transform 10-level real-values to eigenbasis and back ... ok; > > > Transform 10-level to eigenbasis and back ... ok; > > > Transform 10-level imag to eigenbasis and back ... ok; > > > Check diagonalization via eigenbasis transformation ... ok; > > > brmesolve: harmonic oscillator, finite temperature ... ok; > > > brmesolve: harmonic oscillator, finite temperature, states ... ok; > > > brmesolve: harmonic oscillator, zero temperature ... ok; > > > brmesolve: Jaynes-Cummings model, zero temperature ... ok; > > > brmesolve: qubit ... ok; > > > correlation: comparing me and es for oscillator in coherent initial state ... ok; > > > correlation: comparing me and es for oscillator in steady state ... ok; > > > correlation: compare spectrum from eseries and pseudo-inverse methods ... ok; > > > Diagonalization of random two-level system ... ok; > > > Diagonalization of composite systems ... ok; > > > von-Neumann entropy ... ok; > > > Linear entropy ... ok; > > > Concurrence ... ok; > > > Mutual information ... ok; > > > Conditional entropy ... ok; > > > expect: operator list and state list ... ok; > > > expect: operator and density matrix ... ok; > > > expect: operator and ket ... ok; > > > expect: operator list and state ... ok; > > > expect: operator list and state list ... ok; > > > expect: operator and state list ... ok; > > > Read and write complex valued decimal formatted data ... ok; > > > Read and write complex valued default formatted data ... ok; > > > Read and write complex valued exp formatted data ... ok; > > > Read and write real valued decimal formatted data ... ok; > > > Read and write real valued default formatted data ... ok; > > > Read and write real valued exp formatted data ... ok; > > > Read and write with automatic separator detection ... ok; > > > Floquet: test unitary evolution of time-dependent two-level system ... ok; > > > gates: expand 1 to N ... ok; > > > gates: expand 2 to N (using cnot, iswap, sqrtswap) ... ok; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:11083,Performance,optimiz,optimized,11083,"turn same result, ... ok; > > > Non-composite system, operator on Hilbert space. ... ok; > > > Non-composite system, operator on Liouville space. ... ok; > > > Superoperator: Converting superoperator to Choi matrix and back. ... ok; > > > Superoperator: Test that to_choi(q) returns q if q is already Choi. ... ok; > > > Superoperator: Test that converting a two-qubit superoperator through ... /usr/local/lib/python2.7/dist-packages/qutip/qobj.py:412: UserWarning: Multiplying superoperators with different representations; > > > warnings.warn(msg); > > > ok; > > > Superoperator: Converting superoperator to Choi matrix and back. ... ok; > > > Superoperator: Test that to_super(q) returns q if q is already a ... ok; > > > Superoperator: Checks that the trace of matrices returned by to_choi ... ok; > > > Superoperator: Checks that iscp, istp and iscptp work in a few different ... ok; > > > Superoperator: Checks that randomly generated superoperators are ... ok; > > > Superoperator: Randomized comparison of standard and optimized ... ok; > > > Superoperator: Conversion matrix to vector to matrix ... ok; > > > Superoperator: Test unitary transformation with operators and superoperators. ... ok; > > > Superoperator: Test compability between matrix/vector conversion and ... ok; > > > Superoperator: Conversion between matrix and vector indices ... ok; > > > Superoperator: Conversion vector to matrix to vector ... ok; > > > qutip.tests.test_superoperator.TestMatrixVector.test_reshuffle ... ok; > > > utilities: energy unit conversions ... ok; > > > wigner: test wigner function calculation for coherent states ... ok; > > > wigner: test wigner function calculation for Fock states ... ok; > > > wigner: compare wigner methods for random density matrices ... ok; > > > wigner: compare wigner methods for random state vectors ... ok; > > > Wigner: Compare Wigner fft and iterative for rand. ket ... ok; > > > Wigner: Compare Wigner fft and iterative for rand. dm ... ok. # . ## ERROR: Qobj ad",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:2943,Safety,detect,detection,2943,"series and pseudo-inverse methods ... ok; > > > Diagonalization of random two-level system ... ok; > > > Diagonalization of composite systems ... ok; > > > von-Neumann entropy ... ok; > > > Linear entropy ... ok; > > > Concurrence ... ok; > > > Mutual information ... ok; > > > Conditional entropy ... ok; > > > expect: operator list and state list ... ok; > > > expect: operator and density matrix ... ok; > > > expect: operator and ket ... ok; > > > expect: operator list and state ... ok; > > > expect: operator list and state list ... ok; > > > expect: operator and state list ... ok; > > > Read and write complex valued decimal formatted data ... ok; > > > Read and write complex valued default formatted data ... ok; > > > Read and write complex valued exp formatted data ... ok; > > > Read and write real valued decimal formatted data ... ok; > > > Read and write real valued default formatted data ... ok; > > > Read and write real valued exp formatted data ... ok; > > > Read and write with automatic separator detection ... ok; > > > Floquet: test unitary evolution of time-dependent two-level system ... ok; > > > gates: expand 1 to N ... ok; > > > gates: expand 2 to N (using cnot, iswap, sqrtswap) ... ok; > > > gates: expand 2 to N (using swap) ... ok; > > > gates: expand 3 to N (using toffoli, fredkin, and random 3 qubit gate) ... ok; > > > gates: swap gate ... ok; > > > Graph: Breadth-First Search ... ok; > > > Graph: Graph Degree ... SKIP: Networkx not installed.; > > > Graph: Reverse Cuthill-McKee Ordering (simple) ... ok; > > > Graph: Reverse Cuthill-McKee Ordering (Bucky) ... ok; > > > Graph: Reverse Cuthill-McKee Ordering (boost) ... ok; > > > Monte-carlo: Constant H with no collapse ops (expect) ... ok; > > > Monte-carlo: Constant H with no collapse ops (states) ... ok; > > > Monte-carlo: Constant H (str format) with no collapse ops (expect) ... ok; > > > Monte-carlo: Constant H (func format) with no collapse ops (expect) ... ok; > > > Monte-carlo: Constant H (str",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:161,Testability,test,testing,161,"Now it gives me one other error and a failure (and I have the impression the I can deal with the prior errors better than with the new one):. > > > import qutip.testing as qt; > > > qt.run(); > > > Qobj data ... ok; > > > Qobj type ... ok; > > > Qobj Hermicity ... ok; > > > Qobj shape ... ok; > > > Qobj addition ... ERROR; > > > Qobj subtraction ... ok; > > > Qobj multiplication ... ok; > > > Qobj division ... ok; > > > Qobj power ... FAIL; > > > Qobj negation ... ok; > > > Qobj equals ... ok; > > > Qobj getitem ... ok; > > > Qobj multiplication type ... ok; > > > Qobj conjugate ... ok; > > > Qobj adjoint (dagger) ... ok; > > > Qobj diagonals ... ok; > > > Qobj eigenenergies ... ok; > > > Qobj eigenstates ... ok; > > > Qobj expm ... ok; > > > Qobj full ... ok; > > > Qobj ket type ... ok; > > > Qobj bra type ... ok; > > > Qobj operator type ... ok; > > > Qobj superoperator type ... ok; > > > Sparse: Symmetric Permute ... ok; > > > Sparse: Nonsymmetric Permute ... ok; > > > Sparse: Symmetric Reverse Permute ... ok; > > > Sparse: Nonsymmetric Reverse Permute ... ok; > > > Sparse: Bandwidth ... ok; > > > Transform 2-level to eigenbasis and back ... ok; > > > Transform 10-level real-values to eigenbasis and back ... ok; > > > Transform 10-level to eigenbasis and back ... ok; > > > Transform 10-level imag to eigenbasis and back ... ok; > > > Check diagonalization via eigenbasis transformation ... ok; > > > brmesolve: harmonic oscillator, finite temperature ... ok; > > > brmesolve: harmonic oscillator, finite temperature, states ... ok; > > > brmesolve: harmonic oscillator, zero temperature ... ok; > > > brmesolve: Jaynes-Cummings model, zero temperature ... ok; > > > brmesolve: qubit ... ok; > > > correlation: comparing me and es for oscillator in coherent initial state ... ok; > > > correlation: comparing me and es for oscillator in steady state ... ok; > > > correlation: compare spectrum from eseries and pseudo-inverse methods ... ok; > > > Diagonalization of random two-",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:2976,Testability,test,test,2976,"m two-level system ... ok; > > > Diagonalization of composite systems ... ok; > > > von-Neumann entropy ... ok; > > > Linear entropy ... ok; > > > Concurrence ... ok; > > > Mutual information ... ok; > > > Conditional entropy ... ok; > > > expect: operator list and state list ... ok; > > > expect: operator and density matrix ... ok; > > > expect: operator and ket ... ok; > > > expect: operator list and state ... ok; > > > expect: operator list and state list ... ok; > > > expect: operator and state list ... ok; > > > Read and write complex valued decimal formatted data ... ok; > > > Read and write complex valued default formatted data ... ok; > > > Read and write complex valued exp formatted data ... ok; > > > Read and write real valued decimal formatted data ... ok; > > > Read and write real valued default formatted data ... ok; > > > Read and write real valued exp formatted data ... ok; > > > Read and write with automatic separator detection ... ok; > > > Floquet: test unitary evolution of time-dependent two-level system ... ok; > > > gates: expand 1 to N ... ok; > > > gates: expand 2 to N (using cnot, iswap, sqrtswap) ... ok; > > > gates: expand 2 to N (using swap) ... ok; > > > gates: expand 3 to N (using toffoli, fredkin, and random 3 qubit gate) ... ok; > > > gates: swap gate ... ok; > > > Graph: Breadth-First Search ... ok; > > > Graph: Graph Degree ... SKIP: Networkx not installed.; > > > Graph: Reverse Cuthill-McKee Ordering (simple) ... ok; > > > Graph: Reverse Cuthill-McKee Ordering (Bucky) ... ok; > > > Graph: Reverse Cuthill-McKee Ordering (boost) ... ok; > > > Monte-carlo: Constant H with no collapse ops (expect) ... ok; > > > Monte-carlo: Constant H with no collapse ops (states) ... ok; > > > Monte-carlo: Constant H (str format) with no collapse ops (expect) ... ok; > > > Monte-carlo: Constant H (func format) with no collapse ops (expect) ... ok; > > > Monte-carlo: Constant H (str format) with no collapse ops (states) ... ok; > > > Monte-carlo: Constan",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:6428,Testability,test,tests,6428,> > mesolve: simple time-dependence as partial function list ... ok; > > > mesolve: simple time-dependence as string list ... ok; > > > mesolve: simple constant decay ... ok; > > > mesolve: constant decay as function list ... ok; > > > mesolve: constant decay as string list ... ok; > > > mesolve: simple constant decay ... ok; > > > mesolve: simple constant decay ... ok; > > > Metrics: Checks that average gate fidelities are sensible for random ... ok; > > > odechecks: monte-carlo ... ok; > > > Spin 1/2 operators ... ok; > > > Spin 3/2 operators ... ok; > > > Spin 2 operators ... ok; > > > Spin 5/2 operators ... ok; > > > Destruction operator ... ok; > > > Creation operator ... ok; > > > Identity operator ... ok; > > > Number operator ... ok; > > > Squeezing operator ... ok; > > > Displacement operator ... ok; > > > parfor ... ok; > > > partial transpose of bipartite systems ... ok; > > > partial transpose: comparing sparse and dense implementations ... ok; > > > partial transpose: randomized tests on tripartite system ... ok; > > > Qobj data ... ok; > > > Qobj type ... ok; > > > Qobj Hermicity ... ok; > > > Qobj shape ... ok; > > > Qobj addition ... ok; > > > Qobj subtraction ... ok; > > > Qobj multiplication ... ok; > > > Qobj division ... ok; > > > Qobj power ... ok; > > > Qobj negation ... ok; > > > Qobj equals ... ok; > > > Qobj getitem ... ok; > > > Qobj multiplication type ... ok; > > > Qobj conjugate ... ok; > > > Qobj adjoint (dagger) ... ok; > > > Qobj diagonals ... ok; > > > Qobj eigenenergies ... ok; > > > Qobj eigenstates ... ok; > > > Qobj expm ... ok; > > > Qobj full ... ok; > > > Qobj norm ... ok; > > > Qobj permute ... ok; > > > Qobj ket type ... ok; > > > Qobj bra type ... ok; > > > Qobj operator type ... ok; > > > Qobj superoperator type ... ok; > > > Superoperator arithmetic: Checks that binary ops preserve 'superrep'. ... ok; > > > Superoperator arithmetic: Checks that binary ops preserve 'superrep'. ... ok; > > > Superoperator arithmetic: Checks ,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:8771,Testability,Test,Test,8771,"superrep'. ... ok; > > > Superoperator arithmetic: Checks that binary ops preserve 'superrep'. ... ok; > > > Superoperator arithmetic: Checks that binary ops preserve 'superrep'. ... ok; > > > Superoperator arithmetic: Checks that binary ops preserve 'superrep'. ... ok; > > > Superoperator arithmetic: Checks that binary ops preserve 'superrep'. ... ok; > > > Superoperator arithmetic: Checks that binary ops preserve 'superrep'. ... ok; > > > Superoperator arithmetic: Checks that binary ops preserve 'superrep'. ... ok; > > > Superoperator arithmetic: Checks that binary ops preserve 'superrep'. ... ok; > > > Superoperator arithmetic: Checks that binary ops preserve 'superrep'. ... ok; > > > Checks that mul and tensor of skew-Hermitian operators report `isherm = True`. ... ok; > > > Tensor: Checks that super_tensor correctly tensors on underlying spaces. ... ok; > > > quantum process tomography for snot gate ... ok; > > > quantum process tomography for cnot gate ... ok; > > > Test mesolve qubit, with dissipation ... ok; > > > Test mesolve qubit, no dissipation ... ok; > > > Test essolve qubit, with dissipation ... ok; > > > Test mcsolve qubit, with dissipation ... ok; > > > Test mcsolve qubit, no dissipation ... ok; > > > random Unitary ... ok; > > > random density matrix ... ok; > > > random hermitian ... ok; > > > random ket ... ok; > > > Sparse eigs Hermitian ... ok; > > > Sparse eigs non-Hermitian ... ok; > > > Sparse eigvals only Hermitian. ... ok; > > > Dense eigs Hermitian. ... ok; > > > Dense eigs non-Hermitian ... ok; > > > Dense eigvals only Hermitian ... ok; > > > states: coherent density matrix ... ok; > > > states: Fock density matrix ... ok; > > > states: thermal density matrix ... ok; > > > Steady state: Thermal qubit ... ok; > > > Steady state: Thermal harmonic oscillator ... ok; > > > Steady state: Driven cavity ... ok; > > > Stochastic: smesolve: photo-current ... ok; > > > Stochastic: smesolve: homodyne ... ok; > > > Stochastic: smesolve: heterodyne ..",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:8822,Testability,Test,Test,8822," Checks that binary ops preserve 'superrep'. ... ok; > > > Superoperator arithmetic: Checks that binary ops preserve 'superrep'. ... ok; > > > Superoperator arithmetic: Checks that binary ops preserve 'superrep'. ... ok; > > > Superoperator arithmetic: Checks that binary ops preserve 'superrep'. ... ok; > > > Superoperator arithmetic: Checks that binary ops preserve 'superrep'. ... ok; > > > Superoperator arithmetic: Checks that binary ops preserve 'superrep'. ... ok; > > > Superoperator arithmetic: Checks that binary ops preserve 'superrep'. ... ok; > > > Superoperator arithmetic: Checks that binary ops preserve 'superrep'. ... ok; > > > Checks that mul and tensor of skew-Hermitian operators report `isherm = True`. ... ok; > > > Tensor: Checks that super_tensor correctly tensors on underlying spaces. ... ok; > > > quantum process tomography for snot gate ... ok; > > > quantum process tomography for cnot gate ... ok; > > > Test mesolve qubit, with dissipation ... ok; > > > Test mesolve qubit, no dissipation ... ok; > > > Test essolve qubit, with dissipation ... ok; > > > Test mcsolve qubit, with dissipation ... ok; > > > Test mcsolve qubit, no dissipation ... ok; > > > random Unitary ... ok; > > > random density matrix ... ok; > > > random hermitian ... ok; > > > random ket ... ok; > > > Sparse eigs Hermitian ... ok; > > > Sparse eigs non-Hermitian ... ok; > > > Sparse eigvals only Hermitian. ... ok; > > > Dense eigs Hermitian. ... ok; > > > Dense eigs non-Hermitian ... ok; > > > Dense eigvals only Hermitian ... ok; > > > states: coherent density matrix ... ok; > > > states: Fock density matrix ... ok; > > > states: thermal density matrix ... ok; > > > Steady state: Thermal qubit ... ok; > > > Steady state: Thermal harmonic oscillator ... ok; > > > Steady state: Driven cavity ... ok; > > > Stochastic: smesolve: photo-current ... ok; > > > Stochastic: smesolve: homodyne ... ok; > > > Stochastic: smesolve: heterodyne ... ok; > > > Stochastic: ssesolve: photo-current ..",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:8871,Testability,Test,Test,8871,"k; > > > Superoperator arithmetic: Checks that binary ops preserve 'superrep'. ... ok; > > > Superoperator arithmetic: Checks that binary ops preserve 'superrep'. ... ok; > > > Superoperator arithmetic: Checks that binary ops preserve 'superrep'. ... ok; > > > Superoperator arithmetic: Checks that binary ops preserve 'superrep'. ... ok; > > > Superoperator arithmetic: Checks that binary ops preserve 'superrep'. ... ok; > > > Superoperator arithmetic: Checks that binary ops preserve 'superrep'. ... ok; > > > Superoperator arithmetic: Checks that binary ops preserve 'superrep'. ... ok; > > > Checks that mul and tensor of skew-Hermitian operators report `isherm = True`. ... ok; > > > Tensor: Checks that super_tensor correctly tensors on underlying spaces. ... ok; > > > quantum process tomography for snot gate ... ok; > > > quantum process tomography for cnot gate ... ok; > > > Test mesolve qubit, with dissipation ... ok; > > > Test mesolve qubit, no dissipation ... ok; > > > Test essolve qubit, with dissipation ... ok; > > > Test mcsolve qubit, with dissipation ... ok; > > > Test mcsolve qubit, no dissipation ... ok; > > > random Unitary ... ok; > > > random density matrix ... ok; > > > random hermitian ... ok; > > > random ket ... ok; > > > Sparse eigs Hermitian ... ok; > > > Sparse eigs non-Hermitian ... ok; > > > Sparse eigvals only Hermitian. ... ok; > > > Dense eigs Hermitian. ... ok; > > > Dense eigs non-Hermitian ... ok; > > > Dense eigvals only Hermitian ... ok; > > > states: coherent density matrix ... ok; > > > states: Fock density matrix ... ok; > > > states: thermal density matrix ... ok; > > > Steady state: Thermal qubit ... ok; > > > Steady state: Thermal harmonic oscillator ... ok; > > > Steady state: Driven cavity ... ok; > > > Stochastic: smesolve: photo-current ... ok; > > > Stochastic: smesolve: homodyne ... ok; > > > Stochastic: smesolve: heterodyne ... ok; > > > Stochastic: ssesolve: photo-current ... ; > > > ok; > > > Stochastic: ssesolve: homodyne",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:8922,Testability,Test,Test,8922,"ry ops preserve 'superrep'. ... ok; > > > Superoperator arithmetic: Checks that binary ops preserve 'superrep'. ... ok; > > > Superoperator arithmetic: Checks that binary ops preserve 'superrep'. ... ok; > > > Superoperator arithmetic: Checks that binary ops preserve 'superrep'. ... ok; > > > Superoperator arithmetic: Checks that binary ops preserve 'superrep'. ... ok; > > > Superoperator arithmetic: Checks that binary ops preserve 'superrep'. ... ok; > > > Superoperator arithmetic: Checks that binary ops preserve 'superrep'. ... ok; > > > Checks that mul and tensor of skew-Hermitian operators report `isherm = True`. ... ok; > > > Tensor: Checks that super_tensor correctly tensors on underlying spaces. ... ok; > > > quantum process tomography for snot gate ... ok; > > > quantum process tomography for cnot gate ... ok; > > > Test mesolve qubit, with dissipation ... ok; > > > Test mesolve qubit, no dissipation ... ok; > > > Test essolve qubit, with dissipation ... ok; > > > Test mcsolve qubit, with dissipation ... ok; > > > Test mcsolve qubit, no dissipation ... ok; > > > random Unitary ... ok; > > > random density matrix ... ok; > > > random hermitian ... ok; > > > random ket ... ok; > > > Sparse eigs Hermitian ... ok; > > > Sparse eigs non-Hermitian ... ok; > > > Sparse eigvals only Hermitian. ... ok; > > > Dense eigs Hermitian. ... ok; > > > Dense eigs non-Hermitian ... ok; > > > Dense eigvals only Hermitian ... ok; > > > states: coherent density matrix ... ok; > > > states: Fock density matrix ... ok; > > > states: thermal density matrix ... ok; > > > Steady state: Thermal qubit ... ok; > > > Steady state: Thermal harmonic oscillator ... ok; > > > Steady state: Driven cavity ... ok; > > > Stochastic: smesolve: photo-current ... ok; > > > Stochastic: smesolve: homodyne ... ok; > > > Stochastic: smesolve: heterodyne ... ok; > > > Stochastic: ssesolve: photo-current ... ; > > > ok; > > > Stochastic: ssesolve: homodyne ... ok; > > > Stochastic: ssesolve: heterodyne ...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:8973,Testability,Test,Test,8973,"rator arithmetic: Checks that binary ops preserve 'superrep'. ... ok; > > > Superoperator arithmetic: Checks that binary ops preserve 'superrep'. ... ok; > > > Superoperator arithmetic: Checks that binary ops preserve 'superrep'. ... ok; > > > Superoperator arithmetic: Checks that binary ops preserve 'superrep'. ... ok; > > > Superoperator arithmetic: Checks that binary ops preserve 'superrep'. ... ok; > > > Superoperator arithmetic: Checks that binary ops preserve 'superrep'. ... ok; > > > Checks that mul and tensor of skew-Hermitian operators report `isherm = True`. ... ok; > > > Tensor: Checks that super_tensor correctly tensors on underlying spaces. ... ok; > > > quantum process tomography for snot gate ... ok; > > > quantum process tomography for cnot gate ... ok; > > > Test mesolve qubit, with dissipation ... ok; > > > Test mesolve qubit, no dissipation ... ok; > > > Test essolve qubit, with dissipation ... ok; > > > Test mcsolve qubit, with dissipation ... ok; > > > Test mcsolve qubit, no dissipation ... ok; > > > random Unitary ... ok; > > > random density matrix ... ok; > > > random hermitian ... ok; > > > random ket ... ok; > > > Sparse eigs Hermitian ... ok; > > > Sparse eigs non-Hermitian ... ok; > > > Sparse eigvals only Hermitian. ... ok; > > > Dense eigs Hermitian. ... ok; > > > Dense eigs non-Hermitian ... ok; > > > Dense eigvals only Hermitian ... ok; > > > states: coherent density matrix ... ok; > > > states: Fock density matrix ... ok; > > > states: thermal density matrix ... ok; > > > Steady state: Thermal qubit ... ok; > > > Steady state: Thermal harmonic oscillator ... ok; > > > Steady state: Driven cavity ... ok; > > > Stochastic: smesolve: photo-current ... ok; > > > Stochastic: smesolve: homodyne ... ok; > > > Stochastic: smesolve: heterodyne ... ok; > > > Stochastic: ssesolve: photo-current ... ; > > > ok; > > > Stochastic: ssesolve: homodyne ... ok; > > > Stochastic: ssesolve: heterodyne ... ok; > > > Composite system, operator on Hilbert s",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:10310,Testability,Test,Test,10310,"n ... ok; > > > Dense eigvals only Hermitian ... ok; > > > states: coherent density matrix ... ok; > > > states: Fock density matrix ... ok; > > > states: thermal density matrix ... ok; > > > Steady state: Thermal qubit ... ok; > > > Steady state: Thermal harmonic oscillator ... ok; > > > Steady state: Driven cavity ... ok; > > > Stochastic: smesolve: photo-current ... ok; > > > Stochastic: smesolve: homodyne ... ok; > > > Stochastic: smesolve: heterodyne ... ok; > > > Stochastic: ssesolve: photo-current ... ; > > > ok; > > > Stochastic: ssesolve: homodyne ... ok; > > > Stochastic: ssesolve: heterodyne ... ok; > > > Composite system, operator on Hilbert space. ... ok; > > > Superoperator: Efficient numerics and reference return same result, ... ok; > > > Non-composite system, operator on Hilbert space. ... ok; > > > Non-composite system, operator on Liouville space. ... ok; > > > Superoperator: Converting superoperator to Choi matrix and back. ... ok; > > > Superoperator: Test that to_choi(q) returns q if q is already Choi. ... ok; > > > Superoperator: Test that converting a two-qubit superoperator through ... /usr/local/lib/python2.7/dist-packages/qutip/qobj.py:412: UserWarning: Multiplying superoperators with different representations; > > > warnings.warn(msg); > > > ok; > > > Superoperator: Converting superoperator to Choi matrix and back. ... ok; > > > Superoperator: Test that to_super(q) returns q if q is already a ... ok; > > > Superoperator: Checks that the trace of matrices returned by to_choi ... ok; > > > Superoperator: Checks that iscp, istp and iscptp work in a few different ... ok; > > > Superoperator: Checks that randomly generated superoperators are ... ok; > > > Superoperator: Randomized comparison of standard and optimized ... ok; > > > Superoperator: Conversion matrix to vector to matrix ... ok; > > > Superoperator: Test unitary transformation with operators and superoperators. ... ok; > > > Superoperator: Test compability between matrix/vector con",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:10392,Testability,Test,Test,10392,"matrix ... ok; > > > states: Fock density matrix ... ok; > > > states: thermal density matrix ... ok; > > > Steady state: Thermal qubit ... ok; > > > Steady state: Thermal harmonic oscillator ... ok; > > > Steady state: Driven cavity ... ok; > > > Stochastic: smesolve: photo-current ... ok; > > > Stochastic: smesolve: homodyne ... ok; > > > Stochastic: smesolve: heterodyne ... ok; > > > Stochastic: ssesolve: photo-current ... ; > > > ok; > > > Stochastic: ssesolve: homodyne ... ok; > > > Stochastic: ssesolve: heterodyne ... ok; > > > Composite system, operator on Hilbert space. ... ok; > > > Superoperator: Efficient numerics and reference return same result, ... ok; > > > Non-composite system, operator on Hilbert space. ... ok; > > > Non-composite system, operator on Liouville space. ... ok; > > > Superoperator: Converting superoperator to Choi matrix and back. ... ok; > > > Superoperator: Test that to_choi(q) returns q if q is already Choi. ... ok; > > > Superoperator: Test that converting a two-qubit superoperator through ... /usr/local/lib/python2.7/dist-packages/qutip/qobj.py:412: UserWarning: Multiplying superoperators with different representations; > > > warnings.warn(msg); > > > ok; > > > Superoperator: Converting superoperator to Choi matrix and back. ... ok; > > > Superoperator: Test that to_super(q) returns q if q is already a ... ok; > > > Superoperator: Checks that the trace of matrices returned by to_choi ... ok; > > > Superoperator: Checks that iscp, istp and iscptp work in a few different ... ok; > > > Superoperator: Checks that randomly generated superoperators are ... ok; > > > Superoperator: Randomized comparison of standard and optimized ... ok; > > > Superoperator: Conversion matrix to vector to matrix ... ok; > > > Superoperator: Test unitary transformation with operators and superoperators. ... ok; > > > Superoperator: Test compability between matrix/vector conversion and ... ok; > > > Superoperator: Conversion between matrix and vector indice",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:10717,Testability,Test,Test,10717,"modyne ... ok; > > > Stochastic: smesolve: heterodyne ... ok; > > > Stochastic: ssesolve: photo-current ... ; > > > ok; > > > Stochastic: ssesolve: homodyne ... ok; > > > Stochastic: ssesolve: heterodyne ... ok; > > > Composite system, operator on Hilbert space. ... ok; > > > Superoperator: Efficient numerics and reference return same result, ... ok; > > > Non-composite system, operator on Hilbert space. ... ok; > > > Non-composite system, operator on Liouville space. ... ok; > > > Superoperator: Converting superoperator to Choi matrix and back. ... ok; > > > Superoperator: Test that to_choi(q) returns q if q is already Choi. ... ok; > > > Superoperator: Test that converting a two-qubit superoperator through ... /usr/local/lib/python2.7/dist-packages/qutip/qobj.py:412: UserWarning: Multiplying superoperators with different representations; > > > warnings.warn(msg); > > > ok; > > > Superoperator: Converting superoperator to Choi matrix and back. ... ok; > > > Superoperator: Test that to_super(q) returns q if q is already a ... ok; > > > Superoperator: Checks that the trace of matrices returned by to_choi ... ok; > > > Superoperator: Checks that iscp, istp and iscptp work in a few different ... ok; > > > Superoperator: Checks that randomly generated superoperators are ... ok; > > > Superoperator: Randomized comparison of standard and optimized ... ok; > > > Superoperator: Conversion matrix to vector to matrix ... ok; > > > Superoperator: Test unitary transformation with operators and superoperators. ... ok; > > > Superoperator: Test compability between matrix/vector conversion and ... ok; > > > Superoperator: Conversion between matrix and vector indices ... ok; > > > Superoperator: Conversion vector to matrix to vector ... ok; > > > qutip.tests.test_superoperator.TestMatrixVector.test_reshuffle ... ok; > > > utilities: energy unit conversions ... ok; > > > wigner: test wigner function calculation for coherent states ... ok; > > > wigner: test wigner function calculatio",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:11189,Testability,Test,Test,11189,"k; > > > Superoperator: Converting superoperator to Choi matrix and back. ... ok; > > > Superoperator: Test that to_choi(q) returns q if q is already Choi. ... ok; > > > Superoperator: Test that converting a two-qubit superoperator through ... /usr/local/lib/python2.7/dist-packages/qutip/qobj.py:412: UserWarning: Multiplying superoperators with different representations; > > > warnings.warn(msg); > > > ok; > > > Superoperator: Converting superoperator to Choi matrix and back. ... ok; > > > Superoperator: Test that to_super(q) returns q if q is already a ... ok; > > > Superoperator: Checks that the trace of matrices returned by to_choi ... ok; > > > Superoperator: Checks that iscp, istp and iscptp work in a few different ... ok; > > > Superoperator: Checks that randomly generated superoperators are ... ok; > > > Superoperator: Randomized comparison of standard and optimized ... ok; > > > Superoperator: Conversion matrix to vector to matrix ... ok; > > > Superoperator: Test unitary transformation with operators and superoperators. ... ok; > > > Superoperator: Test compability between matrix/vector conversion and ... ok; > > > Superoperator: Conversion between matrix and vector indices ... ok; > > > Superoperator: Conversion vector to matrix to vector ... ok; > > > qutip.tests.test_superoperator.TestMatrixVector.test_reshuffle ... ok; > > > utilities: energy unit conversions ... ok; > > > wigner: test wigner function calculation for coherent states ... ok; > > > wigner: test wigner function calculation for Fock states ... ok; > > > wigner: compare wigner methods for random density matrices ... ok; > > > wigner: compare wigner methods for random state vectors ... ok; > > > Wigner: Compare Wigner fft and iterative for rand. ket ... ok; > > > Wigner: Compare Wigner fft and iterative for rand. dm ... ok. # . ## ERROR: Qobj addition. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/u",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:11281,Testability,Test,Test,11281,"Superoperator: Test that to_choi(q) returns q if q is already Choi. ... ok; > > > Superoperator: Test that converting a two-qubit superoperator through ... /usr/local/lib/python2.7/dist-packages/qutip/qobj.py:412: UserWarning: Multiplying superoperators with different representations; > > > warnings.warn(msg); > > > ok; > > > Superoperator: Converting superoperator to Choi matrix and back. ... ok; > > > Superoperator: Test that to_super(q) returns q if q is already a ... ok; > > > Superoperator: Checks that the trace of matrices returned by to_choi ... ok; > > > Superoperator: Checks that iscp, istp and iscptp work in a few different ... ok; > > > Superoperator: Checks that randomly generated superoperators are ... ok; > > > Superoperator: Randomized comparison of standard and optimized ... ok; > > > Superoperator: Conversion matrix to vector to matrix ... ok; > > > Superoperator: Test unitary transformation with operators and superoperators. ... ok; > > > Superoperator: Test compability between matrix/vector conversion and ... ok; > > > Superoperator: Conversion between matrix and vector indices ... ok; > > > Superoperator: Conversion vector to matrix to vector ... ok; > > > qutip.tests.test_superoperator.TestMatrixVector.test_reshuffle ... ok; > > > utilities: energy unit conversions ... ok; > > > wigner: test wigner function calculation for coherent states ... ok; > > > wigner: test wigner function calculation for Fock states ... ok; > > > wigner: compare wigner methods for random density matrices ... ok; > > > wigner: compare wigner methods for random state vectors ... ok; > > > Wigner: Compare Wigner fft and iterative for rand. ket ... ok; > > > Wigner: Compare Wigner fft and iterative for rand. dm ... ok. # . ## ERROR: Qobj addition. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py"", line 139, in test_QobjAdd",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:11496,Testability,test,tests,11496,"j.py:412: UserWarning: Multiplying superoperators with different representations; > > > warnings.warn(msg); > > > ok; > > > Superoperator: Converting superoperator to Choi matrix and back. ... ok; > > > Superoperator: Test that to_super(q) returns q if q is already a ... ok; > > > Superoperator: Checks that the trace of matrices returned by to_choi ... ok; > > > Superoperator: Checks that iscp, istp and iscptp work in a few different ... ok; > > > Superoperator: Checks that randomly generated superoperators are ... ok; > > > Superoperator: Randomized comparison of standard and optimized ... ok; > > > Superoperator: Conversion matrix to vector to matrix ... ok; > > > Superoperator: Test unitary transformation with operators and superoperators. ... ok; > > > Superoperator: Test compability between matrix/vector conversion and ... ok; > > > Superoperator: Conversion between matrix and vector indices ... ok; > > > Superoperator: Conversion vector to matrix to vector ... ok; > > > qutip.tests.test_superoperator.TestMatrixVector.test_reshuffle ... ok; > > > utilities: energy unit conversions ... ok; > > > wigner: test wigner function calculation for coherent states ... ok; > > > wigner: test wigner function calculation for Fock states ... ok; > > > wigner: compare wigner methods for random density matrices ... ok; > > > wigner: compare wigner methods for random state vectors ... ok; > > > Wigner: Compare Wigner fft and iterative for rand. ket ... ok; > > > Wigner: Compare Wigner fft and iterative for rand. dm ... ok. # . ## ERROR: Qobj addition. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py"", line 139, in test_QobjAddition; assert_equal(q4.type, ischeck(q4)); NameError: global name 'ischeck' is not defined. # . ## FAIL: Qobj power. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.p",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:11521,Testability,Test,TestMatrixVector,11521,"ying superoperators with different representations; > > > warnings.warn(msg); > > > ok; > > > Superoperator: Converting superoperator to Choi matrix and back. ... ok; > > > Superoperator: Test that to_super(q) returns q if q is already a ... ok; > > > Superoperator: Checks that the trace of matrices returned by to_choi ... ok; > > > Superoperator: Checks that iscp, istp and iscptp work in a few different ... ok; > > > Superoperator: Checks that randomly generated superoperators are ... ok; > > > Superoperator: Randomized comparison of standard and optimized ... ok; > > > Superoperator: Conversion matrix to vector to matrix ... ok; > > > Superoperator: Test unitary transformation with operators and superoperators. ... ok; > > > Superoperator: Test compability between matrix/vector conversion and ... ok; > > > Superoperator: Conversion between matrix and vector indices ... ok; > > > Superoperator: Conversion vector to matrix to vector ... ok; > > > qutip.tests.test_superoperator.TestMatrixVector.test_reshuffle ... ok; > > > utilities: energy unit conversions ... ok; > > > wigner: test wigner function calculation for coherent states ... ok; > > > wigner: test wigner function calculation for Fock states ... ok; > > > wigner: compare wigner methods for random density matrices ... ok; > > > wigner: compare wigner methods for random state vectors ... ok; > > > Wigner: Compare Wigner fft and iterative for rand. ket ... ok; > > > Wigner: Compare Wigner fft and iterative for rand. dm ... ok. # . ## ERROR: Qobj addition. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py"", line 139, in test_QobjAddition; assert_equal(q4.type, ischeck(q4)); NameError: global name 'ischeck' is not defined. # . ## FAIL: Qobj power. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:11624,Testability,test,test,11624,"verting superoperator to Choi matrix and back. ... ok; > > > Superoperator: Test that to_super(q) returns q if q is already a ... ok; > > > Superoperator: Checks that the trace of matrices returned by to_choi ... ok; > > > Superoperator: Checks that iscp, istp and iscptp work in a few different ... ok; > > > Superoperator: Checks that randomly generated superoperators are ... ok; > > > Superoperator: Randomized comparison of standard and optimized ... ok; > > > Superoperator: Conversion matrix to vector to matrix ... ok; > > > Superoperator: Test unitary transformation with operators and superoperators. ... ok; > > > Superoperator: Test compability between matrix/vector conversion and ... ok; > > > Superoperator: Conversion between matrix and vector indices ... ok; > > > Superoperator: Conversion vector to matrix to vector ... ok; > > > qutip.tests.test_superoperator.TestMatrixVector.test_reshuffle ... ok; > > > utilities: energy unit conversions ... ok; > > > wigner: test wigner function calculation for coherent states ... ok; > > > wigner: test wigner function calculation for Fock states ... ok; > > > wigner: compare wigner methods for random density matrices ... ok; > > > wigner: compare wigner methods for random state vectors ... ok; > > > Wigner: Compare Wigner fft and iterative for rand. ket ... ok; > > > Wigner: Compare Wigner fft and iterative for rand. dm ... ok. # . ## ERROR: Qobj addition. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py"", line 139, in test_QobjAddition; assert_equal(q4.type, ischeck(q4)); NameError: global name 'ischeck' is not defined. # . ## FAIL: Qobj power. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(_self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py"", line 225, in test_QobjP",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:11699,Testability,test,test,11699,"r: Test that to_super(q) returns q if q is already a ... ok; > > > Superoperator: Checks that the trace of matrices returned by to_choi ... ok; > > > Superoperator: Checks that iscp, istp and iscptp work in a few different ... ok; > > > Superoperator: Checks that randomly generated superoperators are ... ok; > > > Superoperator: Randomized comparison of standard and optimized ... ok; > > > Superoperator: Conversion matrix to vector to matrix ... ok; > > > Superoperator: Test unitary transformation with operators and superoperators. ... ok; > > > Superoperator: Test compability between matrix/vector conversion and ... ok; > > > Superoperator: Conversion between matrix and vector indices ... ok; > > > Superoperator: Conversion vector to matrix to vector ... ok; > > > qutip.tests.test_superoperator.TestMatrixVector.test_reshuffle ... ok; > > > utilities: energy unit conversions ... ok; > > > wigner: test wigner function calculation for coherent states ... ok; > > > wigner: test wigner function calculation for Fock states ... ok; > > > wigner: compare wigner methods for random density matrices ... ok; > > > wigner: compare wigner methods for random state vectors ... ok; > > > Wigner: Compare Wigner fft and iterative for rand. ket ... ok; > > > Wigner: Compare Wigner fft and iterative for rand. dm ... ok. # . ## ERROR: Qobj addition. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py"", line 139, in test_QobjAddition; assert_equal(q4.type, ischeck(q4)); NameError: global name 'ischeck' is not defined. # . ## FAIL: Qobj power. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(_self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py"", line 225, in test_QobjPower; assert_equal(all(q3.data.todense() - matrix(data) *_ 3), 0); File """,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:12182,Testability,test,test,12182,"or: Checks that randomly generated superoperators are ... ok; > > > Superoperator: Randomized comparison of standard and optimized ... ok; > > > Superoperator: Conversion matrix to vector to matrix ... ok; > > > Superoperator: Test unitary transformation with operators and superoperators. ... ok; > > > Superoperator: Test compability between matrix/vector conversion and ... ok; > > > Superoperator: Conversion between matrix and vector indices ... ok; > > > Superoperator: Conversion vector to matrix to vector ... ok; > > > qutip.tests.test_superoperator.TestMatrixVector.test_reshuffle ... ok; > > > utilities: energy unit conversions ... ok; > > > wigner: test wigner function calculation for coherent states ... ok; > > > wigner: test wigner function calculation for Fock states ... ok; > > > wigner: compare wigner methods for random density matrices ... ok; > > > wigner: compare wigner methods for random state vectors ... ok; > > > Wigner: Compare Wigner fft and iterative for rand. ket ... ok; > > > Wigner: Compare Wigner fft and iterative for rand. dm ... ok. # . ## ERROR: Qobj addition. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py"", line 139, in test_QobjAddition; assert_equal(q4.type, ischeck(q4)); NameError: global name 'ischeck' is not defined. # . ## FAIL: Qobj power. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(_self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py"", line 225, in test_QobjPower; assert_equal(all(q3.data.todense() - matrix(data) *_ 3), 0); File ""/usr/lib/python2.7/dist-packages/numpy/testing/utils.py"", line 317, in assert_equal; raise AssertionError(msg); AssertionError: ; Items are not equal:; ACTUAL: True; DESIRED: 0. ---. Ran 221 tests in 256.712s. FAILED (SKIP=1, errors=1, failures=1)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:12250,Testability,test,tests,12250,"or: Checks that randomly generated superoperators are ... ok; > > > Superoperator: Randomized comparison of standard and optimized ... ok; > > > Superoperator: Conversion matrix to vector to matrix ... ok; > > > Superoperator: Test unitary transformation with operators and superoperators. ... ok; > > > Superoperator: Test compability between matrix/vector conversion and ... ok; > > > Superoperator: Conversion between matrix and vector indices ... ok; > > > Superoperator: Conversion vector to matrix to vector ... ok; > > > qutip.tests.test_superoperator.TestMatrixVector.test_reshuffle ... ok; > > > utilities: energy unit conversions ... ok; > > > wigner: test wigner function calculation for coherent states ... ok; > > > wigner: test wigner function calculation for Fock states ... ok; > > > wigner: compare wigner methods for random density matrices ... ok; > > > wigner: compare wigner methods for random state vectors ... ok; > > > Wigner: Compare Wigner fft and iterative for rand. ket ... ok; > > > Wigner: Compare Wigner fft and iterative for rand. dm ... ok. # . ## ERROR: Qobj addition. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py"", line 139, in test_QobjAddition; assert_equal(q4.type, ischeck(q4)); NameError: global name 'ischeck' is not defined. # . ## FAIL: Qobj power. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(_self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py"", line 225, in test_QobjPower; assert_equal(all(q3.data.todense() - matrix(data) *_ 3), 0); File ""/usr/lib/python2.7/dist-packages/numpy/testing/utils.py"", line 317, in assert_equal; raise AssertionError(msg); AssertionError: ; Items are not equal:; ACTUAL: True; DESIRED: 0. ---. Ran 221 tests in 256.712s. FAILED (SKIP=1, errors=1, failures=1)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:12530,Testability,test,test,12530,"or: Checks that randomly generated superoperators are ... ok; > > > Superoperator: Randomized comparison of standard and optimized ... ok; > > > Superoperator: Conversion matrix to vector to matrix ... ok; > > > Superoperator: Test unitary transformation with operators and superoperators. ... ok; > > > Superoperator: Test compability between matrix/vector conversion and ... ok; > > > Superoperator: Conversion between matrix and vector indices ... ok; > > > Superoperator: Conversion vector to matrix to vector ... ok; > > > qutip.tests.test_superoperator.TestMatrixVector.test_reshuffle ... ok; > > > utilities: energy unit conversions ... ok; > > > wigner: test wigner function calculation for coherent states ... ok; > > > wigner: test wigner function calculation for Fock states ... ok; > > > wigner: compare wigner methods for random density matrices ... ok; > > > wigner: compare wigner methods for random state vectors ... ok; > > > Wigner: Compare Wigner fft and iterative for rand. ket ... ok; > > > Wigner: Compare Wigner fft and iterative for rand. dm ... ok. # . ## ERROR: Qobj addition. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py"", line 139, in test_QobjAddition; assert_equal(q4.type, ischeck(q4)); NameError: global name 'ischeck' is not defined. # . ## FAIL: Qobj power. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(_self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py"", line 225, in test_QobjPower; assert_equal(all(q3.data.todense() - matrix(data) *_ 3), 0); File ""/usr/lib/python2.7/dist-packages/numpy/testing/utils.py"", line 317, in assert_equal; raise AssertionError(msg); AssertionError: ; Items are not equal:; ACTUAL: True; DESIRED: 0. ---. Ran 221 tests in 256.712s. FAILED (SKIP=1, errors=1, failures=1)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:12598,Testability,test,tests,12598,"or: Checks that randomly generated superoperators are ... ok; > > > Superoperator: Randomized comparison of standard and optimized ... ok; > > > Superoperator: Conversion matrix to vector to matrix ... ok; > > > Superoperator: Test unitary transformation with operators and superoperators. ... ok; > > > Superoperator: Test compability between matrix/vector conversion and ... ok; > > > Superoperator: Conversion between matrix and vector indices ... ok; > > > Superoperator: Conversion vector to matrix to vector ... ok; > > > qutip.tests.test_superoperator.TestMatrixVector.test_reshuffle ... ok; > > > utilities: energy unit conversions ... ok; > > > wigner: test wigner function calculation for coherent states ... ok; > > > wigner: test wigner function calculation for Fock states ... ok; > > > wigner: compare wigner methods for random density matrices ... ok; > > > wigner: compare wigner methods for random state vectors ... ok; > > > Wigner: Compare Wigner fft and iterative for rand. ket ... ok; > > > Wigner: Compare Wigner fft and iterative for rand. dm ... ok. # . ## ERROR: Qobj addition. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py"", line 139, in test_QobjAddition; assert_equal(q4.type, ischeck(q4)); NameError: global name 'ischeck' is not defined. # . ## FAIL: Qobj power. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(_self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py"", line 225, in test_QobjPower; assert_equal(all(q3.data.todense() - matrix(data) *_ 3), 0); File ""/usr/lib/python2.7/dist-packages/numpy/testing/utils.py"", line 317, in assert_equal; raise AssertionError(msg); AssertionError: ; Items are not equal:; ACTUAL: True; DESIRED: 0. ---. Ran 221 tests in 256.712s. FAILED (SKIP=1, errors=1, failures=1)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:12754,Testability,test,testing,12754,"or: Checks that randomly generated superoperators are ... ok; > > > Superoperator: Randomized comparison of standard and optimized ... ok; > > > Superoperator: Conversion matrix to vector to matrix ... ok; > > > Superoperator: Test unitary transformation with operators and superoperators. ... ok; > > > Superoperator: Test compability between matrix/vector conversion and ... ok; > > > Superoperator: Conversion between matrix and vector indices ... ok; > > > Superoperator: Conversion vector to matrix to vector ... ok; > > > qutip.tests.test_superoperator.TestMatrixVector.test_reshuffle ... ok; > > > utilities: energy unit conversions ... ok; > > > wigner: test wigner function calculation for coherent states ... ok; > > > wigner: test wigner function calculation for Fock states ... ok; > > > wigner: compare wigner methods for random density matrices ... ok; > > > wigner: compare wigner methods for random state vectors ... ok; > > > Wigner: Compare Wigner fft and iterative for rand. ket ... ok; > > > Wigner: Compare Wigner fft and iterative for rand. dm ... ok. # . ## ERROR: Qobj addition. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py"", line 139, in test_QobjAddition; assert_equal(q4.type, ischeck(q4)); NameError: global name 'ischeck' is not defined. # . ## FAIL: Qobj power. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(_self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py"", line 225, in test_QobjPower; assert_equal(all(q3.data.todense() - matrix(data) *_ 3), 0); File ""/usr/lib/python2.7/dist-packages/numpy/testing/utils.py"", line 317, in assert_equal; raise AssertionError(msg); AssertionError: ; Items are not equal:; ACTUAL: True; DESIRED: 0. ---. Ran 221 tests in 256.712s. FAILED (SKIP=1, errors=1, failures=1)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:12806,Testability,Assert,AssertionError,12806,"or: Checks that randomly generated superoperators are ... ok; > > > Superoperator: Randomized comparison of standard and optimized ... ok; > > > Superoperator: Conversion matrix to vector to matrix ... ok; > > > Superoperator: Test unitary transformation with operators and superoperators. ... ok; > > > Superoperator: Test compability between matrix/vector conversion and ... ok; > > > Superoperator: Conversion between matrix and vector indices ... ok; > > > Superoperator: Conversion vector to matrix to vector ... ok; > > > qutip.tests.test_superoperator.TestMatrixVector.test_reshuffle ... ok; > > > utilities: energy unit conversions ... ok; > > > wigner: test wigner function calculation for coherent states ... ok; > > > wigner: test wigner function calculation for Fock states ... ok; > > > wigner: compare wigner methods for random density matrices ... ok; > > > wigner: compare wigner methods for random state vectors ... ok; > > > Wigner: Compare Wigner fft and iterative for rand. ket ... ok; > > > Wigner: Compare Wigner fft and iterative for rand. dm ... ok. # . ## ERROR: Qobj addition. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py"", line 139, in test_QobjAddition; assert_equal(q4.type, ischeck(q4)); NameError: global name 'ischeck' is not defined. # . ## FAIL: Qobj power. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(_self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py"", line 225, in test_QobjPower; assert_equal(all(q3.data.todense() - matrix(data) *_ 3), 0); File ""/usr/lib/python2.7/dist-packages/numpy/testing/utils.py"", line 317, in assert_equal; raise AssertionError(msg); AssertionError: ; Items are not equal:; ACTUAL: True; DESIRED: 0. ---. Ran 221 tests in 256.712s. FAILED (SKIP=1, errors=1, failures=1)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:12827,Testability,Assert,AssertionError,12827,"or: Checks that randomly generated superoperators are ... ok; > > > Superoperator: Randomized comparison of standard and optimized ... ok; > > > Superoperator: Conversion matrix to vector to matrix ... ok; > > > Superoperator: Test unitary transformation with operators and superoperators. ... ok; > > > Superoperator: Test compability between matrix/vector conversion and ... ok; > > > Superoperator: Conversion between matrix and vector indices ... ok; > > > Superoperator: Conversion vector to matrix to vector ... ok; > > > qutip.tests.test_superoperator.TestMatrixVector.test_reshuffle ... ok; > > > utilities: energy unit conversions ... ok; > > > wigner: test wigner function calculation for coherent states ... ok; > > > wigner: test wigner function calculation for Fock states ... ok; > > > wigner: compare wigner methods for random density matrices ... ok; > > > wigner: compare wigner methods for random state vectors ... ok; > > > Wigner: Compare Wigner fft and iterative for rand. ket ... ok; > > > Wigner: Compare Wigner fft and iterative for rand. dm ... ok. # . ## ERROR: Qobj addition. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py"", line 139, in test_QobjAddition; assert_equal(q4.type, ischeck(q4)); NameError: global name 'ischeck' is not defined. # . ## FAIL: Qobj power. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(_self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py"", line 225, in test_QobjPower; assert_equal(all(q3.data.todense() - matrix(data) *_ 3), 0); File ""/usr/lib/python2.7/dist-packages/numpy/testing/utils.py"", line 317, in assert_equal; raise AssertionError(msg); AssertionError: ; Items are not equal:; ACTUAL: True; DESIRED: 0. ---. Ran 221 tests in 256.712s. FAILED (SKIP=1, errors=1, failures=1)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:12906,Testability,test,tests,12906,"or: Checks that randomly generated superoperators are ... ok; > > > Superoperator: Randomized comparison of standard and optimized ... ok; > > > Superoperator: Conversion matrix to vector to matrix ... ok; > > > Superoperator: Test unitary transformation with operators and superoperators. ... ok; > > > Superoperator: Test compability between matrix/vector conversion and ... ok; > > > Superoperator: Conversion between matrix and vector indices ... ok; > > > Superoperator: Conversion vector to matrix to vector ... ok; > > > qutip.tests.test_superoperator.TestMatrixVector.test_reshuffle ... ok; > > > utilities: energy unit conversions ... ok; > > > wigner: test wigner function calculation for coherent states ... ok; > > > wigner: test wigner function calculation for Fock states ... ok; > > > wigner: compare wigner methods for random density matrices ... ok; > > > wigner: compare wigner methods for random state vectors ... ok; > > > Wigner: Compare Wigner fft and iterative for rand. ket ... ok; > > > Wigner: Compare Wigner fft and iterative for rand. dm ... ok. # . ## ERROR: Qobj addition. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py"", line 139, in test_QobjAddition; assert_equal(q4.type, ischeck(q4)); NameError: global name 'ischeck' is not defined. # . ## FAIL: Qobj power. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(_self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py"", line 225, in test_QobjPower; assert_equal(all(q3.data.todense() - matrix(data) *_ 3), 0); File ""/usr/lib/python2.7/dist-packages/numpy/testing/utils.py"", line 317, in assert_equal; raise AssertionError(msg); AssertionError: ; Items are not equal:; ACTUAL: True; DESIRED: 0. ---. Ran 221 tests in 256.712s. FAILED (SKIP=1, errors=1, failures=1)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:3454,Usability,simpl,simple,3454,"or list and state list ... ok; > > > expect: operator and state list ... ok; > > > Read and write complex valued decimal formatted data ... ok; > > > Read and write complex valued default formatted data ... ok; > > > Read and write complex valued exp formatted data ... ok; > > > Read and write real valued decimal formatted data ... ok; > > > Read and write real valued default formatted data ... ok; > > > Read and write real valued exp formatted data ... ok; > > > Read and write with automatic separator detection ... ok; > > > Floquet: test unitary evolution of time-dependent two-level system ... ok; > > > gates: expand 1 to N ... ok; > > > gates: expand 2 to N (using cnot, iswap, sqrtswap) ... ok; > > > gates: expand 2 to N (using swap) ... ok; > > > gates: expand 3 to N (using toffoli, fredkin, and random 3 qubit gate) ... ok; > > > gates: swap gate ... ok; > > > Graph: Breadth-First Search ... ok; > > > Graph: Graph Degree ... SKIP: Networkx not installed.; > > > Graph: Reverse Cuthill-McKee Ordering (simple) ... ok; > > > Graph: Reverse Cuthill-McKee Ordering (Bucky) ... ok; > > > Graph: Reverse Cuthill-McKee Ordering (boost) ... ok; > > > Monte-carlo: Constant H with no collapse ops (expect) ... ok; > > > Monte-carlo: Constant H with no collapse ops (states) ... ok; > > > Monte-carlo: Constant H (str format) with no collapse ops (expect) ... ok; > > > Monte-carlo: Constant H (func format) with no collapse ops (expect) ... ok; > > > Monte-carlo: Constant H (str format) with no collapse ops (states) ... ok; > > > Monte-carlo: Constant H (func format) with no collapse ops (states) ... ok; > > > Monte-carlo: Constant H with constant collapse ... ok; > > > Monte-carlo: Constant H with single collapse operator ... ok; > > > Monte-carlo: Constant H with single expect operator ... ok; > > > Monte-carlo: Collapse terms constant (func format) ... ok; > > > Monte-carlo: Collapse terms constant (str format) ... ok; > > > Monte-carlo: Time-dependent H (func format) ... ok; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:5371,Usability,simpl,simple,5371," Monte-carlo: Time-dependent H (func format) ... ok; > > > Monte-carlo: Time-dependent H (str format) ... ok; > > > Monte-carlo: check for correct dtypes (average_states=True) ... ok; > > > Monte-carlo: check for correct dtypes (average_states=False) ... ok; > > > mcsolve_f90: Constant H with no collapse ops (expect) ... ok; > > > mcsolve_f90: Constant H with no collapse ops (states) ... ok; > > > mcsolve_f90: Constant H with constant collapse ... ok; > > > mcsolve_f90: Constant H with single collapse operator ... ok; > > > mcsolve_f90: Constant H with single expect operator ... ok; > > > mcsolve_f90: check for correct dtypes (average_states=True) ... ok; > > > mcsolve_f90: check for correct dtypes (average_states=False) ... ok; > > > mesolve: cavity-qubit interaction, no dissipation ... ok; > > > mesolve: cavity-qubit without interaction, decay ... ok; > > > mesolve: cavity-qubit with interaction, decay ... ok; > > > mesolve: qubit without dissipation ... ok; > > > mesolve: simple time-dependence as function list ... ok; > > > mesolve: simple time-dependence as partial function list ... ok; > > > mesolve: simple time-dependence as string list ... ok; > > > mesolve: simple constant decay ... ok; > > > mesolve: constant decay as function list ... ok; > > > mesolve: constant decay as string list ... ok; > > > mesolve: simple constant decay ... ok; > > > mesolve: simple constant decay ... ok; > > > Metrics: Checks that average gate fidelities are sensible for random ... ok; > > > odechecks: monte-carlo ... ok; > > > Spin 1/2 operators ... ok; > > > Spin 3/2 operators ... ok; > > > Spin 2 operators ... ok; > > > Spin 5/2 operators ... ok; > > > Destruction operator ... ok; > > > Creation operator ... ok; > > > Identity operator ... ok; > > > Number operator ... ok; > > > Squeezing operator ... ok; > > > Displacement operator ... ok; > > > parfor ... ok; > > > partial transpose of bipartite systems ... ok; > > > partial transpose: comparing sparse and dense implementation",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:5434,Usability,simpl,simple,5434,"rlo: Time-dependent H (str format) ... ok; > > > Monte-carlo: check for correct dtypes (average_states=True) ... ok; > > > Monte-carlo: check for correct dtypes (average_states=False) ... ok; > > > mcsolve_f90: Constant H with no collapse ops (expect) ... ok; > > > mcsolve_f90: Constant H with no collapse ops (states) ... ok; > > > mcsolve_f90: Constant H with constant collapse ... ok; > > > mcsolve_f90: Constant H with single collapse operator ... ok; > > > mcsolve_f90: Constant H with single expect operator ... ok; > > > mcsolve_f90: check for correct dtypes (average_states=True) ... ok; > > > mcsolve_f90: check for correct dtypes (average_states=False) ... ok; > > > mesolve: cavity-qubit interaction, no dissipation ... ok; > > > mesolve: cavity-qubit without interaction, decay ... ok; > > > mesolve: cavity-qubit with interaction, decay ... ok; > > > mesolve: qubit without dissipation ... ok; > > > mesolve: simple time-dependence as function list ... ok; > > > mesolve: simple time-dependence as partial function list ... ok; > > > mesolve: simple time-dependence as string list ... ok; > > > mesolve: simple constant decay ... ok; > > > mesolve: constant decay as function list ... ok; > > > mesolve: constant decay as string list ... ok; > > > mesolve: simple constant decay ... ok; > > > mesolve: simple constant decay ... ok; > > > Metrics: Checks that average gate fidelities are sensible for random ... ok; > > > odechecks: monte-carlo ... ok; > > > Spin 1/2 operators ... ok; > > > Spin 3/2 operators ... ok; > > > Spin 2 operators ... ok; > > > Spin 5/2 operators ... ok; > > > Destruction operator ... ok; > > > Creation operator ... ok; > > > Identity operator ... ok; > > > Number operator ... ok; > > > Squeezing operator ... ok; > > > Displacement operator ... ok; > > > parfor ... ok; > > > partial transpose of bipartite systems ... ok; > > > partial transpose: comparing sparse and dense implementations ... ok; > > > partial transpose: randomized tests on tripartite s",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:5505,Usability,simpl,simple,5505,"k for correct dtypes (average_states=True) ... ok; > > > Monte-carlo: check for correct dtypes (average_states=False) ... ok; > > > mcsolve_f90: Constant H with no collapse ops (expect) ... ok; > > > mcsolve_f90: Constant H with no collapse ops (states) ... ok; > > > mcsolve_f90: Constant H with constant collapse ... ok; > > > mcsolve_f90: Constant H with single collapse operator ... ok; > > > mcsolve_f90: Constant H with single expect operator ... ok; > > > mcsolve_f90: check for correct dtypes (average_states=True) ... ok; > > > mcsolve_f90: check for correct dtypes (average_states=False) ... ok; > > > mesolve: cavity-qubit interaction, no dissipation ... ok; > > > mesolve: cavity-qubit without interaction, decay ... ok; > > > mesolve: cavity-qubit with interaction, decay ... ok; > > > mesolve: qubit without dissipation ... ok; > > > mesolve: simple time-dependence as function list ... ok; > > > mesolve: simple time-dependence as partial function list ... ok; > > > mesolve: simple time-dependence as string list ... ok; > > > mesolve: simple constant decay ... ok; > > > mesolve: constant decay as function list ... ok; > > > mesolve: constant decay as string list ... ok; > > > mesolve: simple constant decay ... ok; > > > mesolve: simple constant decay ... ok; > > > Metrics: Checks that average gate fidelities are sensible for random ... ok; > > > odechecks: monte-carlo ... ok; > > > Spin 1/2 operators ... ok; > > > Spin 3/2 operators ... ok; > > > Spin 2 operators ... ok; > > > Spin 5/2 operators ... ok; > > > Destruction operator ... ok; > > > Creation operator ... ok; > > > Identity operator ... ok; > > > Number operator ... ok; > > > Squeezing operator ... ok; > > > Displacement operator ... ok; > > > parfor ... ok; > > > partial transpose of bipartite systems ... ok; > > > partial transpose: comparing sparse and dense implementations ... ok; > > > partial transpose: randomized tests on tripartite system ... ok; > > > Qobj data ... ok; > > > Qobj type ... ok; > > ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:5566,Usability,simpl,simple,5566,"> > Monte-carlo: check for correct dtypes (average_states=False) ... ok; > > > mcsolve_f90: Constant H with no collapse ops (expect) ... ok; > > > mcsolve_f90: Constant H with no collapse ops (states) ... ok; > > > mcsolve_f90: Constant H with constant collapse ... ok; > > > mcsolve_f90: Constant H with single collapse operator ... ok; > > > mcsolve_f90: Constant H with single expect operator ... ok; > > > mcsolve_f90: check for correct dtypes (average_states=True) ... ok; > > > mcsolve_f90: check for correct dtypes (average_states=False) ... ok; > > > mesolve: cavity-qubit interaction, no dissipation ... ok; > > > mesolve: cavity-qubit without interaction, decay ... ok; > > > mesolve: cavity-qubit with interaction, decay ... ok; > > > mesolve: qubit without dissipation ... ok; > > > mesolve: simple time-dependence as function list ... ok; > > > mesolve: simple time-dependence as partial function list ... ok; > > > mesolve: simple time-dependence as string list ... ok; > > > mesolve: simple constant decay ... ok; > > > mesolve: constant decay as function list ... ok; > > > mesolve: constant decay as string list ... ok; > > > mesolve: simple constant decay ... ok; > > > mesolve: simple constant decay ... ok; > > > Metrics: Checks that average gate fidelities are sensible for random ... ok; > > > odechecks: monte-carlo ... ok; > > > Spin 1/2 operators ... ok; > > > Spin 3/2 operators ... ok; > > > Spin 2 operators ... ok; > > > Spin 5/2 operators ... ok; > > > Destruction operator ... ok; > > > Creation operator ... ok; > > > Identity operator ... ok; > > > Number operator ... ok; > > > Squeezing operator ... ok; > > > Displacement operator ... ok; > > > parfor ... ok; > > > partial transpose of bipartite systems ... ok; > > > partial transpose: comparing sparse and dense implementations ... ok; > > > partial transpose: randomized tests on tripartite system ... ok; > > > Qobj data ... ok; > > > Qobj type ... ok; > > > Qobj Hermicity ... ok; > > > Qobj shape ... ok; > >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:5719,Usability,simpl,simple,5719,"e_f90: Constant H with no collapse ops (states) ... ok; > > > mcsolve_f90: Constant H with constant collapse ... ok; > > > mcsolve_f90: Constant H with single collapse operator ... ok; > > > mcsolve_f90: Constant H with single expect operator ... ok; > > > mcsolve_f90: check for correct dtypes (average_states=True) ... ok; > > > mcsolve_f90: check for correct dtypes (average_states=False) ... ok; > > > mesolve: cavity-qubit interaction, no dissipation ... ok; > > > mesolve: cavity-qubit without interaction, decay ... ok; > > > mesolve: cavity-qubit with interaction, decay ... ok; > > > mesolve: qubit without dissipation ... ok; > > > mesolve: simple time-dependence as function list ... ok; > > > mesolve: simple time-dependence as partial function list ... ok; > > > mesolve: simple time-dependence as string list ... ok; > > > mesolve: simple constant decay ... ok; > > > mesolve: constant decay as function list ... ok; > > > mesolve: constant decay as string list ... ok; > > > mesolve: simple constant decay ... ok; > > > mesolve: simple constant decay ... ok; > > > Metrics: Checks that average gate fidelities are sensible for random ... ok; > > > odechecks: monte-carlo ... ok; > > > Spin 1/2 operators ... ok; > > > Spin 3/2 operators ... ok; > > > Spin 2 operators ... ok; > > > Spin 5/2 operators ... ok; > > > Destruction operator ... ok; > > > Creation operator ... ok; > > > Identity operator ... ok; > > > Number operator ... ok; > > > Squeezing operator ... ok; > > > Displacement operator ... ok; > > > parfor ... ok; > > > partial transpose of bipartite systems ... ok; > > > partial transpose: comparing sparse and dense implementations ... ok; > > > partial transpose: randomized tests on tripartite system ... ok; > > > Qobj data ... ok; > > > Qobj type ... ok; > > > Qobj Hermicity ... ok; > > > Qobj shape ... ok; > > > Qobj addition ... ok; > > > Qobj subtraction ... ok; > > > Qobj multiplication ... ok; > > > Qobj division ... ok; > > > Qobj power ... ok; > > > Qobj",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42855884:5764,Usability,simpl,simple,5764,"s) ... ok; > > > mcsolve_f90: Constant H with constant collapse ... ok; > > > mcsolve_f90: Constant H with single collapse operator ... ok; > > > mcsolve_f90: Constant H with single expect operator ... ok; > > > mcsolve_f90: check for correct dtypes (average_states=True) ... ok; > > > mcsolve_f90: check for correct dtypes (average_states=False) ... ok; > > > mesolve: cavity-qubit interaction, no dissipation ... ok; > > > mesolve: cavity-qubit without interaction, decay ... ok; > > > mesolve: cavity-qubit with interaction, decay ... ok; > > > mesolve: qubit without dissipation ... ok; > > > mesolve: simple time-dependence as function list ... ok; > > > mesolve: simple time-dependence as partial function list ... ok; > > > mesolve: simple time-dependence as string list ... ok; > > > mesolve: simple constant decay ... ok; > > > mesolve: constant decay as function list ... ok; > > > mesolve: constant decay as string list ... ok; > > > mesolve: simple constant decay ... ok; > > > mesolve: simple constant decay ... ok; > > > Metrics: Checks that average gate fidelities are sensible for random ... ok; > > > odechecks: monte-carlo ... ok; > > > Spin 1/2 operators ... ok; > > > Spin 3/2 operators ... ok; > > > Spin 2 operators ... ok; > > > Spin 5/2 operators ... ok; > > > Destruction operator ... ok; > > > Creation operator ... ok; > > > Identity operator ... ok; > > > Number operator ... ok; > > > Squeezing operator ... ok; > > > Displacement operator ... ok; > > > parfor ... ok; > > > partial transpose of bipartite systems ... ok; > > > partial transpose: comparing sparse and dense implementations ... ok; > > > partial transpose: randomized tests on tripartite system ... ok; > > > Qobj data ... ok; > > > Qobj type ... ok; > > > Qobj Hermicity ... ok; > > > Qobj shape ... ok; > > > Qobj addition ... ok; > > > Qobj subtraction ... ok; > > > Qobj multiplication ... ok; > > > Qobj division ... ok; > > > Qobj power ... ok; > > > Qobj negation ... ok; > > > Qobj equals ... ok; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884
https://github.com/qutip/qutip/issues/126#issuecomment-42904625:5,Availability,error,error,5,This error is because of a conflict between versions. Remove the old qutip installation in /usr/local/lib/python2.7/dist-packages/qutip and reinstall the development version.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42904625
https://github.com/qutip/qutip/issues/126#issuecomment-42904625:75,Deployability,install,installation,75,This error is because of a conflict between versions. Remove the old qutip installation in /usr/local/lib/python2.7/dist-packages/qutip and reinstall the development version.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42904625
https://github.com/qutip/qutip/issues/126#issuecomment-42922665:8,Availability,failure,failure,8,"Hi, the failure is gone, though the error is still there. # . ## ERROR: Qobj addition. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py"", line 139, in test_QobjAddition; assert_equal(q4.type, ischeck(q4)); NameError: global name 'ischeck' is not defined. ---. Ran 221 tests in 269.779s. FAILED (SKIP=1, errors=1). I removed my installation with apt-get remove python-qutip before installing the development version.; Cheers; Clemens",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42922665
https://github.com/qutip/qutip/issues/126#issuecomment-42922665:36,Availability,error,error,36,"Hi, the failure is gone, though the error is still there. # . ## ERROR: Qobj addition. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py"", line 139, in test_QobjAddition; assert_equal(q4.type, ischeck(q4)); NameError: global name 'ischeck' is not defined. ---. Ran 221 tests in 269.779s. FAILED (SKIP=1, errors=1). I removed my installation with apt-get remove python-qutip before installing the development version.; Cheers; Clemens",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42922665
https://github.com/qutip/qutip/issues/126#issuecomment-42922665:65,Availability,ERROR,ERROR,65,"Hi, the failure is gone, though the error is still there. # . ## ERROR: Qobj addition. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py"", line 139, in test_QobjAddition; assert_equal(q4.type, ischeck(q4)); NameError: global name 'ischeck' is not defined. ---. Ran 221 tests in 269.779s. FAILED (SKIP=1, errors=1). I removed my installation with apt-get remove python-qutip before installing the development version.; Cheers; Clemens",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42922665
https://github.com/qutip/qutip/issues/126#issuecomment-42922665:458,Availability,error,errors,458,"Hi, the failure is gone, though the error is still there. # . ## ERROR: Qobj addition. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py"", line 139, in test_QobjAddition; assert_equal(q4.type, ischeck(q4)); NameError: global name 'ischeck' is not defined. ---. Ran 221 tests in 269.779s. FAILED (SKIP=1, errors=1). I removed my installation with apt-get remove python-qutip before installing the development version.; Cheers; Clemens",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42922665
https://github.com/qutip/qutip/issues/126#issuecomment-42922665:482,Deployability,install,installation,482,"Hi, the failure is gone, though the error is still there. # . ## ERROR: Qobj addition. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py"", line 139, in test_QobjAddition; assert_equal(q4.type, ischeck(q4)); NameError: global name 'ischeck' is not defined. ---. Ran 221 tests in 269.779s. FAILED (SKIP=1, errors=1). I removed my installation with apt-get remove python-qutip before installing the development version.; Cheers; Clemens",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42922665
https://github.com/qutip/qutip/issues/126#issuecomment-42922665:535,Deployability,install,installing,535,"Hi, the failure is gone, though the error is still there. # . ## ERROR: Qobj addition. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py"", line 139, in test_QobjAddition; assert_equal(q4.type, ischeck(q4)); NameError: global name 'ischeck' is not defined. ---. Ran 221 tests in 269.779s. FAILED (SKIP=1, errors=1). I removed my installation with apt-get remove python-qutip before installing the development version.; Cheers; Clemens",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42922665
https://github.com/qutip/qutip/issues/126#issuecomment-42922665:204,Testability,test,test,204,"Hi, the failure is gone, though the error is still there. # . ## ERROR: Qobj addition. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py"", line 139, in test_QobjAddition; assert_equal(q4.type, ischeck(q4)); NameError: global name 'ischeck' is not defined. ---. Ran 221 tests in 269.779s. FAILED (SKIP=1, errors=1). I removed my installation with apt-get remove python-qutip before installing the development version.; Cheers; Clemens",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42922665
https://github.com/qutip/qutip/issues/126#issuecomment-42922665:272,Testability,test,tests,272,"Hi, the failure is gone, though the error is still there. # . ## ERROR: Qobj addition. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py"", line 139, in test_QobjAddition; assert_equal(q4.type, ischeck(q4)); NameError: global name 'ischeck' is not defined. ---. Ran 221 tests in 269.779s. FAILED (SKIP=1, errors=1). I removed my installation with apt-get remove python-qutip before installing the development version.; Cheers; Clemens",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42922665
https://github.com/qutip/qutip/issues/126#issuecomment-42922665:423,Testability,test,tests,423,"Hi, the failure is gone, though the error is still there. # . ## ERROR: Qobj addition. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py"", line 139, in test_QobjAddition; assert_equal(q4.type, ischeck(q4)); NameError: global name 'ischeck' is not defined. ---. Ran 221 tests in 269.779s. FAILED (SKIP=1, errors=1). I removed my installation with apt-get remove python-qutip before installing the development version.; Cheers; Clemens",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42922665
https://github.com/qutip/qutip/issues/126#issuecomment-42922781:4,Availability,error,error,4,"The error comes from the file `/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py`. This file is no longer part of qutip (development version), so it must come from the old installation. Make sure you delete that file before installing the development version.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42922781
https://github.com/qutip/qutip/issues/126#issuecomment-42922781:186,Deployability,install,installation,186,"The error comes from the file `/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py`. This file is no longer part of qutip (development version), so it must come from the old installation. Make sure you delete that file before installing the development version.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42922781
https://github.com/qutip/qutip/issues/126#issuecomment-42922781:238,Deployability,install,installing,238,"The error comes from the file `/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py`. This file is no longer part of qutip (development version), so it must come from the old installation. Make sure you delete that file before installing the development version.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42922781
https://github.com/qutip/qutip/issues/126#issuecomment-42922781:76,Testability,test,tests,76,"The error comes from the file `/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py`. This file is no longer part of qutip (development version), so it must come from the old installation. Make sure you delete that file before installing the development version.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42922781
https://github.com/qutip/qutip/issues/126#issuecomment-42923244:37,Deployability,install,install,37,"It was my mistake; I removed the old install manually and compiled it again, now everything's fine. Thanks.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42923244
https://github.com/qutip/qutip/issues/126#issuecomment-42923339:194,Deployability,release,release,194,"Good to hear that it works now. Thanks for reporting the problem. It's a bit unfortunate that the 2.2 version of qutip doesn't work smoothly with 14.04 out of the box, but we hope to have a new release out this summer which would amend this problem,",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42923339
https://github.com/qutip/qutip/pull/132#issuecomment-43633865:44,Testability,test,tests,44,Thanks. I will look into the failing Travis tests before merging.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/132#issuecomment-43633865
https://github.com/qutip/qutip/pull/132#issuecomment-43710630:8,Testability,test,tests,8,"OK, the tests are passing now, so it was not related to this PR, so I'm merging this now. Thanks for the fix.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/132#issuecomment-43710630
https://github.com/qutip/qutip/pull/136#issuecomment-44073618:11,Deployability,update,update,11,Nice. Also update 'gate_expand_3toN' to take an argument 'controls' instead of 'control1' and 'control2'. The unit tests in 'qutip.tests.test_gate.py' also need to be updated.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/136#issuecomment-44073618
https://github.com/qutip/qutip/pull/136#issuecomment-44073618:167,Deployability,update,updated,167,Nice. Also update 'gate_expand_3toN' to take an argument 'controls' instead of 'control1' and 'control2'. The unit tests in 'qutip.tests.test_gate.py' also need to be updated.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/136#issuecomment-44073618
https://github.com/qutip/qutip/pull/136#issuecomment-44073618:115,Testability,test,tests,115,Nice. Also update 'gate_expand_3toN' to take an argument 'controls' instead of 'control1' and 'control2'. The unit tests in 'qutip.tests.test_gate.py' also need to be updated.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/136#issuecomment-44073618
https://github.com/qutip/qutip/pull/136#issuecomment-44073618:131,Testability,test,tests,131,Nice. Also update 'gate_expand_3toN' to take an argument 'controls' instead of 'control1' and 'control2'. The unit tests in 'qutip.tests.test_gate.py' also need to be updated.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/136#issuecomment-44073618
https://github.com/qutip/qutip/pull/136#issuecomment-44080820:35,Testability,test,tests,35,"Yes, It's looking good, and travis tests are passing, so I'm merging. Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/136#issuecomment-44080820
https://github.com/qutip/qutip/pull/141#issuecomment-44495147:81,Integrability,depend,dependence,81,"Hi and thanks for the PR. This seems like reasonable functionality, however time dependence using arrays is already supported if you use scipy.interp to create a function for the array. I have used that method myself (see PR #109 for an example), and at that time decided that it was not necessary with a new time-dependence format in qutip for that functionality. But there could be performance advantages with your method. I will test and compare the two methods and get back to you. . Regarding the implementation: I would preferably avoid using global variables. Can you not use the args argument to store the values instead of using globals() ?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/141#issuecomment-44495147
https://github.com/qutip/qutip/pull/141#issuecomment-44495147:314,Integrability,depend,dependence,314,"Hi and thanks for the PR. This seems like reasonable functionality, however time dependence using arrays is already supported if you use scipy.interp to create a function for the array. I have used that method myself (see PR #109 for an example), and at that time decided that it was not necessary with a new time-dependence format in qutip for that functionality. But there could be performance advantages with your method. I will test and compare the two methods and get back to you. . Regarding the implementation: I would preferably avoid using global variables. Can you not use the args argument to store the values instead of using globals() ?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/141#issuecomment-44495147
https://github.com/qutip/qutip/pull/141#issuecomment-44495147:556,Modifiability,variab,variables,556,"Hi and thanks for the PR. This seems like reasonable functionality, however time dependence using arrays is already supported if you use scipy.interp to create a function for the array. I have used that method myself (see PR #109 for an example), and at that time decided that it was not necessary with a new time-dependence format in qutip for that functionality. But there could be performance advantages with your method. I will test and compare the two methods and get back to you. . Regarding the implementation: I would preferably avoid using global variables. Can you not use the args argument to store the values instead of using globals() ?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/141#issuecomment-44495147
https://github.com/qutip/qutip/pull/141#issuecomment-44495147:384,Performance,perform,performance,384,"Hi and thanks for the PR. This seems like reasonable functionality, however time dependence using arrays is already supported if you use scipy.interp to create a function for the array. I have used that method myself (see PR #109 for an example), and at that time decided that it was not necessary with a new time-dependence format in qutip for that functionality. But there could be performance advantages with your method. I will test and compare the two methods and get back to you. . Regarding the implementation: I would preferably avoid using global variables. Can you not use the args argument to store the values instead of using globals() ?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/141#issuecomment-44495147
https://github.com/qutip/qutip/pull/141#issuecomment-44495147:537,Safety,avoid,avoid,537,"Hi and thanks for the PR. This seems like reasonable functionality, however time dependence using arrays is already supported if you use scipy.interp to create a function for the array. I have used that method myself (see PR #109 for an example), and at that time decided that it was not necessary with a new time-dependence format in qutip for that functionality. But there could be performance advantages with your method. I will test and compare the two methods and get back to you. . Regarding the implementation: I would preferably avoid using global variables. Can you not use the args argument to store the values instead of using globals() ?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/141#issuecomment-44495147
https://github.com/qutip/qutip/pull/141#issuecomment-44495147:432,Testability,test,test,432,"Hi and thanks for the PR. This seems like reasonable functionality, however time dependence using arrays is already supported if you use scipy.interp to create a function for the array. I have used that method myself (see PR #109 for an example), and at that time decided that it was not necessary with a new time-dependence format in qutip for that functionality. But there could be performance advantages with your method. I will test and compare the two methods and get back to you. . Regarding the implementation: I would preferably avoid using global variables. Can you not use the args argument to store the values instead of using globals() ?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/141#issuecomment-44495147
https://github.com/qutip/qutip/pull/141#issuecomment-44496711:78,Testability,test,tests,78,"Also, the code needs to work with both python 2 and 3. See the failing Travis tests.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/141#issuecomment-44496711
https://github.com/qutip/qutip/pull/141#issuecomment-44606063:79,Integrability,depend,dependence,79,"Thanks for the quick review. I hadn't seen the scipy.interp1d approach to time-dependence yet, and it seems a good way. However, it still involves a (potentially costly?) python function callback which is not required in my approach. Not sure how much that matters, so it would be very nice to compare speed. As for tensor, I would expect it to do the same as tensor([Qobj(...)]), which I _think_ is what it used to do.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/141#issuecomment-44606063
https://github.com/qutip/qutip/pull/141#issuecomment-44613285:216,Integrability,depend,dependence,216,"I've done some simple benchmarks and indeed there seems to be a nice speedup. http://nbviewer.ipython.org/gist/jrjohansson/e63daeb3a41f95f163ad. so it definitely seems worthwhile to add support for this type of time-dependence in QuTiP. But string part of the definition of H is your example can be automatically generated knowning the times array, as I did in the notebook linked above. Therefore, I wonder if it may not be even more convenient if one simply could do. ```; >>> H = [H1, [H2, pulse]]; ```. It would require a few more changes in mesolve/sesolve and in _ode_check.py, but would give a nice clean API for using arrays to define time-dependences. How do you feel about that?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/141#issuecomment-44613285
https://github.com/qutip/qutip/pull/141#issuecomment-44613285:648,Integrability,depend,dependences,648,"I've done some simple benchmarks and indeed there seems to be a nice speedup. http://nbviewer.ipython.org/gist/jrjohansson/e63daeb3a41f95f163ad. so it definitely seems worthwhile to add support for this type of time-dependence in QuTiP. But string part of the definition of H is your example can be automatically generated knowning the times array, as I did in the notebook linked above. Therefore, I wonder if it may not be even more convenient if one simply could do. ```; >>> H = [H1, [H2, pulse]]; ```. It would require a few more changes in mesolve/sesolve and in _ode_check.py, but would give a nice clean API for using arrays to define time-dependences. How do you feel about that?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/141#issuecomment-44613285
https://github.com/qutip/qutip/pull/141#issuecomment-44613285:22,Testability,benchmark,benchmarks,22,"I've done some simple benchmarks and indeed there seems to be a nice speedup. http://nbviewer.ipython.org/gist/jrjohansson/e63daeb3a41f95f163ad. so it definitely seems worthwhile to add support for this type of time-dependence in QuTiP. But string part of the definition of H is your example can be automatically generated knowning the times array, as I did in the notebook linked above. Therefore, I wonder if it may not be even more convenient if one simply could do. ```; >>> H = [H1, [H2, pulse]]; ```. It would require a few more changes in mesolve/sesolve and in _ode_check.py, but would give a nice clean API for using arrays to define time-dependences. How do you feel about that?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/141#issuecomment-44613285
https://github.com/qutip/qutip/pull/141#issuecomment-44613285:15,Usability,simpl,simple,15,"I've done some simple benchmarks and indeed there seems to be a nice speedup. http://nbviewer.ipython.org/gist/jrjohansson/e63daeb3a41f95f163ad. so it definitely seems worthwhile to add support for this type of time-dependence in QuTiP. But string part of the definition of H is your example can be automatically generated knowning the times array, as I did in the notebook linked above. Therefore, I wonder if it may not be even more convenient if one simply could do. ```; >>> H = [H1, [H2, pulse]]; ```. It would require a few more changes in mesolve/sesolve and in _ode_check.py, but would give a nice clean API for using arrays to define time-dependences. How do you feel about that?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/141#issuecomment-44613285
https://github.com/qutip/qutip/pull/141#issuecomment-44613285:453,Usability,simpl,simply,453,"I've done some simple benchmarks and indeed there seems to be a nice speedup. http://nbviewer.ipython.org/gist/jrjohansson/e63daeb3a41f95f163ad. so it definitely seems worthwhile to add support for this type of time-dependence in QuTiP. But string part of the definition of H is your example can be automatically generated knowning the times array, as I did in the notebook linked above. Therefore, I wonder if it may not be even more convenient if one simply could do. ```; >>> H = [H1, [H2, pulse]]; ```. It would require a few more changes in mesolve/sesolve and in _ode_check.py, but would give a nice clean API for using arrays to define time-dependences. How do you feel about that?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/141#issuecomment-44613285
https://github.com/qutip/qutip/pull/141#issuecomment-44796169:54,Deployability,patch,patch,54,"Ok, let's drop the tensor thing then. I'll make a new patch which includes the time-dependence syntax that you suggest, indeed a more convenient way. Do you think it would be necessary to perform linear interpolation as I did or would just rounding to the nearest point be ok. It looks like I'll need to add code to sesolve and mesolve, and these files seem to have some duplicate code already, do you think it would be useful to make a new file with some shared helper functions (mostly for generating the cython code)?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/141#issuecomment-44796169
https://github.com/qutip/qutip/pull/141#issuecomment-44796169:84,Integrability,depend,dependence,84,"Ok, let's drop the tensor thing then. I'll make a new patch which includes the time-dependence syntax that you suggest, indeed a more convenient way. Do you think it would be necessary to perform linear interpolation as I did or would just rounding to the nearest point be ok. It looks like I'll need to add code to sesolve and mesolve, and these files seem to have some duplicate code already, do you think it would be useful to make a new file with some shared helper functions (mostly for generating the cython code)?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/141#issuecomment-44796169
https://github.com/qutip/qutip/pull/141#issuecomment-44796169:188,Performance,perform,perform,188,"Ok, let's drop the tensor thing then. I'll make a new patch which includes the time-dependence syntax that you suggest, indeed a more convenient way. Do you think it would be necessary to perform linear interpolation as I did or would just rounding to the nearest point be ok. It looks like I'll need to add code to sesolve and mesolve, and these files seem to have some duplicate code already, do you think it would be useful to make a new file with some shared helper functions (mostly for generating the cython code)?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/141#issuecomment-44796169
https://github.com/qutip/qutip/pull/141#issuecomment-44803811:680,Deployability,continuous,continuous,680,"Great! You can keep adding commits to this PR. That would make it easier to follow, and we could continue the discussions here. Yes, there is some code duplication in `sesolve` and `mesolve`, which would be good to cleanup with some helper functions, that would be most welcome. There are some related functions in `rhs_generate.py` as well as in `odecheck.py`. There is definitely some consolidation and cleanup that could be done there. Perhaps these should be combined to one module. As for the question about interpolation, I think that it would be sufficient to have the array behave as a step-function that is piece-wise constant, but the ODE solvers might play better with continuous functions that a linear interpolation would give, so it might be worth trying both cases (and maybe even have an option for which one to use in Odeoptions)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/141#issuecomment-44803811
https://github.com/qutip/qutip/pull/141#issuecomment-46521430:130,Integrability,depend,dependence,130,Thanks for your contribution. I have merged your changes together with other an implementation of the simplified array-based time-dependence format discussed above in PR #162.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/141#issuecomment-46521430
https://github.com/qutip/qutip/pull/141#issuecomment-46521430:102,Usability,simpl,simplified,102,Thanks for your contribution. I have merged your changes together with other an implementation of the simplified array-based time-dependence format discussed above in PR #162.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/141#issuecomment-46521430
https://github.com/qutip/qutip/pull/141#issuecomment-47146087:93,Integrability,depend,dependence,93,Sorry for not getting back to this earlier and thanks a lot for putting the array-based time-dependence in. It works like a charm.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/141#issuecomment-47146087
https://github.com/qutip/qutip/pull/145#issuecomment-45187844:21,Testability,test,testing,21,this good enough for testing : assert_((U0 - U1).norm() < 1e-12) ???,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/145#issuecomment-45187844
https://github.com/qutip/qutip/pull/145#issuecomment-45190105:13,Availability,error,error,13,"Getting this error for a few conversions, was not happening yesterday:. INPUT -> U1 = gate_sequence_product(qc.unitary_matrix(resolved=True)). ERROR -> ; TypeError Traceback (most recent call last); <ipython-input-67-9b3721c98c5a> in <module>(); ----> 1 U1 = gate_sequence_product(qc.unitary_matrix(resolved=True)); 2 ; 3 U0 == U1. /usr/local/lib/python3.4/dist-packages/qutip/qip/gates.py in gate_sequence_product(U_list, left_to_right); 672 for U in U_list:; 673 if left_to_right:; --> 674 U_overall = U \* U_overall; 675 else:; 676 U_overall = U_overall \* U. /usr/local/lib/python3.4/dist-packages/qutip/qobj.py in **mul**(self, other); 429 ; 430 else:; --> 431 raise TypeError(""Incompatible Qobj shapes""); 432 ; 433 elif isinstance(other, (list, np.ndarray)):. TypeError: Incompatible Qobj shapes",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/145#issuecomment-45190105
https://github.com/qutip/qutip/pull/145#issuecomment-45190105:143,Availability,ERROR,ERROR,143,"Getting this error for a few conversions, was not happening yesterday:. INPUT -> U1 = gate_sequence_product(qc.unitary_matrix(resolved=True)). ERROR -> ; TypeError Traceback (most recent call last); <ipython-input-67-9b3721c98c5a> in <module>(); ----> 1 U1 = gate_sequence_product(qc.unitary_matrix(resolved=True)); 2 ; 3 U0 == U1. /usr/local/lib/python3.4/dist-packages/qutip/qip/gates.py in gate_sequence_product(U_list, left_to_right); 672 for U in U_list:; 673 if left_to_right:; --> 674 U_overall = U \* U_overall; 675 else:; 676 U_overall = U_overall \* U. /usr/local/lib/python3.4/dist-packages/qutip/qobj.py in **mul**(self, other); 429 ; 430 else:; --> 431 raise TypeError(""Incompatible Qobj shapes""); 432 ; 433 elif isinstance(other, (list, np.ndarray)):. TypeError: Incompatible Qobj shapes",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/145#issuecomment-45190105
https://github.com/qutip/qutip/pull/145#issuecomment-45195466:4,Testability,test,tests,4,You tests are passing locally on my computer now. Did you find and fix the problem?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/145#issuecomment-45195466
https://github.com/qutip/qutip/pull/145#issuecomment-45196887:84,Testability,test,test,84,If you fix the issue with globalphase that I pointed out above you can add back the test `testCNOTtoISWAP` and it passes.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/145#issuecomment-45196887
https://github.com/qutip/qutip/pull/145#issuecomment-45196887:90,Testability,test,testCNOTtoISWAP,90,If you fix the issue with globalphase that I pointed out above you can add back the test `testCNOTtoISWAP` and it passes.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/145#issuecomment-45196887
https://github.com/qutip/qutip/pull/145#issuecomment-45207270:59,Testability,test,test,59,"Guess you can merge it now, unless you want me to add more test cases.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/145#issuecomment-45207270
https://github.com/qutip/qutip/pull/145#issuecomment-45212370:85,Deployability,update,updated,85,It's looking good but there are a few gate decompositions in the test notebook (i've updated and checked it in) that fails. It would be good if we could sort that out before merging this.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/145#issuecomment-45212370
https://github.com/qutip/qutip/pull/145#issuecomment-45212370:65,Testability,test,test,65,It's looking good but there are a few gate decompositions in the test notebook (i've updated and checked it in) that fails. It would be good if we could sort that out before merging this.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/145#issuecomment-45212370
https://github.com/qutip/qutip/pull/154#issuecomment-45703033:158,Availability,avail,availably,158,"Perhaps one could fallback to explicitly use `np.exp(1j * w *t)` in this case, or would you prefer defaulting to the numpy version and make the cmath version availably by explicitly choosing it?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/154#issuecomment-45703033
https://github.com/qutip/qutip/pull/154#issuecomment-45703141:153,Performance,perform,performance,153,"Hmmm... Well since we deal with complex numbers by default, perhaps it is best to use numpy by default and then mention that one can get a little better performance using cmath.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/154#issuecomment-45703141
https://github.com/qutip/qutip/pull/154#issuecomment-45703206:47,Performance,perform,performance,47,"Yeah I agree. Functionality should come first, performance is secondary.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/154#issuecomment-45703206
https://github.com/qutip/qutip/pull/154#issuecomment-61041717:195,Integrability,depend,depending,195,"What about the c99 complex math functions? Are those a possibility? Perhaps we could specify that 'j' is a reserved variable and then search the input string for 'j' and then call math or cmath, depending on the result.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/154#issuecomment-61041717
https://github.com/qutip/qutip/pull/154#issuecomment-61041717:116,Modifiability,variab,variable,116,"What about the c99 complex math functions? Are those a possibility? Perhaps we could specify that 'j' is a reserved variable and then search the input string for 'j' and then call math or cmath, depending on the result.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/154#issuecomment-61041717
https://github.com/qutip/qutip/pull/158#issuecomment-46006314:143,Testability,test,tests,143,Thanks for having a look at this. I'm merging this now but I guess we should look out for possible regressions that is not covered by the unit tests for a while.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/158#issuecomment-46006314
https://github.com/qutip/qutip/pull/165#issuecomment-46957561:37,Availability,error,error,37,"@jrjohansson plot_pulse is giving an error alongwith the output in case of linear spin chain, please check that out",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/165#issuecomment-46957561
https://github.com/qutip/qutip/pull/165#issuecomment-46957824:180,Deployability,install,installed,180,"Do. ```; import matplotlib.pyplot as plt; ```. Do this import inside the plot_pulse function, not at the top of the file, so that the class could be used even if matplotlib is not installed.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/165#issuecomment-46957824
https://github.com/qutip/qutip/pull/182#issuecomment-48622482:427,Deployability,continuous,continuous,427,"This could possibly be fixed in new scipy https://github.com/scipy/scipy/pull/2972. I'd inadvertently introduced a speed regression for non-huge matrices when I changed the scipy expm implementation from Higham 2005 to 2009. Sorry about that. Although scipy expm has many unit tests, I'm not completely sure how it deals with complex matrices because the Higham codes are designed for 64 bit float. Also scipy doesn't have the continuous benchmarking like https://github.com/qutip/continuous-benchmark which would be awesome.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/182#issuecomment-48622482
https://github.com/qutip/qutip/pull/182#issuecomment-48622482:481,Deployability,continuous,continuous-benchmark,481,"This could possibly be fixed in new scipy https://github.com/scipy/scipy/pull/2972. I'd inadvertently introduced a speed regression for non-huge matrices when I changed the scipy expm implementation from Higham 2005 to 2009. Sorry about that. Although scipy expm has many unit tests, I'm not completely sure how it deals with complex matrices because the Higham codes are designed for 64 bit float. Also scipy doesn't have the continuous benchmarking like https://github.com/qutip/continuous-benchmark which would be awesome.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/182#issuecomment-48622482
https://github.com/qutip/qutip/pull/182#issuecomment-48622482:277,Testability,test,tests,277,"This could possibly be fixed in new scipy https://github.com/scipy/scipy/pull/2972. I'd inadvertently introduced a speed regression for non-huge matrices when I changed the scipy expm implementation from Higham 2005 to 2009. Sorry about that. Although scipy expm has many unit tests, I'm not completely sure how it deals with complex matrices because the Higham codes are designed for 64 bit float. Also scipy doesn't have the continuous benchmarking like https://github.com/qutip/continuous-benchmark which would be awesome.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/182#issuecomment-48622482
https://github.com/qutip/qutip/pull/182#issuecomment-48622482:438,Testability,benchmark,benchmarking,438,"This could possibly be fixed in new scipy https://github.com/scipy/scipy/pull/2972. I'd inadvertently introduced a speed regression for non-huge matrices when I changed the scipy expm implementation from Higham 2005 to 2009. Sorry about that. Although scipy expm has many unit tests, I'm not completely sure how it deals with complex matrices because the Higham codes are designed for 64 bit float. Also scipy doesn't have the continuous benchmarking like https://github.com/qutip/continuous-benchmark which would be awesome.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/182#issuecomment-48622482
https://github.com/qutip/qutip/pull/182#issuecomment-48622482:492,Testability,benchmark,benchmark,492,"This could possibly be fixed in new scipy https://github.com/scipy/scipy/pull/2972. I'd inadvertently introduced a speed regression for non-huge matrices when I changed the scipy expm implementation from Higham 2005 to 2009. Sorry about that. Although scipy expm has many unit tests, I'm not completely sure how it deals with complex matrices because the Higham codes are designed for 64 bit float. Also scipy doesn't have the continuous benchmarking like https://github.com/qutip/continuous-benchmark which would be awesome.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/182#issuecomment-48622482
https://github.com/qutip/qutip/pull/182#issuecomment-48682172:251,Testability,benchmark,benchmarks,251,"Hi. Thanks for the information, that is good to know. In qutip we actually don't use the expm function from scipy yet, but we have plans to add an option to use scipys expm instead of qutips own. I hoped that scipys might be faster and have done some benchmarks, but I hardly saw any difference so I have not been sufficiently motivated make the add this option yet, but perhaps I need to revisit those benchmark tests now. Thanks again for the info!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/182#issuecomment-48682172
https://github.com/qutip/qutip/pull/182#issuecomment-48682172:403,Testability,benchmark,benchmark,403,"Hi. Thanks for the information, that is good to know. In qutip we actually don't use the expm function from scipy yet, but we have plans to add an option to use scipys expm instead of qutips own. I hoped that scipys might be faster and have done some benchmarks, but I hardly saw any difference so I have not been sufficiently motivated make the add this option yet, but perhaps I need to revisit those benchmark tests now. Thanks again for the info!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/182#issuecomment-48682172
https://github.com/qutip/qutip/pull/182#issuecomment-48682172:413,Testability,test,tests,413,"Hi. Thanks for the information, that is good to know. In qutip we actually don't use the expm function from scipy yet, but we have plans to add an option to use scipys expm instead of qutips own. I hoped that scipys might be faster and have done some benchmarks, but I hardly saw any difference so I have not been sufficiently motivated make the add this option yet, but perhaps I need to revisit those benchmark tests now. Thanks again for the info!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/182#issuecomment-48682172
https://github.com/qutip/qutip/pull/184#issuecomment-48688527:0,Testability,Benchmark,Benchmarks,0,Benchmarks:. http://nbviewer.ipython.org/gist/jrjohansson/b3212a496ec1651fca76,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/184#issuecomment-48688527
https://github.com/qutip/qutip/pull/186#issuecomment-48713369:386,Deployability,release,release-updates,386,"Do we need this at all? Or are we going to do CPC again in the future?; On Jul 11, 2014 3:56 PM, ""Robert Johansson"" notifications@github.com; wrote:. > - Remove the README.txt for CPC from the repository: only needed for; > CPC submission, and no need to keep it here; > ; > ---; > ; > You can merge this Pull Request by running; > ; > git pull https://github.com/jrjohansson/qutip 3.0-release-updates; > ; > Or view, comment on, or merge it at:; > ; > https://github.com/qutip/qutip/pull/186; > Commit Summary; > - Remove the README.txt for CPC from the repository: only needed for; > CPC submission, and no need to keep it here; > ; > File Changes; > - _D_ README.txt https://github.com/qutip/qutip/pull/186/files#diff-0; > (155); > ; > Patch Links:; > - https://github.com/qutip/qutip/pull/186.patch; > - https://github.com/qutip/qutip/pull/186.diff; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/pull/186.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/186#issuecomment-48713369
https://github.com/qutip/qutip/pull/186#issuecomment-48713369:739,Deployability,Patch,Patch,739,"Do we need this at all? Or are we going to do CPC again in the future?; On Jul 11, 2014 3:56 PM, ""Robert Johansson"" notifications@github.com; wrote:. > - Remove the README.txt for CPC from the repository: only needed for; > CPC submission, and no need to keep it here; > ; > ---; > ; > You can merge this Pull Request by running; > ; > git pull https://github.com/jrjohansson/qutip 3.0-release-updates; > ; > Or view, comment on, or merge it at:; > ; > https://github.com/qutip/qutip/pull/186; > Commit Summary; > - Remove the README.txt for CPC from the repository: only needed for; > CPC submission, and no need to keep it here; > ; > File Changes; > - _D_ README.txt https://github.com/qutip/qutip/pull/186/files#diff-0; > (155); > ; > Patch Links:; > - https://github.com/qutip/qutip/pull/186.patch; > - https://github.com/qutip/qutip/pull/186.diff; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/pull/186.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/186#issuecomment-48713369
https://github.com/qutip/qutip/pull/186#issuecomment-48713369:797,Deployability,patch,patch,797,"Do we need this at all? Or are we going to do CPC again in the future?; On Jul 11, 2014 3:56 PM, ""Robert Johansson"" notifications@github.com; wrote:. > - Remove the README.txt for CPC from the repository: only needed for; > CPC submission, and no need to keep it here; > ; > ---; > ; > You can merge this Pull Request by running; > ; > git pull https://github.com/jrjohansson/qutip 3.0-release-updates; > ; > Or view, comment on, or merge it at:; > ; > https://github.com/qutip/qutip/pull/186; > Commit Summary; > - Remove the README.txt for CPC from the repository: only needed for; > CPC submission, and no need to keep it here; > ; > File Changes; > - _D_ README.txt https://github.com/qutip/qutip/pull/186/files#diff-0; > (155); > ; > Patch Links:; > - https://github.com/qutip/qutip/pull/186.patch; > - https://github.com/qutip/qutip/pull/186.diff; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/pull/186.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/186#issuecomment-48713369
https://github.com/qutip/qutip/pull/195#issuecomment-49124612:53,Deployability,release,release,53,Is this PR done? If so I can merge it and make a new release candidate dist file.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/195#issuecomment-49124612
https://github.com/qutip/qutip/pull/197#issuecomment-49156618:22,Testability,test,tested,22,Fortran module is not tested in Travis so i'm merging this before travis tests finish.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/197#issuecomment-49156618
https://github.com/qutip/qutip/pull/197#issuecomment-49156618:73,Testability,test,tests,73,Fortran module is not tested in Travis so i'm merging this before travis tests finish.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/197#issuecomment-49156618
https://github.com/qutip/qutip/pull/197#issuecomment-49157591:27,Availability,error,error,27,I guess this was the ZVODE error in the mcsolve_f90 tests?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/197#issuecomment-49157591
https://github.com/qutip/qutip/pull/197#issuecomment-49157591:52,Testability,test,tests,52,I guess this was the ZVODE error in the mcsolve_f90 tests?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/197#issuecomment-49157591
https://github.com/qutip/qutip/pull/197#issuecomment-49158166:38,Testability,test,tests,38,"Any reason why it was not seen in the tests earlier? . Also, I am working on the SS section of the docs tonight. Should be done before tomorrow. On Jul 16, 2014, at 9:29 PM, Robert Johansson notifications@github.com wrote:. > That's the hope. Still having some troubles with this though.; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/197#issuecomment-49158166
https://github.com/qutip/qutip/pull/197#issuecomment-49159675:14,Availability,error,errors,14,"These fortran errors only appears when installing through the dist file. When installing from the source directory in the repo it works. Something is missing the the dist file, perhaps the .f2py_f2cmap file or something similar.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/197#issuecomment-49159675
https://github.com/qutip/qutip/pull/197#issuecomment-49159675:39,Deployability,install,installing,39,"These fortran errors only appears when installing through the dist file. When installing from the source directory in the repo it works. Something is missing the the dist file, perhaps the .f2py_f2cmap file or something similar.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/197#issuecomment-49159675
https://github.com/qutip/qutip/pull/197#issuecomment-49159675:78,Deployability,install,installing,78,"These fortran errors only appears when installing through the dist file. When installing from the source directory in the repo it works. Something is missing the the dist file, perhaps the .f2py_f2cmap file or something similar.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/197#issuecomment-49159675
https://github.com/qutip/qutip/issues/199#issuecomment-49743536:146,Deployability,update,update,146,"I think it should work if lines 398 - 405 are replaced with this:. ```; if not args_new:; args_new = args; elif isinstance(args, dict):; args_new.update(args); else:; raise ValueError(""Time-dependent array format requires args to "" +; ""be a dictionary""); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/199#issuecomment-49743536
https://github.com/qutip/qutip/issues/199#issuecomment-49743536:190,Integrability,depend,dependent,190,"I think it should work if lines 398 - 405 are replaced with this:. ```; if not args_new:; args_new = args; elif isinstance(args, dict):; args_new.update(args); else:; raise ValueError(""Time-dependent array format requires args to "" +; ""be a dictionary""); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/199#issuecomment-49743536
https://github.com/qutip/qutip/issues/203#issuecomment-50447740:73,Usability,simpl,simple,73,"Thanks for the suggestion. This is a good idea, and should be relatively simple to implement.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/203#issuecomment-50447740
https://github.com/qutip/qutip/pull/206#issuecomment-50840676:92,Testability,test,test,92,"Thanks Kevin. This looks very interesting. I think it will take me a few days to review and test this, but I will try to get back to you as soon as I can! I'll start with some inline code comments.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/206#issuecomment-50840676
https://github.com/qutip/qutip/pull/206#issuecomment-52397664:134,Safety,safe,safer,134,"It looks to me like the old-style format requires args not have mixed type so [args, 0] actually doesn't work. But I tried to make it safer - on that note I think it seems cleaner to just leave the old-style form only implemented for dictionary inputs. I also changed the function list format to have args in a dictionary format. This way any internal code will always reference args[""_t0""] regardless of the format used.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/206#issuecomment-52397664
https://github.com/qutip/qutip/pull/206#issuecomment-52880234:218,Testability,test,tests,218,"Thanks, Kevin. And sorry for being slow to review this. I'll certainly merge it soon. One small thing, could you change naming (most importantly in the exception you raise at some point, and also in naming of the unit tests, etc) from old-style to function-callback style, which is how we usually refer to this td-format. I don't like the ""old-style format"" because it suggests that it is deprecated or inferior or has been replaced. Both function-callback and the list-string format for cython are fully supported methods and have their own distinct use-cases. While the cython format is faster, it is rather limited in what it can do, and sometimes the flexibility of the function-callback format is called form. Also, I wonder if you're method could not also be applied to `_correlation_me_2op_2t` ? It would be nice if there was feature symmetry between the _4op_2t and _2op_2t functions.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/206#issuecomment-52880234
https://github.com/qutip/qutip/pull/206#issuecomment-52936076:287,Deployability,update,update,287,"I fixed this and added the feature for the 2op 2t function that uses the me solver. It should be fine, but I'm going to need to think for a bit to come up with a good test/check, but it appears to behave like I would expect (from 2D plots). I'll add the notebook at some point next week/update the docs?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/206#issuecomment-52936076
https://github.com/qutip/qutip/pull/206#issuecomment-52936076:167,Testability,test,test,167,"I fixed this and added the feature for the 2op 2t function that uses the me solver. It should be fine, but I'm going to need to think for a bit to come up with a good test/check, but it appears to behave like I would expect (from 2D plots). I'll add the notebook at some point next week/update the docs?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/206#issuecomment-52936076
https://github.com/qutip/qutip/pull/206#issuecomment-53378743:128,Availability,error,error,128,"Perhaps I was a bit over-zealous (I thought I saw they both had ""raiseNotImplementedError""s) The 2op_2t has the not implemented error. I just ran something for 2op_1t though and it doesn't seem to work:. from qutip import *; from scipy import *. times = linspace(0,10.0,200); a = destroy(10); x = a.dag() + a; H = a.dag() \* a; psi0 = fock(10,1). corr1 = correlation_ss(H, times, [sqrt(0.5) \* a], x, x, rho0=psi0, solver=""me""); corr2 = correlation_ss(H, times, [sqrt(0.5) \* a], x, x, rho0=psi0, solver=""mc""). from pylab import *; plot(times, real(corr1), times, real(corr2)); xlabel(r'Time $t$'); ylabel(r'Correlation $\left<x(t)x(0)\right>$'); show()",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/206#issuecomment-53378743
https://github.com/qutip/qutip/issues/207#issuecomment-50946425:55,Availability,robust,robust,55,"Thanks for reporting this. The function should be more robust... We have had this problem several times before, especially with Cython which seem to come up with new version postfix every once in a while... There are a list of special cases in the version2int function. A new special case for version numbers ending with 'a...' should be added.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/207#issuecomment-50946425
https://github.com/qutip/qutip/issues/207#issuecomment-50951305:230,Usability,simpl,simple,230,"There's a [StackOverflow](http://stackoverflow.com/a/11887885/267841) response that explains the different `distutils.version` parsers. [PEP 440](http://legacy.python.org/dev/peps/pep-0440/) may also be of interest, as it gives a simple grammar for allowable Python version strings.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/207#issuecomment-50951305
https://github.com/qutip/qutip/issues/207#issuecomment-50951673:31,Integrability,depend,dependency,31,"Hmm, this would add a run-time dependency on distutils... which probably in normal cases would not be an issue, but we would have to add it as a dependency in the deb package and perhaps also in macports etc.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/207#issuecomment-50951673
https://github.com/qutip/qutip/issues/207#issuecomment-50951673:145,Integrability,depend,dependency,145,"Hmm, this would add a run-time dependency on distutils... which probably in normal cases would not be an issue, but we would have to add it as a dependency in the deb package and perhaps also in macports etc.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/207#issuecomment-50951673
https://github.com/qutip/qutip/issues/209#issuecomment-51128352:93,Testability,test,test,93,"I don't think that type checking should be done in the mcsolver. Instead we should just unit test the operators themselves. The reason that this happened is because we bypassed the checks done by the Qobj class by operating on the underlying data itself. For most users, this will never be an issue.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/209#issuecomment-51128352
https://github.com/qutip/qutip/pull/210#issuecomment-51133272:34,Availability,down,down,34,"Thanks for spending time tracking down this bug! Qobj.data should always be csr. We make this assumption in many places in qutip, so the bug is in create and not in mcsolve, so I agree with Paul that type casts in mcsolve should not be necessary.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/210#issuecomment-51133272
https://github.com/qutip/qutip/pull/212#issuecomment-52374521:0,Availability,ping,ping,0,ping @anubhavvardhan : fyi,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/212#issuecomment-52374521
https://github.com/qutip/qutip/issues/213#issuecomment-186705504:96,Performance,perform,performance,96,I believe we are not supporting any changes to the Fortran code now that the mcsolver is on par performance wise. Thus closing this question.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/213#issuecomment-186705504
https://github.com/qutip/qutip/pull/214#issuecomment-52877501:0,Availability,ping,ping,0,ping @nonhermitian,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/214#issuecomment-52877501
https://github.com/qutip/qutip/pull/214#issuecomment-52879383:235,Availability,error,error,235,"OK, good. I see no harm in keeping bicg and lgmres though, if only for backwards compatibility, also in case one encounters a bug in one of them the other could be tried (this just happend to me, bicg failed with an undefined variable error deep in the scipy code, but bicgstab worked). The defaults should be chosen carefully though, of course.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/214#issuecomment-52879383
https://github.com/qutip/qutip/pull/214#issuecomment-52879383:226,Modifiability,variab,variable,226,"OK, good. I see no harm in keeping bicg and lgmres though, if only for backwards compatibility, also in case one encounters a bug in one of them the other could be tried (this just happend to me, bicg failed with an undefined variable error deep in the scipy code, but bicgstab worked). The defaults should be chosen carefully though, of course.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/214#issuecomment-52879383
https://github.com/qutip/qutip/pull/218#issuecomment-53827562:1196,Deployability,release,release,1196,"Hi Kevin. Thanks for your efforts on this. However, I am not in favor of merging this PR in this form. It is way too intrusive on the old API, it would break backwarks compatibility for no good reason as I see it. Personally I don't think that the _2t and _1t names are that confusing. As you point out, _1t is still a two-time correlation function (a one-time correlation function would not be a correlation function, just a simple expectation value), but the _1t and _2t is intended to refer to the number of free time variables. Perhaps this should be explained more clearly in the docstrings, but I don't think it is worth changing the API for this reason. I would prefer if you added the new mc solvers using the current API conventions, and preferably without changing the me and es based solvers. If you want to propose a new API the correct way to do it would be:; 1. First discuss the idea, so that everyone interested could weight in on the naming of the functions, the style of parameters and arguments etc.; 2. Implement the new API without disrupting the previous API; 3. Deprecate the previous API, so that using it gives a warning (but still works!). ; 4. Then finally after a few release cycles we may drop the old API. This would not happen until qutip 4.0 (see http://semver.org/), which we do not plan to release anytime soon. Therefore, we cannot accept any PRs that with backwarks breaking API changes.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/218#issuecomment-53827562
https://github.com/qutip/qutip/pull/218#issuecomment-53827562:1324,Deployability,release,release,1324,"Hi Kevin. Thanks for your efforts on this. However, I am not in favor of merging this PR in this form. It is way too intrusive on the old API, it would break backwarks compatibility for no good reason as I see it. Personally I don't think that the _2t and _1t names are that confusing. As you point out, _1t is still a two-time correlation function (a one-time correlation function would not be a correlation function, just a simple expectation value), but the _1t and _2t is intended to refer to the number of free time variables. Perhaps this should be explained more clearly in the docstrings, but I don't think it is worth changing the API for this reason. I would prefer if you added the new mc solvers using the current API conventions, and preferably without changing the me and es based solvers. If you want to propose a new API the correct way to do it would be:; 1. First discuss the idea, so that everyone interested could weight in on the naming of the functions, the style of parameters and arguments etc.; 2. Implement the new API without disrupting the previous API; 3. Deprecate the previous API, so that using it gives a warning (but still works!). ; 4. Then finally after a few release cycles we may drop the old API. This would not happen until qutip 4.0 (see http://semver.org/), which we do not plan to release anytime soon. Therefore, we cannot accept any PRs that with backwarks breaking API changes.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/218#issuecomment-53827562
https://github.com/qutip/qutip/pull/218#issuecomment-53827562:521,Modifiability,variab,variables,521,"Hi Kevin. Thanks for your efforts on this. However, I am not in favor of merging this PR in this form. It is way too intrusive on the old API, it would break backwarks compatibility for no good reason as I see it. Personally I don't think that the _2t and _1t names are that confusing. As you point out, _1t is still a two-time correlation function (a one-time correlation function would not be a correlation function, just a simple expectation value), but the _1t and _2t is intended to refer to the number of free time variables. Perhaps this should be explained more clearly in the docstrings, but I don't think it is worth changing the API for this reason. I would prefer if you added the new mc solvers using the current API conventions, and preferably without changing the me and es based solvers. If you want to propose a new API the correct way to do it would be:; 1. First discuss the idea, so that everyone interested could weight in on the naming of the functions, the style of parameters and arguments etc.; 2. Implement the new API without disrupting the previous API; 3. Deprecate the previous API, so that using it gives a warning (but still works!). ; 4. Then finally after a few release cycles we may drop the old API. This would not happen until qutip 4.0 (see http://semver.org/), which we do not plan to release anytime soon. Therefore, we cannot accept any PRs that with backwarks breaking API changes.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/218#issuecomment-53827562
https://github.com/qutip/qutip/pull/218#issuecomment-53827562:426,Usability,simpl,simple,426,"Hi Kevin. Thanks for your efforts on this. However, I am not in favor of merging this PR in this form. It is way too intrusive on the old API, it would break backwarks compatibility for no good reason as I see it. Personally I don't think that the _2t and _1t names are that confusing. As you point out, _1t is still a two-time correlation function (a one-time correlation function would not be a correlation function, just a simple expectation value), but the _1t and _2t is intended to refer to the number of free time variables. Perhaps this should be explained more clearly in the docstrings, but I don't think it is worth changing the API for this reason. I would prefer if you added the new mc solvers using the current API conventions, and preferably without changing the me and es based solvers. If you want to propose a new API the correct way to do it would be:; 1. First discuss the idea, so that everyone interested could weight in on the naming of the functions, the style of parameters and arguments etc.; 2. Implement the new API without disrupting the previous API; 3. Deprecate the previous API, so that using it gives a warning (but still works!). ; 4. Then finally after a few release cycles we may drop the old API. This would not happen until qutip 4.0 (see http://semver.org/), which we do not plan to release anytime soon. Therefore, we cannot accept any PRs that with backwarks breaking API changes.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/218#issuecomment-53827562
https://github.com/qutip/qutip/pull/218#issuecomment-53827562:570,Usability,clear,clearly,570,"Hi Kevin. Thanks for your efforts on this. However, I am not in favor of merging this PR in this form. It is way too intrusive on the old API, it would break backwarks compatibility for no good reason as I see it. Personally I don't think that the _2t and _1t names are that confusing. As you point out, _1t is still a two-time correlation function (a one-time correlation function would not be a correlation function, just a simple expectation value), but the _1t and _2t is intended to refer to the number of free time variables. Perhaps this should be explained more clearly in the docstrings, but I don't think it is worth changing the API for this reason. I would prefer if you added the new mc solvers using the current API conventions, and preferably without changing the me and es based solvers. If you want to propose a new API the correct way to do it would be:; 1. First discuss the idea, so that everyone interested could weight in on the naming of the functions, the style of parameters and arguments etc.; 2. Implement the new API without disrupting the previous API; 3. Deprecate the previous API, so that using it gives a warning (but still works!). ; 4. Then finally after a few release cycles we may drop the old API. This would not happen until qutip 4.0 (see http://semver.org/), which we do not plan to release anytime soon. Therefore, we cannot accept any PRs that with backwarks breaking API changes.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/218#issuecomment-53827562
https://github.com/qutip/qutip/pull/218#issuecomment-53828769:137,Usability,clear,clear,137,"Hi Robert, I apologize for this issue, this is my first time working on an open source project. That being said, I should have been more clear that I was not in favor of meeting the project in its current form. I expected you would want the whole api left in tact - I will leave the API untouched. The main point here is that only one internal function is necessary (for each me, es, and mc) to solve for all of the public api calls. I would like to keep this as is and have the public functions call these three functions.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/218#issuecomment-53828769
https://github.com/qutip/qutip/pull/218#issuecomment-54223878:24,Testability,test,testing,24,"I want to do a bit more testing and haven't implemented ""steady state"" for the mc correlator yet, but I think it should be in an acceptable form (?) for merging once I check for typos.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/218#issuecomment-54223878
https://github.com/qutip/qutip/pull/218#issuecomment-54312656:118,Usability,simpl,simple,118,Sorry about all those commits - I didn't have my working environment last night and I thought I could easily change a simple thing through github's editor - it took a few tries...,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/218#issuecomment-54312656
https://github.com/qutip/qutip/issues/219#issuecomment-53663345:50,Usability,progress bar,progress bar,50,"Good point. It used to be possible to disable the progress bar when we still used Qt, but for some reason that feature got lost when we restructured the code to use the text-based progress bar. In PR #220 I've added back this feature. You should now (when the PR is merged) be able to do. ```; >>> result = mcsolve(...., progress_bar=None); ```. to disable the progress bar.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/219#issuecomment-53663345
https://github.com/qutip/qutip/issues/219#issuecomment-53663345:180,Usability,progress bar,progress bar,180,"Good point. It used to be possible to disable the progress bar when we still used Qt, but for some reason that feature got lost when we restructured the code to use the text-based progress bar. In PR #220 I've added back this feature. You should now (when the PR is merged) be able to do. ```; >>> result = mcsolve(...., progress_bar=None); ```. to disable the progress bar.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/219#issuecomment-53663345
https://github.com/qutip/qutip/issues/219#issuecomment-53663345:361,Usability,progress bar,progress bar,361,"Good point. It used to be possible to disable the progress bar when we still used Qt, but for some reason that feature got lost when we restructured the code to use the text-based progress bar. In PR #220 I've added back this feature. You should now (when the PR is merged) be able to do. ```; >>> result = mcsolve(...., progress_bar=None); ```. to disable the progress bar.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/219#issuecomment-53663345
https://github.com/qutip/qutip/pull/221#issuecomment-53838419:16,Safety,avoid,avoid,16,"Now in order to avoid a +/- 7000 line diff effecting 148 files, a these commits should be squashed with a rebase.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/221#issuecomment-53838419
https://github.com/qutip/qutip/pull/221#issuecomment-53839695:166,Safety,avoid,avoid,166,"How about I just directly upload the files and we close the commit?. On Aug 29, 2014, at 2:20 PM, Robert Johansson notifications@github.com wrote:. > Now in order to avoid a +/- 7000 line diff effecting 148 files, a these commits should be squashed with a rebase.; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/221#issuecomment-53839695
https://github.com/qutip/qutip/pull/221#issuecomment-53840086:252,Testability,test,tests,252,"You do as you wish, but I much prefer when you submit things via pull requests rather than pushing directly to master, because it gives an opportunity to give feedback or at least being aware of what is happening before it lands in master. Also travis tests is a good way of making sure that everything is in a good state before merged. However, this is just my preference, and if you prefer pushing into master you can go ahead and do that of course.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/221#issuecomment-53840086
https://github.com/qutip/qutip/pull/221#issuecomment-53840086:159,Usability,feedback,feedback,159,"You do as you wish, but I much prefer when you submit things via pull requests rather than pushing directly to master, because it gives an opportunity to give feedback or at least being aware of what is happening before it lands in master. Also travis tests is a good way of making sure that everything is in a good state before merged. However, this is just my preference, and if you prefer pushing into master you can go ahead and do that of course.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/221#issuecomment-53840086
https://github.com/qutip/qutip/pull/221#issuecomment-53840133:399,Testability,test,tests,399,"Let me do that until I get the hang of the pulling and pushing. . On Aug 29, 2014, at 2:58 PM, Robert Johansson notifications@github.com wrote:. > You do as you wish, but I much prefer when you submit things via pull requests rather than pushing directly to master, because it gives an opportunity to give feedback or at least being aware of what is happening before it lands in master. Also travis tests is a good way of making sure that everything is in a good state before merged. However, this is just my preference, and if you prefer pushing into master you can go ahead and do that of course.; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/221#issuecomment-53840133
https://github.com/qutip/qutip/pull/221#issuecomment-53840133:306,Usability,feedback,feedback,306,"Let me do that until I get the hang of the pulling and pushing. . On Aug 29, 2014, at 2:58 PM, Robert Johansson notifications@github.com wrote:. > You do as you wish, but I much prefer when you submit things via pull requests rather than pushing directly to master, because it gives an opportunity to give feedback or at least being aware of what is happening before it lands in master. Also travis tests is a good way of making sure that everything is in a good state before merged. However, this is just my preference, and if you prefer pushing into master you can go ahead and do that of course.; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/221#issuecomment-53840133
https://github.com/qutip/qutip/issues/222#issuecomment-53888260:674,Safety,avoid,avoid,674,"I agree that this might seem a bit inconsistent. However, a quantum system with only 1 quantum state is not that meaningful since it does not have any degrees of freedom, and in some places in QuTiP, such as in the multiplication of two Qobj instances (like in your total_eye*total_eye example) we treat subsystems with only one quantum state as a subsystem that has been ""projected out"", and therefore we remove that subsystem. This is the reason for why you would get (total_eye*total_eye).dims as [[8], [8]] instead of [[1,8], [1,8]]. Perhaps tensor should also make this check (and drop subsystems with only 1 quantum state)... but on the other hand it is reasonable to avoid calling tensor on subsystems with only 1 quantum states, since it is not a very meaningful thing to do.. Is there any case when this causes a problem for you?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/222#issuecomment-53888260
https://github.com/qutip/qutip/issues/222#issuecomment-53928646:288,Energy Efficiency,power,powers,288,"I noticed it because I have a code doing spinor lattice physics; the spinor piece is parameterized by the total angular momentum `F`. All of the operators are written as `tensor(spin_part, lattice_part)`. As part of a Brillouin zone unfolding code, I have reason to accumulate increasing powers of an operator in a loop, like. ```; original_state = tensor(basis(2*F+1, 0), basis(N, 0)); op = tensor(qeye(2*F+1), some_lattice_op); while True:; # ...; if occasionally_do_this:; op = base_op * op; transformed_state = op * original_state; ```. This code works fine, except for `F=0`. Since the `original_state` is a 1xN tensor state with `original_state.dims = [[1, N], [1, 1]]`, the `op * original_state` multiplication fails because `op = base_op * op` has deleted the `1` part of of `op`, leaving `op.dims = [[N],[N]]`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/222#issuecomment-53928646
https://github.com/qutip/qutip/issues/222#issuecomment-53928646:85,Modifiability,parameteriz,parameterized,85,"I noticed it because I have a code doing spinor lattice physics; the spinor piece is parameterized by the total angular momentum `F`. All of the operators are written as `tensor(spin_part, lattice_part)`. As part of a Brillouin zone unfolding code, I have reason to accumulate increasing powers of an operator in a loop, like. ```; original_state = tensor(basis(2*F+1, 0), basis(N, 0)); op = tensor(qeye(2*F+1), some_lattice_op); while True:; # ...; if occasionally_do_this:; op = base_op * op; transformed_state = op * original_state; ```. This code works fine, except for `F=0`. Since the `original_state` is a 1xN tensor state with `original_state.dims = [[1, N], [1, 1]]`, the `op * original_state` multiplication fails because `op = base_op * op` has deleted the `1` part of of `op`, leaving `op.dims = [[N],[N]]`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/222#issuecomment-53928646
https://github.com/qutip/qutip/issues/223#issuecomment-54382667:119,Integrability,depend,dependent,119,"I would write it as two separate collapse operators, just like you would do for a Hamiltonian with a constant and time-dependent term i.e. c_ops=[Op1,[Op2,’f(t)’]]. See the docs here,. http://qutip.org/docs/3.0.1/guide/dynamics/dynamics-time.html. for more info. Paul; On Sep 3, 2014, at 12:00 AM, Stefan Krastanov notifications@github.com wrote:. > What is the appropriate way to implement a colapse operator in mesolve that can not be expressed as time_dependent_function \* constant_operator (for instance Op1 + Op2*f(t))?; > ; > Is it only possible through rewriting the equation to be solved?; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/223#issuecomment-54382667
https://github.com/qutip/qutip/issues/223#issuecomment-54382667:213,Usability,guid,guide,213,"I would write it as two separate collapse operators, just like you would do for a Hamiltonian with a constant and time-dependent term i.e. c_ops=[Op1,[Op2,’f(t)’]]. See the docs here,. http://qutip.org/docs/3.0.1/guide/dynamics/dynamics-time.html. for more info. Paul; On Sep 3, 2014, at 12:00 AM, Stefan Krastanov notifications@github.com wrote:. > What is the appropriate way to implement a colapse operator in mesolve that can not be expressed as time_dependent_function \* constant_operator (for instance Op1 + Op2*f(t))?; > ; > Is it only possible through rewriting the equation to be solved?; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/223#issuecomment-54382667
https://github.com/qutip/qutip/issues/223#issuecomment-54383218:43,Modifiability,rewrite,rewrite,43,"Yes, it is not the same thing. You need to rewrite it manually so that each collapse operator contribute on standard lindblad form.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/223#issuecomment-54383218
https://github.com/qutip/qutip/issues/223#issuecomment-54542286:103,Integrability,depend,dependent,103,"Related to this, the qutip User Guide mentions that the (function) ""callback format"" for input of time-dependent operators works for _both_ Hamiltonians and jump operators (bottom of pg. 148). If I put a function into the Ham input, I am fine. But putting the same function into the list of jumps throws:. ```; AttributeError: 'function' object has no attribute 'issuper'; ```. I guess the Note 2 on pg. 149 sort of implies this only works for Hams.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/223#issuecomment-54542286
https://github.com/qutip/qutip/issues/223#issuecomment-54542286:32,Usability,Guid,Guide,32,"Related to this, the qutip User Guide mentions that the (function) ""callback format"" for input of time-dependent operators works for _both_ Hamiltonians and jump operators (bottom of pg. 148). If I put a function into the Ham input, I am fine. But putting the same function into the list of jumps throws:. ```; AttributeError: 'function' object has no attribute 'issuper'; ```. I guess the Note 2 on pg. 149 sort of implies this only works for Hams.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/223#issuecomment-54542286
https://github.com/qutip/qutip/issues/223#issuecomment-223872353:649,Integrability,depend,dependent,649,"@Krastanov I don't quite understand. Are you use the **nested-list method**? If so, can you tell me how you expanding and rewriting/reordering by hand of the c_ops so that you can list them one by one in the nested-list method? If you can rewriting/reordering them, why cannot you do the same thing for `mcsolve`?. @jrjohansson In the first reply you mentioned that. > Yes, it is not the same thing. You need to rewrite it manually so that each collapse operator contribute on standard lindblad form. . May I ask how to rewrite it manually so that each collapse operator contribute on standard lindblad form so that I can implement complicated time-dependent collapse operator in the **nested-list method**?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/223#issuecomment-223872353
https://github.com/qutip/qutip/issues/223#issuecomment-223872353:412,Modifiability,rewrite,rewrite,412,"@Krastanov I don't quite understand. Are you use the **nested-list method**? If so, can you tell me how you expanding and rewriting/reordering by hand of the c_ops so that you can list them one by one in the nested-list method? If you can rewriting/reordering them, why cannot you do the same thing for `mcsolve`?. @jrjohansson In the first reply you mentioned that. > Yes, it is not the same thing. You need to rewrite it manually so that each collapse operator contribute on standard lindblad form. . May I ask how to rewrite it manually so that each collapse operator contribute on standard lindblad form so that I can implement complicated time-dependent collapse operator in the **nested-list method**?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/223#issuecomment-223872353
https://github.com/qutip/qutip/issues/223#issuecomment-223872353:520,Modifiability,rewrite,rewrite,520,"@Krastanov I don't quite understand. Are you use the **nested-list method**? If so, can you tell me how you expanding and rewriting/reordering by hand of the c_ops so that you can list them one by one in the nested-list method? If you can rewriting/reordering them, why cannot you do the same thing for `mcsolve`?. @jrjohansson In the first reply you mentioned that. > Yes, it is not the same thing. You need to rewrite it manually so that each collapse operator contribute on standard lindblad form. . May I ask how to rewrite it manually so that each collapse operator contribute on standard lindblad form so that I can implement complicated time-dependent collapse operator in the **nested-list method**?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/223#issuecomment-223872353
https://github.com/qutip/qutip/issues/223#issuecomment-223873117:1514,Deployability,integrat,integrate,1514,"I doc [http://qutip.org/docs/3.1.0/apidoc/functions.html](url) ; Under the section of master equation solver . > Time-dependent operators; > ; > For time-dependent problems, H and c_ops can be callback functions that takes two arguments, time and args, and returns the Hamiltonian or Liouvillian for the system at that point in time (callback format).; > ; > Alternatively, H and c_ops can be a specified in a nested-list format where each element in the list is a list of length 2, containing an operator (qutip.qobj) at the first element and where the second element is either a string (list string format), a callback function (list callback format) that evaluates to the time-dependent coefficient for the corresponding operator, or a NumPy array (list array format) which specifies the value of the coefficient to the corresponding operator for each value of t in twist. It seems that **in the version 3.1.0**, c_ops can be implemented as a callback functions in `mesolve`. Is this true? . Q.2; As mentioned in [https://groups.google.com/forum/#!topic/qutip/aIxxnbQ56W4](url), the callback function has not been developed for `mesolve` at the time of that post. But . > you have a callback function that is called for each time step and which constructs the system Liouvillian Here you are free to construct the collapse operators or Liouvillian in whichever way you want. From this, I think I can use the callback function to define the c_ops and integrate them in **Liouvillian** for `mesolve`. If I am interpreting it right, this can be done for c_ops with some complicated time dependence. Is that right? . _(However it is mentioned in [https://groups.google.com/forum/#!searchin/qutip/time$20dependent/qutip/S0IskSRy2M0/_2L6BzqAKTEJ](url) that I can use a callback function for `mesolve`?)_. Q.3; I know that I cannot use callback functions to define the c_ops directly in `mcsolve`. Can I use the callback functions to define the c_ops and integrate them in **Liouvillian** for `mcsolve` ?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/223#issuecomment-223873117
https://github.com/qutip/qutip/issues/223#issuecomment-223873117:2012,Deployability,integrat,integrate,2012,"I doc [http://qutip.org/docs/3.1.0/apidoc/functions.html](url) ; Under the section of master equation solver . > Time-dependent operators; > ; > For time-dependent problems, H and c_ops can be callback functions that takes two arguments, time and args, and returns the Hamiltonian or Liouvillian for the system at that point in time (callback format).; > ; > Alternatively, H and c_ops can be a specified in a nested-list format where each element in the list is a list of length 2, containing an operator (qutip.qobj) at the first element and where the second element is either a string (list string format), a callback function (list callback format) that evaluates to the time-dependent coefficient for the corresponding operator, or a NumPy array (list array format) which specifies the value of the coefficient to the corresponding operator for each value of t in twist. It seems that **in the version 3.1.0**, c_ops can be implemented as a callback functions in `mesolve`. Is this true? . Q.2; As mentioned in [https://groups.google.com/forum/#!topic/qutip/aIxxnbQ56W4](url), the callback function has not been developed for `mesolve` at the time of that post. But . > you have a callback function that is called for each time step and which constructs the system Liouvillian Here you are free to construct the collapse operators or Liouvillian in whichever way you want. From this, I think I can use the callback function to define the c_ops and integrate them in **Liouvillian** for `mesolve`. If I am interpreting it right, this can be done for c_ops with some complicated time dependence. Is that right? . _(However it is mentioned in [https://groups.google.com/forum/#!searchin/qutip/time$20dependent/qutip/S0IskSRy2M0/_2L6BzqAKTEJ](url) that I can use a callback function for `mesolve`?)_. Q.3; I know that I cannot use callback functions to define the c_ops directly in `mcsolve`. Can I use the callback functions to define the c_ops and integrate them in **Liouvillian** for `mcsolve` ?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/223#issuecomment-223873117
https://github.com/qutip/qutip/issues/223#issuecomment-223873117:179,Integrability,depend,dependent,179,"Hi all, I have three questions.; Q1. ; As mentioned in the API doc [http://qutip.org/docs/3.1.0/apidoc/functions.html](url) ; Under the section of master equation solver . > Time-dependent operators; > ; > For time-dependent problems, H and c_ops can be callback functions that takes two arguments, time and args, and returns the Hamiltonian or Liouvillian for the system at that point in time (callback format).; > ; > Alternatively, H and c_ops can be a specified in a nested-list format where each element in the list is a list of length 2, containing an operator (qutip.qobj) at the first element and where the second element is either a string (list string format), a callback function (list callback format) that evaluates to the time-dependent coefficient for the corresponding operator, or a NumPy array (list array format) which specifies the value of the coefficient to the corresponding operator for each value of t in twist. It seems that **in the version 3.1.0**, c_ops can be implemented as a callback functions in `mesolve`. Is this true? . Q.2; As mentioned in [https://groups.google.com/forum/#!topic/qutip/aIxxnbQ56W4](url), the callback function has not been developed for `mesolve` at the time of that post. But . > you have a callback function that is called for each time step and which constructs the system Liouvillian Here you are free to construct the collapse operators or Liouvillian in whichever way you want. From this, I think I can use the callback function to define the c_ops and integrate them in **Liouvillian** for `mesolve`. If I am interpreting it right, this can be done for c_ops with some complicated time dependence. Is that right? . _(However it is mentioned in [https://groups.google.com/forum/#!searchin/qutip/time$20dependent/qutip/S0IskSRy2M0/_2L6BzqAKTEJ](url) that I can use a callback function for `mesolve`?)_. Q.3; I know that I cannot use callback functions to define the c_ops directly in `mcsolve`. Can I use the callback functions to define the",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/223#issuecomment-223873117
https://github.com/qutip/qutip/issues/223#issuecomment-223873117:215,Integrability,depend,dependent,215,"Hi all, I have three questions.; Q1. ; As mentioned in the API doc [http://qutip.org/docs/3.1.0/apidoc/functions.html](url) ; Under the section of master equation solver . > Time-dependent operators; > ; > For time-dependent problems, H and c_ops can be callback functions that takes two arguments, time and args, and returns the Hamiltonian or Liouvillian for the system at that point in time (callback format).; > ; > Alternatively, H and c_ops can be a specified in a nested-list format where each element in the list is a list of length 2, containing an operator (qutip.qobj) at the first element and where the second element is either a string (list string format), a callback function (list callback format) that evaluates to the time-dependent coefficient for the corresponding operator, or a NumPy array (list array format) which specifies the value of the coefficient to the corresponding operator for each value of t in twist. It seems that **in the version 3.1.0**, c_ops can be implemented as a callback functions in `mesolve`. Is this true? . Q.2; As mentioned in [https://groups.google.com/forum/#!topic/qutip/aIxxnbQ56W4](url), the callback function has not been developed for `mesolve` at the time of that post. But . > you have a callback function that is called for each time step and which constructs the system Liouvillian Here you are free to construct the collapse operators or Liouvillian in whichever way you want. From this, I think I can use the callback function to define the c_ops and integrate them in **Liouvillian** for `mesolve`. If I am interpreting it right, this can be done for c_ops with some complicated time dependence. Is that right? . _(However it is mentioned in [https://groups.google.com/forum/#!searchin/qutip/time$20dependent/qutip/S0IskSRy2M0/_2L6BzqAKTEJ](url) that I can use a callback function for `mesolve`?)_. Q.3; I know that I cannot use callback functions to define the c_ops directly in `mcsolve`. Can I use the callback functions to define the",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/223#issuecomment-223873117
https://github.com/qutip/qutip/issues/223#issuecomment-223873117:741,Integrability,depend,dependent,741,"Hi all, I have three questions.; Q1. ; As mentioned in the API doc [http://qutip.org/docs/3.1.0/apidoc/functions.html](url) ; Under the section of master equation solver . > Time-dependent operators; > ; > For time-dependent problems, H and c_ops can be callback functions that takes two arguments, time and args, and returns the Hamiltonian or Liouvillian for the system at that point in time (callback format).; > ; > Alternatively, H and c_ops can be a specified in a nested-list format where each element in the list is a list of length 2, containing an operator (qutip.qobj) at the first element and where the second element is either a string (list string format), a callback function (list callback format) that evaluates to the time-dependent coefficient for the corresponding operator, or a NumPy array (list array format) which specifies the value of the coefficient to the corresponding operator for each value of t in twist. It seems that **in the version 3.1.0**, c_ops can be implemented as a callback functions in `mesolve`. Is this true? . Q.2; As mentioned in [https://groups.google.com/forum/#!topic/qutip/aIxxnbQ56W4](url), the callback function has not been developed for `mesolve` at the time of that post. But . > you have a callback function that is called for each time step and which constructs the system Liouvillian Here you are free to construct the collapse operators or Liouvillian in whichever way you want. From this, I think I can use the callback function to define the c_ops and integrate them in **Liouvillian** for `mesolve`. If I am interpreting it right, this can be done for c_ops with some complicated time dependence. Is that right? . _(However it is mentioned in [https://groups.google.com/forum/#!searchin/qutip/time$20dependent/qutip/S0IskSRy2M0/_2L6BzqAKTEJ](url) that I can use a callback function for `mesolve`?)_. Q.3; I know that I cannot use callback functions to define the c_ops directly in `mcsolve`. Can I use the callback functions to define the",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/223#issuecomment-223873117
https://github.com/qutip/qutip/issues/223#issuecomment-223873117:1514,Integrability,integrat,integrate,1514,"I doc [http://qutip.org/docs/3.1.0/apidoc/functions.html](url) ; Under the section of master equation solver . > Time-dependent operators; > ; > For time-dependent problems, H and c_ops can be callback functions that takes two arguments, time and args, and returns the Hamiltonian or Liouvillian for the system at that point in time (callback format).; > ; > Alternatively, H and c_ops can be a specified in a nested-list format where each element in the list is a list of length 2, containing an operator (qutip.qobj) at the first element and where the second element is either a string (list string format), a callback function (list callback format) that evaluates to the time-dependent coefficient for the corresponding operator, or a NumPy array (list array format) which specifies the value of the coefficient to the corresponding operator for each value of t in twist. It seems that **in the version 3.1.0**, c_ops can be implemented as a callback functions in `mesolve`. Is this true? . Q.2; As mentioned in [https://groups.google.com/forum/#!topic/qutip/aIxxnbQ56W4](url), the callback function has not been developed for `mesolve` at the time of that post. But . > you have a callback function that is called for each time step and which constructs the system Liouvillian Here you are free to construct the collapse operators or Liouvillian in whichever way you want. From this, I think I can use the callback function to define the c_ops and integrate them in **Liouvillian** for `mesolve`. If I am interpreting it right, this can be done for c_ops with some complicated time dependence. Is that right? . _(However it is mentioned in [https://groups.google.com/forum/#!searchin/qutip/time$20dependent/qutip/S0IskSRy2M0/_2L6BzqAKTEJ](url) that I can use a callback function for `mesolve`?)_. Q.3; I know that I cannot use callback functions to define the c_ops directly in `mcsolve`. Can I use the callback functions to define the c_ops and integrate them in **Liouvillian** for `mcsolve` ?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/223#issuecomment-223873117
https://github.com/qutip/qutip/issues/223#issuecomment-223873117:1648,Integrability,depend,dependence,1648,"I doc [http://qutip.org/docs/3.1.0/apidoc/functions.html](url) ; Under the section of master equation solver . > Time-dependent operators; > ; > For time-dependent problems, H and c_ops can be callback functions that takes two arguments, time and args, and returns the Hamiltonian or Liouvillian for the system at that point in time (callback format).; > ; > Alternatively, H and c_ops can be a specified in a nested-list format where each element in the list is a list of length 2, containing an operator (qutip.qobj) at the first element and where the second element is either a string (list string format), a callback function (list callback format) that evaluates to the time-dependent coefficient for the corresponding operator, or a NumPy array (list array format) which specifies the value of the coefficient to the corresponding operator for each value of t in twist. It seems that **in the version 3.1.0**, c_ops can be implemented as a callback functions in `mesolve`. Is this true? . Q.2; As mentioned in [https://groups.google.com/forum/#!topic/qutip/aIxxnbQ56W4](url), the callback function has not been developed for `mesolve` at the time of that post. But . > you have a callback function that is called for each time step and which constructs the system Liouvillian Here you are free to construct the collapse operators or Liouvillian in whichever way you want. From this, I think I can use the callback function to define the c_ops and integrate them in **Liouvillian** for `mesolve`. If I am interpreting it right, this can be done for c_ops with some complicated time dependence. Is that right? . _(However it is mentioned in [https://groups.google.com/forum/#!searchin/qutip/time$20dependent/qutip/S0IskSRy2M0/_2L6BzqAKTEJ](url) that I can use a callback function for `mesolve`?)_. Q.3; I know that I cannot use callback functions to define the c_ops directly in `mcsolve`. Can I use the callback functions to define the c_ops and integrate them in **Liouvillian** for `mcsolve` ?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/223#issuecomment-223873117
https://github.com/qutip/qutip/issues/223#issuecomment-223873117:2012,Integrability,integrat,integrate,2012,"I doc [http://qutip.org/docs/3.1.0/apidoc/functions.html](url) ; Under the section of master equation solver . > Time-dependent operators; > ; > For time-dependent problems, H and c_ops can be callback functions that takes two arguments, time and args, and returns the Hamiltonian or Liouvillian for the system at that point in time (callback format).; > ; > Alternatively, H and c_ops can be a specified in a nested-list format where each element in the list is a list of length 2, containing an operator (qutip.qobj) at the first element and where the second element is either a string (list string format), a callback function (list callback format) that evaluates to the time-dependent coefficient for the corresponding operator, or a NumPy array (list array format) which specifies the value of the coefficient to the corresponding operator for each value of t in twist. It seems that **in the version 3.1.0**, c_ops can be implemented as a callback functions in `mesolve`. Is this true? . Q.2; As mentioned in [https://groups.google.com/forum/#!topic/qutip/aIxxnbQ56W4](url), the callback function has not been developed for `mesolve` at the time of that post. But . > you have a callback function that is called for each time step and which constructs the system Liouvillian Here you are free to construct the collapse operators or Liouvillian in whichever way you want. From this, I think I can use the callback function to define the c_ops and integrate them in **Liouvillian** for `mesolve`. If I am interpreting it right, this can be done for c_ops with some complicated time dependence. Is that right? . _(However it is mentioned in [https://groups.google.com/forum/#!searchin/qutip/time$20dependent/qutip/S0IskSRy2M0/_2L6BzqAKTEJ](url) that I can use a callback function for `mesolve`?)_. Q.3; I know that I cannot use callback functions to define the c_ops directly in `mcsolve`. Can I use the callback functions to define the c_ops and integrate them in **Liouvillian** for `mcsolve` ?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/223#issuecomment-223873117
https://github.com/qutip/qutip/issues/226#issuecomment-54697854:81,Deployability,update,updated,81,Thank you for replying so quickly. I changed the definition as you mentioned and updated the example; no change in behavior.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/226#issuecomment-54697854
https://github.com/qutip/qutip/issues/226#issuecomment-54701699:193,Availability,down,downloaded,193,"I'm using Qutip 3.0.1 for Python 3.4, just updated from Python 2.7 to compare. Bug persists, but it seems that your version of Qutip doesn't have it. Sorry about not using the dev version. . I downloaded the latest official version from apt-get, is there a way to get the dev version from there or do I have to compile etc.?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/226#issuecomment-54701699
https://github.com/qutip/qutip/issues/226#issuecomment-54701699:43,Deployability,update,updated,43,"I'm using Qutip 3.0.1 for Python 3.4, just updated from Python 2.7 to compare. Bug persists, but it seems that your version of Qutip doesn't have it. Sorry about not using the dev version. . I downloaded the latest official version from apt-get, is there a way to get the dev version from there or do I have to compile etc.?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/226#issuecomment-54701699
https://github.com/qutip/qutip/issues/228#issuecomment-55124130:111,Deployability,release,releases,111,"Thanks for reporting this problem! It seems to be related to the recent numpy 1.9 (works fine with older numpy releases). We should either add `dtype=object` in the call to np.array or use list, as you suggests.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/228#issuecomment-55124130
https://github.com/qutip/qutip/issues/228#issuecomment-55131074:130,Testability,test,testing,130,I've created a PR (#229) for fixing these issues. This problem seems to affect many parts of the qutip code so through review and testing seems necessary.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/228#issuecomment-55131074
https://github.com/qutip/qutip/issues/228#issuecomment-55211686:309,Deployability,release,releases,309,"I vote for setting the dtype. This is probably safer since there are some; parts of the code that expect arrays.; On Sep 10, 2014 11:36 PM, ""Robert Johansson"" notifications@github.com; wrote:. > Thanks for reporting this problem! It seems to be related to the recent; > numpy 1.9 (works fine with older numpy releases). We should either add; > dtype=object in the call to np.array or use list, as you suggests.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/issues/228#issuecomment-55124130.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/228#issuecomment-55211686
https://github.com/qutip/qutip/issues/228#issuecomment-55211686:47,Safety,safe,safer,47,"I vote for setting the dtype. This is probably safer since there are some; parts of the code that expect arrays.; On Sep 10, 2014 11:36 PM, ""Robert Johansson"" notifications@github.com; wrote:. > Thanks for reporting this problem! It seems to be related to the recent; > numpy 1.9 (works fine with older numpy releases). We should either add; > dtype=object in the call to np.array or use list, as you suggests.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/issues/228#issuecomment-55124130.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/228#issuecomment-55211686
https://github.com/qutip/qutip/issues/228#issuecomment-56619059:22,Availability,down,down,22,Good job hunting this down in NumPy!,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/228#issuecomment-56619059
https://github.com/qutip/qutip/pull/229#issuecomment-55351005:13,Testability,test,tests,13,Now all unit tests pass using numpy 1.9,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/229#issuecomment-55351005
https://github.com/qutip/qutip/pull/233#issuecomment-55978208:126,Security,expose,exposed,126,"@nonhermitian please have a look at this when you have time. it is a quite major restructuring of module imports and globally exposed symbols. With this PR qutip no longer put np, numpy, scipy, plt, cython modules, and numerous symbols from those packages in qutips namespace. So doing. ```; import qutip; dir(qutip); help(qutip); ```. should now only give qutip related information.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/233#issuecomment-55978208
https://github.com/qutip/qutip/pull/233#issuecomment-56173332:323,Safety,avoid,avoid,323,"Hmm, I think that should still work. I think numpy is imported locally in `__init__.py` and if it is deleted before the init file ends, it will not overwrite existing symbols form where `from qutip import *` was called.. If this is not how it works we should do something like `import numpy as _numpy` .... `del _numpy` to avoid breaking code with the import pattern in your example.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/233#issuecomment-56173332
https://github.com/qutip/qutip/pull/233#issuecomment-56176673:767,Availability,avail,available,767,"If we don't do `del numpy` in qutip's `__init__.py`, then doing this works:. ```; from import qutip *; numpy.func(...); ```. because numpy was imported but not deleted before the end of qutips init file, and it will be exported form qutip as a global symbol in qutips namespace (which is the callers global name space if called as above). However, this is not a desired behaviour of a module to do like this: importing qutip shouldn't impose that numpy is imported in any particular way (even though qutip uses numpy internally). For example, if a user prefer to import numpy as `np`, then it is pointless that qutip exposes numpy as `numpy` as well. It because even weirder when an import pattern like `import qutip as q` is used, because as it is now then numpy is available through `q.numpy`, which is unnecessary and causes problem with for example nose unit testing of qutip module (because it finds numpy and run all numpy tests as well) and also with module autocompletion in for example spyder and ipython. For these and many other similar reasons, it is neatest if qutip only exports its own symbols, and if a users requires any symbols of other packages they should be explicitly imported from those packages. I hope this explains why I want to eliminate qutips currently excessive namespace populating.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/233#issuecomment-56176673
https://github.com/qutip/qutip/pull/233#issuecomment-56176673:617,Security,expose,exposes,617,"If we don't do `del numpy` in qutip's `__init__.py`, then doing this works:. ```; from import qutip *; numpy.func(...); ```. because numpy was imported but not deleted before the end of qutips init file, and it will be exported form qutip as a global symbol in qutips namespace (which is the callers global name space if called as above). However, this is not a desired behaviour of a module to do like this: importing qutip shouldn't impose that numpy is imported in any particular way (even though qutip uses numpy internally). For example, if a user prefer to import numpy as `np`, then it is pointless that qutip exposes numpy as `numpy` as well. It because even weirder when an import pattern like `import qutip as q` is used, because as it is now then numpy is available through `q.numpy`, which is unnecessary and causes problem with for example nose unit testing of qutip module (because it finds numpy and run all numpy tests as well) and also with module autocompletion in for example spyder and ipython. For these and many other similar reasons, it is neatest if qutip only exports its own symbols, and if a users requires any symbols of other packages they should be explicitly imported from those packages. I hope this explains why I want to eliminate qutips currently excessive namespace populating.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/233#issuecomment-56176673
https://github.com/qutip/qutip/pull/233#issuecomment-56176673:863,Testability,test,testing,863,"If we don't do `del numpy` in qutip's `__init__.py`, then doing this works:. ```; from import qutip *; numpy.func(...); ```. because numpy was imported but not deleted before the end of qutips init file, and it will be exported form qutip as a global symbol in qutips namespace (which is the callers global name space if called as above). However, this is not a desired behaviour of a module to do like this: importing qutip shouldn't impose that numpy is imported in any particular way (even though qutip uses numpy internally). For example, if a user prefer to import numpy as `np`, then it is pointless that qutip exposes numpy as `numpy` as well. It because even weirder when an import pattern like `import qutip as q` is used, because as it is now then numpy is available through `q.numpy`, which is unnecessary and causes problem with for example nose unit testing of qutip module (because it finds numpy and run all numpy tests as well) and also with module autocompletion in for example spyder and ipython. For these and many other similar reasons, it is neatest if qutip only exports its own symbols, and if a users requires any symbols of other packages they should be explicitly imported from those packages. I hope this explains why I want to eliminate qutips currently excessive namespace populating.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/233#issuecomment-56176673
https://github.com/qutip/qutip/pull/233#issuecomment-56176673:929,Testability,test,tests,929,"If we don't do `del numpy` in qutip's `__init__.py`, then doing this works:. ```; from import qutip *; numpy.func(...); ```. because numpy was imported but not deleted before the end of qutips init file, and it will be exported form qutip as a global symbol in qutips namespace (which is the callers global name space if called as above). However, this is not a desired behaviour of a module to do like this: importing qutip shouldn't impose that numpy is imported in any particular way (even though qutip uses numpy internally). For example, if a user prefer to import numpy as `np`, then it is pointless that qutip exposes numpy as `numpy` as well. It because even weirder when an import pattern like `import qutip as q` is used, because as it is now then numpy is available through `q.numpy`, which is unnecessary and causes problem with for example nose unit testing of qutip module (because it finds numpy and run all numpy tests as well) and also with module autocompletion in for example spyder and ipython. For these and many other similar reasons, it is neatest if qutip only exports its own symbols, and if a users requires any symbols of other packages they should be explicitly imported from those packages. I hope this explains why I want to eliminate qutips currently excessive namespace populating.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/233#issuecomment-56176673
https://github.com/qutip/qutip/issues/236#issuecomment-56970079:11,Deployability,release,release,11,"The latest release is 3.0.1 and current development version is 3.1.0 like the setup.py file suggest. Not sure why about reports 3.0.0, that's strange. Have you run setup.py install?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/236#issuecomment-56970079
https://github.com/qutip/qutip/issues/236#issuecomment-56970079:173,Deployability,install,install,173,"The latest release is 3.0.1 and current development version is 3.1.0 like the setup.py file suggest. Not sure why about reports 3.0.0, that's strange. Have you run setup.py install?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/236#issuecomment-56970079
https://github.com/qutip/qutip/issues/236#issuecomment-56970513:40,Deployability,install,install,40,"Oh, damn, you're right, I forgot to run install. My bad :)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/236#issuecomment-56970513
https://github.com/qutip/qutip/issues/238#issuecomment-57060478:1573,Usability,learn,learning,1573,"I couldn't see the math there (the images are broken for some reason), but from the code, I think I see the problem. `super_tensor(L, L)` is indeed what you want, but the `rhovec` Qobj still doesn't act right under ordinary tensors for the same reason. The version of `super_tensor` that I contributed doesn't do much of anything useful for states (this would be a nice improvement, to be sure), but in the meantime you can probably work around by using `operator_to_vector(tensor(vector_to_operator(rhovec), vector_to_operator(rhovec)))`:. ``` python; In [1]: from qutip import *. In [2]: rho = 0.5*qeye(2). In [3]: rhovec = operator_to_vector(rho). In [4]: L = spost(sigmax())*spre(sigmax()). In [5]: L2 = super_tensor(L,L). In [6]: L2*tensor(rhovec,rhovec); ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-6-27459f98c087> in <module>(); ----> 1 L2*tensor(rhovec,rhovec). /usr/local/lib/python2.7/dist-packages/qutip/qobj.pyc in __mul__(self, other); 430 ; 431 else:; --> 432 raise TypeError(""Incompatible Qobj shapes""); 433 ; 434 elif isinstance(other, (list, np.ndarray)):. TypeError: Incompatible Qobj shapes. In [7]: L2 * operator_to_vector(tensor(vector_to_operator(rhovec), vector_to_operator(rhovec))); Out[7]: ; Quantum object: dims = [[[2, 2], [2, 2]], [1]], shape = [16, 1], type = operator-ket; Qobj data =; [[ 0.25]; [ 0. ]; [ 0. ]; [ 0. ]; [ 0. ]; [ 0.25]; [ 0. ]; [ 0. ]; [ 0. ]; [ 0. ]; [ 0.25]; [ 0. ]; [ 0. ]; [ 0. ]; [ 0. ]; [ 0.25]]; ```. If you're interested in learning more about tensor products on superoperators, the reshuffling operator used in `super_tensor` was taking from [Chris Wood's paper](http://arxiv.org/abs/1111.6950) on the topic.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/238#issuecomment-57060478
https://github.com/qutip/qutip/issues/239#issuecomment-57045399:92,Availability,error,error,92,Thanks for the bug report and your interest! Can you give an example which demonstrates the error? Then it would be easier to identify what might be wrong and how it should be fixed.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/239#issuecomment-57045399
https://github.com/qutip/qutip/pull/241#issuecomment-57070065:698,Testability,log,logical,698,"I'm not sure about that, for two reasons. First, `super_tensor` doesn't implement a tensor product but a useful combination of reshuffling and the tensor product that, so calling it `tensor` alone may result in confusion when trying to match to the mathematics of papers and lecture notes which use the tensor product more literally. Second, it's a pretty significant break with previous behavior, such that if someone has implemented reshuffling themselves, that would then stop working if `tensor()` dispatches based on `is_super`. As an alternative, maybe some new function with a name like `composite()` that calls `tensor()` or `super_tensor()` respectively? That way, you're referring to the logical act of compositing two systems together, rather than to the mathematics behind it, and could leave code invariant when changing from unitaries to CPTP maps.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/241#issuecomment-57070065
https://github.com/qutip/qutip/pull/241#issuecomment-57070290:82,Testability,test,tests,82,"Changed the notation for `type=` comparisons to `issuper`, as suggested. All unit tests pass locally, so I suspect that the Travis build should work.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/241#issuecomment-57070290
https://github.com/qutip/qutip/pull/241#issuecomment-57076106:268,Testability,test,tests,268,"I think that adding support for partial isometries in that way would be quite helpful, but I think it's also worthwhile to get the basic dispatch functionality described here working first. I'll take a stab at that soon and amend this PR with it, make some basic unit tests to ensure that it dispatches correctly.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/241#issuecomment-57076106
https://github.com/qutip/qutip/pull/241#issuecomment-57089321:62,Testability,test,tests,62,"Added the function as discussed here, along with two new unit tests to ensure it agrees with either `tensor()` or `super_tensor()`, as appropriate for the input arguments.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/241#issuecomment-57089321
https://github.com/qutip/qutip/pull/241#issuecomment-57339330:41,Usability,clear,clear,41,"It's not a typo, but I wasn't completely clear about that; the composition of an ordinary and a superoperator is not uniquely defined, so in the mixed case only, it assumes unitarity in order to promote the ordinary operator.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/241#issuecomment-57339330
https://github.com/qutip/qutip/pull/241#issuecomment-58035991:507,Energy Efficiency,power,powerful,507,"Well, unitarity just doesn't come into it, and conjugating with non-unitary operators is a very natural thing to do for most qutip users. So I have thought a quite a bit about this, and this is ultimately @jrjohansson and @nonhermitian's decision, but I don't think assuming ""conjugation"" is a good idea, for the following reasons:. 1) It is inconsistent with the behavior of `tensor()`, which interprets `tensor(O,psi)`, where `O` is an operator and `psi` a ket, in dirac notation. This is actually a very powerful functionality, and follows the general idea that coding in qutip should be as similar to writing in dirac notation as possible (within reason). As an example, here is how you can do a partial trace:. ```; In [14]: rho = rand_dm(4,dims=[[2,2],[2,2]]). In [15]: out = Qobj(). In [16]: for i in range(2):; out += tensor(qeye(2),basis(2,i).dag())*rho*tensor(qeye(2),basis(2,i)); ....:. In [17]: out; Out[17]:; Quantum object: dims = [[2], [2]], shape = [2, 2], type = oper, isherm = True; Qobj data =; [[ 0.39666875+0.j 0.13801792+0.01223399j]; [ 0.13801792-0.01223399j 0.60333125+0.j ]]. In [18]: rho.ptrace(0); Out[18]:; Quantum object: dims = [[2], [2]], shape = [2, 2], type = oper, isherm = True; Qobj data =; [[ 0.39666875+0.j 0.13801792+0.01223399j]; [ 0.13801792-0.01223399j 0.60333125+0.j ]]; ```. Of course you can do far more general things than that.. you can pretty much do anything you can write in dirac notation. Similar behavior on the level of super-operators and operator-vectors, as suggested by @jrjohansson, earlier in this thread, would be similarly very powerful. For example, in the language of tensor networks, it would allow you to do arbitrary wire-bending operations using the maximally entangled state, as in the [paper](http://arxiv.org/abs/1111.6950) by Chris Wood et al., that @cgranade mentioned in relation to #238. As of now there is no convenient (i.e., ""index free"") way to do this (correct me if I am wrong), except explicitly performing the correspo",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/241#issuecomment-58035991
https://github.com/qutip/qutip/pull/241#issuecomment-58035991:1590,Energy Efficiency,power,powerful,1590,"ctionality, and follows the general idea that coding in qutip should be as similar to writing in dirac notation as possible (within reason). As an example, here is how you can do a partial trace:. ```; In [14]: rho = rand_dm(4,dims=[[2,2],[2,2]]). In [15]: out = Qobj(). In [16]: for i in range(2):; out += tensor(qeye(2),basis(2,i).dag())*rho*tensor(qeye(2),basis(2,i)); ....:. In [17]: out; Out[17]:; Quantum object: dims = [[2], [2]], shape = [2, 2], type = oper, isherm = True; Qobj data =; [[ 0.39666875+0.j 0.13801792+0.01223399j]; [ 0.13801792-0.01223399j 0.60333125+0.j ]]. In [18]: rho.ptrace(0); Out[18]:; Quantum object: dims = [[2], [2]], shape = [2, 2], type = oper, isherm = True; Qobj data =; [[ 0.39666875+0.j 0.13801792+0.01223399j]; [ 0.13801792-0.01223399j 0.60333125+0.j ]]; ```. Of course you can do far more general things than that.. you can pretty much do anything you can write in dirac notation. Similar behavior on the level of super-operators and operator-vectors, as suggested by @jrjohansson, earlier in this thread, would be similarly very powerful. For example, in the language of tensor networks, it would allow you to do arbitrary wire-bending operations using the maximally entangled state, as in the [paper](http://arxiv.org/abs/1111.6950) by Chris Wood et al., that @cgranade mentioned in relation to #238. As of now there is no convenient (i.e., ""index free"") way to do this (correct me if I am wrong), except explicitly performing the corresponding partial transpose directly on the underlying matrix data. 2) In the absence of this functionality it is a bad idea to assume something else. Assuming conjugation is unexpected behavior, and besides it is something the user can easily do him/herself by using `to_super()`. It is way better to ""force"" the user to be explicit about things by throwing an `Exception`, than assuming something that might be unexpected. It enforces good coding style, giving more readable code, and avoids code that will break if the f",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/241#issuecomment-58035991
https://github.com/qutip/qutip/pull/241#issuecomment-58035991:1978,Performance,perform,performing,1978,"a that coding in qutip should be as similar to writing in dirac notation as possible (within reason). As an example, here is how you can do a partial trace:. ```; In [14]: rho = rand_dm(4,dims=[[2,2],[2,2]]). In [15]: out = Qobj(). In [16]: for i in range(2):; out += tensor(qeye(2),basis(2,i).dag())*rho*tensor(qeye(2),basis(2,i)); ....:. In [17]: out; Out[17]:; Quantum object: dims = [[2], [2]], shape = [2, 2], type = oper, isherm = True; Qobj data =; [[ 0.39666875+0.j 0.13801792+0.01223399j]; [ 0.13801792-0.01223399j 0.60333125+0.j ]]. In [18]: rho.ptrace(0); Out[18]:; Quantum object: dims = [[2], [2]], shape = [2, 2], type = oper, isherm = True; Qobj data =; [[ 0.39666875+0.j 0.13801792+0.01223399j]; [ 0.13801792-0.01223399j 0.60333125+0.j ]]; ```. Of course you can do far more general things than that.. you can pretty much do anything you can write in dirac notation. Similar behavior on the level of super-operators and operator-vectors, as suggested by @jrjohansson, earlier in this thread, would be similarly very powerful. For example, in the language of tensor networks, it would allow you to do arbitrary wire-bending operations using the maximally entangled state, as in the [paper](http://arxiv.org/abs/1111.6950) by Chris Wood et al., that @cgranade mentioned in relation to #238. As of now there is no convenient (i.e., ""index free"") way to do this (correct me if I am wrong), except explicitly performing the corresponding partial transpose directly on the underlying matrix data. 2) In the absence of this functionality it is a bad idea to assume something else. Assuming conjugation is unexpected behavior, and besides it is something the user can easily do him/herself by using `to_super()`. It is way better to ""force"" the user to be explicit about things by throwing an `Exception`, than assuming something that might be unexpected. It enforces good coding style, giving more readable code, and avoids code that will break if the functionality is changed in the future.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/241#issuecomment-58035991
https://github.com/qutip/qutip/pull/241#issuecomment-58035991:2484,Safety,avoid,avoids,2484,"a that coding in qutip should be as similar to writing in dirac notation as possible (within reason). As an example, here is how you can do a partial trace:. ```; In [14]: rho = rand_dm(4,dims=[[2,2],[2,2]]). In [15]: out = Qobj(). In [16]: for i in range(2):; out += tensor(qeye(2),basis(2,i).dag())*rho*tensor(qeye(2),basis(2,i)); ....:. In [17]: out; Out[17]:; Quantum object: dims = [[2], [2]], shape = [2, 2], type = oper, isherm = True; Qobj data =; [[ 0.39666875+0.j 0.13801792+0.01223399j]; [ 0.13801792-0.01223399j 0.60333125+0.j ]]. In [18]: rho.ptrace(0); Out[18]:; Quantum object: dims = [[2], [2]], shape = [2, 2], type = oper, isherm = True; Qobj data =; [[ 0.39666875+0.j 0.13801792+0.01223399j]; [ 0.13801792-0.01223399j 0.60333125+0.j ]]; ```. Of course you can do far more general things than that.. you can pretty much do anything you can write in dirac notation. Similar behavior on the level of super-operators and operator-vectors, as suggested by @jrjohansson, earlier in this thread, would be similarly very powerful. For example, in the language of tensor networks, it would allow you to do arbitrary wire-bending operations using the maximally entangled state, as in the [paper](http://arxiv.org/abs/1111.6950) by Chris Wood et al., that @cgranade mentioned in relation to #238. As of now there is no convenient (i.e., ""index free"") way to do this (correct me if I am wrong), except explicitly performing the corresponding partial transpose directly on the underlying matrix data. 2) In the absence of this functionality it is a bad idea to assume something else. Assuming conjugation is unexpected behavior, and besides it is something the user can easily do him/herself by using `to_super()`. It is way better to ""force"" the user to be explicit about things by throwing an `Exception`, than assuming something that might be unexpected. It enforces good coding style, giving more readable code, and avoids code that will break if the functionality is changed in the future.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/241#issuecomment-58035991
https://github.com/qutip/qutip/pull/241#issuecomment-58038276:36,Availability,down,down,36,"My thinking on this basically comes down to two points. First, the behavior of `composite` is explicitly not the same as that of `tensor()` or `super_tensor()`, as it's a common usecase to compose operators defined on different subsystems without reference to representation. While I agree that it would be good to have more generic wire-bending support in QuTiP, I think that's likely out of scope for this particular feature, as it would require some significant rethinking of how `dims` is currently implemented. Second, I think that it's entirely defensible that the current behavior of `composite` promotes operators by `spre() * spost()`, as this is consistent with the view that superoperators are matrix representations of group action by conjugation. That is, `composite` returns the composite of the same group action applied to each of several subsystems, though the action can be more general for `type='super'` arguments. This could perhaps be made more clear by renaming `composite` to `composite_oper` or similar, but I think that the _behavior_ of the current function is correct and consistent, if admittedly, poorly described.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/241#issuecomment-58038276
https://github.com/qutip/qutip/pull/241#issuecomment-58038276:967,Usability,clear,clear,967,"My thinking on this basically comes down to two points. First, the behavior of `composite` is explicitly not the same as that of `tensor()` or `super_tensor()`, as it's a common usecase to compose operators defined on different subsystems without reference to representation. While I agree that it would be good to have more generic wire-bending support in QuTiP, I think that's likely out of scope for this particular feature, as it would require some significant rethinking of how `dims` is currently implemented. Second, I think that it's entirely defensible that the current behavior of `composite` promotes operators by `spre() * spost()`, as this is consistent with the view that superoperators are matrix representations of group action by conjugation. That is, `composite` returns the composite of the same group action applied to each of several subsystems, though the action can be more general for `type='super'` arguments. This could perhaps be made more clear by renaming `composite` to `composite_oper` or similar, but I think that the _behavior_ of the current function is correct and consistent, if admittedly, poorly described.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/241#issuecomment-58038276
https://github.com/qutip/qutip/pull/241#issuecomment-58068961:163,Usability,guid,guide,163,"This is a style question. It is generally considered better python style to write code as explicit as possible, as explained for example [here](http://docs.python-guide.org/en/latest/writing/style/) in The Hitchhiker's guide to python. Now,. ```; mycomposition = composite(super,spre(O)*spost(O.dag()); ```. is much more explicit (and hence better style in my opinion), than. ```; mycomposition = composite(super,O); ```. If I'm not very familiar with qutip and I am reading the latter as part of some code, I could equally well think it means a number of different things, whereas the first use-case leaves very little room for confusion. Maybe I'm being a bit pedantic now, for this particular example, but I think it's a good idea to have discussions on style in general, and long term the code will benefit from being explicit, and also letting the user handle exceptions as much as possible. Anyway, we can agree or disagree on style, but you raise an interesting point regarding `dims`. I have actually always found `dims` a bit ""user unfriendly"". Perhaps it would be fruitful to have a discussion about the future of the `Qobj` class at some point. Not saying this is something that should be changed soon, or even at all, and also not suggesting to have the discussion in this thread.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/241#issuecomment-58068961
https://github.com/qutip/qutip/pull/241#issuecomment-58068961:219,Usability,guid,guide,219,"This is a style question. It is generally considered better python style to write code as explicit as possible, as explained for example [here](http://docs.python-guide.org/en/latest/writing/style/) in The Hitchhiker's guide to python. Now,. ```; mycomposition = composite(super,spre(O)*spost(O.dag()); ```. is much more explicit (and hence better style in my opinion), than. ```; mycomposition = composite(super,O); ```. If I'm not very familiar with qutip and I am reading the latter as part of some code, I could equally well think it means a number of different things, whereas the first use-case leaves very little room for confusion. Maybe I'm being a bit pedantic now, for this particular example, but I think it's a good idea to have discussions on style in general, and long term the code will benefit from being explicit, and also letting the user handle exceptions as much as possible. Anyway, we can agree or disagree on style, but you raise an interesting point regarding `dims`. I have actually always found `dims` a bit ""user unfriendly"". Perhaps it would be fruitful to have a discussion about the future of the `Qobj` class at some point. Not saying this is something that should be changed soon, or even at all, and also not suggesting to have the discussion in this thread.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/241#issuecomment-58068961
https://github.com/qutip/qutip/pull/241#issuecomment-58190164:1340,Modifiability,flexible,flexible,1340,"@arnelg and @cgranade, you are both raising good points here. I'm not exactly sure what the best solution for this particular issue is, but do tend to agree with @arnelg that we do not want functions that perform unexpected actions, if possible, and that explicit is better than implicit. However, ultimately, it has to be the docstrings that should resolve any ambiguities, because not all functions can be intuitive to everyone, since we all have different backgrounds and expectations. So if the current behaviour is clearly described in the docstring, it should also be an acceptable solution I think. But one important thing that @arnelg also alluded to is that if at some point we expect that we might want to use `composite(S, O)` to mean something different than `composite(S, to_super(O))`, then we should better not implement the operator-to-superoperator promotion implicitly in `composite` now. Since the `composite` function is brand new it might be a good idea at this point to avoid doing these implicit assumptions on how it will be used until various use-cases has been explored in more details. I absolutely agree that it is great to have discussions about these kind of design issues, and it's great that you both have taken an interest in this particular issue. I also agree that Qobj.dims is a bit obscure and not that flexible, and maybe insufficient for complex cases with mixes of operators, kets, superoperators along different subsystems. This would not be an easy thing to change, but having a discussion about the short-comings and possible solutions would be great. I've created a new page on the wiki for listing various issues and design short-comings in qutip:. https://github.com/qutip/qutip/wiki/Future-Design-Changes. Feel free to add to this page and edit what's already on it (and of course, propose solutions!)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/241#issuecomment-58190164
https://github.com/qutip/qutip/pull/241#issuecomment-58190164:205,Performance,perform,perform,205,"@arnelg and @cgranade, you are both raising good points here. I'm not exactly sure what the best solution for this particular issue is, but do tend to agree with @arnelg that we do not want functions that perform unexpected actions, if possible, and that explicit is better than implicit. However, ultimately, it has to be the docstrings that should resolve any ambiguities, because not all functions can be intuitive to everyone, since we all have different backgrounds and expectations. So if the current behaviour is clearly described in the docstring, it should also be an acceptable solution I think. But one important thing that @arnelg also alluded to is that if at some point we expect that we might want to use `composite(S, O)` to mean something different than `composite(S, to_super(O))`, then we should better not implement the operator-to-superoperator promotion implicitly in `composite` now. Since the `composite` function is brand new it might be a good idea at this point to avoid doing these implicit assumptions on how it will be used until various use-cases has been explored in more details. I absolutely agree that it is great to have discussions about these kind of design issues, and it's great that you both have taken an interest in this particular issue. I also agree that Qobj.dims is a bit obscure and not that flexible, and maybe insufficient for complex cases with mixes of operators, kets, superoperators along different subsystems. This would not be an easy thing to change, but having a discussion about the short-comings and possible solutions would be great. I've created a new page on the wiki for listing various issues and design short-comings in qutip:. https://github.com/qutip/qutip/wiki/Future-Design-Changes. Feel free to add to this page and edit what's already on it (and of course, propose solutions!)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/241#issuecomment-58190164
https://github.com/qutip/qutip/pull/241#issuecomment-58190164:992,Safety,avoid,avoid,992,"@arnelg and @cgranade, you are both raising good points here. I'm not exactly sure what the best solution for this particular issue is, but do tend to agree with @arnelg that we do not want functions that perform unexpected actions, if possible, and that explicit is better than implicit. However, ultimately, it has to be the docstrings that should resolve any ambiguities, because not all functions can be intuitive to everyone, since we all have different backgrounds and expectations. So if the current behaviour is clearly described in the docstring, it should also be an acceptable solution I think. But one important thing that @arnelg also alluded to is that if at some point we expect that we might want to use `composite(S, O)` to mean something different than `composite(S, to_super(O))`, then we should better not implement the operator-to-superoperator promotion implicitly in `composite` now. Since the `composite` function is brand new it might be a good idea at this point to avoid doing these implicit assumptions on how it will be used until various use-cases has been explored in more details. I absolutely agree that it is great to have discussions about these kind of design issues, and it's great that you both have taken an interest in this particular issue. I also agree that Qobj.dims is a bit obscure and not that flexible, and maybe insufficient for complex cases with mixes of operators, kets, superoperators along different subsystems. This would not be an easy thing to change, but having a discussion about the short-comings and possible solutions would be great. I've created a new page on the wiki for listing various issues and design short-comings in qutip:. https://github.com/qutip/qutip/wiki/Future-Design-Changes. Feel free to add to this page and edit what's already on it (and of course, propose solutions!)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/241#issuecomment-58190164
https://github.com/qutip/qutip/pull/241#issuecomment-58190164:408,Usability,intuit,intuitive,408,"@arnelg and @cgranade, you are both raising good points here. I'm not exactly sure what the best solution for this particular issue is, but do tend to agree with @arnelg that we do not want functions that perform unexpected actions, if possible, and that explicit is better than implicit. However, ultimately, it has to be the docstrings that should resolve any ambiguities, because not all functions can be intuitive to everyone, since we all have different backgrounds and expectations. So if the current behaviour is clearly described in the docstring, it should also be an acceptable solution I think. But one important thing that @arnelg also alluded to is that if at some point we expect that we might want to use `composite(S, O)` to mean something different than `composite(S, to_super(O))`, then we should better not implement the operator-to-superoperator promotion implicitly in `composite` now. Since the `composite` function is brand new it might be a good idea at this point to avoid doing these implicit assumptions on how it will be used until various use-cases has been explored in more details. I absolutely agree that it is great to have discussions about these kind of design issues, and it's great that you both have taken an interest in this particular issue. I also agree that Qobj.dims is a bit obscure and not that flexible, and maybe insufficient for complex cases with mixes of operators, kets, superoperators along different subsystems. This would not be an easy thing to change, but having a discussion about the short-comings and possible solutions would be great. I've created a new page on the wiki for listing various issues and design short-comings in qutip:. https://github.com/qutip/qutip/wiki/Future-Design-Changes. Feel free to add to this page and edit what's already on it (and of course, propose solutions!)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/241#issuecomment-58190164
https://github.com/qutip/qutip/pull/241#issuecomment-58190164:520,Usability,clear,clearly,520,"@arnelg and @cgranade, you are both raising good points here. I'm not exactly sure what the best solution for this particular issue is, but do tend to agree with @arnelg that we do not want functions that perform unexpected actions, if possible, and that explicit is better than implicit. However, ultimately, it has to be the docstrings that should resolve any ambiguities, because not all functions can be intuitive to everyone, since we all have different backgrounds and expectations. So if the current behaviour is clearly described in the docstring, it should also be an acceptable solution I think. But one important thing that @arnelg also alluded to is that if at some point we expect that we might want to use `composite(S, O)` to mean something different than `composite(S, to_super(O))`, then we should better not implement the operator-to-superoperator promotion implicitly in `composite` now. Since the `composite` function is brand new it might be a good idea at this point to avoid doing these implicit assumptions on how it will be used until various use-cases has been explored in more details. I absolutely agree that it is great to have discussions about these kind of design issues, and it's great that you both have taken an interest in this particular issue. I also agree that Qobj.dims is a bit obscure and not that flexible, and maybe insufficient for complex cases with mixes of operators, kets, superoperators along different subsystems. This would not be an easy thing to change, but having a discussion about the short-comings and possible solutions would be great. I've created a new page on the wiki for listing various issues and design short-comings in qutip:. https://github.com/qutip/qutip/wiki/Future-Design-Changes. Feel free to add to this page and edit what's already on it (and of course, propose solutions!)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/241#issuecomment-58190164
https://github.com/qutip/qutip/pull/241#issuecomment-61099597:708,Usability,intuit,intuitive,708,"Sorry for my delayed response, been a couple of quite busy weeks on my end. As for the design issues with `composite`, I think that at least some of what @arnelg has pointed out could be addressed with a better name that emphasizes that the function produces a propagator of some kind. `composite` was merely my first stab at a name, so there's definitely room for improvement. On the topic of `dims`, I entirely agree that more generic tensor network would be a wonderful thing, though I also would not want to require that one be well-versed in all things Wood diagrams to use QuTiP. That is, in making design changes, I think it's important both to keep and improve flexibility, and to make the design as intuitive as possible. One suggestion, and I'll add this to the FDC wiki page you liked to, would be to use classes other than `list` to keep metadata on what kind of indices are being considered, even if only to provide richer printouts. This may or may not make much sense, so I apologize if it's the latter case.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/241#issuecomment-61099597
https://github.com/qutip/qutip/pull/246#issuecomment-61043885:74,Deployability,integrat,integration,74,"Hi Alex. Nice to see your PR!. It is looking very good indeed, but deeper integration with qutip's frameworks for representing of operators and its evolution solvers would be nice. I'll test it for a few days and code review with inline comments in the code. You can make changes and push commits to your repository, and they will be automatically added to PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/246#issuecomment-61043885
https://github.com/qutip/qutip/pull/246#issuecomment-61043885:74,Integrability,integrat,integration,74,"Hi Alex. Nice to see your PR!. It is looking very good indeed, but deeper integration with qutip's frameworks for representing of operators and its evolution solvers would be nice. I'll test it for a few days and code review with inline comments in the code. You can make changes and push commits to your repository, and they will be automatically added to PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/246#issuecomment-61043885
https://github.com/qutip/qutip/pull/246#issuecomment-61043885:186,Testability,test,test,186,"Hi Alex. Nice to see your PR!. It is looking very good indeed, but deeper integration with qutip's frameworks for representing of operators and its evolution solvers would be nice. I'll test it for a few days and code review with inline comments in the code. You can make changes and push commits to your repository, and they will be automatically added to PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/246#issuecomment-61043885
https://github.com/qutip/qutip/pull/246#issuecomment-63363264:37,Testability,test,testing,37,I have added 4 IPython notebooks for testing too.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/246#issuecomment-63363264
https://github.com/qutip/qutip/pull/246#issuecomment-63485058:5,Availability,error,error,5,"This error is not related to your work. It happens sometimes because some of the solvers in qutip are stochastic (in this case mcsolve) and occasionally the averaged results have errors that exceed the thresholds we set in the tests. We could fix it by increasing the number of trajectories in the simulation, but this would add time to the test suite which already takes a while to run.. So its a trade off between making the tests run as fast as possible and not getting too many false errors. I've restarted the test on travis, probably it will not fail again this time.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/246#issuecomment-63485058
https://github.com/qutip/qutip/pull/246#issuecomment-63485058:179,Availability,error,errors,179,"This error is not related to your work. It happens sometimes because some of the solvers in qutip are stochastic (in this case mcsolve) and occasionally the averaged results have errors that exceed the thresholds we set in the tests. We could fix it by increasing the number of trajectories in the simulation, but this would add time to the test suite which already takes a while to run.. So its a trade off between making the tests run as fast as possible and not getting too many false errors. I've restarted the test on travis, probably it will not fail again this time.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/246#issuecomment-63485058
https://github.com/qutip/qutip/pull/246#issuecomment-63485058:488,Availability,error,errors,488,"This error is not related to your work. It happens sometimes because some of the solvers in qutip are stochastic (in this case mcsolve) and occasionally the averaged results have errors that exceed the thresholds we set in the tests. We could fix it by increasing the number of trajectories in the simulation, but this would add time to the test suite which already takes a while to run.. So its a trade off between making the tests run as fast as possible and not getting too many false errors. I've restarted the test on travis, probably it will not fail again this time.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/246#issuecomment-63485058
https://github.com/qutip/qutip/pull/246#issuecomment-63485058:227,Testability,test,tests,227,"This error is not related to your work. It happens sometimes because some of the solvers in qutip are stochastic (in this case mcsolve) and occasionally the averaged results have errors that exceed the thresholds we set in the tests. We could fix it by increasing the number of trajectories in the simulation, but this would add time to the test suite which already takes a while to run.. So its a trade off between making the tests run as fast as possible and not getting too many false errors. I've restarted the test on travis, probably it will not fail again this time.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/246#issuecomment-63485058
https://github.com/qutip/qutip/pull/246#issuecomment-63485058:341,Testability,test,test,341,"This error is not related to your work. It happens sometimes because some of the solvers in qutip are stochastic (in this case mcsolve) and occasionally the averaged results have errors that exceed the thresholds we set in the tests. We could fix it by increasing the number of trajectories in the simulation, but this would add time to the test suite which already takes a while to run.. So its a trade off between making the tests run as fast as possible and not getting too many false errors. I've restarted the test on travis, probably it will not fail again this time.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/246#issuecomment-63485058
https://github.com/qutip/qutip/pull/246#issuecomment-63485058:427,Testability,test,tests,427,"This error is not related to your work. It happens sometimes because some of the solvers in qutip are stochastic (in this case mcsolve) and occasionally the averaged results have errors that exceed the thresholds we set in the tests. We could fix it by increasing the number of trajectories in the simulation, but this would add time to the test suite which already takes a while to run.. So its a trade off between making the tests run as fast as possible and not getting too many false errors. I've restarted the test on travis, probably it will not fail again this time.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/246#issuecomment-63485058
https://github.com/qutip/qutip/pull/246#issuecomment-63485058:515,Testability,test,test,515,"This error is not related to your work. It happens sometimes because some of the solvers in qutip are stochastic (in this case mcsolve) and occasionally the averaged results have errors that exceed the thresholds we set in the tests. We could fix it by increasing the number of trajectories in the simulation, but this would add time to the test suite which already takes a while to run.. So its a trade off between making the tests run as fast as possible and not getting too many false errors. I've restarted the test on travis, probably it will not fail again this time.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/246#issuecomment-63485058
https://github.com/qutip/qutip/pull/246#issuecomment-63487433:84,Deployability,update,updated,84,"Thanks for the explanation. ; You'll see I found some relative imports i missed and updated, and Travis CI is off again",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/246#issuecomment-63487433
https://github.com/qutip/qutip/pull/246#issuecomment-64207826:101,Integrability,interface,interface,101,"I can't merge it if you close the pull request (well technically i can, but not using the github web interface).. Please reopen the PR and I'll try to merge it tomorrow.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/246#issuecomment-64207826
https://github.com/qutip/qutip/pull/246#issuecomment-64313675:15,Testability,test,tests,15,"I've done some tests today. It looks very good but there are two Python3 issues that needs to be sorted out before merging (see inline comments). Otherwise, all good to go! Very nice work on this!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/246#issuecomment-64313675
https://github.com/qutip/qutip/pull/248#issuecomment-61393881:405,Availability,avail,available,405,Thanks Chris. This is looking good. I'll try it out in more detail in the comings days. Some immediate comments:; - I don't think we should keep two code-paths for parsing the config file. So either we keep using the old manual parsing or we make configobj the official and only way to parse the config file. In that case I think it would be Ok to simply fail to parse the config file if configobj is not available. I don't think many users use the config file so would be to worried about breaking backwards compatibility with respect to this.; - I think I'd prefer to have the logging module called logging.py rather than _logging.py even though it is supposed to internal to qutip. ; - Please add a `__all__` list in logging.py; - Shouldn't configspec.ini be added to the setup.py file?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/248#issuecomment-61393881
https://github.com/qutip/qutip/pull/248#issuecomment-61393881:176,Modifiability,config,config,176,Thanks Chris. This is looking good. I'll try it out in more detail in the comings days. Some immediate comments:; - I don't think we should keep two code-paths for parsing the config file. So either we keep using the old manual parsing or we make configobj the official and only way to parse the config file. In that case I think it would be Ok to simply fail to parse the config file if configobj is not available. I don't think many users use the config file so would be to worried about breaking backwards compatibility with respect to this.; - I think I'd prefer to have the logging module called logging.py rather than _logging.py even though it is supposed to internal to qutip. ; - Please add a `__all__` list in logging.py; - Shouldn't configspec.ini be added to the setup.py file?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/248#issuecomment-61393881
https://github.com/qutip/qutip/pull/248#issuecomment-61393881:247,Modifiability,config,configobj,247,Thanks Chris. This is looking good. I'll try it out in more detail in the comings days. Some immediate comments:; - I don't think we should keep two code-paths for parsing the config file. So either we keep using the old manual parsing or we make configobj the official and only way to parse the config file. In that case I think it would be Ok to simply fail to parse the config file if configobj is not available. I don't think many users use the config file so would be to worried about breaking backwards compatibility with respect to this.; - I think I'd prefer to have the logging module called logging.py rather than _logging.py even though it is supposed to internal to qutip. ; - Please add a `__all__` list in logging.py; - Shouldn't configspec.ini be added to the setup.py file?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/248#issuecomment-61393881
https://github.com/qutip/qutip/pull/248#issuecomment-61393881:296,Modifiability,config,config,296,Thanks Chris. This is looking good. I'll try it out in more detail in the comings days. Some immediate comments:; - I don't think we should keep two code-paths for parsing the config file. So either we keep using the old manual parsing or we make configobj the official and only way to parse the config file. In that case I think it would be Ok to simply fail to parse the config file if configobj is not available. I don't think many users use the config file so would be to worried about breaking backwards compatibility with respect to this.; - I think I'd prefer to have the logging module called logging.py rather than _logging.py even though it is supposed to internal to qutip. ; - Please add a `__all__` list in logging.py; - Shouldn't configspec.ini be added to the setup.py file?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/248#issuecomment-61393881
https://github.com/qutip/qutip/pull/248#issuecomment-61393881:373,Modifiability,config,config,373,Thanks Chris. This is looking good. I'll try it out in more detail in the comings days. Some immediate comments:; - I don't think we should keep two code-paths for parsing the config file. So either we keep using the old manual parsing or we make configobj the official and only way to parse the config file. In that case I think it would be Ok to simply fail to parse the config file if configobj is not available. I don't think many users use the config file so would be to worried about breaking backwards compatibility with respect to this.; - I think I'd prefer to have the logging module called logging.py rather than _logging.py even though it is supposed to internal to qutip. ; - Please add a `__all__` list in logging.py; - Shouldn't configspec.ini be added to the setup.py file?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/248#issuecomment-61393881
https://github.com/qutip/qutip/pull/248#issuecomment-61393881:388,Modifiability,config,configobj,388,Thanks Chris. This is looking good. I'll try it out in more detail in the comings days. Some immediate comments:; - I don't think we should keep two code-paths for parsing the config file. So either we keep using the old manual parsing or we make configobj the official and only way to parse the config file. In that case I think it would be Ok to simply fail to parse the config file if configobj is not available. I don't think many users use the config file so would be to worried about breaking backwards compatibility with respect to this.; - I think I'd prefer to have the logging module called logging.py rather than _logging.py even though it is supposed to internal to qutip. ; - Please add a `__all__` list in logging.py; - Shouldn't configspec.ini be added to the setup.py file?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/248#issuecomment-61393881
https://github.com/qutip/qutip/pull/248#issuecomment-61393881:449,Modifiability,config,config,449,Thanks Chris. This is looking good. I'll try it out in more detail in the comings days. Some immediate comments:; - I don't think we should keep two code-paths for parsing the config file. So either we keep using the old manual parsing or we make configobj the official and only way to parse the config file. In that case I think it would be Ok to simply fail to parse the config file if configobj is not available. I don't think many users use the config file so would be to worried about breaking backwards compatibility with respect to this.; - I think I'd prefer to have the logging module called logging.py rather than _logging.py even though it is supposed to internal to qutip. ; - Please add a `__all__` list in logging.py; - Shouldn't configspec.ini be added to the setup.py file?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/248#issuecomment-61393881
https://github.com/qutip/qutip/pull/248#issuecomment-61393881:744,Modifiability,config,configspec,744,Thanks Chris. This is looking good. I'll try it out in more detail in the comings days. Some immediate comments:; - I don't think we should keep two code-paths for parsing the config file. So either we keep using the old manual parsing or we make configobj the official and only way to parse the config file. In that case I think it would be Ok to simply fail to parse the config file if configobj is not available. I don't think many users use the config file so would be to worried about breaking backwards compatibility with respect to this.; - I think I'd prefer to have the logging module called logging.py rather than _logging.py even though it is supposed to internal to qutip. ; - Please add a `__all__` list in logging.py; - Shouldn't configspec.ini be added to the setup.py file?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/248#issuecomment-61393881
https://github.com/qutip/qutip/pull/248#issuecomment-61393881:579,Testability,log,logging,579,Thanks Chris. This is looking good. I'll try it out in more detail in the comings days. Some immediate comments:; - I don't think we should keep two code-paths for parsing the config file. So either we keep using the old manual parsing or we make configobj the official and only way to parse the config file. In that case I think it would be Ok to simply fail to parse the config file if configobj is not available. I don't think many users use the config file so would be to worried about breaking backwards compatibility with respect to this.; - I think I'd prefer to have the logging module called logging.py rather than _logging.py even though it is supposed to internal to qutip. ; - Please add a `__all__` list in logging.py; - Shouldn't configspec.ini be added to the setup.py file?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/248#issuecomment-61393881
https://github.com/qutip/qutip/pull/248#issuecomment-61393881:601,Testability,log,logging,601,Thanks Chris. This is looking good. I'll try it out in more detail in the comings days. Some immediate comments:; - I don't think we should keep two code-paths for parsing the config file. So either we keep using the old manual parsing or we make configobj the official and only way to parse the config file. In that case I think it would be Ok to simply fail to parse the config file if configobj is not available. I don't think many users use the config file so would be to worried about breaking backwards compatibility with respect to this.; - I think I'd prefer to have the logging module called logging.py rather than _logging.py even though it is supposed to internal to qutip. ; - Please add a `__all__` list in logging.py; - Shouldn't configspec.ini be added to the setup.py file?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/248#issuecomment-61393881
https://github.com/qutip/qutip/pull/248#issuecomment-61393881:720,Testability,log,logging,720,Thanks Chris. This is looking good. I'll try it out in more detail in the comings days. Some immediate comments:; - I don't think we should keep two code-paths for parsing the config file. So either we keep using the old manual parsing or we make configobj the official and only way to parse the config file. In that case I think it would be Ok to simply fail to parse the config file if configobj is not available. I don't think many users use the config file so would be to worried about breaking backwards compatibility with respect to this.; - I think I'd prefer to have the logging module called logging.py rather than _logging.py even though it is supposed to internal to qutip. ; - Please add a `__all__` list in logging.py; - Shouldn't configspec.ini be added to the setup.py file?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/248#issuecomment-61393881
https://github.com/qutip/qutip/pull/248#issuecomment-61393881:348,Usability,simpl,simply,348,Thanks Chris. This is looking good. I'll try it out in more detail in the comings days. Some immediate comments:; - I don't think we should keep two code-paths for parsing the config file. So either we keep using the old manual parsing or we make configobj the official and only way to parse the config file. In that case I think it would be Ok to simply fail to parse the config file if configobj is not available. I don't think many users use the config file so would be to worried about breaking backwards compatibility with respect to this.; - I think I'd prefer to have the logging module called logging.py rather than _logging.py even though it is supposed to internal to qutip. ; - Please add a `__all__` list in logging.py; - Shouldn't configspec.ini be added to the setup.py file?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/248#issuecomment-61393881
https://github.com/qutip/qutip/pull/248#issuecomment-61394612:35,Modifiability,config,configobj,35,"Sounds good. I'll pull out the non-configobj version, then, and make sure everything's handled in the case that it's not there. I'll also rename the module and set `__all__`, that's easy enough. As for `configspec.ini`, I made that change but forgot to push it, sorry. Easily taken care of.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/248#issuecomment-61394612
https://github.com/qutip/qutip/pull/248#issuecomment-61394612:203,Modifiability,config,configspec,203,"Sounds good. I'll pull out the non-configobj version, then, and make sure everything's handled in the case that it's not there. I'll also rename the module and set `__all__`, that's easy enough. As for `configspec.ini`, I made that change but forgot to push it, sorry. Easily taken care of.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/248#issuecomment-61394612
https://github.com/qutip/qutip/pull/248#issuecomment-61394654:119,Safety,detect,detection,119,"Looking at the Travis CI, it looks as if the Python 3 renaming of `__builtin__` to `builtins` is confusing the IPython detection in my changes to `qutip.settings`. Do you have any suggestions as to how would be best to handle that?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/248#issuecomment-61394654
https://github.com/qutip/qutip/pull/248#issuecomment-63153576:226,Testability,log,logging,226,"I would rather merge this PR here rather than bundling it with #246 because that is a big PR already and is likely going to take some more time before we merge it. Could you cherry pick the commits that @ajgpitch added to the logging/settings module into this PR? If you don't have time to work on this that's OK - no need to apologize! - I understand that work on open source projects is not anyones main job! If you want to continue this, then take the time you need to get it done. If you feel that you don't have time for it anytime soon then just let me know and I'll continue this PR with some cleanup and fixes and merge it soonish.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/248#issuecomment-63153576
https://github.com/qutip/qutip/pull/248#issuecomment-63155272:206,Testability,log,logging,206,[![Coverage Status](https://coveralls.io/builds/1478018/badge)](https://coveralls.io/builds/1478018). Coverage increased (+0.15%) when pulling **5035c836272cfe0a63a1673c0fd6b7cbb49e4f09 on cgranade:feature-logging** into **b5b415a5d3057d2ea255b283b2e61cfde242632a on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/248#issuecomment-63155272
https://github.com/qutip/qutip/pull/248#issuecomment-63155472:101,Modifiability,config,configobj,101,"In addition to cherry picking from #246, I think that gets rid of the suprious warnings when either `configobj` or `~/.qutiprc` is missing. Is there any other outstanding issue that I can address to make this more useful?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/248#issuecomment-63155472
https://github.com/qutip/qutip/pull/248#issuecomment-63156135:206,Testability,log,logging,206,[![Coverage Status](https://coveralls.io/builds/1478065/badge)](https://coveralls.io/builds/1478065). Coverage increased (+0.15%) when pulling **8c1dcf7859dc5c2c8d2b99935e943076b25fb538 on cgranade:feature-logging** into **b5b415a5d3057d2ea255b283b2e61cfde242632a on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/248#issuecomment-63156135
https://github.com/qutip/qutip/pull/248#issuecomment-63157712:206,Testability,log,logging,206,[![Coverage Status](https://coveralls.io/builds/1478151/badge)](https://coveralls.io/builds/1478151). Coverage increased (+0.13%) when pulling **ef38e1626942fc964870c6539a1223105305612e on cgranade:feature-logging** into **b5b415a5d3057d2ea255b283b2e61cfde242632a on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/248#issuecomment-63157712
https://github.com/qutip/qutip/pull/248#issuecomment-63157743:45,Testability,test,tests,45,"Thanks, it's looking good now I think. In my tests is seems to work fine, so I'm merging this now. Thanks a lot for your work on this!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/248#issuecomment-63157743
https://github.com/qutip/qutip/pull/249#issuecomment-61443740:94,Availability,failure,failure,94,"Yes, the Tavis tests fail due to the missing Normalize class from Matplotlib. This caused the failure in #248 and is why I resorted to the try statement on loading.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/249#issuecomment-61443740
https://github.com/qutip/qutip/pull/249#issuecomment-61443740:156,Performance,load,loading,156,"Yes, the Tavis tests fail due to the missing Normalize class from Matplotlib. This caused the failure in #248 and is why I resorted to the try statement on loading.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/249#issuecomment-61443740
https://github.com/qutip/qutip/pull/249#issuecomment-61443740:15,Testability,test,tests,15,"Yes, the Tavis tests fail due to the missing Normalize class from Matplotlib. This caused the failure in #248 and is why I resorted to the try statement on loading.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/249#issuecomment-61443740
https://github.com/qutip/qutip/pull/250#issuecomment-63583478:122,Testability,benchmark,benchmarking,122,Just a general comment: It is ok to have `'solution_time'` int `ss_args['info']` but in general I think that this kind of benchmarking should probably better be done using the profiler module cProfile.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/250#issuecomment-63583478
https://github.com/qutip/qutip/pull/250#issuecomment-63594936:90,Usability,simpl,simple,90,"It seems like this is now done, save for the possibility of using the profiler instead of simple timings.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/250#issuecomment-63594936
https://github.com/qutip/qutip/pull/251#issuecomment-61602992:13,Performance,perform,performance,13,How does the performance of the using the C math functions compare to using cmath and the numpy functions?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/251#issuecomment-61602992
https://github.com/qutip/qutip/pull/251#issuecomment-61603338:5,Testability,test,testing,5,just testing with simple decaying exponential one gets about 5% or so improvement compared to np functions and no difference with cmath,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/251#issuecomment-61603338
https://github.com/qutip/qutip/pull/251#issuecomment-61603338:18,Usability,simpl,simple,18,just testing with simple decaying exponential one gets about 5% or so improvement compared to np functions and no difference with cmath,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/251#issuecomment-61603338
https://github.com/qutip/qutip/pull/251#issuecomment-61604751:281,Security,access,accessed,281,"I think it would be reasonable to change ""from numpy import *"" to ""import numpy as np"" in the generated cython code. Then if a user wants a numpy function that is overloaded by the new definitions that you've added, or wants a function that is not included in that list, it can be accessed by explicly including the namespace, like 'np.exp(...)'",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/251#issuecomment-61604751
https://github.com/qutip/qutip/pull/253#issuecomment-63155928:54,Deployability,update,update,54,Why do we need a new function for this? Can't we just update the existing parfor function with the changes you have made?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/253#issuecomment-63155928
https://github.com/qutip/qutip/pull/253#issuecomment-63156126:52,Deployability,update,update,52,"That's a good question... I'm not sure if we should update parfor or create new functions parallel_map, but this is a first attempt to try to generalize the parfor functions we have to work with functions that take arbitray arguments and keyword arguments, and that works with the ui.progressbar interface. The main point here is that I want the multiprocessing and IPython.parallel backed impementation of ""par_something"" to be swappable. The ones we have now are not. If we can agree on a new API for how these functions should behave we could update the old parfor functions instead of creating new ones. However, this would break backwards compatibility in some minor ways, so I didn't want to mess with the existing parfor functions, since they are part of our published API. Hence the new functions.. I know it's not ideal to have alternative functions that does the same thing, but also not good to break backwards compatibility.. Also, the parfor name is a bit of a misnomer, since it is a map function rather than a for loop.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/253#issuecomment-63156126
https://github.com/qutip/qutip/pull/253#issuecomment-63156126:546,Deployability,update,update,546,"That's a good question... I'm not sure if we should update parfor or create new functions parallel_map, but this is a first attempt to try to generalize the parfor functions we have to work with functions that take arbitray arguments and keyword arguments, and that works with the ui.progressbar interface. The main point here is that I want the multiprocessing and IPython.parallel backed impementation of ""par_something"" to be swappable. The ones we have now are not. If we can agree on a new API for how these functions should behave we could update the old parfor functions instead of creating new ones. However, this would break backwards compatibility in some minor ways, so I didn't want to mess with the existing parfor functions, since they are part of our published API. Hence the new functions.. I know it's not ideal to have alternative functions that does the same thing, but also not good to break backwards compatibility.. Also, the parfor name is a bit of a misnomer, since it is a map function rather than a for loop.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/253#issuecomment-63156126
https://github.com/qutip/qutip/pull/253#issuecomment-63156126:296,Integrability,interface,interface,296,"That's a good question... I'm not sure if we should update parfor or create new functions parallel_map, but this is a first attempt to try to generalize the parfor functions we have to work with functions that take arbitray arguments and keyword arguments, and that works with the ui.progressbar interface. The main point here is that I want the multiprocessing and IPython.parallel backed impementation of ""par_something"" to be swappable. The ones we have now are not. If we can agree on a new API for how these functions should behave we could update the old parfor functions instead of creating new ones. However, this would break backwards compatibility in some minor ways, so I didn't want to mess with the existing parfor functions, since they are part of our published API. Hence the new functions.. I know it's not ideal to have alternative functions that does the same thing, but also not good to break backwards compatibility.. Also, the parfor name is a bit of a misnomer, since it is a map function rather than a for loop.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/253#issuecomment-63156126
https://github.com/qutip/qutip/pull/253#issuecomment-63582703:1041,Usability,progress bar,progress bars,1041,"@nonhermitian can you please code review this when you have time. I've kept the parallel_map functions and I don't really want to meddle with the current implementation of parfor because I think it will break backwards compatibility. Also, I don't really want to work with parfor as it is because I think it is overly complicated and trying to do funny things with the input (for example, I don't even remember what the following lines are supposed to do:. ```; var = [[args[j][i] for j in range(len(args))]; for i in range(len(list(args[0])))]; ```. ) and it also tries to return numpy arrays which I don't think is necessary and it doesn't work well with how I want to use parallel_map in the stochastic module, where the task function returns a tuple of various computation results of different types which should not be put into a numpy array. So for this reason I would like to add these new parallel_map functions to the qutip api. I think that this implementation is cleaner and more easy to understand and use, and it supports using progress bars, so I think this justifies duplicating the functionality of parfor function.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/253#issuecomment-63582703
https://github.com/qutip/qutip/pull/253#issuecomment-63926759:89,Usability,simpl,simpler,89,"From my point of view parallel_map is superior to the old parfor function, because of it simpler and has more features, so we could simply have parfor call parallel_map as I've done in the ipynbtools. However, the problem with this is that we will likely break backwards compatibility, which can be annoying for users using the existing parfor function (myself included, in older projects). . Anyways, I'll merge this soon and we can think about unification of parfor and parallel_map in the future.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/253#issuecomment-63926759
https://github.com/qutip/qutip/pull/253#issuecomment-63926759:132,Usability,simpl,simply,132,"From my point of view parallel_map is superior to the old parfor function, because of it simpler and has more features, so we could simply have parfor call parallel_map as I've done in the ipynbtools. However, the problem with this is that we will likely break backwards compatibility, which can be annoying for users using the existing parfor function (myself included, in older projects). . Anyways, I'll merge this soon and we can think about unification of parfor and parallel_map in the future.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/253#issuecomment-63926759
https://github.com/qutip/qutip/pull/255#issuecomment-63268318:202,Integrability,interface,interface,202,"Looks interesting! Possibly a bit out of scope for qutip? In principle you could put this progress bar in a separate module and still use it with qutip (as long as it supports qutip's basic progressbar interface). Then it could also be used in non-qutip related projects. . If its to be included in qutip, I think it should not be added to qutip/ui/progressbar, but as an module of its own that would not be loaded by default, so a user would have to load it explicitly when using it, like the way the current ipynbtools and picloud modules work. . Perhaps it would make sense to move these ""extras"" or ""extensions"" modules to a subdirectory of their own, say ""qutip/extensions"" or ""qutip/ext"" to keep the import paths manageable. In that case I think that qutip.picloud should be moved to that directory as well. I think this would keep these extensions reasonably isolated for the core qutip modules, which I think we should prioritize if we are to allow these kind of peripheral modules to increase in number in the future. @nonhermitian any opinions on this?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/255#issuecomment-63268318
https://github.com/qutip/qutip/pull/255#issuecomment-63268318:408,Performance,load,loaded,408,"Looks interesting! Possibly a bit out of scope for qutip? In principle you could put this progress bar in a separate module and still use it with qutip (as long as it supports qutip's basic progressbar interface). Then it could also be used in non-qutip related projects. . If its to be included in qutip, I think it should not be added to qutip/ui/progressbar, but as an module of its own that would not be loaded by default, so a user would have to load it explicitly when using it, like the way the current ipynbtools and picloud modules work. . Perhaps it would make sense to move these ""extras"" or ""extensions"" modules to a subdirectory of their own, say ""qutip/extensions"" or ""qutip/ext"" to keep the import paths manageable. In that case I think that qutip.picloud should be moved to that directory as well. I think this would keep these extensions reasonably isolated for the core qutip modules, which I think we should prioritize if we are to allow these kind of peripheral modules to increase in number in the future. @nonhermitian any opinions on this?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/255#issuecomment-63268318
https://github.com/qutip/qutip/pull/255#issuecomment-63268318:451,Performance,load,load,451,"Looks interesting! Possibly a bit out of scope for qutip? In principle you could put this progress bar in a separate module and still use it with qutip (as long as it supports qutip's basic progressbar interface). Then it could also be used in non-qutip related projects. . If its to be included in qutip, I think it should not be added to qutip/ui/progressbar, but as an module of its own that would not be loaded by default, so a user would have to load it explicitly when using it, like the way the current ipynbtools and picloud modules work. . Perhaps it would make sense to move these ""extras"" or ""extensions"" modules to a subdirectory of their own, say ""qutip/extensions"" or ""qutip/ext"" to keep the import paths manageable. In that case I think that qutip.picloud should be moved to that directory as well. I think this would keep these extensions reasonably isolated for the core qutip modules, which I think we should prioritize if we are to allow these kind of peripheral modules to increase in number in the future. @nonhermitian any opinions on this?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/255#issuecomment-63268318
https://github.com/qutip/qutip/pull/255#issuecomment-63268318:90,Usability,progress bar,progress bar,90,"Looks interesting! Possibly a bit out of scope for qutip? In principle you could put this progress bar in a separate module and still use it with qutip (as long as it supports qutip's basic progressbar interface). Then it could also be used in non-qutip related projects. . If its to be included in qutip, I think it should not be added to qutip/ui/progressbar, but as an module of its own that would not be loaded by default, so a user would have to load it explicitly when using it, like the way the current ipynbtools and picloud modules work. . Perhaps it would make sense to move these ""extras"" or ""extensions"" modules to a subdirectory of their own, say ""qutip/extensions"" or ""qutip/ext"" to keep the import paths manageable. In that case I think that qutip.picloud should be moved to that directory as well. I think this would keep these extensions reasonably isolated for the core qutip modules, which I think we should prioritize if we are to allow these kind of peripheral modules to increase in number in the future. @nonhermitian any opinions on this?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/255#issuecomment-63268318
https://github.com/qutip/qutip/pull/255#issuecomment-63312872:299,Deployability,integrat,integrate,299,"Thanks for the interest! To be clear, I wasn't trying to suggest that the whole thing is in scope for QuTiP per se; this PR concerns calling a small one-file [client library](https://github.com/cgranade/tskmon-client) from QuTiP. Given the similarity with that and the PiCloud functionality's goal (integrate QuTiP with third-party web services), maybe a good architecture would be something like a `qutip.services` package, where the expectation is that each submodule would require some additional client library?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/255#issuecomment-63312872
https://github.com/qutip/qutip/pull/255#issuecomment-63312872:299,Integrability,integrat,integrate,299,"Thanks for the interest! To be clear, I wasn't trying to suggest that the whole thing is in scope for QuTiP per se; this PR concerns calling a small one-file [client library](https://github.com/cgranade/tskmon-client) from QuTiP. Given the similarity with that and the PiCloud functionality's goal (integrate QuTiP with third-party web services), maybe a good architecture would be something like a `qutip.services` package, where the expectation is that each submodule would require some additional client library?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/255#issuecomment-63312872
https://github.com/qutip/qutip/pull/255#issuecomment-63312872:31,Usability,clear,clear,31,"Thanks for the interest! To be clear, I wasn't trying to suggest that the whole thing is in scope for QuTiP per se; this PR concerns calling a small one-file [client library](https://github.com/cgranade/tskmon-client) from QuTiP. Given the similarity with that and the PiCloud functionality's goal (integrate QuTiP with third-party web services), maybe a good architecture would be something like a `qutip.services` package, where the expectation is that each submodule would require some additional client library?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/255#issuecomment-63312872
https://github.com/qutip/qutip/pull/255#issuecomment-63908501:454,Deployability,configurat,configuration,454,"I would still prefer `qutip.extensions`, `qutip.ext` or maybe `qutip.extra` rather than `qutip.services` because although picloud and tskmon can properly be called services, I think that if we pursue the idea of having extra utitlities like this in the qutip project we should take a broader approach and call it extensions, which may or may not be services. These would have to be completely isolated from the rest of the qutip code base (including the configuration file parser).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/255#issuecomment-63908501
https://github.com/qutip/qutip/pull/255#issuecomment-63908501:454,Modifiability,config,configuration,454,"I would still prefer `qutip.extensions`, `qutip.ext` or maybe `qutip.extra` rather than `qutip.services` because although picloud and tskmon can properly be called services, I think that if we pursue the idea of having extra utitlities like this in the qutip project we should take a broader approach and call it extensions, which may or may not be services. These would have to be completely isolated from the rest of the qutip code base (including the configuration file parser).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/255#issuecomment-63908501
https://github.com/qutip/qutip/pull/255#issuecomment-64314727:29,Modifiability,refactor,refactoring,29,"That sounds good, I'll start refactoring this PR to address that structure, then.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/255#issuecomment-64314727
https://github.com/qutip/qutip/pull/256#issuecomment-63596921:14,Usability,progress bar,progress bar,14,"Well, the new progress bar is still around if one wants to use it so I think this is the best we can do right now. So I'm merging this then.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/256#issuecomment-63596921
https://github.com/qutip/qutip/pull/258#issuecomment-63397841:25,Testability,test,test,25,Nice. Can you add a unit test that use this new c_ops argument?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/258#issuecomment-63397841
https://github.com/qutip/qutip/pull/258#issuecomment-63407763:59,Integrability,depend,dependent,59,"Also, I used a piece-wise-constant approximation to a time-dependent hamiltonian with the bloch-redfield solver lately (here http://arxiv.org/abs/1409.6014) - it was useful, but I'm not really sure if it was the most elegant approach. It was just what I could figure out on a short notice... so I'm conflicted as to whether or not it would be a feature useful to add, do you have any thoughts?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/258#issuecomment-63407763
https://github.com/qutip/qutip/pull/258#issuecomment-63427565:91,Integrability,depend,dependent,91,"Hi Kevin. I think that would be very interesting! Since we don't have any support for time-dependent systems in the Bloch-Redfield master equation at the moment, I think it would be a nice addition. With time-dependent systems one would have to diagonalize the Hamiltonian at each time-step, so I can't think of a better way of doing this than to consider a piecewise-constant approximation. How did you implement it? Did you for example put additional logic in brmesolve? I think that the ""array-based"" time-dependent format (see mesolve) could be suitable for defining piecewise constant problems for brmesolve.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/258#issuecomment-63427565
https://github.com/qutip/qutip/pull/258#issuecomment-63427565:209,Integrability,depend,dependent,209,"Hi Kevin. I think that would be very interesting! Since we don't have any support for time-dependent systems in the Bloch-Redfield master equation at the moment, I think it would be a nice addition. With time-dependent systems one would have to diagonalize the Hamiltonian at each time-step, so I can't think of a better way of doing this than to consider a piecewise-constant approximation. How did you implement it? Did you for example put additional logic in brmesolve? I think that the ""array-based"" time-dependent format (see mesolve) could be suitable for defining piecewise constant problems for brmesolve.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/258#issuecomment-63427565
https://github.com/qutip/qutip/pull/258#issuecomment-63427565:509,Integrability,depend,dependent,509,"Hi Kevin. I think that would be very interesting! Since we don't have any support for time-dependent systems in the Bloch-Redfield master equation at the moment, I think it would be a nice addition. With time-dependent systems one would have to diagonalize the Hamiltonian at each time-step, so I can't think of a better way of doing this than to consider a piecewise-constant approximation. How did you implement it? Did you for example put additional logic in brmesolve? I think that the ""array-based"" time-dependent format (see mesolve) could be suitable for defining piecewise constant problems for brmesolve.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/258#issuecomment-63427565
https://github.com/qutip/qutip/pull/258#issuecomment-63427565:453,Testability,log,logic,453,"Hi Kevin. I think that would be very interesting! Since we don't have any support for time-dependent systems in the Bloch-Redfield master equation at the moment, I think it would be a nice addition. With time-dependent systems one would have to diagonalize the Hamiltonian at each time-step, so I can't think of a better way of doing this than to consider a piecewise-constant approximation. How did you implement it? Did you for example put additional logic in brmesolve? I think that the ""array-based"" time-dependent format (see mesolve) could be suitable for defining piecewise constant problems for brmesolve.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/258#issuecomment-63427565
https://github.com/qutip/qutip/pull/258#issuecomment-63558912:183,Integrability,depend,dependent,183,"Ok, great! I'll work on adding it in too, then. I actually just implemented it outside brmesolve, but in a way that should be easy to put back in. I'll check out the array-based time-dependent format (I actually haven't used it yet, still behind the times!)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/258#issuecomment-63558912
https://github.com/qutip/qutip/pull/258#issuecomment-65160566:42,Testability,test,test,42,sorry for the delay. could you add a unit test for using brmesolve with c_ops?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/258#issuecomment-65160566
https://github.com/qutip/qutip/pull/258#issuecomment-65343561:83,Testability,test,tests,83,Thanks a lot for your efforts on this. I think this is ready for merge when travis tests finish. Or is there anything else you want to add to this PR?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/258#issuecomment-65343561
https://github.com/qutip/qutip/issues/260#issuecomment-63587960:119,Availability,avail,available,119,"I think that typically you don't gain much by using more processes than the number of cores, even if hyperthreading is available. In some cases you even get a performance degradation, so that's the reason why we dont default to cores*threads. However if you want to you can set the num_cpu flag explicitly.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/260#issuecomment-63587960
https://github.com/qutip/qutip/issues/260#issuecomment-63587960:159,Performance,perform,performance,159,"I think that typically you don't gain much by using more processes than the number of cores, even if hyperthreading is available. In some cases you even get a performance degradation, so that's the reason why we dont default to cores*threads. However if you want to you can set the num_cpu flag explicitly.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/260#issuecomment-63587960
https://github.com/qutip/qutip/pull/261#issuecomment-63601247:78,Deployability,configurat,configuration,78,"Hmm, yes, that only works if you set the qutip.settings.debug to True via the configuration file.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/261#issuecomment-63601247
https://github.com/qutip/qutip/pull/261#issuecomment-63601247:78,Modifiability,config,configuration,78,"Hmm, yes, that only works if you set the qutip.settings.debug to True via the configuration file.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/261#issuecomment-63601247
https://github.com/qutip/qutip/pull/261#issuecomment-63601461:128,Integrability,message,messages,128,"I think the best solution for this might be to set logging level to DEBUG by default in get_logger, and only actually log debug messages if qutip.settings.debug is True. This is anyways the way it should be done, because calling logger.debug(...) gives an overhead that we don't want if the debug flag is set to false. So the usage pattern should be. ```; if qutip.settings.debug:; logger.debug(....); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/261#issuecomment-63601461
https://github.com/qutip/qutip/pull/261#issuecomment-63601461:51,Testability,log,logging,51,"I think the best solution for this might be to set logging level to DEBUG by default in get_logger, and only actually log debug messages if qutip.settings.debug is True. This is anyways the way it should be done, because calling logger.debug(...) gives an overhead that we don't want if the debug flag is set to false. So the usage pattern should be. ```; if qutip.settings.debug:; logger.debug(....); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/261#issuecomment-63601461
https://github.com/qutip/qutip/pull/261#issuecomment-63601461:118,Testability,log,log,118,"I think the best solution for this might be to set logging level to DEBUG by default in get_logger, and only actually log debug messages if qutip.settings.debug is True. This is anyways the way it should be done, because calling logger.debug(...) gives an overhead that we don't want if the debug flag is set to false. So the usage pattern should be. ```; if qutip.settings.debug:; logger.debug(....); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/261#issuecomment-63601461
https://github.com/qutip/qutip/pull/261#issuecomment-63601461:229,Testability,log,logger,229,"I think the best solution for this might be to set logging level to DEBUG by default in get_logger, and only actually log debug messages if qutip.settings.debug is True. This is anyways the way it should be done, because calling logger.debug(...) gives an overhead that we don't want if the debug flag is set to false. So the usage pattern should be. ```; if qutip.settings.debug:; logger.debug(....); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/261#issuecomment-63601461
https://github.com/qutip/qutip/pull/261#issuecomment-63601461:382,Testability,log,logger,382,"I think the best solution for this might be to set logging level to DEBUG by default in get_logger, and only actually log debug messages if qutip.settings.debug is True. This is anyways the way it should be done, because calling logger.debug(...) gives an overhead that we don't want if the debug flag is set to false. So the usage pattern should be. ```; if qutip.settings.debug:; logger.debug(....); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/261#issuecomment-63601461
https://github.com/qutip/qutip/pull/261#issuecomment-64150553:111,Testability,log,logging,111,"I think it would be better to put line 57-60 within a `if settings.debug:` and change following lines in qutip/logging.py:. ```; if qutip.settings.debug:; logger.setLevel(logging.DEBUG); else:; logger.setLevel(logging.WARN); ```. to. ```; logger.setLevel(logging.DEBUG); ```. as discussed above. Maybe something else also needs to be fix around here, but it's better to sort it out now that there is a situation that requires the behaviour of the logging module to change.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/261#issuecomment-64150553
https://github.com/qutip/qutip/pull/261#issuecomment-64150553:155,Testability,log,logger,155,"I think it would be better to put line 57-60 within a `if settings.debug:` and change following lines in qutip/logging.py:. ```; if qutip.settings.debug:; logger.setLevel(logging.DEBUG); else:; logger.setLevel(logging.WARN); ```. to. ```; logger.setLevel(logging.DEBUG); ```. as discussed above. Maybe something else also needs to be fix around here, but it's better to sort it out now that there is a situation that requires the behaviour of the logging module to change.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/261#issuecomment-64150553
https://github.com/qutip/qutip/pull/261#issuecomment-64150553:171,Testability,log,logging,171,"I think it would be better to put line 57-60 within a `if settings.debug:` and change following lines in qutip/logging.py:. ```; if qutip.settings.debug:; logger.setLevel(logging.DEBUG); else:; logger.setLevel(logging.WARN); ```. to. ```; logger.setLevel(logging.DEBUG); ```. as discussed above. Maybe something else also needs to be fix around here, but it's better to sort it out now that there is a situation that requires the behaviour of the logging module to change.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/261#issuecomment-64150553
https://github.com/qutip/qutip/pull/261#issuecomment-64150553:194,Testability,log,logger,194,"I think it would be better to put line 57-60 within a `if settings.debug:` and change following lines in qutip/logging.py:. ```; if qutip.settings.debug:; logger.setLevel(logging.DEBUG); else:; logger.setLevel(logging.WARN); ```. to. ```; logger.setLevel(logging.DEBUG); ```. as discussed above. Maybe something else also needs to be fix around here, but it's better to sort it out now that there is a situation that requires the behaviour of the logging module to change.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/261#issuecomment-64150553
https://github.com/qutip/qutip/pull/261#issuecomment-64150553:210,Testability,log,logging,210,"I think it would be better to put line 57-60 within a `if settings.debug:` and change following lines in qutip/logging.py:. ```; if qutip.settings.debug:; logger.setLevel(logging.DEBUG); else:; logger.setLevel(logging.WARN); ```. to. ```; logger.setLevel(logging.DEBUG); ```. as discussed above. Maybe something else also needs to be fix around here, but it's better to sort it out now that there is a situation that requires the behaviour of the logging module to change.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/261#issuecomment-64150553
https://github.com/qutip/qutip/pull/261#issuecomment-64150553:239,Testability,log,logger,239,"I think it would be better to put line 57-60 within a `if settings.debug:` and change following lines in qutip/logging.py:. ```; if qutip.settings.debug:; logger.setLevel(logging.DEBUG); else:; logger.setLevel(logging.WARN); ```. to. ```; logger.setLevel(logging.DEBUG); ```. as discussed above. Maybe something else also needs to be fix around here, but it's better to sort it out now that there is a situation that requires the behaviour of the logging module to change.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/261#issuecomment-64150553
https://github.com/qutip/qutip/pull/261#issuecomment-64150553:255,Testability,log,logging,255,"I think it would be better to put line 57-60 within a `if settings.debug:` and change following lines in qutip/logging.py:. ```; if qutip.settings.debug:; logger.setLevel(logging.DEBUG); else:; logger.setLevel(logging.WARN); ```. to. ```; logger.setLevel(logging.DEBUG); ```. as discussed above. Maybe something else also needs to be fix around here, but it's better to sort it out now that there is a situation that requires the behaviour of the logging module to change.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/261#issuecomment-64150553
https://github.com/qutip/qutip/pull/261#issuecomment-64150553:447,Testability,log,logging,447,"I think it would be better to put line 57-60 within a `if settings.debug:` and change following lines in qutip/logging.py:. ```; if qutip.settings.debug:; logger.setLevel(logging.DEBUG); else:; logger.setLevel(logging.WARN); ```. to. ```; logger.setLevel(logging.DEBUG); ```. as discussed above. Maybe something else also needs to be fix around here, but it's better to sort it out now that there is a situation that requires the behaviour of the logging module to change.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/261#issuecomment-64150553
https://github.com/qutip/qutip/pull/261#issuecomment-64150730:55,Testability,log,logger,55,"But again, the debug flag is not set at runtime so the logger will always be WARN using the above suggestions. It would have to be set inside of a function that is called to properly check the debug flag.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/261#issuecomment-64150730
https://github.com/qutip/qutip/pull/261#issuecomment-64150936:139,Modifiability,config,config,139,"OK, this is a bit broken. The debug flag throughout qutip doesn't really support setting at run time, it's only consistent when set in the config file. But let's fix it some other day then.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/261#issuecomment-64150936
https://github.com/qutip/qutip/pull/264#issuecomment-64517057:1333,Testability,test,tests,1333,"A large portion of the mcsolver runtime is concentrated in the calculation of expectation values for each time in tlist. For example:. ``` python; from qutip import *; from numpy import sqrt, linspace; N0 = 10; N1 = 10; N2 = 10; # damping rates; gamma0 = 0.1; gamma1 = 0.4; gamma2 = 0.1; alpha = sqrt(2) # initial coherent state param for mode 0; ntraj = 500 # number of trajectories; # define operators; a0 = tensor(destroy(N0), qeye(N1), qeye(N2)); a1 = tensor(qeye(N0), destroy(N1), qeye(N2)); a2 = tensor(qeye(N0), qeye(N1), destroy(N2)); # number operators for each mode; num0 = a0.dag() * a0; num1 = a1.dag() * a1; num2 = a2.dag() * a2; # dissipative operators for zero-temp. baths; C0 = sqrt(2.0 * gamma0) * a0; C1 = sqrt(2.0 * gamma1) * a1; C2 = sqrt(2.0 * gamma2) * a2; # initial state: coherent mode 0 & vacuum for modes #1 & #2; psi0 = tensor(coherent(N0, alpha), basis(N1, 0), basis(N2, 0)); # trilinear Hamiltonian; H = 1j * (a0 * a1.dag() * a2.dag() - a0.dag() * a1 * a2). tlist = linspace(0, 10, 100); data = mcsolve(H, psi0, tlist, [C0, C1, C2], [num0, num1, num2],ntraj=ntraj). tlist = linspace(0, 10, 10); data = mcsolve(H, psi0, tlist, [C0, C1, C2], [num0, num1, num2],ntraj=ntraj,; options=Options(seeds=data.seeds)); ```. The second run, where the seeds are the same as the first run to remove randomness in the tests, is nearly 3x faster (using 4 cores) than the first one. However, we are already calculating the expectation values using cython, so it is difficult to see how we can improve on this here.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64517057
https://github.com/qutip/qutip/pull/264#issuecomment-64519867:1249,Deployability,integrat,integrate,1249,Running it through the profiler suggests that cy_expect_psi_csr is only responsible for a small part of the time (accumulative time 4.2 sec as compared to total run time of 148 sec). ```; Wed Nov 26 15:04:59 2014 profile.out; 5155120 function calls (5143582 primitive calls) in 148.280 seconds; Ordered by: cumulative time; List reduced from 3097 to 100 due to restriction <100>; ncalls tottime percall cumtime percall filename:lineno(function); 441/1 0.014 0.000 148.283 148.283 {built-in method exec}; 1 0.001 0.001 148.283 148.283 mcsolve-performance.py:1(<module>); 2 0.000 0.000 147.463 73.732 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:69(mcsolve); 2 0.000 0.000 147.411 73.706 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:446(run); 2 0.000 0.000 147.411 73.705 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:423(parallel); 2 0.011 0.006 147.411 73.705 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:415(serial); 1000 8.867 0.009 147.340 0.147 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:757(_mc_alg_evolve); 453518 1.543 0.000 130.497 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:376(integrate); 453518 127.846 0.000 128.245 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:859(run); 395940 0.709 0.000 74.413 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:747(step); 171960 4.219 0.000 4.219 0.000 {built-in method cy_expect_psi_csr}; ```,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64519867
https://github.com/qutip/qutip/pull/264#issuecomment-64519867:1271,Deployability,integrat,integrate,1271,Running it through the profiler suggests that cy_expect_psi_csr is only responsible for a small part of the time (accumulative time 4.2 sec as compared to total run time of 148 sec). ```; Wed Nov 26 15:04:59 2014 profile.out; 5155120 function calls (5143582 primitive calls) in 148.280 seconds; Ordered by: cumulative time; List reduced from 3097 to 100 due to restriction <100>; ncalls tottime percall cumtime percall filename:lineno(function); 441/1 0.014 0.000 148.283 148.283 {built-in method exec}; 1 0.001 0.001 148.283 148.283 mcsolve-performance.py:1(<module>); 2 0.000 0.000 147.463 73.732 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:69(mcsolve); 2 0.000 0.000 147.411 73.706 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:446(run); 2 0.000 0.000 147.411 73.705 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:423(parallel); 2 0.011 0.006 147.411 73.705 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:415(serial); 1000 8.867 0.009 147.340 0.147 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:757(_mc_alg_evolve); 453518 1.543 0.000 130.497 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:376(integrate); 453518 127.846 0.000 128.245 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:859(run); 395940 0.709 0.000 74.413 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:747(step); 171960 4.219 0.000 4.219 0.000 {built-in method cy_expect_psi_csr}; ```,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64519867
https://github.com/qutip/qutip/pull/264#issuecomment-64519867:1380,Deployability,integrat,integrate,1380,Running it through the profiler suggests that cy_expect_psi_csr is only responsible for a small part of the time (accumulative time 4.2 sec as compared to total run time of 148 sec). ```; Wed Nov 26 15:04:59 2014 profile.out; 5155120 function calls (5143582 primitive calls) in 148.280 seconds; Ordered by: cumulative time; List reduced from 3097 to 100 due to restriction <100>; ncalls tottime percall cumtime percall filename:lineno(function); 441/1 0.014 0.000 148.283 148.283 {built-in method exec}; 1 0.001 0.001 148.283 148.283 mcsolve-performance.py:1(<module>); 2 0.000 0.000 147.463 73.732 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:69(mcsolve); 2 0.000 0.000 147.411 73.706 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:446(run); 2 0.000 0.000 147.411 73.705 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:423(parallel); 2 0.011 0.006 147.411 73.705 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:415(serial); 1000 8.867 0.009 147.340 0.147 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:757(_mc_alg_evolve); 453518 1.543 0.000 130.497 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:376(integrate); 453518 127.846 0.000 128.245 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:859(run); 395940 0.709 0.000 74.413 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:747(step); 171960 4.219 0.000 4.219 0.000 {built-in method cy_expect_psi_csr}; ```,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64519867
https://github.com/qutip/qutip/pull/264#issuecomment-64519867:1502,Deployability,integrat,integrate,1502,Running it through the profiler suggests that cy_expect_psi_csr is only responsible for a small part of the time (accumulative time 4.2 sec as compared to total run time of 148 sec). ```; Wed Nov 26 15:04:59 2014 profile.out; 5155120 function calls (5143582 primitive calls) in 148.280 seconds; Ordered by: cumulative time; List reduced from 3097 to 100 due to restriction <100>; ncalls tottime percall cumtime percall filename:lineno(function); 441/1 0.014 0.000 148.283 148.283 {built-in method exec}; 1 0.001 0.001 148.283 148.283 mcsolve-performance.py:1(<module>); 2 0.000 0.000 147.463 73.732 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:69(mcsolve); 2 0.000 0.000 147.411 73.706 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:446(run); 2 0.000 0.000 147.411 73.705 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:423(parallel); 2 0.011 0.006 147.411 73.705 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:415(serial); 1000 8.867 0.009 147.340 0.147 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:757(_mc_alg_evolve); 453518 1.543 0.000 130.497 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:376(integrate); 453518 127.846 0.000 128.245 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:859(run); 395940 0.709 0.000 74.413 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:747(step); 171960 4.219 0.000 4.219 0.000 {built-in method cy_expect_psi_csr}; ```,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64519867
https://github.com/qutip/qutip/pull/264#issuecomment-64519867:329,Energy Efficiency,reduce,reduced,329,Running it through the profiler suggests that cy_expect_psi_csr is only responsible for a small part of the time (accumulative time 4.2 sec as compared to total run time of 148 sec). ```; Wed Nov 26 15:04:59 2014 profile.out; 5155120 function calls (5143582 primitive calls) in 148.280 seconds; Ordered by: cumulative time; List reduced from 3097 to 100 due to restriction <100>; ncalls tottime percall cumtime percall filename:lineno(function); 441/1 0.014 0.000 148.283 148.283 {built-in method exec}; 1 0.001 0.001 148.283 148.283 mcsolve-performance.py:1(<module>); 2 0.000 0.000 147.463 73.732 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:69(mcsolve); 2 0.000 0.000 147.411 73.706 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:446(run); 2 0.000 0.000 147.411 73.705 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:423(parallel); 2 0.011 0.006 147.411 73.705 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:415(serial); 1000 8.867 0.009 147.340 0.147 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:757(_mc_alg_evolve); 453518 1.543 0.000 130.497 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:376(integrate); 453518 127.846 0.000 128.245 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:859(run); 395940 0.709 0.000 74.413 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:747(step); 171960 4.219 0.000 4.219 0.000 {built-in method cy_expect_psi_csr}; ```,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64519867
https://github.com/qutip/qutip/pull/264#issuecomment-64519867:1249,Integrability,integrat,integrate,1249,Running it through the profiler suggests that cy_expect_psi_csr is only responsible for a small part of the time (accumulative time 4.2 sec as compared to total run time of 148 sec). ```; Wed Nov 26 15:04:59 2014 profile.out; 5155120 function calls (5143582 primitive calls) in 148.280 seconds; Ordered by: cumulative time; List reduced from 3097 to 100 due to restriction <100>; ncalls tottime percall cumtime percall filename:lineno(function); 441/1 0.014 0.000 148.283 148.283 {built-in method exec}; 1 0.001 0.001 148.283 148.283 mcsolve-performance.py:1(<module>); 2 0.000 0.000 147.463 73.732 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:69(mcsolve); 2 0.000 0.000 147.411 73.706 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:446(run); 2 0.000 0.000 147.411 73.705 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:423(parallel); 2 0.011 0.006 147.411 73.705 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:415(serial); 1000 8.867 0.009 147.340 0.147 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:757(_mc_alg_evolve); 453518 1.543 0.000 130.497 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:376(integrate); 453518 127.846 0.000 128.245 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:859(run); 395940 0.709 0.000 74.413 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:747(step); 171960 4.219 0.000 4.219 0.000 {built-in method cy_expect_psi_csr}; ```,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64519867
https://github.com/qutip/qutip/pull/264#issuecomment-64519867:1271,Integrability,integrat,integrate,1271,Running it through the profiler suggests that cy_expect_psi_csr is only responsible for a small part of the time (accumulative time 4.2 sec as compared to total run time of 148 sec). ```; Wed Nov 26 15:04:59 2014 profile.out; 5155120 function calls (5143582 primitive calls) in 148.280 seconds; Ordered by: cumulative time; List reduced from 3097 to 100 due to restriction <100>; ncalls tottime percall cumtime percall filename:lineno(function); 441/1 0.014 0.000 148.283 148.283 {built-in method exec}; 1 0.001 0.001 148.283 148.283 mcsolve-performance.py:1(<module>); 2 0.000 0.000 147.463 73.732 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:69(mcsolve); 2 0.000 0.000 147.411 73.706 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:446(run); 2 0.000 0.000 147.411 73.705 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:423(parallel); 2 0.011 0.006 147.411 73.705 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:415(serial); 1000 8.867 0.009 147.340 0.147 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:757(_mc_alg_evolve); 453518 1.543 0.000 130.497 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:376(integrate); 453518 127.846 0.000 128.245 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:859(run); 395940 0.709 0.000 74.413 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:747(step); 171960 4.219 0.000 4.219 0.000 {built-in method cy_expect_psi_csr}; ```,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64519867
https://github.com/qutip/qutip/pull/264#issuecomment-64519867:1380,Integrability,integrat,integrate,1380,Running it through the profiler suggests that cy_expect_psi_csr is only responsible for a small part of the time (accumulative time 4.2 sec as compared to total run time of 148 sec). ```; Wed Nov 26 15:04:59 2014 profile.out; 5155120 function calls (5143582 primitive calls) in 148.280 seconds; Ordered by: cumulative time; List reduced from 3097 to 100 due to restriction <100>; ncalls tottime percall cumtime percall filename:lineno(function); 441/1 0.014 0.000 148.283 148.283 {built-in method exec}; 1 0.001 0.001 148.283 148.283 mcsolve-performance.py:1(<module>); 2 0.000 0.000 147.463 73.732 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:69(mcsolve); 2 0.000 0.000 147.411 73.706 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:446(run); 2 0.000 0.000 147.411 73.705 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:423(parallel); 2 0.011 0.006 147.411 73.705 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:415(serial); 1000 8.867 0.009 147.340 0.147 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:757(_mc_alg_evolve); 453518 1.543 0.000 130.497 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:376(integrate); 453518 127.846 0.000 128.245 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:859(run); 395940 0.709 0.000 74.413 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:747(step); 171960 4.219 0.000 4.219 0.000 {built-in method cy_expect_psi_csr}; ```,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64519867
https://github.com/qutip/qutip/pull/264#issuecomment-64519867:1502,Integrability,integrat,integrate,1502,Running it through the profiler suggests that cy_expect_psi_csr is only responsible for a small part of the time (accumulative time 4.2 sec as compared to total run time of 148 sec). ```; Wed Nov 26 15:04:59 2014 profile.out; 5155120 function calls (5143582 primitive calls) in 148.280 seconds; Ordered by: cumulative time; List reduced from 3097 to 100 due to restriction <100>; ncalls tottime percall cumtime percall filename:lineno(function); 441/1 0.014 0.000 148.283 148.283 {built-in method exec}; 1 0.001 0.001 148.283 148.283 mcsolve-performance.py:1(<module>); 2 0.000 0.000 147.463 73.732 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:69(mcsolve); 2 0.000 0.000 147.411 73.706 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:446(run); 2 0.000 0.000 147.411 73.705 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:423(parallel); 2 0.011 0.006 147.411 73.705 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:415(serial); 1000 8.867 0.009 147.340 0.147 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:757(_mc_alg_evolve); 453518 1.543 0.000 130.497 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:376(integrate); 453518 127.846 0.000 128.245 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:859(run); 395940 0.709 0.000 74.413 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:747(step); 171960 4.219 0.000 4.219 0.000 {built-in method cy_expect_psi_csr}; ```,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64519867
https://github.com/qutip/qutip/pull/264#issuecomment-64519867:542,Performance,perform,performance,542,Running it through the profiler suggests that cy_expect_psi_csr is only responsible for a small part of the time (accumulative time 4.2 sec as compared to total run time of 148 sec). ```; Wed Nov 26 15:04:59 2014 profile.out; 5155120 function calls (5143582 primitive calls) in 148.280 seconds; Ordered by: cumulative time; List reduced from 3097 to 100 due to restriction <100>; ncalls tottime percall cumtime percall filename:lineno(function); 441/1 0.014 0.000 148.283 148.283 {built-in method exec}; 1 0.001 0.001 148.283 148.283 mcsolve-performance.py:1(<module>); 2 0.000 0.000 147.463 73.732 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:69(mcsolve); 2 0.000 0.000 147.411 73.706 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:446(run); 2 0.000 0.000 147.411 73.705 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:423(parallel); 2 0.011 0.006 147.411 73.705 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:415(serial); 1000 8.867 0.009 147.340 0.147 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:757(_mc_alg_evolve); 453518 1.543 0.000 130.497 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:376(integrate); 453518 127.846 0.000 128.245 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:859(run); 395940 0.709 0.000 74.413 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:747(step); 171960 4.219 0.000 4.219 0.000 {built-in method cy_expect_psi_csr}; ```,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64519867
https://github.com/qutip/qutip/pull/264#issuecomment-64520234:21,Integrability,depend,depends,21,Well the performance depends strongly on the number of elements in tlist. For the given example the only calls that change is the increased number of expectation value calculations and a larger number of times the overall for-loop is run.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64520234
https://github.com/qutip/qutip/pull/264#issuecomment-64520234:9,Performance,perform,performance,9,Well the performance depends strongly on the number of elements in tlist. For the given example the only calls that change is the increased number of expectation value calculations and a larger number of times the overall for-loop is run.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64520234
https://github.com/qutip/qutip/pull/264#issuecomment-64520821:138,Deployability,integrat,integrate,138,"It is not only the number of calls to expect that changes. It seems like the key difference in your example is the number of calls to ode.integrate, which are doubled in numbers and account for an additional 60 sec of wall time, out of which at most 3.7 is spent for calculating expectation values. Maybe the following can provide some additional clues. For `tlist = linspace(0, 10, 10)`. ```; ncalls tottime percall cumtime percall filename:lineno(function); ...; 500 2.669 0.005 39.053 0.078 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:757(_mc_alg_evolve); 163354 0.476 0.000 35.217 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:376(integrate); 163354 34.360 0.000 34.477 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:859(run); 157186 0.265 0.000 28.734 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:747(step); 533/1 0.004 0.000 0.761 0.761 <frozen importlib._bootstrap>:2234(_find_and_load); ```. For `tlist = linspace(0, 10, 100)`. ```; ncalls tottime percall cumtime percall filename:lineno(function); ...; 500 6.320 0.013 108.141 0.216 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:757(_mc_alg_evolve); 290347 0.887 0.000 95.006 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:376(integrate); 290347 93.419 0.000 93.705 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:859(run); 238940 0.414 0.000 45.467 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:747(step); 153438 3.721 0.000 3.721 0.000 {built-in method cy_expect_psi_csr}; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64520821
https://github.com/qutip/qutip/pull/264#issuecomment-64520821:682,Deployability,integrat,integrate,682,"It is not only the number of calls to expect that changes. It seems like the key difference in your example is the number of calls to ode.integrate, which are doubled in numbers and account for an additional 60 sec of wall time, out of which at most 3.7 is spent for calculating expectation values. Maybe the following can provide some additional clues. For `tlist = linspace(0, 10, 10)`. ```; ncalls tottime percall cumtime percall filename:lineno(function); ...; 500 2.669 0.005 39.053 0.078 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:757(_mc_alg_evolve); 163354 0.476 0.000 35.217 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:376(integrate); 163354 34.360 0.000 34.477 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:859(run); 157186 0.265 0.000 28.734 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:747(step); 533/1 0.004 0.000 0.761 0.761 <frozen importlib._bootstrap>:2234(_find_and_load); ```. For `tlist = linspace(0, 10, 100)`. ```; ncalls tottime percall cumtime percall filename:lineno(function); ...; 500 6.320 0.013 108.141 0.216 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:757(_mc_alg_evolve); 290347 0.887 0.000 95.006 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:376(integrate); 290347 93.419 0.000 93.705 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:859(run); 238940 0.414 0.000 45.467 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:747(step); 153438 3.721 0.000 3.721 0.000 {built-in method cy_expect_psi_csr}; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64520821
https://github.com/qutip/qutip/pull/264#issuecomment-64520821:704,Deployability,integrat,integrate,704,"It is not only the number of calls to expect that changes. It seems like the key difference in your example is the number of calls to ode.integrate, which are doubled in numbers and account for an additional 60 sec of wall time, out of which at most 3.7 is spent for calculating expectation values. Maybe the following can provide some additional clues. For `tlist = linspace(0, 10, 10)`. ```; ncalls tottime percall cumtime percall filename:lineno(function); ...; 500 2.669 0.005 39.053 0.078 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:757(_mc_alg_evolve); 163354 0.476 0.000 35.217 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:376(integrate); 163354 34.360 0.000 34.477 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:859(run); 157186 0.265 0.000 28.734 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:747(step); 533/1 0.004 0.000 0.761 0.761 <frozen importlib._bootstrap>:2234(_find_and_load); ```. For `tlist = linspace(0, 10, 100)`. ```; ncalls tottime percall cumtime percall filename:lineno(function); ...; 500 6.320 0.013 108.141 0.216 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:757(_mc_alg_evolve); 290347 0.887 0.000 95.006 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:376(integrate); 290347 93.419 0.000 93.705 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:859(run); 238940 0.414 0.000 45.467 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:747(step); 153438 3.721 0.000 3.721 0.000 {built-in method cy_expect_psi_csr}; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64520821
https://github.com/qutip/qutip/pull/264#issuecomment-64520821:811,Deployability,integrat,integrate,811,"It is not only the number of calls to expect that changes. It seems like the key difference in your example is the number of calls to ode.integrate, which are doubled in numbers and account for an additional 60 sec of wall time, out of which at most 3.7 is spent for calculating expectation values. Maybe the following can provide some additional clues. For `tlist = linspace(0, 10, 10)`. ```; ncalls tottime percall cumtime percall filename:lineno(function); ...; 500 2.669 0.005 39.053 0.078 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:757(_mc_alg_evolve); 163354 0.476 0.000 35.217 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:376(integrate); 163354 34.360 0.000 34.477 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:859(run); 157186 0.265 0.000 28.734 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:747(step); 533/1 0.004 0.000 0.761 0.761 <frozen importlib._bootstrap>:2234(_find_and_load); ```. For `tlist = linspace(0, 10, 100)`. ```; ncalls tottime percall cumtime percall filename:lineno(function); ...; 500 6.320 0.013 108.141 0.216 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:757(_mc_alg_evolve); 290347 0.887 0.000 95.006 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:376(integrate); 290347 93.419 0.000 93.705 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:859(run); 238940 0.414 0.000 45.467 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:747(step); 153438 3.721 0.000 3.721 0.000 {built-in method cy_expect_psi_csr}; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64520821
https://github.com/qutip/qutip/pull/264#issuecomment-64520821:933,Deployability,integrat,integrate,933,"It is not only the number of calls to expect that changes. It seems like the key difference in your example is the number of calls to ode.integrate, which are doubled in numbers and account for an additional 60 sec of wall time, out of which at most 3.7 is spent for calculating expectation values. Maybe the following can provide some additional clues. For `tlist = linspace(0, 10, 10)`. ```; ncalls tottime percall cumtime percall filename:lineno(function); ...; 500 2.669 0.005 39.053 0.078 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:757(_mc_alg_evolve); 163354 0.476 0.000 35.217 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:376(integrate); 163354 34.360 0.000 34.477 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:859(run); 157186 0.265 0.000 28.734 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:747(step); 533/1 0.004 0.000 0.761 0.761 <frozen importlib._bootstrap>:2234(_find_and_load); ```. For `tlist = linspace(0, 10, 100)`. ```; ncalls tottime percall cumtime percall filename:lineno(function); ...; 500 6.320 0.013 108.141 0.216 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:757(_mc_alg_evolve); 290347 0.887 0.000 95.006 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:376(integrate); 290347 93.419 0.000 93.705 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:859(run); 238940 0.414 0.000 45.467 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:747(step); 153438 3.721 0.000 3.721 0.000 {built-in method cy_expect_psi_csr}; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64520821
https://github.com/qutip/qutip/pull/264#issuecomment-64520821:1379,Deployability,integrat,integrate,1379,"It is not only the number of calls to expect that changes. It seems like the key difference in your example is the number of calls to ode.integrate, which are doubled in numbers and account for an additional 60 sec of wall time, out of which at most 3.7 is spent for calculating expectation values. Maybe the following can provide some additional clues. For `tlist = linspace(0, 10, 10)`. ```; ncalls tottime percall cumtime percall filename:lineno(function); ...; 500 2.669 0.005 39.053 0.078 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:757(_mc_alg_evolve); 163354 0.476 0.000 35.217 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:376(integrate); 163354 34.360 0.000 34.477 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:859(run); 157186 0.265 0.000 28.734 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:747(step); 533/1 0.004 0.000 0.761 0.761 <frozen importlib._bootstrap>:2234(_find_and_load); ```. For `tlist = linspace(0, 10, 100)`. ```; ncalls tottime percall cumtime percall filename:lineno(function); ...; 500 6.320 0.013 108.141 0.216 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:757(_mc_alg_evolve); 290347 0.887 0.000 95.006 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:376(integrate); 290347 93.419 0.000 93.705 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:859(run); 238940 0.414 0.000 45.467 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:747(step); 153438 3.721 0.000 3.721 0.000 {built-in method cy_expect_psi_csr}; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64520821
https://github.com/qutip/qutip/pull/264#issuecomment-64520821:1401,Deployability,integrat,integrate,1401,"It is not only the number of calls to expect that changes. It seems like the key difference in your example is the number of calls to ode.integrate, which are doubled in numbers and account for an additional 60 sec of wall time, out of which at most 3.7 is spent for calculating expectation values. Maybe the following can provide some additional clues. For `tlist = linspace(0, 10, 10)`. ```; ncalls tottime percall cumtime percall filename:lineno(function); ...; 500 2.669 0.005 39.053 0.078 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:757(_mc_alg_evolve); 163354 0.476 0.000 35.217 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:376(integrate); 163354 34.360 0.000 34.477 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:859(run); 157186 0.265 0.000 28.734 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:747(step); 533/1 0.004 0.000 0.761 0.761 <frozen importlib._bootstrap>:2234(_find_and_load); ```. For `tlist = linspace(0, 10, 100)`. ```; ncalls tottime percall cumtime percall filename:lineno(function); ...; 500 6.320 0.013 108.141 0.216 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:757(_mc_alg_evolve); 290347 0.887 0.000 95.006 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:376(integrate); 290347 93.419 0.000 93.705 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:859(run); 238940 0.414 0.000 45.467 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:747(step); 153438 3.721 0.000 3.721 0.000 {built-in method cy_expect_psi_csr}; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64520821
https://github.com/qutip/qutip/pull/264#issuecomment-64520821:1508,Deployability,integrat,integrate,1508,"It is not only the number of calls to expect that changes. It seems like the key difference in your example is the number of calls to ode.integrate, which are doubled in numbers and account for an additional 60 sec of wall time, out of which at most 3.7 is spent for calculating expectation values. Maybe the following can provide some additional clues. For `tlist = linspace(0, 10, 10)`. ```; ncalls tottime percall cumtime percall filename:lineno(function); ...; 500 2.669 0.005 39.053 0.078 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:757(_mc_alg_evolve); 163354 0.476 0.000 35.217 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:376(integrate); 163354 34.360 0.000 34.477 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:859(run); 157186 0.265 0.000 28.734 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:747(step); 533/1 0.004 0.000 0.761 0.761 <frozen importlib._bootstrap>:2234(_find_and_load); ```. For `tlist = linspace(0, 10, 100)`. ```; ncalls tottime percall cumtime percall filename:lineno(function); ...; 500 6.320 0.013 108.141 0.216 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:757(_mc_alg_evolve); 290347 0.887 0.000 95.006 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:376(integrate); 290347 93.419 0.000 93.705 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:859(run); 238940 0.414 0.000 45.467 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:747(step); 153438 3.721 0.000 3.721 0.000 {built-in method cy_expect_psi_csr}; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64520821
https://github.com/qutip/qutip/pull/264#issuecomment-64520821:1630,Deployability,integrat,integrate,1630,"It is not only the number of calls to expect that changes. It seems like the key difference in your example is the number of calls to ode.integrate, which are doubled in numbers and account for an additional 60 sec of wall time, out of which at most 3.7 is spent for calculating expectation values. Maybe the following can provide some additional clues. For `tlist = linspace(0, 10, 10)`. ```; ncalls tottime percall cumtime percall filename:lineno(function); ...; 500 2.669 0.005 39.053 0.078 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:757(_mc_alg_evolve); 163354 0.476 0.000 35.217 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:376(integrate); 163354 34.360 0.000 34.477 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:859(run); 157186 0.265 0.000 28.734 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:747(step); 533/1 0.004 0.000 0.761 0.761 <frozen importlib._bootstrap>:2234(_find_and_load); ```. For `tlist = linspace(0, 10, 100)`. ```; ncalls tottime percall cumtime percall filename:lineno(function); ...; 500 6.320 0.013 108.141 0.216 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:757(_mc_alg_evolve); 290347 0.887 0.000 95.006 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:376(integrate); 290347 93.419 0.000 93.705 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:859(run); 238940 0.414 0.000 45.467 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:747(step); 153438 3.721 0.000 3.721 0.000 {built-in method cy_expect_psi_csr}; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64520821
https://github.com/qutip/qutip/pull/264#issuecomment-64520821:138,Integrability,integrat,integrate,138,"It is not only the number of calls to expect that changes. It seems like the key difference in your example is the number of calls to ode.integrate, which are doubled in numbers and account for an additional 60 sec of wall time, out of which at most 3.7 is spent for calculating expectation values. Maybe the following can provide some additional clues. For `tlist = linspace(0, 10, 10)`. ```; ncalls tottime percall cumtime percall filename:lineno(function); ...; 500 2.669 0.005 39.053 0.078 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:757(_mc_alg_evolve); 163354 0.476 0.000 35.217 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:376(integrate); 163354 34.360 0.000 34.477 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:859(run); 157186 0.265 0.000 28.734 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:747(step); 533/1 0.004 0.000 0.761 0.761 <frozen importlib._bootstrap>:2234(_find_and_load); ```. For `tlist = linspace(0, 10, 100)`. ```; ncalls tottime percall cumtime percall filename:lineno(function); ...; 500 6.320 0.013 108.141 0.216 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:757(_mc_alg_evolve); 290347 0.887 0.000 95.006 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:376(integrate); 290347 93.419 0.000 93.705 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:859(run); 238940 0.414 0.000 45.467 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:747(step); 153438 3.721 0.000 3.721 0.000 {built-in method cy_expect_psi_csr}; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64520821
https://github.com/qutip/qutip/pull/264#issuecomment-64520821:682,Integrability,integrat,integrate,682,"It is not only the number of calls to expect that changes. It seems like the key difference in your example is the number of calls to ode.integrate, which are doubled in numbers and account for an additional 60 sec of wall time, out of which at most 3.7 is spent for calculating expectation values. Maybe the following can provide some additional clues. For `tlist = linspace(0, 10, 10)`. ```; ncalls tottime percall cumtime percall filename:lineno(function); ...; 500 2.669 0.005 39.053 0.078 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:757(_mc_alg_evolve); 163354 0.476 0.000 35.217 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:376(integrate); 163354 34.360 0.000 34.477 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:859(run); 157186 0.265 0.000 28.734 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:747(step); 533/1 0.004 0.000 0.761 0.761 <frozen importlib._bootstrap>:2234(_find_and_load); ```. For `tlist = linspace(0, 10, 100)`. ```; ncalls tottime percall cumtime percall filename:lineno(function); ...; 500 6.320 0.013 108.141 0.216 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:757(_mc_alg_evolve); 290347 0.887 0.000 95.006 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:376(integrate); 290347 93.419 0.000 93.705 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:859(run); 238940 0.414 0.000 45.467 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:747(step); 153438 3.721 0.000 3.721 0.000 {built-in method cy_expect_psi_csr}; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64520821
https://github.com/qutip/qutip/pull/264#issuecomment-64520821:704,Integrability,integrat,integrate,704,"It is not only the number of calls to expect that changes. It seems like the key difference in your example is the number of calls to ode.integrate, which are doubled in numbers and account for an additional 60 sec of wall time, out of which at most 3.7 is spent for calculating expectation values. Maybe the following can provide some additional clues. For `tlist = linspace(0, 10, 10)`. ```; ncalls tottime percall cumtime percall filename:lineno(function); ...; 500 2.669 0.005 39.053 0.078 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:757(_mc_alg_evolve); 163354 0.476 0.000 35.217 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:376(integrate); 163354 34.360 0.000 34.477 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:859(run); 157186 0.265 0.000 28.734 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:747(step); 533/1 0.004 0.000 0.761 0.761 <frozen importlib._bootstrap>:2234(_find_and_load); ```. For `tlist = linspace(0, 10, 100)`. ```; ncalls tottime percall cumtime percall filename:lineno(function); ...; 500 6.320 0.013 108.141 0.216 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:757(_mc_alg_evolve); 290347 0.887 0.000 95.006 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:376(integrate); 290347 93.419 0.000 93.705 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:859(run); 238940 0.414 0.000 45.467 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:747(step); 153438 3.721 0.000 3.721 0.000 {built-in method cy_expect_psi_csr}; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64520821
https://github.com/qutip/qutip/pull/264#issuecomment-64520821:811,Integrability,integrat,integrate,811,"It is not only the number of calls to expect that changes. It seems like the key difference in your example is the number of calls to ode.integrate, which are doubled in numbers and account for an additional 60 sec of wall time, out of which at most 3.7 is spent for calculating expectation values. Maybe the following can provide some additional clues. For `tlist = linspace(0, 10, 10)`. ```; ncalls tottime percall cumtime percall filename:lineno(function); ...; 500 2.669 0.005 39.053 0.078 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:757(_mc_alg_evolve); 163354 0.476 0.000 35.217 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:376(integrate); 163354 34.360 0.000 34.477 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:859(run); 157186 0.265 0.000 28.734 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:747(step); 533/1 0.004 0.000 0.761 0.761 <frozen importlib._bootstrap>:2234(_find_and_load); ```. For `tlist = linspace(0, 10, 100)`. ```; ncalls tottime percall cumtime percall filename:lineno(function); ...; 500 6.320 0.013 108.141 0.216 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:757(_mc_alg_evolve); 290347 0.887 0.000 95.006 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:376(integrate); 290347 93.419 0.000 93.705 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:859(run); 238940 0.414 0.000 45.467 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:747(step); 153438 3.721 0.000 3.721 0.000 {built-in method cy_expect_psi_csr}; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64520821
https://github.com/qutip/qutip/pull/264#issuecomment-64520821:933,Integrability,integrat,integrate,933,"It is not only the number of calls to expect that changes. It seems like the key difference in your example is the number of calls to ode.integrate, which are doubled in numbers and account for an additional 60 sec of wall time, out of which at most 3.7 is spent for calculating expectation values. Maybe the following can provide some additional clues. For `tlist = linspace(0, 10, 10)`. ```; ncalls tottime percall cumtime percall filename:lineno(function); ...; 500 2.669 0.005 39.053 0.078 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:757(_mc_alg_evolve); 163354 0.476 0.000 35.217 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:376(integrate); 163354 34.360 0.000 34.477 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:859(run); 157186 0.265 0.000 28.734 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:747(step); 533/1 0.004 0.000 0.761 0.761 <frozen importlib._bootstrap>:2234(_find_and_load); ```. For `tlist = linspace(0, 10, 100)`. ```; ncalls tottime percall cumtime percall filename:lineno(function); ...; 500 6.320 0.013 108.141 0.216 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:757(_mc_alg_evolve); 290347 0.887 0.000 95.006 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:376(integrate); 290347 93.419 0.000 93.705 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:859(run); 238940 0.414 0.000 45.467 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:747(step); 153438 3.721 0.000 3.721 0.000 {built-in method cy_expect_psi_csr}; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64520821
https://github.com/qutip/qutip/pull/264#issuecomment-64520821:1379,Integrability,integrat,integrate,1379,"It is not only the number of calls to expect that changes. It seems like the key difference in your example is the number of calls to ode.integrate, which are doubled in numbers and account for an additional 60 sec of wall time, out of which at most 3.7 is spent for calculating expectation values. Maybe the following can provide some additional clues. For `tlist = linspace(0, 10, 10)`. ```; ncalls tottime percall cumtime percall filename:lineno(function); ...; 500 2.669 0.005 39.053 0.078 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:757(_mc_alg_evolve); 163354 0.476 0.000 35.217 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:376(integrate); 163354 34.360 0.000 34.477 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:859(run); 157186 0.265 0.000 28.734 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:747(step); 533/1 0.004 0.000 0.761 0.761 <frozen importlib._bootstrap>:2234(_find_and_load); ```. For `tlist = linspace(0, 10, 100)`. ```; ncalls tottime percall cumtime percall filename:lineno(function); ...; 500 6.320 0.013 108.141 0.216 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:757(_mc_alg_evolve); 290347 0.887 0.000 95.006 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:376(integrate); 290347 93.419 0.000 93.705 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:859(run); 238940 0.414 0.000 45.467 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:747(step); 153438 3.721 0.000 3.721 0.000 {built-in method cy_expect_psi_csr}; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64520821
https://github.com/qutip/qutip/pull/264#issuecomment-64520821:1401,Integrability,integrat,integrate,1401,"It is not only the number of calls to expect that changes. It seems like the key difference in your example is the number of calls to ode.integrate, which are doubled in numbers and account for an additional 60 sec of wall time, out of which at most 3.7 is spent for calculating expectation values. Maybe the following can provide some additional clues. For `tlist = linspace(0, 10, 10)`. ```; ncalls tottime percall cumtime percall filename:lineno(function); ...; 500 2.669 0.005 39.053 0.078 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:757(_mc_alg_evolve); 163354 0.476 0.000 35.217 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:376(integrate); 163354 34.360 0.000 34.477 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:859(run); 157186 0.265 0.000 28.734 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:747(step); 533/1 0.004 0.000 0.761 0.761 <frozen importlib._bootstrap>:2234(_find_and_load); ```. For `tlist = linspace(0, 10, 100)`. ```; ncalls tottime percall cumtime percall filename:lineno(function); ...; 500 6.320 0.013 108.141 0.216 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:757(_mc_alg_evolve); 290347 0.887 0.000 95.006 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:376(integrate); 290347 93.419 0.000 93.705 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:859(run); 238940 0.414 0.000 45.467 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:747(step); 153438 3.721 0.000 3.721 0.000 {built-in method cy_expect_psi_csr}; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64520821
https://github.com/qutip/qutip/pull/264#issuecomment-64520821:1508,Integrability,integrat,integrate,1508,"It is not only the number of calls to expect that changes. It seems like the key difference in your example is the number of calls to ode.integrate, which are doubled in numbers and account for an additional 60 sec of wall time, out of which at most 3.7 is spent for calculating expectation values. Maybe the following can provide some additional clues. For `tlist = linspace(0, 10, 10)`. ```; ncalls tottime percall cumtime percall filename:lineno(function); ...; 500 2.669 0.005 39.053 0.078 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:757(_mc_alg_evolve); 163354 0.476 0.000 35.217 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:376(integrate); 163354 34.360 0.000 34.477 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:859(run); 157186 0.265 0.000 28.734 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:747(step); 533/1 0.004 0.000 0.761 0.761 <frozen importlib._bootstrap>:2234(_find_and_load); ```. For `tlist = linspace(0, 10, 100)`. ```; ncalls tottime percall cumtime percall filename:lineno(function); ...; 500 6.320 0.013 108.141 0.216 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:757(_mc_alg_evolve); 290347 0.887 0.000 95.006 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:376(integrate); 290347 93.419 0.000 93.705 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:859(run); 238940 0.414 0.000 45.467 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:747(step); 153438 3.721 0.000 3.721 0.000 {built-in method cy_expect_psi_csr}; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64520821
https://github.com/qutip/qutip/pull/264#issuecomment-64520821:1630,Integrability,integrat,integrate,1630,"It is not only the number of calls to expect that changes. It seems like the key difference in your example is the number of calls to ode.integrate, which are doubled in numbers and account for an additional 60 sec of wall time, out of which at most 3.7 is spent for calculating expectation values. Maybe the following can provide some additional clues. For `tlist = linspace(0, 10, 10)`. ```; ncalls tottime percall cumtime percall filename:lineno(function); ...; 500 2.669 0.005 39.053 0.078 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:757(_mc_alg_evolve); 163354 0.476 0.000 35.217 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:376(integrate); 163354 34.360 0.000 34.477 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:859(run); 157186 0.265 0.000 28.734 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:747(step); 533/1 0.004 0.000 0.761 0.761 <frozen importlib._bootstrap>:2234(_find_and_load); ```. For `tlist = linspace(0, 10, 100)`. ```; ncalls tottime percall cumtime percall filename:lineno(function); ...; 500 6.320 0.013 108.141 0.216 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:757(_mc_alg_evolve); 290347 0.887 0.000 95.006 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:376(integrate); 290347 93.419 0.000 93.705 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:859(run); 238940 0.414 0.000 45.467 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:747(step); 153438 3.721 0.000 3.721 0.000 {built-in method cy_expect_psi_csr}; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64520821
https://github.com/qutip/qutip/pull/264#issuecomment-64521594:28,Deployability,integrat,integrate,28,I believe a bad call to the integrate command was responsible.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64521594
https://github.com/qutip/qutip/pull/264#issuecomment-64521594:28,Integrability,integrat,integrate,28,I believe a bad call to the integrate command was responsible.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64521594
https://github.com/qutip/qutip/pull/264#issuecomment-64523119:119,Deployability,integrat,integrate,119,"I believe the issue is on lines 833-835:. ``` python. if ODE.t > tlist[k]:; ODE.set_initial_value(y_prev, t_prev); ODE.integrate(tlist[k], step=0); ```. removing these lines gives similar performance.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64523119
https://github.com/qutip/qutip/pull/264#issuecomment-64523119:119,Integrability,integrat,integrate,119,"I believe the issue is on lines 833-835:. ``` python. if ODE.t > tlist[k]:; ODE.set_initial_value(y_prev, t_prev); ODE.integrate(tlist[k], step=0); ```. removing these lines gives similar performance.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64523119
https://github.com/qutip/qutip/pull/264#issuecomment-64523119:188,Performance,perform,performance,188,"I believe the issue is on lines 833-835:. ``` python. if ODE.t > tlist[k]:; ODE.set_initial_value(y_prev, t_prev); ODE.integrate(tlist[k], step=0); ```. removing these lines gives similar performance.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64523119
https://github.com/qutip/qutip/pull/264#issuecomment-64601865:295,Deployability,integrat,integrator,295,I have found the issue. The wrapper to zvode provided by scipy does not allow for setting itask=5 in the single step mode. This mode does not overshoot the endpoint of the interval like mode 2 which is the fixed mode in scipy. One must also bypass much of the scipy code to efficently reset the integrator. I will begin working on both and work on sending a pull to the scipy people. In the mean time we could probably overload the builtin class to get what we want before scipy gets around to it.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64601865
https://github.com/qutip/qutip/pull/264#issuecomment-64601865:28,Integrability,wrap,wrapper,28,I have found the issue. The wrapper to zvode provided by scipy does not allow for setting itask=5 in the single step mode. This mode does not overshoot the endpoint of the interval like mode 2 which is the fixed mode in scipy. One must also bypass much of the scipy code to efficently reset the integrator. I will begin working on both and work on sending a pull to the scipy people. In the mean time we could probably overload the builtin class to get what we want before scipy gets around to it.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64601865
https://github.com/qutip/qutip/pull/264#issuecomment-64601865:295,Integrability,integrat,integrator,295,I have found the issue. The wrapper to zvode provided by scipy does not allow for setting itask=5 in the single step mode. This mode does not overshoot the endpoint of the interval like mode 2 which is the fixed mode in scipy. One must also bypass much of the scipy code to efficently reset the integrator. I will begin working on both and work on sending a pull to the scipy people. In the mean time we could probably overload the builtin class to get what we want before scipy gets around to it.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64601865
https://github.com/qutip/qutip/pull/264#issuecomment-64745841:90,Testability,benchmark,benchmark,90,"The mcsolver should be quite a bit faster now. Using the code in my previous comment as a benchmark, I am getting ~6.8 sec for the mcsolver vs. ~4.2 for the mcsolve_f90 code. So within a factor of 2 from pure fortran. Not bad.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64745841
https://github.com/qutip/qutip/pull/264#issuecomment-64838151:51,Performance,optimiz,optimize,51,"The last thing that needs to be done is too better optimize the parallel processing. Right now we spawn ntraj threads, each creating a ODE instance. This is major overkill since we really need a single instance per thread.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64838151
https://github.com/qutip/qutip/pull/264#issuecomment-65020496:271,Performance,perform,performance,271,"Nice speed up! Is there anything here that we could also benefit from in mesolve? Or is it specific to mcsolve in that it mostly affect the ODE restart?. I doubt that the initial setup of an ODE instance before spawning processes would have any significant impact on the performance (note that multiprocessing does not use threads, it uses processes, so there is no sharing of ODE instances between processes). Creating the ODE instance once in the parent process, or N times in N processes in parallel therefore should not make much difference, if any.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-65020496
https://github.com/qutip/qutip/pull/264#issuecomment-65020643:59,Deployability,update,update,59,"I do not think that much can be done for the mesolver. The update here ; just addresses the resetting of the ODE solver, which is not done in the ; mesolver. I still think that spawning ntraj processes is not a very ; efficient thing to do. So I am working on cleaning that up. However, ; you are correct, moving the ODE creation outside of the mc_alg routine ; does have little effect. > Robert Johansson mailto:notifications@github.com; > December 1, 2014 at 13:48; > ; > Nice speed up! Is there anything here that we could also benefit from ; > in mesolve? Or is it specific to mcsolve in that it mostly affect the ; > ODE restart?; > ; > I doubt that the initial setup of an ODE instance before spawning ; > processes would have any significant impact on the performance (note ; > that multiprocessing does not use threads, it uses processes, so there ; > is no sharing of ODE instances between processes). Creating the ODE ; > instance once in the parent processor, or N times in N processes in ; > parallel therefore should not make much difference, if any.; > ; > —; > Reply to this email directly or view it on GitHub ; > https://github.com/qutip/qutip/pull/264#issuecomment-65020496.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-65020643
https://github.com/qutip/qutip/pull/264#issuecomment-65020643:218,Energy Efficiency,efficient,efficient,218,"I do not think that much can be done for the mesolver. The update here ; just addresses the resetting of the ODE solver, which is not done in the ; mesolver. I still think that spawning ntraj processes is not a very ; efficient thing to do. So I am working on cleaning that up. However, ; you are correct, moving the ODE creation outside of the mc_alg routine ; does have little effect. > Robert Johansson mailto:notifications@github.com; > December 1, 2014 at 13:48; > ; > Nice speed up! Is there anything here that we could also benefit from ; > in mesolve? Or is it specific to mcsolve in that it mostly affect the ; > ODE restart?; > ; > I doubt that the initial setup of an ODE instance before spawning ; > processes would have any significant impact on the performance (note ; > that multiprocessing does not use threads, it uses processes, so there ; > is no sharing of ODE instances between processes). Creating the ODE ; > instance once in the parent processor, or N times in N processes in ; > parallel therefore should not make much difference, if any.; > ; > —; > Reply to this email directly or view it on GitHub ; > https://github.com/qutip/qutip/pull/264#issuecomment-65020496.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-65020643
https://github.com/qutip/qutip/pull/264#issuecomment-65020643:352,Integrability,rout,routine,352,"I do not think that much can be done for the mesolver. The update here ; just addresses the resetting of the ODE solver, which is not done in the ; mesolver. I still think that spawning ntraj processes is not a very ; efficient thing to do. So I am working on cleaning that up. However, ; you are correct, moving the ODE creation outside of the mc_alg routine ; does have little effect. > Robert Johansson mailto:notifications@github.com; > December 1, 2014 at 13:48; > ; > Nice speed up! Is there anything here that we could also benefit from ; > in mesolve? Or is it specific to mcsolve in that it mostly affect the ; > ODE restart?; > ; > I doubt that the initial setup of an ODE instance before spawning ; > processes would have any significant impact on the performance (note ; > that multiprocessing does not use threads, it uses processes, so there ; > is no sharing of ODE instances between processes). Creating the ODE ; > instance once in the parent processor, or N times in N processes in ; > parallel therefore should not make much difference, if any.; > ; > —; > Reply to this email directly or view it on GitHub ; > https://github.com/qutip/qutip/pull/264#issuecomment-65020496.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-65020643
https://github.com/qutip/qutip/pull/264#issuecomment-65020643:763,Performance,perform,performance,763,"I do not think that much can be done for the mesolver. The update here ; just addresses the resetting of the ODE solver, which is not done in the ; mesolver. I still think that spawning ntraj processes is not a very ; efficient thing to do. So I am working on cleaning that up. However, ; you are correct, moving the ODE creation outside of the mc_alg routine ; does have little effect. > Robert Johansson mailto:notifications@github.com; > December 1, 2014 at 13:48; > ; > Nice speed up! Is there anything here that we could also benefit from ; > in mesolve? Or is it specific to mcsolve in that it mostly affect the ; > ODE restart?; > ; > I doubt that the initial setup of an ODE instance before spawning ; > processes would have any significant impact on the performance (note ; > that multiprocessing does not use threads, it uses processes, so there ; > is no sharing of ODE instances between processes). Creating the ODE ; > instance once in the parent processor, or N times in N processes in ; > parallel therefore should not make much difference, if any.; > ; > —; > Reply to this email directly or view it on GitHub ; > https://github.com/qutip/qutip/pull/264#issuecomment-65020496.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-65020643
https://github.com/qutip/qutip/pull/264#issuecomment-65020826:97,Deployability,integrat,integrated,97,"OK, I see. If you are refactoring the parallelization of the mcsolve (which is currently tightly integrated in the mc code and quite messy) I would strongly recommend and lobby for using the new parallel_map API, and do away with all multiprocessing code in the mcsolve module and not using the callback function. I think this could make the mcsolve module vastly more readable and easier to maintain.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-65020826
https://github.com/qutip/qutip/pull/264#issuecomment-65020826:97,Integrability,integrat,integrated,97,"OK, I see. If you are refactoring the parallelization of the mcsolve (which is currently tightly integrated in the mc code and quite messy) I would strongly recommend and lobby for using the new parallel_map API, and do away with all multiprocessing code in the mcsolve module and not using the callback function. I think this could make the mcsolve module vastly more readable and easier to maintain.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-65020826
https://github.com/qutip/qutip/pull/264#issuecomment-65020826:22,Modifiability,refactor,refactoring,22,"OK, I see. If you are refactoring the parallelization of the mcsolve (which is currently tightly integrated in the mc code and quite messy) I would strongly recommend and lobby for using the new parallel_map API, and do away with all multiprocessing code in the mcsolve module and not using the callback function. I think this could make the mcsolve module vastly more readable and easier to maintain.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-65020826
https://github.com/qutip/qutip/pull/264#issuecomment-65052972:38,Performance,perform,performance,38,"Yes, it is a code clean-up issue, not performance related (since the time spent on setting up multiprocessing is negligible compared to the compute time we don't have anything much to gain here). But factoring out multiprocessing from mcsolve is nonetheless something I think would be important, but obviously not necessary for this PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-65052972
https://github.com/qutip/qutip/pull/264#issuecomment-65174258:98,Deployability,release,release,98,"Also, I agree that the code cleanup of the mcsolver is in order. But this can wait until the next release 3.2.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-65174258
https://github.com/qutip/qutip/issues/265#issuecomment-64202123:418,Availability,down,down,418,"Thanks for reporting this. Yes, we certainly want the installation to be smooth on osx... Exactly what problems did you have with macports and xcode? I've got thing running on yosemite and macports, so that's certainly possible, but I have not installed this environment from scratch in a long while, so I don't know what difficulties you might encounter when doing this. . I've not used brew myself, but if you wrote down the steps you had to do to set up things with brew we could provide these as an alternative install path.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/265#issuecomment-64202123
https://github.com/qutip/qutip/issues/265#issuecomment-64202123:54,Deployability,install,installation,54,"Thanks for reporting this. Yes, we certainly want the installation to be smooth on osx... Exactly what problems did you have with macports and xcode? I've got thing running on yosemite and macports, so that's certainly possible, but I have not installed this environment from scratch in a long while, so I don't know what difficulties you might encounter when doing this. . I've not used brew myself, but if you wrote down the steps you had to do to set up things with brew we could provide these as an alternative install path.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/265#issuecomment-64202123
https://github.com/qutip/qutip/issues/265#issuecomment-64202123:244,Deployability,install,installed,244,"Thanks for reporting this. Yes, we certainly want the installation to be smooth on osx... Exactly what problems did you have with macports and xcode? I've got thing running on yosemite and macports, so that's certainly possible, but I have not installed this environment from scratch in a long while, so I don't know what difficulties you might encounter when doing this. . I've not used brew myself, but if you wrote down the steps you had to do to set up things with brew we could provide these as an alternative install path.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/265#issuecomment-64202123
https://github.com/qutip/qutip/issues/265#issuecomment-64202123:515,Deployability,install,install,515,"Thanks for reporting this. Yes, we certainly want the installation to be smooth on osx... Exactly what problems did you have with macports and xcode? I've got thing running on yosemite and macports, so that's certainly possible, but I have not installed this environment from scratch in a long while, so I don't know what difficulties you might encounter when doing this. . I've not used brew myself, but if you wrote down the steps you had to do to set up things with brew we could provide these as an alternative install path.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/265#issuecomment-64202123
https://github.com/qutip/qutip/issues/265#issuecomment-64205641:68,Availability,error,error,68,"I am afraid it was last week, and I can't remember the details. The error was always related to OSX version mavericks or later not being compatible with gcc48.; Again these steps may not be exact, but this is what I think we did:; 1. Install HomeBrew; ruby -e ""$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)""; 2. Install scipy and cython; brew install scipy; brew install cython",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/265#issuecomment-64205641
https://github.com/qutip/qutip/issues/265#issuecomment-64205641:234,Deployability,Install,Install,234,"I am afraid it was last week, and I can't remember the details. The error was always related to OSX version mavericks or later not being compatible with gcc48.; Again these steps may not be exact, but this is what I think we did:; 1. Install HomeBrew; ruby -e ""$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)""; 2. Install scipy and cython; brew install scipy; brew install cython",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/265#issuecomment-64205641
https://github.com/qutip/qutip/issues/265#issuecomment-64205641:317,Deployability,install,install,317,"I am afraid it was last week, and I can't remember the details. The error was always related to OSX version mavericks or later not being compatible with gcc48.; Again these steps may not be exact, but this is what I think we did:; 1. Install HomeBrew; ruby -e ""$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)""; 2. Install scipy and cython; brew install scipy; brew install cython",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/265#issuecomment-64205641
https://github.com/qutip/qutip/issues/265#issuecomment-64205641:332,Deployability,install,install,332,"I am afraid it was last week, and I can't remember the details. The error was always related to OSX version mavericks or later not being compatible with gcc48.; Again these steps may not be exact, but this is what I think we did:; 1. Install HomeBrew; ruby -e ""$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)""; 2. Install scipy and cython; brew install scipy; brew install cython",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/265#issuecomment-64205641
https://github.com/qutip/qutip/issues/265#issuecomment-64205641:346,Deployability,Install,Install,346,"I am afraid it was last week, and I can't remember the details. The error was always related to OSX version mavericks or later not being compatible with gcc48.; Again these steps may not be exact, but this is what I think we did:; 1. Install HomeBrew; ruby -e ""$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)""; 2. Install scipy and cython; brew install scipy; brew install cython",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/265#issuecomment-64205641
https://github.com/qutip/qutip/issues/265#issuecomment-64205641:377,Deployability,install,install,377,"I am afraid it was last week, and I can't remember the details. The error was always related to OSX version mavericks or later not being compatible with gcc48.; Again these steps may not be exact, but this is what I think we did:; 1. Install HomeBrew; ruby -e ""$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)""; 2. Install scipy and cython; brew install scipy; brew install cython",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/265#issuecomment-64205641
https://github.com/qutip/qutip/issues/265#issuecomment-64205641:397,Deployability,install,install,397,"I am afraid it was last week, and I can't remember the details. The error was always related to OSX version mavericks or later not being compatible with gcc48.; Again these steps may not be exact, but this is what I think we did:; 1. Install HomeBrew; ruby -e ""$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)""; 2. Install scipy and cython; brew install scipy; brew install cython",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/265#issuecomment-64205641
https://github.com/qutip/qutip/pull/266#issuecomment-64317662:217,Testability,test,test-multiprocessing,217,[![Coverage Status](https://coveralls.io/builds/1523226/badge)](https://coveralls.io/builds/1523226). Coverage decreased (-1.06%) when pulling **d8f64c773c474bbfb5210a77be3243d8410511d1 on jrjohansson:stochastic-unit-test-multiprocessing** into **53e6c98c12d746e732b22346002dcdec26378ab2 on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/266#issuecomment-64317662
https://github.com/qutip/qutip/pull/268#issuecomment-65021685:259,Availability,down,down,259,"I'll go on and do that, then. Just to summarize, this came up in finding a channel that represents tensoring a state with a preparation of an ancilla, evolving according to a larger channel, then partial tracing out the ancilla. That last step can be written down as a contraction of the indices of a superoperator, giving a rectangular supermatrix representation.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/268#issuecomment-65021685
https://github.com/qutip/qutip/pull/268#issuecomment-65021685:269,Integrability,contract,contraction,269,"I'll go on and do that, then. Just to summarize, this came up in finding a channel that represents tensoring a state with a preparation of an ancilla, evolving according to a larger channel, then partial tracing out the ancilla. That last step can be written down as a contraction of the indices of a superoperator, giving a rectangular supermatrix representation.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/268#issuecomment-65021685
https://github.com/qutip/qutip/pull/268#issuecomment-65026154:14,Usability,simpl,simple,14,"OK, [here's a simple notebook](http://nbviewer.ipython.org/gist/cgranade/14670f05bc384dc2df01) illustrating this PR, using a bit of other functionality I was planning on contributing later, but that helps in making the example clear.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/268#issuecomment-65026154
https://github.com/qutip/qutip/pull/268#issuecomment-65026154:227,Usability,clear,clear,227,"OK, [here's a simple notebook](http://nbviewer.ipython.org/gist/cgranade/14670f05bc384dc2df01) illustrating this PR, using a bit of other functionality I was planning on contributing later, but that helps in making the example clear.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/268#issuecomment-65026154
https://github.com/qutip/qutip/pull/268#issuecomment-65368470:319,Integrability,contract,contraction,319,"Could you comment on the difference between. ```; qt.tensor_contract(qt.to_super(qt.cnot()), (1, 3)) * s_prep; ```. and. ```; s_prep.dag() * qt.to_super(qt.cnot()) * s_prep; ```. ? These does not give the same results, and I'm not saying that they should, I just wonder about the physical interpretation doing a tensor contraction on a superoperator. Can it be thought of as a projection on the superoperator level, in analogy to projecting an operator using something like `P.dag() * O * P` ?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/268#issuecomment-65368470
https://github.com/qutip/qutip/pull/268#issuecomment-65412516:146,Integrability,contract,contraction,146,"The difference between those two lines is that left-multiplication by `s_prep.dag()` will project onto the prepared ancilla state, whereas tensor contraction will implement partial trace over the ancilla; they're both perfectly valid channels (up to normalization in the projection case), but have subtly different physical interpretations. I can explain that better in the notebook, and submit as a PR, then. There's some plotting code there as well that I was planning on cleaning up better for a later PR to QuTiP, but I can clean it up now and include it if you like, so that I can simply use it in the tutorial notebook without a page of function definitions first.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/268#issuecomment-65412516
https://github.com/qutip/qutip/pull/268#issuecomment-65412516:586,Usability,simpl,simply,586,"The difference between those two lines is that left-multiplication by `s_prep.dag()` will project onto the prepared ancilla state, whereas tensor contraction will implement partial trace over the ancilla; they're both perfectly valid channels (up to normalization in the projection case), but have subtly different physical interpretations. I can explain that better in the notebook, and submit as a PR, then. There's some plotting code there as well that I was planning on cleaning up better for a later PR to QuTiP, but I can clean it up now and include it if you like, so that I can simply use it in the tutorial notebook without a page of function definitions first.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/268#issuecomment-65412516
https://github.com/qutip/qutip/pull/268#issuecomment-65413267:437,Integrability,depend,dependency,437,"OK, I think I understand. But it would be great with more info on this in the notebook as you suggest. Looking forward to that. Yes, to keep the tutorial notebook clean I think it would a good idea to add the plotting functions to qutip.visualization, if they are reasonably general purpose. Also, we have a version of the hinton graph i qutip.visualization, so if you can use it (or fix it up so that you can use it) you can remove the dependency on mpl_tools in the notebook, if you wish.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/268#issuecomment-65413267
https://github.com/qutip/qutip/pull/268#issuecomment-65416492:133,Security,access,accessibility,133,"Sounds good, I'll add superoperator support to `hinton()`, then. I had used the mpltools version for the rough writeup partially for accessibility reasons: those plots were originally for presenting to colorblind users, and so I couldn't use the red/blue colormap. ddf9ae3 should enable this, then. Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/268#issuecomment-65416492
https://github.com/qutip/qutip/issues/269#issuecomment-65179998:43,Deployability,install,installation,43,Note that I have removed my previous qutip installation and did a fresh install to verify.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/269#issuecomment-65179998
https://github.com/qutip/qutip/issues/269#issuecomment-65179998:72,Deployability,install,install,72,Note that I have removed my previous qutip installation and did a fresh install to verify.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/269#issuecomment-65179998
https://github.com/qutip/qutip/pull/271#issuecomment-65347711:210,Deployability,update,updates,210,[![Coverage Status](https://coveralls.io/builds/1558211/badge)](https://coveralls.io/builds/1558211). Coverage decreased (-0.05%) when pulling **2b8ccd0fbcdd5a49a861feeef4b7fcd064d17326 on jrjohansson:parallel-updates** into **f4cb22d03d23d44debcd3513ded09f71c43a167c on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/271#issuecomment-65347711
https://github.com/qutip/qutip/pull/272#issuecomment-67125235:346,Energy Efficiency,efficient,efficient,346,"@nonhermitian could you please have a look at _pseudo_inverse_sparse when you have time, and see if you can think of any better way of doing this, from your experience with optimizing the steadystate solver? Would an iterative method make sense here? I basically run into memory problems quite quickly when using splu (which seems to be the most efficient method by far for this particular problem, according to my tests).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/272#issuecomment-67125235
https://github.com/qutip/qutip/pull/272#issuecomment-67125235:173,Performance,optimiz,optimizing,173,"@nonhermitian could you please have a look at _pseudo_inverse_sparse when you have time, and see if you can think of any better way of doing this, from your experience with optimizing the steadystate solver? Would an iterative method make sense here? I basically run into memory problems quite quickly when using splu (which seems to be the most efficient method by far for this particular problem, according to my tests).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/272#issuecomment-67125235
https://github.com/qutip/qutip/pull/272#issuecomment-67125235:415,Testability,test,tests,415,"@nonhermitian could you please have a look at _pseudo_inverse_sparse when you have time, and see if you can think of any better way of doing this, from your experience with optimizing the steadystate solver? Would an iterative method make sense here? I basically run into memory problems quite quickly when using splu (which seems to be the most efficient method by far for this particular problem, according to my tests).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/272#issuecomment-67125235
https://github.com/qutip/qutip/pull/272#issuecomment-67448877:64,Safety,avoid,avoided,64,"Having looked around a bit, it seems that the inverse should be avoided in general. The output is always dense, even for a sparse input. Perhaps there is a better way of calculating. https://github.com/jrjohansson/qutip/blob/counting-statistics/qutip/countstat.py#L150. that avoids finding the inverse?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/272#issuecomment-67448877
https://github.com/qutip/qutip/pull/272#issuecomment-67448877:275,Safety,avoid,avoids,275,"Having looked around a bit, it seems that the inverse should be avoided in general. The output is always dense, even for a sparse input. Perhaps there is a better way of calculating. https://github.com/jrjohansson/qutip/blob/counting-statistics/qutip/countstat.py#L150. that avoids finding the inverse?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/272#issuecomment-67448877
https://github.com/qutip/qutip/issues/274#issuecomment-65739721:36,Testability,log,logger,36,This seems to be independent of the logger as it occurs for qutip 3.0.1 as well.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/274#issuecomment-65739721
https://github.com/qutip/qutip/issues/274#issuecomment-65740568:249,Testability,test,tests,249,"It seems that this is a warning that is generated only on Windows due to the multiprocessing not being behind a `__name__=='__main__'` statement. Oddly though, this should not be needed as our multiprocessing code is inside a class method. The unit tests still pass, so perhaps just disabling the warning for the mcsolver function and then reenabling at the end is a suitable workaround?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/274#issuecomment-65740568
https://github.com/qutip/qutip/issues/274#issuecomment-66575881:274,Availability,down,down,274,"I guess disabling warnings would be OK, but I don't particularly like putting win work-arounds in the general code base.. multiprocessing on windows will always be a pain in the neck.. Anyways, is there anything we can do on this now for 3.1 or should we just kick this can down the road?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/274#issuecomment-66575881
https://github.com/qutip/qutip/issues/274#issuecomment-66576350:116,Testability,test,test,116,"OK, I see. Oh well, I guess we should trying to restore multiprocessing windows.. Do you have a windows computer to test it on?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/274#issuecomment-66576350
https://github.com/qutip/qutip/issues/274#issuecomment-66576471:217,Testability,test,test,217,"Yes. Sadly having a windows machine is a requirement here in Korea :(. Robert Johansson wrote:. > OK, I see. Oh well, I guess we should trying to restore; > multiprocessing windows.. Do you have a windows computer to test it on?; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/issues/274#issuecomment-66576350.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/274#issuecomment-66576471
https://github.com/qutip/qutip/pull/275#issuecomment-65736185:12,Deployability,update,update,12,I will also update the mcsolver to output both states and expect values in this pull.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/275#issuecomment-65736185
https://github.com/qutip/qutip/pull/275#issuecomment-65740758:20,Testability,test,test,20,Let me add one more test for the sorting of ntraj when inputting a list.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/275#issuecomment-65740758
https://github.com/qutip/qutip/pull/276#issuecomment-65739997:201,Modifiability,refactor,refactor-mcsolve-parallel,201,[![Coverage Status](https://coveralls.io/builds/1566656/badge)](https://coveralls.io/builds/1566656). Coverage decreased (-0.58%) when pulling **9dd4d43cc1b04894b7f7513425c594beccd0984d on jrjohansson:refactor-mcsolve-parallel** into **79c89f066522c8343a1cd0cdcd7bca2e9625db2a on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/276#issuecomment-65739997
https://github.com/qutip/qutip/pull/276#issuecomment-65741485:201,Modifiability,refactor,refactor-mcsolve-parallel,201,[![Coverage Status](https://coveralls.io/builds/1566697/badge)](https://coveralls.io/builds/1566697). Coverage decreased (-0.56%) when pulling **2255544d231c8c27d9221ba366b7842dbb37bcf6 on jrjohansson:refactor-mcsolve-parallel** into **79c89f066522c8343a1cd0cdcd7bca2e9625db2a on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/276#issuecomment-65741485
https://github.com/qutip/qutip/pull/276#issuecomment-65765723:201,Modifiability,refactor,refactor-mcsolve-parallel,201,[![Coverage Status](https://coveralls.io/builds/1567605/badge)](https://coveralls.io/builds/1567605). Coverage decreased (-0.49%) when pulling **6c04ce3700be46a4ca49d74490c2e5c16f8fd4f8 on jrjohansson:refactor-mcsolve-parallel** into **98fe91d9fe9c37b13835c21a12bd237bbab42c8f on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/276#issuecomment-65765723
https://github.com/qutip/qutip/pull/276#issuecomment-65777213:201,Modifiability,refactor,refactor-mcsolve-parallel,201,[![Coverage Status](https://coveralls.io/builds/1568019/badge)](https://coveralls.io/builds/1568019). Coverage decreased (-0.55%) when pulling **c5c4ff11b39c2243126d8d9149befec0a7f9c39f on jrjohansson:refactor-mcsolve-parallel** into **74c548dc64c377c8e21dfcf662ea7017b97306c3 on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/276#issuecomment-65777213
https://github.com/qutip/qutip/pull/276#issuecomment-65778609:201,Modifiability,refactor,refactor-mcsolve-parallel,201,[![Coverage Status](https://coveralls.io/builds/1568060/badge)](https://coveralls.io/builds/1568060). Coverage decreased (-0.55%) when pulling **c5c4ff11b39c2243126d8d9149befec0a7f9c39f on jrjohansson:refactor-mcsolve-parallel** into **74c548dc64c377c8e21dfcf662ea7017b97306c3 on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/276#issuecomment-65778609
https://github.com/qutip/qutip/pull/276#issuecomment-66394630:201,Modifiability,refactor,refactor-mcsolve-parallel,201,[![Coverage Status](https://coveralls.io/builds/1588549/badge)](https://coveralls.io/builds/1588549). Coverage decreased (-0.55%) when pulling **aabbc2590895552d4b96cd2f42fb401ce6d0d80e on jrjohansson:refactor-mcsolve-parallel** into **6d186dfa7a1086ffa591670e25698e8668eaaeeb on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/276#issuecomment-66394630
https://github.com/qutip/qutip/pull/276#issuecomment-66395472:217,Performance,perform,performance,217,"@nonhermitian please review and test this PR. As far as I have seen it my test it works well, but it would be great if you could try this PR on some other mcsolve example. Perhaps paying special attention to possible performance regressions, although I think there shouldn't be any, but who knows.. With this PR mcsolve can also be used with the IPython.parallel framework. Here are some examples:. http://nbviewer.ipython.org/gist/jrjohansson/f37aa019080f8fb84c46",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/276#issuecomment-66395472
https://github.com/qutip/qutip/pull/276#issuecomment-66395472:32,Testability,test,test,32,"@nonhermitian please review and test this PR. As far as I have seen it my test it works well, but it would be great if you could try this PR on some other mcsolve example. Perhaps paying special attention to possible performance regressions, although I think there shouldn't be any, but who knows.. With this PR mcsolve can also be used with the IPython.parallel framework. Here are some examples:. http://nbviewer.ipython.org/gist/jrjohansson/f37aa019080f8fb84c46",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/276#issuecomment-66395472
https://github.com/qutip/qutip/pull/276#issuecomment-66395472:74,Testability,test,test,74,"@nonhermitian please review and test this PR. As far as I have seen it my test it works well, but it would be great if you could try this PR on some other mcsolve example. Perhaps paying special attention to possible performance regressions, although I think there shouldn't be any, but who knows.. With this PR mcsolve can also be used with the IPython.parallel framework. Here are some examples:. http://nbviewer.ipython.org/gist/jrjohansson/f37aa019080f8fb84c46",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/276#issuecomment-66395472
https://github.com/qutip/qutip/pull/276#issuecomment-66558727:20,Availability,error,error,20,I get the following error when trying to use the ip_parallel_map:. ```; FileNotFoundError: [Errno 2] No such file or directory: '/home/paul/.ipython/profile_default/security/ipcontroller-client.json'; ```. Everything else works as expected.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/276#issuecomment-66558727
https://github.com/qutip/qutip/pull/276#issuecomment-66558727:165,Security,secur,security,165,I get the following error when trying to use the ip_parallel_map:. ```; FileNotFoundError: [Errno 2] No such file or directory: '/home/paul/.ipython/profile_default/security/ipcontroller-client.json'; ```. Everything else works as expected.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/276#issuecomment-66558727
https://github.com/qutip/qutip/pull/276#issuecomment-66559712:220,Integrability,interface,interface,220,"Yes that would be nice, I've thought about that too, and this question also comes up on the IPython mailing list from time to time, by answer always seems to be that it is not possible for the kernel to know what client interface is used, and that in principle there can be multiple clients (notebook, qtconsole, etc.) connected to it simultanouesly...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/276#issuecomment-66559712
https://github.com/qutip/qutip/pull/276#issuecomment-66559972:85,Testability,test,tests,85,"Well then this seems more or less done, however it doesn't look like there is a unit tests for the new code that returns both states and expect values.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/276#issuecomment-66559972
https://github.com/qutip/qutip/pull/276#issuecomment-66583536:4,Availability,error,error,4,The error here has nothing to do with the pull but rather with the coveralls that shouldnt be running anyway for py3.2. Since we are no longer testing against 3 2 anyway I see no reason why this cant be merged.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/276#issuecomment-66583536
https://github.com/qutip/qutip/pull/276#issuecomment-66583536:143,Testability,test,testing,143,The error here has nothing to do with the pull but rather with the coveralls that shouldnt be running anyway for py3.2. Since we are no longer testing against 3 2 anyway I see no reason why this cant be merged.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/276#issuecomment-66583536
https://github.com/qutip/qutip/pull/276#issuecomment-66583790:36,Availability,error,error,36,"ok i see, i was confsued about this error. travis is killing the tests. are we taking too long to finish the tests maybe? i was thinking that dropping 3.2 would be ok because i cant remember a case when the py 3.2 and 3.4 gave different results (unless errors due to random number stuff, which are not interesting..)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/276#issuecomment-66583790
https://github.com/qutip/qutip/pull/276#issuecomment-66583790:253,Availability,error,errors,253,"ok i see, i was confsued about this error. travis is killing the tests. are we taking too long to finish the tests maybe? i was thinking that dropping 3.2 would be ok because i cant remember a case when the py 3.2 and 3.4 gave different results (unless errors due to random number stuff, which are not interesting..)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/276#issuecomment-66583790
https://github.com/qutip/qutip/pull/276#issuecomment-66583790:65,Testability,test,tests,65,"ok i see, i was confsued about this error. travis is killing the tests. are we taking too long to finish the tests maybe? i was thinking that dropping 3.2 would be ok because i cant remember a case when the py 3.2 and 3.4 gave different results (unless errors due to random number stuff, which are not interesting..)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/276#issuecomment-66583790
https://github.com/qutip/qutip/pull/276#issuecomment-66583790:109,Testability,test,tests,109,"ok i see, i was confsued about this error. travis is killing the tests. are we taking too long to finish the tests maybe? i was thinking that dropping 3.2 would be ok because i cant remember a case when the py 3.2 and 3.4 gave different results (unless errors due to random number stuff, which are not interesting..)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/276#issuecomment-66583790
https://github.com/qutip/qutip/pull/276#issuecomment-66585827:38,Deployability,release,releases,38,Yes we are not sensitive to the point releases typically. I will merge this when I get home.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/276#issuecomment-66585827
https://github.com/qutip/qutip/pull/276#issuecomment-66604157:201,Modifiability,refactor,refactor-mcsolve-parallel,201,[![Coverage Status](https://coveralls.io/builds/1594952/badge)](https://coveralls.io/builds/1594952). Coverage decreased (-0.24%) when pulling **844f102113c37bdf1f599abff89c0d2d9a67c962 on jrjohansson:refactor-mcsolve-parallel** into **6d186dfa7a1086ffa591670e25698e8668eaaeeb on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/276#issuecomment-66604157
https://github.com/qutip/qutip/pull/276#issuecomment-66604437:201,Modifiability,refactor,refactor-mcsolve-parallel,201,[![Coverage Status](https://coveralls.io/builds/1594994/badge)](https://coveralls.io/builds/1594994). Coverage decreased (-0.25%) when pulling **844f102113c37bdf1f599abff89c0d2d9a67c962 on jrjohansson:refactor-mcsolve-parallel** into **6d186dfa7a1086ffa591670e25698e8668eaaeeb on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/276#issuecomment-66604437
https://github.com/qutip/qutip/pull/276#issuecomment-66605622:201,Modifiability,refactor,refactor-mcsolve-parallel,201,[![Coverage Status](https://coveralls.io/builds/1595281/badge)](https://coveralls.io/builds/1595281). Coverage decreased (-0.24%) when pulling **c6279c428887c4308a17c024e009d8888fd50c7d on jrjohansson:refactor-mcsolve-parallel** into **6d186dfa7a1086ffa591670e25698e8668eaaeeb on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/276#issuecomment-66605622
https://github.com/qutip/qutip/pull/276#issuecomment-66605769:200,Modifiability,refactor,refactor-mcsolve-parallel,200,[![Coverage Status](https://coveralls.io/builds/1595345/badge)](https://coveralls.io/builds/1595345). Coverage decreased (-0.4%) when pulling **cf9a5e766f11fc2d514267d2a643237e5c28cc96 on jrjohansson:refactor-mcsolve-parallel** into **1738f5f73b4b0225eab3c0fbc3ada97b56e70b9a on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/276#issuecomment-66605769
https://github.com/qutip/qutip/pull/279#issuecomment-65756811:18,Availability,echo,echo,18,One needs to run `echo export PATH='/usr/local/bin:$PATH' >> ~/.profile` to put the Homebrew Python in the PATH.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/279#issuecomment-65756811
https://github.com/qutip/qutip/pull/279#issuecomment-65757518:29,Deployability,install,installing,29,Perhaps better to default to installing the latest release rather than master?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/279#issuecomment-65757518
https://github.com/qutip/qutip/pull/279#issuecomment-65757518:51,Deployability,release,release,51,Perhaps better to default to installing the latest release rather than master?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/279#issuecomment-65757518
https://github.com/qutip/qutip/pull/279#issuecomment-65757704:25,Deployability,release,release,25,It is possible to do any release. I just did master for testing.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/279#issuecomment-65757704
https://github.com/qutip/qutip/pull/279#issuecomment-65757704:56,Testability,test,testing,56,It is possible to do any release. I just did master for testing.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/279#issuecomment-65757704
https://github.com/qutip/qutip/pull/279#issuecomment-65925409:36,Deployability,install,installation,36,Both scripts were tested on a fresh installation of 10.10 (no xcode or anything else). Both scripts installed fine and the new python and ipython versions are on the path and can be used immediately.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/279#issuecomment-65925409
https://github.com/qutip/qutip/pull/279#issuecomment-65925409:100,Deployability,install,installed,100,Both scripts were tested on a fresh installation of 10.10 (no xcode or anything else). Both scripts installed fine and the new python and ipython versions are on the path and can be used immediately.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/279#issuecomment-65925409
https://github.com/qutip/qutip/pull/279#issuecomment-65925409:18,Testability,test,tested,18,Both scripts were tested on a fresh installation of 10.10 (no xcode or anything else). Both scripts installed fine and the new python and ipython versions are on the path and can be used immediately.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/279#issuecomment-65925409
https://github.com/qutip/qutip/pull/279#issuecomment-65957219:45,Deployability,install,install,45,looks good. but i think these scripts should install the latest release rather than master.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/279#issuecomment-65957219
https://github.com/qutip/qutip/pull/279#issuecomment-65957219:64,Deployability,release,release,64,looks good. but i think these scripts should install the latest release rather than master.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/279#issuecomment-65957219
https://github.com/qutip/qutip/pull/281#issuecomment-66248230:84,Testability,test,tests,84,This is looking fine. It would be great if you could think about some possible unit tests for this module and add to the qutip/tests directory. Perhaps something based on the example notebooks?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/281#issuecomment-66248230
https://github.com/qutip/qutip/pull/281#issuecomment-66248230:127,Testability,test,tests,127,This is looking fine. It would be great if you could think about some possible unit tests for this module and add to the qutip/tests directory. Perhaps something based on the example notebooks?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/281#issuecomment-66248230
https://github.com/qutip/qutip/pull/281#issuecomment-66294867:15,Testability,test,tests,15,I had seen the tests folder and I have given some thought to what we can add to test the control modules. As you suggest I will add something based on the notebooks. I guess I should do this as a separate pull request.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/281#issuecomment-66294867
https://github.com/qutip/qutip/pull/281#issuecomment-66294867:80,Testability,test,test,80,I had seen the tests folder and I have given some thought to what we can add to test the control modules. As you suggest I will add something based on the notebooks. I guess I should do this as a separate pull request.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/281#issuecomment-66294867
https://github.com/qutip/qutip/pull/282#issuecomment-67575660:11,Deployability,update,updated,11,"Hi, I have updated my code according to your suggestion. Pleas review the new code to see if there are still other problems. :)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/282#issuecomment-67575660
https://github.com/qutip/qutip/pull/282#issuecomment-69420379:21,Deployability,update,update,21,"Thanks a lot for the update! Could you please add few unit tests for this module, perhaps based on some of the examples from your notebook?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/282#issuecomment-69420379
https://github.com/qutip/qutip/pull/282#issuecomment-69420379:59,Testability,test,tests,59,"Thanks a lot for the update! Could you please add few unit tests for this module, perhaps based on some of the examples from your notebook?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/282#issuecomment-69420379
https://github.com/qutip/qutip/pull/282#issuecomment-77509684:106,Usability,clear,clear,106,"Hi, I'm now still working on cleaning the codes, make them better documented and making the notebook more clear. After I finished everything, I will push my job to github and leave a comment here.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/282#issuecomment-77509684
https://github.com/qutip/qutip/pull/282#issuecomment-109847098:11,Deployability,update,updated,11,"Hi, I have updated the interface to make it much much easier to use. And, I added the unit test and now the test will succeed. The test is the following: generate random Hamiltonians and run perturbation and see whether the energy levels match with the exact solutions. I have done all I want to do up to now. So, please review these codes again and consider merging them.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/282#issuecomment-109847098
https://github.com/qutip/qutip/pull/282#issuecomment-109847098:224,Energy Efficiency,energy,energy,224,"Hi, I have updated the interface to make it much much easier to use. And, I added the unit test and now the test will succeed. The test is the following: generate random Hamiltonians and run perturbation and see whether the energy levels match with the exact solutions. I have done all I want to do up to now. So, please review these codes again and consider merging them.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/282#issuecomment-109847098
https://github.com/qutip/qutip/pull/282#issuecomment-109847098:23,Integrability,interface,interface,23,"Hi, I have updated the interface to make it much much easier to use. And, I added the unit test and now the test will succeed. The test is the following: generate random Hamiltonians and run perturbation and see whether the energy levels match with the exact solutions. I have done all I want to do up to now. So, please review these codes again and consider merging them.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/282#issuecomment-109847098
https://github.com/qutip/qutip/pull/282#issuecomment-109847098:91,Testability,test,test,91,"Hi, I have updated the interface to make it much much easier to use. And, I added the unit test and now the test will succeed. The test is the following: generate random Hamiltonians and run perturbation and see whether the energy levels match with the exact solutions. I have done all I want to do up to now. So, please review these codes again and consider merging them.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/282#issuecomment-109847098
https://github.com/qutip/qutip/pull/282#issuecomment-109847098:108,Testability,test,test,108,"Hi, I have updated the interface to make it much much easier to use. And, I added the unit test and now the test will succeed. The test is the following: generate random Hamiltonians and run perturbation and see whether the energy levels match with the exact solutions. I have done all I want to do up to now. So, please review these codes again and consider merging them.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/282#issuecomment-109847098
https://github.com/qutip/qutip/pull/282#issuecomment-109847098:131,Testability,test,test,131,"Hi, I have updated the interface to make it much much easier to use. And, I added the unit test and now the test will succeed. The test is the following: generate random Hamiltonians and run perturbation and see whether the energy levels match with the exact solutions. I have done all I want to do up to now. So, please review these codes again and consider merging them.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/282#issuecomment-109847098
https://github.com/qutip/qutip/issues/283#issuecomment-66267097:129,Availability,error,error,129,"It seems the problem was with the `blas_opt['extra_compile_args']` call in the `setup.py` for the Fortran solver. This is an odd error given that is works perfectly well on the mac:. ``` python; import numpy as np; blas_opt=np.__config__.blas_opt_info; extra_compile_args=blas_opt['extra_compile_args']; print(extra_compile_args); ['-msse3', '-DAPPLE_ACCELERATE_SGEMV_PATCH', '-I/System/Library/Frameworks/vecLib.framework/Headers']; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/283#issuecomment-66267097
https://github.com/qutip/qutip/issues/283#issuecomment-66273918:518,Deployability,install,installation,518,"The problem is indeed the use of `blas_opt['extra_compile_args']`which works well on my mac too, but for some reason that I couldn't get to the bottom with, it does not work on the macports build environment. Perhaps the numpy dependency is not properly specified in the ports file, or something similar. I agree with the OP that it would be highly desirable to get this working, but right now i don't have the time work on trying to fix it. Unless it this get fixed somehow, we should probably revise the recommended installation instructions to use macports+pip or homebrew+pip instead.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/283#issuecomment-66273918
https://github.com/qutip/qutip/issues/283#issuecomment-66273918:227,Integrability,depend,dependency,227,"The problem is indeed the use of `blas_opt['extra_compile_args']`which works well on my mac too, but for some reason that I couldn't get to the bottom with, it does not work on the macports build environment. Perhaps the numpy dependency is not properly specified in the ports file, or something similar. I agree with the OP that it would be highly desirable to get this working, but right now i don't have the time work on trying to fix it. Unless it this get fixed somehow, we should probably revise the recommended installation instructions to use macports+pip or homebrew+pip instead.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/283#issuecomment-66273918
https://github.com/qutip/qutip/issues/283#issuecomment-66282510:200,Deployability,update,update,200,"I vote for macports+pip or building qutip manually (this is what I use) . Even if we get macports up and running, the port will always be behind everything else as it needs to get reviewed before the update is uploaded. The new homebrew scripts are also convenient.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/283#issuecomment-66282510
https://github.com/qutip/qutip/issues/283#issuecomment-66561013:62,Deployability,install,installer,62,"One can also think about moving the fortran solver to its own installer as a qutip add-on. With the recent performance gains of the Python based solver, this change is not so bad in my opinion.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/283#issuecomment-66561013
https://github.com/qutip/qutip/issues/283#issuecomment-66561013:107,Performance,perform,performance,107,"One can also think about moving the fortran solver to its own installer as a qutip add-on. With the recent performance gains of the Python based solver, this change is not so bad in my opinion.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/283#issuecomment-66561013
https://github.com/qutip/qutip/issues/283#issuecomment-67802461:43,Deployability,install,installing,43,"It looks like we are going to just go with installing dependencies with macports and do a pip install for qutip itself from here on out. This is already the procedure listed in the 3.1 docs. Therefore, I am going to close this issue if there are no other thoughts on the matter.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/283#issuecomment-67802461
https://github.com/qutip/qutip/issues/283#issuecomment-67802461:94,Deployability,install,install,94,"It looks like we are going to just go with installing dependencies with macports and do a pip install for qutip itself from here on out. This is already the procedure listed in the 3.1 docs. Therefore, I am going to close this issue if there are no other thoughts on the matter.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/283#issuecomment-67802461
https://github.com/qutip/qutip/issues/283#issuecomment-67802461:54,Integrability,depend,dependencies,54,"It looks like we are going to just go with installing dependencies with macports and do a pip install for qutip itself from here on out. This is already the procedure listed in the 3.1 docs. Therefore, I am going to close this issue if there are no other thoughts on the matter.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/283#issuecomment-67802461
https://github.com/qutip/qutip/pull/286#issuecomment-66420471:218,Deployability,update,updates,218,[![Coverage Status](https://coveralls.io/builds/1589410/badge)](https://coveralls.io/builds/1589410). Coverage increased (+0.0%) when pulling **2ee79ccbcdd2ae154e0698fc574a50d31bd0b71c on jrjohansson:mesolve-docstring-updates** into **3279ab91e606305a4b0ae2af4f012e2d50a14ab0 on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/286#issuecomment-66420471
https://github.com/qutip/qutip/pull/288#issuecomment-66726276:212,Deployability,update,updates,212,[![Coverage Status](https://coveralls.io/builds/1600488/badge)](https://coveralls.io/builds/1600488). Coverage increased (+0.05%) when pulling **407427aaa85974f65d1fe8005185c6fbad5f9e53 on jrjohansson:stochastic-updates** into **61d84f359162ee7dd680073e212e6f27f3047031 on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/288#issuecomment-66726276
https://github.com/qutip/qutip/pull/289#issuecomment-66605084:207,Deployability,update,update,207,[![Coverage Status](https://coveralls.io/builds/1595186/badge)](https://coveralls.io/builds/1595186). Coverage remained the same when pulling **f9948fd4a89b64e4782e4df493c8dc1a539abb9e on jrjohansson:travis-update** into **5bccdbad62a807d73594bd1ba6f0cc4beff8cb7a on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/289#issuecomment-66605084
https://github.com/qutip/qutip/pull/290#issuecomment-66743493:209,Deployability,update,updates,209,[![Coverage Status](https://coveralls.io/builds/1601222/badge)](https://coveralls.io/builds/1601222). Coverage decreased (-0.0%) when pulling **f22d3cb7280b49e1e1ed8bc06ba330b3dd95df8b on jrjohansson:parallel-updates** into **bd95c50c75209754f66fb658897186467945dce0 on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/290#issuecomment-66743493
https://github.com/qutip/qutip/pull/291#issuecomment-66948492:398,Availability,down,down,398,"But how would you know which ones are safe to remove? The fact that we can have many python interpreters running qutip at the same time makes this complicated. I'm not sure what would be the best solution, but I guess that in principle one could imagine an atexit handler that does the cleanup of files corresponding to the current PID. https://docs.python.org/3/library/atexit.html. But taking us down a path of complicated and and hard to maintain code...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/291#issuecomment-66948492
https://github.com/qutip/qutip/pull/291#issuecomment-66948492:38,Safety,safe,safe,38,"But how would you know which ones are safe to remove? The fact that we can have many python interpreters running qutip at the same time makes this complicated. I'm not sure what would be the best solution, but I guess that in principle one could imagine an atexit handler that does the cleanup of files corresponding to the current PID. https://docs.python.org/3/library/atexit.html. But taking us down a path of complicated and and hard to maintain code...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/291#issuecomment-66948492
https://github.com/qutip/qutip/pull/291#issuecomment-66949855:4,Availability,error,error,4,The error is related to my new metrics tests being too strict. So this seems to be ready for review.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/291#issuecomment-66949855
https://github.com/qutip/qutip/pull/291#issuecomment-66949855:39,Testability,test,tests,39,The error is related to my new metrics tests being too strict. So this seems to be ready for review.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/291#issuecomment-66949855
https://github.com/qutip/qutip/pull/291#issuecomment-66950762:17,Deployability,update,updates,17,Let me make some updates before review.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/291#issuecomment-66950762
https://github.com/qutip/qutip/pull/292#issuecomment-67436094:200,Deployability,release,release-,200,[![Coverage Status](https://coveralls.io/builds/1628628/badge)](https://coveralls.io/builds/1628628). Coverage decreased (-0.0%) when pulling **525ec5dfe379a6e2dd310bf85b3cce313dd2e9b8 on jrjohansson:release-3.1-code-cleanup** into **23e525934c4ccac56acd7fe441ba3d0f3ed72add on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/292#issuecomment-67436094
https://github.com/qutip/qutip/pull/292#issuecomment-67495227:39,Availability,error,error,39,Thanks for spotting this. Obviously an error.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/292#issuecomment-67495227
https://github.com/qutip/qutip/pull/293#issuecomment-67442213:201,Deployability,release,release-,201,[![Coverage Status](https://coveralls.io/builds/1628903/badge)](https://coveralls.io/builds/1628903). Coverage decreased (-0.01%) when pulling **6801b8539eb7190121cb9eda01e00ab583c7527e on jrjohansson:release-3.1-code-cleanup** into **947ff2b33ee81de77bc75ee6f839ee41e4be9429 on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/293#issuecomment-67442213
https://github.com/qutip/qutip/pull/293#issuecomment-67443547:201,Deployability,release,release-,201,[![Coverage Status](https://coveralls.io/builds/1628962/badge)](https://coveralls.io/builds/1628962). Coverage decreased (-0.01%) when pulling **db750cf06b0b6c9c7280a5f2131caef1cd8e6e4e on jrjohansson:release-3.1-code-cleanup** into **947ff2b33ee81de77bc75ee6f839ee41e4be9429 on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/293#issuecomment-67443547
https://github.com/qutip/qutip/pull/294#issuecomment-67649107:60,Deployability,update,updates,60,"Please merge with master and resolve conflicts and push the updates. In general, to avoid conflicts, you should do 'git pull upsteam master' into your master before creating a new branch.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/294#issuecomment-67649107
https://github.com/qutip/qutip/pull/294#issuecomment-67649107:84,Safety,avoid,avoid,84,"Please merge with master and resolve conflicts and push the updates. In general, to avoid conflicts, you should do 'git pull upsteam master' into your master before creating a new branch.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/294#issuecomment-67649107
https://github.com/qutip/qutip/pull/294#issuecomment-67649613:49,Availability,error,error,49,"Sorry, somehow missed adding the description; An error occurred when using the TraceDiff fidelity when the computation of the evolution operator(s) resulted in Inf elements due to the repeated multiplication of large numbers. This resulted in fidelity error of NaN, which confused the L-BFGS-B alg. Forcing the fid_err to Inf instead of NaN seemed to improve L-BFGS-B alg response. ; Had to add new test_out_file to investigate the issue. Took the opportunity to tidy up test out files generally",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/294#issuecomment-67649613
https://github.com/qutip/qutip/pull/294#issuecomment-67649613:252,Availability,error,error,252,"Sorry, somehow missed adding the description; An error occurred when using the TraceDiff fidelity when the computation of the evolution operator(s) resulted in Inf elements due to the repeated multiplication of large numbers. This resulted in fidelity error of NaN, which confused the L-BFGS-B alg. Forcing the fid_err to Inf instead of NaN seemed to improve L-BFGS-B alg response. ; Had to add new test_out_file to investigate the issue. Took the opportunity to tidy up test out files generally",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/294#issuecomment-67649613
https://github.com/qutip/qutip/pull/294#issuecomment-67649613:471,Testability,test,test,471,"Sorry, somehow missed adding the description; An error occurred when using the TraceDiff fidelity when the computation of the evolution operator(s) resulted in Inf elements due to the repeated multiplication of large numbers. This resulted in fidelity error of NaN, which confused the L-BFGS-B alg. Forcing the fid_err to Inf instead of NaN seemed to improve L-BFGS-B alg response. ; Had to add new test_out_file to investigate the issue. Took the opportunity to tidy up test out files generally",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/294#issuecomment-67649613
https://github.com/qutip/qutip/pull/294#issuecomment-67658347:65,Safety,avoid,avoid,65,I believe I have fixed all the conflicts. Will definitely try to avoid that situation again!,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/294#issuecomment-67658347
https://github.com/qutip/qutip/pull/294#issuecomment-67725094:108,Deployability,update,updates,108,"No worries! Re-merging pull requests with master is frequently necessary, no problem at all. Thanks for the updates! It looks all fine as far as I can tell without running tests. Is this merge ready from your point of view?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/294#issuecomment-67725094
https://github.com/qutip/qutip/pull/294#issuecomment-67725094:172,Testability,test,tests,172,"No worries! Re-merging pull requests with master is frequently necessary, no problem at all. Thanks for the updates! It looks all fine as far as I can tell without running tests. Is this merge ready from your point of view?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/294#issuecomment-67725094
https://github.com/qutip/qutip/pull/294#issuecomment-67785874:14,Testability,test,tests,14,"It passed all tests at my end. So I would say, yes, ready to merge.; Thanks",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/294#issuecomment-67785874
https://github.com/qutip/qutip/pull/297#issuecomment-68126894:193,Deployability,release,release-updates,193,[![Coverage Status](https://coveralls.io/builds/1660698/badge)](https://coveralls.io/builds/1660698). Changes Unknown when pulling **f30d623a6f8a4e5ab7808eae47306091178e029b on jrjohansson:3.1-release-updates** into *\* on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/297#issuecomment-68126894
https://github.com/qutip/qutip/pull/297#issuecomment-68168766:193,Deployability,release,release-updates,193,[![Coverage Status](https://coveralls.io/builds/1663131/badge)](https://coveralls.io/builds/1663131). Changes Unknown when pulling **fa4ce7b6db204a1ee838bb80d5dd4dc0af738320 on jrjohansson:3.1-release-updates** into *\* on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/297#issuecomment-68168766
https://github.com/qutip/qutip/pull/297#issuecomment-68201063:193,Deployability,release,release-updates,193,[![Coverage Status](https://coveralls.io/builds/1665631/badge)](https://coveralls.io/builds/1665631). Changes Unknown when pulling **e4f0f6fd6a898029c0a6bc48b55a6af6d4cf6e3d on jrjohansson:3.1-release-updates** into *\* on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/297#issuecomment-68201063
https://github.com/qutip/qutip/pull/297#issuecomment-68322113:115,Deployability,release,release,115,"No worries, I just wanted to get it merged so that I could pull it into the qutip-3.1.X branch and start preparing release files.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/297#issuecomment-68322113
https://github.com/qutip/qutip/pull/299#issuecomment-68424943:10,Deployability,update,update,10,Forgot to update fork,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/299#issuecomment-68424943
https://github.com/qutip/qutip/pull/300#issuecomment-68425623:197,Deployability,update,updates,197,[![Coverage Status](https://coveralls.io/builds/1676678/badge)](https://coveralls.io/builds/1676678). Changes Unknown when pulling **6e0d65421c4d5bf7a8dc4d1262c9880cbf9fafee on nonhermitian:travis-updates** into *\* on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/300#issuecomment-68425623
https://github.com/qutip/qutip/pull/300#issuecomment-68425677:76,Deployability,install,install,76,"Very nice! The fortran stuff never worked on travis. In fact, it builds and install ok, but fails to load when the tests are ran. Perhaps some missing library path?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/300#issuecomment-68425677
https://github.com/qutip/qutip/pull/300#issuecomment-68425677:101,Performance,load,load,101,"Very nice! The fortran stuff never worked on travis. In fact, it builds and install ok, but fails to load when the tests are ran. Perhaps some missing library path?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/300#issuecomment-68425677
https://github.com/qutip/qutip/pull/300#issuecomment-68425677:115,Testability,test,tests,115,"Very nice! The fortran stuff never worked on travis. In fact, it builds and install ok, but fails to load when the tests are ran. Perhaps some missing library path?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/300#issuecomment-68425677
https://github.com/qutip/qutip/pull/300#issuecomment-68425710:100,Testability,test,tests,100,Ahh well then there is no more issues with this. Just waiting for the minor changes to the mcsolver tests to clear.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/300#issuecomment-68425710
https://github.com/qutip/qutip/pull/300#issuecomment-68425710:109,Usability,clear,clear,109,Ahh well then there is no more issues with this. Just waiting for the minor changes to the mcsolver tests to clear.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/300#issuecomment-68425710
https://github.com/qutip/qutip/pull/300#issuecomment-68425743:51,Testability,test,test,51,"Great, thanks for fixing this. Will merge when the test finish.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/300#issuecomment-68425743
https://github.com/qutip/qutip/pull/300#issuecomment-68425931:197,Deployability,update,updates,197,[![Coverage Status](https://coveralls.io/builds/1676696/badge)](https://coveralls.io/builds/1676696). Changes Unknown when pulling **88d0f89e3f341ed06b874e009eb23e1d084897f9 on nonhermitian:travis-updates** into *\* on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/300#issuecomment-68425931
https://github.com/qutip/qutip/pull/301#issuecomment-68475039:268,Deployability,release,release,268,Thanks. The many files in the diff is because you merged with master rather than rebased to latest commit in master. It's not a problem. I'll take care of this PR manually because if the remaining merge conflicts. This will be the last PR that is excepted for the 3.1 release.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/301#issuecomment-68475039
https://github.com/qutip/qutip/issues/304#issuecomment-71307382:211,Security,access,access,211,"Thanks @fromage88 for the bug report and @mmensing for the proposed work around. I could also reproduce the bug and confirm that the work around works. An alternative work around until this is fixed is directly access the underlying matplotlib figure instance:. ```; import numpy as np; from qutip import *. b = Bloch(). for i in range(5):; b.add_vectors([np.sin(i),0,np.cos(i)]); b.render(); b.fig.savefig(""bloch_sf%d.png"" % i); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/304#issuecomment-71307382
https://github.com/qutip/qutip/issues/305#issuecomment-72500045:72,Testability,test,test,72,"I would be happy to submit a PR for the fix. I forked the repo, added a test for the bug fix, and fixed the bug to pass the test. I just submitted the request.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/305#issuecomment-72500045
https://github.com/qutip/qutip/issues/305#issuecomment-72500045:124,Testability,test,test,124,"I would be happy to submit a PR for the fix. I forked the repo, added a test for the bug fix, and fixed the bug to pass the test. I just submitted the request.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/305#issuecomment-72500045
https://github.com/qutip/qutip/pull/306#issuecomment-72345337:229,Testability,test,test,229,[![Coverage Status](https://coveralls.io/builds/1841454/badge)](https://coveralls.io/builds/1841454). Coverage decreased (-0.01%) to 54.79% when pulling **1ab5566cf741511898a2dc567a9453e968093359 on jrjohansson:fix-qobj-division-test** into **0bf9b619ab30af7551467ee2388d0e3db641db14 on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/306#issuecomment-72345337
https://github.com/qutip/qutip/issues/309#issuecomment-72564925:591,Availability,avail,available,591,"That particular flag is causing trouble as ARM cpus do not have the SSE extensions. Instead ARM v7+ use the NEON extensions. As such, the build is failing. However, this flag is really only useful for x86 (32-bit) systems where the fpmath is not set to use SSE by default. On x64 it is. In reality, I am not even sure if that flag does any good for our particular code as it is not written to directly use SSE anyway. If you want to remove this flag yourself, it is in the setup.py files in the 'cy' and 'control' directories inside the qutip directory. Given that their are no commercially available ARM systems outside of the Raspberry PI and MS Surface. I am not sure if adding support for ARM extensions is really necessary at the moment.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/309#issuecomment-72564925
https://github.com/qutip/qutip/pull/310#issuecomment-72574499:44,Testability,test,test,44,"This looks good. Also, good to see the unit test added. Thank you.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/310#issuecomment-72574499
https://github.com/qutip/qutip/pull/311#issuecomment-72574232:118,Availability,mainten,maintenance,118,"+1 for removing ineffective compiler flags. Neutral about implied/express ARM support (fine if there is no additional maintenance burden, probably not worth it otherwise).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/311#issuecomment-72574232
https://github.com/qutip/qutip/pull/313#issuecomment-73030236:377,Energy Efficiency,monitor,monitor,377,"The original purpose behind the files was to aid debugging, firstly of the library, then of implementations. Now it turns out that some of the 'test out files' are useful in terms of analysis, e.g. the iteration log, and so I generally have this turned on. Often the optimisation can take a long time, and hence having the files written out during the process can be useful to monitor progress. Also, sometimes the processing is terminated early (by the scheduler on the cluster we use), and so having some filesystem output can mean that some kind of result can be extracted. All this being said, I can see your point that some kind of 'run data' container object would be a better method, as the data could be used interactively. Perhaps users could then optionally chose to save this at the end or during the run, whichever suits them. I can add this to my todo list.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/313#issuecomment-73030236
https://github.com/qutip/qutip/pull/313#issuecomment-73030236:454,Energy Efficiency,schedul,scheduler,454,"The original purpose behind the files was to aid debugging, firstly of the library, then of implementations. Now it turns out that some of the 'test out files' are useful in terms of analysis, e.g. the iteration log, and so I generally have this turned on. Often the optimisation can take a long time, and hence having the files written out during the process can be useful to monitor progress. Also, sometimes the processing is terminated early (by the scheduler on the cluster we use), and so having some filesystem output can mean that some kind of result can be extracted. All this being said, I can see your point that some kind of 'run data' container object would be a better method, as the data could be used interactively. Perhaps users could then optionally chose to save this at the end or during the run, whichever suits them. I can add this to my todo list.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/313#issuecomment-73030236
https://github.com/qutip/qutip/pull/313#issuecomment-73030236:144,Testability,test,test,144,"The original purpose behind the files was to aid debugging, firstly of the library, then of implementations. Now it turns out that some of the 'test out files' are useful in terms of analysis, e.g. the iteration log, and so I generally have this turned on. Often the optimisation can take a long time, and hence having the files written out during the process can be useful to monitor progress. Also, sometimes the processing is terminated early (by the scheduler on the cluster we use), and so having some filesystem output can mean that some kind of result can be extracted. All this being said, I can see your point that some kind of 'run data' container object would be a better method, as the data could be used interactively. Perhaps users could then optionally chose to save this at the end or during the run, whichever suits them. I can add this to my todo list.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/313#issuecomment-73030236
https://github.com/qutip/qutip/pull/313#issuecomment-73030236:212,Testability,log,log,212,"The original purpose behind the files was to aid debugging, firstly of the library, then of implementations. Now it turns out that some of the 'test out files' are useful in terms of analysis, e.g. the iteration log, and so I generally have this turned on. Often the optimisation can take a long time, and hence having the files written out during the process can be useful to monitor progress. Also, sometimes the processing is terminated early (by the scheduler on the cluster we use), and so having some filesystem output can mean that some kind of result can be extracted. All this being said, I can see your point that some kind of 'run data' container object would be a better method, as the data could be used interactively. Perhaps users could then optionally chose to save this at the end or during the run, whichever suits them. I can add this to my todo list.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/313#issuecomment-73030236
https://github.com/qutip/qutip/pull/313#issuecomment-73526258:59,Usability,simpl,simply,59,"As mentioned in the commit comment, this latest change was simply a return to something that works. How it got broken is a mystery.; Regarding this pull request as a whole, the changes are just small fixes to some feature that has been in the library from the beginning. I have tried to tidy it up a few times, but I appreciated that more work is required. This I would prefer to do in some future pull request.; To be clear, the default behaviour does not write anything to the file system.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/313#issuecomment-73526258
https://github.com/qutip/qutip/pull/313#issuecomment-73526258:419,Usability,clear,clear,419,"As mentioned in the commit comment, this latest change was simply a return to something that works. How it got broken is a mystery.; Regarding this pull request as a whole, the changes are just small fixes to some feature that has been in the library from the beginning. I have tried to tidy it up a few times, but I appreciated that more work is required. This I would prefer to do in some future pull request.; To be clear, the default behaviour does not write anything to the file system.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/313#issuecomment-73526258
https://github.com/qutip/qutip/issues/315#issuecomment-74205624:87,Usability,feedback,feedback,87,"Sounds good, then. I'll get this done in the next couple days, then. Thank you for the feedback!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/315#issuecomment-74205624
https://github.com/qutip/qutip/issues/315#issuecomment-74319723:37,Testability,test,tested,37,"This isn't quite ready for a PR (not tested, missing documentation, etc.), but should show the general scope of what I am planning on. I went with the convention of naming new functions something along the lines of `rand_dm_ginibre` to differentiate from existing functions like `rand_dm`. Does this make sense, or is there another API design that would work better? Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/315#issuecomment-74319723
https://github.com/qutip/qutip/pull/316#issuecomment-74428511:138,Modifiability,extend,extend,138,"I just noticed that this PR treats the dims keywords differently than the existing `rand_*` functions, and does not accept a list. I will extend this PR to include that functionality soon.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/316#issuecomment-74428511
https://github.com/qutip/qutip/pull/316#issuecomment-74508115:252,Testability,test,tests,252,"The new and existing functions now share a uniform API, with each taking an `N` and a `dims` argument. Since `rand_ket` did not currently respect `dims` due to a bug in `check_dims`, I modified that function and `rand_ket_haar` slightly and added unit tests to check that they act uniformly. The new tests run fine for me locally, so I'm happy for with this PR if the Travis build works. Thank you!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/316#issuecomment-74508115
https://github.com/qutip/qutip/pull/316#issuecomment-74508115:300,Testability,test,tests,300,"The new and existing functions now share a uniform API, with each taking an `N` and a `dims` argument. Since `rand_ket` did not currently respect `dims` due to a bug in `check_dims`, I modified that function and `rand_ket_haar` slightly and added unit tests to check that they act uniformly. The new tests run fine for me locally, so I'm happy for with this PR if the Travis build works. Thank you!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/316#issuecomment-74508115
https://github.com/qutip/qutip/pull/316#issuecomment-74656936:0,Deployability,Update,Updated,0,"Updated docs + example notebook would be great. Thanks, merging this now.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/316#issuecomment-74656936
https://github.com/qutip/qutip/pull/318#issuecomment-75334652:1606,Deployability,Patch,Patch,1606,"Since I have been using GCC 4.8 for a while now, i did not think about compilers back to 4.4. I will take a look at this code on Monday, but my initial thinking is just to drop the optimization and leave it at that. This would save us from having to run an extra test suite on Travis. The only compiler flags that matter at the end are O3 and the fast math. Everything else is just a few percent improvement at best. . Paul. > On Feb 21, 2015, at 06:42, Dominic Meiser notifications@github.com wrote:; > ; > gcc 4.4 does not support the -flto option for link time optimization. This is still a common compiler because it is the system gcc in centos 6 and redhat enterprise 6.; > ; > In this pull request I've removed that option. Users who need this could set the CCFLAGS environment variable to customize the compiler flags. Alternatively, we could add options to setup.py to enable or disable link time optimization.; > ; > I've also added additional rows to the travis build matrix to test building with gcc 4.4 and clang. In its current form this adds 4 additional rows to the build matrix (2 additional compilers, each tested with python 2.7 and 3.4). Let me know if you think this is excessive. It's possible to add just one python version for gcc 4.4 and clang.; > ; > You can view, comment on, or merge this pull request online at:; > ; > https://github.com/qutip/qutip/pull/318; > ; > Commit Summary; > ; > Remove -flto compilation flags.; > Add gcc4.4 and clang builds to travis build matrix.; > File Changes; > ; > M .travis.yml (8); > M qutip/control/setup.py (4); > M qutip/cy/setup.py (2); > Patch Links:; > ; > https://github.com/qutip/qutip/pull/318.patch; > https://github.com/qutip/qutip/pull/318.diff; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/318#issuecomment-75334652
https://github.com/qutip/qutip/pull/318#issuecomment-75334652:1666,Deployability,patch,patch,1666,"Since I have been using GCC 4.8 for a while now, i did not think about compilers back to 4.4. I will take a look at this code on Monday, but my initial thinking is just to drop the optimization and leave it at that. This would save us from having to run an extra test suite on Travis. The only compiler flags that matter at the end are O3 and the fast math. Everything else is just a few percent improvement at best. . Paul. > On Feb 21, 2015, at 06:42, Dominic Meiser notifications@github.com wrote:; > ; > gcc 4.4 does not support the -flto option for link time optimization. This is still a common compiler because it is the system gcc in centos 6 and redhat enterprise 6.; > ; > In this pull request I've removed that option. Users who need this could set the CCFLAGS environment variable to customize the compiler flags. Alternatively, we could add options to setup.py to enable or disable link time optimization.; > ; > I've also added additional rows to the travis build matrix to test building with gcc 4.4 and clang. In its current form this adds 4 additional rows to the build matrix (2 additional compilers, each tested with python 2.7 and 3.4). Let me know if you think this is excessive. It's possible to add just one python version for gcc 4.4 and clang.; > ; > You can view, comment on, or merge this pull request online at:; > ; > https://github.com/qutip/qutip/pull/318; > ; > Commit Summary; > ; > Remove -flto compilation flags.; > Add gcc4.4 and clang builds to travis build matrix.; > File Changes; > ; > M .travis.yml (8); > M qutip/control/setup.py (4); > M qutip/cy/setup.py (2); > Patch Links:; > ; > https://github.com/qutip/qutip/pull/318.patch; > https://github.com/qutip/qutip/pull/318.diff; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/318#issuecomment-75334652
https://github.com/qutip/qutip/pull/318#issuecomment-75334652:784,Modifiability,variab,variable,784,"Since I have been using GCC 4.8 for a while now, i did not think about compilers back to 4.4. I will take a look at this code on Monday, but my initial thinking is just to drop the optimization and leave it at that. This would save us from having to run an extra test suite on Travis. The only compiler flags that matter at the end are O3 and the fast math. Everything else is just a few percent improvement at best. . Paul. > On Feb 21, 2015, at 06:42, Dominic Meiser notifications@github.com wrote:; > ; > gcc 4.4 does not support the -flto option for link time optimization. This is still a common compiler because it is the system gcc in centos 6 and redhat enterprise 6.; > ; > In this pull request I've removed that option. Users who need this could set the CCFLAGS environment variable to customize the compiler flags. Alternatively, we could add options to setup.py to enable or disable link time optimization.; > ; > I've also added additional rows to the travis build matrix to test building with gcc 4.4 and clang. In its current form this adds 4 additional rows to the build matrix (2 additional compilers, each tested with python 2.7 and 3.4). Let me know if you think this is excessive. It's possible to add just one python version for gcc 4.4 and clang.; > ; > You can view, comment on, or merge this pull request online at:; > ; > https://github.com/qutip/qutip/pull/318; > ; > Commit Summary; > ; > Remove -flto compilation flags.; > Add gcc4.4 and clang builds to travis build matrix.; > File Changes; > ; > M .travis.yml (8); > M qutip/control/setup.py (4); > M qutip/cy/setup.py (2); > Patch Links:; > ; > https://github.com/qutip/qutip/pull/318.patch; > https://github.com/qutip/qutip/pull/318.diff; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/318#issuecomment-75334652
https://github.com/qutip/qutip/pull/318#issuecomment-75334652:181,Performance,optimiz,optimization,181,"Since I have been using GCC 4.8 for a while now, i did not think about compilers back to 4.4. I will take a look at this code on Monday, but my initial thinking is just to drop the optimization and leave it at that. This would save us from having to run an extra test suite on Travis. The only compiler flags that matter at the end are O3 and the fast math. Everything else is just a few percent improvement at best. . Paul. > On Feb 21, 2015, at 06:42, Dominic Meiser notifications@github.com wrote:; > ; > gcc 4.4 does not support the -flto option for link time optimization. This is still a common compiler because it is the system gcc in centos 6 and redhat enterprise 6.; > ; > In this pull request I've removed that option. Users who need this could set the CCFLAGS environment variable to customize the compiler flags. Alternatively, we could add options to setup.py to enable or disable link time optimization.; > ; > I've also added additional rows to the travis build matrix to test building with gcc 4.4 and clang. In its current form this adds 4 additional rows to the build matrix (2 additional compilers, each tested with python 2.7 and 3.4). Let me know if you think this is excessive. It's possible to add just one python version for gcc 4.4 and clang.; > ; > You can view, comment on, or merge this pull request online at:; > ; > https://github.com/qutip/qutip/pull/318; > ; > Commit Summary; > ; > Remove -flto compilation flags.; > Add gcc4.4 and clang builds to travis build matrix.; > File Changes; > ; > M .travis.yml (8); > M qutip/control/setup.py (4); > M qutip/cy/setup.py (2); > Patch Links:; > ; > https://github.com/qutip/qutip/pull/318.patch; > https://github.com/qutip/qutip/pull/318.diff; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/318#issuecomment-75334652
https://github.com/qutip/qutip/pull/318#issuecomment-75334652:564,Performance,optimiz,optimization,564,"Since I have been using GCC 4.8 for a while now, i did not think about compilers back to 4.4. I will take a look at this code on Monday, but my initial thinking is just to drop the optimization and leave it at that. This would save us from having to run an extra test suite on Travis. The only compiler flags that matter at the end are O3 and the fast math. Everything else is just a few percent improvement at best. . Paul. > On Feb 21, 2015, at 06:42, Dominic Meiser notifications@github.com wrote:; > ; > gcc 4.4 does not support the -flto option for link time optimization. This is still a common compiler because it is the system gcc in centos 6 and redhat enterprise 6.; > ; > In this pull request I've removed that option. Users who need this could set the CCFLAGS environment variable to customize the compiler flags. Alternatively, we could add options to setup.py to enable or disable link time optimization.; > ; > I've also added additional rows to the travis build matrix to test building with gcc 4.4 and clang. In its current form this adds 4 additional rows to the build matrix (2 additional compilers, each tested with python 2.7 and 3.4). Let me know if you think this is excessive. It's possible to add just one python version for gcc 4.4 and clang.; > ; > You can view, comment on, or merge this pull request online at:; > ; > https://github.com/qutip/qutip/pull/318; > ; > Commit Summary; > ; > Remove -flto compilation flags.; > Add gcc4.4 and clang builds to travis build matrix.; > File Changes; > ; > M .travis.yml (8); > M qutip/control/setup.py (4); > M qutip/cy/setup.py (2); > Patch Links:; > ; > https://github.com/qutip/qutip/pull/318.patch; > https://github.com/qutip/qutip/pull/318.diff; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/318#issuecomment-75334652
https://github.com/qutip/qutip/pull/318#issuecomment-75334652:905,Performance,optimiz,optimization,905,"Since I have been using GCC 4.8 for a while now, i did not think about compilers back to 4.4. I will take a look at this code on Monday, but my initial thinking is just to drop the optimization and leave it at that. This would save us from having to run an extra test suite on Travis. The only compiler flags that matter at the end are O3 and the fast math. Everything else is just a few percent improvement at best. . Paul. > On Feb 21, 2015, at 06:42, Dominic Meiser notifications@github.com wrote:; > ; > gcc 4.4 does not support the -flto option for link time optimization. This is still a common compiler because it is the system gcc in centos 6 and redhat enterprise 6.; > ; > In this pull request I've removed that option. Users who need this could set the CCFLAGS environment variable to customize the compiler flags. Alternatively, we could add options to setup.py to enable or disable link time optimization.; > ; > I've also added additional rows to the travis build matrix to test building with gcc 4.4 and clang. In its current form this adds 4 additional rows to the build matrix (2 additional compilers, each tested with python 2.7 and 3.4). Let me know if you think this is excessive. It's possible to add just one python version for gcc 4.4 and clang.; > ; > You can view, comment on, or merge this pull request online at:; > ; > https://github.com/qutip/qutip/pull/318; > ; > Commit Summary; > ; > Remove -flto compilation flags.; > Add gcc4.4 and clang builds to travis build matrix.; > File Changes; > ; > M .travis.yml (8); > M qutip/control/setup.py (4); > M qutip/cy/setup.py (2); > Patch Links:; > ; > https://github.com/qutip/qutip/pull/318.patch; > https://github.com/qutip/qutip/pull/318.diff; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/318#issuecomment-75334652
https://github.com/qutip/qutip/pull/318#issuecomment-75334652:263,Testability,test,test,263,"Since I have been using GCC 4.8 for a while now, i did not think about compilers back to 4.4. I will take a look at this code on Monday, but my initial thinking is just to drop the optimization and leave it at that. This would save us from having to run an extra test suite on Travis. The only compiler flags that matter at the end are O3 and the fast math. Everything else is just a few percent improvement at best. . Paul. > On Feb 21, 2015, at 06:42, Dominic Meiser notifications@github.com wrote:; > ; > gcc 4.4 does not support the -flto option for link time optimization. This is still a common compiler because it is the system gcc in centos 6 and redhat enterprise 6.; > ; > In this pull request I've removed that option. Users who need this could set the CCFLAGS environment variable to customize the compiler flags. Alternatively, we could add options to setup.py to enable or disable link time optimization.; > ; > I've also added additional rows to the travis build matrix to test building with gcc 4.4 and clang. In its current form this adds 4 additional rows to the build matrix (2 additional compilers, each tested with python 2.7 and 3.4). Let me know if you think this is excessive. It's possible to add just one python version for gcc 4.4 and clang.; > ; > You can view, comment on, or merge this pull request online at:; > ; > https://github.com/qutip/qutip/pull/318; > ; > Commit Summary; > ; > Remove -flto compilation flags.; > Add gcc4.4 and clang builds to travis build matrix.; > File Changes; > ; > M .travis.yml (8); > M qutip/control/setup.py (4); > M qutip/cy/setup.py (2); > Patch Links:; > ; > https://github.com/qutip/qutip/pull/318.patch; > https://github.com/qutip/qutip/pull/318.diff; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/318#issuecomment-75334652
https://github.com/qutip/qutip/pull/318#issuecomment-75334652:988,Testability,test,test,988,"Since I have been using GCC 4.8 for a while now, i did not think about compilers back to 4.4. I will take a look at this code on Monday, but my initial thinking is just to drop the optimization and leave it at that. This would save us from having to run an extra test suite on Travis. The only compiler flags that matter at the end are O3 and the fast math. Everything else is just a few percent improvement at best. . Paul. > On Feb 21, 2015, at 06:42, Dominic Meiser notifications@github.com wrote:; > ; > gcc 4.4 does not support the -flto option for link time optimization. This is still a common compiler because it is the system gcc in centos 6 and redhat enterprise 6.; > ; > In this pull request I've removed that option. Users who need this could set the CCFLAGS environment variable to customize the compiler flags. Alternatively, we could add options to setup.py to enable or disable link time optimization.; > ; > I've also added additional rows to the travis build matrix to test building with gcc 4.4 and clang. In its current form this adds 4 additional rows to the build matrix (2 additional compilers, each tested with python 2.7 and 3.4). Let me know if you think this is excessive. It's possible to add just one python version for gcc 4.4 and clang.; > ; > You can view, comment on, or merge this pull request online at:; > ; > https://github.com/qutip/qutip/pull/318; > ; > Commit Summary; > ; > Remove -flto compilation flags.; > Add gcc4.4 and clang builds to travis build matrix.; > File Changes; > ; > M .travis.yml (8); > M qutip/control/setup.py (4); > M qutip/cy/setup.py (2); > Patch Links:; > ; > https://github.com/qutip/qutip/pull/318.patch; > https://github.com/qutip/qutip/pull/318.diff; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/318#issuecomment-75334652
https://github.com/qutip/qutip/pull/318#issuecomment-75334652:1124,Testability,test,tested,1124,"Since I have been using GCC 4.8 for a while now, i did not think about compilers back to 4.4. I will take a look at this code on Monday, but my initial thinking is just to drop the optimization and leave it at that. This would save us from having to run an extra test suite on Travis. The only compiler flags that matter at the end are O3 and the fast math. Everything else is just a few percent improvement at best. . Paul. > On Feb 21, 2015, at 06:42, Dominic Meiser notifications@github.com wrote:; > ; > gcc 4.4 does not support the -flto option for link time optimization. This is still a common compiler because it is the system gcc in centos 6 and redhat enterprise 6.; > ; > In this pull request I've removed that option. Users who need this could set the CCFLAGS environment variable to customize the compiler flags. Alternatively, we could add options to setup.py to enable or disable link time optimization.; > ; > I've also added additional rows to the travis build matrix to test building with gcc 4.4 and clang. In its current form this adds 4 additional rows to the build matrix (2 additional compilers, each tested with python 2.7 and 3.4). Let me know if you think this is excessive. It's possible to add just one python version for gcc 4.4 and clang.; > ; > You can view, comment on, or merge this pull request online at:; > ; > https://github.com/qutip/qutip/pull/318; > ; > Commit Summary; > ; > Remove -flto compilation flags.; > Add gcc4.4 and clang builds to travis build matrix.; > File Changes; > ; > M .travis.yml (8); > M qutip/control/setup.py (4); > M qutip/cy/setup.py (2); > Patch Links:; > ; > https://github.com/qutip/qutip/pull/318.patch; > https://github.com/qutip/qutip/pull/318.diff; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/318#issuecomment-75334652
https://github.com/qutip/qutip/pull/318#issuecomment-75335776:112,Energy Efficiency,reduce,reduce,112,Sounds good. Would you like me to amend the pull request to get rid of the additional travis builds or at least reduce them? Might be nice to have a least one build with gcc 4.4 and clang.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/318#issuecomment-75335776
https://github.com/qutip/qutip/pull/318#issuecomment-75338104:365,Energy Efficiency,reduce,reduce,365,"Perhaps keeping just clang, if we wanted to keep one of the two, would be a good way to go. If we never mess with the compiler flags again there should be no problems. . > On Feb 21, 2015, at 08:03, Dominic Meiser notifications@github.com wrote:; > ; > Sounds good. Would you like me to amend the pull request to get rid of the additional travis builds or at least reduce them? Might be nice to have a least one build with gcc 4.4 and clang.; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/318#issuecomment-75338104
https://github.com/qutip/qutip/pull/318#issuecomment-75344573:43,Testability,test,tests,43,"Yeah, perhaps we only need the py3.4 clang tests. Nothing that we do should require testing compilers against different Python versions. . Paul. > On Feb 21, 2015, at 08:55, Dominic Meiser notifications@github.com wrote:; > ; > Ok, I removed gcc 4.4. The matrix is now:; > ; > gcc 4.6 + python 2.7; > gcc 4.6 + python 3.4; > clang 3.4 + python 2.7; > clang 3.4 + python 3.4; > Is that what you want or just one line for clang?; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/318#issuecomment-75344573
https://github.com/qutip/qutip/pull/318#issuecomment-75344573:84,Testability,test,testing,84,"Yeah, perhaps we only need the py3.4 clang tests. Nothing that we do should require testing compilers against different Python versions. . Paul. > On Feb 21, 2015, at 08:55, Dominic Meiser notifications@github.com wrote:; > ; > Ok, I removed gcc 4.4. The matrix is now:; > ; > gcc 4.6 + python 2.7; > gcc 4.6 + python 3.4; > clang 3.4 + python 2.7; > clang 3.4 + python 3.4; > Is that what you want or just one line for clang?; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/318#issuecomment-75344573
https://github.com/qutip/qutip/pull/318#issuecomment-75411847:28,Availability,error,error,28,"I can not imagine that that error would have much to do with a compiler change. Sometimes the tests fail for odd reasons and are fine if they get rerun. I will look into it tomorrow. . Paul . > On Feb 21, 2015, at 09:52, Dominic Meiser notifications@github.com wrote:; > ; > Ok makes sense. I will make that change over the weekend. Btw for whatever reason one of the builds failed in the most recent build:; > ; > https://travis-ci.org/qutip/qutip/jobs/51588003; > ; > Any idea what the problem is? Is this something I should be worried about?; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/318#issuecomment-75411847
https://github.com/qutip/qutip/pull/318#issuecomment-75411847:94,Testability,test,tests,94,"I can not imagine that that error would have much to do with a compiler change. Sometimes the tests fail for odd reasons and are fine if they get rerun. I will look into it tomorrow. . Paul . > On Feb 21, 2015, at 09:52, Dominic Meiser notifications@github.com wrote:; > ; > Ok makes sense. I will make that change over the weekend. Btw for whatever reason one of the builds failed in the most recent build:; > ; > https://travis-ci.org/qutip/qutip/jobs/51588003; > ; > Any idea what the problem is? Is this something I should be worried about?; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/318#issuecomment-75411847
https://github.com/qutip/qutip/pull/318#issuecomment-75440408:201,Testability,test,tests,201,"I changed the build matrix to; - gcc, python 2.7; - gcc, python 3.4; - clang, python 3.4. The compiler versions are gcc 4.6 and clang 3.4 (default on travis build machines).; For the latest commit all tests pass.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/318#issuecomment-75440408
https://github.com/qutip/qutip/pull/318#issuecomment-75476559:61,Testability,test,tests,61,"I think the only thing left to do is to modify the coveralls tests so that they run for only one of the Py3.4 tests. Currently, the tests run if the Travis python version is 3.4.. As such, they are currently being run twice.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/318#issuecomment-75476559
https://github.com/qutip/qutip/pull/318#issuecomment-75476559:110,Testability,test,tests,110,"I think the only thing left to do is to modify the coveralls tests so that they run for only one of the Py3.4 tests. Currently, the tests run if the Travis python version is 3.4.. As such, they are currently being run twice.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/318#issuecomment-75476559
https://github.com/qutip/qutip/pull/318#issuecomment-75476559:132,Testability,test,tests,132,"I think the only thing left to do is to modify the coveralls tests so that they run for only one of the Py3.4 tests. Currently, the tests run if the Travis python version is 3.4.. As such, they are currently being run twice.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/318#issuecomment-75476559
https://github.com/qutip/qutip/pull/318#issuecomment-75572747:2,Deployability,update,updated,2,I updated the pull request to post to coveralls only for one build permutation (gcc+python 3.4).,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/318#issuecomment-75572747
https://github.com/qutip/qutip/issues/319#issuecomment-75664628:228,Availability,error,error,228,"In short the answer is no. One could think of a couple of ways of trying to determine whether the system has reached the steady state or not, but for nonlinear systems this is difficult. In addition, how would you calculate the error if you dont know the steady state solution in the first place?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/319#issuecomment-75664628
https://github.com/qutip/qutip/pull/322#issuecomment-77798170:74,Availability,error,error,74,"The possibility exists of issues on 32-bit systems. However, the reported error no longer occurs when checked using int, int32, int64, float, float32, float64, complex, and complex128 types.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/322#issuecomment-77798170
https://github.com/qutip/qutip/pull/325#issuecomment-78077523:382,Testability,test,testing,382,"Hi,; Thanks very much for your input. It looks like you are using github correctly to me, although I am no expert.; Well spotted on the typo, and thanks for sorting that out.; It looks like the tau factor on the propagator gradient is required - revisiting the paper by S Machnes (cited in the code). ; I am looking into your alternative method for the PSU normalisation now.; I am testing your branch locally as well.; I will report back when I have completed these tasks.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/325#issuecomment-78077523
https://github.com/qutip/qutip/pull/325#issuecomment-78215946:26,Testability,test,tests,26,I think we need some unit tests here verify that the gradient computation is doing what it is supposed to.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/325#issuecomment-78215946
https://github.com/qutip/qutip/pull/325#issuecomment-78238553:47,Testability,test,tests,47,"I agree, I have some plans to create some unit tests. The check_grad function that fhenneke has pointed out will be part of them. I have tested the Frechet gradient methods (which are used by Lindbladian and symplectic dynamics) using the check_grad function and they seem to be fine.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/325#issuecomment-78238553
https://github.com/qutip/qutip/pull/325#issuecomment-78238553:137,Testability,test,tested,137,"I agree, I have some plans to create some unit tests. The check_grad function that fhenneke has pointed out will be part of them. I have tested the Frechet gradient methods (which are used by Lindbladian and symplectic dynamics) using the check_grad function and they seem to be fine.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/325#issuecomment-78238553
https://github.com/qutip/qutip/pull/325#issuecomment-82987952:312,Testability,test,tests,312,"From my perspective this is now ready to merge. ; fhenneke has fixed a bug in the gradient and a typo in a class name.; It seems like the last commit overwrote the previous one, and so some of the comments here have disappeared, however the queries to the code have been addressed.; I will look to add some unit tests (including the grad_check) over the Easter holiday, i.e. over the next few weeks.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/325#issuecomment-82987952
https://github.com/qutip/qutip/pull/325#issuecomment-85259454:45,Testability,test,tests,45,"Ok, merging now. Looking froward to the unit tests.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/325#issuecomment-85259454
https://github.com/qutip/qutip/issues/330#issuecomment-90325080:117,Integrability,wrap,wrapped,117,the structure of the states returned are different. A subtle difference is mcsolve returns a representation of state wrapped with one more square bracket.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/330#issuecomment-90325080
https://github.com/qutip/qutip/issues/330#issuecomment-90332734:419,Deployability,install,installation,419,"I see the issue. The mcsolver has the correct output format. It is done that way so that if you change ntraj, the return values from the states does not change shape. If ntraj > 1 then the results are the same when grabbing states from a given trajectory. In the ntraj=1 case they are different. It is a straightforward fix. Thank you for pointing this out. As it turns out, the mcsolve_f90 function will be a separate installation starting from QuTiP 3.2, so it is best to use the normal mcsolve function.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/330#issuecomment-90332734
https://github.com/qutip/qutip/pull/332#issuecomment-92690814:122,Testability,test,tests,122,"This PR should now preserve dimensionality of its arguments, has better documentation, and is now covered by several unit tests. Next, I'll make sure that I've got it working for Python 3.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/332#issuecomment-92690814
https://github.com/qutip/qutip/pull/332#issuecomment-93119397:357,Modifiability,parameteriz,parameterized,357,"Sounds good, I'll get on that, then, and make that a PR to qutip-notebooks. Roughly, this produces a pair of partial isometries representing a quantum channel that are quite useful for some theory work. For instance, [Watrous showed that](http://theoryofcomputing.org/articles/v005a011/) the diamond norm can be expressed in terms of a semidefinite program parameterized by the Stinespring dilation. It's that application in particular that motivated me to get this working, as computing diamond norms would be very useful to a wide range of different quantum information projects.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/332#issuecomment-93119397
https://github.com/qutip/qutip/pull/332#issuecomment-125435509:59,Availability,failure,failures,59,"I apologize for my distraction, but I fixed the Python 3.4 failures now. Is there anything else that I should do before this is ready to merge? Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/332#issuecomment-125435509
https://github.com/qutip/qutip/pull/332#issuecomment-125953879:63,Testability,test,tests,63,"I think this should fix the merge conflicts, as all of the new tests now pass. Sorry for the hassle!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/332#issuecomment-125953879
https://github.com/qutip/qutip/pull/336#issuecomment-94270233:122,Performance,optimiz,optimizing,122,"I seems there is a few issues with Nonetypes in for loops, but otherwise this is a great speed up. We never got around to optimizing this function nor the floquet solver (I think) and it is about time.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/336#issuecomment-94270233
https://github.com/qutip/qutip/pull/336#issuecomment-94319111:102,Testability,test,tests,102,"Sorry, I had forgotten to also commit the change of the default value for `c_ops` in `brmesolve`. The tests should pass now. In any case, I now also changed `bloch_redfield_tensor` to accept `c_ops = None` as input.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/336#issuecomment-94319111
https://github.com/qutip/qutip/pull/337#issuecomment-125637210:113,Testability,test,test,113,"Ah, got it. Anyway, this PR is orthogonal to #332, it's just that I only noticed this problem in trying to write test cases and documentation for the new functionality in that PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/337#issuecomment-125637210
https://github.com/qutip/qutip/pull/338#issuecomment-95258458:39,Testability,test,test,39,I have added a development notebook to test this pull-request.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/338#issuecomment-95258458
https://github.com/qutip/qutip/pull/338#issuecomment-95648513:39,Testability,test,test,39,I also added a development notebook to test this,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/338#issuecomment-95648513
https://github.com/qutip/qutip/pull/338#issuecomment-97736382:828,Modifiability,inherit,inherited,828,"Thanks for the feedback. I am very keen to spend some time making the control modules more QuTiP like in style. In particular trying to utilise QuTiP elements, e.g. maintaining Qobjs throughout the code. I am however focussed on trying to get some results out using the library, so it will probably be a month of so before I can start on this. ; Re the documentation, there is some theory in the first of our notebooks example-pulse_optim-Hadamard, however it could be a lot more detailed and better presented. I should be able to make a start on a general overview of the control modules though, i.e. one notebook that outlines the theory and then explains the different functions and classes and how / when to use them. Is that the kind of thing you mean?; I was wondering about the auto-generated API docs, how it deals with inherited and overidden methods etc. Do you use some specific tool to generate these? Can you point me to some docs about how it works.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/338#issuecomment-97736382
https://github.com/qutip/qutip/pull/338#issuecomment-97736382:15,Usability,feedback,feedback,15,"Thanks for the feedback. I am very keen to spend some time making the control modules more QuTiP like in style. In particular trying to utilise QuTiP elements, e.g. maintaining Qobjs throughout the code. I am however focussed on trying to get some results out using the library, so it will probably be a month of so before I can start on this. ; Re the documentation, there is some theory in the first of our notebooks example-pulse_optim-Hadamard, however it could be a lot more detailed and better presented. I should be able to make a start on a general overview of the control modules though, i.e. one notebook that outlines the theory and then explains the different functions and classes and how / when to use them. Is that the kind of thing you mean?; I was wondering about the auto-generated API docs, how it deals with inherited and overidden methods etc. Do you use some specific tool to generate these? Can you point me to some docs about how it works.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/338#issuecomment-97736382
https://github.com/qutip/qutip/pull/341#issuecomment-102252338:8,Availability,redundant,redundant,8,"useless redundant code. creates so much of a problem. @nonhermitian...merge it please, neill will add the rest",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/341#issuecomment-102252338
https://github.com/qutip/qutip/pull/341#issuecomment-102252338:8,Safety,redund,redundant,8,"useless redundant code. creates so much of a problem. @nonhermitian...merge it please, neill will add the rest",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/341#issuecomment-102252338
https://github.com/qutip/qutip/pull/341#issuecomment-102566203:532,Integrability,depend,depending,532,"It would be much better to thoroughly code review this pull request before merging rather than merging sooner and make additional PRs later. You can keep working on the PR while getting feedback on it without merging now. Things like model names and API is better to sort out once and for all before the first merge. . With this PR, I think the ossolve modeule name is not very appropriate. Most of qutip is related to open system solvers. I think rcsolve (reaction coordinate solver) is a more accurate name for this module. Also, depending on how much code you have in mind to include in this module, it might be more appropriate to put all of it in a file called rcsolve rather than creating a new module directory like you propose here. Also, don't use underscores in module names (rc_model -> rcmodel or better yet rcsolve).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/341#issuecomment-102566203
https://github.com/qutip/qutip/pull/341#issuecomment-102566203:186,Usability,feedback,feedback,186,"It would be much better to thoroughly code review this pull request before merging rather than merging sooner and make additional PRs later. You can keep working on the PR while getting feedback on it without merging now. Things like model names and API is better to sort out once and for all before the first merge. . With this PR, I think the ossolve modeule name is not very appropriate. Most of qutip is related to open system solvers. I think rcsolve (reaction coordinate solver) is a more accurate name for this module. Also, depending on how much code you have in mind to include in this module, it might be more appropriate to put all of it in a file called rcsolve rather than creating a new module directory like you propose here. Also, don't use underscores in module names (rc_model -> rcmodel or better yet rcsolve).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/341#issuecomment-102566203
https://github.com/qutip/qutip/pull/341#issuecomment-102937926:17,Usability,feedback,feedback,17,@jrjohansson ....feedback?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/341#issuecomment-102937926
https://github.com/qutip/qutip/pull/341#issuecomment-103712771:19,Integrability,rout,routine,19,"It seems like this routine is geared toward a specific problem, rather than a general input. Regardless, I think a notebook explaining this method is required, including better examples on the usage. This can be added to the documentation once it is converted to IPython notebooks. A few things I noticed are given below:; - The output is not a list, but a Result class object.; - Why is it not possible to directly calculate expectation values other than the coupling term?; - Why are the default input values what they are?; - The print statement at the end should be optional depending on the setting of the debugger.; - The call to Odeoptions in mesolve needs to be user accessible.; - tlist should not be the last input argument and should probably not be a kwarg.; - The call to eigenstates should also have an optional argument to call the sparse eigenstates solver if needed.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/341#issuecomment-103712771
https://github.com/qutip/qutip/pull/341#issuecomment-103712771:579,Integrability,depend,depending,579,"It seems like this routine is geared toward a specific problem, rather than a general input. Regardless, I think a notebook explaining this method is required, including better examples on the usage. This can be added to the documentation once it is converted to IPython notebooks. A few things I noticed are given below:; - The output is not a list, but a Result class object.; - Why is it not possible to directly calculate expectation values other than the coupling term?; - Why are the default input values what they are?; - The print statement at the end should be optional depending on the setting of the debugger.; - The call to Odeoptions in mesolve needs to be user accessible.; - tlist should not be the last input argument and should probably not be a kwarg.; - The call to eigenstates should also have an optional argument to call the sparse eigenstates solver if needed.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/341#issuecomment-103712771
https://github.com/qutip/qutip/pull/341#issuecomment-103712771:460,Modifiability,coupling,coupling,460,"It seems like this routine is geared toward a specific problem, rather than a general input. Regardless, I think a notebook explaining this method is required, including better examples on the usage. This can be added to the documentation once it is converted to IPython notebooks. A few things I noticed are given below:; - The output is not a list, but a Result class object.; - Why is it not possible to directly calculate expectation values other than the coupling term?; - Why are the default input values what they are?; - The print statement at the end should be optional depending on the setting of the debugger.; - The call to Odeoptions in mesolve needs to be user accessible.; - tlist should not be the last input argument and should probably not be a kwarg.; - The call to eigenstates should also have an optional argument to call the sparse eigenstates solver if needed.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/341#issuecomment-103712771
https://github.com/qutip/qutip/pull/341#issuecomment-103712771:675,Security,access,accessible,675,"It seems like this routine is geared toward a specific problem, rather than a general input. Regardless, I think a notebook explaining this method is required, including better examples on the usage. This can be added to the documentation once it is converted to IPython notebooks. A few things I noticed are given below:; - The output is not a list, but a Result class object.; - Why is it not possible to directly calculate expectation values other than the coupling term?; - Why are the default input values what they are?; - The print statement at the end should be optional depending on the setting of the debugger.; - The call to Odeoptions in mesolve needs to be user accessible.; - tlist should not be the last input argument and should probably not be a kwarg.; - The call to eigenstates should also have an optional argument to call the sparse eigenstates solver if needed.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/341#issuecomment-103712771
https://github.com/qutip/qutip/pull/341#issuecomment-103750029:568,Modifiability,coupling,coupling,568,"Hey guys, thanks for the feedback (this is the first time I have logged in to github in about a year!).. Just some replies to Paul's comments. The method is basically general, under certain assumptions about the bath spectrum density and bath temperature, so the 'system' can, in principle, be anything. I will also do so minor tweaking so it can deal with multiple baths and correlated baths. We will add some notebooks showing different examples and explaining when its valid later. . > Why is it not possible to directly calculate expectation values other than the coupling term?. Yeah there was a list of expectation values at some point, but it disappeared while we were making edits. Thanks for the reminder. Thanks for the other points, we will fix the various issues.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/341#issuecomment-103750029
https://github.com/qutip/qutip/pull/341#issuecomment-103750029:65,Testability,log,logged,65,"Hey guys, thanks for the feedback (this is the first time I have logged in to github in about a year!).. Just some replies to Paul's comments. The method is basically general, under certain assumptions about the bath spectrum density and bath temperature, so the 'system' can, in principle, be anything. I will also do so minor tweaking so it can deal with multiple baths and correlated baths. We will add some notebooks showing different examples and explaining when its valid later. . > Why is it not possible to directly calculate expectation values other than the coupling term?. Yeah there was a list of expectation values at some point, but it disappeared while we were making edits. Thanks for the reminder. Thanks for the other points, we will fix the various issues.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/341#issuecomment-103750029
https://github.com/qutip/qutip/pull/341#issuecomment-103750029:25,Usability,feedback,feedback,25,"Hey guys, thanks for the feedback (this is the first time I have logged in to github in about a year!).. Just some replies to Paul's comments. The method is basically general, under certain assumptions about the bath spectrum density and bath temperature, so the 'system' can, in principle, be anything. I will also do so minor tweaking so it can deal with multiple baths and correlated baths. We will add some notebooks showing different examples and explaining when its valid later. . > Why is it not possible to directly calculate expectation values other than the coupling term?. Yeah there was a list of expectation values at some point, but it disappeared while we were making edits. Thanks for the reminder. Thanks for the other points, we will fix the various issues.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/341#issuecomment-103750029
https://github.com/qutip/qutip/pull/341#issuecomment-103778948:32,Energy Efficiency,reduce,reduce,32,"Despite discovering the awesome reduce() function in python, generalizing this stuff to arbitrary baths is kinda tedious, and not very practical, so we decided not to do it (I tried for 2 baths a while back and it runs out of memory pretty quickly, as you might expect!). In any case, the hierarchy can do the same thing much more efficiently. Anubhav is working hard on some example notebooks for this RC stuff",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/341#issuecomment-103778948
https://github.com/qutip/qutip/pull/341#issuecomment-103778948:331,Energy Efficiency,efficient,efficiently,331,"Despite discovering the awesome reduce() function in python, generalizing this stuff to arbitrary baths is kinda tedious, and not very practical, so we decided not to do it (I tried for 2 baths a while back and it runs out of memory pretty quickly, as you might expect!). In any case, the hierarchy can do the same thing much more efficiently. Anubhav is working hard on some example notebooks for this RC stuff",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/341#issuecomment-103778948
https://github.com/qutip/qutip/pull/341#issuecomment-112662390:188,Modifiability,coupling,coupling,188,"quick note; we are still trying to decide about a few things, e.g., what to do about the units, i.e., whether to make hbar and boltzmann constant user definable parameters, or rescale the coupling and the cut-off frequency of the bath in a more sensible way to take them into account. I guess the latter is the 'more sensible' option, but will need to do it carefully.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/341#issuecomment-112662390
https://github.com/qutip/qutip/issues/344#issuecomment-105088915:206,Modifiability,evolve,evolve,206,"It is actually basically the same thing. However, there are several technicalities that need to be addressed in the implementation. For example, one does not know the collapse times a priori, so one has to evolve pass this time and then take a step back. Can also see:. Monte Carlo simulation of the atomic master equation for spontaneous emission; R. Dum, P. Zoller, and H. Ritsch; Phys. Rev. A 45, 4879 – Published 1 April 1992",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/344#issuecomment-105088915
https://github.com/qutip/qutip/issues/344#issuecomment-105091967:438,Deployability,integrat,integration,438,"I was claiming that the algorithm from the Molmer paper is different because it relies on small timesteps and it does not use stepping back (or more generally, it does not use any form of root finding). They are probably equivalent, but I did not find the equivalence obvious. Thanks for the reference, I will check it out. Also, for the sake of more efficient root finding (if I understand correctly currently you are just repeating the integration over a smaller interval) you might find this interesting: http://mail.scipy.org/pipermail/scipy-user/2010-March/024890.html",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/344#issuecomment-105091967
https://github.com/qutip/qutip/issues/344#issuecomment-105091967:351,Energy Efficiency,efficient,efficient,351,"I was claiming that the algorithm from the Molmer paper is different because it relies on small timesteps and it does not use stepping back (or more generally, it does not use any form of root finding). They are probably equivalent, but I did not find the equivalence obvious. Thanks for the reference, I will check it out. Also, for the sake of more efficient root finding (if I understand correctly currently you are just repeating the integration over a smaller interval) you might find this interesting: http://mail.scipy.org/pipermail/scipy-user/2010-March/024890.html",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/344#issuecomment-105091967
https://github.com/qutip/qutip/issues/344#issuecomment-105091967:438,Integrability,integrat,integration,438,"I was claiming that the algorithm from the Molmer paper is different because it relies on small timesteps and it does not use stepping back (or more generally, it does not use any form of root finding). They are probably equivalent, but I did not find the equivalence obvious. Thanks for the reference, I will check it out. Also, for the sake of more efficient root finding (if I understand correctly currently you are just repeating the integration over a smaller interval) you might find this interesting: http://mail.scipy.org/pipermail/scipy-user/2010-March/024890.html",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/344#issuecomment-105091967
https://github.com/qutip/qutip/issues/344#issuecomment-105092235:148,Availability,toler,tolerance,148,"Yes, these are the implementation issues I discussed. Calling the ode solver of course takes small steps, with the step size based on the requested tolerance level. Our root finding is trivial in this case. We linearize the evolution and then find the intercept. It almost always works in a single step, and is quite efficient.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/344#issuecomment-105092235
https://github.com/qutip/qutip/issues/344#issuecomment-105092235:317,Energy Efficiency,efficient,efficient,317,"Yes, these are the implementation issues I discussed. Calling the ode solver of course takes small steps, with the step size based on the requested tolerance level. Our root finding is trivial in this case. We linearize the evolution and then find the intercept. It almost always works in a single step, and is quite efficient.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/344#issuecomment-105092235
https://github.com/qutip/qutip/issues/344#issuecomment-105092491:13,Usability,clear,cleared,13,Thanks! This cleared up my confusion.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/344#issuecomment-105092491
https://github.com/qutip/qutip/issues/348#issuecomment-113235398:59,Availability,error,error,59,"I don't know if this is helpful, but I can get a different error if I first `import numpy`:. ```; >>> import numpy; >>> import qutip.testing as qt; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/usr/local/lib/python2.7/site-packages/qutip/__init__.py"", line 62, in <module>; qutip.settings.ipython = False; AttributeError: 'module' object has no attribute 'settings'; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-113235398
https://github.com/qutip/qutip/issues/348#issuecomment-113235398:133,Testability,test,testing,133,"I don't know if this is helpful, but I can get a different error if I first `import numpy`:. ```; >>> import numpy; >>> import qutip.testing as qt; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/usr/local/lib/python2.7/site-packages/qutip/__init__.py"", line 62, in <module>; qutip.settings.ipython = False; AttributeError: 'module' object has no attribute 'settings'; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-113235398
https://github.com/qutip/qutip/issues/348#issuecomment-113345570:31,Availability,error,error,31,"I can not reproduce the second error that you mention. In addition, it seems that the error with homebrew is not a QuTiP issue, but rather some issue with the build_ext command used there. I am not 100% what the error is, but the include file directory does not seem to be passed to the compiler.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-113345570
https://github.com/qutip/qutip/issues/348#issuecomment-113345570:86,Availability,error,error,86,"I can not reproduce the second error that you mention. In addition, it seems that the error with homebrew is not a QuTiP issue, but rather some issue with the build_ext command used there. I am not 100% what the error is, but the include file directory does not seem to be passed to the compiler.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-113345570
https://github.com/qutip/qutip/issues/348#issuecomment-113345570:212,Availability,error,error,212,"I can not reproduce the second error that you mention. In addition, it seems that the error with homebrew is not a QuTiP issue, but rather some issue with the build_ext command used there. I am not 100% what the error is, but the include file directory does not seem to be passed to the compiler.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-113345570
https://github.com/qutip/qutip/issues/348#issuecomment-113357619:0,Deployability,Install,Installation,0,Installation using MacPorts and Anaconda (without the Fortran mcsolver) both work fine on OSX. I would recommend using one of those.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-113357619
https://github.com/qutip/qutip/issues/348#issuecomment-114015405:108,Deployability,install,installation,108,"As this is not a QuTiP issue, I will close this. However, it seems that we should not include the Home Brew installation scripts in the next release. In principle, there is nothing that prevents the user from obtaining the same packages as the script manually if they still wanted to use Home Brew.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-114015405
https://github.com/qutip/qutip/issues/348#issuecomment-114015405:141,Deployability,release,release,141,"As this is not a QuTiP issue, I will close this. However, it seems that we should not include the Home Brew installation scripts in the next release. In principle, there is nothing that prevents the user from obtaining the same packages as the script manually if they still wanted to use Home Brew.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-114015405
https://github.com/qutip/qutip/issues/348#issuecomment-156227069:105,Deployability,install,installed,105,"I am not so sure about it not being a QuTIP issues, this doesn't seem to happen with other modules (also installed with homebrew) requiring numpy/arrayobject.h....",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-156227069
https://github.com/qutip/qutip/issues/348#issuecomment-172684673:37,Deployability,install,installed,37,"I have just had the same problem, (I installed additional stuff with home-brew and it broke qutip). As a complete hack workaround I noticed that DistUtil was passing to the qutip cython builder only (in my case) ; `/usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/include/python2.7`; whereas numpy was returning ; `np.get_include() -> /usr/local/lib/python2.7/site-packages/numpy/core/include`. For some reason this is not being passed in properly by qutip's setup.py. Rather than dig any further I just did.. `ln -s /usr/local/lib/python2.7/site-packages/numpy/core/include/numpy /usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/include/python2.7/numpy`. So I could get on with things.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-172684673
https://github.com/qutip/qutip/issues/348#issuecomment-263745214:1657,Availability,error,error,1657,"Hi @nonhermitian, I spent some time struggling with this as I recently shifted to macOS. This problem affects other Python installations too. I found a solution to this and if you could update it in the docs instead of the default macOS installation script, then it would be very helpful for new users. I will post the solution first and explain it below. . 1. Install a manual Python version which overrides the default Python supplied by Apple in the `usr/bin/python` path. You can check this using ```which python```. Installing using brew - . ```brew install python```. 2. Change the default Python interpreter from the one supplied by macOS in `usr/bin/python` to the user installed version in `/usr/local/bin/python`. This is explained in this [post](http://blog.manbolo.com/2014/09/27/use-python-effectively-on-os-x#p1). Edit the file `/etc/paths` using ```sudo vi etc/paths``` and move the line `/usr/local/bin` to the top. This makes the user installed Python default and the packages installed by pip or brew are imported instead of the ones supplied by apple. Restart the terminal. You may need to update numpy and scipy using ```pip install numpy``` or ```pip install numpy -U```. 3. Install qutip using ```python setup.py install```. Apple has its own Python version and a few modules such as numpy and scipy come along with it which are at `/usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/include/python2.7`. These modules are difficult to manage and update due to issues with permission. Hence, even if you update numpy or scipy using `pip` or `brew`, it is not detected by Python. ~~This also raises an issue later `error: could not create 'build/src.macosx-10.12-x86_64-2.7': Permission denied`~~. This solution seems better since it does not mess with the system default. Edit 1 : sudo -H is needed to install using ```sudo -H python setup.py install```. The -H tag sets the home directory as the default for installing configuration files.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-263745214
https://github.com/qutip/qutip/issues/348#issuecomment-263745214:123,Deployability,install,installations,123,"Hi @nonhermitian, I spent some time struggling with this as I recently shifted to macOS. This problem affects other Python installations too. I found a solution to this and if you could update it in the docs instead of the default macOS installation script, then it would be very helpful for new users. I will post the solution first and explain it below. . 1. Install a manual Python version which overrides the default Python supplied by Apple in the `usr/bin/python` path. You can check this using ```which python```. Installing using brew - . ```brew install python```. 2. Change the default Python interpreter from the one supplied by macOS in `usr/bin/python` to the user installed version in `/usr/local/bin/python`. This is explained in this [post](http://blog.manbolo.com/2014/09/27/use-python-effectively-on-os-x#p1). Edit the file `/etc/paths` using ```sudo vi etc/paths``` and move the line `/usr/local/bin` to the top. This makes the user installed Python default and the packages installed by pip or brew are imported instead of the ones supplied by apple. Restart the terminal. You may need to update numpy and scipy using ```pip install numpy``` or ```pip install numpy -U```. 3. Install qutip using ```python setup.py install```. Apple has its own Python version and a few modules such as numpy and scipy come along with it which are at `/usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/include/python2.7`. These modules are difficult to manage and update due to issues with permission. Hence, even if you update numpy or scipy using `pip` or `brew`, it is not detected by Python. ~~This also raises an issue later `error: could not create 'build/src.macosx-10.12-x86_64-2.7': Permission denied`~~. This solution seems better since it does not mess with the system default. Edit 1 : sudo -H is needed to install using ```sudo -H python setup.py install```. The -H tag sets the home directory as the default for installing configuration files.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-263745214
https://github.com/qutip/qutip/issues/348#issuecomment-263745214:186,Deployability,update,update,186,"Hi @nonhermitian, I spent some time struggling with this as I recently shifted to macOS. This problem affects other Python installations too. I found a solution to this and if you could update it in the docs instead of the default macOS installation script, then it would be very helpful for new users. I will post the solution first and explain it below. . 1. Install a manual Python version which overrides the default Python supplied by Apple in the `usr/bin/python` path. You can check this using ```which python```. Installing using brew - . ```brew install python```. 2. Change the default Python interpreter from the one supplied by macOS in `usr/bin/python` to the user installed version in `/usr/local/bin/python`. This is explained in this [post](http://blog.manbolo.com/2014/09/27/use-python-effectively-on-os-x#p1). Edit the file `/etc/paths` using ```sudo vi etc/paths``` and move the line `/usr/local/bin` to the top. This makes the user installed Python default and the packages installed by pip or brew are imported instead of the ones supplied by apple. Restart the terminal. You may need to update numpy and scipy using ```pip install numpy``` or ```pip install numpy -U```. 3. Install qutip using ```python setup.py install```. Apple has its own Python version and a few modules such as numpy and scipy come along with it which are at `/usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/include/python2.7`. These modules are difficult to manage and update due to issues with permission. Hence, even if you update numpy or scipy using `pip` or `brew`, it is not detected by Python. ~~This also raises an issue later `error: could not create 'build/src.macosx-10.12-x86_64-2.7': Permission denied`~~. This solution seems better since it does not mess with the system default. Edit 1 : sudo -H is needed to install using ```sudo -H python setup.py install```. The -H tag sets the home directory as the default for installing configuration files.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-263745214
https://github.com/qutip/qutip/issues/348#issuecomment-263745214:237,Deployability,install,installation,237,"Hi @nonhermitian, I spent some time struggling with this as I recently shifted to macOS. This problem affects other Python installations too. I found a solution to this and if you could update it in the docs instead of the default macOS installation script, then it would be very helpful for new users. I will post the solution first and explain it below. . 1. Install a manual Python version which overrides the default Python supplied by Apple in the `usr/bin/python` path. You can check this using ```which python```. Installing using brew - . ```brew install python```. 2. Change the default Python interpreter from the one supplied by macOS in `usr/bin/python` to the user installed version in `/usr/local/bin/python`. This is explained in this [post](http://blog.manbolo.com/2014/09/27/use-python-effectively-on-os-x#p1). Edit the file `/etc/paths` using ```sudo vi etc/paths``` and move the line `/usr/local/bin` to the top. This makes the user installed Python default and the packages installed by pip or brew are imported instead of the ones supplied by apple. Restart the terminal. You may need to update numpy and scipy using ```pip install numpy``` or ```pip install numpy -U```. 3. Install qutip using ```python setup.py install```. Apple has its own Python version and a few modules such as numpy and scipy come along with it which are at `/usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/include/python2.7`. These modules are difficult to manage and update due to issues with permission. Hence, even if you update numpy or scipy using `pip` or `brew`, it is not detected by Python. ~~This also raises an issue later `error: could not create 'build/src.macosx-10.12-x86_64-2.7': Permission denied`~~. This solution seems better since it does not mess with the system default. Edit 1 : sudo -H is needed to install using ```sudo -H python setup.py install```. The -H tag sets the home directory as the default for installing configuration files.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-263745214
https://github.com/qutip/qutip/issues/348#issuecomment-263745214:361,Deployability,Install,Install,361,"Hi @nonhermitian, I spent some time struggling with this as I recently shifted to macOS. This problem affects other Python installations too. I found a solution to this and if you could update it in the docs instead of the default macOS installation script, then it would be very helpful for new users. I will post the solution first and explain it below. . 1. Install a manual Python version which overrides the default Python supplied by Apple in the `usr/bin/python` path. You can check this using ```which python```. Installing using brew - . ```brew install python```. 2. Change the default Python interpreter from the one supplied by macOS in `usr/bin/python` to the user installed version in `/usr/local/bin/python`. This is explained in this [post](http://blog.manbolo.com/2014/09/27/use-python-effectively-on-os-x#p1). Edit the file `/etc/paths` using ```sudo vi etc/paths``` and move the line `/usr/local/bin` to the top. This makes the user installed Python default and the packages installed by pip or brew are imported instead of the ones supplied by apple. Restart the terminal. You may need to update numpy and scipy using ```pip install numpy``` or ```pip install numpy -U```. 3. Install qutip using ```python setup.py install```. Apple has its own Python version and a few modules such as numpy and scipy come along with it which are at `/usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/include/python2.7`. These modules are difficult to manage and update due to issues with permission. Hence, even if you update numpy or scipy using `pip` or `brew`, it is not detected by Python. ~~This also raises an issue later `error: could not create 'build/src.macosx-10.12-x86_64-2.7': Permission denied`~~. This solution seems better since it does not mess with the system default. Edit 1 : sudo -H is needed to install using ```sudo -H python setup.py install```. The -H tag sets the home directory as the default for installing configuration files.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-263745214
https://github.com/qutip/qutip/issues/348#issuecomment-263745214:521,Deployability,Install,Installing,521,"Hi @nonhermitian, I spent some time struggling with this as I recently shifted to macOS. This problem affects other Python installations too. I found a solution to this and if you could update it in the docs instead of the default macOS installation script, then it would be very helpful for new users. I will post the solution first and explain it below. . 1. Install a manual Python version which overrides the default Python supplied by Apple in the `usr/bin/python` path. You can check this using ```which python```. Installing using brew - . ```brew install python```. 2. Change the default Python interpreter from the one supplied by macOS in `usr/bin/python` to the user installed version in `/usr/local/bin/python`. This is explained in this [post](http://blog.manbolo.com/2014/09/27/use-python-effectively-on-os-x#p1). Edit the file `/etc/paths` using ```sudo vi etc/paths``` and move the line `/usr/local/bin` to the top. This makes the user installed Python default and the packages installed by pip or brew are imported instead of the ones supplied by apple. Restart the terminal. You may need to update numpy and scipy using ```pip install numpy``` or ```pip install numpy -U```. 3. Install qutip using ```python setup.py install```. Apple has its own Python version and a few modules such as numpy and scipy come along with it which are at `/usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/include/python2.7`. These modules are difficult to manage and update due to issues with permission. Hence, even if you update numpy or scipy using `pip` or `brew`, it is not detected by Python. ~~This also raises an issue later `error: could not create 'build/src.macosx-10.12-x86_64-2.7': Permission denied`~~. This solution seems better since it does not mess with the system default. Edit 1 : sudo -H is needed to install using ```sudo -H python setup.py install```. The -H tag sets the home directory as the default for installing configuration files.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-263745214
https://github.com/qutip/qutip/issues/348#issuecomment-263745214:555,Deployability,install,install,555,"Hi @nonhermitian, I spent some time struggling with this as I recently shifted to macOS. This problem affects other Python installations too. I found a solution to this and if you could update it in the docs instead of the default macOS installation script, then it would be very helpful for new users. I will post the solution first and explain it below. . 1. Install a manual Python version which overrides the default Python supplied by Apple in the `usr/bin/python` path. You can check this using ```which python```. Installing using brew - . ```brew install python```. 2. Change the default Python interpreter from the one supplied by macOS in `usr/bin/python` to the user installed version in `/usr/local/bin/python`. This is explained in this [post](http://blog.manbolo.com/2014/09/27/use-python-effectively-on-os-x#p1). Edit the file `/etc/paths` using ```sudo vi etc/paths``` and move the line `/usr/local/bin` to the top. This makes the user installed Python default and the packages installed by pip or brew are imported instead of the ones supplied by apple. Restart the terminal. You may need to update numpy and scipy using ```pip install numpy``` or ```pip install numpy -U```. 3. Install qutip using ```python setup.py install```. Apple has its own Python version and a few modules such as numpy and scipy come along with it which are at `/usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/include/python2.7`. These modules are difficult to manage and update due to issues with permission. Hence, even if you update numpy or scipy using `pip` or `brew`, it is not detected by Python. ~~This also raises an issue later `error: could not create 'build/src.macosx-10.12-x86_64-2.7': Permission denied`~~. This solution seems better since it does not mess with the system default. Edit 1 : sudo -H is needed to install using ```sudo -H python setup.py install```. The -H tag sets the home directory as the default for installing configuration files.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-263745214
https://github.com/qutip/qutip/issues/348#issuecomment-263745214:678,Deployability,install,installed,678,"Hi @nonhermitian, I spent some time struggling with this as I recently shifted to macOS. This problem affects other Python installations too. I found a solution to this and if you could update it in the docs instead of the default macOS installation script, then it would be very helpful for new users. I will post the solution first and explain it below. . 1. Install a manual Python version which overrides the default Python supplied by Apple in the `usr/bin/python` path. You can check this using ```which python```. Installing using brew - . ```brew install python```. 2. Change the default Python interpreter from the one supplied by macOS in `usr/bin/python` to the user installed version in `/usr/local/bin/python`. This is explained in this [post](http://blog.manbolo.com/2014/09/27/use-python-effectively-on-os-x#p1). Edit the file `/etc/paths` using ```sudo vi etc/paths``` and move the line `/usr/local/bin` to the top. This makes the user installed Python default and the packages installed by pip or brew are imported instead of the ones supplied by apple. Restart the terminal. You may need to update numpy and scipy using ```pip install numpy``` or ```pip install numpy -U```. 3. Install qutip using ```python setup.py install```. Apple has its own Python version and a few modules such as numpy and scipy come along with it which are at `/usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/include/python2.7`. These modules are difficult to manage and update due to issues with permission. Hence, even if you update numpy or scipy using `pip` or `brew`, it is not detected by Python. ~~This also raises an issue later `error: could not create 'build/src.macosx-10.12-x86_64-2.7': Permission denied`~~. This solution seems better since it does not mess with the system default. Edit 1 : sudo -H is needed to install using ```sudo -H python setup.py install```. The -H tag sets the home directory as the default for installing configuration files.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-263745214
https://github.com/qutip/qutip/issues/348#issuecomment-263745214:952,Deployability,install,installed,952,"Hi @nonhermitian, I spent some time struggling with this as I recently shifted to macOS. This problem affects other Python installations too. I found a solution to this and if you could update it in the docs instead of the default macOS installation script, then it would be very helpful for new users. I will post the solution first and explain it below. . 1. Install a manual Python version which overrides the default Python supplied by Apple in the `usr/bin/python` path. You can check this using ```which python```. Installing using brew - . ```brew install python```. 2. Change the default Python interpreter from the one supplied by macOS in `usr/bin/python` to the user installed version in `/usr/local/bin/python`. This is explained in this [post](http://blog.manbolo.com/2014/09/27/use-python-effectively-on-os-x#p1). Edit the file `/etc/paths` using ```sudo vi etc/paths``` and move the line `/usr/local/bin` to the top. This makes the user installed Python default and the packages installed by pip or brew are imported instead of the ones supplied by apple. Restart the terminal. You may need to update numpy and scipy using ```pip install numpy``` or ```pip install numpy -U```. 3. Install qutip using ```python setup.py install```. Apple has its own Python version and a few modules such as numpy and scipy come along with it which are at `/usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/include/python2.7`. These modules are difficult to manage and update due to issues with permission. Hence, even if you update numpy or scipy using `pip` or `brew`, it is not detected by Python. ~~This also raises an issue later `error: could not create 'build/src.macosx-10.12-x86_64-2.7': Permission denied`~~. This solution seems better since it does not mess with the system default. Edit 1 : sudo -H is needed to install using ```sudo -H python setup.py install```. The -H tag sets the home directory as the default for installing configuration files.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-263745214
https://github.com/qutip/qutip/issues/348#issuecomment-263745214:994,Deployability,install,installed,994,"Hi @nonhermitian, I spent some time struggling with this as I recently shifted to macOS. This problem affects other Python installations too. I found a solution to this and if you could update it in the docs instead of the default macOS installation script, then it would be very helpful for new users. I will post the solution first and explain it below. . 1. Install a manual Python version which overrides the default Python supplied by Apple in the `usr/bin/python` path. You can check this using ```which python```. Installing using brew - . ```brew install python```. 2. Change the default Python interpreter from the one supplied by macOS in `usr/bin/python` to the user installed version in `/usr/local/bin/python`. This is explained in this [post](http://blog.manbolo.com/2014/09/27/use-python-effectively-on-os-x#p1). Edit the file `/etc/paths` using ```sudo vi etc/paths``` and move the line `/usr/local/bin` to the top. This makes the user installed Python default and the packages installed by pip or brew are imported instead of the ones supplied by apple. Restart the terminal. You may need to update numpy and scipy using ```pip install numpy``` or ```pip install numpy -U```. 3. Install qutip using ```python setup.py install```. Apple has its own Python version and a few modules such as numpy and scipy come along with it which are at `/usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/include/python2.7`. These modules are difficult to manage and update due to issues with permission. Hence, even if you update numpy or scipy using `pip` or `brew`, it is not detected by Python. ~~This also raises an issue later `error: could not create 'build/src.macosx-10.12-x86_64-2.7': Permission denied`~~. This solution seems better since it does not mess with the system default. Edit 1 : sudo -H is needed to install using ```sudo -H python setup.py install```. The -H tag sets the home directory as the default for installing configuration files.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-263745214
https://github.com/qutip/qutip/issues/348#issuecomment-263745214:1109,Deployability,update,update,1109,"Hi @nonhermitian, I spent some time struggling with this as I recently shifted to macOS. This problem affects other Python installations too. I found a solution to this and if you could update it in the docs instead of the default macOS installation script, then it would be very helpful for new users. I will post the solution first and explain it below. . 1. Install a manual Python version which overrides the default Python supplied by Apple in the `usr/bin/python` path. You can check this using ```which python```. Installing using brew - . ```brew install python```. 2. Change the default Python interpreter from the one supplied by macOS in `usr/bin/python` to the user installed version in `/usr/local/bin/python`. This is explained in this [post](http://blog.manbolo.com/2014/09/27/use-python-effectively-on-os-x#p1). Edit the file `/etc/paths` using ```sudo vi etc/paths``` and move the line `/usr/local/bin` to the top. This makes the user installed Python default and the packages installed by pip or brew are imported instead of the ones supplied by apple. Restart the terminal. You may need to update numpy and scipy using ```pip install numpy``` or ```pip install numpy -U```. 3. Install qutip using ```python setup.py install```. Apple has its own Python version and a few modules such as numpy and scipy come along with it which are at `/usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/include/python2.7`. These modules are difficult to manage and update due to issues with permission. Hence, even if you update numpy or scipy using `pip` or `brew`, it is not detected by Python. ~~This also raises an issue later `error: could not create 'build/src.macosx-10.12-x86_64-2.7': Permission denied`~~. This solution seems better since it does not mess with the system default. Edit 1 : sudo -H is needed to install using ```sudo -H python setup.py install```. The -H tag sets the home directory as the default for installing configuration files.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-263745214
https://github.com/qutip/qutip/issues/348#issuecomment-263745214:1145,Deployability,install,install,1145,"Hi @nonhermitian, I spent some time struggling with this as I recently shifted to macOS. This problem affects other Python installations too. I found a solution to this and if you could update it in the docs instead of the default macOS installation script, then it would be very helpful for new users. I will post the solution first and explain it below. . 1. Install a manual Python version which overrides the default Python supplied by Apple in the `usr/bin/python` path. You can check this using ```which python```. Installing using brew - . ```brew install python```. 2. Change the default Python interpreter from the one supplied by macOS in `usr/bin/python` to the user installed version in `/usr/local/bin/python`. This is explained in this [post](http://blog.manbolo.com/2014/09/27/use-python-effectively-on-os-x#p1). Edit the file `/etc/paths` using ```sudo vi etc/paths``` and move the line `/usr/local/bin` to the top. This makes the user installed Python default and the packages installed by pip or brew are imported instead of the ones supplied by apple. Restart the terminal. You may need to update numpy and scipy using ```pip install numpy``` or ```pip install numpy -U```. 3. Install qutip using ```python setup.py install```. Apple has its own Python version and a few modules such as numpy and scipy come along with it which are at `/usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/include/python2.7`. These modules are difficult to manage and update due to issues with permission. Hence, even if you update numpy or scipy using `pip` or `brew`, it is not detected by Python. ~~This also raises an issue later `error: could not create 'build/src.macosx-10.12-x86_64-2.7': Permission denied`~~. This solution seems better since it does not mess with the system default. Edit 1 : sudo -H is needed to install using ```sudo -H python setup.py install```. The -H tag sets the home directory as the default for installing configuration files.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-263745214
https://github.com/qutip/qutip/issues/348#issuecomment-263745214:1172,Deployability,install,install,1172,"Hi @nonhermitian, I spent some time struggling with this as I recently shifted to macOS. This problem affects other Python installations too. I found a solution to this and if you could update it in the docs instead of the default macOS installation script, then it would be very helpful for new users. I will post the solution first and explain it below. . 1. Install a manual Python version which overrides the default Python supplied by Apple in the `usr/bin/python` path. You can check this using ```which python```. Installing using brew - . ```brew install python```. 2. Change the default Python interpreter from the one supplied by macOS in `usr/bin/python` to the user installed version in `/usr/local/bin/python`. This is explained in this [post](http://blog.manbolo.com/2014/09/27/use-python-effectively-on-os-x#p1). Edit the file `/etc/paths` using ```sudo vi etc/paths``` and move the line `/usr/local/bin` to the top. This makes the user installed Python default and the packages installed by pip or brew are imported instead of the ones supplied by apple. Restart the terminal. You may need to update numpy and scipy using ```pip install numpy``` or ```pip install numpy -U```. 3. Install qutip using ```python setup.py install```. Apple has its own Python version and a few modules such as numpy and scipy come along with it which are at `/usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/include/python2.7`. These modules are difficult to manage and update due to issues with permission. Hence, even if you update numpy or scipy using `pip` or `brew`, it is not detected by Python. ~~This also raises an issue later `error: could not create 'build/src.macosx-10.12-x86_64-2.7': Permission denied`~~. This solution seems better since it does not mess with the system default. Edit 1 : sudo -H is needed to install using ```sudo -H python setup.py install```. The -H tag sets the home directory as the default for installing configuration files.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-263745214
https://github.com/qutip/qutip/issues/348#issuecomment-263745214:1196,Deployability,Install,Install,1196,"Hi @nonhermitian, I spent some time struggling with this as I recently shifted to macOS. This problem affects other Python installations too. I found a solution to this and if you could update it in the docs instead of the default macOS installation script, then it would be very helpful for new users. I will post the solution first and explain it below. . 1. Install a manual Python version which overrides the default Python supplied by Apple in the `usr/bin/python` path. You can check this using ```which python```. Installing using brew - . ```brew install python```. 2. Change the default Python interpreter from the one supplied by macOS in `usr/bin/python` to the user installed version in `/usr/local/bin/python`. This is explained in this [post](http://blog.manbolo.com/2014/09/27/use-python-effectively-on-os-x#p1). Edit the file `/etc/paths` using ```sudo vi etc/paths``` and move the line `/usr/local/bin` to the top. This makes the user installed Python default and the packages installed by pip or brew are imported instead of the ones supplied by apple. Restart the terminal. You may need to update numpy and scipy using ```pip install numpy``` or ```pip install numpy -U```. 3. Install qutip using ```python setup.py install```. Apple has its own Python version and a few modules such as numpy and scipy come along with it which are at `/usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/include/python2.7`. These modules are difficult to manage and update due to issues with permission. Hence, even if you update numpy or scipy using `pip` or `brew`, it is not detected by Python. ~~This also raises an issue later `error: could not create 'build/src.macosx-10.12-x86_64-2.7': Permission denied`~~. This solution seems better since it does not mess with the system default. Edit 1 : sudo -H is needed to install using ```sudo -H python setup.py install```. The -H tag sets the home directory as the default for installing configuration files.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-263745214
https://github.com/qutip/qutip/issues/348#issuecomment-263745214:1235,Deployability,install,install,1235,"Hi @nonhermitian, I spent some time struggling with this as I recently shifted to macOS. This problem affects other Python installations too. I found a solution to this and if you could update it in the docs instead of the default macOS installation script, then it would be very helpful for new users. I will post the solution first and explain it below. . 1. Install a manual Python version which overrides the default Python supplied by Apple in the `usr/bin/python` path. You can check this using ```which python```. Installing using brew - . ```brew install python```. 2. Change the default Python interpreter from the one supplied by macOS in `usr/bin/python` to the user installed version in `/usr/local/bin/python`. This is explained in this [post](http://blog.manbolo.com/2014/09/27/use-python-effectively-on-os-x#p1). Edit the file `/etc/paths` using ```sudo vi etc/paths``` and move the line `/usr/local/bin` to the top. This makes the user installed Python default and the packages installed by pip or brew are imported instead of the ones supplied by apple. Restart the terminal. You may need to update numpy and scipy using ```pip install numpy``` or ```pip install numpy -U```. 3. Install qutip using ```python setup.py install```. Apple has its own Python version and a few modules such as numpy and scipy come along with it which are at `/usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/include/python2.7`. These modules are difficult to manage and update due to issues with permission. Hence, even if you update numpy or scipy using `pip` or `brew`, it is not detected by Python. ~~This also raises an issue later `error: could not create 'build/src.macosx-10.12-x86_64-2.7': Permission denied`~~. This solution seems better since it does not mess with the system default. Edit 1 : sudo -H is needed to install using ```sudo -H python setup.py install```. The -H tag sets the home directory as the default for installing configuration files.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-263745214
https://github.com/qutip/qutip/issues/348#issuecomment-263745214:1490,Deployability,update,update,1490,"Hi @nonhermitian, I spent some time struggling with this as I recently shifted to macOS. This problem affects other Python installations too. I found a solution to this and if you could update it in the docs instead of the default macOS installation script, then it would be very helpful for new users. I will post the solution first and explain it below. . 1. Install a manual Python version which overrides the default Python supplied by Apple in the `usr/bin/python` path. You can check this using ```which python```. Installing using brew - . ```brew install python```. 2. Change the default Python interpreter from the one supplied by macOS in `usr/bin/python` to the user installed version in `/usr/local/bin/python`. This is explained in this [post](http://blog.manbolo.com/2014/09/27/use-python-effectively-on-os-x#p1). Edit the file `/etc/paths` using ```sudo vi etc/paths``` and move the line `/usr/local/bin` to the top. This makes the user installed Python default and the packages installed by pip or brew are imported instead of the ones supplied by apple. Restart the terminal. You may need to update numpy and scipy using ```pip install numpy``` or ```pip install numpy -U```. 3. Install qutip using ```python setup.py install```. Apple has its own Python version and a few modules such as numpy and scipy come along with it which are at `/usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/include/python2.7`. These modules are difficult to manage and update due to issues with permission. Hence, even if you update numpy or scipy using `pip` or `brew`, it is not detected by Python. ~~This also raises an issue later `error: could not create 'build/src.macosx-10.12-x86_64-2.7': Permission denied`~~. This solution seems better since it does not mess with the system default. Edit 1 : sudo -H is needed to install using ```sudo -H python setup.py install```. The -H tag sets the home directory as the default for installing configuration files.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-263745214
https://github.com/qutip/qutip/issues/348#issuecomment-263745214:1547,Deployability,update,update,1547,"Hi @nonhermitian, I spent some time struggling with this as I recently shifted to macOS. This problem affects other Python installations too. I found a solution to this and if you could update it in the docs instead of the default macOS installation script, then it would be very helpful for new users. I will post the solution first and explain it below. . 1. Install a manual Python version which overrides the default Python supplied by Apple in the `usr/bin/python` path. You can check this using ```which python```. Installing using brew - . ```brew install python```. 2. Change the default Python interpreter from the one supplied by macOS in `usr/bin/python` to the user installed version in `/usr/local/bin/python`. This is explained in this [post](http://blog.manbolo.com/2014/09/27/use-python-effectively-on-os-x#p1). Edit the file `/etc/paths` using ```sudo vi etc/paths``` and move the line `/usr/local/bin` to the top. This makes the user installed Python default and the packages installed by pip or brew are imported instead of the ones supplied by apple. Restart the terminal. You may need to update numpy and scipy using ```pip install numpy``` or ```pip install numpy -U```. 3. Install qutip using ```python setup.py install```. Apple has its own Python version and a few modules such as numpy and scipy come along with it which are at `/usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/include/python2.7`. These modules are difficult to manage and update due to issues with permission. Hence, even if you update numpy or scipy using `pip` or `brew`, it is not detected by Python. ~~This also raises an issue later `error: could not create 'build/src.macosx-10.12-x86_64-2.7': Permission denied`~~. This solution seems better since it does not mess with the system default. Edit 1 : sudo -H is needed to install using ```sudo -H python setup.py install```. The -H tag sets the home directory as the default for installing configuration files.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-263745214
https://github.com/qutip/qutip/issues/348#issuecomment-263745214:1845,Deployability,install,install,1845,"Hi @nonhermitian, I spent some time struggling with this as I recently shifted to macOS. This problem affects other Python installations too. I found a solution to this and if you could update it in the docs instead of the default macOS installation script, then it would be very helpful for new users. I will post the solution first and explain it below. . 1. Install a manual Python version which overrides the default Python supplied by Apple in the `usr/bin/python` path. You can check this using ```which python```. Installing using brew - . ```brew install python```. 2. Change the default Python interpreter from the one supplied by macOS in `usr/bin/python` to the user installed version in `/usr/local/bin/python`. This is explained in this [post](http://blog.manbolo.com/2014/09/27/use-python-effectively-on-os-x#p1). Edit the file `/etc/paths` using ```sudo vi etc/paths``` and move the line `/usr/local/bin` to the top. This makes the user installed Python default and the packages installed by pip or brew are imported instead of the ones supplied by apple. Restart the terminal. You may need to update numpy and scipy using ```pip install numpy``` or ```pip install numpy -U```. 3. Install qutip using ```python setup.py install```. Apple has its own Python version and a few modules such as numpy and scipy come along with it which are at `/usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/include/python2.7`. These modules are difficult to manage and update due to issues with permission. Hence, even if you update numpy or scipy using `pip` or `brew`, it is not detected by Python. ~~This also raises an issue later `error: could not create 'build/src.macosx-10.12-x86_64-2.7': Permission denied`~~. This solution seems better since it does not mess with the system default. Edit 1 : sudo -H is needed to install using ```sudo -H python setup.py install```. The -H tag sets the home directory as the default for installing configuration files.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-263745214
https://github.com/qutip/qutip/issues/348#issuecomment-263745214:1886,Deployability,install,install,1886,"Hi @nonhermitian, I spent some time struggling with this as I recently shifted to macOS. This problem affects other Python installations too. I found a solution to this and if you could update it in the docs instead of the default macOS installation script, then it would be very helpful for new users. I will post the solution first and explain it below. . 1. Install a manual Python version which overrides the default Python supplied by Apple in the `usr/bin/python` path. You can check this using ```which python```. Installing using brew - . ```brew install python```. 2. Change the default Python interpreter from the one supplied by macOS in `usr/bin/python` to the user installed version in `/usr/local/bin/python`. This is explained in this [post](http://blog.manbolo.com/2014/09/27/use-python-effectively-on-os-x#p1). Edit the file `/etc/paths` using ```sudo vi etc/paths``` and move the line `/usr/local/bin` to the top. This makes the user installed Python default and the packages installed by pip or brew are imported instead of the ones supplied by apple. Restart the terminal. You may need to update numpy and scipy using ```pip install numpy``` or ```pip install numpy -U```. 3. Install qutip using ```python setup.py install```. Apple has its own Python version and a few modules such as numpy and scipy come along with it which are at `/usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/include/python2.7`. These modules are difficult to manage and update due to issues with permission. Hence, even if you update numpy or scipy using `pip` or `brew`, it is not detected by Python. ~~This also raises an issue later `error: could not create 'build/src.macosx-10.12-x86_64-2.7': Permission denied`~~. This solution seems better since it does not mess with the system default. Edit 1 : sudo -H is needed to install using ```sudo -H python setup.py install```. The -H tag sets the home directory as the default for installing configuration files.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-263745214
https://github.com/qutip/qutip/issues/348#issuecomment-263745214:1952,Deployability,install,installing,1952,"Hi @nonhermitian, I spent some time struggling with this as I recently shifted to macOS. This problem affects other Python installations too. I found a solution to this and if you could update it in the docs instead of the default macOS installation script, then it would be very helpful for new users. I will post the solution first and explain it below. . 1. Install a manual Python version which overrides the default Python supplied by Apple in the `usr/bin/python` path. You can check this using ```which python```. Installing using brew - . ```brew install python```. 2. Change the default Python interpreter from the one supplied by macOS in `usr/bin/python` to the user installed version in `/usr/local/bin/python`. This is explained in this [post](http://blog.manbolo.com/2014/09/27/use-python-effectively-on-os-x#p1). Edit the file `/etc/paths` using ```sudo vi etc/paths``` and move the line `/usr/local/bin` to the top. This makes the user installed Python default and the packages installed by pip or brew are imported instead of the ones supplied by apple. Restart the terminal. You may need to update numpy and scipy using ```pip install numpy``` or ```pip install numpy -U```. 3. Install qutip using ```python setup.py install```. Apple has its own Python version and a few modules such as numpy and scipy come along with it which are at `/usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/include/python2.7`. These modules are difficult to manage and update due to issues with permission. Hence, even if you update numpy or scipy using `pip` or `brew`, it is not detected by Python. ~~This also raises an issue later `error: could not create 'build/src.macosx-10.12-x86_64-2.7': Permission denied`~~. This solution seems better since it does not mess with the system default. Edit 1 : sudo -H is needed to install using ```sudo -H python setup.py install```. The -H tag sets the home directory as the default for installing configuration files.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-263745214
https://github.com/qutip/qutip/issues/348#issuecomment-263745214:1963,Deployability,configurat,configuration,1963,"Hi @nonhermitian, I spent some time struggling with this as I recently shifted to macOS. This problem affects other Python installations too. I found a solution to this and if you could update it in the docs instead of the default macOS installation script, then it would be very helpful for new users. I will post the solution first and explain it below. . 1. Install a manual Python version which overrides the default Python supplied by Apple in the `usr/bin/python` path. You can check this using ```which python```. Installing using brew - . ```brew install python```. 2. Change the default Python interpreter from the one supplied by macOS in `usr/bin/python` to the user installed version in `/usr/local/bin/python`. This is explained in this [post](http://blog.manbolo.com/2014/09/27/use-python-effectively-on-os-x#p1). Edit the file `/etc/paths` using ```sudo vi etc/paths``` and move the line `/usr/local/bin` to the top. This makes the user installed Python default and the packages installed by pip or brew are imported instead of the ones supplied by apple. Restart the terminal. You may need to update numpy and scipy using ```pip install numpy``` or ```pip install numpy -U```. 3. Install qutip using ```python setup.py install```. Apple has its own Python version and a few modules such as numpy and scipy come along with it which are at `/usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/include/python2.7`. These modules are difficult to manage and update due to issues with permission. Hence, even if you update numpy or scipy using `pip` or `brew`, it is not detected by Python. ~~This also raises an issue later `error: could not create 'build/src.macosx-10.12-x86_64-2.7': Permission denied`~~. This solution seems better since it does not mess with the system default. Edit 1 : sudo -H is needed to install using ```sudo -H python setup.py install```. The -H tag sets the home directory as the default for installing configuration files.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-263745214
https://github.com/qutip/qutip/issues/348#issuecomment-263745214:1963,Modifiability,config,configuration,1963,"Hi @nonhermitian, I spent some time struggling with this as I recently shifted to macOS. This problem affects other Python installations too. I found a solution to this and if you could update it in the docs instead of the default macOS installation script, then it would be very helpful for new users. I will post the solution first and explain it below. . 1. Install a manual Python version which overrides the default Python supplied by Apple in the `usr/bin/python` path. You can check this using ```which python```. Installing using brew - . ```brew install python```. 2. Change the default Python interpreter from the one supplied by macOS in `usr/bin/python` to the user installed version in `/usr/local/bin/python`. This is explained in this [post](http://blog.manbolo.com/2014/09/27/use-python-effectively-on-os-x#p1). Edit the file `/etc/paths` using ```sudo vi etc/paths``` and move the line `/usr/local/bin` to the top. This makes the user installed Python default and the packages installed by pip or brew are imported instead of the ones supplied by apple. Restart the terminal. You may need to update numpy and scipy using ```pip install numpy``` or ```pip install numpy -U```. 3. Install qutip using ```python setup.py install```. Apple has its own Python version and a few modules such as numpy and scipy come along with it which are at `/usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/include/python2.7`. These modules are difficult to manage and update due to issues with permission. Hence, even if you update numpy or scipy using `pip` or `brew`, it is not detected by Python. ~~This also raises an issue later `error: could not create 'build/src.macosx-10.12-x86_64-2.7': Permission denied`~~. This solution seems better since it does not mess with the system default. Edit 1 : sudo -H is needed to install using ```sudo -H python setup.py install```. The -H tag sets the home directory as the default for installing configuration files.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-263745214
https://github.com/qutip/qutip/issues/348#issuecomment-263745214:1602,Safety,detect,detected,1602,"Hi @nonhermitian, I spent some time struggling with this as I recently shifted to macOS. This problem affects other Python installations too. I found a solution to this and if you could update it in the docs instead of the default macOS installation script, then it would be very helpful for new users. I will post the solution first and explain it below. . 1. Install a manual Python version which overrides the default Python supplied by Apple in the `usr/bin/python` path. You can check this using ```which python```. Installing using brew - . ```brew install python```. 2. Change the default Python interpreter from the one supplied by macOS in `usr/bin/python` to the user installed version in `/usr/local/bin/python`. This is explained in this [post](http://blog.manbolo.com/2014/09/27/use-python-effectively-on-os-x#p1). Edit the file `/etc/paths` using ```sudo vi etc/paths``` and move the line `/usr/local/bin` to the top. This makes the user installed Python default and the packages installed by pip or brew are imported instead of the ones supplied by apple. Restart the terminal. You may need to update numpy and scipy using ```pip install numpy``` or ```pip install numpy -U```. 3. Install qutip using ```python setup.py install```. Apple has its own Python version and a few modules such as numpy and scipy come along with it which are at `/usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/include/python2.7`. These modules are difficult to manage and update due to issues with permission. Hence, even if you update numpy or scipy using `pip` or `brew`, it is not detected by Python. ~~This also raises an issue later `error: could not create 'build/src.macosx-10.12-x86_64-2.7': Permission denied`~~. This solution seems better since it does not mess with the system default. Edit 1 : sudo -H is needed to install using ```sudo -H python setup.py install```. The -H tag sets the home directory as the default for installing configuration files.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-263745214
https://github.com/qutip/qutip/issues/348#issuecomment-263750245:150,Availability,error,error,150,"I am now trying to setup a developement environment using ```python setup.py develop``` and ```python setup.py build_ext --inplace``` but getting the error . ```; cy/stochastic.pyx: cannot find cimported module 'qutip.cy.spmatfuncs'; Appending qutip.cy configuration to qutip; Ignoring attempt to set 'name' (from 'qutip' to 'qutip.cy'); Appending qutip.control configuration to qutip; Ignoring attempt to set 'name' (from 'qutip' to 'qutip.control'); Traceback (most recent call last):; File ""setup.py"", line 18, in <module>; setup(**configuration(top_path='').todict()); File ""setup.py"", line 10, in configuration; if os.environ['FORTRAN_LIBS'] == 'TRUE':; File ""/usr/local/Cellar/python/2.7.12_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/UserDict.py"", line 40, in __getitem__; raise KeyError(key); KeyError: 'FORTRAN_LIBS'; ```; I have gcc and gfortran installed and I suspect this might also be due to some issue with the file paths. I will try to get a workaround and post soon.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-263750245
https://github.com/qutip/qutip/issues/348#issuecomment-263750245:253,Deployability,configurat,configuration,253,"I am now trying to setup a developement environment using ```python setup.py develop``` and ```python setup.py build_ext --inplace``` but getting the error . ```; cy/stochastic.pyx: cannot find cimported module 'qutip.cy.spmatfuncs'; Appending qutip.cy configuration to qutip; Ignoring attempt to set 'name' (from 'qutip' to 'qutip.cy'); Appending qutip.control configuration to qutip; Ignoring attempt to set 'name' (from 'qutip' to 'qutip.control'); Traceback (most recent call last):; File ""setup.py"", line 18, in <module>; setup(**configuration(top_path='').todict()); File ""setup.py"", line 10, in configuration; if os.environ['FORTRAN_LIBS'] == 'TRUE':; File ""/usr/local/Cellar/python/2.7.12_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/UserDict.py"", line 40, in __getitem__; raise KeyError(key); KeyError: 'FORTRAN_LIBS'; ```; I have gcc and gfortran installed and I suspect this might also be due to some issue with the file paths. I will try to get a workaround and post soon.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-263750245
https://github.com/qutip/qutip/issues/348#issuecomment-263750245:362,Deployability,configurat,configuration,362,"I am now trying to setup a developement environment using ```python setup.py develop``` and ```python setup.py build_ext --inplace``` but getting the error . ```; cy/stochastic.pyx: cannot find cimported module 'qutip.cy.spmatfuncs'; Appending qutip.cy configuration to qutip; Ignoring attempt to set 'name' (from 'qutip' to 'qutip.cy'); Appending qutip.control configuration to qutip; Ignoring attempt to set 'name' (from 'qutip' to 'qutip.control'); Traceback (most recent call last):; File ""setup.py"", line 18, in <module>; setup(**configuration(top_path='').todict()); File ""setup.py"", line 10, in configuration; if os.environ['FORTRAN_LIBS'] == 'TRUE':; File ""/usr/local/Cellar/python/2.7.12_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/UserDict.py"", line 40, in __getitem__; raise KeyError(key); KeyError: 'FORTRAN_LIBS'; ```; I have gcc and gfortran installed and I suspect this might also be due to some issue with the file paths. I will try to get a workaround and post soon.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-263750245
https://github.com/qutip/qutip/issues/348#issuecomment-263750245:535,Deployability,configurat,configuration,535,"I am now trying to setup a developement environment using ```python setup.py develop``` and ```python setup.py build_ext --inplace``` but getting the error . ```; cy/stochastic.pyx: cannot find cimported module 'qutip.cy.spmatfuncs'; Appending qutip.cy configuration to qutip; Ignoring attempt to set 'name' (from 'qutip' to 'qutip.cy'); Appending qutip.control configuration to qutip; Ignoring attempt to set 'name' (from 'qutip' to 'qutip.control'); Traceback (most recent call last):; File ""setup.py"", line 18, in <module>; setup(**configuration(top_path='').todict()); File ""setup.py"", line 10, in configuration; if os.environ['FORTRAN_LIBS'] == 'TRUE':; File ""/usr/local/Cellar/python/2.7.12_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/UserDict.py"", line 40, in __getitem__; raise KeyError(key); KeyError: 'FORTRAN_LIBS'; ```; I have gcc and gfortran installed and I suspect this might also be due to some issue with the file paths. I will try to get a workaround and post soon.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-263750245
https://github.com/qutip/qutip/issues/348#issuecomment-263750245:602,Deployability,configurat,configuration,602,"I am now trying to setup a developement environment using ```python setup.py develop``` and ```python setup.py build_ext --inplace``` but getting the error . ```; cy/stochastic.pyx: cannot find cimported module 'qutip.cy.spmatfuncs'; Appending qutip.cy configuration to qutip; Ignoring attempt to set 'name' (from 'qutip' to 'qutip.cy'); Appending qutip.control configuration to qutip; Ignoring attempt to set 'name' (from 'qutip' to 'qutip.control'); Traceback (most recent call last):; File ""setup.py"", line 18, in <module>; setup(**configuration(top_path='').todict()); File ""setup.py"", line 10, in configuration; if os.environ['FORTRAN_LIBS'] == 'TRUE':; File ""/usr/local/Cellar/python/2.7.12_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/UserDict.py"", line 40, in __getitem__; raise KeyError(key); KeyError: 'FORTRAN_LIBS'; ```; I have gcc and gfortran installed and I suspect this might also be due to some issue with the file paths. I will try to get a workaround and post soon.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-263750245
https://github.com/qutip/qutip/issues/348#issuecomment-263750245:869,Deployability,install,installed,869,"I am now trying to setup a developement environment using ```python setup.py develop``` and ```python setup.py build_ext --inplace``` but getting the error . ```; cy/stochastic.pyx: cannot find cimported module 'qutip.cy.spmatfuncs'; Appending qutip.cy configuration to qutip; Ignoring attempt to set 'name' (from 'qutip' to 'qutip.cy'); Appending qutip.control configuration to qutip; Ignoring attempt to set 'name' (from 'qutip' to 'qutip.control'); Traceback (most recent call last):; File ""setup.py"", line 18, in <module>; setup(**configuration(top_path='').todict()); File ""setup.py"", line 10, in configuration; if os.environ['FORTRAN_LIBS'] == 'TRUE':; File ""/usr/local/Cellar/python/2.7.12_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/UserDict.py"", line 40, in __getitem__; raise KeyError(key); KeyError: 'FORTRAN_LIBS'; ```; I have gcc and gfortran installed and I suspect this might also be due to some issue with the file paths. I will try to get a workaround and post soon.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-263750245
https://github.com/qutip/qutip/issues/348#issuecomment-263750245:253,Modifiability,config,configuration,253,"I am now trying to setup a developement environment using ```python setup.py develop``` and ```python setup.py build_ext --inplace``` but getting the error . ```; cy/stochastic.pyx: cannot find cimported module 'qutip.cy.spmatfuncs'; Appending qutip.cy configuration to qutip; Ignoring attempt to set 'name' (from 'qutip' to 'qutip.cy'); Appending qutip.control configuration to qutip; Ignoring attempt to set 'name' (from 'qutip' to 'qutip.control'); Traceback (most recent call last):; File ""setup.py"", line 18, in <module>; setup(**configuration(top_path='').todict()); File ""setup.py"", line 10, in configuration; if os.environ['FORTRAN_LIBS'] == 'TRUE':; File ""/usr/local/Cellar/python/2.7.12_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/UserDict.py"", line 40, in __getitem__; raise KeyError(key); KeyError: 'FORTRAN_LIBS'; ```; I have gcc and gfortran installed and I suspect this might also be due to some issue with the file paths. I will try to get a workaround and post soon.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-263750245
https://github.com/qutip/qutip/issues/348#issuecomment-263750245:362,Modifiability,config,configuration,362,"I am now trying to setup a developement environment using ```python setup.py develop``` and ```python setup.py build_ext --inplace``` but getting the error . ```; cy/stochastic.pyx: cannot find cimported module 'qutip.cy.spmatfuncs'; Appending qutip.cy configuration to qutip; Ignoring attempt to set 'name' (from 'qutip' to 'qutip.cy'); Appending qutip.control configuration to qutip; Ignoring attempt to set 'name' (from 'qutip' to 'qutip.control'); Traceback (most recent call last):; File ""setup.py"", line 18, in <module>; setup(**configuration(top_path='').todict()); File ""setup.py"", line 10, in configuration; if os.environ['FORTRAN_LIBS'] == 'TRUE':; File ""/usr/local/Cellar/python/2.7.12_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/UserDict.py"", line 40, in __getitem__; raise KeyError(key); KeyError: 'FORTRAN_LIBS'; ```; I have gcc and gfortran installed and I suspect this might also be due to some issue with the file paths. I will try to get a workaround and post soon.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-263750245
https://github.com/qutip/qutip/issues/348#issuecomment-263750245:535,Modifiability,config,configuration,535,"I am now trying to setup a developement environment using ```python setup.py develop``` and ```python setup.py build_ext --inplace``` but getting the error . ```; cy/stochastic.pyx: cannot find cimported module 'qutip.cy.spmatfuncs'; Appending qutip.cy configuration to qutip; Ignoring attempt to set 'name' (from 'qutip' to 'qutip.cy'); Appending qutip.control configuration to qutip; Ignoring attempt to set 'name' (from 'qutip' to 'qutip.control'); Traceback (most recent call last):; File ""setup.py"", line 18, in <module>; setup(**configuration(top_path='').todict()); File ""setup.py"", line 10, in configuration; if os.environ['FORTRAN_LIBS'] == 'TRUE':; File ""/usr/local/Cellar/python/2.7.12_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/UserDict.py"", line 40, in __getitem__; raise KeyError(key); KeyError: 'FORTRAN_LIBS'; ```; I have gcc and gfortran installed and I suspect this might also be due to some issue with the file paths. I will try to get a workaround and post soon.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-263750245
https://github.com/qutip/qutip/issues/348#issuecomment-263750245:602,Modifiability,config,configuration,602,"I am now trying to setup a developement environment using ```python setup.py develop``` and ```python setup.py build_ext --inplace``` but getting the error . ```; cy/stochastic.pyx: cannot find cimported module 'qutip.cy.spmatfuncs'; Appending qutip.cy configuration to qutip; Ignoring attempt to set 'name' (from 'qutip' to 'qutip.cy'); Appending qutip.control configuration to qutip; Ignoring attempt to set 'name' (from 'qutip' to 'qutip.control'); Traceback (most recent call last):; File ""setup.py"", line 18, in <module>; setup(**configuration(top_path='').todict()); File ""setup.py"", line 10, in configuration; if os.environ['FORTRAN_LIBS'] == 'TRUE':; File ""/usr/local/Cellar/python/2.7.12_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/UserDict.py"", line 40, in __getitem__; raise KeyError(key); KeyError: 'FORTRAN_LIBS'; ```; I have gcc and gfortran installed and I suspect this might also be due to some issue with the file paths. I will try to get a workaround and post soon.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-263750245
https://github.com/qutip/qutip/pull/350#issuecomment-113537434:77,Safety,avoid,avoid,77,"I did this work some time ago, and so I did a git rebase in order to try and avoid any conflicts; I was advised this is the thing to do in such circumstances.; It seemed to go okay, some feedback on whether I did the right thing and did it correctly would be welcome",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/350#issuecomment-113537434
https://github.com/qutip/qutip/pull/350#issuecomment-113537434:187,Usability,feedback,feedback,187,"I did this work some time ago, and so I did a git rebase in order to try and avoid any conflicts; I was advised this is the thing to do in such circumstances.; It seemed to go okay, some feedback on whether I did the right thing and did it correctly would be welcome",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/350#issuecomment-113537434
https://github.com/qutip/qutip/issues/353#issuecomment-122956029:45,Performance,Optimiz,Optimizer,45,"Good spot. A lot of changes were made to the Optimizer class when the CRAB algorithm, I think this slipped in then. You will see on line 518 that the base class method passes the bounds as you suggest. Therefore the if you specify optim_method='l-bfgs-b' in any of the pulseoptim methods then your bounds should work and you will be using L-BFGS-B. . I'll create a pull request with this fix now though. ; Thanks",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/353#issuecomment-122956029
https://github.com/qutip/qutip/issues/353#issuecomment-122968636:13,Testability,test,testing,13,"In some spot testing, I found that making the proposed change (bounds -> self.bounds) sets the constraints correctly.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/353#issuecomment-122968636
https://github.com/qutip/qutip/issues/353#issuecomment-123288016:127,Performance,Optimiz,Optimizer,127,You'll see I had to make a coupled of other small changes to ensure the bounds passed in pulseoptim methods are applied to the Optimizer as well as the PulseGen. Thanks again for reporting this.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/353#issuecomment-123288016
https://github.com/qutip/qutip/pull/356#issuecomment-125611531:60,Availability,error,error,60,"This PR should be independent of #332, as it fixes a visual error with plotting of channels as Pauli-basis superoperators.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/356#issuecomment-125611531
https://github.com/qutip/qutip/pull/357#issuecomment-125914337:199,Testability,test,test,199,"Seems like an interesting piece of work. I have asked for comments from members of our group here; In general it seems like a great idea to get new research into qutip, so that interested groups can test, compare, use etc.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/357#issuecomment-125914337
https://github.com/qutip/qutip/pull/357#issuecomment-125965058:53,Security,access,accessible,53,"I'm glad that it's useful! We wanted this work to be accessible, so I thought it made sense to contribute the definition. If the current design is acceptable, then I'll go on and finish the test cases and add a corresponding PR to qutip/qutip-notebooks demonstrating the new function.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/357#issuecomment-125965058
https://github.com/qutip/qutip/pull/357#issuecomment-125965058:190,Testability,test,test,190,"I'm glad that it's useful! We wanted this work to be accessible, so I thought it made sense to contribute the definition. If the current design is acceptable, then I'll go on and finish the test cases and add a corresponding PR to qutip/qutip-notebooks demonstrating the new function.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/357#issuecomment-125965058
https://github.com/qutip/qutip/pull/358#issuecomment-127953580:178,Integrability,interface,interface,178,"Thanks Chris,; This seems like a useful addition. I have taken a quick look at the code, and it seems like it is fairly independent, and so could be merged with little risk. The interface seems good, so I can't see any issues immediately. . Are you planning to do a notebook example?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/358#issuecomment-127953580
https://github.com/qutip/qutip/pull/358#issuecomment-127953580:168,Safety,risk,risk,168,"Thanks Chris,; This seems like a useful addition. I have taken a quick look at the code, and it seems like it is fairly independent, and so could be merged with little risk. The interface seems good, so I can't see any issues immediately. . Are you planning to do a notebook example?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/358#issuecomment-127953580
https://github.com/qutip/qutip/pull/358#issuecomment-128187262:131,Energy Efficiency,reduce,reduce,131,"I made up a quick notebook and posted it as qutip/qutip-notebooks#20. In the meantime, I notice I forgot that Python 3 is missing `reduce()`, having moved it to `functools.reduce()`. Is it permissible to import `functools.reduce` conditioned on checking `sys.version_info` so that I can use `reduce`? Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/358#issuecomment-128187262
https://github.com/qutip/qutip/pull/358#issuecomment-128187262:172,Energy Efficiency,reduce,reduce,172,"I made up a quick notebook and posted it as qutip/qutip-notebooks#20. In the meantime, I notice I forgot that Python 3 is missing `reduce()`, having moved it to `functools.reduce()`. Is it permissible to import `functools.reduce` conditioned on checking `sys.version_info` so that I can use `reduce`? Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/358#issuecomment-128187262
https://github.com/qutip/qutip/pull/358#issuecomment-128187262:222,Energy Efficiency,reduce,reduce,222,"I made up a quick notebook and posted it as qutip/qutip-notebooks#20. In the meantime, I notice I forgot that Python 3 is missing `reduce()`, having moved it to `functools.reduce()`. Is it permissible to import `functools.reduce` conditioned on checking `sys.version_info` so that I can use `reduce`? Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/358#issuecomment-128187262
https://github.com/qutip/qutip/pull/358#issuecomment-128187262:292,Energy Efficiency,reduce,reduce,292,"I made up a quick notebook and posted it as qutip/qutip-notebooks#20. In the meantime, I notice I forgot that Python 3 is missing `reduce()`, having moved it to `functools.reduce()`. Is it permissible to import `functools.reduce` conditioned on checking `sys.version_info` so that I can use `reduce`? Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/358#issuecomment-128187262
https://github.com/qutip/qutip/pull/358#issuecomment-128328061:47,Energy Efficiency,reduce,reduce,47,I have read a bit about the reasons for moving reduce. The main one seems to be that code using it can be unclear. And that in most cases a for loop can be used to achieve the same in a clearer way. I think that may be applicable here. I have spent a while looking at the line that uses it and I am still not sure what it is doing. I think sacrificing a little succinctness for clarity here may be beneficial.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/358#issuecomment-128328061
https://github.com/qutip/qutip/pull/358#issuecomment-128328061:186,Usability,clear,clearer,186,I have read a bit about the reasons for moving reduce. The main one seems to be that code using it can be unclear. And that in most cases a for loop can be used to achieve the same in a clearer way. I think that may be applicable here. I have spent a while looking at the line that uses it and I am still not sure what it is doing. I think sacrificing a little succinctness for clarity here may be beneficial.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/358#issuecomment-128328061
https://github.com/qutip/qutip/pull/358#issuecomment-128331704:286,Performance,perform,performance,286,"I think that you may have issues with xrange in Python3 as well. I believe it was dropped, as range in Python3 does what xrange does in Python2. I think the qutip philosophy is that we should be developing for Python3, but backwards compatible. As in this case, using range will have a performance hit in Python2, but not Python3.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/358#issuecomment-128331704
https://github.com/qutip/qutip/pull/358#issuecomment-128375591:802,Energy Efficiency,reduce,reduce,802,"I always forget about `xrange` versus `range`, sorry about that. Anyway, I used generators as opposed to lists as I didn't need the additional structure of lists, and as the Python 3 style has been to express as much as possible in terms of generators. For example, `range`, `zip` and `map` are all generators now. In that spirit, by making `qubit_clifford_group` a generator, I don't assume that the user needs to remember the entire group, nor that the user wants to store the group in a list as opposed to a more specialized structure. This will be especially important, I think, should there be a need later to introduce a function that enumerates over multi-qubit Clifford groups. In that respect, the current choice is in anticipation of consistency with future features. As for the question of `reduce` versus a triply-nested `for` loop, my intent there was twofold: first, to reflect the mathematical notation more closely and second, to allow for possible generalization to generating other groups. In L758, `partial(reduce, mul)` is a used to express products over the tuples generated by taking Cartesian products over powers of _E_, _X_ and _S_. This approach should allow generalization such that similar groups can be written out in terms of this technique.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/358#issuecomment-128375591
https://github.com/qutip/qutip/pull/358#issuecomment-128375591:1026,Energy Efficiency,reduce,reduce,1026,"I always forget about `xrange` versus `range`, sorry about that. Anyway, I used generators as opposed to lists as I didn't need the additional structure of lists, and as the Python 3 style has been to express as much as possible in terms of generators. For example, `range`, `zip` and `map` are all generators now. In that spirit, by making `qubit_clifford_group` a generator, I don't assume that the user needs to remember the entire group, nor that the user wants to store the group in a list as opposed to a more specialized structure. This will be especially important, I think, should there be a need later to introduce a function that enumerates over multi-qubit Clifford groups. In that respect, the current choice is in anticipation of consistency with future features. As for the question of `reduce` versus a triply-nested `for` loop, my intent there was twofold: first, to reflect the mathematical notation more closely and second, to allow for possible generalization to generating other groups. In L758, `partial(reduce, mul)` is a used to express products over the tuples generated by taking Cartesian products over powers of _E_, _X_ and _S_. This approach should allow generalization such that similar groups can be written out in terms of this technique.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/358#issuecomment-128375591
https://github.com/qutip/qutip/pull/358#issuecomment-128375591:1130,Energy Efficiency,power,powers,1130,"I always forget about `xrange` versus `range`, sorry about that. Anyway, I used generators as opposed to lists as I didn't need the additional structure of lists, and as the Python 3 style has been to express as much as possible in terms of generators. For example, `range`, `zip` and `map` are all generators now. In that spirit, by making `qubit_clifford_group` a generator, I don't assume that the user needs to remember the entire group, nor that the user wants to store the group in a list as opposed to a more specialized structure. This will be especially important, I think, should there be a need later to introduce a function that enumerates over multi-qubit Clifford groups. In that respect, the current choice is in anticipation of consistency with future features. As for the question of `reduce` versus a triply-nested `for` loop, my intent there was twofold: first, to reflect the mathematical notation more closely and second, to allow for possible generalization to generating other groups. In L758, `partial(reduce, mul)` is a used to express products over the tuples generated by taking Cartesian products over powers of _E_, _X_ and _S_. This approach should allow generalization such that similar groups can be written out in terms of this technique.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/358#issuecomment-128375591
https://github.com/qutip/qutip/pull/358#issuecomment-128384062:189,Energy Efficiency,reduce,reduce,189,"Thanks for the reply on generators. Seems like a good policy going forward. Your implementation seems very neat. Thanks for explaining the thinking behind it. Having looked a bit more into reduce. It seems that from Python2.7 (min req for qutip) reduce exists in functools. Therefore, I think you can import and use it with having to check version.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/358#issuecomment-128384062
https://github.com/qutip/qutip/pull/358#issuecomment-128384062:246,Energy Efficiency,reduce,reduce,246,"Thanks for the reply on generators. Seems like a good policy going forward. Your implementation seems very neat. Thanks for explaining the thinking behind it. Having looked a bit more into reduce. It seems that from Python2.7 (min req for qutip) reduce exists in functools. Therefore, I think you can import and use it with having to check version.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/358#issuecomment-128384062
https://github.com/qutip/qutip/pull/358#issuecomment-128407473:66,Energy Efficiency,reduce,reduce,66,"Thanks, I'm glad to be of service! I missed that about `functools.reduce` in 2.7, will amend the PR to use that, fix the `xrange` thing and try to make the use of `reduce` a bit more clear. Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/358#issuecomment-128407473
https://github.com/qutip/qutip/pull/358#issuecomment-128407473:164,Energy Efficiency,reduce,reduce,164,"Thanks, I'm glad to be of service! I missed that about `functools.reduce` in 2.7, will amend the PR to use that, fix the `xrange` thing and try to make the use of `reduce` a bit more clear. Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/358#issuecomment-128407473
https://github.com/qutip/qutip/pull/358#issuecomment-128407473:183,Usability,clear,clear,183,"Thanks, I'm glad to be of service! I missed that about `functools.reduce` in 2.7, will amend the PR to use that, fix the `xrange` thing and try to make the use of `reduce` a bit more clear. Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/358#issuecomment-128407473
https://github.com/qutip/qutip/pull/358#issuecomment-128549325:49,Testability,test,tests,49,"Applied fixes for Python 3, and now the new unit tests run locally on both 2.7 and 3.4, so I expect that the CI checks should pass as well.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/358#issuecomment-128549325
https://github.com/qutip/qutip/pull/358#issuecomment-128688035:116,Availability,error,error,116,I am happy with the changes and explanations. ; I see the Python2.7 check has failed though. I am not sure what the error message implies. @cgranade do you have any idea?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/358#issuecomment-128688035
https://github.com/qutip/qutip/pull/358#issuecomment-128688035:122,Integrability,message,message,122,I am happy with the changes and explanations. ; I see the Python2.7 check has failed though. I am not sure what the error message implies. @cgranade do you have any idea?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/358#issuecomment-128688035
https://github.com/qutip/qutip/pull/358#issuecomment-128689363:319,Security,access,access,319,"That's very odd, it looks like the test was killed the test midway through, but I have no idea why. I'd guess that rerunning the build may work, but answers to [a question on StackOverflow](http://stackoverflow.com/questions/17606874/trigger-a-travis-ci-rebuild-without-pushing-a-commit) claim that you must have write access to the repo in order to trigger a new build.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/358#issuecomment-128689363
https://github.com/qutip/qutip/pull/358#issuecomment-128689363:35,Testability,test,test,35,"That's very odd, it looks like the test was killed the test midway through, but I have no idea why. I'd guess that rerunning the build may work, but answers to [a question on StackOverflow](http://stackoverflow.com/questions/17606874/trigger-a-travis-ci-rebuild-without-pushing-a-commit) claim that you must have write access to the repo in order to trigger a new build.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/358#issuecomment-128689363
https://github.com/qutip/qutip/pull/358#issuecomment-128689363:55,Testability,test,test,55,"That's very odd, it looks like the test was killed the test midway through, but I have no idea why. I'd guess that rerunning the build may work, but answers to [a question on StackOverflow](http://stackoverflow.com/questions/17606874/trigger-a-travis-ci-rebuild-without-pushing-a-commit) claim that you must have write access to the repo in order to trigger a new build.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/358#issuecomment-128689363
https://github.com/qutip/qutip/pull/358#issuecomment-128693856:335,Deployability,upgrade,upgrade,335,"Thanks, and I'm sorry for the hassle. No idea what happened last time. Perhaps it's related to using the legacy container? If you think it's helpful, I can play with `travis.yml` to try and [get the migration working](http://docs.travis-ci.com/user/migrating-from-legacy/?utm_source=legacy-notice&utm_medium=banner&utm_campaign=legacy-upgrade).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/358#issuecomment-128693856
https://github.com/qutip/qutip/pull/359#issuecomment-129753540:174,Deployability,deploy,deployment,174,"It looks like this CI check was killed prematurely again. I'm not sure what is happening with Travis lately, but I suspect it's related to their move over to container-based deployment.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/359#issuecomment-129753540
https://github.com/qutip/qutip/pull/359#issuecomment-130119816:141,Testability,test,tests,141,"That's good, thanks for restarting that! I'll submit my PR for migrating to Travis containers soon, it seems to be helping with the issue of tests being killed, though it's also slower to run so far. As for the PR at hand, I'm glad it's useful. Thanks for checking over it!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/359#issuecomment-130119816
https://github.com/qutip/qutip/pull/359#issuecomment-130258998:35,Availability,reliab,reliable,35,"I think that more slower, but more reliable, Travis CI tests, would be a definite benefit",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/359#issuecomment-130258998
https://github.com/qutip/qutip/pull/359#issuecomment-130258998:55,Testability,test,tests,55,"I think that more slower, but more reliable, Travis CI tests, would be a definite benefit",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/359#issuecomment-130258998
https://github.com/qutip/qutip/pull/359#issuecomment-130549106:223,Energy Efficiency,monitor,monitor,223,"+1. This looks like a good PR to me. Just a quick note: We have had some side-effect issues when changing how isherm and other cached attributes are handled in the past, in particular with respect to performance. I used to monitor the performance over time with the continous-benchmarking suite in one of the respositories in the project, and that was sometimes useful to find unexpected performance hits. . Hopefully this PR will only improve performance, but it could still be worthwhile to check that for example the unit test suite does not take longer time on this branch than on master.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/359#issuecomment-130549106
https://github.com/qutip/qutip/pull/359#issuecomment-130549106:127,Performance,cache,cached,127,"+1. This looks like a good PR to me. Just a quick note: We have had some side-effect issues when changing how isherm and other cached attributes are handled in the past, in particular with respect to performance. I used to monitor the performance over time with the continous-benchmarking suite in one of the respositories in the project, and that was sometimes useful to find unexpected performance hits. . Hopefully this PR will only improve performance, but it could still be worthwhile to check that for example the unit test suite does not take longer time on this branch than on master.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/359#issuecomment-130549106
https://github.com/qutip/qutip/pull/359#issuecomment-130549106:200,Performance,perform,performance,200,"+1. This looks like a good PR to me. Just a quick note: We have had some side-effect issues when changing how isherm and other cached attributes are handled in the past, in particular with respect to performance. I used to monitor the performance over time with the continous-benchmarking suite in one of the respositories in the project, and that was sometimes useful to find unexpected performance hits. . Hopefully this PR will only improve performance, but it could still be worthwhile to check that for example the unit test suite does not take longer time on this branch than on master.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/359#issuecomment-130549106
https://github.com/qutip/qutip/pull/359#issuecomment-130549106:235,Performance,perform,performance,235,"+1. This looks like a good PR to me. Just a quick note: We have had some side-effect issues when changing how isherm and other cached attributes are handled in the past, in particular with respect to performance. I used to monitor the performance over time with the continous-benchmarking suite in one of the respositories in the project, and that was sometimes useful to find unexpected performance hits. . Hopefully this PR will only improve performance, but it could still be worthwhile to check that for example the unit test suite does not take longer time on this branch than on master.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/359#issuecomment-130549106
https://github.com/qutip/qutip/pull/359#issuecomment-130549106:388,Performance,perform,performance,388,"+1. This looks like a good PR to me. Just a quick note: We have had some side-effect issues when changing how isherm and other cached attributes are handled in the past, in particular with respect to performance. I used to monitor the performance over time with the continous-benchmarking suite in one of the respositories in the project, and that was sometimes useful to find unexpected performance hits. . Hopefully this PR will only improve performance, but it could still be worthwhile to check that for example the unit test suite does not take longer time on this branch than on master.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/359#issuecomment-130549106
https://github.com/qutip/qutip/pull/359#issuecomment-130549106:444,Performance,perform,performance,444,"+1. This looks like a good PR to me. Just a quick note: We have had some side-effect issues when changing how isherm and other cached attributes are handled in the past, in particular with respect to performance. I used to monitor the performance over time with the continous-benchmarking suite in one of the respositories in the project, and that was sometimes useful to find unexpected performance hits. . Hopefully this PR will only improve performance, but it could still be worthwhile to check that for example the unit test suite does not take longer time on this branch than on master.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/359#issuecomment-130549106
https://github.com/qutip/qutip/pull/359#issuecomment-130549106:276,Testability,benchmark,benchmarking,276,"+1. This looks like a good PR to me. Just a quick note: We have had some side-effect issues when changing how isherm and other cached attributes are handled in the past, in particular with respect to performance. I used to monitor the performance over time with the continous-benchmarking suite in one of the respositories in the project, and that was sometimes useful to find unexpected performance hits. . Hopefully this PR will only improve performance, but it could still be worthwhile to check that for example the unit test suite does not take longer time on this branch than on master.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/359#issuecomment-130549106
https://github.com/qutip/qutip/pull/359#issuecomment-130549106:525,Testability,test,test,525,"+1. This looks like a good PR to me. Just a quick note: We have had some side-effect issues when changing how isherm and other cached attributes are handled in the past, in particular with respect to performance. I used to monitor the performance over time with the continous-benchmarking suite in one of the respositories in the project, and that was sometimes useful to find unexpected performance hits. . Hopefully this PR will only improve performance, but it could still be worthwhile to check that for example the unit test suite does not take longer time on this branch than on master.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/359#issuecomment-130549106
https://github.com/qutip/qutip/pull/359#issuecomment-130550000:153,Performance,perform,performance,153,"Ah, that seems like a good check. Given the current instability of Travis timings, I'll run a quick check on my local machine to see how this PR affects performance.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/359#issuecomment-130550000
https://github.com/qutip/qutip/pull/359#issuecomment-130556638:97,Performance,perform,performance,97,"Running on Python 2.7 (Ubuntu 14.10) on my local system, this change significantly increased the performance. For some reason, the change was less pronounced using Python 3.4 on the same system (under 1 second change), but in both cases, this PR resulted in test times that were at least as fast as master. ```; cgranade@berith:~/Dropbox/software-projects/qutip (master u=)$ time nosetests qutip; ..............................................................................................SSSSSSS............................................................................................................................................................................................................................................/home/cgranade/Dropbox/software-projects/qutip/qutip/qobj.py:434: UserWarning: Multiplying superoperators with different representations; warnings.warn(msg); .............................................; ----------------------------------------------------------------------; Ran 382 tests in 292.925s. OK (SKIP=7). real 4m54.023s; user 11m20.584s; sys 0m5.356s; cgranade@berith:~/Dropbox/software-projects/qutip (master u=)$ git checkout fix-isherm-lazy ; Switched to branch 'fix-isherm-lazy'; cgranade@berith:~/Dropbox/software-projects/qutip (fix-isherm-lazy)$ time nosetests qutip; ..............................................................................................SSSSSSS.............................................................................................................................................................................................................................../home/cgranade/Dropbox/software-projects/qutip/qutip/qobj.py:436: UserWarning: Multiplying superoperators with different representations; warnings.warn(msg); .............................................; ----------------------------------------------------------------------; Ran 369 tests in 283.042s. OK (SKIP=7). real 4m43.554s; user 10m51.428s; sys 0m",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/359#issuecomment-130556638
https://github.com/qutip/qutip/pull/359#issuecomment-130556638:258,Testability,test,test,258,"Running on Python 2.7 (Ubuntu 14.10) on my local system, this change significantly increased the performance. For some reason, the change was less pronounced using Python 3.4 on the same system (under 1 second change), but in both cases, this PR resulted in test times that were at least as fast as master. ```; cgranade@berith:~/Dropbox/software-projects/qutip (master u=)$ time nosetests qutip; ..............................................................................................SSSSSSS............................................................................................................................................................................................................................................/home/cgranade/Dropbox/software-projects/qutip/qutip/qobj.py:434: UserWarning: Multiplying superoperators with different representations; warnings.warn(msg); .............................................; ----------------------------------------------------------------------; Ran 382 tests in 292.925s. OK (SKIP=7). real 4m54.023s; user 11m20.584s; sys 0m5.356s; cgranade@berith:~/Dropbox/software-projects/qutip (master u=)$ git checkout fix-isherm-lazy ; Switched to branch 'fix-isherm-lazy'; cgranade@berith:~/Dropbox/software-projects/qutip (fix-isherm-lazy)$ time nosetests qutip; ..............................................................................................SSSSSSS.............................................................................................................................................................................................................................../home/cgranade/Dropbox/software-projects/qutip/qutip/qobj.py:436: UserWarning: Multiplying superoperators with different representations; warnings.warn(msg); .............................................; ----------------------------------------------------------------------; Ran 369 tests in 283.042s. OK (SKIP=7). real 4m43.554s; user 10m51.428s; sys 0m",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/359#issuecomment-130556638
https://github.com/qutip/qutip/pull/359#issuecomment-130556638:1019,Testability,test,tests,1019,"Running on Python 2.7 (Ubuntu 14.10) on my local system, this change significantly increased the performance. For some reason, the change was less pronounced using Python 3.4 on the same system (under 1 second change), but in both cases, this PR resulted in test times that were at least as fast as master. ```; cgranade@berith:~/Dropbox/software-projects/qutip (master u=)$ time nosetests qutip; ..............................................................................................SSSSSSS............................................................................................................................................................................................................................................/home/cgranade/Dropbox/software-projects/qutip/qutip/qobj.py:434: UserWarning: Multiplying superoperators with different representations; warnings.warn(msg); .............................................; ----------------------------------------------------------------------; Ran 382 tests in 292.925s. OK (SKIP=7). real 4m54.023s; user 11m20.584s; sys 0m5.356s; cgranade@berith:~/Dropbox/software-projects/qutip (master u=)$ git checkout fix-isherm-lazy ; Switched to branch 'fix-isherm-lazy'; cgranade@berith:~/Dropbox/software-projects/qutip (fix-isherm-lazy)$ time nosetests qutip; ..............................................................................................SSSSSSS.............................................................................................................................................................................................................................../home/cgranade/Dropbox/software-projects/qutip/qutip/qobj.py:436: UserWarning: Multiplying superoperators with different representations; warnings.warn(msg); .............................................; ----------------------------------------------------------------------; Ran 369 tests in 283.042s. OK (SKIP=7). real 4m43.554s; user 10m51.428s; sys 0m",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/359#issuecomment-130556638
https://github.com/qutip/qutip/pull/359#issuecomment-130556638:1930,Testability,test,tests,1930,"ython 2.7 (Ubuntu 14.10) on my local system, this change significantly increased the performance. For some reason, the change was less pronounced using Python 3.4 on the same system (under 1 second change), but in both cases, this PR resulted in test times that were at least as fast as master. ```; cgranade@berith:~/Dropbox/software-projects/qutip (master u=)$ time nosetests qutip; ..............................................................................................SSSSSSS............................................................................................................................................................................................................................................/home/cgranade/Dropbox/software-projects/qutip/qutip/qobj.py:434: UserWarning: Multiplying superoperators with different representations; warnings.warn(msg); .............................................; ----------------------------------------------------------------------; Ran 382 tests in 292.925s. OK (SKIP=7). real 4m54.023s; user 11m20.584s; sys 0m5.356s; cgranade@berith:~/Dropbox/software-projects/qutip (master u=)$ git checkout fix-isherm-lazy ; Switched to branch 'fix-isherm-lazy'; cgranade@berith:~/Dropbox/software-projects/qutip (fix-isherm-lazy)$ time nosetests qutip; ..............................................................................................SSSSSSS.............................................................................................................................................................................................................................../home/cgranade/Dropbox/software-projects/qutip/qutip/qobj.py:436: UserWarning: Multiplying superoperators with different representations; warnings.warn(msg); .............................................; ----------------------------------------------------------------------; Ran 369 tests in 283.042s. OK (SKIP=7). real 4m43.554s; user 10m51.428s; sys 0m5.080s; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/359#issuecomment-130556638
https://github.com/qutip/qutip/pull/359#issuecomment-130869931:45,Testability,test,tests,45,Perfect! Thanks for checking. The numbers of tests are different though (382 / 369)?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/359#issuecomment-130869931
https://github.com/qutip/qutip/pull/359#issuecomment-130896657:116,Testability,test,tests,116,"The issue turned out to be that I hadn't merged with upstream/master yet to include the unitarity feature, so those tests were not being included. With those added, `master` and this PR take about the same amount of time on Python 2.7— the variation between runs is larger than the difference. Sorry again for missing those tests before.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/359#issuecomment-130896657
https://github.com/qutip/qutip/pull/359#issuecomment-130896657:324,Testability,test,tests,324,"The issue turned out to be that I hadn't merged with upstream/master yet to include the unitarity feature, so those tests were not being included. With those added, `master` and this PR take about the same amount of time on Python 2.7— the variation between runs is larger than the difference. Sorry again for missing those tests before.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/359#issuecomment-130896657
https://github.com/qutip/qutip/pull/360#issuecomment-130280628:36,Availability,reliab,reliable,36,"As mentioned previously, to me more reliable is a big benefit, slightly slower is not an issue.; Do @nonhermitian or @jrjohansson have an opinion on this PR?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/360#issuecomment-130280628
https://github.com/qutip/qutip/pull/360#issuecomment-130281180:132,Availability,reliab,reliable,132,"Makes sense, I only mentioned about the speed as I thought it might be of interest to Travis. That said, I totally agree, getting a reliable build is definitely important.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/360#issuecomment-130281180
https://github.com/qutip/qutip/pull/360#issuecomment-130291761:195,Testability,test,tests,195,"I agree, if Travis say that they are interested, then we should tell them. I would be happy for you to raise this with them, if you ok with that. It would seem to make sense if you have done the tests. I'll do it if you think that is more appropriate.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/360#issuecomment-130291761
https://github.com/qutip/qutip/pull/360#issuecomment-130548492:20,Testability,test,testing,20,"+1. Container-based testing on travis is the way to go, and qutip should make use of it as soon as possible. The speed issue could probably be fixed later, if necessary, but might also very well be fixed upstream. . BTW: Great work on this and other recent PRs!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/360#issuecomment-130548492
https://github.com/qutip/qutip/pull/360#issuecomment-130549152:267,Deployability,install,installer,267,"I suspect it may already be getting fixed upstream as a recent merge on my fork completed testing in just about 10 minutes, quite on par with where it was. If it becomes important, we can use the new container infrastructure to start caching things like the Anaconda installer, but looking at the detailed breakdown, it didn't seem important enough to justify adding the extra complication. Anyway, I'm glad to be of service!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/360#issuecomment-130549152
https://github.com/qutip/qutip/pull/360#issuecomment-130549152:90,Testability,test,testing,90,"I suspect it may already be getting fixed upstream as a recent merge on my fork completed testing in just about 10 minutes, quite on par with where it was. If it becomes important, we can use the new container infrastructure to start caching things like the Anaconda installer, but looking at the detailed breakdown, it didn't seem important enough to justify adding the extra complication. Anyway, I'm glad to be of service!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/360#issuecomment-130549152
https://github.com/qutip/qutip/issues/361#issuecomment-134832098:19,Availability,error,error,19,"There is numerical error in the answer due to the need for the sqrtm method. I am not sure if I would call this error significant as the error is of order 1e-7, while the fidelity is of order unity. However, as Chris said, there might be a better way for pure states. Paul. > On Aug 26, 2015, at 13:11, dick-t notifications@github.com wrote:; > ; > fidelity() returns >1 by a significant amount for certain pure states. States are normalised, and taking the inner product returns 1. Code below provides two examples of states which give fidelity >1 with themselves.; > ; > #to test qutip's fidelity routine; > import qutip as qu; > ; > psi0=qu.Qobj(); > ; > i=0; > while i<=1:; > j=0; > while j<=1:; > psi0+=qu.state_number_qobj([2,2],[i,j]) #even superposition of qubit states; > j+=1; > i+=1; > ; > psi0=psi0.unit() #normalise; > ; > print(qu.fidelity(psi0,psi0)); > print((psi0.dag()_psi0).norm()_*2); > print(""\n""); > ; > psi0=qu.tensor(psi0,qu.basis(10,1)) #tensor product with Fock state; > ; > print(qu.fidelity(psi0,psi0)); > print((psi0.dag()_psi0).norm()_*2); > ; > Output:; > ; > 1.00000002107; > 1.0; > ; > 1.00000003485; > 1.0; > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/361#issuecomment-134832098
https://github.com/qutip/qutip/issues/361#issuecomment-134832098:112,Availability,error,error,112,"There is numerical error in the answer due to the need for the sqrtm method. I am not sure if I would call this error significant as the error is of order 1e-7, while the fidelity is of order unity. However, as Chris said, there might be a better way for pure states. Paul. > On Aug 26, 2015, at 13:11, dick-t notifications@github.com wrote:; > ; > fidelity() returns >1 by a significant amount for certain pure states. States are normalised, and taking the inner product returns 1. Code below provides two examples of states which give fidelity >1 with themselves.; > ; > #to test qutip's fidelity routine; > import qutip as qu; > ; > psi0=qu.Qobj(); > ; > i=0; > while i<=1:; > j=0; > while j<=1:; > psi0+=qu.state_number_qobj([2,2],[i,j]) #even superposition of qubit states; > j+=1; > i+=1; > ; > psi0=psi0.unit() #normalise; > ; > print(qu.fidelity(psi0,psi0)); > print((psi0.dag()_psi0).norm()_*2); > print(""\n""); > ; > psi0=qu.tensor(psi0,qu.basis(10,1)) #tensor product with Fock state; > ; > print(qu.fidelity(psi0,psi0)); > print((psi0.dag()_psi0).norm()_*2); > ; > Output:; > ; > 1.00000002107; > 1.0; > ; > 1.00000003485; > 1.0; > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/361#issuecomment-134832098
https://github.com/qutip/qutip/issues/361#issuecomment-134832098:137,Availability,error,error,137,"There is numerical error in the answer due to the need for the sqrtm method. I am not sure if I would call this error significant as the error is of order 1e-7, while the fidelity is of order unity. However, as Chris said, there might be a better way for pure states. Paul. > On Aug 26, 2015, at 13:11, dick-t notifications@github.com wrote:; > ; > fidelity() returns >1 by a significant amount for certain pure states. States are normalised, and taking the inner product returns 1. Code below provides two examples of states which give fidelity >1 with themselves.; > ; > #to test qutip's fidelity routine; > import qutip as qu; > ; > psi0=qu.Qobj(); > ; > i=0; > while i<=1:; > j=0; > while j<=1:; > psi0+=qu.state_number_qobj([2,2],[i,j]) #even superposition of qubit states; > j+=1; > i+=1; > ; > psi0=psi0.unit() #normalise; > ; > print(qu.fidelity(psi0,psi0)); > print((psi0.dag()_psi0).norm()_*2); > print(""\n""); > ; > psi0=qu.tensor(psi0,qu.basis(10,1)) #tensor product with Fock state; > ; > print(qu.fidelity(psi0,psi0)); > print((psi0.dag()_psi0).norm()_*2); > ; > Output:; > ; > 1.00000002107; > 1.0; > ; > 1.00000003485; > 1.0; > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/361#issuecomment-134832098
https://github.com/qutip/qutip/issues/361#issuecomment-134832098:599,Integrability,rout,routine,599,"There is numerical error in the answer due to the need for the sqrtm method. I am not sure if I would call this error significant as the error is of order 1e-7, while the fidelity is of order unity. However, as Chris said, there might be a better way for pure states. Paul. > On Aug 26, 2015, at 13:11, dick-t notifications@github.com wrote:; > ; > fidelity() returns >1 by a significant amount for certain pure states. States are normalised, and taking the inner product returns 1. Code below provides two examples of states which give fidelity >1 with themselves.; > ; > #to test qutip's fidelity routine; > import qutip as qu; > ; > psi0=qu.Qobj(); > ; > i=0; > while i<=1:; > j=0; > while j<=1:; > psi0+=qu.state_number_qobj([2,2],[i,j]) #even superposition of qubit states; > j+=1; > i+=1; > ; > psi0=psi0.unit() #normalise; > ; > print(qu.fidelity(psi0,psi0)); > print((psi0.dag()_psi0).norm()_*2); > print(""\n""); > ; > psi0=qu.tensor(psi0,qu.basis(10,1)) #tensor product with Fock state; > ; > print(qu.fidelity(psi0,psi0)); > print((psi0.dag()_psi0).norm()_*2); > ; > Output:; > ; > 1.00000002107; > 1.0; > ; > 1.00000003485; > 1.0; > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/361#issuecomment-134832098
https://github.com/qutip/qutip/issues/361#issuecomment-134832098:577,Testability,test,test,577,"There is numerical error in the answer due to the need for the sqrtm method. I am not sure if I would call this error significant as the error is of order 1e-7, while the fidelity is of order unity. However, as Chris said, there might be a better way for pure states. Paul. > On Aug 26, 2015, at 13:11, dick-t notifications@github.com wrote:; > ; > fidelity() returns >1 by a significant amount for certain pure states. States are normalised, and taking the inner product returns 1. Code below provides two examples of states which give fidelity >1 with themselves.; > ; > #to test qutip's fidelity routine; > import qutip as qu; > ; > psi0=qu.Qobj(); > ; > i=0; > while i<=1:; > j=0; > while j<=1:; > psi0+=qu.state_number_qobj([2,2],[i,j]) #even superposition of qubit states; > j+=1; > i+=1; > ; > psi0=psi0.unit() #normalise; > ; > print(qu.fidelity(psi0,psi0)); > print((psi0.dag()_psi0).norm()_*2); > print(""\n""); > ; > psi0=qu.tensor(psi0,qu.basis(10,1)) #tensor product with Fock state; > ; > print(qu.fidelity(psi0,psi0)); > print((psi0.dag()_psi0).norm()_*2); > ; > Output:; > ; > 1.00000002107; > 1.0; > ; > 1.00000003485; > 1.0; > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/361#issuecomment-134832098
https://github.com/qutip/qutip/issues/361#issuecomment-134927300:362,Availability,error,error,362,@cgranade did you test your PR #362 against dick-t example? If so what were the results?; It would seem that dick-t is comparing a method that works with states in general (mixed or pure) with one that assumes states are pure. Do we have some method in qutip that gives the fidelity when states are assumed pure? It would seem more efficient (and less numerical error risk) to compute the fidelity without the sqrtm (as dick-t did in the comparison) if we knew the states were pure.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/361#issuecomment-134927300
https://github.com/qutip/qutip/issues/361#issuecomment-134927300:332,Energy Efficiency,efficient,efficient,332,@cgranade did you test your PR #362 against dick-t example? If so what were the results?; It would seem that dick-t is comparing a method that works with states in general (mixed or pure) with one that assumes states are pure. Do we have some method in qutip that gives the fidelity when states are assumed pure? It would seem more efficient (and less numerical error risk) to compute the fidelity without the sqrtm (as dick-t did in the comparison) if we knew the states were pure.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/361#issuecomment-134927300
https://github.com/qutip/qutip/issues/361#issuecomment-134927300:368,Safety,risk,risk,368,@cgranade did you test your PR #362 against dick-t example? If so what were the results?; It would seem that dick-t is comparing a method that works with states in general (mixed or pure) with one that assumes states are pure. Do we have some method in qutip that gives the fidelity when states are assumed pure? It would seem more efficient (and less numerical error risk) to compute the fidelity without the sqrtm (as dick-t did in the comparison) if we knew the states were pure.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/361#issuecomment-134927300
https://github.com/qutip/qutip/issues/361#issuecomment-134927300:18,Testability,test,test,18,@cgranade did you test your PR #362 against dick-t example? If so what were the results?; It would seem that dick-t is comparing a method that works with states in general (mixed or pure) with one that assumes states are pure. Do we have some method in qutip that gives the fidelity when states are assumed pure? It would seem more efficient (and less numerical error risk) to compute the fidelity without the sqrtm (as dick-t did in the comparison) if we knew the states were pure.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/361#issuecomment-134927300
https://github.com/qutip/qutip/issues/361#issuecomment-134930346:317,Energy Efficiency,adapt,adapt,317,"When I ran against @dick-t's example, it still violated the bound F ≤ 1, but by significantly less than before, as can be confirmed by the [success of `test_fidelity_bounded_purepure`](https://github.com/qutip/qutip/pull/362/files#diff-3e3c19be6d013d22c4823607e07cd240R106), introduced by #362. That PR doesn't fully adapt to the pure vs pure case that @dick-t lists, but it does avoid `sqrtm` in that case. I can fully specialize to that case, if you like, by using the inner product of the two pure states.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/361#issuecomment-134930346
https://github.com/qutip/qutip/issues/361#issuecomment-134930346:317,Modifiability,adapt,adapt,317,"When I ran against @dick-t's example, it still violated the bound F ≤ 1, but by significantly less than before, as can be confirmed by the [success of `test_fidelity_bounded_purepure`](https://github.com/qutip/qutip/pull/362/files#diff-3e3c19be6d013d22c4823607e07cd240R106), introduced by #362. That PR doesn't fully adapt to the pure vs pure case that @dick-t lists, but it does avoid `sqrtm` in that case. I can fully specialize to that case, if you like, by using the inner product of the two pure states.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/361#issuecomment-134930346
https://github.com/qutip/qutip/issues/361#issuecomment-134930346:380,Safety,avoid,avoid,380,"When I ran against @dick-t's example, it still violated the bound F ≤ 1, but by significantly less than before, as can be confirmed by the [success of `test_fidelity_bounded_purepure`](https://github.com/qutip/qutip/pull/362/files#diff-3e3c19be6d013d22c4823607e07cd240R106), introduced by #362. That PR doesn't fully adapt to the pure vs pure case that @dick-t lists, but it does avoid `sqrtm` in that case. I can fully specialize to that case, if you like, by using the inner product of the two pure states.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/361#issuecomment-134930346
https://github.com/qutip/qutip/issues/361#issuecomment-134933420:256,Energy Efficiency,adapt,adapt,256,"Having looked at the description of the function, that is it specifically refers to density matrices, then I would say that it does what it promises to do, and that the changes mean that it does it much better. So (now) personally I don't think we need to adapt for a pure vs pure state in this method.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/361#issuecomment-134933420
https://github.com/qutip/qutip/issues/361#issuecomment-134933420:256,Modifiability,adapt,adapt,256,"Having looked at the description of the function, that is it specifically refers to density matrices, then I would say that it does what it promises to do, and that the changes mean that it does it much better. So (now) personally I don't think we need to adapt for a pure vs pure state in this method.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/361#issuecomment-134933420
https://github.com/qutip/qutip/pull/362#issuecomment-134935699:42,Testability,test,tests,42,"Sounds good. I'm working on a couple more tests just to prevent any other regressions or stability issues, should have it ready in the next few minutes. Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/362#issuecomment-134935699
https://github.com/qutip/qutip/pull/362#issuecomment-136130866:120,Testability,test,tests,120,"Since there haven't been any comments in this for a few days, and since the new `fidelity` function passes the new unit tests, I'm going to go on and merge this to fix #361.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/362#issuecomment-136130866
https://github.com/qutip/qutip/issues/363#issuecomment-575273170:1040,Availability,error,error-checking,1040,"I'd be interested in providing these changes. I have a few points to ask/consider:; 1. which function is meant by `zero_oper()`? I can't find any reference to it in the code, and judging by the name, I'd guess it's equivalent to `qzero()`, which already supports this.; 2. should we extend the automatic tensoring to other operators, e.g. `create()`, `destroy()`, and so forth? I can't necessarily think of any particular use-case, but _not_ having it causes an odd inconsistency with `qeye()`.; 3. for `projection()` and `basis()` in particular: should the interface allow only scalar `m` and `n`, which must be the same for all dimensions, or should there be broadcasting rules? The latter seems like a more useful choice to me, with the rules for all arguments being:; - if `m` is a list, then `max_len == len(m)`; - if `m` is a scalar, then `m = [m] * max_len`. For example, this would provide `tensor(basis(2, 0), basis(2, 1)) == basis(2, [0, 1]) == basis([2,2], [0, 1])`, which seems the ""least surprising"" to me.; 4. should there be error-checking that supplied scalars/lists are the correct format? For lists in particular, the current behaviour is to silently flatten nested lists, though this is presumably a user error.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/363#issuecomment-575273170
https://github.com/qutip/qutip/issues/363#issuecomment-575273170:1224,Availability,error,error,1224,"I'd be interested in providing these changes. I have a few points to ask/consider:; 1. which function is meant by `zero_oper()`? I can't find any reference to it in the code, and judging by the name, I'd guess it's equivalent to `qzero()`, which already supports this.; 2. should we extend the automatic tensoring to other operators, e.g. `create()`, `destroy()`, and so forth? I can't necessarily think of any particular use-case, but _not_ having it causes an odd inconsistency with `qeye()`.; 3. for `projection()` and `basis()` in particular: should the interface allow only scalar `m` and `n`, which must be the same for all dimensions, or should there be broadcasting rules? The latter seems like a more useful choice to me, with the rules for all arguments being:; - if `m` is a list, then `max_len == len(m)`; - if `m` is a scalar, then `m = [m] * max_len`. For example, this would provide `tensor(basis(2, 0), basis(2, 1)) == basis(2, [0, 1]) == basis([2,2], [0, 1])`, which seems the ""least surprising"" to me.; 4. should there be error-checking that supplied scalars/lists are the correct format? For lists in particular, the current behaviour is to silently flatten nested lists, though this is presumably a user error.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/363#issuecomment-575273170
https://github.com/qutip/qutip/issues/363#issuecomment-575273170:558,Integrability,interface,interface,558,"I'd be interested in providing these changes. I have a few points to ask/consider:; 1. which function is meant by `zero_oper()`? I can't find any reference to it in the code, and judging by the name, I'd guess it's equivalent to `qzero()`, which already supports this.; 2. should we extend the automatic tensoring to other operators, e.g. `create()`, `destroy()`, and so forth? I can't necessarily think of any particular use-case, but _not_ having it causes an odd inconsistency with `qeye()`.; 3. for `projection()` and `basis()` in particular: should the interface allow only scalar `m` and `n`, which must be the same for all dimensions, or should there be broadcasting rules? The latter seems like a more useful choice to me, with the rules for all arguments being:; - if `m` is a list, then `max_len == len(m)`; - if `m` is a scalar, then `m = [m] * max_len`. For example, this would provide `tensor(basis(2, 0), basis(2, 1)) == basis(2, [0, 1]) == basis([2,2], [0, 1])`, which seems the ""least surprising"" to me.; 4. should there be error-checking that supplied scalars/lists are the correct format? For lists in particular, the current behaviour is to silently flatten nested lists, though this is presumably a user error.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/363#issuecomment-575273170
https://github.com/qutip/qutip/issues/363#issuecomment-575273170:283,Modifiability,extend,extend,283,"I'd be interested in providing these changes. I have a few points to ask/consider:; 1. which function is meant by `zero_oper()`? I can't find any reference to it in the code, and judging by the name, I'd guess it's equivalent to `qzero()`, which already supports this.; 2. should we extend the automatic tensoring to other operators, e.g. `create()`, `destroy()`, and so forth? I can't necessarily think of any particular use-case, but _not_ having it causes an odd inconsistency with `qeye()`.; 3. for `projection()` and `basis()` in particular: should the interface allow only scalar `m` and `n`, which must be the same for all dimensions, or should there be broadcasting rules? The latter seems like a more useful choice to me, with the rules for all arguments being:; - if `m` is a list, then `max_len == len(m)`; - if `m` is a scalar, then `m = [m] * max_len`. For example, this would provide `tensor(basis(2, 0), basis(2, 1)) == basis(2, [0, 1]) == basis([2,2], [0, 1])`, which seems the ""least surprising"" to me.; 4. should there be error-checking that supplied scalars/lists are the correct format? For lists in particular, the current behaviour is to silently flatten nested lists, though this is presumably a user error.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/363#issuecomment-575273170
https://github.com/qutip/qutip/issues/363#issuecomment-575770270:341,Usability,clear,clear,341,"This issue is open since 2015 and no one did anything about it mostly because there are no use case for adding list support for most of those function and removing them from `qeye` may break something. What I would see as an improvement: if `N` could be the dimension of the resulting object.; `qeye(dims).dims = [dims,dims]`. This would be clear for `qeye` and `qzero` (`zero_oper` does not exist anymore), since only the dimension of the resulting object is affected. For `create`, etc. hiding the tensor product would be hiding the physic, so it would be better to leave them as is. For `basis`, this could also be nice. For the rule: `basis([2,2], [0, 1])` is ok, but `basis(2, [0, 1])` is confusing, I would not accept this format.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/363#issuecomment-575770270
https://github.com/qutip/qutip/issues/363#issuecomment-575811864:566,Modifiability,variab,variable,566,"No, it's mostly here on qutip and direct email. There is only a few of us. We have a qutip-dev google group on invitation managed by @nathanshammah. agarwal1998 is not a maintainer but cgranade was. Last year, we took time to review old issues and let some less pressing with ""help wanted"". We would be happy if you can propose a solution that would close the issue and help with Qutip in general. The only use I personally see from this would be case like:; ```; out = qzero(dims); for i in range(N):; out += f(i, dims); ```; Cases were the qobj is more of a dummy variable than a physical operator. `coherent` and `create` have a physical meaning and I would not know what `coherent([2,10])` is supposed to be, but I understand what `tensor(coherent(2), coherent(10))` is. For `projector`, it could be added, it's meaning is clear. To make it consistent, removing the list support from `qeye`, etc. and fixing the few case that it is used, might be a better option. The dimension can easily be corrected after the creation of the object.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/363#issuecomment-575811864
https://github.com/qutip/qutip/issues/363#issuecomment-575811864:827,Usability,clear,clear,827,"No, it's mostly here on qutip and direct email. There is only a few of us. We have a qutip-dev google group on invitation managed by @nathanshammah. agarwal1998 is not a maintainer but cgranade was. Last year, we took time to review old issues and let some less pressing with ""help wanted"". We would be happy if you can propose a solution that would close the issue and help with Qutip in general. The only use I personally see from this would be case like:; ```; out = qzero(dims); for i in range(N):; out += f(i, dims); ```; Cases were the qobj is more of a dummy variable than a physical operator. `coherent` and `create` have a physical meaning and I would not know what `coherent([2,10])` is supposed to be, but I understand what `tensor(coherent(2), coherent(10))` is. For `projector`, it could be added, it's meaning is clear. To make it consistent, removing the list support from `qeye`, etc. and fixing the few case that it is used, might be a better option. The dimension can easily be corrected after the creation of the object.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/363#issuecomment-575811864
https://github.com/qutip/qutip/issues/365#issuecomment-136613770:110,Deployability,configurat,configuration,110,"This is an interesting bug, thanks for raising it! Roughly, QuTiP looks at `$HOME` to find where the `qutiprc`configuration file. If QuTiP can't find it, it will raise a warning and proceed with defaults, so that shouldn't adversely affect you unless you've set some flags like `debug=True`. That said, we should definitely raise a less intimidating warning when `$HOME` is unset.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/365#issuecomment-136613770
https://github.com/qutip/qutip/issues/365#issuecomment-136613770:110,Modifiability,config,configuration,110,"This is an interesting bug, thanks for raising it! Roughly, QuTiP looks at `$HOME` to find where the `qutiprc`configuration file. If QuTiP can't find it, it will raise a warning and proceed with defaults, so that shouldn't adversely affect you unless you've set some flags like `debug=True`. That said, we should definitely raise a less intimidating warning when `$HOME` is unset.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/365#issuecomment-136613770
https://github.com/qutip/qutip/pull/375#issuecomment-142731122:62,Testability,test,tests,62,"To guard against regression on this, I would like to add unit tests covering adjoint channels before merging, since that's where I first noticed this issue. I will try to do so soon.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/375#issuecomment-142731122
https://github.com/qutip/qutip/pull/375#issuecomment-142891700:37,Safety,risk,risks,37,Seems like a good fix. Can't see any risks.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/375#issuecomment-142891700
https://github.com/qutip/qutip/pull/375#issuecomment-152945134:244,Availability,ERROR,ERROR,244,"I apologize to all for the delay, but I just added checks for regression on this issue. They currently fail due to a problem with `to_chi` and multiple qubits. ``` python; ======================================================================; ERROR: Failure: TypeError (Incompatible Qobj shapes); ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Anaconda\lib\site-packages\nose\loader.py"", line 251, in generate; for test in g():; File ""C:\Users\Chris\Dropbox\software-projects\qutip\qutip\tests\test_qobj.py"", line 671, in test_dag_preserves_superrep; yield case, to_chi(qobj); File ""C:\Users\Chris\Dropbox\software-projects\qutip\qutip\superop_reps.py"", line 435, in to_chi; return to_chi(to_choi(q_oper)); File ""C:\Users\Chris\Dropbox\software-projects\qutip\qutip\superop_reps.py"", line 432, in to_chi; return choi_to_chi(q_oper); File ""C:\Users\Chris\Dropbox\software-projects\qutip\qutip\superop_reps.py"", line 258, in choi_to_chi; return Qobj(B.dag() * q_oper * B, superrep='chi'); File ""C:\Users\Chris\Dropbox\software-projects\qutip\qutip\qobj.py"", line 455, in __mul__; raise TypeError(""Incompatible Qobj shapes""); TypeError: Incompatible Qobj shapes. ----------------------------------------------------------------------; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/375#issuecomment-152945134
https://github.com/qutip/qutip/pull/375#issuecomment-152945134:251,Availability,Failure,Failure,251,"I apologize to all for the delay, but I just added checks for regression on this issue. They currently fail due to a problem with `to_chi` and multiple qubits. ``` python; ======================================================================; ERROR: Failure: TypeError (Incompatible Qobj shapes); ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Anaconda\lib\site-packages\nose\loader.py"", line 251, in generate; for test in g():; File ""C:\Users\Chris\Dropbox\software-projects\qutip\qutip\tests\test_qobj.py"", line 671, in test_dag_preserves_superrep; yield case, to_chi(qobj); File ""C:\Users\Chris\Dropbox\software-projects\qutip\qutip\superop_reps.py"", line 435, in to_chi; return to_chi(to_choi(q_oper)); File ""C:\Users\Chris\Dropbox\software-projects\qutip\qutip\superop_reps.py"", line 432, in to_chi; return choi_to_chi(q_oper); File ""C:\Users\Chris\Dropbox\software-projects\qutip\qutip\superop_reps.py"", line 258, in choi_to_chi; return Qobj(B.dag() * q_oper * B, superrep='chi'); File ""C:\Users\Chris\Dropbox\software-projects\qutip\qutip\qobj.py"", line 455, in __mul__; raise TypeError(""Incompatible Qobj shapes""); TypeError: Incompatible Qobj shapes. ----------------------------------------------------------------------; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/375#issuecomment-152945134
https://github.com/qutip/qutip/pull/375#issuecomment-152945134:447,Performance,load,loader,447,"I apologize to all for the delay, but I just added checks for regression on this issue. They currently fail due to a problem with `to_chi` and multiple qubits. ``` python; ======================================================================; ERROR: Failure: TypeError (Incompatible Qobj shapes); ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Anaconda\lib\site-packages\nose\loader.py"", line 251, in generate; for test in g():; File ""C:\Users\Chris\Dropbox\software-projects\qutip\qutip\tests\test_qobj.py"", line 671, in test_dag_preserves_superrep; yield case, to_chi(qobj); File ""C:\Users\Chris\Dropbox\software-projects\qutip\qutip\superop_reps.py"", line 435, in to_chi; return to_chi(to_choi(q_oper)); File ""C:\Users\Chris\Dropbox\software-projects\qutip\qutip\superop_reps.py"", line 432, in to_chi; return choi_to_chi(q_oper); File ""C:\Users\Chris\Dropbox\software-projects\qutip\qutip\superop_reps.py"", line 258, in choi_to_chi; return Qobj(B.dag() * q_oper * B, superrep='chi'); File ""C:\Users\Chris\Dropbox\software-projects\qutip\qutip\qobj.py"", line 455, in __mul__; raise TypeError(""Incompatible Qobj shapes""); TypeError: Incompatible Qobj shapes. ----------------------------------------------------------------------; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/375#issuecomment-152945134
https://github.com/qutip/qutip/pull/375#issuecomment-152945134:486,Testability,test,test,486,"I apologize to all for the delay, but I just added checks for regression on this issue. They currently fail due to a problem with `to_chi` and multiple qubits. ``` python; ======================================================================; ERROR: Failure: TypeError (Incompatible Qobj shapes); ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Anaconda\lib\site-packages\nose\loader.py"", line 251, in generate; for test in g():; File ""C:\Users\Chris\Dropbox\software-projects\qutip\qutip\tests\test_qobj.py"", line 671, in test_dag_preserves_superrep; yield case, to_chi(qobj); File ""C:\Users\Chris\Dropbox\software-projects\qutip\qutip\superop_reps.py"", line 435, in to_chi; return to_chi(to_choi(q_oper)); File ""C:\Users\Chris\Dropbox\software-projects\qutip\qutip\superop_reps.py"", line 432, in to_chi; return choi_to_chi(q_oper); File ""C:\Users\Chris\Dropbox\software-projects\qutip\qutip\superop_reps.py"", line 258, in choi_to_chi; return Qobj(B.dag() * q_oper * B, superrep='chi'); File ""C:\Users\Chris\Dropbox\software-projects\qutip\qutip\qobj.py"", line 455, in __mul__; raise TypeError(""Incompatible Qobj shapes""); TypeError: Incompatible Qobj shapes. ----------------------------------------------------------------------; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/375#issuecomment-152945134
https://github.com/qutip/qutip/pull/375#issuecomment-152945134:559,Testability,test,tests,559,"I apologize to all for the delay, but I just added checks for regression on this issue. They currently fail due to a problem with `to_chi` and multiple qubits. ``` python; ======================================================================; ERROR: Failure: TypeError (Incompatible Qobj shapes); ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Anaconda\lib\site-packages\nose\loader.py"", line 251, in generate; for test in g():; File ""C:\Users\Chris\Dropbox\software-projects\qutip\qutip\tests\test_qobj.py"", line 671, in test_dag_preserves_superrep; yield case, to_chi(qobj); File ""C:\Users\Chris\Dropbox\software-projects\qutip\qutip\superop_reps.py"", line 435, in to_chi; return to_chi(to_choi(q_oper)); File ""C:\Users\Chris\Dropbox\software-projects\qutip\qutip\superop_reps.py"", line 432, in to_chi; return choi_to_chi(q_oper); File ""C:\Users\Chris\Dropbox\software-projects\qutip\qutip\superop_reps.py"", line 258, in choi_to_chi; return Qobj(B.dag() * q_oper * B, superrep='chi'); File ""C:\Users\Chris\Dropbox\software-projects\qutip\qutip\qobj.py"", line 455, in __mul__; raise TypeError(""Incompatible Qobj shapes""); TypeError: Incompatible Qobj shapes. ----------------------------------------------------------------------; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/375#issuecomment-152945134
https://github.com/qutip/qutip/pull/375#issuecomment-153001561:90,Testability,test,tests,90,"This PR should now be caught up with #390, which should fix the problem with the new unit tests.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/375#issuecomment-153001561
https://github.com/qutip/qutip/issues/377#issuecomment-145857462:128,Deployability,install,install,128,"The problem with windows has been that there was/is no free 64 bit compiler, and because of that it has been way easier to just install anaconda 32 and use mingw32 on windows (even on windows 64). . In principle is should be possible build and install qutip 64-bit version on windows with a commercial 64-bit compiler (e.g. Visual Studio), but since few people has access to such a compiler we have not tested this option. Perhaps mingw64 is now a viable option, but I'm not sure how useful it is now. Would be great if someone could test it. . Binary builds for 32 and 64 conda packages for windows would be highly desirable in my opinion. I have once created a conda package for qutip (https://github.com/conda/conda-recipes/tree/master/qutip) ; so if someone got the development environment with the required compilers setup for windows it should be straightforward to build the packages.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-145857462
https://github.com/qutip/qutip/issues/377#issuecomment-145857462:244,Deployability,install,install,244,"The problem with windows has been that there was/is no free 64 bit compiler, and because of that it has been way easier to just install anaconda 32 and use mingw32 on windows (even on windows 64). . In principle is should be possible build and install qutip 64-bit version on windows with a commercial 64-bit compiler (e.g. Visual Studio), but since few people has access to such a compiler we have not tested this option. Perhaps mingw64 is now a viable option, but I'm not sure how useful it is now. Would be great if someone could test it. . Binary builds for 32 and 64 conda packages for windows would be highly desirable in my opinion. I have once created a conda package for qutip (https://github.com/conda/conda-recipes/tree/master/qutip) ; so if someone got the development environment with the required compilers setup for windows it should be straightforward to build the packages.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-145857462
https://github.com/qutip/qutip/issues/377#issuecomment-145857462:365,Security,access,access,365,"The problem with windows has been that there was/is no free 64 bit compiler, and because of that it has been way easier to just install anaconda 32 and use mingw32 on windows (even on windows 64). . In principle is should be possible build and install qutip 64-bit version on windows with a commercial 64-bit compiler (e.g. Visual Studio), but since few people has access to such a compiler we have not tested this option. Perhaps mingw64 is now a viable option, but I'm not sure how useful it is now. Would be great if someone could test it. . Binary builds for 32 and 64 conda packages for windows would be highly desirable in my opinion. I have once created a conda package for qutip (https://github.com/conda/conda-recipes/tree/master/qutip) ; so if someone got the development environment with the required compilers setup for windows it should be straightforward to build the packages.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-145857462
https://github.com/qutip/qutip/issues/377#issuecomment-145857462:403,Testability,test,tested,403,"The problem with windows has been that there was/is no free 64 bit compiler, and because of that it has been way easier to just install anaconda 32 and use mingw32 on windows (even on windows 64). . In principle is should be possible build and install qutip 64-bit version on windows with a commercial 64-bit compiler (e.g. Visual Studio), but since few people has access to such a compiler we have not tested this option. Perhaps mingw64 is now a viable option, but I'm not sure how useful it is now. Would be great if someone could test it. . Binary builds for 32 and 64 conda packages for windows would be highly desirable in my opinion. I have once created a conda package for qutip (https://github.com/conda/conda-recipes/tree/master/qutip) ; so if someone got the development environment with the required compilers setup for windows it should be straightforward to build the packages.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-145857462
https://github.com/qutip/qutip/issues/377#issuecomment-145857462:534,Testability,test,test,534,"The problem with windows has been that there was/is no free 64 bit compiler, and because of that it has been way easier to just install anaconda 32 and use mingw32 on windows (even on windows 64). . In principle is should be possible build and install qutip 64-bit version on windows with a commercial 64-bit compiler (e.g. Visual Studio), but since few people has access to such a compiler we have not tested this option. Perhaps mingw64 is now a viable option, but I'm not sure how useful it is now. Would be great if someone could test it. . Binary builds for 32 and 64 conda packages for windows would be highly desirable in my opinion. I have once created a conda package for qutip (https://github.com/conda/conda-recipes/tree/master/qutip) ; so if someone got the development environment with the required compilers setup for windows it should be straightforward to build the packages.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-145857462
https://github.com/qutip/qutip/issues/377#issuecomment-146571326:70,Deployability,install,installs,70,"I've had good luck using the mingw package for 64-bit Anaconda, which installs the 64-bit version of mingw. I've detailed this in qutip/qutip-doc#22, but I haven't had the opportunity to test those instructions on a wide range of Windows systems.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-146571326
https://github.com/qutip/qutip/issues/377#issuecomment-146571326:187,Testability,test,test,187,"I've had good luck using the mingw package for 64-bit Anaconda, which installs the 64-bit version of mingw. I've detailed this in qutip/qutip-doc#22, but I haven't had the opportunity to test those instructions on a wide range of Windows systems.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-146571326
https://github.com/qutip/qutip/issues/377#issuecomment-148701161:80,Deployability,install,install,80,"I have tried on Win7x64 using anaconda. ; under Python2.7:; I found qutip would install, and most things would work. However there were many warnings when running tests and occurrences of python.exe crashing; under Python 3.5; I found qutip would install. However nothing much would run, e.g. issues importing spmatfuncs when creating a Qobj",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148701161
https://github.com/qutip/qutip/issues/377#issuecomment-148701161:247,Deployability,install,install,247,"I have tried on Win7x64 using anaconda. ; under Python2.7:; I found qutip would install, and most things would work. However there were many warnings when running tests and occurrences of python.exe crashing; under Python 3.5; I found qutip would install. However nothing much would run, e.g. issues importing spmatfuncs when creating a Qobj",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148701161
https://github.com/qutip/qutip/issues/377#issuecomment-148701161:163,Testability,test,tests,163,"I have tried on Win7x64 using anaconda. ; under Python2.7:; I found qutip would install, and most things would work. However there were many warnings when running tests and occurrences of python.exe crashing; under Python 3.5; I found qutip would install. However nothing much would run, e.g. issues importing spmatfuncs when creating a Qobj",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148701161
https://github.com/qutip/qutip/issues/377#issuecomment-148703467:24,Availability,failure,failure,24,"I haven't run into that failure before, but I've only tried on Windows 8.1; and 10 so far. Do you have a console log for a python.exe crash?. On Fri, Oct 16, 2015 at 11:14 PM Alexander Pitchford <; notifications@github.com> wrote:. > I have tried on Win7x64 using anaconda.; > under Python2.7:; > I found qutip would install, and most things would work. However there; > were many warnings when running tests and occurrences of python.exe crashing; > under Python 3.5; > I found qutip would install. However nothing much would run, e.g. issues; > importing spmatfuncs when creating a Qobj; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/issues/377#issuecomment-148701161.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148703467
https://github.com/qutip/qutip/issues/377#issuecomment-148703467:317,Deployability,install,install,317,"I haven't run into that failure before, but I've only tried on Windows 8.1; and 10 so far. Do you have a console log for a python.exe crash?. On Fri, Oct 16, 2015 at 11:14 PM Alexander Pitchford <; notifications@github.com> wrote:. > I have tried on Win7x64 using anaconda.; > under Python2.7:; > I found qutip would install, and most things would work. However there; > were many warnings when running tests and occurrences of python.exe crashing; > under Python 3.5; > I found qutip would install. However nothing much would run, e.g. issues; > importing spmatfuncs when creating a Qobj; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/issues/377#issuecomment-148701161.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148703467
https://github.com/qutip/qutip/issues/377#issuecomment-148703467:491,Deployability,install,install,491,"I haven't run into that failure before, but I've only tried on Windows 8.1; and 10 so far. Do you have a console log for a python.exe crash?. On Fri, Oct 16, 2015 at 11:14 PM Alexander Pitchford <; notifications@github.com> wrote:. > I have tried on Win7x64 using anaconda.; > under Python2.7:; > I found qutip would install, and most things would work. However there; > were many warnings when running tests and occurrences of python.exe crashing; > under Python 3.5; > I found qutip would install. However nothing much would run, e.g. issues; > importing spmatfuncs when creating a Qobj; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/issues/377#issuecomment-148701161.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148703467
https://github.com/qutip/qutip/issues/377#issuecomment-148703467:113,Testability,log,log,113,"I haven't run into that failure before, but I've only tried on Windows 8.1; and 10 so far. Do you have a console log for a python.exe crash?. On Fri, Oct 16, 2015 at 11:14 PM Alexander Pitchford <; notifications@github.com> wrote:. > I have tried on Win7x64 using anaconda.; > under Python2.7:; > I found qutip would install, and most things would work. However there; > were many warnings when running tests and occurrences of python.exe crashing; > under Python 3.5; > I found qutip would install. However nothing much would run, e.g. issues; > importing spmatfuncs when creating a Qobj; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/issues/377#issuecomment-148701161.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148703467
https://github.com/qutip/qutip/issues/377#issuecomment-148703467:403,Testability,test,tests,403,"I haven't run into that failure before, but I've only tried on Windows 8.1; and 10 so far. Do you have a console log for a python.exe crash?. On Fri, Oct 16, 2015 at 11:14 PM Alexander Pitchford <; notifications@github.com> wrote:. > I have tried on Win7x64 using anaconda.; > under Python2.7:; > I found qutip would install, and most things would work. However there; > were many warnings when running tests and occurrences of python.exe crashing; > under Python 3.5; > I found qutip would install. However nothing much would run, e.g. issues; > importing spmatfuncs when creating a Qobj; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/issues/377#issuecomment-148701161.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148703467
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:32,Availability,error,error,32,"Ok, here it is:; btw the actual error (the last line) did not appear in the output file, but it does appear in the cmd window, so I typed it in. Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, states ... ok; brmesolve: Jaynes-Cummings model, zero temperature ... ok; correlation: legacy me and es for oscillator in coherent initial state ... ok; correlation: comparing me and es for oscillator in coherent initial state ... ok; correlation: comparing me and mc for driven oscillator in ground state ... Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, states ... ok; brmesolve: Jaynes-Cummings model, zero temperature ... ok; correlation: legacy me and es for oscillator in coherent initial state ... ok; correlation: comparing me and es for oscillator in coherent initial state ... ok; correlation: comparing me and mc for driven oscillator in ground state ... ERRO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:1997,Availability,ERROR,ERROR,1997,"r driven oscillator in ground state ... Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, states ... ok; brmesolve: Jaynes-Cummings model, zero temperature ... ok; correlation: legacy me and es for oscillator in coherent initial state ... ok; correlation: comparing me and es for oscillator in coherent initial state ... ok; correlation: comparing me and mc for driven oscillator in ground state ... ERROR; correlation: legacy me and es for oscillator in steady-state ... ok; correlation: comparing me and es for oscillator in steady-state ... ok; correlation: legacy spectrum from es and pi methods ... ok; correlation: comparing spectrum from es and fft methods ... ok; correlation: comparing spectrum from es and pi methods ... ok; correlation: comparing TLS emission correlations (str-list td format) ... In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: U",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:2759,Deployability,Release,Release,2759,"ion: legacy me and es for oscillator in coherent initial state ... ok; correlation: comparing me and es for oscillator in coherent initial state ... ok; correlation: comparing me and mc for driven oscillator in ground state ... ERROR; correlation: legacy me and es for oscillator in steady-state ... ok; correlation: comparing me and es for oscillator in steady-state ... ok; correlation: legacy spectrum from es and pi methods ... ok; correlation: comparing spectrum from es and fft methods ... ok; correlation: comparing spectrum from es and pi methods ... ok; correlation: comparing TLS emission correlations (str-list td format) ... In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:1",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:3165,Deployability,Release,Release,3165,"rom es and pi methods ... ok; correlation: comparing spectrum from es and fft methods ... ok; correlation: comparing spectrum from es and pi methods ... ok; correlation: comparing TLS emission correlations (str-list td format) ... In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unk",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:3274,Deployability,Release,Release,3274,"mparing spectrum from es and pi methods ... ok; correlation: comparing TLS emission correlations (str-list td format) ... In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyre",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:3417,Deployability,Release,Release,3417," C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:3596,Deployability,Release,Release,3596,"object.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conv",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:3739,Deployability,Release,Release,3739,"amd64-2.7\Release\pyrex\rhs14880.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arg",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:3875,Deployability,Release,Release,3875,":12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_par",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:3987,Deployability,Release,Release,3987,"recated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversio",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:4130,Deployability,Release,Release,4130,"yxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expec",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:4273,Deployability,Release,Release,4273,"yrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:2",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:4409,Deployability,Release,Release,4409,"lease\pyrex\rhs14880.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In fu",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:4552,Deployability,Release,Release,4552,"rs\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:4695,Deployability,Release,Release,4695,"rs\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argu",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:4831,Deployability,Release,Release,4831,"rs\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:4938,Deployability,Release,Release,4938,":\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:5081,Deployability,Release,Release,5081,":\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:5253,Deployability,Release,Release,5253,"amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: unknown conver",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:5389,Deployability,Release,Release,5389,"amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: too man",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:5498,Deployability,Release,Release,5498,"t]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:5640,Deployability,Release,Release,5640,"at]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: unknown c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:5818,Deployability,Release,Release,5818,".7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: format '%s' expects argument of type 'char *",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:5960,Deployability,Release,Release,5960,": warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: too man",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:6095,Deployability,Release,Release,6095,":5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/nu",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:6207,Deployability,Release,Release,6207,"sers\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobje",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:6350,Deployability,Release,Release,6350,"ex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs1",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:6486,Deployability,Release,Release,6486,"7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_impo",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:6599,Deployability,Release,Release,6599,"alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs1488",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:6742,Deployability,Release,Release,6742," 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_pw_8rhs14880_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__py",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:6921,Deployability,Release,Release,6921,"ex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_pw_8rhs14880_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_tp' may ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:7272,Deployability,Release,Release,7272,"r 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_pw_8rhs14880_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:7343,Deployability,Release,Release,7343,"ease\pyrex\rhs14880.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_pw_8rhs14880_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/nd",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:7589,Deployability,Release,Release,7589,"Release\pyrex\rhs14880.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_pw_8rhs14880_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:7705,Deployability,Release,Release,7705,".pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_pw_8rhs14880_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\nu",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:7872,Deployability,Release,Release,7872,":\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_pw_8rhs14880_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Us",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:8036,Deployability,Release,Release,8036,"onda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_pw_8rhs14880_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs148",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:8512,Deployability,Release,Release,8512," used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_pw_8rhs14880_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:1",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:8918,Deployability,Release,Release,8918,"may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unk",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:9027,Deployability,Release,Release,9027,"elease\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyre",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:9170,Deployability,Release,Release,9170," C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:9349,Deployability,Release,Release,9349,"object.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conv",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:9492,Deployability,Release,Release,9492,"amd64-2.7\Release\pyrex\rhs14881.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arg",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:9628,Deployability,Release,Release,9628,":12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_par",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:9740,Deployability,Release,Release,9740,"recated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversio",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:9883,Deployability,Release,Release,9883,"yxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expec",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:10026,Deployability,Release,Release,10026,"yrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:2",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:10162,Deployability,Release,Release,10162,"lease\pyrex\rhs14881.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In fu",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:10305,Deployability,Release,Release,10305,"rs\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:10448,Deployability,Release,Release,10448,"rs\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argu",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:10584,Deployability,Release,Release,10584,"rs\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:10691,Deployability,Release,Release,10691,":\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:10834,Deployability,Release,Release,10834,":\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:11006,Deployability,Release,Release,11006,"amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: unknown conver",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:11142,Deployability,Release,Release,11142,"amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: too man",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:11251,Deployability,Release,Release,11251,"t]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:11393,Deployability,Release,Release,11393,"at]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: unknown c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:11571,Deployability,Release,Release,11571,".7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: format '%s' expects argument of type 'char *",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:11713,Deployability,Release,Release,11713,": warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: too man",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:11848,Deployability,Release,Release,11848,":5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/nu",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:11960,Deployability,Release,Release,11960,"sers\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobje",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:12103,Deployability,Release,Release,12103,"ex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs1",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:12239,Deployability,Release,Release,12239,"7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_impo",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:12352,Deployability,Release,Release,12352,"alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs1488",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:12495,Deployability,Release,Release,12495," 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_pw_8rhs14881_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__py",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:12674,Deployability,Release,Release,12674,"ex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_pw_8rhs14881_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_tp' may ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:13025,Deployability,Release,Release,13025,"r 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_pw_8rhs14881_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t' may be used uninitialized i",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:13096,Deployability,Release,Release,13096,"ease\pyrex\rhs14881.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_pw_8rhs14881_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaco",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:13342,Deployability,Release,Release,13342,"Release\pyrex\rhs14881.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_pw_8rhs14881_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:13458,Deployability,Release,Release,13458,".pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_pw_8rhs14881_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; C:\Anaco",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:13625,Deployability,Release,Release,13625,":\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_pw_8rhs14881_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\nump",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:13789,Deployability,Release,Release,13789,"onda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_pw_8rhs14881_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\U",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:13954,Deployability,Release,Release,13954,"rayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_pw_8rhs14881_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs148",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:14430,Deployability,Release,Release,14430,"emp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:1",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:14836,Deployability,Release,Release,14836,"may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unk",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:14945,Deployability,Release,Release,14945,"elease\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyre",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:15088,Deployability,Release,Release,15088," C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:15267,Deployability,Release,Release,15267,"object.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conv",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:15410,Deployability,Release,Release,15410,"amd64-2.7\Release\pyrex\rhs14882.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arg",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:15546,Deployability,Release,Release,15546,":12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_par",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:15658,Deployability,Release,Release,15658,"recated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversio",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:15801,Deployability,Release,Release,15801,"yxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expec",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:15944,Deployability,Release,Release,15944,"yrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:2",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:16080,Deployability,Release,Release,16080,"lease\pyrex\rhs14882.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In fu",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:16223,Deployability,Release,Release,16223,"rs\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:16366,Deployability,Release,Release,16366,"rs\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argu",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:16502,Deployability,Release,Release,16502,"rs\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:16609,Deployability,Release,Release,16609,":\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:16752,Deployability,Release,Release,16752,":\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:16924,Deployability,Release,Release,16924,"amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: unknown conver",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:17060,Deployability,Release,Release,17060,"amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: too man",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:17169,Deployability,Release,Release,17169,"t]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:17311,Deployability,Release,Release,17311,"at]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: unknown c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:17489,Deployability,Release,Release,17489,".7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: format '%s' expects argument of type 'char *",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:17631,Deployability,Release,Release,17631,": warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: too man",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:17766,Deployability,Release,Release,17766,":5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/nu",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:17878,Deployability,Release,Release,17878,"sers\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobje",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:18021,Deployability,Release,Release,18021,"ex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs1",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:18157,Deployability,Release,Release,18157,"7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_impo",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:18270,Deployability,Release,Release,18270,"alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs1488",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:18413,Deployability,Release,Release,18413," 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_pw_8rhs14882_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__py",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:18592,Deployability,Release,Release,18592,"ex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_pw_8rhs14882_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_tp' may ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:18943,Deployability,Release,Release,18943,"r 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_pw_8rhs14882_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t' may be used uninitialized i",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:19014,Deployability,Release,Release,19014,"ease\pyrex\rhs14882.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_pw_8rhs14882_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaco",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:19260,Deployability,Release,Release,19260,"Release\pyrex\rhs14882.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_pw_8rhs14882_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:19376,Deployability,Release,Release,19376,".pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_pw_8rhs14882_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; C:\Anaco",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:19543,Deployability,Release,Release,19543,":\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_pw_8rhs14882_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\nump",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:19707,Deployability,Release,Release,19707,"onda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_pw_8rhs14882_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\U",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:19872,Deployability,Release,Release,19872,"rayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_pw_8rhs14882_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs148",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:20348,Deployability,Release,Release,20348,"emp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:1",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:20754,Deployability,Release,Release,20754,"may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unk",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:20863,Deployability,Release,Release,20863,"elease\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyre",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:21006,Deployability,Release,Release,21006," C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:21185,Deployability,Release,Release,21185,"object.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conv",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:21328,Deployability,Release,Release,21328,"amd64-2.7\Release\pyrex\rhs14883.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arg",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:21464,Deployability,Release,Release,21464,":12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_par",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:21576,Deployability,Release,Release,21576,"recated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversio",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:21719,Deployability,Release,Release,21719,"yxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expec",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:21862,Deployability,Release,Release,21862,"yrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:2",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:21998,Deployability,Release,Release,21998,"lease\pyrex\rhs14883.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In fu",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:22141,Deployability,Release,Release,22141,"rs\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:22284,Deployability,Release,Release,22284,"rs\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argu",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:22420,Deployability,Release,Release,22420,"rs\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:22527,Deployability,Release,Release,22527,":\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:22670,Deployability,Release,Release,22670,":\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:22842,Deployability,Release,Release,22842,"amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: unknown conver",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:22978,Deployability,Release,Release,22978,"amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: too man",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:23087,Deployability,Release,Release,23087,"t]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:23229,Deployability,Release,Release,23229,"at]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: unknown c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:23407,Deployability,Release,Release,23407,".7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: format '%s' expects argument of type 'char *",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:23549,Deployability,Release,Release,23549,": warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: too man",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:23684,Deployability,Release,Release,23684,":5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/nu",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:23796,Deployability,Release,Release,23796,"sers\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobje",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:23939,Deployability,Release,Release,23939,"ex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs1",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:24075,Deployability,Release,Release,24075,"7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_impo",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:24188,Deployability,Release,Release,24188,"alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs1488",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:24331,Deployability,Release,Release,24331," 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_pw_8rhs14883_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__py",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:24510,Deployability,Release,Release,24510,"ex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_pw_8rhs14883_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_tp' may ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:24861,Deployability,Release,Release,24861,"r 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_pw_8rhs14883_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; ok; correlation: comparing TLS emission correlations (fn-list td format) ... ok; correlation: comparing TLS emission correla",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:24932,Deployability,Release,Release,24932,"ease\pyrex\rhs14883.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_pw_8rhs14883_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; ok; correlation: comparing TLS emission correlations (fn-list td format) ... ok; correlation: comparing TLS emission correlations (fn td format) ... ok; Counting statistics: current and current n",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:25178,Deployability,Release,Release,25178,"Release\pyrex\rhs14883.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_pw_8rhs14883_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; ok; correlation: comparing TLS emission correlations (fn-list td format) ... ok; correlation: comparing TLS emission correlations (fn td format) ... ok; Counting statistics: current and current noise in a DQD model ... ok; Dispersive cQED Setup: compare unitary matrix for ISWAP and propogator ... ok; Dispersive cQED Setup: compare unitary matrix for ISWAP, SQRTISWAP, ... ok; Diagonalization of random two-level system ... ok; Diagonalizat",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:25294,Deployability,Release,Release,25294,".pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_pw_8rhs14883_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; ok; correlation: comparing TLS emission correlations (fn-list td format) ... ok; correlation: comparing TLS emission correlations (fn td format) ... ok; Counting statistics: current and current noise in a DQD model ... ok; Dispersive cQED Setup: compare unitary matrix for ISWAP and propogator ... ok; Dispersive cQED Setup: compare unitary matrix for ISWAP, SQRTISWAP, ... ok; Diagonalization of random two-level system ... ok; Diagonalization of composite systems ... ok; Excitation-number-restricted state-space: full state space ... ok; Excitation-numbe",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:25461,Deployability,Release,Release,25461,":\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_pw_8rhs14883_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; ok; correlation: comparing TLS emission correlations (fn-list td format) ... ok; correlation: comparing TLS emission correlations (fn td format) ... ok; Counting statistics: current and current noise in a DQD model ... ok; Dispersive cQED Setup: compare unitary matrix for ISWAP and propogator ... ok; Dispersive cQED Setup: compare unitary matrix for ISWAP, SQRTISWAP, ... ok; Diagonalization of random two-level system ... ok; Diagonalization of composite systems ... ok; Excitation-number-restricted state-space: full state space ... ok; Excitation-number-restricted state space: single excitations ... ok; Excitation-number-restricted state space: two excitations ... ok; Excitation-number-restricted state space: fock s",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:25625,Deployability,Release,Release,25625,"onda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_pw_8rhs14883_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; ok; correlation: comparing TLS emission correlations (fn-list td format) ... ok; correlation: comparing TLS emission correlations (fn td format) ... ok; Counting statistics: current and current noise in a DQD model ... ok; Dispersive cQED Setup: compare unitary matrix for ISWAP and propogator ... ok; Dispersive cQED Setup: compare unitary matrix for ISWAP, SQRTISWAP, ... ok; Diagonalization of random two-level system ... ok; Diagonalization of composite systems ... ok; Excitation-number-restricted state-space: full state space ... ok; Excitation-number-restricted state space: single excitations ... ok; Excitation-number-restricted state space: two excitations ... ok; Excitation-number-restricted state space: fock states ... ok; Excitation-number-restricted state space: identity operator ... ok; Excitation-number-restricted state space: thermal density operator (I) ... ok; Exc",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:2906,Integrability,message,message,2906,"e and mc for driven oscillator in ground state ... ERROR; correlation: legacy me and es for oscillator in steady-state ... ok; correlation: comparing me and es for oscillator in steady-state ... ok; correlation: legacy spectrum from es and pi methods ... ok; correlation: comparing spectrum from es and fft methods ... ok; correlation: comparing spectrum from es and pi methods ... ok; correlation: comparing TLS emission correlations (str-list td format) ... In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:8659,Integrability,message,message,8659,"4-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:14577,Integrability,message,message,14577,"d64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:20495,Integrability,message,message,20495,"d64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:26791,Performance,Concurren,Concurrence,26791,"re\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_pw_8rhs14883_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; ok; correlation: comparing TLS emission correlations (fn-list td format) ... ok; correlation: comparing TLS emission correlations (fn td format) ... ok; Counting statistics: current and current noise in a DQD model ... ok; Dispersive cQED Setup: compare unitary matrix for ISWAP and propogator ... ok; Dispersive cQED Setup: compare unitary matrix for ISWAP, SQRTISWAP, ... ok; Diagonalization of random two-level system ... ok; Diagonalization of composite systems ... ok; Excitation-number-restricted state-space: full state space ... ok; Excitation-number-restricted state space: single excitations ... ok; Excitation-number-restricted state space: two excitations ... ok; Excitation-number-restricted state space: fock states ... ok; Excitation-number-restricted state space: identity operator ... ok; Excitation-number-restricted state space: thermal density operator (I) ... ok; Excitation-number-restricted state space: thermal density operator (II) ... ok; Entropy: von-Neumann entropy ... ok; Entropy: Linear entropy ... ok; Entropy: Concurrence ... ok; Entropy: Mutual information ... C:\Anaconda3\envs\qutip_py2\lib\site-packages\qutip\ptrace.py:111: RuntimeWarning: invalid name encountered in remainder np.fix(counter / np.prod(dims[sel[k + 1:]])), dims[sel[k]]) + 1",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:505,Usability,simpl,simple,505,"Ok, here it is:; btw the actual error (the last line) did not appear in the output file, but it does appear in the cmd window, so I typed it in. Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, states ... ok; brmesolve: Jaynes-Cummings model, zero temperature ... ok; correlation: legacy me and es for oscillator in coherent initial state ... ok; correlation: comparing me and es for oscillator in coherent initial state ... ok; correlation: comparing me and mc for driven oscillator in ground state ... Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, states ... ok; brmesolve: Jaynes-Cummings model, zero temperature ... ok; correlation: legacy me and es for oscillator in coherent initial state ... ok; correlation: comparing me and es for oscillator in coherent initial state ... ok; correlation: comparing me and mc for driven oscillator in ground state ... ERRO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708318:1431,Usability,simpl,simple,1431,"ok; Check diagonalization via eigenbasis transformation ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, states ... ok; brmesolve: Jaynes-Cummings model, zero temperature ... ok; correlation: legacy me and es for oscillator in coherent initial state ... ok; correlation: comparing me and es for oscillator in coherent initial state ... ok; correlation: comparing me and mc for driven oscillator in ground state ... Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, states ... ok; brmesolve: Jaynes-Cummings model, zero temperature ... ok; correlation: legacy me and es for oscillator in coherent initial state ... ok; correlation: comparing me and es for oscillator in coherent initial state ... ok; correlation: comparing me and mc for driven oscillator in ground state ... ERROR; correlation: legacy me and es for oscillator in steady-state ... ok; correlation: comparing me and es for oscillator in steady-state ... ok; correlation: legacy spectrum from es and pi methods ... ok; correlation: comparing spectrum from es and fft methods ... ok; correlation: comparing spectrum from es and pi methods ... ok; correlation: comparing TLS emission correlations (str-list td format) ... In file included from C:",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318
https://github.com/qutip/qutip/issues/377#issuecomment-148708728:162,Availability,error,error,162,"btw when I run the tests in Windows, using:; import nose; nose.run(defaultTest=""qutip.tests"", argv=['nosetests', '-v']). they restart themselves when there is an error. And I can't close the cmd window (even using the task manager)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708728
https://github.com/qutip/qutip/issues/377#issuecomment-148708728:19,Testability,test,tests,19,"btw when I run the tests in Windows, using:; import nose; nose.run(defaultTest=""qutip.tests"", argv=['nosetests', '-v']). they restart themselves when there is an error. And I can't close the cmd window (even using the task manager)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708728
https://github.com/qutip/qutip/issues/377#issuecomment-148708728:86,Testability,test,tests,86,"btw when I run the tests in Windows, using:; import nose; nose.run(defaultTest=""qutip.tests"", argv=['nosetests', '-v']). they restart themselves when there is an error. And I can't close the cmd window (even using the task manager)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708728
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:315,Availability,error,error,315,"Seems to be a problem with the Cython pyximport. Running a py3 pyx file with just print(""hello world"") ; Runs and returns the text, but then crashes python.exe. Using Anaconda py3 on win7 x64. > On Oct 16, 2015, at 06:51, Alexander Pitchford notifications@github.com wrote:; > ; > Ok, here it is:; > btw the actual error (the last line) did not appear in the output file, but it does appear in the cmd window, so I typed it in.; > ; > Transform 2-level to eigenbasis and back ... ok; > Transform 10-level real-values to eigenbasis and back ... ok; > Transform 10-level to eigenbasis and back ... ok; > Transform 10-level imag to eigenbasis and back ... ok; > Consistency between transformations of kets and density matrices ... ok; > Check diagonalization via eigenbasis transformation ... ok; > brmesolve: simple qubit ... ok; > brmesolve: c_ops alone ... ok; > brmesolve: c_ops with a_ops ... ok; > brmesolve: harmonic oscillator, zero temperature ... ok; > brmesolve: harmonic oscillator, finite temperature ... ok; > brmesolve: harmonic oscillator, finite temperature, states ... ok; > brmesolve: Jaynes-Cummings model, zero temperature ... ok; > correlation: legacy me and es for oscillator in coherent initial state ... ok; > correlation: comparing me and es for oscillator in coherent initial state ... ok; > correlation: comparing me and mc for driven oscillator in ground state ... Transform 2-level to eigenbasis and back ... ok; > Transform 10-level real-values to eigenbasis and back ... ok; > Transform 10-level to eigenbasis and back ... ok; > Transform 10-level imag to eigenbasis and back ... ok; > Consistency between transformations of kets and density matrices ... ok; > Check diagonalization via eigenbasis transformation ... ok; > brmesolve: simple qubit ... ok; > brmesolve: c_ops alone ... ok; > brmesolve: c_ops with a_ops ... ok; > brmesolve: harmonic oscillator, zero temperature ... ok; > brmesolve: harmonic oscillator, finite temperature ... ok; > brmesolve: harmonic osci",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:2347,Availability,ERROR,ERROR,2347,"tate ... Transform 2-level to eigenbasis and back ... ok; > Transform 10-level real-values to eigenbasis and back ... ok; > Transform 10-level to eigenbasis and back ... ok; > Transform 10-level imag to eigenbasis and back ... ok; > Consistency between transformations of kets and density matrices ... ok; > Check diagonalization via eigenbasis transformation ... ok; > brmesolve: simple qubit ... ok; > brmesolve: c_ops alone ... ok; > brmesolve: c_ops with a_ops ... ok; > brmesolve: harmonic oscillator, zero temperature ... ok; > brmesolve: harmonic oscillator, finite temperature ... ok; > brmesolve: harmonic oscillator, finite temperature, states ... ok; > brmesolve: Jaynes-Cummings model, zero temperature ... ok; > correlation: legacy me and es for oscillator in coherent initial state ... ok; > correlation: comparing me and es for oscillator in coherent initial state ... ok; > correlation: comparing me and mc for driven oscillator in ground state ... ERROR; > correlation: legacy me and es for oscillator in steady-state ... ok; > correlation: comparing me and es for oscillator in steady-state ... ok; > correlation: legacy spectrum from es and pi methods ... ok; > correlation: comparing spectrum from es and fft methods ... ok; > correlation: comparing spectrum from es and pi methods ... ok; > correlation: comparing TLS emission correlations (str-list td format) ... In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(1",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:3127,Deployability,Release,Release,3127,"for oscillator in coherent initial state ... ok; > correlation: comparing me and es for oscillator in coherent initial state ... ok; > correlation: comparing me and mc for driven oscillator in ground state ... ERROR; > correlation: legacy me and es for oscillator in steady-state ... ok; > correlation: comparing me and es for oscillator in steady-state ... ok; > correlation: legacy spectrum from es and pi methods ... ok; > correlation: comparing spectrum from es and fft methods ... ok; > correlation: comparing spectrum from es and pi methods ... ok; > correlation: comparing TLS emission correlations (str-list td format) ... In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:3537,Deployability,Release,Release,3537,"thods ... ok; > correlation: comparing spectrum from es and fft methods ... ok; > correlation: comparing spectrum from es and pi methods ... ok; > correlation: comparing TLS emission correlations (str-list td format) ... In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:3648,Deployability,Release,Release,3648,"um from es and pi methods ... ok; > correlation: comparing TLS emission correlations (str-list td format) ... In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:3793,Deployability,Release,Release,3793,"envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Relea",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:3974,Deployability,Release,Release,3974,"> from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:4119,Deployability,Release,Release,4119,"lease\pyrex\rhs14880.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:4257,Deployability,Release,Release,4257," #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:4371,Deployability,Release,Release,4371,"12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unk",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:4516,Deployability,Release,Release,4516,"-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: for",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:4661,Deployability,Release,Release,4661,"c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:4799,Deployability,Release,Release,4799,"s14880.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:4944,Deployability,Release,Release,4944,"\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:5089,Deployability,Release,Release,5089,"\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:5227,Deployability,Release,Release,5227,"\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\py",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:5336,Deployability,Release,Release,5336,"yxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.p",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:5481,Deployability,Release,Release,5481,"yxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:5655,Deployability,Release,Release,5655,"ase\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:5793,Deployability,Release,Release,5793,"ase\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: wa",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:5904,Deployability,Release,Release,5904,"lex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\p",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:6048,Deployability,Release,Release,6048,"alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warn",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:6228,Deployability,Release,Release,6228,"ex\rhs14880.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: format '%s' expects argument o",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:6372,Deployability,Release,Release,6372,"nown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: wa",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:6509,Deployability,Release,Release,6509,"ing: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:6623,Deployability,Release,Release,6623,"ld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/n",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:6768,Deployability,Release,Release,6768,".win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Re",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:6906,Deployability,Release,Release,6906,"x\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1:",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:7021,Deployability,Release,Release,7021,"mp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Relea",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:7166,Deployability,Release,Release,7166,"Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_pw_8rhs14880_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:7347,Deployability,Release,Release,7347,".win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_pw_8rhs14880_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:7704,Deployability,Release,Release,7704,"[-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_pw_8rhs14880_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:17",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:7777,Deployability,Release,Release,7777,"880.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_pw_8rhs14880_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\in",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:8027,Deployability,Release,Release,8027,"s14880.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_pw_8rhs14880_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-pack",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:8145,Deployability,Release,Release,8145,"-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_pw_8rhs14880_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\si",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:8314,Deployability,Release,Release,8314,"bld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_pw_8rhs14880_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VE",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:8480,Deployability,Release,Release,8480,"_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_pw_8rhs14880_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Releas",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:8964,Deployability,Release,Release,8964,"function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_pw_8rhs14880_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:9374,Deployability,Release,Release,9374,"initialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:9485,Deployability,Release,Release,9485,"hs14880.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:9630,Deployability,Release,Release,9630,"envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Relea",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:9811,Deployability,Release,Release,9811,"> from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:9956,Deployability,Release,Release,9956,"lease\pyrex\rhs14881.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:10094,Deployability,Release,Release,10094," #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:10208,Deployability,Release,Release,10208,"12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unk",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:10353,Deployability,Release,Release,10353,"-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: for",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:10498,Deployability,Release,Release,10498,"c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:10636,Deployability,Release,Release,10636,"s14881.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:10781,Deployability,Release,Release,10781,"\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:10926,Deployability,Release,Release,10926,"\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:11064,Deployability,Release,Release,11064,"\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\py",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:11173,Deployability,Release,Release,11173,"yxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.p",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:11318,Deployability,Release,Release,11318,"yxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:11492,Deployability,Release,Release,11492,"ase\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:11630,Deployability,Release,Release,11630,"ase\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: wa",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:11741,Deployability,Release,Release,11741,"lex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\p",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:11885,Deployability,Release,Release,11885,"alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warn",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:12065,Deployability,Release,Release,12065,"ex\rhs14881.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: format '%s' expects argument o",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:12209,Deployability,Release,Release,12209,"nown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: wa",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:12346,Deployability,Release,Release,12346,"ing: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:12460,Deployability,Release,Release,12460,"ld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/n",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:12605,Deployability,Release,Release,12605,".win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Re",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:12743,Deployability,Release,Release,12743,"x\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1:",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:12858,Deployability,Release,Release,12858,"mp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Relea",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:13003,Deployability,Release,Release,13003,"Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_pw_8rhs14881_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:13184,Deployability,Release,Release,13184,".win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_pw_8rhs14881_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:13541,Deployability,Release,Release,13541,"[-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_pw_8rhs14881_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t' may be used u",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:13614,Deployability,Release,Release,13614,"881.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_pw_8rhs14881_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:13864,Deployability,Release,Release,13864,"s14881.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_pw_8rhs14881_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packag",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:13982,Deployability,Release,Release,13982,"-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_pw_8rhs14881_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:14151,Deployability,Release,Release,14151,"bld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_pw_8rhs14881_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:14317,Deployability,Release,Release,14317,"_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_pw_8rhs14881_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_V",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:14484,Deployability,Release,Release,14484,"> from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_pw_8rhs14881_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Releas",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:14968,Deployability,Release,Release,14968,"2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:15378,Deployability,Release,Release,15378,"initialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:15489,Deployability,Release,Release,15489,"hs14881.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:15634,Deployability,Release,Release,15634,"envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Relea",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:15815,Deployability,Release,Release,15815,"> from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:15960,Deployability,Release,Release,15960,"lease\pyrex\rhs14882.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:16098,Deployability,Release,Release,16098," #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:16212,Deployability,Release,Release,16212,"12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unk",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:16357,Deployability,Release,Release,16357,"-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: for",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:16502,Deployability,Release,Release,16502,"c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:16640,Deployability,Release,Release,16640,"s14882.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:16785,Deployability,Release,Release,16785,"\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:16930,Deployability,Release,Release,16930,"\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:17068,Deployability,Release,Release,17068,"\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\py",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:17177,Deployability,Release,Release,17177,"yxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.p",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:17322,Deployability,Release,Release,17322,"yxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:17496,Deployability,Release,Release,17496,"ase\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:17634,Deployability,Release,Release,17634,"ase\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: wa",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:17745,Deployability,Release,Release,17745,"lex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\p",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:17889,Deployability,Release,Release,17889,"alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warn",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:18069,Deployability,Release,Release,18069,"ex\rhs14882.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: format '%s' expects argument o",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:18213,Deployability,Release,Release,18213,"nown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: wa",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:18350,Deployability,Release,Release,18350,"ing: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:18464,Deployability,Release,Release,18464,"ld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/n",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:18609,Deployability,Release,Release,18609,".win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Re",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:18747,Deployability,Release,Release,18747,"x\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1:",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:18862,Deployability,Release,Release,18862,"mp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Relea",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:19007,Deployability,Release,Release,19007,"Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_pw_8rhs14882_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:19188,Deployability,Release,Release,19188,".win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_pw_8rhs14882_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:19545,Deployability,Release,Release,19545,"[-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_pw_8rhs14882_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t' may be used u",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:19618,Deployability,Release,Release,19618,"882.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_pw_8rhs14882_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:19868,Deployability,Release,Release,19868,"s14882.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_pw_8rhs14882_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packag",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:19986,Deployability,Release,Release,19986,"-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_pw_8rhs14882_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:20155,Deployability,Release,Release,20155,"bld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_pw_8rhs14882_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:20321,Deployability,Release,Release,20321,"_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_pw_8rhs14882_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_V",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:20488,Deployability,Release,Release,20488,"> from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_pw_8rhs14882_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Releas",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:20972,Deployability,Release,Release,20972,"2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:21382,Deployability,Release,Release,21382,"initialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:21493,Deployability,Release,Release,21493,"hs14882.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:21638,Deployability,Release,Release,21638,"envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Relea",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:21819,Deployability,Release,Release,21819,"> from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:21964,Deployability,Release,Release,21964,"lease\pyrex\rhs14883.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:22102,Deployability,Release,Release,22102," #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:22216,Deployability,Release,Release,22216,"12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unk",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:22361,Deployability,Release,Release,22361,"-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: for",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:22506,Deployability,Release,Release,22506,"c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:22644,Deployability,Release,Release,22644,"s14883.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:22789,Deployability,Release,Release,22789,"\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:22934,Deployability,Release,Release,22934,"\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:23072,Deployability,Release,Release,23072,"\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\py",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:23181,Deployability,Release,Release,23181,"yxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.p",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:23326,Deployability,Release,Release,23326,"yxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:23500,Deployability,Release,Release,23500,"ase\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:23638,Deployability,Release,Release,23638,"ase\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: wa",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:23749,Deployability,Release,Release,23749,"lex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\p",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:23893,Deployability,Release,Release,23893,"alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warn",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:24073,Deployability,Release,Release,24073,"ex\rhs14883.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: format '%s' expects argument o",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:24217,Deployability,Release,Release,24217,"nown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: wa",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:24354,Deployability,Release,Release,24354,"ing: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:24468,Deployability,Release,Release,24468,"ld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/n",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:24613,Deployability,Release,Release,24613,".win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Re",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:24751,Deployability,Release,Release,24751,"x\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1:",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:24866,Deployability,Release,Release,24866,"mp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Relea",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:25011,Deployability,Release,Release,25011,"Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_pw_8rhs14883_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:25192,Deployability,Release,Release,25192,".win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_pw_8rhs14883_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:25549,Deployability,Release,Release,25549,"[-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_pw_8rhs14883_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > ok; > correlation: comparing TLS emission correlations (fn-list td format) ... ok; > correlation: comparing TL",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:25622,Deployability,Release,Release,25622,"883.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_pw_8rhs14883_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > ok; > correlation: comparing TLS emission correlations (fn-list td format) ... ok; > correlation: comparing TLS emission correlations (fn td format) ... ok; > Counting statistics: cur",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:25872,Deployability,Release,Release,25872,"s14883.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_pw_8rhs14883_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > ok; > correlation: comparing TLS emission correlations (fn-list td format) ... ok; > correlation: comparing TLS emission correlations (fn td format) ... ok; > Counting statistics: current and current noise in a DQD model ... ok; > Dispersive cQED Setup: compare unitary matrix for ISWAP and propogator ... ok; > Dispersive cQED Setup: compare unitary matrix for ISWAP, SQRTISWAP, ... ok; > Diagonalization of random two-level system ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:25990,Deployability,Release,Release,25990,"-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_pw_8rhs14883_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > ok; > correlation: comparing TLS emission correlations (fn-list td format) ... ok; > correlation: comparing TLS emission correlations (fn td format) ... ok; > Counting statistics: current and current noise in a DQD model ... ok; > Dispersive cQED Setup: compare unitary matrix for ISWAP and propogator ... ok; > Dispersive cQED Setup: compare unitary matrix for ISWAP, SQRTISWAP, ... ok; > Diagonalization of random two-level system ... ok; > Diagonalization of composite systems ... ok; > Excitation-number-restricted state-space: full state space ..",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:26159,Deployability,Release,Release,26159,"bld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_pw_8rhs14883_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > ok; > correlation: comparing TLS emission correlations (fn-list td format) ... ok; > correlation: comparing TLS emission correlations (fn td format) ... ok; > Counting statistics: current and current noise in a DQD model ... ok; > Dispersive cQED Setup: compare unitary matrix for ISWAP and propogator ... ok; > Dispersive cQED Setup: compare unitary matrix for ISWAP, SQRTISWAP, ... ok; > Diagonalization of random two-level system ... ok; > Diagonalization of composite systems ... ok; > Excitation-number-restricted state-space: full state space ... ok; > Excitation-number-restricted state space: single excitations ... ok; > Excitation-number-restricted state space: two excitations ... ok; > Excitation-number-rest",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:26325,Deployability,Release,Release,26325,"_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_pw_8rhs14883_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > ok; > correlation: comparing TLS emission correlations (fn-list td format) ... ok; > correlation: comparing TLS emission correlations (fn td format) ... ok; > Counting statistics: current and current noise in a DQD model ... ok; > Dispersive cQED Setup: compare unitary matrix for ISWAP and propogator ... ok; > Dispersive cQED Setup: compare unitary matrix for ISWAP, SQRTISWAP, ... ok; > Diagonalization of random two-level system ... ok; > Diagonalization of composite systems ... ok; > Excitation-number-restricted state-space: full state space ... ok; > Excitation-number-restricted state space: single excitations ... ok; > Excitation-number-restricted state space: two excitations ... ok; > Excitation-number-restricted state space: fock states ... ok; > Excitation-number-restricted state space: identity operator ... ok; > Excitation-number-restricted state space: thermal dens",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:3276,Integrability,message,message,3276,"oscillator in ground state ... ERROR; > correlation: legacy me and es for oscillator in steady-state ... ok; > correlation: comparing me and es for oscillator in steady-state ... ok; > correlation: legacy spectrum from es and pi methods ... ok; > correlation: comparing spectrum from es and fft methods ... ok; > correlation: comparing spectrum from es and pi methods ... ok; > correlation: comparing TLS emission correlations (str-list td format) ... In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessT",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:9113,Integrability,message,message,9113,"pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessT",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:15117,Integrability,message,message,15117,"e\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessT",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:21121,Integrability,message,message,21121,"e\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessT",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:27527,Performance,Concurren,Concurrence,27527,"amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_pw_8rhs14883_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > ok; > correlation: comparing TLS emission correlations (fn-list td format) ... ok; > correlation: comparing TLS emission correlations (fn td format) ... ok; > Counting statistics: current and current noise in a DQD model ... ok; > Dispersive cQED Setup: compare unitary matrix for ISWAP and propogator ... ok; > Dispersive cQED Setup: compare unitary matrix for ISWAP, SQRTISWAP, ... ok; > Diagonalization of random two-level system ... ok; > Diagonalization of composite systems ... ok; > Excitation-number-restricted state-space: full state space ... ok; > Excitation-number-restricted state space: single excitations ... ok; > Excitation-number-restricted state space: two excitations ... ok; > Excitation-number-restricted state space: fock states ... ok; > Excitation-number-restricted state space: identity operator ... ok; > Excitation-number-restricted state space: thermal density operator (I) ... ok; > Excitation-number-restricted state space: thermal density operator (II) ... ok; > Entropy: von-Neumann entropy ... ok; > Entropy: Linear entropy ... ok; > Entropy: Concurrence ... ok; > Entropy: Mutual information ... C:\Anaconda3\envs\qutip_py2\lib\site-packages\qutip\ptrace.py:111: RuntimeWarning: invalid name encountered in remainder np.fix(counter / np.prod(dims[sel[k + 1:]])), dims[sel[k]]) + 1; > ; > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:807,Usability,simpl,simple,807,"Seems to be a problem with the Cython pyximport. Running a py3 pyx file with just print(""hello world"") ; Runs and returns the text, but then crashes python.exe. Using Anaconda py3 on win7 x64. > On Oct 16, 2015, at 06:51, Alexander Pitchford notifications@github.com wrote:; > ; > Ok, here it is:; > btw the actual error (the last line) did not appear in the output file, but it does appear in the cmd window, so I typed it in.; > ; > Transform 2-level to eigenbasis and back ... ok; > Transform 10-level real-values to eigenbasis and back ... ok; > Transform 10-level to eigenbasis and back ... ok; > Transform 10-level imag to eigenbasis and back ... ok; > Consistency between transformations of kets and density matrices ... ok; > Check diagonalization via eigenbasis transformation ... ok; > brmesolve: simple qubit ... ok; > brmesolve: c_ops alone ... ok; > brmesolve: c_ops with a_ops ... ok; > brmesolve: harmonic oscillator, zero temperature ... ok; > brmesolve: harmonic oscillator, finite temperature ... ok; > brmesolve: harmonic oscillator, finite temperature, states ... ok; > brmesolve: Jaynes-Cummings model, zero temperature ... ok; > correlation: legacy me and es for oscillator in coherent initial state ... ok; > correlation: comparing me and es for oscillator in coherent initial state ... ok; > correlation: comparing me and mc for driven oscillator in ground state ... Transform 2-level to eigenbasis and back ... ok; > Transform 10-level real-values to eigenbasis and back ... ok; > Transform 10-level to eigenbasis and back ... ok; > Transform 10-level imag to eigenbasis and back ... ok; > Consistency between transformations of kets and density matrices ... ok; > Check diagonalization via eigenbasis transformation ... ok; > brmesolve: simple qubit ... ok; > brmesolve: c_ops alone ... ok; > brmesolve: c_ops with a_ops ... ok; > brmesolve: harmonic oscillator, zero temperature ... ok; > brmesolve: harmonic oscillator, finite temperature ... ok; > brmesolve: harmonic osci",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-148786885:1763,Usability,simpl,simple,1763,"igenbasis transformation ... ok; > brmesolve: simple qubit ... ok; > brmesolve: c_ops alone ... ok; > brmesolve: c_ops with a_ops ... ok; > brmesolve: harmonic oscillator, zero temperature ... ok; > brmesolve: harmonic oscillator, finite temperature ... ok; > brmesolve: harmonic oscillator, finite temperature, states ... ok; > brmesolve: Jaynes-Cummings model, zero temperature ... ok; > correlation: legacy me and es for oscillator in coherent initial state ... ok; > correlation: comparing me and es for oscillator in coherent initial state ... ok; > correlation: comparing me and mc for driven oscillator in ground state ... Transform 2-level to eigenbasis and back ... ok; > Transform 10-level real-values to eigenbasis and back ... ok; > Transform 10-level to eigenbasis and back ... ok; > Transform 10-level imag to eigenbasis and back ... ok; > Consistency between transformations of kets and density matrices ... ok; > Check diagonalization via eigenbasis transformation ... ok; > brmesolve: simple qubit ... ok; > brmesolve: c_ops alone ... ok; > brmesolve: c_ops with a_ops ... ok; > brmesolve: harmonic oscillator, zero temperature ... ok; > brmesolve: harmonic oscillator, finite temperature ... ok; > brmesolve: harmonic oscillator, finite temperature, states ... ok; > brmesolve: Jaynes-Cummings model, zero temperature ... ok; > correlation: legacy me and es for oscillator in coherent initial state ... ok; > correlation: comparing me and es for oscillator in coherent initial state ... ok; > correlation: comparing me and mc for driven oscillator in ground state ... ERROR; > correlation: legacy me and es for oscillator in steady-state ... ok; > correlation: comparing me and es for oscillator in steady-state ... ok; > correlation: legacy spectrum from es and pi methods ... ok; > correlation: comparing spectrum from es and fft methods ... ok; > correlation: comparing spectrum from es and pi methods ... ok; > correlation: comparing TLS emission correlations (str-list td forma",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885
https://github.com/qutip/qutip/issues/377#issuecomment-150083795:162,Deployability,install,installation,162,"I managed to get all the tests working on Win7 x64 using Anaconda and mingw in the manner that Chris suggested. However, one caveat is that the user name for the installation can not have any spaces in it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-150083795
https://github.com/qutip/qutip/issues/377#issuecomment-150083795:25,Testability,test,tests,25,"I managed to get all the tests working on Win7 x64 using Anaconda and mingw in the manner that Chris suggested. However, one caveat is that the user name for the installation can not have any spaces in it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-150083795
https://github.com/qutip/qutip/issues/377#issuecomment-150097897:142,Availability,down,down,142,"Oh, I hadn't even thought of that issue. It seems like that could be filed as an upstream bug with someone else, perhaps? Where does it break down when you do have spaces in the username?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-150097897
https://github.com/qutip/qutip/issues/377#issuecomment-150410961:432,Deployability,install,install,432,"Nice, this is great. Perhaps someone with working conda environment for windows could build binary qutip packages for windows using conda-recipes/qutip and upload to binstar (now anaconda cloud?), for example here:. https://anaconda.org/jrjohansson/qutip/files. It would be nice with binary builds for all platform there (or rather, we should create a new official qutip project account on binstar), so that it would be possible to install qutip on any platform in the same way by specifying the binstar channel. . Since conda is taking over the scientific python community with storm, I think we should even consider discontinuing debian, macports, brew as installation option and only promote conda and pypi. As it is now we have too many installation options, and I think it confuses users more than it helps.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-150410961
https://github.com/qutip/qutip/issues/377#issuecomment-150410961:658,Deployability,install,installation,658,"Nice, this is great. Perhaps someone with working conda environment for windows could build binary qutip packages for windows using conda-recipes/qutip and upload to binstar (now anaconda cloud?), for example here:. https://anaconda.org/jrjohansson/qutip/files. It would be nice with binary builds for all platform there (or rather, we should create a new official qutip project account on binstar), so that it would be possible to install qutip on any platform in the same way by specifying the binstar channel. . Since conda is taking over the scientific python community with storm, I think we should even consider discontinuing debian, macports, brew as installation option and only promote conda and pypi. As it is now we have too many installation options, and I think it confuses users more than it helps.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-150410961
https://github.com/qutip/qutip/issues/377#issuecomment-150410961:741,Deployability,install,installation,741,"Nice, this is great. Perhaps someone with working conda environment for windows could build binary qutip packages for windows using conda-recipes/qutip and upload to binstar (now anaconda cloud?), for example here:. https://anaconda.org/jrjohansson/qutip/files. It would be nice with binary builds for all platform there (or rather, we should create a new official qutip project account on binstar), so that it would be possible to install qutip on any platform in the same way by specifying the binstar channel. . Since conda is taking over the scientific python community with storm, I think we should even consider discontinuing debian, macports, brew as installation option and only promote conda and pypi. As it is now we have too many installation options, and I think it confuses users more than it helps.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-150410961
https://github.com/qutip/qutip/issues/377#issuecomment-150433198:153,Deployability,install,installation,153,"Thanks, I'm glad that it's useful! I broadly agree that moving instructions to Anaconda makes a lot of sense, though I'd suggest keeping the alternative installation methods on a new page (""Advanced Installion,"" perhaps?), as they're still useful for less typical installations. As for the binstar/Anaconda cloud recipes, I do have a working Anaconda 2.3 installation for Windows 10 64-bit, but only for Python 2.7. I've had a lot of trouble with getting side-by-side of 2.7 and 3.4 on Windows for some reason, and there's a few 2-specific libraries I need. When I get through some of my current deadlines, I'll work on getting a Windows binstar recipe going for installing on 2.7, though I'd appreciate help getting it to work on 3.4 as well. Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-150433198
https://github.com/qutip/qutip/issues/377#issuecomment-150433198:199,Deployability,Install,Installion,199,"Thanks, I'm glad that it's useful! I broadly agree that moving instructions to Anaconda makes a lot of sense, though I'd suggest keeping the alternative installation methods on a new page (""Advanced Installion,"" perhaps?), as they're still useful for less typical installations. As for the binstar/Anaconda cloud recipes, I do have a working Anaconda 2.3 installation for Windows 10 64-bit, but only for Python 2.7. I've had a lot of trouble with getting side-by-side of 2.7 and 3.4 on Windows for some reason, and there's a few 2-specific libraries I need. When I get through some of my current deadlines, I'll work on getting a Windows binstar recipe going for installing on 2.7, though I'd appreciate help getting it to work on 3.4 as well. Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-150433198
https://github.com/qutip/qutip/issues/377#issuecomment-150433198:264,Deployability,install,installations,264,"Thanks, I'm glad that it's useful! I broadly agree that moving instructions to Anaconda makes a lot of sense, though I'd suggest keeping the alternative installation methods on a new page (""Advanced Installion,"" perhaps?), as they're still useful for less typical installations. As for the binstar/Anaconda cloud recipes, I do have a working Anaconda 2.3 installation for Windows 10 64-bit, but only for Python 2.7. I've had a lot of trouble with getting side-by-side of 2.7 and 3.4 on Windows for some reason, and there's a few 2-specific libraries I need. When I get through some of my current deadlines, I'll work on getting a Windows binstar recipe going for installing on 2.7, though I'd appreciate help getting it to work on 3.4 as well. Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-150433198
https://github.com/qutip/qutip/issues/377#issuecomment-150433198:355,Deployability,install,installation,355,"Thanks, I'm glad that it's useful! I broadly agree that moving instructions to Anaconda makes a lot of sense, though I'd suggest keeping the alternative installation methods on a new page (""Advanced Installion,"" perhaps?), as they're still useful for less typical installations. As for the binstar/Anaconda cloud recipes, I do have a working Anaconda 2.3 installation for Windows 10 64-bit, but only for Python 2.7. I've had a lot of trouble with getting side-by-side of 2.7 and 3.4 on Windows for some reason, and there's a few 2-specific libraries I need. When I get through some of my current deadlines, I'll work on getting a Windows binstar recipe going for installing on 2.7, though I'd appreciate help getting it to work on 3.4 as well. Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-150433198
https://github.com/qutip/qutip/issues/377#issuecomment-150433198:663,Deployability,install,installing,663,"Thanks, I'm glad that it's useful! I broadly agree that moving instructions to Anaconda makes a lot of sense, though I'd suggest keeping the alternative installation methods on a new page (""Advanced Installion,"" perhaps?), as they're still useful for less typical installations. As for the binstar/Anaconda cloud recipes, I do have a working Anaconda 2.3 installation for Windows 10 64-bit, but only for Python 2.7. I've had a lot of trouble with getting side-by-side of 2.7 and 3.4 on Windows for some reason, and there's a few 2-specific libraries I need. When I get through some of my current deadlines, I'll work on getting a Windows binstar recipe going for installing on 2.7, though I'd appreciate help getting it to work on 3.4 as well. Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-150433198
https://github.com/qutip/qutip/issues/377#issuecomment-150990762:125,Deployability,update,update,125,"I had actually tried that before, following the user guide for conda, but it didn't work. Seems that it was fixed in a conda update, though, as it works fine now. Thanks! Will use that to test installation instructions.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-150990762
https://github.com/qutip/qutip/issues/377#issuecomment-150990762:193,Deployability,install,installation,193,"I had actually tried that before, following the user guide for conda, but it didn't work. Seems that it was fixed in a conda update, though, as it works fine now. Thanks! Will use that to test installation instructions.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-150990762
https://github.com/qutip/qutip/issues/377#issuecomment-150990762:188,Testability,test,test,188,"I had actually tried that before, following the user guide for conda, but it didn't work. Seems that it was fixed in a conda update, though, as it works fine now. Thanks! Will use that to test installation instructions.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-150990762
https://github.com/qutip/qutip/issues/377#issuecomment-150990762:53,Usability,guid,guide,53,"I had actually tried that before, following the user guide for conda, but it didn't work. Seems that it was fixed in a conda update, though, as it works fine now. Thanks! Will use that to test installation instructions.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-150990762
https://github.com/qutip/qutip/issues/378#issuecomment-145859036:62,Integrability,depend,dependency,62,"Is six used in qutip now? If so then go ahead and add it as a dependency, I'd say. Personally I don't like use six, and prefer to write idiomatic Python 3 code that also work for Python 2, but I don't see any problems with anyone else using it. It is a pretty standard dependency for Python 2 and 3 compatibility needs.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/378#issuecomment-145859036
https://github.com/qutip/qutip/issues/378#issuecomment-145859036:269,Integrability,depend,dependency,269,"Is six used in qutip now? If so then go ahead and add it as a dependency, I'd say. Personally I don't like use six, and prefer to write idiomatic Python 3 code that also work for Python 2, but I don't see any problems with anyone else using it. It is a pretty standard dependency for Python 2 and 3 compatibility needs.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/378#issuecomment-145859036
https://github.com/qutip/qutip/issues/378#issuecomment-145861008:38,Modifiability,variab,variable,38,"Yes, I had used it to check whether a variable was a string type. I saw it suggested somewhere. It has only just come up as I am adding (long overdue) tests for the control modules. I have now replaced the six based method with something else, but I think the six.string_types method was more elegant.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/378#issuecomment-145861008
https://github.com/qutip/qutip/issues/378#issuecomment-145861008:151,Testability,test,tests,151,"Yes, I had used it to check whether a variable was a string type. I saw it suggested somewhere. It has only just come up as I am adding (long overdue) tests for the control modules. I have now replaced the six based method with something else, but I think the six.string_types method was more elegant.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/378#issuecomment-145861008
https://github.com/qutip/qutip/pull/379#issuecomment-147354304:93,Safety,avoid,avoid,93,I didn't realise that was causing a problem too. Seems like a good idea generally to try and avoid conflicts with built in names where possible.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/379#issuecomment-147354304
https://github.com/qutip/qutip/pull/379#issuecomment-147367783:68,Testability,log,logging,68,"Looks like a reasonable and practical solution to me. Regarding the logging system in qutip, I think that it also would be worth making some changes to how it is used. As it is now, qutip does not really use the Python logging system in the way it is intended. The best way to use it would be to have each submodule that use logging use something like:. ```; import logging; logger = logging.getLogger(__name__); ```. and then log at different levels using the logger instance, for example. ```; logger.debug(""debug msg""); ```. or. ```; logger.warning(""warning msg""); ```. etc. The only utilities that would be required in qutip.logging_utils would then be to optionally create a stream or file handler for the ""qutip"" package or any of its submodules. This would allow selectively tuning logging for different submodules if requried, and there we not be any need for checking if qutip.settings.debug is set or to set logging levels explicitly in any submodules (as currently in done in the steadystate module for example). Not saying that is should be done in this PR, but would probably be worth sorting this out at some point.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/379#issuecomment-147367783
https://github.com/qutip/qutip/pull/379#issuecomment-147367783:219,Testability,log,logging,219,"Looks like a reasonable and practical solution to me. Regarding the logging system in qutip, I think that it also would be worth making some changes to how it is used. As it is now, qutip does not really use the Python logging system in the way it is intended. The best way to use it would be to have each submodule that use logging use something like:. ```; import logging; logger = logging.getLogger(__name__); ```. and then log at different levels using the logger instance, for example. ```; logger.debug(""debug msg""); ```. or. ```; logger.warning(""warning msg""); ```. etc. The only utilities that would be required in qutip.logging_utils would then be to optionally create a stream or file handler for the ""qutip"" package or any of its submodules. This would allow selectively tuning logging for different submodules if requried, and there we not be any need for checking if qutip.settings.debug is set or to set logging levels explicitly in any submodules (as currently in done in the steadystate module for example). Not saying that is should be done in this PR, but would probably be worth sorting this out at some point.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/379#issuecomment-147367783
https://github.com/qutip/qutip/pull/379#issuecomment-147367783:325,Testability,log,logging,325,"Looks like a reasonable and practical solution to me. Regarding the logging system in qutip, I think that it also would be worth making some changes to how it is used. As it is now, qutip does not really use the Python logging system in the way it is intended. The best way to use it would be to have each submodule that use logging use something like:. ```; import logging; logger = logging.getLogger(__name__); ```. and then log at different levels using the logger instance, for example. ```; logger.debug(""debug msg""); ```. or. ```; logger.warning(""warning msg""); ```. etc. The only utilities that would be required in qutip.logging_utils would then be to optionally create a stream or file handler for the ""qutip"" package or any of its submodules. This would allow selectively tuning logging for different submodules if requried, and there we not be any need for checking if qutip.settings.debug is set or to set logging levels explicitly in any submodules (as currently in done in the steadystate module for example). Not saying that is should be done in this PR, but would probably be worth sorting this out at some point.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/379#issuecomment-147367783
https://github.com/qutip/qutip/pull/379#issuecomment-147367783:366,Testability,log,logging,366,"Looks like a reasonable and practical solution to me. Regarding the logging system in qutip, I think that it also would be worth making some changes to how it is used. As it is now, qutip does not really use the Python logging system in the way it is intended. The best way to use it would be to have each submodule that use logging use something like:. ```; import logging; logger = logging.getLogger(__name__); ```. and then log at different levels using the logger instance, for example. ```; logger.debug(""debug msg""); ```. or. ```; logger.warning(""warning msg""); ```. etc. The only utilities that would be required in qutip.logging_utils would then be to optionally create a stream or file handler for the ""qutip"" package or any of its submodules. This would allow selectively tuning logging for different submodules if requried, and there we not be any need for checking if qutip.settings.debug is set or to set logging levels explicitly in any submodules (as currently in done in the steadystate module for example). Not saying that is should be done in this PR, but would probably be worth sorting this out at some point.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/379#issuecomment-147367783
https://github.com/qutip/qutip/pull/379#issuecomment-147367783:375,Testability,log,logger,375,"Looks like a reasonable and practical solution to me. Regarding the logging system in qutip, I think that it also would be worth making some changes to how it is used. As it is now, qutip does not really use the Python logging system in the way it is intended. The best way to use it would be to have each submodule that use logging use something like:. ```; import logging; logger = logging.getLogger(__name__); ```. and then log at different levels using the logger instance, for example. ```; logger.debug(""debug msg""); ```. or. ```; logger.warning(""warning msg""); ```. etc. The only utilities that would be required in qutip.logging_utils would then be to optionally create a stream or file handler for the ""qutip"" package or any of its submodules. This would allow selectively tuning logging for different submodules if requried, and there we not be any need for checking if qutip.settings.debug is set or to set logging levels explicitly in any submodules (as currently in done in the steadystate module for example). Not saying that is should be done in this PR, but would probably be worth sorting this out at some point.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/379#issuecomment-147367783
https://github.com/qutip/qutip/pull/379#issuecomment-147367783:384,Testability,log,logging,384,"Looks like a reasonable and practical solution to me. Regarding the logging system in qutip, I think that it also would be worth making some changes to how it is used. As it is now, qutip does not really use the Python logging system in the way it is intended. The best way to use it would be to have each submodule that use logging use something like:. ```; import logging; logger = logging.getLogger(__name__); ```. and then log at different levels using the logger instance, for example. ```; logger.debug(""debug msg""); ```. or. ```; logger.warning(""warning msg""); ```. etc. The only utilities that would be required in qutip.logging_utils would then be to optionally create a stream or file handler for the ""qutip"" package or any of its submodules. This would allow selectively tuning logging for different submodules if requried, and there we not be any need for checking if qutip.settings.debug is set or to set logging levels explicitly in any submodules (as currently in done in the steadystate module for example). Not saying that is should be done in this PR, but would probably be worth sorting this out at some point.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/379#issuecomment-147367783
https://github.com/qutip/qutip/pull/379#issuecomment-147367783:427,Testability,log,log,427,"Looks like a reasonable and practical solution to me. Regarding the logging system in qutip, I think that it also would be worth making some changes to how it is used. As it is now, qutip does not really use the Python logging system in the way it is intended. The best way to use it would be to have each submodule that use logging use something like:. ```; import logging; logger = logging.getLogger(__name__); ```. and then log at different levels using the logger instance, for example. ```; logger.debug(""debug msg""); ```. or. ```; logger.warning(""warning msg""); ```. etc. The only utilities that would be required in qutip.logging_utils would then be to optionally create a stream or file handler for the ""qutip"" package or any of its submodules. This would allow selectively tuning logging for different submodules if requried, and there we not be any need for checking if qutip.settings.debug is set or to set logging levels explicitly in any submodules (as currently in done in the steadystate module for example). Not saying that is should be done in this PR, but would probably be worth sorting this out at some point.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/379#issuecomment-147367783
https://github.com/qutip/qutip/pull/379#issuecomment-147367783:461,Testability,log,logger,461,"Looks like a reasonable and practical solution to me. Regarding the logging system in qutip, I think that it also would be worth making some changes to how it is used. As it is now, qutip does not really use the Python logging system in the way it is intended. The best way to use it would be to have each submodule that use logging use something like:. ```; import logging; logger = logging.getLogger(__name__); ```. and then log at different levels using the logger instance, for example. ```; logger.debug(""debug msg""); ```. or. ```; logger.warning(""warning msg""); ```. etc. The only utilities that would be required in qutip.logging_utils would then be to optionally create a stream or file handler for the ""qutip"" package or any of its submodules. This would allow selectively tuning logging for different submodules if requried, and there we not be any need for checking if qutip.settings.debug is set or to set logging levels explicitly in any submodules (as currently in done in the steadystate module for example). Not saying that is should be done in this PR, but would probably be worth sorting this out at some point.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/379#issuecomment-147367783
https://github.com/qutip/qutip/pull/379#issuecomment-147367783:496,Testability,log,logger,496,"Looks like a reasonable and practical solution to me. Regarding the logging system in qutip, I think that it also would be worth making some changes to how it is used. As it is now, qutip does not really use the Python logging system in the way it is intended. The best way to use it would be to have each submodule that use logging use something like:. ```; import logging; logger = logging.getLogger(__name__); ```. and then log at different levels using the logger instance, for example. ```; logger.debug(""debug msg""); ```. or. ```; logger.warning(""warning msg""); ```. etc. The only utilities that would be required in qutip.logging_utils would then be to optionally create a stream or file handler for the ""qutip"" package or any of its submodules. This would allow selectively tuning logging for different submodules if requried, and there we not be any need for checking if qutip.settings.debug is set or to set logging levels explicitly in any submodules (as currently in done in the steadystate module for example). Not saying that is should be done in this PR, but would probably be worth sorting this out at some point.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/379#issuecomment-147367783
https://github.com/qutip/qutip/pull/379#issuecomment-147367783:537,Testability,log,logger,537,"Looks like a reasonable and practical solution to me. Regarding the logging system in qutip, I think that it also would be worth making some changes to how it is used. As it is now, qutip does not really use the Python logging system in the way it is intended. The best way to use it would be to have each submodule that use logging use something like:. ```; import logging; logger = logging.getLogger(__name__); ```. and then log at different levels using the logger instance, for example. ```; logger.debug(""debug msg""); ```. or. ```; logger.warning(""warning msg""); ```. etc. The only utilities that would be required in qutip.logging_utils would then be to optionally create a stream or file handler for the ""qutip"" package or any of its submodules. This would allow selectively tuning logging for different submodules if requried, and there we not be any need for checking if qutip.settings.debug is set or to set logging levels explicitly in any submodules (as currently in done in the steadystate module for example). Not saying that is should be done in this PR, but would probably be worth sorting this out at some point.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/379#issuecomment-147367783
https://github.com/qutip/qutip/pull/379#issuecomment-147367783:789,Testability,log,logging,789,"Looks like a reasonable and practical solution to me. Regarding the logging system in qutip, I think that it also would be worth making some changes to how it is used. As it is now, qutip does not really use the Python logging system in the way it is intended. The best way to use it would be to have each submodule that use logging use something like:. ```; import logging; logger = logging.getLogger(__name__); ```. and then log at different levels using the logger instance, for example. ```; logger.debug(""debug msg""); ```. or. ```; logger.warning(""warning msg""); ```. etc. The only utilities that would be required in qutip.logging_utils would then be to optionally create a stream or file handler for the ""qutip"" package or any of its submodules. This would allow selectively tuning logging for different submodules if requried, and there we not be any need for checking if qutip.settings.debug is set or to set logging levels explicitly in any submodules (as currently in done in the steadystate module for example). Not saying that is should be done in this PR, but would probably be worth sorting this out at some point.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/379#issuecomment-147367783
https://github.com/qutip/qutip/pull/379#issuecomment-147367783:918,Testability,log,logging,918,"Looks like a reasonable and practical solution to me. Regarding the logging system in qutip, I think that it also would be worth making some changes to how it is used. As it is now, qutip does not really use the Python logging system in the way it is intended. The best way to use it would be to have each submodule that use logging use something like:. ```; import logging; logger = logging.getLogger(__name__); ```. and then log at different levels using the logger instance, for example. ```; logger.debug(""debug msg""); ```. or. ```; logger.warning(""warning msg""); ```. etc. The only utilities that would be required in qutip.logging_utils would then be to optionally create a stream or file handler for the ""qutip"" package or any of its submodules. This would allow selectively tuning logging for different submodules if requried, and there we not be any need for checking if qutip.settings.debug is set or to set logging levels explicitly in any submodules (as currently in done in the steadystate module for example). Not saying that is should be done in this PR, but would probably be worth sorting this out at some point.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/379#issuecomment-147367783
https://github.com/qutip/qutip/pull/379#issuecomment-147449765:68,Availability,error,errors,68,"I really can't see how the changes here could be causing the Travis errors. ; I restarted once, but got the same errors in all three tests; Any ideas?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/379#issuecomment-147449765
https://github.com/qutip/qutip/pull/379#issuecomment-147449765:113,Availability,error,errors,113,"I really can't see how the changes here could be causing the Travis errors. ; I restarted once, but got the same errors in all three tests; Any ideas?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/379#issuecomment-147449765
https://github.com/qutip/qutip/pull/379#issuecomment-147449765:133,Testability,test,tests,133,"I really can't see how the changes here could be causing the Travis errors. ; I restarted once, but got the same errors in all three tests; Any ideas?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/379#issuecomment-147449765
https://github.com/qutip/qutip/pull/379#issuecomment-147493646:16,Availability,failure,failures,16,"I looked at the failures and they seem to be in parts that are completely disconnected from logging. I have no idea why they aren't also in the main branch, but I'll investigate. Anyway, I agree with you, @jrjohansson, that the current implementation is not in keeping with the design of Python's logging package. At the time, it was a bit of a hack to try and make it fit as well as possible, but I think in retrospect that may have been misguided. Do you think the refactoring to more appropriately use Python logging would be a good 3.2.0 feature, or would you suggest that for ≥ 3.3? Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/379#issuecomment-147493646
https://github.com/qutip/qutip/pull/379#issuecomment-147493646:467,Modifiability,refactor,refactoring,467,"I looked at the failures and they seem to be in parts that are completely disconnected from logging. I have no idea why they aren't also in the main branch, but I'll investigate. Anyway, I agree with you, @jrjohansson, that the current implementation is not in keeping with the design of Python's logging package. At the time, it was a bit of a hack to try and make it fit as well as possible, but I think in retrospect that may have been misguided. Do you think the refactoring to more appropriately use Python logging would be a good 3.2.0 feature, or would you suggest that for ≥ 3.3? Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/379#issuecomment-147493646
https://github.com/qutip/qutip/pull/379#issuecomment-147493646:92,Testability,log,logging,92,"I looked at the failures and they seem to be in parts that are completely disconnected from logging. I have no idea why they aren't also in the main branch, but I'll investigate. Anyway, I agree with you, @jrjohansson, that the current implementation is not in keeping with the design of Python's logging package. At the time, it was a bit of a hack to try and make it fit as well as possible, but I think in retrospect that may have been misguided. Do you think the refactoring to more appropriately use Python logging would be a good 3.2.0 feature, or would you suggest that for ≥ 3.3? Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/379#issuecomment-147493646
https://github.com/qutip/qutip/pull/379#issuecomment-147493646:297,Testability,log,logging,297,"I looked at the failures and they seem to be in parts that are completely disconnected from logging. I have no idea why they aren't also in the main branch, but I'll investigate. Anyway, I agree with you, @jrjohansson, that the current implementation is not in keeping with the design of Python's logging package. At the time, it was a bit of a hack to try and make it fit as well as possible, but I think in retrospect that may have been misguided. Do you think the refactoring to more appropriately use Python logging would be a good 3.2.0 feature, or would you suggest that for ≥ 3.3? Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/379#issuecomment-147493646
https://github.com/qutip/qutip/pull/379#issuecomment-147493646:512,Testability,log,logging,512,"I looked at the failures and they seem to be in parts that are completely disconnected from logging. I have no idea why they aren't also in the main branch, but I'll investigate. Anyway, I agree with you, @jrjohansson, that the current implementation is not in keeping with the design of Python's logging package. At the time, it was a bit of a hack to try and make it fit as well as possible, but I think in retrospect that may have been misguided. Do you think the refactoring to more appropriately use Python logging would be a good 3.2.0 feature, or would you suggest that for ≥ 3.3? Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/379#issuecomment-147493646
https://github.com/qutip/qutip/pull/379#issuecomment-148046579:41,Availability,error,error,41,I notice that I am also getting the same error on the travis build in the latest branch on my fork. An error that I do not get on my local machine. I will try a fresh conda env later and see if I can reproduce it.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/379#issuecomment-148046579
https://github.com/qutip/qutip/pull/379#issuecomment-148046579:103,Availability,error,error,103,I notice that I am also getting the same error on the travis build in the latest branch on my fork. An error that I do not get on my local machine. I will try a fresh conda env later and see if I can reproduce it.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/379#issuecomment-148046579
https://github.com/qutip/qutip/pull/379#issuecomment-148136161:11,Availability,error,error,11,"The Travis error occurred because the latest numpy v1.10 did not allow some implicit cast from object to complex. I have fixed this in #380 ; @cgranade I guess we can merge that, then you can rebase from master (or similar process)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/379#issuecomment-148136161
https://github.com/qutip/qutip/pull/379#issuecomment-148349639:93,Availability,down,downloads,93,"The Travis build seems to create a new conda env each time it runs the test. Consequently it downloads and installs the latest [conda] numpy, scipy etc. I tried creating a fresh conda env yesterday and found that the numpy version was higher than my qutip dev env, which I created a few months ago.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/379#issuecomment-148349639
https://github.com/qutip/qutip/pull/379#issuecomment-148349639:107,Deployability,install,installs,107,"The Travis build seems to create a new conda env each time it runs the test. Consequently it downloads and installs the latest [conda] numpy, scipy etc. I tried creating a fresh conda env yesterday and found that the numpy version was higher than my qutip dev env, which I created a few months ago.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/379#issuecomment-148349639
https://github.com/qutip/qutip/pull/379#issuecomment-148349639:71,Testability,test,test,71,"The Travis build seems to create a new conda env each time it runs the test. Consequently it downloads and installs the latest [conda] numpy, scipy etc. I tried creating a fresh conda env yesterday and found that the numpy version was higher than my qutip dev env, which I created a few months ago.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/379#issuecomment-148349639
https://github.com/qutip/qutip/issues/382#issuecomment-148179436:83,Availability,avail,available,83,"The canopy needs to be updated as it points toward an old os 10.6 whose SDK is not available on your newer osx. . Paul. > On Oct 14, 2015, at 13:49, rjmagyar notifications@github.com wrote:; > ; > I just built and installed Qutip on the command line using Enthought python. No errors...; > ; > Then when I run I get:; > ; > Enthought Canopy Python 2.7.9 | 64-bit | (default, May 20 2015, 20:01:56) ; > [GCC 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2335.6)] on darwin; > Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; > ; > from qutip import *; > Compiling with an SDK that doesn't seem to exist: /Developer/SDKs/MacOSX10.6.sdk; > Please check your Xcode installation; > In file included from /usr/local/lib/gcc/x86_64-apple-darwin14.4.0/5.1.0/include-fixed/syslimits.h:7:0,; > from /usr/local/lib/gcc/x86_64-apple-darwin14.4.0/5.1.0/include-fixed/limits.h:34,; > from /Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/include/python2.7/Python.h:19,; > from /Users/rjmagya/.pyxbld/temp.macosx-10.6-x86_64-2.7/pyrex/qutip/cy/spmatfuncs.c:16:; > /usr/local/lib/gcc/x86_64-apple-darwin14.4.0/5.1.0/include-fixed/limits.h:168:61: error: no include path in which to search for limits.h; > In file included from /Users/rjmagya/.pyxbld/temp.macosx-10.6-x86_64-2.7/pyrex/qutip/cy/spmatfuncs.c:16:0:; > /Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/include/python2.7/Python.h:33:19: fatal error: stdio.h: No such file or directory; > compilation terminated.; > Traceback (most recent call last):; > File """", line 1, in ; > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/init.py"", line 213, in ; > from qutip.qobj import *; > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/qobj.py"", line 60, in ; > from qutip.ptrace import ptrace; > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packa",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/382#issuecomment-148179436
https://github.com/qutip/qutip/issues/382#issuecomment-148179436:277,Availability,error,errors,277,"The canopy needs to be updated as it points toward an old os 10.6 whose SDK is not available on your newer osx. . Paul. > On Oct 14, 2015, at 13:49, rjmagyar notifications@github.com wrote:; > ; > I just built and installed Qutip on the command line using Enthought python. No errors...; > ; > Then when I run I get:; > ; > Enthought Canopy Python 2.7.9 | 64-bit | (default, May 20 2015, 20:01:56) ; > [GCC 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2335.6)] on darwin; > Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; > ; > from qutip import *; > Compiling with an SDK that doesn't seem to exist: /Developer/SDKs/MacOSX10.6.sdk; > Please check your Xcode installation; > In file included from /usr/local/lib/gcc/x86_64-apple-darwin14.4.0/5.1.0/include-fixed/syslimits.h:7:0,; > from /usr/local/lib/gcc/x86_64-apple-darwin14.4.0/5.1.0/include-fixed/limits.h:34,; > from /Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/include/python2.7/Python.h:19,; > from /Users/rjmagya/.pyxbld/temp.macosx-10.6-x86_64-2.7/pyrex/qutip/cy/spmatfuncs.c:16:; > /usr/local/lib/gcc/x86_64-apple-darwin14.4.0/5.1.0/include-fixed/limits.h:168:61: error: no include path in which to search for limits.h; > In file included from /Users/rjmagya/.pyxbld/temp.macosx-10.6-x86_64-2.7/pyrex/qutip/cy/spmatfuncs.c:16:0:; > /Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/include/python2.7/Python.h:33:19: fatal error: stdio.h: No such file or directory; > compilation terminated.; > Traceback (most recent call last):; > File """", line 1, in ; > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/init.py"", line 213, in ; > from qutip.qobj import *; > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/qobj.py"", line 60, in ; > from qutip.ptrace import ptrace; > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packa",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/382#issuecomment-148179436
https://github.com/qutip/qutip/issues/382#issuecomment-148179436:1195,Availability,error,error,1195,"stalled Qutip on the command line using Enthought python. No errors...; > ; > Then when I run I get:; > ; > Enthought Canopy Python 2.7.9 | 64-bit | (default, May 20 2015, 20:01:56) ; > [GCC 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2335.6)] on darwin; > Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; > ; > from qutip import *; > Compiling with an SDK that doesn't seem to exist: /Developer/SDKs/MacOSX10.6.sdk; > Please check your Xcode installation; > In file included from /usr/local/lib/gcc/x86_64-apple-darwin14.4.0/5.1.0/include-fixed/syslimits.h:7:0,; > from /usr/local/lib/gcc/x86_64-apple-darwin14.4.0/5.1.0/include-fixed/limits.h:34,; > from /Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/include/python2.7/Python.h:19,; > from /Users/rjmagya/.pyxbld/temp.macosx-10.6-x86_64-2.7/pyrex/qutip/cy/spmatfuncs.c:16:; > /usr/local/lib/gcc/x86_64-apple-darwin14.4.0/5.1.0/include-fixed/limits.h:168:61: error: no include path in which to search for limits.h; > In file included from /Users/rjmagya/.pyxbld/temp.macosx-10.6-x86_64-2.7/pyrex/qutip/cy/spmatfuncs.c:16:0:; > /Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/include/python2.7/Python.h:33:19: fatal error: stdio.h: No such file or directory; > compilation terminated.; > Traceback (most recent call last):; > File """", line 1, in ; > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/init.py"", line 213, in ; > from qutip.qobj import *; > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/qobj.py"", line 60, in ; > from qutip.ptrace import ptrace; > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/ptrace.py"", line 38, in ; > from qutip.sparse import sp_reshape; > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/sparse.py"", line 49, in ; > from qutip.cy.sparse",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/382#issuecomment-148179436
https://github.com/qutip/qutip/issues/382#issuecomment-148179436:1488,Availability,error,error,1488,"elp"", ""copyright"", ""credits"" or ""license"" for more information.; > ; > from qutip import *; > Compiling with an SDK that doesn't seem to exist: /Developer/SDKs/MacOSX10.6.sdk; > Please check your Xcode installation; > In file included from /usr/local/lib/gcc/x86_64-apple-darwin14.4.0/5.1.0/include-fixed/syslimits.h:7:0,; > from /usr/local/lib/gcc/x86_64-apple-darwin14.4.0/5.1.0/include-fixed/limits.h:34,; > from /Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/include/python2.7/Python.h:19,; > from /Users/rjmagya/.pyxbld/temp.macosx-10.6-x86_64-2.7/pyrex/qutip/cy/spmatfuncs.c:16:; > /usr/local/lib/gcc/x86_64-apple-darwin14.4.0/5.1.0/include-fixed/limits.h:168:61: error: no include path in which to search for limits.h; > In file included from /Users/rjmagya/.pyxbld/temp.macosx-10.6-x86_64-2.7/pyrex/qutip/cy/spmatfuncs.c:16:0:; > /Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/include/python2.7/Python.h:33:19: fatal error: stdio.h: No such file or directory; > compilation terminated.; > Traceback (most recent call last):; > File """", line 1, in ; > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/init.py"", line 213, in ; > from qutip.qobj import *; > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/qobj.py"", line 60, in ; > from qutip.ptrace import ptrace; > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/ptrace.py"", line 38, in ; > from qutip.sparse import sp_reshape; > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/sparse.py"", line 49, in ; > from qutip.cy.sparse_utils import (sparse_profile, _sparse_permute,; > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/cy/__init.py"", line 1, in ; > from qutip.cy.spmatfuncs import *; > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/382#issuecomment-148179436
https://github.com/qutip/qutip/issues/382#issuecomment-148179436:5133,Availability,error,error,5133,"ata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/dist.py"", line 972, in run_command; > cmd_obj.run(); > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/Cython/Distutils/build_ext.py"", line 163, in run; > _build_ext.build_ext.run(self); > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/command/build_ext.py"", line 337, in run; > self.build_extensions(); > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/Cython/Distutils/build_ext.py"", line 171, in build_extensions; > self.build_extension(ext); > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/command/build_ext.py"", line 496, in build_extension; > depends=ext.depends); > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/ccompiler.py"", line 574, in compile; > self._compile(obj, src, ext, cc_args, extra_postargs, pp_opts); > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/unixccompiler.py"", line 122, in _compile; > raise CompileError, msg; > ImportError: Building module qutip.cy.spmatfuncs failed: [""CompileError: command 'gcc' failed with exit status 1\n""]; > import numpy as np; > ; > from qutip import *; > Traceback (most recent call last):; > File """", line 1, in ; > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/init.py"", line 62, in ; > qutip.settings.ipython = False; > AttributeError: 'module' object has no attribute 'settings'; > ; > ######################; > ; > This seems similar to the build error in Installation on OS X with Homebrew script error #348.; > ; > Is this a bug in qutip ? Is there a way to fix this?; > ; > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/382#issuecomment-148179436
https://github.com/qutip/qutip/issues/382#issuecomment-148179436:5184,Availability,error,error,5184,"ata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/dist.py"", line 972, in run_command; > cmd_obj.run(); > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/Cython/Distutils/build_ext.py"", line 163, in run; > _build_ext.build_ext.run(self); > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/command/build_ext.py"", line 337, in run; > self.build_extensions(); > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/Cython/Distutils/build_ext.py"", line 171, in build_extensions; > self.build_extension(ext); > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/command/build_ext.py"", line 496, in build_extension; > depends=ext.depends); > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/ccompiler.py"", line 574, in compile; > self._compile(obj, src, ext, cc_args, extra_postargs, pp_opts); > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/unixccompiler.py"", line 122, in _compile; > raise CompileError, msg; > ImportError: Building module qutip.cy.spmatfuncs failed: [""CompileError: command 'gcc' failed with exit status 1\n""]; > import numpy as np; > ; > from qutip import *; > Traceback (most recent call last):; > File """", line 1, in ; > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/init.py"", line 62, in ; > qutip.settings.ipython = False; > AttributeError: 'module' object has no attribute 'settings'; > ; > ######################; > ; > This seems similar to the build error in Installation on OS X with Homebrew script error #348.; > ; > Is this a bug in qutip ? Is there a way to fix this?; > ; > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/382#issuecomment-148179436
https://github.com/qutip/qutip/issues/382#issuecomment-148179436:23,Deployability,update,updated,23,"The canopy needs to be updated as it points toward an old os 10.6 whose SDK is not available on your newer osx. . Paul. > On Oct 14, 2015, at 13:49, rjmagyar notifications@github.com wrote:; > ; > I just built and installed Qutip on the command line using Enthought python. No errors...; > ; > Then when I run I get:; > ; > Enthought Canopy Python 2.7.9 | 64-bit | (default, May 20 2015, 20:01:56) ; > [GCC 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2335.6)] on darwin; > Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; > ; > from qutip import *; > Compiling with an SDK that doesn't seem to exist: /Developer/SDKs/MacOSX10.6.sdk; > Please check your Xcode installation; > In file included from /usr/local/lib/gcc/x86_64-apple-darwin14.4.0/5.1.0/include-fixed/syslimits.h:7:0,; > from /usr/local/lib/gcc/x86_64-apple-darwin14.4.0/5.1.0/include-fixed/limits.h:34,; > from /Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/include/python2.7/Python.h:19,; > from /Users/rjmagya/.pyxbld/temp.macosx-10.6-x86_64-2.7/pyrex/qutip/cy/spmatfuncs.c:16:; > /usr/local/lib/gcc/x86_64-apple-darwin14.4.0/5.1.0/include-fixed/limits.h:168:61: error: no include path in which to search for limits.h; > In file included from /Users/rjmagya/.pyxbld/temp.macosx-10.6-x86_64-2.7/pyrex/qutip/cy/spmatfuncs.c:16:0:; > /Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/include/python2.7/Python.h:33:19: fatal error: stdio.h: No such file or directory; > compilation terminated.; > Traceback (most recent call last):; > File """", line 1, in ; > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/init.py"", line 213, in ; > from qutip.qobj import *; > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/qobj.py"", line 60, in ; > from qutip.ptrace import ptrace; > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packa",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/382#issuecomment-148179436
https://github.com/qutip/qutip/issues/382#issuecomment-148179436:214,Deployability,install,installed,214,"The canopy needs to be updated as it points toward an old os 10.6 whose SDK is not available on your newer osx. . Paul. > On Oct 14, 2015, at 13:49, rjmagyar notifications@github.com wrote:; > ; > I just built and installed Qutip on the command line using Enthought python. No errors...; > ; > Then when I run I get:; > ; > Enthought Canopy Python 2.7.9 | 64-bit | (default, May 20 2015, 20:01:56) ; > [GCC 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2335.6)] on darwin; > Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; > ; > from qutip import *; > Compiling with an SDK that doesn't seem to exist: /Developer/SDKs/MacOSX10.6.sdk; > Please check your Xcode installation; > In file included from /usr/local/lib/gcc/x86_64-apple-darwin14.4.0/5.1.0/include-fixed/syslimits.h:7:0,; > from /usr/local/lib/gcc/x86_64-apple-darwin14.4.0/5.1.0/include-fixed/limits.h:34,; > from /Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/include/python2.7/Python.h:19,; > from /Users/rjmagya/.pyxbld/temp.macosx-10.6-x86_64-2.7/pyrex/qutip/cy/spmatfuncs.c:16:; > /usr/local/lib/gcc/x86_64-apple-darwin14.4.0/5.1.0/include-fixed/limits.h:168:61: error: no include path in which to search for limits.h; > In file included from /Users/rjmagya/.pyxbld/temp.macosx-10.6-x86_64-2.7/pyrex/qutip/cy/spmatfuncs.c:16:0:; > /Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/include/python2.7/Python.h:33:19: fatal error: stdio.h: No such file or directory; > compilation terminated.; > Traceback (most recent call last):; > File """", line 1, in ; > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/init.py"", line 213, in ; > from qutip.qobj import *; > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/qobj.py"", line 60, in ; > from qutip.ptrace import ptrace; > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packa",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/382#issuecomment-148179436
https://github.com/qutip/qutip/issues/382#issuecomment-148179436:689,Deployability,install,installation,689,"The canopy needs to be updated as it points toward an old os 10.6 whose SDK is not available on your newer osx. . Paul. > On Oct 14, 2015, at 13:49, rjmagyar notifications@github.com wrote:; > ; > I just built and installed Qutip on the command line using Enthought python. No errors...; > ; > Then when I run I get:; > ; > Enthought Canopy Python 2.7.9 | 64-bit | (default, May 20 2015, 20:01:56) ; > [GCC 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2335.6)] on darwin; > Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; > ; > from qutip import *; > Compiling with an SDK that doesn't seem to exist: /Developer/SDKs/MacOSX10.6.sdk; > Please check your Xcode installation; > In file included from /usr/local/lib/gcc/x86_64-apple-darwin14.4.0/5.1.0/include-fixed/syslimits.h:7:0,; > from /usr/local/lib/gcc/x86_64-apple-darwin14.4.0/5.1.0/include-fixed/limits.h:34,; > from /Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/include/python2.7/Python.h:19,; > from /Users/rjmagya/.pyxbld/temp.macosx-10.6-x86_64-2.7/pyrex/qutip/cy/spmatfuncs.c:16:; > /usr/local/lib/gcc/x86_64-apple-darwin14.4.0/5.1.0/include-fixed/limits.h:168:61: error: no include path in which to search for limits.h; > In file included from /Users/rjmagya/.pyxbld/temp.macosx-10.6-x86_64-2.7/pyrex/qutip/cy/spmatfuncs.c:16:0:; > /Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/include/python2.7/Python.h:33:19: fatal error: stdio.h: No such file or directory; > compilation terminated.; > Traceback (most recent call last):; > File """", line 1, in ; > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/init.py"", line 213, in ; > from qutip.qobj import *; > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/qobj.py"", line 60, in ; > from qutip.ptrace import ptrace; > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packa",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/382#issuecomment-148179436
https://github.com/qutip/qutip/issues/382#issuecomment-148179436:5142,Deployability,Install,Installation,5142,"ata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/dist.py"", line 972, in run_command; > cmd_obj.run(); > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/Cython/Distutils/build_ext.py"", line 163, in run; > _build_ext.build_ext.run(self); > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/command/build_ext.py"", line 337, in run; > self.build_extensions(); > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/Cython/Distutils/build_ext.py"", line 171, in build_extensions; > self.build_extension(ext); > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/command/build_ext.py"", line 496, in build_extension; > depends=ext.depends); > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/ccompiler.py"", line 574, in compile; > self._compile(obj, src, ext, cc_args, extra_postargs, pp_opts); > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/unixccompiler.py"", line 122, in _compile; > raise CompileError, msg; > ImportError: Building module qutip.cy.spmatfuncs failed: [""CompileError: command 'gcc' failed with exit status 1\n""]; > import numpy as np; > ; > from qutip import *; > Traceback (most recent call last):; > File """", line 1, in ; > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/init.py"", line 62, in ; > qutip.settings.ipython = False; > AttributeError: 'module' object has no attribute 'settings'; > ; > ######################; > ; > This seems similar to the build error in Installation on OS X with Homebrew script error #348.; > ; > Is this a bug in qutip ? Is there a way to fix this?; > ; > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/382#issuecomment-148179436
https://github.com/qutip/qutip/issues/382#issuecomment-148179436:4192,Integrability,depend,depends,4192,"nopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/dist.py"", line 953, in run_commands; > self.run_command(cmd); > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/dist.py"", line 972, in run_command; > cmd_obj.run(); > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/Cython/Distutils/build_ext.py"", line 163, in run; > _build_ext.build_ext.run(self); > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/command/build_ext.py"", line 337, in run; > self.build_extensions(); > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/Cython/Distutils/build_ext.py"", line 171, in build_extensions; > self.build_extension(ext); > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/command/build_ext.py"", line 496, in build_extension; > depends=ext.depends); > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/ccompiler.py"", line 574, in compile; > self._compile(obj, src, ext, cc_args, extra_postargs, pp_opts); > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/unixccompiler.py"", line 122, in _compile; > raise CompileError, msg; > ImportError: Building module qutip.cy.spmatfuncs failed: [""CompileError: command 'gcc' failed with exit status 1\n""]; > import numpy as np; > ; > from qutip import *; > Traceback (most recent call last):; > File """", line 1, in ; > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/init.py"", line 62, in ; > qutip.settings.ipython = False; > AttributeError: 'module' object has no attribute 'settings'; > ; > ######################; > ; > This seems similar to the build error in Installation on OS X with Homebrew scr",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/382#issuecomment-148179436
https://github.com/qutip/qutip/issues/382#issuecomment-148179436:4204,Integrability,depend,depends,4204,"tents/lib/python2.7/distutils/dist.py"", line 953, in run_commands; > self.run_command(cmd); > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/dist.py"", line 972, in run_command; > cmd_obj.run(); > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/Cython/Distutils/build_ext.py"", line 163, in run; > _build_ext.build_ext.run(self); > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/command/build_ext.py"", line 337, in run; > self.build_extensions(); > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/Cython/Distutils/build_ext.py"", line 171, in build_extensions; > self.build_extension(ext); > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/command/build_ext.py"", line 496, in build_extension; > depends=ext.depends); > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/ccompiler.py"", line 574, in compile; > self._compile(obj, src, ext, cc_args, extra_postargs, pp_opts); > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/unixccompiler.py"", line 122, in _compile; > raise CompileError, msg; > ImportError: Building module qutip.cy.spmatfuncs failed: [""CompileError: command 'gcc' failed with exit status 1\n""]; > import numpy as np; > ; > from qutip import *; > Traceback (most recent call last):; > File """", line 1, in ; > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/init.py"", line 62, in ; > qutip.settings.ipython = False; > AttributeError: 'module' object has no attribute 'settings'; > ; > ######################; > ; > This seems similar to the build error in Installation on OS X with Homebrew script error #348.; > ; > Is this a bug in quti",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/382#issuecomment-148179436
https://github.com/qutip/qutip/issues/382#issuecomment-148549546:279,Deployability,update,updates,279,"I'm not a Mac user, no. I run a Linux desktop and a Windows 10 laptop. That said, helping colleagues deal with OS X / Enthought Canopy compatibility issues is a big part of the reason that I started using Anaconda instead. They seem to do a much better job at dealing with Xcode updates erasing old SDKs.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/382#issuecomment-148549546
https://github.com/qutip/qutip/issues/382#issuecomment-263751111:114,Deployability,install,installed,114,"An alternative solution if one does not wish to use Anaconda can be to change the Python version in use to a user installed one instead of the default version supplied by macOS. I have discussed it in #348 . It is perhaps because the default Python version does not detect the local python packages (numpy/scipy). After this fix, I was able to do a `sudo -H python setup.py install` and everything worked fine for me.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/382#issuecomment-263751111
https://github.com/qutip/qutip/issues/382#issuecomment-263751111:374,Deployability,install,install,374,"An alternative solution if one does not wish to use Anaconda can be to change the Python version in use to a user installed one instead of the default version supplied by macOS. I have discussed it in #348 . It is perhaps because the default Python version does not detect the local python packages (numpy/scipy). After this fix, I was able to do a `sudo -H python setup.py install` and everything worked fine for me.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/382#issuecomment-263751111
https://github.com/qutip/qutip/issues/382#issuecomment-263751111:266,Safety,detect,detect,266,"An alternative solution if one does not wish to use Anaconda can be to change the Python version in use to a user installed one instead of the default version supplied by macOS. I have discussed it in #348 . It is perhaps because the default Python version does not detect the local python packages (numpy/scipy). After this fix, I was able to do a `sudo -H python setup.py install` and everything worked fine for me.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/382#issuecomment-263751111
https://github.com/qutip/qutip/issues/384#issuecomment-150751174:4068,Deployability,integrat,integrator,4068,"ator representation. Perhaps @cgranade knows?; > ; > import scipy; > ; > from qutip.mesolve import _generic_ode_solve; > from qutip.superoperator import liouvillian, mat2vec; > from qutip.settings import debug; > ; > if debug:; > import inspect; > ; > def _mesolve_const_super(H, E0, tlist, c_op_list, e_ops, args, opt,; > progress_bar):; > """"""; > Evolve the super-operator `E0` using an ODE solver, for constant ; > Liouvillian; > """"""; > ; > ```; > if debug:; > print(inspect.stack()[0][3]); > ; > """"""; > #; > # check initial state; > #; > if isket(rho0):; > # if initial state is a ket and no collapse operator where given,; > # fall back on the unitary schrodinger equation solver; > if len(c_op_list) == 0 and isoper(H):; > return _sesolve_const(H, rho0, tlist, e_ops, args, opt,; > progress_bar); > ; > # Got a wave function as initial state: convert to density matrix.; > rho0 = ket2dm(rho0); > """"""; > ; > #; > # check initial value; > #; > if not E0.issuper:; > raise TypeError(""Argument 'E0' should be a super-operator""); > ; > #; > # construct liouvillian; > #; > if opt.tidy:; > H = H.tidyup(opt.atol); > ; > L = liouvillian(H, c_op_list); > ; > #; > # setup integrator; > #; > initial_vector = mat2vec(E0.full()).ravel(); > # r = scipy.integrate.ode(cy_ode_rhs); > r = scipy.integrate.ode(_rhs); > # r.set_f_params(L.data.data, L.data.indices, L.data.indptr); > # not sure why I need to transpose L here:; > r.set_f_params(scipy.transpose(L.data)); > r.set_integrator('zvode', method=opt.method, order=opt.order,; > atol=opt.atol, rtol=opt.rtol, nsteps=opt.nsteps,; > first_step=opt.first_step, min_step=opt.min_step,; > max_step=opt.max_step); > r.set_initial_value(initial_vector, tlist[0]); > ; > #; > # call generic ODE code; > #; > return _generic_ode_solve(r, E0, tlist, e_ops, opt, progress_bar); > ```; > ; > def _rhs(t,y,data):; > ym = y.reshape(data.shape); > return (data*ym).flatten(); > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/384#issuecomment-150751174
https://github.com/qutip/qutip/issues/384#issuecomment-150751174:4146,Deployability,integrat,integrate,4146,"ator representation. Perhaps @cgranade knows?; > ; > import scipy; > ; > from qutip.mesolve import _generic_ode_solve; > from qutip.superoperator import liouvillian, mat2vec; > from qutip.settings import debug; > ; > if debug:; > import inspect; > ; > def _mesolve_const_super(H, E0, tlist, c_op_list, e_ops, args, opt,; > progress_bar):; > """"""; > Evolve the super-operator `E0` using an ODE solver, for constant ; > Liouvillian; > """"""; > ; > ```; > if debug:; > print(inspect.stack()[0][3]); > ; > """"""; > #; > # check initial state; > #; > if isket(rho0):; > # if initial state is a ket and no collapse operator where given,; > # fall back on the unitary schrodinger equation solver; > if len(c_op_list) == 0 and isoper(H):; > return _sesolve_const(H, rho0, tlist, e_ops, args, opt,; > progress_bar); > ; > # Got a wave function as initial state: convert to density matrix.; > rho0 = ket2dm(rho0); > """"""; > ; > #; > # check initial value; > #; > if not E0.issuper:; > raise TypeError(""Argument 'E0' should be a super-operator""); > ; > #; > # construct liouvillian; > #; > if opt.tidy:; > H = H.tidyup(opt.atol); > ; > L = liouvillian(H, c_op_list); > ; > #; > # setup integrator; > #; > initial_vector = mat2vec(E0.full()).ravel(); > # r = scipy.integrate.ode(cy_ode_rhs); > r = scipy.integrate.ode(_rhs); > # r.set_f_params(L.data.data, L.data.indices, L.data.indptr); > # not sure why I need to transpose L here:; > r.set_f_params(scipy.transpose(L.data)); > r.set_integrator('zvode', method=opt.method, order=opt.order,; > atol=opt.atol, rtol=opt.rtol, nsteps=opt.nsteps,; > first_step=opt.first_step, min_step=opt.min_step,; > max_step=opt.max_step); > r.set_initial_value(initial_vector, tlist[0]); > ; > #; > # call generic ODE code; > #; > return _generic_ode_solve(r, E0, tlist, e_ops, opt, progress_bar); > ```; > ; > def _rhs(t,y,data):; > ym = y.reshape(data.shape); > return (data*ym).flatten(); > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/384#issuecomment-150751174
https://github.com/qutip/qutip/issues/384#issuecomment-150751174:4185,Deployability,integrat,integrate,4185,"ator representation. Perhaps @cgranade knows?; > ; > import scipy; > ; > from qutip.mesolve import _generic_ode_solve; > from qutip.superoperator import liouvillian, mat2vec; > from qutip.settings import debug; > ; > if debug:; > import inspect; > ; > def _mesolve_const_super(H, E0, tlist, c_op_list, e_ops, args, opt,; > progress_bar):; > """"""; > Evolve the super-operator `E0` using an ODE solver, for constant ; > Liouvillian; > """"""; > ; > ```; > if debug:; > print(inspect.stack()[0][3]); > ; > """"""; > #; > # check initial state; > #; > if isket(rho0):; > # if initial state is a ket and no collapse operator where given,; > # fall back on the unitary schrodinger equation solver; > if len(c_op_list) == 0 and isoper(H):; > return _sesolve_const(H, rho0, tlist, e_ops, args, opt,; > progress_bar); > ; > # Got a wave function as initial state: convert to density matrix.; > rho0 = ket2dm(rho0); > """"""; > ; > #; > # check initial value; > #; > if not E0.issuper:; > raise TypeError(""Argument 'E0' should be a super-operator""); > ; > #; > # construct liouvillian; > #; > if opt.tidy:; > H = H.tidyup(opt.atol); > ; > L = liouvillian(H, c_op_list); > ; > #; > # setup integrator; > #; > initial_vector = mat2vec(E0.full()).ravel(); > # r = scipy.integrate.ode(cy_ode_rhs); > r = scipy.integrate.ode(_rhs); > # r.set_f_params(L.data.data, L.data.indices, L.data.indptr); > # not sure why I need to transpose L here:; > r.set_f_params(scipy.transpose(L.data)); > r.set_integrator('zvode', method=opt.method, order=opt.order,; > atol=opt.atol, rtol=opt.rtol, nsteps=opt.nsteps,; > first_step=opt.first_step, min_step=opt.min_step,; > max_step=opt.max_step); > r.set_initial_value(initial_vector, tlist[0]); > ; > #; > # call generic ODE code; > #; > return _generic_ode_solve(r, E0, tlist, e_ops, opt, progress_bar); > ```; > ; > def _rhs(t,y,data):; > ym = y.reshape(data.shape); > return (data*ym).flatten(); > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/384#issuecomment-150751174
https://github.com/qutip/qutip/issues/384#issuecomment-150751174:2301,Integrability,depend,depending,2301,"e to generate these with a (costly) Lindblad equation in a large Hilbert space, and use the TTM to extrapolate to larger times. My code is not quite ready for a pull request yet (due to this issue amongst other things), but when it is I would also like to discuss the structure of such a package. I guess it is best to leave that to when I have a pull request re ady though.; > ; > For now I have a local modified version of the _mesolve_const function that allows a superoperator in place of rho0. The necessary modification is actually only to the function implementing the ""right hand side"" (RHS) of the differential equation, as this now needs to implement a matrix-matrix multiplication instead of a matrix-vector multiplication. For illustration purposes I will attach a code for a modified _mesolve_const below, that does the job, but the RHS is not implemented in cython.; > ; > I think implementing this feature in qutip should be relatively straight forward, but possibly a bit tedious since it there are so many different dispatch functions from mesolve depending on the different types of time-dependence etc. One would also need cython implementations of the RHS functions for superoperator evolutions.; > ; > Please let me know what you think about implementing this in qutip.; > ; > Here is the code for a function that propagates the Lindblad equation with a superoperator as initial value (written as a standalone module for illustration purposes). As you will notice in the code, there is a subtle issue with needing to transpose the Lindbladian to get the correct result. I'm not sure why this is the case.. must be something with the superoperator representation. Perhaps @cgranade knows?; > ; > import scipy; > ; > from qutip.mesolve import _generic_ode_solve; > from qutip.superoperator import liouvillian, mat2vec; > from qutip.settings import debug; > ; > if debug:; > import inspect; > ; > def _mesolve_const_super(H, E0, tlist, c_op_list, e_ops, args, opt,; > progress_bar):",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/384#issuecomment-150751174
https://github.com/qutip/qutip/issues/384#issuecomment-150751174:2342,Integrability,depend,dependence,2342,"e to generate these with a (costly) Lindblad equation in a large Hilbert space, and use the TTM to extrapolate to larger times. My code is not quite ready for a pull request yet (due to this issue amongst other things), but when it is I would also like to discuss the structure of such a package. I guess it is best to leave that to when I have a pull request re ady though.; > ; > For now I have a local modified version of the _mesolve_const function that allows a superoperator in place of rho0. The necessary modification is actually only to the function implementing the ""right hand side"" (RHS) of the differential equation, as this now needs to implement a matrix-matrix multiplication instead of a matrix-vector multiplication. For illustration purposes I will attach a code for a modified _mesolve_const below, that does the job, but the RHS is not implemented in cython.; > ; > I think implementing this feature in qutip should be relatively straight forward, but possibly a bit tedious since it there are so many different dispatch functions from mesolve depending on the different types of time-dependence etc. One would also need cython implementations of the RHS functions for superoperator evolutions.; > ; > Please let me know what you think about implementing this in qutip.; > ; > Here is the code for a function that propagates the Lindblad equation with a superoperator as initial value (written as a standalone module for illustration purposes). As you will notice in the code, there is a subtle issue with needing to transpose the Lindbladian to get the correct result. I'm not sure why this is the case.. must be something with the superoperator representation. Perhaps @cgranade knows?; > ; > import scipy; > ; > from qutip.mesolve import _generic_ode_solve; > from qutip.superoperator import liouvillian, mat2vec; > from qutip.settings import debug; > ; > if debug:; > import inspect; > ; > def _mesolve_const_super(H, E0, tlist, c_op_list, e_ops, args, opt,; > progress_bar):",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/384#issuecomment-150751174
https://github.com/qutip/qutip/issues/384#issuecomment-150751174:4068,Integrability,integrat,integrator,4068,"ator representation. Perhaps @cgranade knows?; > ; > import scipy; > ; > from qutip.mesolve import _generic_ode_solve; > from qutip.superoperator import liouvillian, mat2vec; > from qutip.settings import debug; > ; > if debug:; > import inspect; > ; > def _mesolve_const_super(H, E0, tlist, c_op_list, e_ops, args, opt,; > progress_bar):; > """"""; > Evolve the super-operator `E0` using an ODE solver, for constant ; > Liouvillian; > """"""; > ; > ```; > if debug:; > print(inspect.stack()[0][3]); > ; > """"""; > #; > # check initial state; > #; > if isket(rho0):; > # if initial state is a ket and no collapse operator where given,; > # fall back on the unitary schrodinger equation solver; > if len(c_op_list) == 0 and isoper(H):; > return _sesolve_const(H, rho0, tlist, e_ops, args, opt,; > progress_bar); > ; > # Got a wave function as initial state: convert to density matrix.; > rho0 = ket2dm(rho0); > """"""; > ; > #; > # check initial value; > #; > if not E0.issuper:; > raise TypeError(""Argument 'E0' should be a super-operator""); > ; > #; > # construct liouvillian; > #; > if opt.tidy:; > H = H.tidyup(opt.atol); > ; > L = liouvillian(H, c_op_list); > ; > #; > # setup integrator; > #; > initial_vector = mat2vec(E0.full()).ravel(); > # r = scipy.integrate.ode(cy_ode_rhs); > r = scipy.integrate.ode(_rhs); > # r.set_f_params(L.data.data, L.data.indices, L.data.indptr); > # not sure why I need to transpose L here:; > r.set_f_params(scipy.transpose(L.data)); > r.set_integrator('zvode', method=opt.method, order=opt.order,; > atol=opt.atol, rtol=opt.rtol, nsteps=opt.nsteps,; > first_step=opt.first_step, min_step=opt.min_step,; > max_step=opt.max_step); > r.set_initial_value(initial_vector, tlist[0]); > ; > #; > # call generic ODE code; > #; > return _generic_ode_solve(r, E0, tlist, e_ops, opt, progress_bar); > ```; > ; > def _rhs(t,y,data):; > ym = y.reshape(data.shape); > return (data*ym).flatten(); > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/384#issuecomment-150751174
https://github.com/qutip/qutip/issues/384#issuecomment-150751174:4146,Integrability,integrat,integrate,4146,"ator representation. Perhaps @cgranade knows?; > ; > import scipy; > ; > from qutip.mesolve import _generic_ode_solve; > from qutip.superoperator import liouvillian, mat2vec; > from qutip.settings import debug; > ; > if debug:; > import inspect; > ; > def _mesolve_const_super(H, E0, tlist, c_op_list, e_ops, args, opt,; > progress_bar):; > """"""; > Evolve the super-operator `E0` using an ODE solver, for constant ; > Liouvillian; > """"""; > ; > ```; > if debug:; > print(inspect.stack()[0][3]); > ; > """"""; > #; > # check initial state; > #; > if isket(rho0):; > # if initial state is a ket and no collapse operator where given,; > # fall back on the unitary schrodinger equation solver; > if len(c_op_list) == 0 and isoper(H):; > return _sesolve_const(H, rho0, tlist, e_ops, args, opt,; > progress_bar); > ; > # Got a wave function as initial state: convert to density matrix.; > rho0 = ket2dm(rho0); > """"""; > ; > #; > # check initial value; > #; > if not E0.issuper:; > raise TypeError(""Argument 'E0' should be a super-operator""); > ; > #; > # construct liouvillian; > #; > if opt.tidy:; > H = H.tidyup(opt.atol); > ; > L = liouvillian(H, c_op_list); > ; > #; > # setup integrator; > #; > initial_vector = mat2vec(E0.full()).ravel(); > # r = scipy.integrate.ode(cy_ode_rhs); > r = scipy.integrate.ode(_rhs); > # r.set_f_params(L.data.data, L.data.indices, L.data.indptr); > # not sure why I need to transpose L here:; > r.set_f_params(scipy.transpose(L.data)); > r.set_integrator('zvode', method=opt.method, order=opt.order,; > atol=opt.atol, rtol=opt.rtol, nsteps=opt.nsteps,; > first_step=opt.first_step, min_step=opt.min_step,; > max_step=opt.max_step); > r.set_initial_value(initial_vector, tlist[0]); > ; > #; > # call generic ODE code; > #; > return _generic_ode_solve(r, E0, tlist, e_ops, opt, progress_bar); > ```; > ; > def _rhs(t,y,data):; > ym = y.reshape(data.shape); > return (data*ym).flatten(); > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/384#issuecomment-150751174
https://github.com/qutip/qutip/issues/384#issuecomment-150751174:4185,Integrability,integrat,integrate,4185,"ator representation. Perhaps @cgranade knows?; > ; > import scipy; > ; > from qutip.mesolve import _generic_ode_solve; > from qutip.superoperator import liouvillian, mat2vec; > from qutip.settings import debug; > ; > if debug:; > import inspect; > ; > def _mesolve_const_super(H, E0, tlist, c_op_list, e_ops, args, opt,; > progress_bar):; > """"""; > Evolve the super-operator `E0` using an ODE solver, for constant ; > Liouvillian; > """"""; > ; > ```; > if debug:; > print(inspect.stack()[0][3]); > ; > """"""; > #; > # check initial state; > #; > if isket(rho0):; > # if initial state is a ket and no collapse operator where given,; > # fall back on the unitary schrodinger equation solver; > if len(c_op_list) == 0 and isoper(H):; > return _sesolve_const(H, rho0, tlist, e_ops, args, opt,; > progress_bar); > ; > # Got a wave function as initial state: convert to density matrix.; > rho0 = ket2dm(rho0); > """"""; > ; > #; > # check initial value; > #; > if not E0.issuper:; > raise TypeError(""Argument 'E0' should be a super-operator""); > ; > #; > # construct liouvillian; > #; > if opt.tidy:; > H = H.tidyup(opt.atol); > ; > L = liouvillian(H, c_op_list); > ; > #; > # setup integrator; > #; > initial_vector = mat2vec(E0.full()).ravel(); > # r = scipy.integrate.ode(cy_ode_rhs); > r = scipy.integrate.ode(_rhs); > # r.set_f_params(L.data.data, L.data.indices, L.data.indptr); > # not sure why I need to transpose L here:; > r.set_f_params(scipy.transpose(L.data)); > r.set_integrator('zvode', method=opt.method, order=opt.order,; > atol=opt.atol, rtol=opt.rtol, nsteps=opt.nsteps,; > first_step=opt.first_step, min_step=opt.min_step,; > max_step=opt.max_step); > r.set_initial_value(initial_vector, tlist[0]); > ; > #; > # call generic ODE code; > #; > return _generic_ode_solve(r, E0, tlist, e_ops, opt, progress_bar); > ```; > ; > def _rhs(t,y,data):; > ym = y.reshape(data.shape); > return (data*ym).flatten(); > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/384#issuecomment-150751174
https://github.com/qutip/qutip/issues/384#issuecomment-150751174:3247,Modifiability,Evolve,Evolve,3247," since it there are so many different dispatch functions from mesolve depending on the different types of time-dependence etc. One would also need cython implementations of the RHS functions for superoperator evolutions.; > ; > Please let me know what you think about implementing this in qutip.; > ; > Here is the code for a function that propagates the Lindblad equation with a superoperator as initial value (written as a standalone module for illustration purposes). As you will notice in the code, there is a subtle issue with needing to transpose the Lindbladian to get the correct result. I'm not sure why this is the case.. must be something with the superoperator representation. Perhaps @cgranade knows?; > ; > import scipy; > ; > from qutip.mesolve import _generic_ode_solve; > from qutip.superoperator import liouvillian, mat2vec; > from qutip.settings import debug; > ; > if debug:; > import inspect; > ; > def _mesolve_const_super(H, E0, tlist, c_op_list, e_ops, args, opt,; > progress_bar):; > """"""; > Evolve the super-operator `E0` using an ODE solver, for constant ; > Liouvillian; > """"""; > ; > ```; > if debug:; > print(inspect.stack()[0][3]); > ; > """"""; > #; > # check initial state; > #; > if isket(rho0):; > # if initial state is a ket and no collapse operator where given,; > # fall back on the unitary schrodinger equation solver; > if len(c_op_list) == 0 and isoper(H):; > return _sesolve_const(H, rho0, tlist, e_ops, args, opt,; > progress_bar); > ; > # Got a wave function as initial state: convert to density matrix.; > rho0 = ket2dm(rho0); > """"""; > ; > #; > # check initial value; > #; > if not E0.issuper:; > raise TypeError(""Argument 'E0' should be a super-operator""); > ; > #; > # construct liouvillian; > #; > if opt.tidy:; > H = H.tidyup(opt.atol); > ; > L = liouvillian(H, c_op_list); > ; > #; > # setup integrator; > #; > initial_vector = mat2vec(E0.full()).ravel(); > # r = scipy.integrate.ode(cy_ode_rhs); > r = scipy.integrate.ode(_rhs); > # r.set_f_params(L.data.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/384#issuecomment-150751174
https://github.com/qutip/qutip/issues/384#issuecomment-158777586:61,Testability,test,tests,61,"I'm (slowly) working on this, and right now I'm writing unit tests. Is there a unit test anywhere for the `_mesolve_func_td` function in the `mesolve` module?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/384#issuecomment-158777586
https://github.com/qutip/qutip/issues/384#issuecomment-158777586:84,Testability,test,test,84,"I'm (slowly) working on this, and right now I'm writing unit tests. Is there a unit test anywhere for the `_mesolve_func_td` function in the `mesolve` module?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/384#issuecomment-158777586
https://github.com/qutip/qutip/issues/385#issuecomment-152451840:41,Usability,clear,clear,41,"I agree, the current documentation isn't clear. I'll work on getting better documentation up soon. Thanks for the report!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/385#issuecomment-152451840
https://github.com/qutip/qutip/issues/385#issuecomment-152462241:527,Usability,simpl,simplest,527,"Looking into the issue in more detail, I think that the documentation wasn't just misleading but wrong: because QuTiP uses the column-stacking notation, the order of `dims` for `type='super'` doesn't have the same meaning as for `type='oper'` or for vectors. In particular, the column-stacking basis maps |i><j| to |j> |i>, such that the order of the tensor indices for superoperators is swapped from the ordering `[left, right]` that is used by QuTiP's `dims` notation. I'll break this out into another Issue, but I think the simplest way of handling it is to keep `dims` the same as it is now (I don't want to break that, for crying out loud), but to transform the arguments to `_tensor_contract_dense` if the order of `dims` doesn't match the order that we need to pass to `np.reshape`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/385#issuecomment-152462241
https://github.com/qutip/qutip/issues/385#issuecomment-350960435:70,Availability,avail,available,70,This problem has since gotten worse. The linked notebook is no longer available. I'm going to update the documentation with the numbering convention.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/385#issuecomment-350960435
https://github.com/qutip/qutip/issues/385#issuecomment-350960435:94,Deployability,update,update,94,This problem has since gotten worse. The linked notebook is no longer available. I'm going to update the documentation with the numbering convention.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/385#issuecomment-350960435
https://github.com/qutip/qutip/pull/389#issuecomment-152932921:69,Integrability,contract,contractions,69,"This PR now includes test cases that cover even quite strange tensor contractions. Hopefully these should be good canaries for pretty much all typical usages. That said, the new cases are failing for a surprising reason: `Qobj.isket` fails for ""ragged"" dims:. ``` python; In [1]: import qutip as qt. In [2]: import numpy as np. In [3]: qt.Qobj(np.arange(2 * 3 * 3 * 3 * 2 * 3).reshape((2 * 3 * 3, 2 * 3 * 3)), dims=[[[2], [3, 3]], [[3], [2, 3]]]); ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-3-46359a4eb5bd> in <module>(); ----> 1 qt.Qobj(np.arange(2 * 3 * 3 * 3 * 2 * 3).reshape((2 * 3 * 3, 2 * 3 * 3)), dims=[[[2], [3, 3]], [[3], [2, 3]]]). C:\Users\Chris\Dropbox\software-projects\qutip\qutip\qobj.pyc in __init__(self, inpt, dims, shape, type, isherm, fast, superrep); 281 self.superrep = superrep; 282 else:; --> 283 if self.type == 'super' and self.superrep is None:; 284 self.superrep = 'super'; 285. C:\Users\Chris\Dropbox\software-projects\qutip\qutip\qobj.pyc in type(self); 1542 if self.isoper:; 1543 self._type = 'oper'; -> 1544 elif self.isket:; 1545 self._type = 'ket'; 1546 elif self.isbra:. C:\Users\Chris\Dropbox\software-projects\qutip\qutip\qobj.pyc in isket(self); 1572 @property; 1573 def isket(self):; -> 1574 return (np.prod(self.dims[1]) == 1 and; 1575 isinstance(self.dims[0], list) and; 1576 isinstance(self.dims[0][0], (int, np.integer))). C:\Anaconda\lib\site-packages\numpy\core\fromnumeric.pyc in prod(a, axis, dtype, out, keepdims); 2347 except AttributeError:; 2348 return _methods._prod(a, axis=axis, dtype=dtype,; -> 2349 out=out, keepdims=keepdims); 2350 return prod(axis=axis, dtype=dtype, out=out); 2351 else:. C:\Anaconda\lib\site-packages\numpy\core\_methods.pyc in _prod(a, axis, dtype, out, keepdims); 33; 34 def _prod(a, axis=None, dtype=None, out=None, keepdims=False):; ---> 35 return umr_prod(a, axis, dtype, out, keepdims); 36; 37 def _any(a, axis=None, dtype=No",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/389#issuecomment-152932921
https://github.com/qutip/qutip/pull/389#issuecomment-152932921:21,Testability,test,test,21,"This PR now includes test cases that cover even quite strange tensor contractions. Hopefully these should be good canaries for pretty much all typical usages. That said, the new cases are failing for a surprising reason: `Qobj.isket` fails for ""ragged"" dims:. ``` python; In [1]: import qutip as qt. In [2]: import numpy as np. In [3]: qt.Qobj(np.arange(2 * 3 * 3 * 3 * 2 * 3).reshape((2 * 3 * 3, 2 * 3 * 3)), dims=[[[2], [3, 3]], [[3], [2, 3]]]); ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-3-46359a4eb5bd> in <module>(); ----> 1 qt.Qobj(np.arange(2 * 3 * 3 * 3 * 2 * 3).reshape((2 * 3 * 3, 2 * 3 * 3)), dims=[[[2], [3, 3]], [[3], [2, 3]]]). C:\Users\Chris\Dropbox\software-projects\qutip\qutip\qobj.pyc in __init__(self, inpt, dims, shape, type, isherm, fast, superrep); 281 self.superrep = superrep; 282 else:; --> 283 if self.type == 'super' and self.superrep is None:; 284 self.superrep = 'super'; 285. C:\Users\Chris\Dropbox\software-projects\qutip\qutip\qobj.pyc in type(self); 1542 if self.isoper:; 1543 self._type = 'oper'; -> 1544 elif self.isket:; 1545 self._type = 'ket'; 1546 elif self.isbra:. C:\Users\Chris\Dropbox\software-projects\qutip\qutip\qobj.pyc in isket(self); 1572 @property; 1573 def isket(self):; -> 1574 return (np.prod(self.dims[1]) == 1 and; 1575 isinstance(self.dims[0], list) and; 1576 isinstance(self.dims[0][0], (int, np.integer))). C:\Anaconda\lib\site-packages\numpy\core\fromnumeric.pyc in prod(a, axis, dtype, out, keepdims); 2347 except AttributeError:; 2348 return _methods._prod(a, axis=axis, dtype=dtype,; -> 2349 out=out, keepdims=keepdims); 2350 return prod(axis=axis, dtype=dtype, out=out); 2351 else:. C:\Anaconda\lib\site-packages\numpy\core\_methods.pyc in _prod(a, axis, dtype, out, keepdims); 33; 34 def _prod(a, axis=None, dtype=None, out=None, keepdims=False):; ---> 35 return umr_prod(a, axis, dtype, out, keepdims); 36; 37 def _any(a, axis=None, dtype=No",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/389#issuecomment-152932921
https://github.com/qutip/qutip/pull/389#issuecomment-152941888:163,Availability,robust,robust,163,"With the latest changes, `Qobj.type` now points at the new `dims_utils.type_from_dims`, which consolidates the type-detection logic in one place and makes it more robust to ragged `dims`. On Python 2 all tests of `qobj`, `tensor` and `dims_utils` now pass locally, I'll try with Python 3 soon.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/389#issuecomment-152941888
https://github.com/qutip/qutip/pull/389#issuecomment-152941888:116,Safety,detect,detection,116,"With the latest changes, `Qobj.type` now points at the new `dims_utils.type_from_dims`, which consolidates the type-detection logic in one place and makes it more robust to ragged `dims`. On Python 2 all tests of `qobj`, `tensor` and `dims_utils` now pass locally, I'll try with Python 3 soon.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/389#issuecomment-152941888
https://github.com/qutip/qutip/pull/389#issuecomment-152941888:126,Testability,log,logic,126,"With the latest changes, `Qobj.type` now points at the new `dims_utils.type_from_dims`, which consolidates the type-detection logic in one place and makes it more robust to ragged `dims`. On Python 2 all tests of `qobj`, `tensor` and `dims_utils` now pass locally, I'll try with Python 3 soon.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/389#issuecomment-152941888
https://github.com/qutip/qutip/pull/389#issuecomment-152941888:204,Testability,test,tests,204,"With the latest changes, `Qobj.type` now points at the new `dims_utils.type_from_dims`, which consolidates the type-detection logic in one place and makes it more robust to ragged `dims`. On Python 2 all tests of `qobj`, `tensor` and `dims_utils` now pass locally, I'll try with Python 3 soon.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/389#issuecomment-152941888
https://github.com/qutip/qutip/pull/389#issuecomment-153190643:172,Usability,simpl,simply,172,"Nice work! Thanks for starting the work on improving the dims concept. I think this has been long over due!. Personally I would probably call the module `dimensions.py` or simply `dims` instead of `dims_utils.py`, but please do as you wish.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/389#issuecomment-153190643
https://github.com/qutip/qutip/pull/390#issuecomment-153193680:86,Testability,test,test,86,"Sounds good, thanks. I'll merge it in now, then, so that the other PRs can use it for test cases.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/390#issuecomment-153193680
https://github.com/qutip/qutip/issues/391#issuecomment-154592986:8,Deployability,install,install,8,"Did you install using --with-mcf90 ?. > On Nov 6, 2015, at 14:04, src10 notifications@github.com wrote:; > ; > Hello!!!; > ; > I installed python using anaconda on my mac and then installed qutip.; > ; > When I run the installation test I always get; > ; > Fortran mcsolver: False; > ; > How can I install the Fortran compiler needed.; > ; > Thanks; > ; > Regards!!; > ; > Sebastian; > ; > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/391#issuecomment-154592986
https://github.com/qutip/qutip/issues/391#issuecomment-154592986:129,Deployability,install,installed,129,"Did you install using --with-mcf90 ?. > On Nov 6, 2015, at 14:04, src10 notifications@github.com wrote:; > ; > Hello!!!; > ; > I installed python using anaconda on my mac and then installed qutip.; > ; > When I run the installation test I always get; > ; > Fortran mcsolver: False; > ; > How can I install the Fortran compiler needed.; > ; > Thanks; > ; > Regards!!; > ; > Sebastian; > ; > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/391#issuecomment-154592986
https://github.com/qutip/qutip/issues/391#issuecomment-154592986:180,Deployability,install,installed,180,"Did you install using --with-mcf90 ?. > On Nov 6, 2015, at 14:04, src10 notifications@github.com wrote:; > ; > Hello!!!; > ; > I installed python using anaconda on my mac and then installed qutip.; > ; > When I run the installation test I always get; > ; > Fortran mcsolver: False; > ; > How can I install the Fortran compiler needed.; > ; > Thanks; > ; > Regards!!; > ; > Sebastian; > ; > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/391#issuecomment-154592986
https://github.com/qutip/qutip/issues/391#issuecomment-154592986:219,Deployability,install,installation,219,"Did you install using --with-mcf90 ?. > On Nov 6, 2015, at 14:04, src10 notifications@github.com wrote:; > ; > Hello!!!; > ; > I installed python using anaconda on my mac and then installed qutip.; > ; > When I run the installation test I always get; > ; > Fortran mcsolver: False; > ; > How can I install the Fortran compiler needed.; > ; > Thanks; > ; > Regards!!; > ; > Sebastian; > ; > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/391#issuecomment-154592986
https://github.com/qutip/qutip/issues/391#issuecomment-154592986:298,Deployability,install,install,298,"Did you install using --with-mcf90 ?. > On Nov 6, 2015, at 14:04, src10 notifications@github.com wrote:; > ; > Hello!!!; > ; > I installed python using anaconda on my mac and then installed qutip.; > ; > When I run the installation test I always get; > ; > Fortran mcsolver: False; > ; > How can I install the Fortran compiler needed.; > ; > Thanks; > ; > Regards!!; > ; > Sebastian; > ; > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/391#issuecomment-154592986
https://github.com/qutip/qutip/issues/391#issuecomment-154592986:232,Testability,test,test,232,"Did you install using --with-mcf90 ?. > On Nov 6, 2015, at 14:04, src10 notifications@github.com wrote:; > ; > Hello!!!; > ; > I installed python using anaconda on my mac and then installed qutip.; > ; > When I run the installation test I always get; > ; > Fortran mcsolver: False; > ; > How can I install the Fortran compiler needed.; > ; > Thanks; > ; > Regards!!; > ; > Sebastian; > ; > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/391#issuecomment-154592986
https://github.com/qutip/qutip/issues/391#issuecomment-154595439:0,Deployability,Install,Installing,0,"Installing FORTRAN on OS X can be a bit tricky, but I've seen several people successfully use the [HPC for OS X](http://hpc.sourceforge.net/) builds of gfortran.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/391#issuecomment-154595439
https://github.com/qutip/qutip/issues/391#issuecomment-154660509:7,Deployability,install,installed,7,yes! I installed it using --with-mcf90. Am I supposed to install fortran compiler besides the ones I have on anconda?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/391#issuecomment-154660509
https://github.com/qutip/qutip/issues/391#issuecomment-154660509:57,Deployability,install,install,57,yes! I installed it using --with-mcf90. Am I supposed to install fortran compiler besides the ones I have on anconda?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/391#issuecomment-154660509
https://github.com/qutip/qutip/issues/391#issuecomment-154915531:90,Deployability,install,install,90,"By default, OSX does not have a fortran solver. One way to get one is to use macports and install the gcc compiler that includes gfortran. However, as of version 3.1, the standard monte carlo solver is on par with the fortran solver, so unless you are doing something where a factor of 2 or so is really important, then you do not need this feature.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/391#issuecomment-154915531
https://github.com/qutip/qutip/issues/392#issuecomment-154863591:21,Availability,failure,failure,21,I do not get a build failure under NumPy 1.10.1. What was the particular error message? Any changes would also have to be backward compatible with earlier NumPy versions.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/392#issuecomment-154863591
https://github.com/qutip/qutip/issues/392#issuecomment-154863591:73,Availability,error,error,73,I do not get a build failure under NumPy 1.10.1. What was the particular error message? Any changes would also have to be backward compatible with earlier NumPy versions.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/392#issuecomment-154863591
https://github.com/qutip/qutip/issues/392#issuecomment-154863591:79,Integrability,message,message,79,I do not get a build failure under NumPy 1.10.1. What was the particular error message? Any changes would also have to be backward compatible with earlier NumPy versions.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/392#issuecomment-154863591
https://github.com/qutip/qutip/issues/392#issuecomment-154867711:235,Availability,error,error,235,"If you have extra_link_args in the site.cfg, then a double keyword argument; happens when reading the options for the blas library. If you use openblas, add this to your site.cfg; [openblas]; extra_link_args = ... whatever ... and the error will happen.; The error is this. TypeError: config.add_extension() got multiple values for keyword argument; 'extra_link_args'. 2015-11-08 21:12 GMT+01:00 Paul Nation notifications@github.com:. > I do not get a build failure under NumPy 1.10.1. What was the particular; > error message? Any changes would also have to be backward compatible with; > earlier NumPy versions.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/issues/392#issuecomment-154863591. ## . Kind regards Nick",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/392#issuecomment-154867711
https://github.com/qutip/qutip/issues/392#issuecomment-154867711:259,Availability,error,error,259,"If you have extra_link_args in the site.cfg, then a double keyword argument; happens when reading the options for the blas library. If you use openblas, add this to your site.cfg; [openblas]; extra_link_args = ... whatever ... and the error will happen.; The error is this. TypeError: config.add_extension() got multiple values for keyword argument; 'extra_link_args'. 2015-11-08 21:12 GMT+01:00 Paul Nation notifications@github.com:. > I do not get a build failure under NumPy 1.10.1. What was the particular; > error message? Any changes would also have to be backward compatible with; > earlier NumPy versions.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/issues/392#issuecomment-154863591. ## . Kind regards Nick",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/392#issuecomment-154867711
https://github.com/qutip/qutip/issues/392#issuecomment-154867711:458,Availability,failure,failure,458,"If you have extra_link_args in the site.cfg, then a double keyword argument; happens when reading the options for the blas library. If you use openblas, add this to your site.cfg; [openblas]; extra_link_args = ... whatever ... and the error will happen.; The error is this. TypeError: config.add_extension() got multiple values for keyword argument; 'extra_link_args'. 2015-11-08 21:12 GMT+01:00 Paul Nation notifications@github.com:. > I do not get a build failure under NumPy 1.10.1. What was the particular; > error message? Any changes would also have to be backward compatible with; > earlier NumPy versions.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/issues/392#issuecomment-154863591. ## . Kind regards Nick",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/392#issuecomment-154867711
https://github.com/qutip/qutip/issues/392#issuecomment-154867711:513,Availability,error,error,513,"If you have extra_link_args in the site.cfg, then a double keyword argument; happens when reading the options for the blas library. If you use openblas, add this to your site.cfg; [openblas]; extra_link_args = ... whatever ... and the error will happen.; The error is this. TypeError: config.add_extension() got multiple values for keyword argument; 'extra_link_args'. 2015-11-08 21:12 GMT+01:00 Paul Nation notifications@github.com:. > I do not get a build failure under NumPy 1.10.1. What was the particular; > error message? Any changes would also have to be backward compatible with; > earlier NumPy versions.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/issues/392#issuecomment-154863591. ## . Kind regards Nick",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/392#issuecomment-154867711
https://github.com/qutip/qutip/issues/392#issuecomment-154867711:519,Integrability,message,message,519,"If you have extra_link_args in the site.cfg, then a double keyword argument; happens when reading the options for the blas library. If you use openblas, add this to your site.cfg; [openblas]; extra_link_args = ... whatever ... and the error will happen.; The error is this. TypeError: config.add_extension() got multiple values for keyword argument; 'extra_link_args'. 2015-11-08 21:12 GMT+01:00 Paul Nation notifications@github.com:. > I do not get a build failure under NumPy 1.10.1. What was the particular; > error message? Any changes would also have to be backward compatible with; > earlier NumPy versions.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/issues/392#issuecomment-154863591. ## . Kind regards Nick",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/392#issuecomment-154867711
https://github.com/qutip/qutip/issues/392#issuecomment-154867711:285,Modifiability,config,config,285,"If you have extra_link_args in the site.cfg, then a double keyword argument; happens when reading the options for the blas library. If you use openblas, add this to your site.cfg; [openblas]; extra_link_args = ... whatever ... and the error will happen.; The error is this. TypeError: config.add_extension() got multiple values for keyword argument; 'extra_link_args'. 2015-11-08 21:12 GMT+01:00 Paul Nation notifications@github.com:. > I do not get a build failure under NumPy 1.10.1. What was the particular; > error message? Any changes would also have to be backward compatible with; > earlier NumPy versions.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/issues/392#issuecomment-154863591. ## . Kind regards Nick",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/392#issuecomment-154867711
https://github.com/qutip/qutip/issues/392#issuecomment-154871830:176,Deployability,update,update,176,"Does this change break when using `extra_link_args` on NumPy ≤ 0.10.1? Also, should `extra_link_args` here be allowed to override `site.cfg`? It might be good to do a `newblas.update()` to allow users to explicitly pass compile args for `qutraj_run` that differ from `site.cfg`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/392#issuecomment-154871830
https://github.com/qutip/qutip/issues/392#issuecomment-154875854:299,Deployability,update,update,299,"No, see this commit; https://github.com/numpy/numpy/pull/5597; which enabled it.; Hence, it will be a problem for future numpy versions as well. Sure you can do whatever you want with the options, or you could do a; double option,. opts = get_info('lapack_opt',0); opts2 = get_info('qutip',0); opts.update(opts2). or something alike, that should be your decision.; The above would enable a specific [qutip] block in the site.cfg which; localizes settings ;). 2015-11-08 22:06 GMT+01:00 Chris Granade notifications@github.com:. > Does this change break when using extra_link_args on NumPy ≤ 0.10.1?; > Also, should extra_link_args here be allowed to override site.cfg? It; > might be good to do a newblas.update() to allow users to explicitly pass; > compile args for qutraj_run that differ from site.cfg.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/issues/392#issuecomment-154871830. ## . Kind regards Nick",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/392#issuecomment-154875854
https://github.com/qutip/qutip/issues/392#issuecomment-154875854:704,Deployability,update,update,704,"No, see this commit; https://github.com/numpy/numpy/pull/5597; which enabled it.; Hence, it will be a problem for future numpy versions as well. Sure you can do whatever you want with the options, or you could do a; double option,. opts = get_info('lapack_opt',0); opts2 = get_info('qutip',0); opts.update(opts2). or something alike, that should be your decision.; The above would enable a specific [qutip] block in the site.cfg which; localizes settings ;). 2015-11-08 22:06 GMT+01:00 Chris Granade notifications@github.com:. > Does this change break when using extra_link_args on NumPy ≤ 0.10.1?; > Also, should extra_link_args here be allowed to override site.cfg? It; > might be good to do a newblas.update() to allow users to explicitly pass; > compile args for qutraj_run that differ from site.cfg.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/issues/392#issuecomment-154871830. ## . Kind regards Nick",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/392#issuecomment-154875854
https://github.com/qutip/qutip/issues/392#issuecomment-154915442:43,Deployability,install,installation,43,"Given that the number one point of pain in installation that I have seen has been getting FORTRAN up and running, I think it could make sense to split off `mcf90`. It's extremely useful, but large parts of QuTiP are also useful without it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/392#issuecomment-154915442
https://github.com/qutip/qutip/issues/392#issuecomment-154987547:85,Deployability,configurat,configuration,85,"For me there are three main points here:; 1. The `site.cfg` should be a global numpy configuration (or local qutip configuration); 2. I see no reason for using the `DeprecationWarning` if you change the code to read the info from the `site.cfg`, perhaps there is something I am missing? If I do `sed -i -e '/extra_/d' qutip/fortran/setup.py` it compiles fine and seems to be using the `extra_link_args`.; 3. To dynamically control the `mcf90` module you could equally do this in the `site.cfg`:. ```; [qutip]; mcf90 = False / True; ```. and just default it to `False`. I have no comments on whether this should be preferred or not, or whether you _will_ split it up.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/392#issuecomment-154987547
https://github.com/qutip/qutip/issues/392#issuecomment-154987547:115,Deployability,configurat,configuration,115,"For me there are three main points here:; 1. The `site.cfg` should be a global numpy configuration (or local qutip configuration); 2. I see no reason for using the `DeprecationWarning` if you change the code to read the info from the `site.cfg`, perhaps there is something I am missing? If I do `sed -i -e '/extra_/d' qutip/fortran/setup.py` it compiles fine and seems to be using the `extra_link_args`.; 3. To dynamically control the `mcf90` module you could equally do this in the `site.cfg`:. ```; [qutip]; mcf90 = False / True; ```. and just default it to `False`. I have no comments on whether this should be preferred or not, or whether you _will_ split it up.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/392#issuecomment-154987547
https://github.com/qutip/qutip/issues/392#issuecomment-154987547:85,Modifiability,config,configuration,85,"For me there are three main points here:; 1. The `site.cfg` should be a global numpy configuration (or local qutip configuration); 2. I see no reason for using the `DeprecationWarning` if you change the code to read the info from the `site.cfg`, perhaps there is something I am missing? If I do `sed -i -e '/extra_/d' qutip/fortran/setup.py` it compiles fine and seems to be using the `extra_link_args`.; 3. To dynamically control the `mcf90` module you could equally do this in the `site.cfg`:. ```; [qutip]; mcf90 = False / True; ```. and just default it to `False`. I have no comments on whether this should be preferred or not, or whether you _will_ split it up.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/392#issuecomment-154987547
https://github.com/qutip/qutip/issues/392#issuecomment-154987547:115,Modifiability,config,configuration,115,"For me there are three main points here:; 1. The `site.cfg` should be a global numpy configuration (or local qutip configuration); 2. I see no reason for using the `DeprecationWarning` if you change the code to read the info from the `site.cfg`, perhaps there is something I am missing? If I do `sed -i -e '/extra_/d' qutip/fortran/setup.py` it compiles fine and seems to be using the `extra_link_args`.; 3. To dynamically control the `mcf90` module you could equally do this in the `site.cfg`:. ```; [qutip]; mcf90 = False / True; ```. and just default it to `False`. I have no comments on whether this should be preferred or not, or whether you _will_ split it up.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/392#issuecomment-154987547
https://github.com/qutip/qutip/issues/392#issuecomment-155040632:364,Availability,down,downsides,364,"I thought we had resolved the installation issues with the Fortran side by making the MC solver a optional (default to False).; I am not that I have fully digested everything in this thread, but @zerothi seems confident that there is just some small change that we need to improve integration with the latest Numpy. Its not clear to me what are the risks or other downsides.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/392#issuecomment-155040632
https://github.com/qutip/qutip/issues/392#issuecomment-155040632:30,Deployability,install,installation,30,"I thought we had resolved the installation issues with the Fortran side by making the MC solver a optional (default to False).; I am not that I have fully digested everything in this thread, but @zerothi seems confident that there is just some small change that we need to improve integration with the latest Numpy. Its not clear to me what are the risks or other downsides.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/392#issuecomment-155040632
https://github.com/qutip/qutip/issues/392#issuecomment-155040632:281,Deployability,integrat,integration,281,"I thought we had resolved the installation issues with the Fortran side by making the MC solver a optional (default to False).; I am not that I have fully digested everything in this thread, but @zerothi seems confident that there is just some small change that we need to improve integration with the latest Numpy. Its not clear to me what are the risks or other downsides.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/392#issuecomment-155040632
https://github.com/qutip/qutip/issues/392#issuecomment-155040632:281,Integrability,integrat,integration,281,"I thought we had resolved the installation issues with the Fortran side by making the MC solver a optional (default to False).; I am not that I have fully digested everything in this thread, but @zerothi seems confident that there is just some small change that we need to improve integration with the latest Numpy. Its not clear to me what are the risks or other downsides.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/392#issuecomment-155040632
https://github.com/qutip/qutip/issues/392#issuecomment-155040632:349,Safety,risk,risks,349,"I thought we had resolved the installation issues with the Fortran side by making the MC solver a optional (default to False).; I am not that I have fully digested everything in this thread, but @zerothi seems confident that there is just some small change that we need to improve integration with the latest Numpy. Its not clear to me what are the risks or other downsides.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/392#issuecomment-155040632
https://github.com/qutip/qutip/issues/392#issuecomment-155040632:324,Usability,clear,clear,324,"I thought we had resolved the installation issues with the Fortran side by making the MC solver a optional (default to False).; I am not that I have fully digested everything in this thread, but @zerothi seems confident that there is just some small change that we need to improve integration with the latest Numpy. Its not clear to me what are the risks or other downsides.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/392#issuecomment-155040632
https://github.com/qutip/qutip/issues/392#issuecomment-155058653:1148,Availability,down,download,1148,"I think there are two separate issues here. . As for the fortran module, it's true that the it adds a lot of build complexity, but most users do not need it and can easily install qutip without it. There is a case for removing it from qutip and put it in a separate module, but think this should be low priority, since it would require non-negligible amount work, would break backwards compatibility (it should bump next release to 4.0), and does not really provide any new features (other than a less complex code base). There might users who rely on it and for them it might be annoying if we remove it. So I would vote for postponing it until there are very strong arguments for removing it. As for the topic of this issue, I think that qutip should follow the lead of NumPy, even if it breaks backwards compatibility in the configuration methods, so that users that are familiar with NumPy and related projects does not have any surprises when using qutip. Also, if I understand correctly, this would mostly change how one configure and build against blas libraries such as openblas? Then I guess it would not effect the typical user that just download and install the package with standard configuration (no site.cfg file), and it should be safe the follow the advice of the OP.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/392#issuecomment-155058653
https://github.com/qutip/qutip/issues/392#issuecomment-155058653:172,Deployability,install,install,172,"I think there are two separate issues here. . As for the fortran module, it's true that the it adds a lot of build complexity, but most users do not need it and can easily install qutip without it. There is a case for removing it from qutip and put it in a separate module, but think this should be low priority, since it would require non-negligible amount work, would break backwards compatibility (it should bump next release to 4.0), and does not really provide any new features (other than a less complex code base). There might users who rely on it and for them it might be annoying if we remove it. So I would vote for postponing it until there are very strong arguments for removing it. As for the topic of this issue, I think that qutip should follow the lead of NumPy, even if it breaks backwards compatibility in the configuration methods, so that users that are familiar with NumPy and related projects does not have any surprises when using qutip. Also, if I understand correctly, this would mostly change how one configure and build against blas libraries such as openblas? Then I guess it would not effect the typical user that just download and install the package with standard configuration (no site.cfg file), and it should be safe the follow the advice of the OP.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/392#issuecomment-155058653
https://github.com/qutip/qutip/issues/392#issuecomment-155058653:421,Deployability,release,release,421,"I think there are two separate issues here. . As for the fortran module, it's true that the it adds a lot of build complexity, but most users do not need it and can easily install qutip without it. There is a case for removing it from qutip and put it in a separate module, but think this should be low priority, since it would require non-negligible amount work, would break backwards compatibility (it should bump next release to 4.0), and does not really provide any new features (other than a less complex code base). There might users who rely on it and for them it might be annoying if we remove it. So I would vote for postponing it until there are very strong arguments for removing it. As for the topic of this issue, I think that qutip should follow the lead of NumPy, even if it breaks backwards compatibility in the configuration methods, so that users that are familiar with NumPy and related projects does not have any surprises when using qutip. Also, if I understand correctly, this would mostly change how one configure and build against blas libraries such as openblas? Then I guess it would not effect the typical user that just download and install the package with standard configuration (no site.cfg file), and it should be safe the follow the advice of the OP.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/392#issuecomment-155058653
https://github.com/qutip/qutip/issues/392#issuecomment-155058653:828,Deployability,configurat,configuration,828,"I think there are two separate issues here. . As for the fortran module, it's true that the it adds a lot of build complexity, but most users do not need it and can easily install qutip without it. There is a case for removing it from qutip and put it in a separate module, but think this should be low priority, since it would require non-negligible amount work, would break backwards compatibility (it should bump next release to 4.0), and does not really provide any new features (other than a less complex code base). There might users who rely on it and for them it might be annoying if we remove it. So I would vote for postponing it until there are very strong arguments for removing it. As for the topic of this issue, I think that qutip should follow the lead of NumPy, even if it breaks backwards compatibility in the configuration methods, so that users that are familiar with NumPy and related projects does not have any surprises when using qutip. Also, if I understand correctly, this would mostly change how one configure and build against blas libraries such as openblas? Then I guess it would not effect the typical user that just download and install the package with standard configuration (no site.cfg file), and it should be safe the follow the advice of the OP.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/392#issuecomment-155058653
https://github.com/qutip/qutip/issues/392#issuecomment-155058653:1161,Deployability,install,install,1161,"I think there are two separate issues here. . As for the fortran module, it's true that the it adds a lot of build complexity, but most users do not need it and can easily install qutip without it. There is a case for removing it from qutip and put it in a separate module, but think this should be low priority, since it would require non-negligible amount work, would break backwards compatibility (it should bump next release to 4.0), and does not really provide any new features (other than a less complex code base). There might users who rely on it and for them it might be annoying if we remove it. So I would vote for postponing it until there are very strong arguments for removing it. As for the topic of this issue, I think that qutip should follow the lead of NumPy, even if it breaks backwards compatibility in the configuration methods, so that users that are familiar with NumPy and related projects does not have any surprises when using qutip. Also, if I understand correctly, this would mostly change how one configure and build against blas libraries such as openblas? Then I guess it would not effect the typical user that just download and install the package with standard configuration (no site.cfg file), and it should be safe the follow the advice of the OP.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/392#issuecomment-155058653
https://github.com/qutip/qutip/issues/392#issuecomment-155058653:1195,Deployability,configurat,configuration,1195,"I think there are two separate issues here. . As for the fortran module, it's true that the it adds a lot of build complexity, but most users do not need it and can easily install qutip without it. There is a case for removing it from qutip and put it in a separate module, but think this should be low priority, since it would require non-negligible amount work, would break backwards compatibility (it should bump next release to 4.0), and does not really provide any new features (other than a less complex code base). There might users who rely on it and for them it might be annoying if we remove it. So I would vote for postponing it until there are very strong arguments for removing it. As for the topic of this issue, I think that qutip should follow the lead of NumPy, even if it breaks backwards compatibility in the configuration methods, so that users that are familiar with NumPy and related projects does not have any surprises when using qutip. Also, if I understand correctly, this would mostly change how one configure and build against blas libraries such as openblas? Then I guess it would not effect the typical user that just download and install the package with standard configuration (no site.cfg file), and it should be safe the follow the advice of the OP.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/392#issuecomment-155058653
https://github.com/qutip/qutip/issues/392#issuecomment-155058653:828,Modifiability,config,configuration,828,"I think there are two separate issues here. . As for the fortran module, it's true that the it adds a lot of build complexity, but most users do not need it and can easily install qutip without it. There is a case for removing it from qutip and put it in a separate module, but think this should be low priority, since it would require non-negligible amount work, would break backwards compatibility (it should bump next release to 4.0), and does not really provide any new features (other than a less complex code base). There might users who rely on it and for them it might be annoying if we remove it. So I would vote for postponing it until there are very strong arguments for removing it. As for the topic of this issue, I think that qutip should follow the lead of NumPy, even if it breaks backwards compatibility in the configuration methods, so that users that are familiar with NumPy and related projects does not have any surprises when using qutip. Also, if I understand correctly, this would mostly change how one configure and build against blas libraries such as openblas? Then I guess it would not effect the typical user that just download and install the package with standard configuration (no site.cfg file), and it should be safe the follow the advice of the OP.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/392#issuecomment-155058653
https://github.com/qutip/qutip/issues/392#issuecomment-155058653:1027,Modifiability,config,configure,1027,"I think there are two separate issues here. . As for the fortran module, it's true that the it adds a lot of build complexity, but most users do not need it and can easily install qutip without it. There is a case for removing it from qutip and put it in a separate module, but think this should be low priority, since it would require non-negligible amount work, would break backwards compatibility (it should bump next release to 4.0), and does not really provide any new features (other than a less complex code base). There might users who rely on it and for them it might be annoying if we remove it. So I would vote for postponing it until there are very strong arguments for removing it. As for the topic of this issue, I think that qutip should follow the lead of NumPy, even if it breaks backwards compatibility in the configuration methods, so that users that are familiar with NumPy and related projects does not have any surprises when using qutip. Also, if I understand correctly, this would mostly change how one configure and build against blas libraries such as openblas? Then I guess it would not effect the typical user that just download and install the package with standard configuration (no site.cfg file), and it should be safe the follow the advice of the OP.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/392#issuecomment-155058653
https://github.com/qutip/qutip/issues/392#issuecomment-155058653:1195,Modifiability,config,configuration,1195,"I think there are two separate issues here. . As for the fortran module, it's true that the it adds a lot of build complexity, but most users do not need it and can easily install qutip without it. There is a case for removing it from qutip and put it in a separate module, but think this should be low priority, since it would require non-negligible amount work, would break backwards compatibility (it should bump next release to 4.0), and does not really provide any new features (other than a less complex code base). There might users who rely on it and for them it might be annoying if we remove it. So I would vote for postponing it until there are very strong arguments for removing it. As for the topic of this issue, I think that qutip should follow the lead of NumPy, even if it breaks backwards compatibility in the configuration methods, so that users that are familiar with NumPy and related projects does not have any surprises when using qutip. Also, if I understand correctly, this would mostly change how one configure and build against blas libraries such as openblas? Then I guess it would not effect the typical user that just download and install the package with standard configuration (no site.cfg file), and it should be safe the follow the advice of the OP.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/392#issuecomment-155058653
https://github.com/qutip/qutip/issues/392#issuecomment-155058653:1246,Safety,safe,safe,1246,"I think there are two separate issues here. . As for the fortran module, it's true that the it adds a lot of build complexity, but most users do not need it and can easily install qutip without it. There is a case for removing it from qutip and put it in a separate module, but think this should be low priority, since it would require non-negligible amount work, would break backwards compatibility (it should bump next release to 4.0), and does not really provide any new features (other than a less complex code base). There might users who rely on it and for them it might be annoying if we remove it. So I would vote for postponing it until there are very strong arguments for removing it. As for the topic of this issue, I think that qutip should follow the lead of NumPy, even if it breaks backwards compatibility in the configuration methods, so that users that are familiar with NumPy and related projects does not have any surprises when using qutip. Also, if I understand correctly, this would mostly change how one configure and build against blas libraries such as openblas? Then I guess it would not effect the typical user that just download and install the package with standard configuration (no site.cfg file), and it should be safe the follow the advice of the OP.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/392#issuecomment-155058653
https://github.com/qutip/qutip/pull/393#issuecomment-154874510:54,Deployability,update,update,54,"Not sure. Conda seems to be complaining about how the update is called. Maybe something has changed in conda. Need to check. . > On Nov 8, 2015, at 14:08, Chris Granade notifications@github.com wrote:; > ; > This looks like a good change. Not sure why it would cause Travis to not see conda at all, though, that's bizarre. Any ideas?; > ; > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/393#issuecomment-154874510
https://github.com/qutip/qutip/pull/394#issuecomment-154918223:26,Deployability,update,update,26,"With #393 now in, can you update your branch from master? Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/394#issuecomment-154918223
https://github.com/qutip/qutip/pull/394#issuecomment-154925807:62,Testability,test,tests,62,"The sysconfig docs are a little terse on the subject, but the tests show that the depreciation fix is not compatible with 2.7.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/394#issuecomment-154925807
https://github.com/qutip/qutip/pull/396#issuecomment-155730486:66,Testability,test,tests,66,"I''d missed some backwards compatibility checking, hence some the tests were failing, this should be fixed now.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/396#issuecomment-155730486
https://github.com/qutip/qutip/pull/396#issuecomment-155855251:126,Integrability,depend,dependent,126,"I would be more keen to keep the internal drift as either single operator (array / Qobj) or a list for when working with time-dependent drift dynamics. This would then mean that methods such as combine_dyn_gen would need to check if the drift is a list or single object.; Two reasons for this:; 1. In the vast majority of cases the drift will be fixed, and in may be confusing for new users as to why it is a list; 2. In cases where users set the drift directly using the dynamics object (like the test that you had to change) this change would not be backwards compatible.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/396#issuecomment-155855251
https://github.com/qutip/qutip/pull/396#issuecomment-155855251:498,Testability,test,test,498,"I would be more keen to keep the internal drift as either single operator (array / Qobj) or a list for when working with time-dependent drift dynamics. This would then mean that methods such as combine_dyn_gen would need to check if the drift is a list or single object.; Two reasons for this:; 1. In the vast majority of cases the drift will be fixed, and in may be confusing for new users as to why it is a list; 2. In cases where users set the drift directly using the dynamics object (like the test that you had to change) this change would not be backwards compatible.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/396#issuecomment-155855251
https://github.com/qutip/qutip/pull/396#issuecomment-155855645:67,Integrability,depend,dependent,67,An IPython notebook example should be provided for using this time-dependent option.; A test should also be added.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/396#issuecomment-155855645
https://github.com/qutip/qutip/pull/396#issuecomment-155855645:88,Testability,test,test,88,An IPython notebook example should be provided for using this time-dependent option.; A test should also be added.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/396#issuecomment-155855645
https://github.com/qutip/qutip/pull/397#issuecomment-159366015:175,Security,access,accessors,175,Issue with setting phase_option #400 resolved by using property setter rather than set_phase_option; Took the opportunity to replace all get_ and set_ functions with property accessors.; Full list of function and attrib name changes provided in 'qtrl-v3_2-release_notes.txt'; These should only affect customised sub-classes. Deprecation warnings given.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/397#issuecomment-159366015
https://github.com/qutip/qutip/pull/404#issuecomment-162598230:396,Availability,error,error,396,"Fixed some causes of travis tests not succeeding. In particular e303b0e fixes use of `round` in the function `_td_wrap_array_str` in rhs_generate.py. This function uses `round` to get an integer number that is then passed as an array index. Since `round` returns a float, this causes the deprecation warning ""DeprecationWarning: using a non-integer number instead of an integer will result in an error in the future"". I therefore wrapped the call to `round` with a call to `int`. The travis tests now pass succesfully for this pull request.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/404#issuecomment-162598230
https://github.com/qutip/qutip/pull/404#issuecomment-162598230:430,Integrability,wrap,wrapped,430,"Fixed some causes of travis tests not succeeding. In particular e303b0e fixes use of `round` in the function `_td_wrap_array_str` in rhs_generate.py. This function uses `round` to get an integer number that is then passed as an array index. Since `round` returns a float, this causes the deprecation warning ""DeprecationWarning: using a non-integer number instead of an integer will result in an error in the future"". I therefore wrapped the call to `round` with a call to `int`. The travis tests now pass succesfully for this pull request.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/404#issuecomment-162598230
https://github.com/qutip/qutip/pull/404#issuecomment-162598230:28,Testability,test,tests,28,"Fixed some causes of travis tests not succeeding. In particular e303b0e fixes use of `round` in the function `_td_wrap_array_str` in rhs_generate.py. This function uses `round` to get an integer number that is then passed as an array index. Since `round` returns a float, this causes the deprecation warning ""DeprecationWarning: using a non-integer number instead of an integer will result in an error in the future"". I therefore wrapped the call to `round` with a call to `int`. The travis tests now pass succesfully for this pull request.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/404#issuecomment-162598230
https://github.com/qutip/qutip/pull/404#issuecomment-162598230:491,Testability,test,tests,491,"Fixed some causes of travis tests not succeeding. In particular e303b0e fixes use of `round` in the function `_td_wrap_array_str` in rhs_generate.py. This function uses `round` to get an integer number that is then passed as an array index. Since `round` returns a float, this causes the deprecation warning ""DeprecationWarning: using a non-integer number instead of an integer will result in an error in the future"". I therefore wrapped the call to `round` with a call to `int`. The travis tests now pass succesfully for this pull request.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/404#issuecomment-162598230
https://github.com/qutip/qutip/pull/404#issuecomment-163322225:175,Usability,learn,learning,175,"I don't understand why the first commit to this PR is a modification of steadystate.py. Sorry, I think I might have messed up the history with some merges or something (still learning good work flow!). The master branch is merged in after this commit, and github tells me that the branch is up to date with the base branch. Please review this before accepting.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/404#issuecomment-163322225
https://github.com/qutip/qutip/pull/404#issuecomment-165446733:33,Testability,test,tests,33,"Cleaned up some minor things in `tests/test_meoslve.py`, like removing trailing white spaces etc.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/404#issuecomment-165446733
https://github.com/qutip/qutip/pull/405#issuecomment-164471109:295,Availability,avail,available,295,"Looks generally good to me. Personally I am happy with the class instance method of invoking the code. However, as you say, the standard approach elsewhere in the library is to provide a function call. In the control modules I took the approach of doing both, with some functionality only being available through the setting of properties and calling instance methods. I would prefer to here from some of the other developer before merging though, as this is more in their area than mine.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/405#issuecomment-164471109
https://github.com/qutip/qutip/pull/405#issuecomment-164471659:25,Testability,test,test,25,The naming convention of test class methods seems to vary a lot throughout the library. Is there any reason why we do not stick with the usual pep8 naming convention in this area?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/405#issuecomment-164471659
https://github.com/qutip/qutip/pull/405#issuecomment-165445058:8,Testability,test,tests,8,For the tests I added I followed the naming convention already used in `tests/test_mesolve.py`. I guess we should try to change the naming convention in all the test modules then. Probably better to do this in another pull request though.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/405#issuecomment-165445058
https://github.com/qutip/qutip/pull/405#issuecomment-165445058:72,Testability,test,tests,72,For the tests I added I followed the naming convention already used in `tests/test_mesolve.py`. I guess we should try to change the naming convention in all the test modules then. Probably better to do this in another pull request though.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/405#issuecomment-165445058
https://github.com/qutip/qutip/pull/405#issuecomment-165445058:161,Testability,test,test,161,For the tests I added I followed the naming convention already used in `tests/test_mesolve.py`. I guess we should try to change the naming convention in all the test modules then. Probably better to do this in another pull request though.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/405#issuecomment-165445058
https://github.com/qutip/qutip/pull/406#issuecomment-165182413:17,Usability,simpl,simple,17,"This is a pretty simple addition that does not affect any other part of the library, so I am marking merge ready.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/406#issuecomment-165182413
https://github.com/qutip/qutip/issues/409#issuecomment-165934550:146,Availability,error,error,146,"RESOLVED. First, I changed to a source install inside the anaconda site-packages folder instead of pulling from the site. I was still getting the error, but I found this similar issue at https://github.com/qutip/qutip/pull/311, which suggested I remove the fpmath calls in a couple of the c compiler setup.py files. In particular, the setups in the cy and control subdirectories (see links). For instance, something like . ```; extra_compile_args=['-w', '-ffast-math',; '-O3', '-march=native, '-mfpmath=sse']; ```. to. ```; extra_compile_args=['-w', '-ffast-math',; '-O3', '-march=native'], #, '-mfpmath=sse'; ```. For some reason, this wasn't working either, so I decided to try changing; -march=native. to; -march=x86-64. , and that did the trick!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/409#issuecomment-165934550
https://github.com/qutip/qutip/issues/409#issuecomment-165934550:39,Deployability,install,install,39,"RESOLVED. First, I changed to a source install inside the anaconda site-packages folder instead of pulling from the site. I was still getting the error, but I found this similar issue at https://github.com/qutip/qutip/pull/311, which suggested I remove the fpmath calls in a couple of the c compiler setup.py files. In particular, the setups in the cy and control subdirectories (see links). For instance, something like . ```; extra_compile_args=['-w', '-ffast-math',; '-O3', '-march=native, '-mfpmath=sse']; ```. to. ```; extra_compile_args=['-w', '-ffast-math',; '-O3', '-march=native'], #, '-mfpmath=sse'; ```. For some reason, this wasn't working either, so I decided to try changing; -march=native. to; -march=x86-64. , and that did the trick!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/409#issuecomment-165934550
https://github.com/qutip/qutip/issues/410#issuecomment-183607483:37,Integrability,depend,depends,37,"The `test` subcommand for `setup.py` depends on `setuptools`, rather than just `distutils`. We don't want to require `setuptools`, however, so I think the best strategy is to try and import it but fall back to `distutils` if we can't. I'll post a PR soon that will follow this strategy. Hopefully, that should make it a bit more convenient to run unit tests.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/410#issuecomment-183607483
https://github.com/qutip/qutip/issues/410#issuecomment-183607483:5,Testability,test,test,5,"The `test` subcommand for `setup.py` depends on `setuptools`, rather than just `distutils`. We don't want to require `setuptools`, however, so I think the best strategy is to try and import it but fall back to `distutils` if we can't. I'll post a PR soon that will follow this strategy. Hopefully, that should make it a bit more convenient to run unit tests.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/410#issuecomment-183607483
https://github.com/qutip/qutip/issues/410#issuecomment-183607483:352,Testability,test,tests,352,"The `test` subcommand for `setup.py` depends on `setuptools`, rather than just `distutils`. We don't want to require `setuptools`, however, so I think the best strategy is to try and import it but fall back to `distutils` if we can't. I'll post a PR soon that will follow this strategy. Hopefully, that should make it a bit more convenient to run unit tests.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/410#issuecomment-183607483
https://github.com/qutip/qutip/issues/412#issuecomment-170951539:277,Testability,test,tests,277,"I have replicated this. The hardcode num_waves seems a bit spurious. I think it is best to delete it altogether. It does mean that it breaks backward compatibility, but I can't why anyone would rely on this (or why I coded it that way in the first place). I am working on unit tests for this now.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/412#issuecomment-170951539
https://github.com/qutip/qutip/issues/416#issuecomment-171740710:135,Integrability,rout,routine,135,"There is nothing in the code that should prevent one from doing that, provided that the problem is still in Lindblad form. The mesolve routine does not normalize or check the trace for the return density matrices, so I naively think that it should work.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/416#issuecomment-171740710
https://github.com/qutip/qutip/pull/417#issuecomment-179008095:30,Testability,test,test,30,"Looks good to me.; Should the test function have a docstring? I seem to remember these get reported during the testing, although maybe it's different when you use this yield method",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/417#issuecomment-179008095
https://github.com/qutip/qutip/pull/417#issuecomment-179008095:111,Testability,test,testing,111,"Looks good to me.; Should the test function have a docstring? I seem to remember these get reported during the testing, although maybe it's different when you use this yield method",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/417#issuecomment-179008095
https://github.com/qutip/qutip/pull/417#issuecomment-179009528:106,Testability,test,test,106,"That's a good catch, thanks. I'll look at how nostests handles docstrings in cases, but at the least, the test generator should have a docstring, I agree.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/417#issuecomment-179009528
https://github.com/qutip/qutip/pull/417#issuecomment-179027129:98,Availability,failure,failure,98,"I checked locally by intentionally making the tests fail, and the case descriptions do show up in failure logs correctly, so at least the hack works?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/417#issuecomment-179027129
https://github.com/qutip/qutip/pull/417#issuecomment-179027129:46,Testability,test,tests,46,"I checked locally by intentionally making the tests fail, and the case descriptions do show up in failure logs correctly, so at least the hack works?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/417#issuecomment-179027129
https://github.com/qutip/qutip/pull/417#issuecomment-179027129:106,Testability,log,logs,106,"I checked locally by intentionally making the tests fail, and the case descriptions do show up in failure logs correctly, so at least the hack works?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/417#issuecomment-179027129
https://github.com/qutip/qutip/pull/417#issuecomment-181319167:114,Availability,error,erroring,114,"Given that this PR worked fine on Travis CI before I merged it, I'm at a loss as to why all of the builds are now erroring out, much less at the linking stage. It's late here, so I'll try and look at it ASAP tomorrow. Thanks for your patience.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/417#issuecomment-181319167
https://github.com/qutip/qutip/pull/417#issuecomment-181499504:48,Testability,test,testing,48,"It is from the mcf90 fortran code. Since we are testing using Anaconda, it is looking for the MKL library that does not exist. Therefore, it has nothing to do with the current PR. I will disable the mcf90 flag that is really worthless anyway since the fortran tests do not run.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/417#issuecomment-181499504
https://github.com/qutip/qutip/pull/417#issuecomment-181499504:260,Testability,test,tests,260,"It is from the mcf90 fortran code. Since we are testing using Anaconda, it is looking for the MKL library that does not exist. Therefore, it has nothing to do with the current PR. I will disable the mcf90 flag that is really worthless anyway since the fortran tests do not run.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/417#issuecomment-181499504
https://github.com/qutip/qutip/pull/417#issuecomment-181509701:43,Availability,error,error,43,"After fixing the fortran issue here is the error:. # . ## ERROR: Test Qobj: trunc_neg works for non-diagonal opers. Traceback (most recent call last):; File ""/home/travis/miniconda/envs/test-environment/lib/python3.5/site-packages/nose/case.py"", line 198, in runTest; self.test(*self.arg); File ""/home/travis/build/qutip/qutip/qutip/tests/test_qobj.py"", line 816, in case; pos_qobj = qobj.trunc_neg(method=method); File ""/home/travis/build/qutip/qutip/qutip/qobj.py"", line 1246, in trunc_neg; if eigvals[idx] + acc / (idx + 1) >= 0:; IndexError: index 2 is out of bounds for axis 0 with size 2",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/417#issuecomment-181509701
https://github.com/qutip/qutip/pull/417#issuecomment-181509701:58,Availability,ERROR,ERROR,58,"After fixing the fortran issue here is the error:. # . ## ERROR: Test Qobj: trunc_neg works for non-diagonal opers. Traceback (most recent call last):; File ""/home/travis/miniconda/envs/test-environment/lib/python3.5/site-packages/nose/case.py"", line 198, in runTest; self.test(*self.arg); File ""/home/travis/build/qutip/qutip/qutip/tests/test_qobj.py"", line 816, in case; pos_qobj = qobj.trunc_neg(method=method); File ""/home/travis/build/qutip/qutip/qutip/qobj.py"", line 1246, in trunc_neg; if eigvals[idx] + acc / (idx + 1) >= 0:; IndexError: index 2 is out of bounds for axis 0 with size 2",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/417#issuecomment-181509701
https://github.com/qutip/qutip/pull/417#issuecomment-181509701:65,Testability,Test,Test,65,"After fixing the fortran issue here is the error:. # . ## ERROR: Test Qobj: trunc_neg works for non-diagonal opers. Traceback (most recent call last):; File ""/home/travis/miniconda/envs/test-environment/lib/python3.5/site-packages/nose/case.py"", line 198, in runTest; self.test(*self.arg); File ""/home/travis/build/qutip/qutip/qutip/tests/test_qobj.py"", line 816, in case; pos_qobj = qobj.trunc_neg(method=method); File ""/home/travis/build/qutip/qutip/qutip/qobj.py"", line 1246, in trunc_neg; if eigvals[idx] + acc / (idx + 1) >= 0:; IndexError: index 2 is out of bounds for axis 0 with size 2",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/417#issuecomment-181509701
https://github.com/qutip/qutip/pull/417#issuecomment-181509701:186,Testability,test,test-environment,186,"After fixing the fortran issue here is the error:. # . ## ERROR: Test Qobj: trunc_neg works for non-diagonal opers. Traceback (most recent call last):; File ""/home/travis/miniconda/envs/test-environment/lib/python3.5/site-packages/nose/case.py"", line 198, in runTest; self.test(*self.arg); File ""/home/travis/build/qutip/qutip/qutip/tests/test_qobj.py"", line 816, in case; pos_qobj = qobj.trunc_neg(method=method); File ""/home/travis/build/qutip/qutip/qutip/qobj.py"", line 1246, in trunc_neg; if eigvals[idx] + acc / (idx + 1) >= 0:; IndexError: index 2 is out of bounds for axis 0 with size 2",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/417#issuecomment-181509701
https://github.com/qutip/qutip/pull/417#issuecomment-181509701:273,Testability,test,test,273,"After fixing the fortran issue here is the error:. # . ## ERROR: Test Qobj: trunc_neg works for non-diagonal opers. Traceback (most recent call last):; File ""/home/travis/miniconda/envs/test-environment/lib/python3.5/site-packages/nose/case.py"", line 198, in runTest; self.test(*self.arg); File ""/home/travis/build/qutip/qutip/qutip/tests/test_qobj.py"", line 816, in case; pos_qobj = qobj.trunc_neg(method=method); File ""/home/travis/build/qutip/qutip/qutip/qobj.py"", line 1246, in trunc_neg; if eigvals[idx] + acc / (idx + 1) >= 0:; IndexError: index 2 is out of bounds for axis 0 with size 2",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/417#issuecomment-181509701
https://github.com/qutip/qutip/pull/417#issuecomment-181509701:333,Testability,test,tests,333,"After fixing the fortran issue here is the error:. # . ## ERROR: Test Qobj: trunc_neg works for non-diagonal opers. Traceback (most recent call last):; File ""/home/travis/miniconda/envs/test-environment/lib/python3.5/site-packages/nose/case.py"", line 198, in runTest; self.test(*self.arg); File ""/home/travis/build/qutip/qutip/qutip/tests/test_qobj.py"", line 816, in case; pos_qobj = qobj.trunc_neg(method=method); File ""/home/travis/build/qutip/qutip/qutip/qobj.py"", line 1246, in trunc_neg; if eigvals[idx] + acc / (idx + 1) >= 0:; IndexError: index 2 is out of bounds for axis 0 with size 2",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/417#issuecomment-181509701
https://github.com/qutip/qutip/pull/417#issuecomment-181628033:14,Availability,error,error,14,"Weirdly, that error didn't show up in Travis CI for me before I merged. Working on diagnosing now, thanks for catching it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/417#issuecomment-181628033
https://github.com/qutip/qutip/pull/419#issuecomment-178978928:34,Testability,test,test,34,"Looks good to me.; You'll see one test has passed and another not. I am not sure what the difference is between these, and why one would fail and the other not?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/419#issuecomment-178978928
https://github.com/qutip/qutip/pull/419#issuecomment-178980416:10,Testability,test,test,10,"That is a test for super operators that fails quite often. It is unrelated to the current PR. In fact, I think I will submit an issue to Chris about this particular test.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/419#issuecomment-178980416
https://github.com/qutip/qutip/pull/419#issuecomment-178980416:165,Testability,test,test,165,"That is a test for super operators that fails quite often. It is unrelated to the current PR. In fact, I think I will submit an issue to Chris about this particular test.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/419#issuecomment-178980416
https://github.com/qutip/qutip/pull/419#issuecomment-178980710:19,Testability,test,tests,19,I am rerunning the tests that failed. Should pass unless we get unlucky twice.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/419#issuecomment-178980710
https://github.com/qutip/qutip/pull/419#issuecomment-178997983:48,Testability,test,test,48,"I think this all looks good. As for the failing test, please see #420. I think that should do it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/419#issuecomment-178997983
https://github.com/qutip/qutip/pull/421#issuecomment-181709691:108,Deployability,install,installed,108,Generally looks like a really good idea. Are either of these libraries that Python windows users would have installed anyway? Are they in the default Anaconda for windows for instance?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/421#issuecomment-181709691
https://github.com/qutip/qutip/pull/421#issuecomment-181716813:22,Deployability,install,installed,22,"I only had `comtypes` installed for something else, but at least it's in conda and pip. Sadly, `win32com` is not in either repository.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/421#issuecomment-181716813
https://github.com/qutip/qutip/pull/421#issuecomment-181726756:124,Deployability,install,install,124,I which case I think we should definitely use the comtypes as Chris suggests. And add it to the recommended packages in the install docs,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/421#issuecomment-181726756
https://github.com/qutip/qutip/pull/421#issuecomment-181909452:163,Deployability,install,installed,163,"Win32com is in win Anaconda. That is how I tested the code. . > On Feb 8, 2016, at 22:34, Chris Granade notifications@github.com wrote:; > ; > I only had comtypes installed for something else, but at least it's in conda and pip. Sadly, win32com is not in either repository.; > ; > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/421#issuecomment-181909452
https://github.com/qutip/qutip/pull/421#issuecomment-181909452:43,Testability,test,tested,43,"Win32com is in win Anaconda. That is how I tested the code. . > On Feb 8, 2016, at 22:34, Chris Granade notifications@github.com wrote:; > ; > I only had comtypes installed for something else, but at least it's in conda and pip. Sadly, win32com is not in either repository.; > ; > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/421#issuecomment-181909452
https://github.com/qutip/qutip/pull/421#issuecomment-181909794:234,Deployability,install,install,234,"I will recode tonight. > On Feb 8, 2016, at 23:17, Alexander Pitchford notifications@github.com wrote:; > ; > I which case I think we should definitely use the comtypes as Chris suggests. And add it to the recommended packages in the install docs; > ; > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/421#issuecomment-181909794
https://github.com/qutip/qutip/pull/421#issuecomment-184880374:57,Availability,error,errors,57,"This no longer has any conflicts. However, as usual, the errors are generated by qutip.tests.test_subsys_apply as given in Issue #430.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/421#issuecomment-184880374
https://github.com/qutip/qutip/pull/421#issuecomment-184880374:87,Testability,test,tests,87,"This no longer has any conflicts. However, as usual, the errors are generated by qutip.tests.test_subsys_apply as given in Issue #430.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/421#issuecomment-184880374
https://github.com/qutip/qutip/issues/423#issuecomment-182174246:415,Availability,error,error,415,"The parallel issue was resolved earlier. See the ipynbtools import of ipyparallel. ncps should not be an issue as it has always has fallen back on the multiprocessing count. > On Feb 9, 2016, at 18:40, Alexander Pitchford notifications@github.com wrote:; > ; > I was helping someone with an install on windows 7 yesterday.; > We were testing using a notebook, and it worked fine except the version_table. The first error was resolved by installing ipython parallel. Still after that it was failing with something like key 'ncpus' missing. Sorry for not supplying exact errors. I could ask the user to post them if necessary.; > ; > @nonhermitian is #421 likely to resolve this? Even if say they don't have win32com or comtypes installed?; > ; > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/423#issuecomment-182174246
https://github.com/qutip/qutip/issues/423#issuecomment-182174246:569,Availability,error,errors,569,"The parallel issue was resolved earlier. See the ipynbtools import of ipyparallel. ncps should not be an issue as it has always has fallen back on the multiprocessing count. > On Feb 9, 2016, at 18:40, Alexander Pitchford notifications@github.com wrote:; > ; > I was helping someone with an install on windows 7 yesterday.; > We were testing using a notebook, and it worked fine except the version_table. The first error was resolved by installing ipython parallel. Still after that it was failing with something like key 'ncpus' missing. Sorry for not supplying exact errors. I could ask the user to post them if necessary.; > ; > @nonhermitian is #421 likely to resolve this? Even if say they don't have win32com or comtypes installed?; > ; > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/423#issuecomment-182174246
https://github.com/qutip/qutip/issues/423#issuecomment-182174246:291,Deployability,install,install,291,"The parallel issue was resolved earlier. See the ipynbtools import of ipyparallel. ncps should not be an issue as it has always has fallen back on the multiprocessing count. > On Feb 9, 2016, at 18:40, Alexander Pitchford notifications@github.com wrote:; > ; > I was helping someone with an install on windows 7 yesterday.; > We were testing using a notebook, and it worked fine except the version_table. The first error was resolved by installing ipython parallel. Still after that it was failing with something like key 'ncpus' missing. Sorry for not supplying exact errors. I could ask the user to post them if necessary.; > ; > @nonhermitian is #421 likely to resolve this? Even if say they don't have win32com or comtypes installed?; > ; > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/423#issuecomment-182174246
https://github.com/qutip/qutip/issues/423#issuecomment-182174246:437,Deployability,install,installing,437,"The parallel issue was resolved earlier. See the ipynbtools import of ipyparallel. ncps should not be an issue as it has always has fallen back on the multiprocessing count. > On Feb 9, 2016, at 18:40, Alexander Pitchford notifications@github.com wrote:; > ; > I was helping someone with an install on windows 7 yesterday.; > We were testing using a notebook, and it worked fine except the version_table. The first error was resolved by installing ipython parallel. Still after that it was failing with something like key 'ncpus' missing. Sorry for not supplying exact errors. I could ask the user to post them if necessary.; > ; > @nonhermitian is #421 likely to resolve this? Even if say they don't have win32com or comtypes installed?; > ; > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/423#issuecomment-182174246
https://github.com/qutip/qutip/issues/423#issuecomment-182174246:727,Deployability,install,installed,727,"The parallel issue was resolved earlier. See the ipynbtools import of ipyparallel. ncps should not be an issue as it has always has fallen back on the multiprocessing count. > On Feb 9, 2016, at 18:40, Alexander Pitchford notifications@github.com wrote:; > ; > I was helping someone with an install on windows 7 yesterday.; > We were testing using a notebook, and it worked fine except the version_table. The first error was resolved by installing ipython parallel. Still after that it was failing with something like key 'ncpus' missing. Sorry for not supplying exact errors. I could ask the user to post them if necessary.; > ; > @nonhermitian is #421 likely to resolve this? Even if say they don't have win32com or comtypes installed?; > ; > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/423#issuecomment-182174246
https://github.com/qutip/qutip/issues/423#issuecomment-182174246:334,Testability,test,testing,334,"The parallel issue was resolved earlier. See the ipynbtools import of ipyparallel. ncps should not be an issue as it has always has fallen back on the multiprocessing count. > On Feb 9, 2016, at 18:40, Alexander Pitchford notifications@github.com wrote:; > ; > I was helping someone with an install on windows 7 yesterday.; > We were testing using a notebook, and it worked fine except the version_table. The first error was resolved by installing ipython parallel. Still after that it was failing with something like key 'ncpus' missing. Sorry for not supplying exact errors. I could ask the user to post them if necessary.; > ; > @nonhermitian is #421 likely to resolve this? Even if say they don't have win32com or comtypes installed?; > ; > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/423#issuecomment-182174246
https://github.com/qutip/qutip/issues/423#issuecomment-182176833:42,Deployability,install,installed,42,"Well, yesterday when helping said user, I installed a fresh Anaconda 32bit for winodws + mingw + libpython. Then I installed the latest github release of qutip. And still I got these issues.; I could try to reproduce on a clean win7 virtual machine I have here?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/423#issuecomment-182176833
https://github.com/qutip/qutip/issues/423#issuecomment-182176833:115,Deployability,install,installed,115,"Well, yesterday when helping said user, I installed a fresh Anaconda 32bit for winodws + mingw + libpython. Then I installed the latest github release of qutip. And still I got these issues.; I could try to reproduce on a clean win7 virtual machine I have here?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/423#issuecomment-182176833
https://github.com/qutip/qutip/issues/423#issuecomment-182176833:143,Deployability,release,release,143,"Well, yesterday when helping said user, I installed a fresh Anaconda 32bit for winodws + mingw + libpython. Then I installed the latest github release of qutip. And still I got these issues.; I could try to reproduce on a clean win7 virtual machine I have here?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/423#issuecomment-182176833
https://github.com/qutip/qutip/issues/423#issuecomment-182179608:291,Deployability,install,installed,291,"I see the issue. I did not upload all my fixes for that issue. Just the change supporting jupyter. Will upload tonight. Sorry, too many repos to keep track of. . > On Feb 9, 2016, at 19:58, Alexander Pitchford notifications@github.com wrote:; > ; > Well, yesterday when helping said user, I installed a fresh Anaconda 32bit for winodws + mingw + libpython. Then I installed the latest github release of qutip. And still I got these issues.; > I could try to reproduce on a clean win7 virtual machine I have here?; > ; > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/423#issuecomment-182179608
https://github.com/qutip/qutip/issues/423#issuecomment-182179608:364,Deployability,install,installed,364,"I see the issue. I did not upload all my fixes for that issue. Just the change supporting jupyter. Will upload tonight. Sorry, too many repos to keep track of. . > On Feb 9, 2016, at 19:58, Alexander Pitchford notifications@github.com wrote:; > ; > Well, yesterday when helping said user, I installed a fresh Anaconda 32bit for winodws + mingw + libpython. Then I installed the latest github release of qutip. And still I got these issues.; > I could try to reproduce on a clean win7 virtual machine I have here?; > ; > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/423#issuecomment-182179608
https://github.com/qutip/qutip/issues/423#issuecomment-182179608:392,Deployability,release,release,392,"I see the issue. I did not upload all my fixes for that issue. Just the change supporting jupyter. Will upload tonight. Sorry, too many repos to keep track of. . > On Feb 9, 2016, at 19:58, Alexander Pitchford notifications@github.com wrote:; > ; > Well, yesterday when helping said user, I installed a fresh Anaconda 32bit for winodws + mingw + libpython. Then I installed the latest github release of qutip. And still I got these issues.; > I could try to reproduce on a clean win7 virtual machine I have here?; > ; > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/423#issuecomment-182179608
https://github.com/qutip/qutip/issues/425#issuecomment-183599625:98,Availability,failure,failures,98,"This should be fixed by #428. I tried running tests locally several times, and didn't observe any failures. If Travis checks out on that PR, I'll merge it and close both issues.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/425#issuecomment-183599625
https://github.com/qutip/qutip/issues/425#issuecomment-183599625:46,Testability,test,tests,46,"This should be fixed by #428. I tried running tests locally several times, and didn't observe any failures. If Travis checks out on that PR, I'll merge it and close both issues.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/425#issuecomment-183599625
https://github.com/qutip/qutip/issues/426#issuecomment-183253786:53,Deployability,install,install,53,"Note that the same holds for Cython:. ``` zsh; % pip install qutip; Collecting qutip; Using cached qutip-3.1.0.tar.gz; Complete output from command python setup.py egg_info:; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/tmp/pip-build-hg437fn6/qutip/setup.py"", line 159, in <module>; configuration=configuration; File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/core.py"", line 135, in setup; config = configuration(); File ""/tmp/pip-build-hg437fn6/qutip/setup.py"", line 135, in configuration; config.add_subpackage('qutip'); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 908, in _get_configuration_from_setup_py; config = setup_module.configuration(*args); File ""qutip/setup.py"", line 8, in configuration; config.add_subpackage('cy'); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 883, in _get_configuration_from_setup_py; ('.py', 'U', 1)); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 234, in load_module; return load_source(name, filename, file); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 172, in load_source; module = _load(spec); File",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/426#issuecomment-183253786
https://github.com/qutip/qutip/issues/426#issuecomment-183253786:319,Deployability,configurat,configuration,319,"Note that the same holds for Cython:. ``` zsh; % pip install qutip; Collecting qutip; Using cached qutip-3.1.0.tar.gz; Complete output from command python setup.py egg_info:; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/tmp/pip-build-hg437fn6/qutip/setup.py"", line 159, in <module>; configuration=configuration; File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/core.py"", line 135, in setup; config = configuration(); File ""/tmp/pip-build-hg437fn6/qutip/setup.py"", line 135, in configuration; config.add_subpackage('qutip'); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 908, in _get_configuration_from_setup_py; config = setup_module.configuration(*args); File ""qutip/setup.py"", line 8, in configuration; config.add_subpackage('cy'); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 883, in _get_configuration_from_setup_py; ('.py', 'U', 1)); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 234, in load_module; return load_source(name, filename, file); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 172, in load_source; module = _load(spec); File",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/426#issuecomment-183253786
https://github.com/qutip/qutip/issues/426#issuecomment-183253786:333,Deployability,configurat,configuration,333,"Note that the same holds for Cython:. ``` zsh; % pip install qutip; Collecting qutip; Using cached qutip-3.1.0.tar.gz; Complete output from command python setup.py egg_info:; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/tmp/pip-build-hg437fn6/qutip/setup.py"", line 159, in <module>; configuration=configuration; File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/core.py"", line 135, in setup; config = configuration(); File ""/tmp/pip-build-hg437fn6/qutip/setup.py"", line 135, in configuration; config.add_subpackage('qutip'); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 908, in _get_configuration_from_setup_py; config = setup_module.configuration(*args); File ""qutip/setup.py"", line 8, in configuration; config.add_subpackage('cy'); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 883, in _get_configuration_from_setup_py; ('.py', 'U', 1)); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 234, in load_module; return load_source(name, filename, file); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 172, in load_source; module = _load(spec); File",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/426#issuecomment-183253786
https://github.com/qutip/qutip/issues/426#issuecomment-183253786:483,Deployability,configurat,configuration,483,"Note that the same holds for Cython:. ``` zsh; % pip install qutip; Collecting qutip; Using cached qutip-3.1.0.tar.gz; Complete output from command python setup.py egg_info:; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/tmp/pip-build-hg437fn6/qutip/setup.py"", line 159, in <module>; configuration=configuration; File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/core.py"", line 135, in setup; config = configuration(); File ""/tmp/pip-build-hg437fn6/qutip/setup.py"", line 135, in configuration; config.add_subpackage('qutip'); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 908, in _get_configuration_from_setup_py; config = setup_module.configuration(*args); File ""qutip/setup.py"", line 8, in configuration; config.add_subpackage('cy'); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 883, in _get_configuration_from_setup_py; ('.py', 'U', 1)); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 234, in load_module; return load_source(name, filename, file); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 172, in load_source; module = _load(spec); File",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/426#issuecomment-183253786
https://github.com/qutip/qutip/issues/426#issuecomment-183253786:560,Deployability,configurat,configuration,560,"Note that the same holds for Cython:. ``` zsh; % pip install qutip; Collecting qutip; Using cached qutip-3.1.0.tar.gz; Complete output from command python setup.py egg_info:; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/tmp/pip-build-hg437fn6/qutip/setup.py"", line 159, in <module>; configuration=configuration; File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/core.py"", line 135, in setup; config = configuration(); File ""/tmp/pip-build-hg437fn6/qutip/setup.py"", line 135, in configuration; config.add_subpackage('qutip'); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 908, in _get_configuration_from_setup_py; config = setup_module.configuration(*args); File ""qutip/setup.py"", line 8, in configuration; config.add_subpackage('cy'); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 883, in _get_configuration_from_setup_py; ('.py', 'U', 1)); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 234, in load_module; return load_source(name, filename, file); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 172, in load_source; module = _load(spec); File",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/426#issuecomment-183253786
https://github.com/qutip/qutip/issues/426#issuecomment-183253786:1121,Deployability,configurat,configuration,1121,"ommand python setup.py egg_info:; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/tmp/pip-build-hg437fn6/qutip/setup.py"", line 159, in <module>; configuration=configuration; File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/core.py"", line 135, in setup; config = configuration(); File ""/tmp/pip-build-hg437fn6/qutip/setup.py"", line 135, in configuration; config.add_subpackage('qutip'); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 908, in _get_configuration_from_setup_py; config = setup_module.configuration(*args); File ""qutip/setup.py"", line 8, in configuration; config.add_subpackage('cy'); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 883, in _get_configuration_from_setup_py; ('.py', 'U', 1)); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 234, in load_module; return load_source(name, filename, file); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 172, in load_source; module = _load(spec); File ""<frozen importlib._bootstrap>"", line 693, in _load; File ""<frozen importlib._bootstrap>"", line 673, in _load_unlocked; File ""<frozen impor",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/426#issuecomment-183253786
https://github.com/qutip/qutip/issues/426#issuecomment-183253786:1177,Deployability,configurat,configuration,1177,"back (most recent call last):; File ""<string>"", line 1, in <module>; File ""/tmp/pip-build-hg437fn6/qutip/setup.py"", line 159, in <module>; configuration=configuration; File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/core.py"", line 135, in setup; config = configuration(); File ""/tmp/pip-build-hg437fn6/qutip/setup.py"", line 135, in configuration; config.add_subpackage('qutip'); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 908, in _get_configuration_from_setup_py; config = setup_module.configuration(*args); File ""qutip/setup.py"", line 8, in configuration; config.add_subpackage('cy'); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 883, in _get_configuration_from_setup_py; ('.py', 'U', 1)); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 234, in load_module; return load_source(name, filename, file); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 172, in load_source; module = _load(spec); File ""<frozen importlib._bootstrap>"", line 693, in _load; File ""<frozen importlib._bootstrap>"", line 673, in _load_unlocked; File ""<frozen importlib._bootstrap_external>"", line 662, i",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/426#issuecomment-183253786
https://github.com/qutip/qutip/issues/426#issuecomment-183253786:2399,Deployability,Install,Installing,2399,"python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 908, in _get_configuration_from_setup_py; config = setup_module.configuration(*args); File ""qutip/setup.py"", line 8, in configuration; config.add_subpackage('cy'); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 883, in _get_configuration_from_setup_py; ('.py', 'U', 1)); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 234, in load_module; return load_source(name, filename, file); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 172, in load_source; module = _load(spec); File ""<frozen importlib._bootstrap>"", line 693, in _load; File ""<frozen importlib._bootstrap>"", line 673, in _load_unlocked; File ""<frozen importlib._bootstrap_external>"", line 662, in exec_module; File ""<frozen importlib._bootstrap>"", line 222, in _call_with_frames_removed; File ""qutip/cy/setup.py"", line 3, in <module>; from Cython.Distutils import build_ext; ImportError: No module named 'Cython'; Installing without the fortran mcsolver.; ```. EDIT: And `qutip` installs well with `pip` even if `scipy` is not installed (or `matplotlib`). This results in an `ImportError` at first import (or warning). But once installing manually the dependencies, all is fine.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/426#issuecomment-183253786
https://github.com/qutip/qutip/issues/426#issuecomment-183253786:2464,Deployability,install,installs,2464,"python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 908, in _get_configuration_from_setup_py; config = setup_module.configuration(*args); File ""qutip/setup.py"", line 8, in configuration; config.add_subpackage('cy'); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 883, in _get_configuration_from_setup_py; ('.py', 'U', 1)); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 234, in load_module; return load_source(name, filename, file); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 172, in load_source; module = _load(spec); File ""<frozen importlib._bootstrap>"", line 693, in _load; File ""<frozen importlib._bootstrap>"", line 673, in _load_unlocked; File ""<frozen importlib._bootstrap_external>"", line 662, in exec_module; File ""<frozen importlib._bootstrap>"", line 222, in _call_with_frames_removed; File ""qutip/cy/setup.py"", line 3, in <module>; from Cython.Distutils import build_ext; ImportError: No module named 'Cython'; Installing without the fortran mcsolver.; ```. EDIT: And `qutip` installs well with `pip` even if `scipy` is not installed (or `matplotlib`). This results in an `ImportError` at first import (or warning). But once installing manually the dependencies, all is fine.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/426#issuecomment-183253786
https://github.com/qutip/qutip/issues/426#issuecomment-183253786:2512,Deployability,install,installed,2512,"python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 908, in _get_configuration_from_setup_py; config = setup_module.configuration(*args); File ""qutip/setup.py"", line 8, in configuration; config.add_subpackage('cy'); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 883, in _get_configuration_from_setup_py; ('.py', 'U', 1)); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 234, in load_module; return load_source(name, filename, file); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 172, in load_source; module = _load(spec); File ""<frozen importlib._bootstrap>"", line 693, in _load; File ""<frozen importlib._bootstrap>"", line 673, in _load_unlocked; File ""<frozen importlib._bootstrap_external>"", line 662, in exec_module; File ""<frozen importlib._bootstrap>"", line 222, in _call_with_frames_removed; File ""qutip/cy/setup.py"", line 3, in <module>; from Cython.Distutils import build_ext; ImportError: No module named 'Cython'; Installing without the fortran mcsolver.; ```. EDIT: And `qutip` installs well with `pip` even if `scipy` is not installed (or `matplotlib`). This results in an `ImportError` at first import (or warning). But once installing manually the dependencies, all is fine.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/426#issuecomment-183253786
https://github.com/qutip/qutip/issues/426#issuecomment-183253786:2613,Deployability,install,installing,2613,"python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 908, in _get_configuration_from_setup_py; config = setup_module.configuration(*args); File ""qutip/setup.py"", line 8, in configuration; config.add_subpackage('cy'); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 883, in _get_configuration_from_setup_py; ('.py', 'U', 1)); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 234, in load_module; return load_source(name, filename, file); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 172, in load_source; module = _load(spec); File ""<frozen importlib._bootstrap>"", line 693, in _load; File ""<frozen importlib._bootstrap>"", line 673, in _load_unlocked; File ""<frozen importlib._bootstrap_external>"", line 662, in exec_module; File ""<frozen importlib._bootstrap>"", line 222, in _call_with_frames_removed; File ""qutip/cy/setup.py"", line 3, in <module>; from Cython.Distutils import build_ext; ImportError: No module named 'Cython'; Installing without the fortran mcsolver.; ```. EDIT: And `qutip` installs well with `pip` even if `scipy` is not installed (or `matplotlib`). This results in an `ImportError` at first import (or warning). But once installing manually the dependencies, all is fine.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/426#issuecomment-183253786
https://github.com/qutip/qutip/issues/426#issuecomment-183253786:2637,Integrability,depend,dependencies,2637,"python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 908, in _get_configuration_from_setup_py; config = setup_module.configuration(*args); File ""qutip/setup.py"", line 8, in configuration; config.add_subpackage('cy'); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 883, in _get_configuration_from_setup_py; ('.py', 'U', 1)); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 234, in load_module; return load_source(name, filename, file); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 172, in load_source; module = _load(spec); File ""<frozen importlib._bootstrap>"", line 693, in _load; File ""<frozen importlib._bootstrap>"", line 673, in _load_unlocked; File ""<frozen importlib._bootstrap_external>"", line 662, in exec_module; File ""<frozen importlib._bootstrap>"", line 222, in _call_with_frames_removed; File ""qutip/cy/setup.py"", line 3, in <module>; from Cython.Distutils import build_ext; ImportError: No module named 'Cython'; Installing without the fortran mcsolver.; ```. EDIT: And `qutip` installs well with `pip` even if `scipy` is not installed (or `matplotlib`). This results in an `ImportError` at first import (or warning). But once installing manually the dependencies, all is fine.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/426#issuecomment-183253786
https://github.com/qutip/qutip/issues/426#issuecomment-183253786:319,Modifiability,config,configuration,319,"Note that the same holds for Cython:. ``` zsh; % pip install qutip; Collecting qutip; Using cached qutip-3.1.0.tar.gz; Complete output from command python setup.py egg_info:; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/tmp/pip-build-hg437fn6/qutip/setup.py"", line 159, in <module>; configuration=configuration; File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/core.py"", line 135, in setup; config = configuration(); File ""/tmp/pip-build-hg437fn6/qutip/setup.py"", line 135, in configuration; config.add_subpackage('qutip'); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 908, in _get_configuration_from_setup_py; config = setup_module.configuration(*args); File ""qutip/setup.py"", line 8, in configuration; config.add_subpackage('cy'); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 883, in _get_configuration_from_setup_py; ('.py', 'U', 1)); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 234, in load_module; return load_source(name, filename, file); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 172, in load_source; module = _load(spec); File",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/426#issuecomment-183253786
https://github.com/qutip/qutip/issues/426#issuecomment-183253786:333,Modifiability,config,configuration,333,"Note that the same holds for Cython:. ``` zsh; % pip install qutip; Collecting qutip; Using cached qutip-3.1.0.tar.gz; Complete output from command python setup.py egg_info:; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/tmp/pip-build-hg437fn6/qutip/setup.py"", line 159, in <module>; configuration=configuration; File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/core.py"", line 135, in setup; config = configuration(); File ""/tmp/pip-build-hg437fn6/qutip/setup.py"", line 135, in configuration; config.add_subpackage('qutip'); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 908, in _get_configuration_from_setup_py; config = setup_module.configuration(*args); File ""qutip/setup.py"", line 8, in configuration; config.add_subpackage('cy'); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 883, in _get_configuration_from_setup_py; ('.py', 'U', 1)); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 234, in load_module; return load_source(name, filename, file); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 172, in load_source; module = _load(spec); File",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/426#issuecomment-183253786
https://github.com/qutip/qutip/issues/426#issuecomment-183253786:474,Modifiability,config,config,474,"Note that the same holds for Cython:. ``` zsh; % pip install qutip; Collecting qutip; Using cached qutip-3.1.0.tar.gz; Complete output from command python setup.py egg_info:; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/tmp/pip-build-hg437fn6/qutip/setup.py"", line 159, in <module>; configuration=configuration; File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/core.py"", line 135, in setup; config = configuration(); File ""/tmp/pip-build-hg437fn6/qutip/setup.py"", line 135, in configuration; config.add_subpackage('qutip'); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 908, in _get_configuration_from_setup_py; config = setup_module.configuration(*args); File ""qutip/setup.py"", line 8, in configuration; config.add_subpackage('cy'); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 883, in _get_configuration_from_setup_py; ('.py', 'U', 1)); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 234, in load_module; return load_source(name, filename, file); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 172, in load_source; module = _load(spec); File",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/426#issuecomment-183253786
https://github.com/qutip/qutip/issues/426#issuecomment-183253786:483,Modifiability,config,configuration,483,"Note that the same holds for Cython:. ``` zsh; % pip install qutip; Collecting qutip; Using cached qutip-3.1.0.tar.gz; Complete output from command python setup.py egg_info:; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/tmp/pip-build-hg437fn6/qutip/setup.py"", line 159, in <module>; configuration=configuration; File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/core.py"", line 135, in setup; config = configuration(); File ""/tmp/pip-build-hg437fn6/qutip/setup.py"", line 135, in configuration; config.add_subpackage('qutip'); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 908, in _get_configuration_from_setup_py; config = setup_module.configuration(*args); File ""qutip/setup.py"", line 8, in configuration; config.add_subpackage('cy'); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 883, in _get_configuration_from_setup_py; ('.py', 'U', 1)); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 234, in load_module; return load_source(name, filename, file); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 172, in load_source; module = _load(spec); File",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/426#issuecomment-183253786
https://github.com/qutip/qutip/issues/426#issuecomment-183253786:560,Modifiability,config,configuration,560,"Note that the same holds for Cython:. ``` zsh; % pip install qutip; Collecting qutip; Using cached qutip-3.1.0.tar.gz; Complete output from command python setup.py egg_info:; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/tmp/pip-build-hg437fn6/qutip/setup.py"", line 159, in <module>; configuration=configuration; File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/core.py"", line 135, in setup; config = configuration(); File ""/tmp/pip-build-hg437fn6/qutip/setup.py"", line 135, in configuration; config.add_subpackage('qutip'); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 908, in _get_configuration_from_setup_py; config = setup_module.configuration(*args); File ""qutip/setup.py"", line 8, in configuration; config.add_subpackage('cy'); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 883, in _get_configuration_from_setup_py; ('.py', 'U', 1)); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 234, in load_module; return load_source(name, filename, file); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 172, in load_source; module = _load(spec); File",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/426#issuecomment-183253786
https://github.com/qutip/qutip/issues/426#issuecomment-183253786:575,Modifiability,config,config,575,"Note that the same holds for Cython:. ``` zsh; % pip install qutip; Collecting qutip; Using cached qutip-3.1.0.tar.gz; Complete output from command python setup.py egg_info:; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/tmp/pip-build-hg437fn6/qutip/setup.py"", line 159, in <module>; configuration=configuration; File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/core.py"", line 135, in setup; config = configuration(); File ""/tmp/pip-build-hg437fn6/qutip/setup.py"", line 135, in configuration; config.add_subpackage('qutip'); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 908, in _get_configuration_from_setup_py; config = setup_module.configuration(*args); File ""qutip/setup.py"", line 8, in configuration; config.add_subpackage('cy'); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 883, in _get_configuration_from_setup_py; ('.py', 'U', 1)); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 234, in load_module; return load_source(name, filename, file); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 172, in load_source; module = _load(spec); File",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/426#issuecomment-183253786
https://github.com/qutip/qutip/issues/426#issuecomment-183253786:1099,Modifiability,config,config,1099,"; Using cached qutip-3.1.0.tar.gz; Complete output from command python setup.py egg_info:; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/tmp/pip-build-hg437fn6/qutip/setup.py"", line 159, in <module>; configuration=configuration; File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/core.py"", line 135, in setup; config = configuration(); File ""/tmp/pip-build-hg437fn6/qutip/setup.py"", line 135, in configuration; config.add_subpackage('qutip'); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 908, in _get_configuration_from_setup_py; config = setup_module.configuration(*args); File ""qutip/setup.py"", line 8, in configuration; config.add_subpackage('cy'); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 883, in _get_configuration_from_setup_py; ('.py', 'U', 1)); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 234, in load_module; return load_source(name, filename, file); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 172, in load_source; module = _load(spec); File ""<frozen importlib._bootstrap>"", line 693, in _load; File ""<frozen importlib._boot",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/426#issuecomment-183253786
https://github.com/qutip/qutip/issues/426#issuecomment-183253786:1121,Modifiability,config,configuration,1121,"ommand python setup.py egg_info:; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/tmp/pip-build-hg437fn6/qutip/setup.py"", line 159, in <module>; configuration=configuration; File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/core.py"", line 135, in setup; config = configuration(); File ""/tmp/pip-build-hg437fn6/qutip/setup.py"", line 135, in configuration; config.add_subpackage('qutip'); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 908, in _get_configuration_from_setup_py; config = setup_module.configuration(*args); File ""qutip/setup.py"", line 8, in configuration; config.add_subpackage('cy'); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 883, in _get_configuration_from_setup_py; ('.py', 'U', 1)); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 234, in load_module; return load_source(name, filename, file); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 172, in load_source; module = _load(spec); File ""<frozen importlib._bootstrap>"", line 693, in _load; File ""<frozen importlib._bootstrap>"", line 673, in _load_unlocked; File ""<frozen impor",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/426#issuecomment-183253786
https://github.com/qutip/qutip/issues/426#issuecomment-183253786:1177,Modifiability,config,configuration,1177,"back (most recent call last):; File ""<string>"", line 1, in <module>; File ""/tmp/pip-build-hg437fn6/qutip/setup.py"", line 159, in <module>; configuration=configuration; File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/core.py"", line 135, in setup; config = configuration(); File ""/tmp/pip-build-hg437fn6/qutip/setup.py"", line 135, in configuration; config.add_subpackage('qutip'); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 908, in _get_configuration_from_setup_py; config = setup_module.configuration(*args); File ""qutip/setup.py"", line 8, in configuration; config.add_subpackage('cy'); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 883, in _get_configuration_from_setup_py; ('.py', 'U', 1)); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 234, in load_module; return load_source(name, filename, file); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 172, in load_source; module = _load(spec); File ""<frozen importlib._bootstrap>"", line 693, in _load; File ""<frozen importlib._bootstrap>"", line 673, in _load_unlocked; File ""<frozen importlib._bootstrap_external>"", line 662, i",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/426#issuecomment-183253786
https://github.com/qutip/qutip/issues/426#issuecomment-183253786:1192,Modifiability,config,config,1192,"back (most recent call last):; File ""<string>"", line 1, in <module>; File ""/tmp/pip-build-hg437fn6/qutip/setup.py"", line 159, in <module>; configuration=configuration; File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/core.py"", line 135, in setup; config = configuration(); File ""/tmp/pip-build-hg437fn6/qutip/setup.py"", line 135, in configuration; config.add_subpackage('qutip'); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 908, in _get_configuration_from_setup_py; config = setup_module.configuration(*args); File ""qutip/setup.py"", line 8, in configuration; config.add_subpackage('cy'); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 883, in _get_configuration_from_setup_py; ('.py', 'U', 1)); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 234, in load_module; return load_source(name, filename, file); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 172, in load_source; module = _load(spec); File ""<frozen importlib._bootstrap>"", line 693, in _load; File ""<frozen importlib._bootstrap>"", line 673, in _load_unlocked; File ""<frozen importlib._bootstrap_external>"", line 662, i",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/426#issuecomment-183253786
https://github.com/qutip/qutip/issues/426#issuecomment-183253786:92,Performance,cache,cached,92,"Note that the same holds for Cython:. ``` zsh; % pip install qutip; Collecting qutip; Using cached qutip-3.1.0.tar.gz; Complete output from command python setup.py egg_info:; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/tmp/pip-build-hg437fn6/qutip/setup.py"", line 159, in <module>; configuration=configuration; File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/core.py"", line 135, in setup; config = configuration(); File ""/tmp/pip-build-hg437fn6/qutip/setup.py"", line 135, in configuration; config.add_subpackage('qutip'); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 908, in _get_configuration_from_setup_py; config = setup_module.configuration(*args); File ""qutip/setup.py"", line 8, in configuration; config.add_subpackage('cy'); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 883, in _get_configuration_from_setup_py; ('.py', 'U', 1)); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 234, in load_module; return load_source(name, filename, file); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 172, in load_source; module = _load(spec); File",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/426#issuecomment-183253786
https://github.com/qutip/qutip/issues/427#issuecomment-203561277:219,Safety,safe,safely,219,"Any news on this? I would personnally find it particularly useful to have `cosm` and `sinm` methods on `Qobj` class. I can submit a PR with it if you want. If such methods are not to be added, I think this issue can be safely closed.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/427#issuecomment-203561277
https://github.com/qutip/qutip/issues/427#issuecomment-203563729:354,Safety,safe,safely,354,"It is already in the latest dev version on github. . > On Mar 30, 2016, at 12:13, Lucas Verney notifications@github.com wrote:; > ; > Any news on this? I would personnally find it particularly useful to have cosm and sinm methods on Qobj class. I can submit a PR with it if you want.; > ; > If such methods are not to be added, I think this issue can be safely closed.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly or view it on GitHub; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/427#issuecomment-203563729
https://github.com/qutip/qutip/pull/428#issuecomment-183608615:10,Availability,failure,failure,10,"Both this failure and the one before it are in unrelated tests. For instance, the most recent failure is in `qutip.tests.test_fidelity2`, which rather surprises me as I'd have thought that test case was quite stable.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/428#issuecomment-183608615
https://github.com/qutip/qutip/pull/428#issuecomment-183608615:94,Availability,failure,failure,94,"Both this failure and the one before it are in unrelated tests. For instance, the most recent failure is in `qutip.tests.test_fidelity2`, which rather surprises me as I'd have thought that test case was quite stable.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/428#issuecomment-183608615
https://github.com/qutip/qutip/pull/428#issuecomment-183608615:57,Testability,test,tests,57,"Both this failure and the one before it are in unrelated tests. For instance, the most recent failure is in `qutip.tests.test_fidelity2`, which rather surprises me as I'd have thought that test case was quite stable.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/428#issuecomment-183608615
https://github.com/qutip/qutip/pull/428#issuecomment-183608615:115,Testability,test,tests,115,"Both this failure and the one before it are in unrelated tests. For instance, the most recent failure is in `qutip.tests.test_fidelity2`, which rather surprises me as I'd have thought that test case was quite stable.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/428#issuecomment-183608615
https://github.com/qutip/qutip/pull/428#issuecomment-183608615:189,Testability,test,test,189,"Both this failure and the one before it are in unrelated tests. For instance, the most recent failure is in `qutip.tests.test_fidelity2`, which rather surprises me as I'd have thought that test case was quite stable.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/428#issuecomment-183608615
https://github.com/qutip/qutip/pull/428#issuecomment-183612808:13,Availability,failure,failures,13,"Similar test failures are affecting #429, with `qutip.tests.test_subsys_apply` now raising assertion errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/428#issuecomment-183612808
https://github.com/qutip/qutip/pull/428#issuecomment-183612808:101,Availability,error,errors,101,"Similar test failures are affecting #429, with `qutip.tests.test_subsys_apply` now raising assertion errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/428#issuecomment-183612808
https://github.com/qutip/qutip/pull/428#issuecomment-183612808:8,Testability,test,test,8,"Similar test failures are affecting #429, with `qutip.tests.test_subsys_apply` now raising assertion errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/428#issuecomment-183612808
https://github.com/qutip/qutip/pull/428#issuecomment-183612808:54,Testability,test,tests,54,"Similar test failures are affecting #429, with `qutip.tests.test_subsys_apply` now raising assertion errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/428#issuecomment-183612808
https://github.com/qutip/qutip/pull/428#issuecomment-183612808:91,Testability,assert,assertion,91,"Similar test failures are affecting #429, with `qutip.tests.test_subsys_apply` now raising assertion errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/428#issuecomment-183612808
https://github.com/qutip/qutip/pull/428#issuecomment-184068338:41,Testability,test,tests,41,For want of another idea I restarted the tests,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/428#issuecomment-184068338
https://github.com/qutip/qutip/pull/428#issuecomment-184069261:143,Availability,down,down,143,"Sounds good. I restarted once earlier and it failed on a different test, such that I think we should possibly create a new Issue to help track down which tests are randomly failing and why.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/428#issuecomment-184069261
https://github.com/qutip/qutip/pull/428#issuecomment-184069261:67,Testability,test,test,67,"Sounds good. I restarted once earlier and it failed on a different test, such that I think we should possibly create a new Issue to help track down which tests are randomly failing and why.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/428#issuecomment-184069261
https://github.com/qutip/qutip/pull/428#issuecomment-184069261:154,Testability,test,tests,154,"Sounds good. I restarted once earlier and it failed on a different test, such that I think we should possibly create a new Issue to help track down which tests are randomly failing and why.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/428#issuecomment-184069261
https://github.com/qutip/qutip/pull/428#issuecomment-184074941:176,Availability,failure,failures,176,"Sounds good, we should definitely make sure that the tests all work for 3.2; final. In the meantime, I think we should continue to merge in fixes when; its clear that the test failures are unrelated. On Mon, Feb 15, 2016 at 4:52 PM Alexander Pitchford <; notifications@github.com> wrote:. > Yes, I was thinking the same thing. I will open an issue now.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/pull/428#issuecomment-184074750.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/428#issuecomment-184074941
https://github.com/qutip/qutip/pull/428#issuecomment-184074941:53,Testability,test,tests,53,"Sounds good, we should definitely make sure that the tests all work for 3.2; final. In the meantime, I think we should continue to merge in fixes when; its clear that the test failures are unrelated. On Mon, Feb 15, 2016 at 4:52 PM Alexander Pitchford <; notifications@github.com> wrote:. > Yes, I was thinking the same thing. I will open an issue now.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/pull/428#issuecomment-184074750.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/428#issuecomment-184074941
https://github.com/qutip/qutip/pull/428#issuecomment-184074941:171,Testability,test,test,171,"Sounds good, we should definitely make sure that the tests all work for 3.2; final. In the meantime, I think we should continue to merge in fixes when; its clear that the test failures are unrelated. On Mon, Feb 15, 2016 at 4:52 PM Alexander Pitchford <; notifications@github.com> wrote:. > Yes, I was thinking the same thing. I will open an issue now.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/pull/428#issuecomment-184074750.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/428#issuecomment-184074941
https://github.com/qutip/qutip/pull/428#issuecomment-184074941:156,Usability,clear,clear,156,"Sounds good, we should definitely make sure that the tests all work for 3.2; final. In the meantime, I think we should continue to merge in fixes when; its clear that the test failures are unrelated. On Mon, Feb 15, 2016 at 4:52 PM Alexander Pitchford <; notifications@github.com> wrote:. > Yes, I was thinking the same thing. I will open an issue now.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/pull/428#issuecomment-184074750.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/428#issuecomment-184074941
https://github.com/qutip/qutip/issues/430#issuecomment-184077054:60,Availability,failure,failures,60,"At least two tests have been observed to generate unrelated failures:; - `qutip.tests.test_subsys_apply`; - `qutip.tests.test_fidelity2`. I haven't seen any others recently (at least, not since resolving #425), but if we observe any, we should add them here so that we can be sure everything works for 3.2.0.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/430#issuecomment-184077054
https://github.com/qutip/qutip/issues/430#issuecomment-184077054:13,Testability,test,tests,13,"At least two tests have been observed to generate unrelated failures:; - `qutip.tests.test_subsys_apply`; - `qutip.tests.test_fidelity2`. I haven't seen any others recently (at least, not since resolving #425), but if we observe any, we should add them here so that we can be sure everything works for 3.2.0.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/430#issuecomment-184077054
https://github.com/qutip/qutip/issues/430#issuecomment-184077054:80,Testability,test,tests,80,"At least two tests have been observed to generate unrelated failures:; - `qutip.tests.test_subsys_apply`; - `qutip.tests.test_fidelity2`. I haven't seen any others recently (at least, not since resolving #425), but if we observe any, we should add them here so that we can be sure everything works for 3.2.0.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/430#issuecomment-184077054
https://github.com/qutip/qutip/issues/430#issuecomment-184077054:115,Testability,test,tests,115,"At least two tests have been observed to generate unrelated failures:; - `qutip.tests.test_subsys_apply`; - `qutip.tests.test_fidelity2`. I haven't seen any others recently (at least, not since resolving #425), but if we observe any, we should add them here so that we can be sure everything works for 3.2.0.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/430#issuecomment-184077054
https://github.com/qutip/qutip/issues/430#issuecomment-184881659:67,Availability,error,error,67,"We have not modified the sp_eigs code in some time. Also, the only error that I have ever seen is subsys_apply. Taking care of that test would cure most, if not all, of our issues.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/430#issuecomment-184881659
https://github.com/qutip/qutip/issues/430#issuecomment-184881659:132,Testability,test,test,132,"We have not modified the sp_eigs code in some time. Also, the only error that I have ever seen is subsys_apply. Taking care of that test would cure most, if not all, of our issues.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/430#issuecomment-184881659
https://github.com/qutip/qutip/issues/430#issuecomment-186011649:44,Availability,error,error,44,The most recent three PR should resolve all error and warnings in the tests. I will merge them all later today unless there any objections,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/430#issuecomment-186011649
https://github.com/qutip/qutip/issues/430#issuecomment-186011649:70,Testability,test,tests,70,The most recent three PR should resolve all error and warnings in the tests. I will merge them all later today unless there any objections,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/430#issuecomment-186011649
https://github.com/qutip/qutip/issues/432#issuecomment-184466115:16,Safety,avoid,avoid,16,"Yes, you should avoid printing such a large object. I imagine the memoryerror occurs when it is generating the full() representation for printing. ```; q = qutip.tensor(qutip.destroy(20), qutip.destroy(20), qutip.destroy(20)); ```. would avoid the object being printed in the notebook.; I have no experience of working with such a large object though, so I can't say that you would be able to anything useful with it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/432#issuecomment-184466115
https://github.com/qutip/qutip/issues/432#issuecomment-184466115:238,Safety,avoid,avoid,238,"Yes, you should avoid printing such a large object. I imagine the memoryerror occurs when it is generating the full() representation for printing. ```; q = qutip.tensor(qutip.destroy(20), qutip.destroy(20), qutip.destroy(20)); ```. would avoid the object being printed in the notebook.; I have no experience of working with such a large object though, so I can't say that you would be able to anything useful with it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/432#issuecomment-184466115
https://github.com/qutip/qutip/issues/432#issuecomment-184881219:14,Availability,error,error,14,"I also get no error. The user already has access to Q.data, so if this is what they want, then it is already available. I do not see any benefit of changing the display output.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/432#issuecomment-184881219
https://github.com/qutip/qutip/issues/432#issuecomment-184881219:109,Availability,avail,available,109,"I also get no error. The user already has access to Q.data, so if this is what they want, then it is already available. I do not see any benefit of changing the display output.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/432#issuecomment-184881219
https://github.com/qutip/qutip/issues/432#issuecomment-184881219:42,Security,access,access,42,"I also get no error. The user already has access to Q.data, so if this is what they want, then it is already available. I do not see any benefit of changing the display output.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/432#issuecomment-184881219
https://github.com/qutip/qutip/issues/433#issuecomment-185792948:44,Energy Efficiency,reduce,reduce,44,"All the same, I'd very much like to further reduce warnings. I've literally had Firefox crash trying to load the entire Travis logs.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/433#issuecomment-185792948
https://github.com/qutip/qutip/issues/433#issuecomment-185792948:104,Performance,load,load,104,"All the same, I'd very much like to further reduce warnings. I've literally had Firefox crash trying to load the entire Travis logs.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/433#issuecomment-185792948
https://github.com/qutip/qutip/issues/433#issuecomment-185792948:127,Testability,log,logs,127,"All the same, I'd very much like to further reduce warnings. I've literally had Firefox crash trying to load the entire Travis logs.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/433#issuecomment-185792948
https://github.com/qutip/qutip/pull/434#issuecomment-185274058:45,Availability,error,errors,45,Looks like plenty of warnings still and some errors in Python3.; Will pick up again tomorrow.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/434#issuecomment-185274058
https://github.com/qutip/qutip/pull/435#issuecomment-185802054:26,Availability,Toler,Tolerances,26,"I think that makes sense. Tolerances of 1e-12 are a bit ridiculous to insist upon for a trace norm, since that scales with the dimension.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/435#issuecomment-185802054
https://github.com/qutip/qutip/issues/438#issuecomment-186747186:26,Testability,test,test,26,"I finally got a chance to test the intel MKL on my workstation with 12 cores. For larger systems I ma getting about a 6x speed-up. On the previous system it was 4 cores, but showed only a ~2x speed up. So for many core systems, I do see noticeable improvement when the Hilbert space becomes large.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/438#issuecomment-186747186
https://github.com/qutip/qutip/issues/438#issuecomment-186782990:183,Deployability,release,released,183,"Is it ok if sneak in parallelisation of the HEOM stuff into this issue? A bunch of groups have done it already, and it apparently gives some advantages, but only Tanimura himself has released code and details showing their approach http://pubs.acs.org/doi/abs/10.1021/acs.jctc.5b00488?journalCode=jctcce. I was talking to alex about importing their code with cython (assuming they allow it, they haven't specified a licence that I noticed). Otherwise, their approach seems to be to do a taylor series expansion of the propagator, and do all the resulting matrix multiplication stuff on a GPU. Though I guess there's something tricky involving memory in that last step.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/438#issuecomment-186782990
https://github.com/qutip/qutip/issues/438#issuecomment-186864518:978,Availability,avail,available,978,"Assuming you have Anaconda 2.5 installed (so that you can use the Intel MKL on all platforms), the default number of threads is one. Therefore, you don't get much benefit. To change the number of threads used you can do:. ``` python; import mkl; mkl.set_num_threads(N); ```. or in QuTiP it is easy to set using:. ``` python; n_threads = hardware_info()['cpus']; mkl.set_num_threads(n_threads); ```. One can not access the spare MKL routines directly as there is no support in the scipy.sparse library. However, you can get to all of the functions using ctypes. An example of complex SpMV is here:. https://gist.github.com/nonhermitian/74c3ddbbd006b2f8d306. The only issue with the attached method, is that finding the MKL runtime library is platform dependent (maybe should file an issue with the Anaconda people?). Therefore, it is a bit cumbersome to work with. Moreover, it is not possible to access these routines via Cython as they do not have any of the development stuff available. That may not really be an issue at the end of the day though as one needs quite a large system to get any benefit, and at large Hilbert dimensions, the overhead from calling Python funcs. directly is not an issue. I will be chatting with the [Intel Python](https://software.intel.com/en-us/python-distribution) people tomorrow to give them some suggestions and talk about our project. Hopefully we can hash out some plan to make our life a bit easier, and take advantage of the MKL tools. Their parallel direct sparse solver may also be of interest.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/438#issuecomment-186864518
https://github.com/qutip/qutip/issues/438#issuecomment-186864518:31,Deployability,install,installed,31,"Assuming you have Anaconda 2.5 installed (so that you can use the Intel MKL on all platforms), the default number of threads is one. Therefore, you don't get much benefit. To change the number of threads used you can do:. ``` python; import mkl; mkl.set_num_threads(N); ```. or in QuTiP it is easy to set using:. ``` python; n_threads = hardware_info()['cpus']; mkl.set_num_threads(n_threads); ```. One can not access the spare MKL routines directly as there is no support in the scipy.sparse library. However, you can get to all of the functions using ctypes. An example of complex SpMV is here:. https://gist.github.com/nonhermitian/74c3ddbbd006b2f8d306. The only issue with the attached method, is that finding the MKL runtime library is platform dependent (maybe should file an issue with the Anaconda people?). Therefore, it is a bit cumbersome to work with. Moreover, it is not possible to access these routines via Cython as they do not have any of the development stuff available. That may not really be an issue at the end of the day though as one needs quite a large system to get any benefit, and at large Hilbert dimensions, the overhead from calling Python funcs. directly is not an issue. I will be chatting with the [Intel Python](https://software.intel.com/en-us/python-distribution) people tomorrow to give them some suggestions and talk about our project. Hopefully we can hash out some plan to make our life a bit easier, and take advantage of the MKL tools. Their parallel direct sparse solver may also be of interest.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/438#issuecomment-186864518
https://github.com/qutip/qutip/issues/438#issuecomment-186864518:432,Integrability,rout,routines,432,"Assuming you have Anaconda 2.5 installed (so that you can use the Intel MKL on all platforms), the default number of threads is one. Therefore, you don't get much benefit. To change the number of threads used you can do:. ``` python; import mkl; mkl.set_num_threads(N); ```. or in QuTiP it is easy to set using:. ``` python; n_threads = hardware_info()['cpus']; mkl.set_num_threads(n_threads); ```. One can not access the spare MKL routines directly as there is no support in the scipy.sparse library. However, you can get to all of the functions using ctypes. An example of complex SpMV is here:. https://gist.github.com/nonhermitian/74c3ddbbd006b2f8d306. The only issue with the attached method, is that finding the MKL runtime library is platform dependent (maybe should file an issue with the Anaconda people?). Therefore, it is a bit cumbersome to work with. Moreover, it is not possible to access these routines via Cython as they do not have any of the development stuff available. That may not really be an issue at the end of the day though as one needs quite a large system to get any benefit, and at large Hilbert dimensions, the overhead from calling Python funcs. directly is not an issue. I will be chatting with the [Intel Python](https://software.intel.com/en-us/python-distribution) people tomorrow to give them some suggestions and talk about our project. Hopefully we can hash out some plan to make our life a bit easier, and take advantage of the MKL tools. Their parallel direct sparse solver may also be of interest.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/438#issuecomment-186864518
https://github.com/qutip/qutip/issues/438#issuecomment-186864518:750,Integrability,depend,dependent,750,"Assuming you have Anaconda 2.5 installed (so that you can use the Intel MKL on all platforms), the default number of threads is one. Therefore, you don't get much benefit. To change the number of threads used you can do:. ``` python; import mkl; mkl.set_num_threads(N); ```. or in QuTiP it is easy to set using:. ``` python; n_threads = hardware_info()['cpus']; mkl.set_num_threads(n_threads); ```. One can not access the spare MKL routines directly as there is no support in the scipy.sparse library. However, you can get to all of the functions using ctypes. An example of complex SpMV is here:. https://gist.github.com/nonhermitian/74c3ddbbd006b2f8d306. The only issue with the attached method, is that finding the MKL runtime library is platform dependent (maybe should file an issue with the Anaconda people?). Therefore, it is a bit cumbersome to work with. Moreover, it is not possible to access these routines via Cython as they do not have any of the development stuff available. That may not really be an issue at the end of the day though as one needs quite a large system to get any benefit, and at large Hilbert dimensions, the overhead from calling Python funcs. directly is not an issue. I will be chatting with the [Intel Python](https://software.intel.com/en-us/python-distribution) people tomorrow to give them some suggestions and talk about our project. Hopefully we can hash out some plan to make our life a bit easier, and take advantage of the MKL tools. Their parallel direct sparse solver may also be of interest.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/438#issuecomment-186864518
https://github.com/qutip/qutip/issues/438#issuecomment-186864518:909,Integrability,rout,routines,909,"Assuming you have Anaconda 2.5 installed (so that you can use the Intel MKL on all platforms), the default number of threads is one. Therefore, you don't get much benefit. To change the number of threads used you can do:. ``` python; import mkl; mkl.set_num_threads(N); ```. or in QuTiP it is easy to set using:. ``` python; n_threads = hardware_info()['cpus']; mkl.set_num_threads(n_threads); ```. One can not access the spare MKL routines directly as there is no support in the scipy.sparse library. However, you can get to all of the functions using ctypes. An example of complex SpMV is here:. https://gist.github.com/nonhermitian/74c3ddbbd006b2f8d306. The only issue with the attached method, is that finding the MKL runtime library is platform dependent (maybe should file an issue with the Anaconda people?). Therefore, it is a bit cumbersome to work with. Moreover, it is not possible to access these routines via Cython as they do not have any of the development stuff available. That may not really be an issue at the end of the day though as one needs quite a large system to get any benefit, and at large Hilbert dimensions, the overhead from calling Python funcs. directly is not an issue. I will be chatting with the [Intel Python](https://software.intel.com/en-us/python-distribution) people tomorrow to give them some suggestions and talk about our project. Hopefully we can hash out some plan to make our life a bit easier, and take advantage of the MKL tools. Their parallel direct sparse solver may also be of interest.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/438#issuecomment-186864518
https://github.com/qutip/qutip/issues/438#issuecomment-186864518:411,Security,access,access,411,"Assuming you have Anaconda 2.5 installed (so that you can use the Intel MKL on all platforms), the default number of threads is one. Therefore, you don't get much benefit. To change the number of threads used you can do:. ``` python; import mkl; mkl.set_num_threads(N); ```. or in QuTiP it is easy to set using:. ``` python; n_threads = hardware_info()['cpus']; mkl.set_num_threads(n_threads); ```. One can not access the spare MKL routines directly as there is no support in the scipy.sparse library. However, you can get to all of the functions using ctypes. An example of complex SpMV is here:. https://gist.github.com/nonhermitian/74c3ddbbd006b2f8d306. The only issue with the attached method, is that finding the MKL runtime library is platform dependent (maybe should file an issue with the Anaconda people?). Therefore, it is a bit cumbersome to work with. Moreover, it is not possible to access these routines via Cython as they do not have any of the development stuff available. That may not really be an issue at the end of the day though as one needs quite a large system to get any benefit, and at large Hilbert dimensions, the overhead from calling Python funcs. directly is not an issue. I will be chatting with the [Intel Python](https://software.intel.com/en-us/python-distribution) people tomorrow to give them some suggestions and talk about our project. Hopefully we can hash out some plan to make our life a bit easier, and take advantage of the MKL tools. Their parallel direct sparse solver may also be of interest.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/438#issuecomment-186864518
https://github.com/qutip/qutip/issues/438#issuecomment-186864518:896,Security,access,access,896,"Assuming you have Anaconda 2.5 installed (so that you can use the Intel MKL on all platforms), the default number of threads is one. Therefore, you don't get much benefit. To change the number of threads used you can do:. ``` python; import mkl; mkl.set_num_threads(N); ```. or in QuTiP it is easy to set using:. ``` python; n_threads = hardware_info()['cpus']; mkl.set_num_threads(n_threads); ```. One can not access the spare MKL routines directly as there is no support in the scipy.sparse library. However, you can get to all of the functions using ctypes. An example of complex SpMV is here:. https://gist.github.com/nonhermitian/74c3ddbbd006b2f8d306. The only issue with the attached method, is that finding the MKL runtime library is platform dependent (maybe should file an issue with the Anaconda people?). Therefore, it is a bit cumbersome to work with. Moreover, it is not possible to access these routines via Cython as they do not have any of the development stuff available. That may not really be an issue at the end of the day though as one needs quite a large system to get any benefit, and at large Hilbert dimensions, the overhead from calling Python funcs. directly is not an issue. I will be chatting with the [Intel Python](https://software.intel.com/en-us/python-distribution) people tomorrow to give them some suggestions and talk about our project. Hopefully we can hash out some plan to make our life a bit easier, and take advantage of the MKL tools. Their parallel direct sparse solver may also be of interest.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/438#issuecomment-186864518
https://github.com/qutip/qutip/issues/438#issuecomment-186864518:1391,Security,hash,hash,1391,"Assuming you have Anaconda 2.5 installed (so that you can use the Intel MKL on all platforms), the default number of threads is one. Therefore, you don't get much benefit. To change the number of threads used you can do:. ``` python; import mkl; mkl.set_num_threads(N); ```. or in QuTiP it is easy to set using:. ``` python; n_threads = hardware_info()['cpus']; mkl.set_num_threads(n_threads); ```. One can not access the spare MKL routines directly as there is no support in the scipy.sparse library. However, you can get to all of the functions using ctypes. An example of complex SpMV is here:. https://gist.github.com/nonhermitian/74c3ddbbd006b2f8d306. The only issue with the attached method, is that finding the MKL runtime library is platform dependent (maybe should file an issue with the Anaconda people?). Therefore, it is a bit cumbersome to work with. Moreover, it is not possible to access these routines via Cython as they do not have any of the development stuff available. That may not really be an issue at the end of the day though as one needs quite a large system to get any benefit, and at large Hilbert dimensions, the overhead from calling Python funcs. directly is not an issue. I will be chatting with the [Intel Python](https://software.intel.com/en-us/python-distribution) people tomorrow to give them some suggestions and talk about our project. Hopefully we can hash out some plan to make our life a bit easier, and take advantage of the MKL tools. Their parallel direct sparse solver may also be of interest.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/438#issuecomment-186864518
https://github.com/qutip/qutip/issues/438#issuecomment-215176723:36,Performance,perform,performs,36,"I have written a parallel spmv that performs quite well. Sadly, only compiles on linux since it uses openmp. Will create a pull tonight",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/438#issuecomment-215176723
https://github.com/qutip/qutip/issues/438#issuecomment-277362135:10,Deployability,update,updated,10,"I have an updated version of this using our new spmv code. Should be coming in the next couple of days. Lots of underlying stuff needs to be done for this to be integrated, and turned on automatically. Checked on Win using mingwpy and it works as well. Since the clang with OSX does not have openmp support, that is the only platform where some work needs to be done.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/438#issuecomment-277362135
https://github.com/qutip/qutip/issues/438#issuecomment-277362135:161,Deployability,integrat,integrated,161,"I have an updated version of this using our new spmv code. Should be coming in the next couple of days. Lots of underlying stuff needs to be done for this to be integrated, and turned on automatically. Checked on Win using mingwpy and it works as well. Since the clang with OSX does not have openmp support, that is the only platform where some work needs to be done.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/438#issuecomment-277362135
https://github.com/qutip/qutip/issues/438#issuecomment-277362135:161,Integrability,integrat,integrated,161,"I have an updated version of this using our new spmv code. Should be coming in the next couple of days. Lots of underlying stuff needs to be done for this to be integrated, and turned on automatically. Checked on Win using mingwpy and it works as well. Since the clang with OSX does not have openmp support, that is the only platform where some work needs to be done.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/438#issuecomment-277362135
https://github.com/qutip/qutip/issues/438#issuecomment-277468035:67,Deployability,install,install,67,"Here is the method for getting OPENMP on OSX using homebrew:. brew install gcc --without-multilib (takes a couple of hours to build). after which you can install QuTiP using:. CC=gcc-6 python setup.py install. The tests run without any ABI incompatibilities so, with this method, all platforms should be able to use OPENMP and parallel tools.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/438#issuecomment-277468035
https://github.com/qutip/qutip/issues/438#issuecomment-277468035:154,Deployability,install,install,154,"Here is the method for getting OPENMP on OSX using homebrew:. brew install gcc --without-multilib (takes a couple of hours to build). after which you can install QuTiP using:. CC=gcc-6 python setup.py install. The tests run without any ABI incompatibilities so, with this method, all platforms should be able to use OPENMP and parallel tools.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/438#issuecomment-277468035
https://github.com/qutip/qutip/issues/438#issuecomment-277468035:201,Deployability,install,install,201,"Here is the method for getting OPENMP on OSX using homebrew:. brew install gcc --without-multilib (takes a couple of hours to build). after which you can install QuTiP using:. CC=gcc-6 python setup.py install. The tests run without any ABI incompatibilities so, with this method, all platforms should be able to use OPENMP and parallel tools.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/438#issuecomment-277468035
https://github.com/qutip/qutip/issues/438#issuecomment-277468035:214,Testability,test,tests,214,"Here is the method for getting OPENMP on OSX using homebrew:. brew install gcc --without-multilib (takes a couple of hours to build). after which you can install QuTiP using:. CC=gcc-6 python setup.py install. The tests run without any ABI incompatibilities so, with this method, all platforms should be able to use OPENMP and parallel tools.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/438#issuecomment-277468035
https://github.com/qutip/qutip/issues/439#issuecomment-186524698:29,Deployability,install,install,29,"Yes, I have not been able to install mcf90 under anaconda.; I think I remember seeing some discussion suggesting that the mcf90 has little or any performance improvement over the standard mcsolver. I have not tried myself. Being an anaconda user, this would take some effort for me.; I think that if it is not offering much greater performance, then we should just exclude it from the conda package.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/439#issuecomment-186524698
https://github.com/qutip/qutip/issues/439#issuecomment-186524698:146,Performance,perform,performance,146,"Yes, I have not been able to install mcf90 under anaconda.; I think I remember seeing some discussion suggesting that the mcf90 has little or any performance improvement over the standard mcsolver. I have not tried myself. Being an anaconda user, this would take some effort for me.; I think that if it is not offering much greater performance, then we should just exclude it from the conda package.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/439#issuecomment-186524698
https://github.com/qutip/qutip/issues/439#issuecomment-186524698:332,Performance,perform,performance,332,"Yes, I have not been able to install mcf90 under anaconda.; I think I remember seeing some discussion suggesting that the mcf90 has little or any performance improvement over the standard mcsolver. I have not tried myself. Being an anaconda user, this would take some effort for me.; I think that if it is not offering much greater performance, then we should just exclude it from the conda package.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/439#issuecomment-186524698
https://github.com/qutip/qutip/issues/439#issuecomment-221096657:97,Performance,perform,performance,97,I personally haven't used mcf90 for a looong time. If it is true that it does not give much of a performance improvement any more I think it makes sense to phase it out.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/439#issuecomment-221096657
https://github.com/qutip/qutip/issues/439#issuecomment-281571152:47,Deployability,install,installation,47,"Since we are now using Anaconda as the default installation platform, I think that it is time to move the mcf90 module to its own installer. This can be done in Pull #648, with the files left where they are, and then moved to another install when we get around to it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/439#issuecomment-281571152
https://github.com/qutip/qutip/issues/439#issuecomment-281571152:130,Deployability,install,installer,130,"Since we are now using Anaconda as the default installation platform, I think that it is time to move the mcf90 module to its own installer. This can be done in Pull #648, with the files left where they are, and then moved to another install when we get around to it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/439#issuecomment-281571152
https://github.com/qutip/qutip/issues/439#issuecomment-281571152:234,Deployability,install,install,234,"Since we are now using Anaconda as the default installation platform, I think that it is time to move the mcf90 module to its own installer. This can be done in Pull #648, with the files left where they are, and then moved to another install when we get around to it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/439#issuecomment-281571152
https://github.com/qutip/qutip/issues/439#issuecomment-281725581:18,Deployability,install,installing,18,I agree. Problems installing with the mcf90 option do cause quite a lot of confusion with new users,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/439#issuecomment-281725581
https://github.com/qutip/qutip/pull/440#issuecomment-187062059:143,Energy Efficiency,efficient,efficient,143,"Just a question: If we can use la.sinm and la.cosm in the tests, why not use it in the qobj method? Is the expm based method likely to be more efficient?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/440#issuecomment-187062059
https://github.com/qutip/qutip/pull/440#issuecomment-187062059:58,Testability,test,tests,58,"Just a question: If we can use la.sinm and la.cosm in the tests, why not use it in the qobj method? Is the expm based method likely to be more efficient?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/440#issuecomment-187062059
https://github.com/qutip/qutip/pull/440#issuecomment-187159975:31,Testability,test,tests,31,"Yes that is a typo. But as the tests pass, it shows that that method is never used. Usually q.isherm does the job. Will likely depreciate it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/440#issuecomment-187159975
https://github.com/qutip/qutip/issues/441#issuecomment-464298751:207,Safety,predict,predict,207,"I think this is still relevant and could be a topic of work for future google SoC students or other students. . Recently I met Johannes Bausch who at Caltech used the algorithm toolbox for some fun example (predict the winner of the [world cup](https://quantumfrontiers.com/2018/07/02/the-world-cup-from-a-quantum-perspective/)), but this points to the fact that the QIP suite is still used. . Also, there might be room for basic I/O functionality to QiSKit and Rigetti. This quantum compiler integrability would further drive interest from the educational point of view. QuTiP is the best playground to learn realistic quantum mechanics and the notion of a compiler back-end could prove enticing.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/441#issuecomment-464298751
https://github.com/qutip/qutip/issues/441#issuecomment-464298751:604,Usability,learn,learn,604,"I think this is still relevant and could be a topic of work for future google SoC students or other students. . Recently I met Johannes Bausch who at Caltech used the algorithm toolbox for some fun example (predict the winner of the [world cup](https://quantumfrontiers.com/2018/07/02/the-world-cup-from-a-quantum-perspective/)), but this points to the fact that the QIP suite is still used. . Also, there might be room for basic I/O functionality to QiSKit and Rigetti. This quantum compiler integrability would further drive interest from the educational point of view. QuTiP is the best playground to learn realistic quantum mechanics and the notion of a compiler back-end could prove enticing.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/441#issuecomment-464298751
https://github.com/qutip/qutip/issues/441#issuecomment-573581279:166,Availability,avail,available,166,Some of these points have been addressed by #1065. The rest could become also a [project](https://github.com/qutip/qutip/projects; ) and be added also to the wiki as available project.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/441#issuecomment-573581279
https://github.com/qutip/qutip/issues/442#issuecomment-2005373020:744,Availability,robust,robust,744,"Hi @DnMGalan totally forgot this was up!. I think the main code has been iterated on a few times, but can still be improved. Maybe (1) was done already (I think... ). However (2) and (3) are still open. On (2) as a complementary thing, I recently tried the method in appendix A of this paper for calculating finite time moments and cumulants and stuff https://arxiv.org/abs/1012.0750 It works very nicely. . Interestingly, we can also do it a different way with autograd in Jax, taking derivatives of the whole generating function equation of motion directly. also seemed to work pretty well (seemed a little more efficient). I have some basic notebooks of both of these things, can share with you, and we can think about making it generic and robust. (3) I am a little rusty on, we can discuss about it next week. (christian flindt is also visiting, so we can grill him about it!)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/442#issuecomment-2005373020
https://github.com/qutip/qutip/issues/442#issuecomment-2005373020:614,Energy Efficiency,efficient,efficient,614,"Hi @DnMGalan totally forgot this was up!. I think the main code has been iterated on a few times, but can still be improved. Maybe (1) was done already (I think... ). However (2) and (3) are still open. On (2) as a complementary thing, I recently tried the method in appendix A of this paper for calculating finite time moments and cumulants and stuff https://arxiv.org/abs/1012.0750 It works very nicely. . Interestingly, we can also do it a different way with autograd in Jax, taking derivatives of the whole generating function equation of motion directly. also seemed to work pretty well (seemed a little more efficient). I have some basic notebooks of both of these things, can share with you, and we can think about making it generic and robust. (3) I am a little rusty on, we can discuss about it next week. (christian flindt is also visiting, so we can grill him about it!)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/442#issuecomment-2005373020
https://github.com/qutip/qutip/issues/442#issuecomment-2008309442:137,Deployability,update,updates,137,"I completely understand it @nwlambert, the issue was open in 2016! I had doubts that you were still working on it until I saw the latest updates in the new versions of qutip. Please if you can, I would appreciate if you could share the notebooks with me. They sound really interesting to work on. Regarding point 3, I will try to read some information about it before next week. Do you have any papers or documents in mind that you would recommend?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/442#issuecomment-2008309442
https://github.com/qutip/qutip/pull/443#issuecomment-187578137:309,Modifiability,config,config,309,"Yes, looks good to me. Think you should merge sooner rather than later. btw these other tests have appeared due trying to make this conda-forge package. Looks like I will have to create some kind of solution file for the appveyor one to work. However, nice to see the circleci one worked without any specific config.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/443#issuecomment-187578137
https://github.com/qutip/qutip/pull/443#issuecomment-187578137:88,Testability,test,tests,88,"Yes, looks good to me. Think you should merge sooner rather than later. btw these other tests have appeared due trying to make this conda-forge package. Looks like I will have to create some kind of solution file for the appveyor one to work. However, nice to see the circleci one worked without any specific config.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/443#issuecomment-187578137
https://github.com/qutip/qutip/issues/444#issuecomment-190621256:179,Safety,avoid,avoid,179,"It's not completely contradictory: if you provide an instance of `BaseProgressBar`, it'll work. And the argument is optional. Just that on top of that, you can just say `True` to avoid instanciating yourself the progress object, and this is not documented.; Anyway, I'm just noticing, I don't know the code neither. ;)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/444#issuecomment-190621256
https://github.com/qutip/qutip/issues/445#issuecomment-190647470:209,Testability,test,testing,209,The problem is solved by myself. This is due to remain files after I uninstalling qutip 3.1.0. One ; just need to delete the whole folder 'lib.macosx-10.11-x86_64-3.5' at the position ~/.pyxbld. Then the self testing working. ---. The delete is not needed. Reopen the terminal may solve the problem,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/445#issuecomment-190647470
https://github.com/qutip/qutip/pull/446#issuecomment-192106154:57,Testability,test,tested,57,As there are comments on this I will merge now. ; I have tested extensively with the work I am doing on hsolve,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/446#issuecomment-192106154
https://github.com/qutip/qutip/issues/1518#issuecomment-2070160992:28,Usability,guid,guide,28,"We now have apidoc entries, guide pages and tutorials for stochastic.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1518#issuecomment-2070160992
https://github.com/qutip/qutip/issues/1519#issuecomment-1097176570:123,Usability,guid,guide,123,"Is this about qutip.nonmarkov.heom? If so, we can close it -- the new BoFiN HEOM added for QuTiP 4.7 includes an extensive guide.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1519#issuecomment-1097176570
https://github.com/qutip/qutip/issues/1520#issuecomment-191575504:115,Usability,guid,guide,115,"Part of the new superoperator support is covered in `guide_tensor.rst`, but there needs to be a much more complete guide to `to_chi`, `to_choi`, `to_super` and `to_kraus`, as well as of the new `superrep` attribute.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1520#issuecomment-191575504
https://github.com/qutip/qutip/issues/1521#issuecomment-497561991:86,Usability,Guid,Guide,86,I think @nwlambert and I can help with this. ; We could add some details in the Users Guide: ; 1) make a short `dynamics-reaction-coordinate.rst` file and place it in `guide/dynamics/`;; 2) link that file to the list of dynamical solvers in `dynamics.rst` inside `qutip-doc/guide/`; ; 3) add rcsolve to the list of methods cited in `apidoc/functions.rst` (unless that is self-generated); maybe this explains why in the API guide is not rendered automatically from rcsolve.py's docstrings.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1521#issuecomment-497561991
https://github.com/qutip/qutip/issues/1521#issuecomment-497561991:168,Usability,guid,guide,168,I think @nwlambert and I can help with this. ; We could add some details in the Users Guide: ; 1) make a short `dynamics-reaction-coordinate.rst` file and place it in `guide/dynamics/`;; 2) link that file to the list of dynamical solvers in `dynamics.rst` inside `qutip-doc/guide/`; ; 3) add rcsolve to the list of methods cited in `apidoc/functions.rst` (unless that is self-generated); maybe this explains why in the API guide is not rendered automatically from rcsolve.py's docstrings.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1521#issuecomment-497561991
https://github.com/qutip/qutip/issues/1521#issuecomment-497561991:274,Usability,guid,guide,274,I think @nwlambert and I can help with this. ; We could add some details in the Users Guide: ; 1) make a short `dynamics-reaction-coordinate.rst` file and place it in `guide/dynamics/`;; 2) link that file to the list of dynamical solvers in `dynamics.rst` inside `qutip-doc/guide/`; ; 3) add rcsolve to the list of methods cited in `apidoc/functions.rst` (unless that is self-generated); maybe this explains why in the API guide is not rendered automatically from rcsolve.py's docstrings.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1521#issuecomment-497561991
https://github.com/qutip/qutip/issues/1521#issuecomment-497561991:423,Usability,guid,guide,423,I think @nwlambert and I can help with this. ; We could add some details in the Users Guide: ; 1) make a short `dynamics-reaction-coordinate.rst` file and place it in `guide/dynamics/`;; 2) link that file to the list of dynamical solvers in `dynamics.rst` inside `qutip-doc/guide/`; ; 3) add rcsolve to the list of methods cited in `apidoc/functions.rst` (unless that is self-generated); maybe this explains why in the API guide is not rendered automatically from rcsolve.py's docstrings.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1521#issuecomment-497561991
https://github.com/qutip/qutip/issues/1524#issuecomment-191622423:122,Integrability,depend,dependent,122,"- [ ] Document new user-modifiable settings (`log_handler`, `colorblind_safe`).; - [ ] Document new `.qutiprc` format, OS-dependent location.; - [ ] Document new unmodifiable settings (`fortran`, `umfpack`, `ipython`).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1524#issuecomment-191622423
https://github.com/qutip/qutip/issues/447#issuecomment-192175123:41,Availability,failure,failure,41,MSVC v10 (that is for py < 35) reports a failure to find complex.h; MSVC v14 (for py35) reports issues with pyx_build (can't remember exactly),MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/447#issuecomment-192175123
https://github.com/qutip/qutip/issues/447#issuecomment-222156370:296,Availability,error,error,296,"I have looked into this a bit. Everything compiles fine except the things that require complex.h. VS 15 has this library, and MS even highlights their compatibility with C99. However, others have found that the MS complex type is not compatible with C99. Therefore, one gets a typedef conversion error. Therefore we would have to write a conversion function. Another possibility is to use the Intel compilers. I believe one can get them for free if in academics.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/447#issuecomment-222156370
https://github.com/qutip/qutip/issues/447#issuecomment-222288358:194,Deployability,patch,patch,194,"Thanks for pointing this out. I did not know that this was the case. Ironically the complex numbers are done this way to support compilers (VS in particular) that do not obey C99. The suggested patch is a bit difficult to implement as the runtime generated Cython code is compiled via pyximport and getting in there to change the c files would be a bit tricky. However, I know that the Intel compiler has no problem with the Cython code (at least on Linux). So perhaps that is the way to go for Python 3.5.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/447#issuecomment-222288358
https://github.com/qutip/qutip/issues/447#issuecomment-222801414:221,Availability,avail,available,221,"I thought that it was highly recommended to use the same compiler for; extensions that is used for python itself? Is this just an ideal rather; than a necessity?. Also, it would be ideal to try and use a compiler that is available on the; conda-forge. Not sure whether the Intel one is or not. On 28 May 2016 at 04:54, Paul Nation notifications@github.com wrote:. > Thanks for pointing this out. I did not know that this was the case.; > Ironically the complex numbers are done this way to support compilers (VS; > in particular) that do not obey C99. The suggested patch is a bit difficult; > to implement as the runtime generated Cython code is compiled via pyximport; > and getting in there to change the c files would be a bit tricky. However,; > I know that the Intel compiler has no problem with the Cython code (at; > least on Linux). So perhaps that is the way to go for Python 3.5.; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > https://github.com/qutip/qutip/issues/447#issuecomment-222288358, or mute; > the thread; > https://github.com/notifications/unsubscribe/AIxX7bilAvaPFQKZx8CtnoG8p0DEpaQ_ks5qF7xvgaJpZM4HpJf1; > .",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/447#issuecomment-222801414
https://github.com/qutip/qutip/issues/447#issuecomment-222801414:566,Deployability,patch,patch,566,"I thought that it was highly recommended to use the same compiler for; extensions that is used for python itself? Is this just an ideal rather; than a necessity?. Also, it would be ideal to try and use a compiler that is available on the; conda-forge. Not sure whether the Intel one is or not. On 28 May 2016 at 04:54, Paul Nation notifications@github.com wrote:. > Thanks for pointing this out. I did not know that this was the case.; > Ironically the complex numbers are done this way to support compilers (VS; > in particular) that do not obey C99. The suggested patch is a bit difficult; > to implement as the runtime generated Cython code is compiled via pyximport; > and getting in there to change the c files would be a bit tricky. However,; > I know that the Intel compiler has no problem with the Cython code (at; > least on Linux). So perhaps that is the way to go for Python 3.5.; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > https://github.com/qutip/qutip/issues/447#issuecomment-222288358, or mute; > the thread; > https://github.com/notifications/unsubscribe/AIxX7bilAvaPFQKZx8CtnoG8p0DEpaQ_ks5qF7xvgaJpZM4HpJf1; > .",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/447#issuecomment-222801414
https://github.com/qutip/qutip/issues/447#issuecomment-222805219:216,Testability,test,testing,216,"Well, we have been using mingw for qutip, while the Win Python has always been compiled with VS. while I agree with your statement, using VS seems not to be an option for us. I haven't had any problems in mu minimal testing.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/447#issuecomment-222805219
https://github.com/qutip/qutip/issues/447#issuecomment-222963411:475,Testability,test,testing,475,"I agree, I have also not had any problems with mingw.; The only issue seems to be that it won't work with python 3.5. Perhaps they; will fix that and solve our problem that way. On 31 May 2016 at 21:10, Paul Nation notifications@github.com wrote:. > Well, we have been using mingw for qutip, while the Win Python has always; > been compiled with VS. while I agree with your statement, using VS seems; > not to be an option for us. I haven't had any problems in mu minimal; > testing.; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > https://github.com/qutip/qutip/issues/447#issuecomment-222805219, or mute; > the thread; > https://github.com/notifications/unsubscribe/AIxX7eTvGa_WbL8VzcQgAqIkgCEEI8heks5qHJXGgaJpZM4HpJf1; > .",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/447#issuecomment-222963411
https://github.com/qutip/qutip/issues/447#issuecomment-225452247:206,Deployability,install,install,206,"Actually, it seems that now the Intel distro is built with VS15, and distutils does not know how to handle Intel compilers. However, I am sure that the earlier tech preview was all Intel, and I even had to install the Intel compilers to get anything to build. Regardless, it seems that we need to wait until mingw is supported on Py35.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/447#issuecomment-225452247
https://github.com/qutip/qutip/issues/448#issuecomment-192387820:471,Deployability,install,install,471,"It is there because one has to build all the cython modules in the cy folder. Since cython is used for time dependent stuff, we stopped packaging the c code itself and just let the user build it since cython is a required package. > On Mar 4, 2016, at 10:05, Alexander Pitchford notifications@github.com wrote:; > ; > There is a section in qutip/init.py that checks the cython version, then re cythonizes all the pyx. It prints a warning if cython is not found. So after install, during which all the cython modules get built, during the first import of qutip all the building happens again. This seems unnecessary, and is actually an issue if we are making a pre-built package. I have patched out this section in the conda-forge feedstock. All but 7 of the tests are successful.; > ; > Cython is not actually needed at run time for most of QuTiP. Why is it sometimes needed at runtime?; > ; > Should we look remove this section from the init.py, and put some warning in the methods that use cython at runtime?; > ; > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/448#issuecomment-192387820
https://github.com/qutip/qutip/issues/448#issuecomment-192387820:686,Deployability,patch,patched,686,"It is there because one has to build all the cython modules in the cy folder. Since cython is used for time dependent stuff, we stopped packaging the c code itself and just let the user build it since cython is a required package. > On Mar 4, 2016, at 10:05, Alexander Pitchford notifications@github.com wrote:; > ; > There is a section in qutip/init.py that checks the cython version, then re cythonizes all the pyx. It prints a warning if cython is not found. So after install, during which all the cython modules get built, during the first import of qutip all the building happens again. This seems unnecessary, and is actually an issue if we are making a pre-built package. I have patched out this section in the conda-forge feedstock. All but 7 of the tests are successful.; > ; > Cython is not actually needed at run time for most of QuTiP. Why is it sometimes needed at runtime?; > ; > Should we look remove this section from the init.py, and put some warning in the methods that use cython at runtime?; > ; > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/448#issuecomment-192387820
https://github.com/qutip/qutip/issues/448#issuecomment-192387820:108,Integrability,depend,dependent,108,"It is there because one has to build all the cython modules in the cy folder. Since cython is used for time dependent stuff, we stopped packaging the c code itself and just let the user build it since cython is a required package. > On Mar 4, 2016, at 10:05, Alexander Pitchford notifications@github.com wrote:; > ; > There is a section in qutip/init.py that checks the cython version, then re cythonizes all the pyx. It prints a warning if cython is not found. So after install, during which all the cython modules get built, during the first import of qutip all the building happens again. This seems unnecessary, and is actually an issue if we are making a pre-built package. I have patched out this section in the conda-forge feedstock. All but 7 of the tests are successful.; > ; > Cython is not actually needed at run time for most of QuTiP. Why is it sometimes needed at runtime?; > ; > Should we look remove this section from the init.py, and put some warning in the methods that use cython at runtime?; > ; > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/448#issuecomment-192387820
https://github.com/qutip/qutip/issues/448#issuecomment-192387820:758,Testability,test,tests,758,"It is there because one has to build all the cython modules in the cy folder. Since cython is used for time dependent stuff, we stopped packaging the c code itself and just let the user build it since cython is a required package. > On Mar 4, 2016, at 10:05, Alexander Pitchford notifications@github.com wrote:; > ; > There is a section in qutip/init.py that checks the cython version, then re cythonizes all the pyx. It prints a warning if cython is not found. So after install, during which all the cython modules get built, during the first import of qutip all the building happens again. This seems unnecessary, and is actually an issue if we are making a pre-built package. I have patched out this section in the conda-forge feedstock. All but 7 of the tests are successful.; > ; > Cython is not actually needed at run time for most of QuTiP. Why is it sometimes needed at runtime?; > ; > Should we look remove this section from the init.py, and put some warning in the methods that use cython at runtime?; > ; > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/448#issuecomment-192387820
https://github.com/qutip/qutip/issues/448#issuecomment-192570921:307,Availability,error,errors,307,"As mentioned previous I have patched out the cython check and installs in **init** in the (windows, qutip-3.1.0) conda package that I built. I have put cython as a build requirement, but not a runtime requirement. I install in an environment without cython and then run tests:; 289 tests in 690s; 7 skip, 6 errors, 1 fail. Then I install cython and mingwpy and run tests again:; 320 tests 2371s; 7 skip, 10 errors, 1 fail. I think the time dependent string format tests fail. Not sure, and will not investigate further at the moment. Would only make if they also fail in GitHub version, for which I have not tested on Windows. At no point do the extensions in qutip/cy get built again. So I think it is not necessary to pyximport.install in the **init**.py; I think we should change the message to a warning, like we have for matplotlib, to say something like 'no Cython, string type time-dependent solvers will not run'. It seems to make sense to allow people to install and use parts of the library even if they can't get a C compiler working for them. I don't understand why some tests do not run without cython. For instance, no mcsolve tests run without cython installed. I can't see cython imported in the mcsolve file. I will look into this further.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/448#issuecomment-192570921
https://github.com/qutip/qutip/issues/448#issuecomment-192570921:407,Availability,error,errors,407,"As mentioned previous I have patched out the cython check and installs in **init** in the (windows, qutip-3.1.0) conda package that I built. I have put cython as a build requirement, but not a runtime requirement. I install in an environment without cython and then run tests:; 289 tests in 690s; 7 skip, 6 errors, 1 fail. Then I install cython and mingwpy and run tests again:; 320 tests 2371s; 7 skip, 10 errors, 1 fail. I think the time dependent string format tests fail. Not sure, and will not investigate further at the moment. Would only make if they also fail in GitHub version, for which I have not tested on Windows. At no point do the extensions in qutip/cy get built again. So I think it is not necessary to pyximport.install in the **init**.py; I think we should change the message to a warning, like we have for matplotlib, to say something like 'no Cython, string type time-dependent solvers will not run'. It seems to make sense to allow people to install and use parts of the library even if they can't get a C compiler working for them. I don't understand why some tests do not run without cython. For instance, no mcsolve tests run without cython installed. I can't see cython imported in the mcsolve file. I will look into this further.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/448#issuecomment-192570921
https://github.com/qutip/qutip/issues/448#issuecomment-192570921:29,Deployability,patch,patched,29,"As mentioned previous I have patched out the cython check and installs in **init** in the (windows, qutip-3.1.0) conda package that I built. I have put cython as a build requirement, but not a runtime requirement. I install in an environment without cython and then run tests:; 289 tests in 690s; 7 skip, 6 errors, 1 fail. Then I install cython and mingwpy and run tests again:; 320 tests 2371s; 7 skip, 10 errors, 1 fail. I think the time dependent string format tests fail. Not sure, and will not investigate further at the moment. Would only make if they also fail in GitHub version, for which I have not tested on Windows. At no point do the extensions in qutip/cy get built again. So I think it is not necessary to pyximport.install in the **init**.py; I think we should change the message to a warning, like we have for matplotlib, to say something like 'no Cython, string type time-dependent solvers will not run'. It seems to make sense to allow people to install and use parts of the library even if they can't get a C compiler working for them. I don't understand why some tests do not run without cython. For instance, no mcsolve tests run without cython installed. I can't see cython imported in the mcsolve file. I will look into this further.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/448#issuecomment-192570921
https://github.com/qutip/qutip/issues/448#issuecomment-192570921:62,Deployability,install,installs,62,"As mentioned previous I have patched out the cython check and installs in **init** in the (windows, qutip-3.1.0) conda package that I built. I have put cython as a build requirement, but not a runtime requirement. I install in an environment without cython and then run tests:; 289 tests in 690s; 7 skip, 6 errors, 1 fail. Then I install cython and mingwpy and run tests again:; 320 tests 2371s; 7 skip, 10 errors, 1 fail. I think the time dependent string format tests fail. Not sure, and will not investigate further at the moment. Would only make if they also fail in GitHub version, for which I have not tested on Windows. At no point do the extensions in qutip/cy get built again. So I think it is not necessary to pyximport.install in the **init**.py; I think we should change the message to a warning, like we have for matplotlib, to say something like 'no Cython, string type time-dependent solvers will not run'. It seems to make sense to allow people to install and use parts of the library even if they can't get a C compiler working for them. I don't understand why some tests do not run without cython. For instance, no mcsolve tests run without cython installed. I can't see cython imported in the mcsolve file. I will look into this further.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/448#issuecomment-192570921
https://github.com/qutip/qutip/issues/448#issuecomment-192570921:216,Deployability,install,install,216,"As mentioned previous I have patched out the cython check and installs in **init** in the (windows, qutip-3.1.0) conda package that I built. I have put cython as a build requirement, but not a runtime requirement. I install in an environment without cython and then run tests:; 289 tests in 690s; 7 skip, 6 errors, 1 fail. Then I install cython and mingwpy and run tests again:; 320 tests 2371s; 7 skip, 10 errors, 1 fail. I think the time dependent string format tests fail. Not sure, and will not investigate further at the moment. Would only make if they also fail in GitHub version, for which I have not tested on Windows. At no point do the extensions in qutip/cy get built again. So I think it is not necessary to pyximport.install in the **init**.py; I think we should change the message to a warning, like we have for matplotlib, to say something like 'no Cython, string type time-dependent solvers will not run'. It seems to make sense to allow people to install and use parts of the library even if they can't get a C compiler working for them. I don't understand why some tests do not run without cython. For instance, no mcsolve tests run without cython installed. I can't see cython imported in the mcsolve file. I will look into this further.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/448#issuecomment-192570921
https://github.com/qutip/qutip/issues/448#issuecomment-192570921:330,Deployability,install,install,330,"As mentioned previous I have patched out the cython check and installs in **init** in the (windows, qutip-3.1.0) conda package that I built. I have put cython as a build requirement, but not a runtime requirement. I install in an environment without cython and then run tests:; 289 tests in 690s; 7 skip, 6 errors, 1 fail. Then I install cython and mingwpy and run tests again:; 320 tests 2371s; 7 skip, 10 errors, 1 fail. I think the time dependent string format tests fail. Not sure, and will not investigate further at the moment. Would only make if they also fail in GitHub version, for which I have not tested on Windows. At no point do the extensions in qutip/cy get built again. So I think it is not necessary to pyximport.install in the **init**.py; I think we should change the message to a warning, like we have for matplotlib, to say something like 'no Cython, string type time-dependent solvers will not run'. It seems to make sense to allow people to install and use parts of the library even if they can't get a C compiler working for them. I don't understand why some tests do not run without cython. For instance, no mcsolve tests run without cython installed. I can't see cython imported in the mcsolve file. I will look into this further.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/448#issuecomment-192570921
https://github.com/qutip/qutip/issues/448#issuecomment-192570921:730,Deployability,install,install,730,"As mentioned previous I have patched out the cython check and installs in **init** in the (windows, qutip-3.1.0) conda package that I built. I have put cython as a build requirement, but not a runtime requirement. I install in an environment without cython and then run tests:; 289 tests in 690s; 7 skip, 6 errors, 1 fail. Then I install cython and mingwpy and run tests again:; 320 tests 2371s; 7 skip, 10 errors, 1 fail. I think the time dependent string format tests fail. Not sure, and will not investigate further at the moment. Would only make if they also fail in GitHub version, for which I have not tested on Windows. At no point do the extensions in qutip/cy get built again. So I think it is not necessary to pyximport.install in the **init**.py; I think we should change the message to a warning, like we have for matplotlib, to say something like 'no Cython, string type time-dependent solvers will not run'. It seems to make sense to allow people to install and use parts of the library even if they can't get a C compiler working for them. I don't understand why some tests do not run without cython. For instance, no mcsolve tests run without cython installed. I can't see cython imported in the mcsolve file. I will look into this further.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/448#issuecomment-192570921
https://github.com/qutip/qutip/issues/448#issuecomment-192570921:964,Deployability,install,install,964,"As mentioned previous I have patched out the cython check and installs in **init** in the (windows, qutip-3.1.0) conda package that I built. I have put cython as a build requirement, but not a runtime requirement. I install in an environment without cython and then run tests:; 289 tests in 690s; 7 skip, 6 errors, 1 fail. Then I install cython and mingwpy and run tests again:; 320 tests 2371s; 7 skip, 10 errors, 1 fail. I think the time dependent string format tests fail. Not sure, and will not investigate further at the moment. Would only make if they also fail in GitHub version, for which I have not tested on Windows. At no point do the extensions in qutip/cy get built again. So I think it is not necessary to pyximport.install in the **init**.py; I think we should change the message to a warning, like we have for matplotlib, to say something like 'no Cython, string type time-dependent solvers will not run'. It seems to make sense to allow people to install and use parts of the library even if they can't get a C compiler working for them. I don't understand why some tests do not run without cython. For instance, no mcsolve tests run without cython installed. I can't see cython imported in the mcsolve file. I will look into this further.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/448#issuecomment-192570921
https://github.com/qutip/qutip/issues/448#issuecomment-192570921:1166,Deployability,install,installed,1166,"As mentioned previous I have patched out the cython check and installs in **init** in the (windows, qutip-3.1.0) conda package that I built. I have put cython as a build requirement, but not a runtime requirement. I install in an environment without cython and then run tests:; 289 tests in 690s; 7 skip, 6 errors, 1 fail. Then I install cython and mingwpy and run tests again:; 320 tests 2371s; 7 skip, 10 errors, 1 fail. I think the time dependent string format tests fail. Not sure, and will not investigate further at the moment. Would only make if they also fail in GitHub version, for which I have not tested on Windows. At no point do the extensions in qutip/cy get built again. So I think it is not necessary to pyximport.install in the **init**.py; I think we should change the message to a warning, like we have for matplotlib, to say something like 'no Cython, string type time-dependent solvers will not run'. It seems to make sense to allow people to install and use parts of the library even if they can't get a C compiler working for them. I don't understand why some tests do not run without cython. For instance, no mcsolve tests run without cython installed. I can't see cython imported in the mcsolve file. I will look into this further.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/448#issuecomment-192570921
https://github.com/qutip/qutip/issues/448#issuecomment-192570921:440,Integrability,depend,dependent,440,"As mentioned previous I have patched out the cython check and installs in **init** in the (windows, qutip-3.1.0) conda package that I built. I have put cython as a build requirement, but not a runtime requirement. I install in an environment without cython and then run tests:; 289 tests in 690s; 7 skip, 6 errors, 1 fail. Then I install cython and mingwpy and run tests again:; 320 tests 2371s; 7 skip, 10 errors, 1 fail. I think the time dependent string format tests fail. Not sure, and will not investigate further at the moment. Would only make if they also fail in GitHub version, for which I have not tested on Windows. At no point do the extensions in qutip/cy get built again. So I think it is not necessary to pyximport.install in the **init**.py; I think we should change the message to a warning, like we have for matplotlib, to say something like 'no Cython, string type time-dependent solvers will not run'. It seems to make sense to allow people to install and use parts of the library even if they can't get a C compiler working for them. I don't understand why some tests do not run without cython. For instance, no mcsolve tests run without cython installed. I can't see cython imported in the mcsolve file. I will look into this further.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/448#issuecomment-192570921
https://github.com/qutip/qutip/issues/448#issuecomment-192570921:787,Integrability,message,message,787,"As mentioned previous I have patched out the cython check and installs in **init** in the (windows, qutip-3.1.0) conda package that I built. I have put cython as a build requirement, but not a runtime requirement. I install in an environment without cython and then run tests:; 289 tests in 690s; 7 skip, 6 errors, 1 fail. Then I install cython and mingwpy and run tests again:; 320 tests 2371s; 7 skip, 10 errors, 1 fail. I think the time dependent string format tests fail. Not sure, and will not investigate further at the moment. Would only make if they also fail in GitHub version, for which I have not tested on Windows. At no point do the extensions in qutip/cy get built again. So I think it is not necessary to pyximport.install in the **init**.py; I think we should change the message to a warning, like we have for matplotlib, to say something like 'no Cython, string type time-dependent solvers will not run'. It seems to make sense to allow people to install and use parts of the library even if they can't get a C compiler working for them. I don't understand why some tests do not run without cython. For instance, no mcsolve tests run without cython installed. I can't see cython imported in the mcsolve file. I will look into this further.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/448#issuecomment-192570921
https://github.com/qutip/qutip/issues/448#issuecomment-192570921:889,Integrability,depend,dependent,889,"As mentioned previous I have patched out the cython check and installs in **init** in the (windows, qutip-3.1.0) conda package that I built. I have put cython as a build requirement, but not a runtime requirement. I install in an environment without cython and then run tests:; 289 tests in 690s; 7 skip, 6 errors, 1 fail. Then I install cython and mingwpy and run tests again:; 320 tests 2371s; 7 skip, 10 errors, 1 fail. I think the time dependent string format tests fail. Not sure, and will not investigate further at the moment. Would only make if they also fail in GitHub version, for which I have not tested on Windows. At no point do the extensions in qutip/cy get built again. So I think it is not necessary to pyximport.install in the **init**.py; I think we should change the message to a warning, like we have for matplotlib, to say something like 'no Cython, string type time-dependent solvers will not run'. It seems to make sense to allow people to install and use parts of the library even if they can't get a C compiler working for them. I don't understand why some tests do not run without cython. For instance, no mcsolve tests run without cython installed. I can't see cython imported in the mcsolve file. I will look into this further.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/448#issuecomment-192570921
https://github.com/qutip/qutip/issues/448#issuecomment-192570921:270,Testability,test,tests,270,"As mentioned previous I have patched out the cython check and installs in **init** in the (windows, qutip-3.1.0) conda package that I built. I have put cython as a build requirement, but not a runtime requirement. I install in an environment without cython and then run tests:; 289 tests in 690s; 7 skip, 6 errors, 1 fail. Then I install cython and mingwpy and run tests again:; 320 tests 2371s; 7 skip, 10 errors, 1 fail. I think the time dependent string format tests fail. Not sure, and will not investigate further at the moment. Would only make if they also fail in GitHub version, for which I have not tested on Windows. At no point do the extensions in qutip/cy get built again. So I think it is not necessary to pyximport.install in the **init**.py; I think we should change the message to a warning, like we have for matplotlib, to say something like 'no Cython, string type time-dependent solvers will not run'. It seems to make sense to allow people to install and use parts of the library even if they can't get a C compiler working for them. I don't understand why some tests do not run without cython. For instance, no mcsolve tests run without cython installed. I can't see cython imported in the mcsolve file. I will look into this further.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/448#issuecomment-192570921
https://github.com/qutip/qutip/issues/448#issuecomment-192570921:282,Testability,test,tests,282,"As mentioned previous I have patched out the cython check and installs in **init** in the (windows, qutip-3.1.0) conda package that I built. I have put cython as a build requirement, but not a runtime requirement. I install in an environment without cython and then run tests:; 289 tests in 690s; 7 skip, 6 errors, 1 fail. Then I install cython and mingwpy and run tests again:; 320 tests 2371s; 7 skip, 10 errors, 1 fail. I think the time dependent string format tests fail. Not sure, and will not investigate further at the moment. Would only make if they also fail in GitHub version, for which I have not tested on Windows. At no point do the extensions in qutip/cy get built again. So I think it is not necessary to pyximport.install in the **init**.py; I think we should change the message to a warning, like we have for matplotlib, to say something like 'no Cython, string type time-dependent solvers will not run'. It seems to make sense to allow people to install and use parts of the library even if they can't get a C compiler working for them. I don't understand why some tests do not run without cython. For instance, no mcsolve tests run without cython installed. I can't see cython imported in the mcsolve file. I will look into this further.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/448#issuecomment-192570921
https://github.com/qutip/qutip/issues/448#issuecomment-192570921:365,Testability,test,tests,365,"As mentioned previous I have patched out the cython check and installs in **init** in the (windows, qutip-3.1.0) conda package that I built. I have put cython as a build requirement, but not a runtime requirement. I install in an environment without cython and then run tests:; 289 tests in 690s; 7 skip, 6 errors, 1 fail. Then I install cython and mingwpy and run tests again:; 320 tests 2371s; 7 skip, 10 errors, 1 fail. I think the time dependent string format tests fail. Not sure, and will not investigate further at the moment. Would only make if they also fail in GitHub version, for which I have not tested on Windows. At no point do the extensions in qutip/cy get built again. So I think it is not necessary to pyximport.install in the **init**.py; I think we should change the message to a warning, like we have for matplotlib, to say something like 'no Cython, string type time-dependent solvers will not run'. It seems to make sense to allow people to install and use parts of the library even if they can't get a C compiler working for them. I don't understand why some tests do not run without cython. For instance, no mcsolve tests run without cython installed. I can't see cython imported in the mcsolve file. I will look into this further.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/448#issuecomment-192570921
https://github.com/qutip/qutip/issues/448#issuecomment-192570921:383,Testability,test,tests,383,"As mentioned previous I have patched out the cython check and installs in **init** in the (windows, qutip-3.1.0) conda package that I built. I have put cython as a build requirement, but not a runtime requirement. I install in an environment without cython and then run tests:; 289 tests in 690s; 7 skip, 6 errors, 1 fail. Then I install cython and mingwpy and run tests again:; 320 tests 2371s; 7 skip, 10 errors, 1 fail. I think the time dependent string format tests fail. Not sure, and will not investigate further at the moment. Would only make if they also fail in GitHub version, for which I have not tested on Windows. At no point do the extensions in qutip/cy get built again. So I think it is not necessary to pyximport.install in the **init**.py; I think we should change the message to a warning, like we have for matplotlib, to say something like 'no Cython, string type time-dependent solvers will not run'. It seems to make sense to allow people to install and use parts of the library even if they can't get a C compiler working for them. I don't understand why some tests do not run without cython. For instance, no mcsolve tests run without cython installed. I can't see cython imported in the mcsolve file. I will look into this further.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/448#issuecomment-192570921
https://github.com/qutip/qutip/issues/448#issuecomment-192570921:464,Testability,test,tests,464,"As mentioned previous I have patched out the cython check and installs in **init** in the (windows, qutip-3.1.0) conda package that I built. I have put cython as a build requirement, but not a runtime requirement. I install in an environment without cython and then run tests:; 289 tests in 690s; 7 skip, 6 errors, 1 fail. Then I install cython and mingwpy and run tests again:; 320 tests 2371s; 7 skip, 10 errors, 1 fail. I think the time dependent string format tests fail. Not sure, and will not investigate further at the moment. Would only make if they also fail in GitHub version, for which I have not tested on Windows. At no point do the extensions in qutip/cy get built again. So I think it is not necessary to pyximport.install in the **init**.py; I think we should change the message to a warning, like we have for matplotlib, to say something like 'no Cython, string type time-dependent solvers will not run'. It seems to make sense to allow people to install and use parts of the library even if they can't get a C compiler working for them. I don't understand why some tests do not run without cython. For instance, no mcsolve tests run without cython installed. I can't see cython imported in the mcsolve file. I will look into this further.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/448#issuecomment-192570921
https://github.com/qutip/qutip/issues/448#issuecomment-192570921:608,Testability,test,tested,608,"As mentioned previous I have patched out the cython check and installs in **init** in the (windows, qutip-3.1.0) conda package that I built. I have put cython as a build requirement, but not a runtime requirement. I install in an environment without cython and then run tests:; 289 tests in 690s; 7 skip, 6 errors, 1 fail. Then I install cython and mingwpy and run tests again:; 320 tests 2371s; 7 skip, 10 errors, 1 fail. I think the time dependent string format tests fail. Not sure, and will not investigate further at the moment. Would only make if they also fail in GitHub version, for which I have not tested on Windows. At no point do the extensions in qutip/cy get built again. So I think it is not necessary to pyximport.install in the **init**.py; I think we should change the message to a warning, like we have for matplotlib, to say something like 'no Cython, string type time-dependent solvers will not run'. It seems to make sense to allow people to install and use parts of the library even if they can't get a C compiler working for them. I don't understand why some tests do not run without cython. For instance, no mcsolve tests run without cython installed. I can't see cython imported in the mcsolve file. I will look into this further.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/448#issuecomment-192570921
https://github.com/qutip/qutip/issues/448#issuecomment-192570921:1083,Testability,test,tests,1083,"As mentioned previous I have patched out the cython check and installs in **init** in the (windows, qutip-3.1.0) conda package that I built. I have put cython as a build requirement, but not a runtime requirement. I install in an environment without cython and then run tests:; 289 tests in 690s; 7 skip, 6 errors, 1 fail. Then I install cython and mingwpy and run tests again:; 320 tests 2371s; 7 skip, 10 errors, 1 fail. I think the time dependent string format tests fail. Not sure, and will not investigate further at the moment. Would only make if they also fail in GitHub version, for which I have not tested on Windows. At no point do the extensions in qutip/cy get built again. So I think it is not necessary to pyximport.install in the **init**.py; I think we should change the message to a warning, like we have for matplotlib, to say something like 'no Cython, string type time-dependent solvers will not run'. It seems to make sense to allow people to install and use parts of the library even if they can't get a C compiler working for them. I don't understand why some tests do not run without cython. For instance, no mcsolve tests run without cython installed. I can't see cython imported in the mcsolve file. I will look into this further.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/448#issuecomment-192570921
https://github.com/qutip/qutip/issues/448#issuecomment-192570921:1141,Testability,test,tests,1141,"As mentioned previous I have patched out the cython check and installs in **init** in the (windows, qutip-3.1.0) conda package that I built. I have put cython as a build requirement, but not a runtime requirement. I install in an environment without cython and then run tests:; 289 tests in 690s; 7 skip, 6 errors, 1 fail. Then I install cython and mingwpy and run tests again:; 320 tests 2371s; 7 skip, 10 errors, 1 fail. I think the time dependent string format tests fail. Not sure, and will not investigate further at the moment. Would only make if they also fail in GitHub version, for which I have not tested on Windows. At no point do the extensions in qutip/cy get built again. So I think it is not necessary to pyximport.install in the **init**.py; I think we should change the message to a warning, like we have for matplotlib, to say something like 'no Cython, string type time-dependent solvers will not run'. It seems to make sense to allow people to install and use parts of the library even if they can't get a C compiler working for them. I don't understand why some tests do not run without cython. For instance, no mcsolve tests run without cython installed. I can't see cython imported in the mcsolve file. I will look into this further.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/448#issuecomment-192570921
https://github.com/qutip/qutip/issues/453#issuecomment-609449627:408,Usability,feedback,feedback,408,"Yes there is nothing in the code for this right now, feel free to propose your solution. @CaineArdayfio, there is no official assignment. If, as a user, you see something that is missing, you can just propose a solution. In general, parts of Qutip that need some attention and nobody is working on:; - Documentation and notebooks are not always up to date.; - The lattice submodule is new and we have little feedback. It could be improved greatly in both easiness to use and versatility.; - Making it work better on windows.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/453#issuecomment-609449627
https://github.com/qutip/qutip/pull/454#issuecomment-193176693:170,Modifiability,enhance,enhancements,170,"I have not put any tests in for this, because it seems like a lot of effort for something that is used as a kind of testing tool anyway. When I make my PR for the hsolve enhancements, including tests, this file will get pretty reasonable coverage.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/454#issuecomment-193176693
https://github.com/qutip/qutip/pull/454#issuecomment-193176693:19,Testability,test,tests,19,"I have not put any tests in for this, because it seems like a lot of effort for something that is used as a kind of testing tool anyway. When I make my PR for the hsolve enhancements, including tests, this file will get pretty reasonable coverage.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/454#issuecomment-193176693
https://github.com/qutip/qutip/pull/454#issuecomment-193176693:116,Testability,test,testing,116,"I have not put any tests in for this, because it seems like a lot of effort for something that is used as a kind of testing tool anyway. When I make my PR for the hsolve enhancements, including tests, this file will get pretty reasonable coverage.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/454#issuecomment-193176693
https://github.com/qutip/qutip/pull/454#issuecomment-193176693:194,Testability,test,tests,194,"I have not put any tests in for this, because it seems like a lot of effort for something that is used as a kind of testing tool anyway. When I make my PR for the hsolve enhancements, including tests, this file will get pretty reasonable coverage.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/454#issuecomment-193176693
https://github.com/qutip/qutip/pull/454#issuecomment-193501554:120,Performance,perform,performance,120,"This seems like a really good start, thanks! Building on this, we may want to explore taking a more unified approach to performance testing, as there's a number of performance-sensitive features in QuTiP. One avenue may be to write performance testing into the unit testing builds, that seems to be an [older extension for Nose](https://github.com/disqus/nose-performance), not sure if there's a better one out there.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/454#issuecomment-193501554
https://github.com/qutip/qutip/pull/454#issuecomment-193501554:164,Performance,perform,performance-sensitive,164,"This seems like a really good start, thanks! Building on this, we may want to explore taking a more unified approach to performance testing, as there's a number of performance-sensitive features in QuTiP. One avenue may be to write performance testing into the unit testing builds, that seems to be an [older extension for Nose](https://github.com/disqus/nose-performance), not sure if there's a better one out there.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/454#issuecomment-193501554
https://github.com/qutip/qutip/pull/454#issuecomment-193501554:232,Performance,perform,performance,232,"This seems like a really good start, thanks! Building on this, we may want to explore taking a more unified approach to performance testing, as there's a number of performance-sensitive features in QuTiP. One avenue may be to write performance testing into the unit testing builds, that seems to be an [older extension for Nose](https://github.com/disqus/nose-performance), not sure if there's a better one out there.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/454#issuecomment-193501554
https://github.com/qutip/qutip/pull/454#issuecomment-193501554:360,Performance,perform,performance,360,"This seems like a really good start, thanks! Building on this, we may want to explore taking a more unified approach to performance testing, as there's a number of performance-sensitive features in QuTiP. One avenue may be to write performance testing into the unit testing builds, that seems to be an [older extension for Nose](https://github.com/disqus/nose-performance), not sure if there's a better one out there.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/454#issuecomment-193501554
https://github.com/qutip/qutip/pull/454#issuecomment-193501554:132,Testability,test,testing,132,"This seems like a really good start, thanks! Building on this, we may want to explore taking a more unified approach to performance testing, as there's a number of performance-sensitive features in QuTiP. One avenue may be to write performance testing into the unit testing builds, that seems to be an [older extension for Nose](https://github.com/disqus/nose-performance), not sure if there's a better one out there.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/454#issuecomment-193501554
https://github.com/qutip/qutip/pull/454#issuecomment-193501554:244,Testability,test,testing,244,"This seems like a really good start, thanks! Building on this, we may want to explore taking a more unified approach to performance testing, as there's a number of performance-sensitive features in QuTiP. One avenue may be to write performance testing into the unit testing builds, that seems to be an [older extension for Nose](https://github.com/disqus/nose-performance), not sure if there's a better one out there.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/454#issuecomment-193501554
https://github.com/qutip/qutip/pull/454#issuecomment-193501554:266,Testability,test,testing,266,"This seems like a really good start, thanks! Building on this, we may want to explore taking a more unified approach to performance testing, as there's a number of performance-sensitive features in QuTiP. One avenue may be to write performance testing into the unit testing builds, that seems to be an [older extension for Nose](https://github.com/disqus/nose-performance), not sure if there's a better one out there.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/454#issuecomment-193501554
https://github.com/qutip/qutip/pull/455#issuecomment-194681807:29,Usability,learn,learned,29,"Just squashed the commits. I learned about this while doing the conda-forge thing (they insisted). If you don't already know about it, then it is definitely worth looking up. I had 16 commits on this, now its 1 - much more tidy.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/455#issuecomment-194681807
https://github.com/qutip/qutip/pull/455#issuecomment-194686130:54,Deployability,integrat,integrator,54,I need to fix (or hide) some warning given out by the integrator during the test. I will do that before I merge,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/455#issuecomment-194686130
https://github.com/qutip/qutip/pull/455#issuecomment-194686130:54,Integrability,integrat,integrator,54,I need to fix (or hide) some warning given out by the integrator during the test. I will do that before I merge,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/455#issuecomment-194686130
https://github.com/qutip/qutip/pull/455#issuecomment-194686130:76,Testability,test,test,76,I need to fix (or hide) some warning given out by the integrator during the test. I will do that before I merge,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/455#issuecomment-194686130
https://github.com/qutip/qutip/pull/455#issuecomment-194752885:286,Integrability,depend,depend,286,"This looks great! . The references are sufficient I guess. We can add some more in the example notebook?. One minor terminology point in the explanation: for the Drude-Lorentz bath the correlation functions can be exactly analytically expressed as an infinite sum of exponentials which depend on the temperature, and these are called the Matsubara terms or Matsubara frequencies. . In general, when not dealing with a Drude-Lorentz bath, or something similar, we have to approximate the correlation functions by numerically fitting them to exponentials, but in that case they don't have any particular name I guess. When we get around to adding it as an option, lets call them Fruchtman terms, as it was Amir Fruchtman who told me to try doing it that way!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/455#issuecomment-194752885
https://github.com/qutip/qutip/pull/455#issuecomment-194776953:804,Integrability,depend,depend,804,"Yes, we will add a reference to the your paper with the TLS when I submit a; TLS notebook example.; I think I will just make a simple example for now. And then add the more; involved one that compares the RC method later. Thanks for the explanation on Matsubara terms (I might have to spelling to; correct :). I did not realise they were only referred to as such in the; DL spectral density. I will make some corrections now. On 10 March 2016 at 18:30, nwlambert notifications@github.com wrote:. > This looks great!; > ; > The references are sufficient I guess. We can add some more in the example; > notebook?; > ; > One minor terminology point in the explanation: for the Drude-Lorentz bath; > the correlation functions can be exactly analytically expressed as an; > infinite sum of exponentials which depend on the temperature, and these are; > called the Matsubara terms or Matsubara frequencies.; > ; > In general, when not dealing with a Drude-Lorentz bath, or something; > similar, we have to approximate the correlation functions by numerically; > fitting them to exponentials, but in that case they don't have any; > particular name I guess. When we get around to adding it as an option, lets; > call them Fruchtman terms, as it was Amir Fruchtman who told me to try; > doing it that way!; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/pull/455#issuecomment-194752885.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/455#issuecomment-194776953
https://github.com/qutip/qutip/pull/455#issuecomment-194776953:127,Usability,simpl,simple,127,"Yes, we will add a reference to the your paper with the TLS when I submit a; TLS notebook example.; I think I will just make a simple example for now. And then add the more; involved one that compares the RC method later. Thanks for the explanation on Matsubara terms (I might have to spelling to; correct :). I did not realise they were only referred to as such in the; DL spectral density. I will make some corrections now. On 10 March 2016 at 18:30, nwlambert notifications@github.com wrote:. > This looks great!; > ; > The references are sufficient I guess. We can add some more in the example; > notebook?; > ; > One minor terminology point in the explanation: for the Drude-Lorentz bath; > the correlation functions can be exactly analytically expressed as an; > infinite sum of exponentials which depend on the temperature, and these are; > called the Matsubara terms or Matsubara frequencies.; > ; > In general, when not dealing with a Drude-Lorentz bath, or something; > similar, we have to approximate the correlation functions by numerically; > fitting them to exponentials, but in that case they don't have any; > particular name I guess. When we get around to adding it as an option, lets; > call them Fruchtman terms, as it was Amir Fruchtman who told me to try; > doing it that way!; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/pull/455#issuecomment-194752885.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/455#issuecomment-194776953
https://github.com/qutip/qutip/pull/455#issuecomment-194836741:130,Deployability,Integrat,IntegrationWarning,130,"The compulsive renaming continues.; I also reduced the number of time steps in the test to speed things up, and set to ignore the IntegrationWarning",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/455#issuecomment-194836741
https://github.com/qutip/qutip/pull/455#issuecomment-194836741:43,Energy Efficiency,reduce,reduced,43,"The compulsive renaming continues.; I also reduced the number of time steps in the test to speed things up, and set to ignore the IntegrationWarning",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/455#issuecomment-194836741
https://github.com/qutip/qutip/pull/455#issuecomment-194836741:130,Integrability,Integrat,IntegrationWarning,130,"The compulsive renaming continues.; I also reduced the number of time steps in the test to speed things up, and set to ignore the IntegrationWarning",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/455#issuecomment-194836741
https://github.com/qutip/qutip/pull/455#issuecomment-194836741:83,Testability,test,test,83,"The compulsive renaming continues.; I also reduced the number of time steps in the test to speed things up, and set to ignore the IntegrationWarning",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/455#issuecomment-194836741
https://github.com/qutip/qutip/pull/456#issuecomment-197591071:115,Testability,test,tests,115,"I don't think that this is ready quite yet, but it's getting significantly closer. I want to add some more dnorm() tests for known cases, since the current known cases are all fairly trivial. I'd also like to add the difference of two unitaries trick for fast dnorm() calculations, since that will be an especially common case.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/456#issuecomment-197591071
https://github.com/qutip/qutip/pull/456#issuecomment-197731718:20,Testability,test,tests,20,"I've now added more tests based on checking for agreement with the [QuantumUtils for MATLAB](https://github.com/CoryGroup/quantum-utils-matlab) library, since I'm familiar with that one, and as it has been tested for agreement with other implementations as well. I've written up the test cases in [this notebook](http://nbviewer.jupyter.org/gist/cgranade/40a770fba71fc58cb080).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/456#issuecomment-197731718
https://github.com/qutip/qutip/pull/456#issuecomment-197731718:206,Testability,test,tested,206,"I've now added more tests based on checking for agreement with the [QuantumUtils for MATLAB](https://github.com/CoryGroup/quantum-utils-matlab) library, since I'm familiar with that one, and as it has been tested for agreement with other implementations as well. I've written up the test cases in [this notebook](http://nbviewer.jupyter.org/gist/cgranade/40a770fba71fc58cb080).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/456#issuecomment-197731718
https://github.com/qutip/qutip/pull/456#issuecomment-197731718:283,Testability,test,test,283,"I've now added more tests based on checking for agreement with the [QuantumUtils for MATLAB](https://github.com/CoryGroup/quantum-utils-matlab) library, since I'm familiar with that one, and as it has been tested for agreement with other implementations as well. I've written up the test cases in [this notebook](http://nbviewer.jupyter.org/gist/cgranade/40a770fba71fc58cb080).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/456#issuecomment-197731718
https://github.com/qutip/qutip/pull/456#issuecomment-198154462:13,Testability,test,tests,13,"Now that the tests are fairly stable, I'd like to get the difference-of-unitaries case working, improve coverage a bit, and it should be ready for review.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/456#issuecomment-198154462
https://github.com/qutip/qutip/pull/456#issuecomment-198229615:68,Testability,test,test,68,"This PR is now feature-complete, but needs a bit more debugging and test coverage to make a nice feature.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/456#issuecomment-198229615
https://github.com/qutip/qutip/pull/456#issuecomment-198569367:142,Availability,failure,failures,142,"I'm glad you like! As for squashing, I think that can make sense, yeah. I'd like to hold off on doing so with this PR I have the current test failures fixed (seems as though the difference-of-unitaries optimization still needs a bit of work). After that, though, I agree that'd make for a much more legible commit history.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/456#issuecomment-198569367
https://github.com/qutip/qutip/pull/456#issuecomment-198569367:202,Performance,optimiz,optimization,202,"I'm glad you like! As for squashing, I think that can make sense, yeah. I'd like to hold off on doing so with this PR I have the current test failures fixed (seems as though the difference-of-unitaries optimization still needs a bit of work). After that, though, I agree that'd make for a much more legible commit history.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/456#issuecomment-198569367
https://github.com/qutip/qutip/pull/456#issuecomment-198569367:137,Testability,test,test,137,"I'm glad you like! As for squashing, I think that can make sense, yeah. I'd like to hold off on doing so with this PR I have the current test failures fixed (seems as though the difference-of-unitaries optimization still needs a bit of work). After that, though, I agree that'd make for a much more legible commit history.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/456#issuecomment-198569367
https://github.com/qutip/qutip/pull/456#issuecomment-198632131:135,Availability,down,down,135,"Since this branch is unfortunately rather old, I didn't want to squash the early commits, but the most recent batch have been squashed down to just one. I think that this feature is now in a state I feel comfortable with reviewing, so I'll add the label. In the future, I would like to generalize the difference of unitaries optimization, but I think that will take a bit of Cython work to implement.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/456#issuecomment-198632131
https://github.com/qutip/qutip/pull/456#issuecomment-198632131:325,Performance,optimiz,optimization,325,"Since this branch is unfortunately rather old, I didn't want to squash the early commits, but the most recent batch have been squashed down to just one. I think that this feature is now in a state I feel comfortable with reviewing, so I'll add the label. In the future, I would like to generalize the difference of unitaries optimization, but I think that will take a bit of Cython work to implement.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/456#issuecomment-198632131
https://github.com/qutip/qutip/pull/456#issuecomment-200152086:37,Testability,test,tests,37,"Since this is now passing all Travis tests without complaint, I think it makes sense to go on and merge now.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/456#issuecomment-200152086
https://github.com/qutip/qutip/pull/458#issuecomment-202057828:232,Availability,down,down,232,"Thanks for taking care of this, looks like some nice improvements. I had only originally added the generator-based tests to allow them to fail independently (this is especially useful for randomized tests), but I agree with cutting down the amount of extraneous console output. Is there a better way that I should use in the future that will allow for independent failure without inflating the number of tests reported?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/458#issuecomment-202057828
https://github.com/qutip/qutip/pull/458#issuecomment-202057828:364,Availability,failure,failure,364,"Thanks for taking care of this, looks like some nice improvements. I had only originally added the generator-based tests to allow them to fail independently (this is especially useful for randomized tests), but I agree with cutting down the amount of extraneous console output. Is there a better way that I should use in the future that will allow for independent failure without inflating the number of tests reported?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/458#issuecomment-202057828
https://github.com/qutip/qutip/pull/458#issuecomment-202057828:115,Testability,test,tests,115,"Thanks for taking care of this, looks like some nice improvements. I had only originally added the generator-based tests to allow them to fail independently (this is especially useful for randomized tests), but I agree with cutting down the amount of extraneous console output. Is there a better way that I should use in the future that will allow for independent failure without inflating the number of tests reported?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/458#issuecomment-202057828
https://github.com/qutip/qutip/pull/458#issuecomment-202057828:199,Testability,test,tests,199,"Thanks for taking care of this, looks like some nice improvements. I had only originally added the generator-based tests to allow them to fail independently (this is especially useful for randomized tests), but I agree with cutting down the amount of extraneous console output. Is there a better way that I should use in the future that will allow for independent failure without inflating the number of tests reported?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/458#issuecomment-202057828
https://github.com/qutip/qutip/pull/458#issuecomment-202057828:404,Testability,test,tests,404,"Thanks for taking care of this, looks like some nice improvements. I had only originally added the generator-based tests to allow them to fail independently (this is especially useful for randomized tests), but I agree with cutting down the amount of extraneous console output. Is there a better way that I should use in the future that will allow for independent failure without inflating the number of tests reported?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/458#issuecomment-202057828
https://github.com/qutip/qutip/pull/459#issuecomment-204251671:1366,Modifiability,enhance,enhanced,1366,"It looks as though NumPy keeps some metadata on MKL if it was compiled with MKL support. The `numpy.__config__` module in particular gives a path to the directory that NumPy loads its MKL libraries from. On my Linux box, for instance:. ``` python; In [1]: import numpy.__config__. In [2]: print(numpy.__config__.mkl_info['libraries']); ['mkl_intel_lp64', 'mkl_intel_thread', 'mkl_core', 'iomp5', 'pthread']. In [3]: print(numpy.__config__.mkl_info['library_dirs']); ['/home/cgranade/anaconda/lib']; ```. The case seems to be worse for Anaconda on Windows (naturally), with `C:\aroot\stage\` taking the place of the actual Anaconda root:. ``` python; In [1]: import numpy.__config__. In [2]: print(numpy.__config__.mkl_info['libraries']); ['mkl_core_dll', 'mkl_intel_lp64_dll', 'mkl_intel_thread_dll']. In [3]: print(numpy.__config__.mkl_info['library_dirs']); ['C:\\aroot\\stage\\Library\\lib']; ```. In the case that NumPy is compiled without MKL support, it seems to just omit the `mkl_info` dict entirely:. ``` bash; cgranade@berith:~$ source activate py27-nomkl; discarding /home/cgranade/anaconda/bin from PATH; prepending /home/cgranade/anaconda/envs/py27-nomkl/bin to PATH; cgranade@berith:~$ ipython; Python 2.7.11 |Anaconda custom (64-bit)| (default, Dec 6 2015, 18:08:32); Type ""copyright"", ""credits"" or ""license"" for more information. IPython 4.0.3 -- An enhanced Interactive Python.; ? -> Introduction and overview of IPython's features.; %quickref -> Quick reference.; help -> Python's own help system.; object? -> Details about 'object', use 'object??' for extra details. In [1]: import numpy.__config__. In [2]: print(numpy.__config__.mkl_info['libraries']); ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); <ipython-input-2-ebe4f6e784e1> in <module>(); ----> 1 print(numpy.__config__.mkl_info['libraries']). AttributeError: 'module' object has no attribute 'mkl_info'; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/459#issuecomment-204251671
https://github.com/qutip/qutip/pull/459#issuecomment-204251671:174,Performance,load,loads,174,"It looks as though NumPy keeps some metadata on MKL if it was compiled with MKL support. The `numpy.__config__` module in particular gives a path to the directory that NumPy loads its MKL libraries from. On my Linux box, for instance:. ``` python; In [1]: import numpy.__config__. In [2]: print(numpy.__config__.mkl_info['libraries']); ['mkl_intel_lp64', 'mkl_intel_thread', 'mkl_core', 'iomp5', 'pthread']. In [3]: print(numpy.__config__.mkl_info['library_dirs']); ['/home/cgranade/anaconda/lib']; ```. The case seems to be worse for Anaconda on Windows (naturally), with `C:\aroot\stage\` taking the place of the actual Anaconda root:. ``` python; In [1]: import numpy.__config__. In [2]: print(numpy.__config__.mkl_info['libraries']); ['mkl_core_dll', 'mkl_intel_lp64_dll', 'mkl_intel_thread_dll']. In [3]: print(numpy.__config__.mkl_info['library_dirs']); ['C:\\aroot\\stage\\Library\\lib']; ```. In the case that NumPy is compiled without MKL support, it seems to just omit the `mkl_info` dict entirely:. ``` bash; cgranade@berith:~$ source activate py27-nomkl; discarding /home/cgranade/anaconda/bin from PATH; prepending /home/cgranade/anaconda/envs/py27-nomkl/bin to PATH; cgranade@berith:~$ ipython; Python 2.7.11 |Anaconda custom (64-bit)| (default, Dec 6 2015, 18:08:32); Type ""copyright"", ""credits"" or ""license"" for more information. IPython 4.0.3 -- An enhanced Interactive Python.; ? -> Introduction and overview of IPython's features.; %quickref -> Quick reference.; help -> Python's own help system.; object? -> Details about 'object', use 'object??' for extra details. In [1]: import numpy.__config__. In [2]: print(numpy.__config__.mkl_info['libraries']); ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); <ipython-input-2-ebe4f6e784e1> in <module>(); ----> 1 print(numpy.__config__.mkl_info['libraries']). AttributeError: 'module' object has no attribute 'mkl_info'; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/459#issuecomment-204251671
https://github.com/qutip/qutip/pull/459#issuecomment-204252414:92,Modifiability,config,config,92,This is a good find. Previous versions of Anaconda did not show the correct dirs in numpy.**config**. They used to point the the Intel compiler directory that built them. This makes things easier than I thought.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/459#issuecomment-204252414
https://github.com/qutip/qutip/pull/459#issuecomment-204802167:45,Modifiability,config,config,45,I just checked the Intel distro. Their numpy config does not point to the correct location for the libraries. They point toward to compiler folders just like Anaconda did in the past. Will stick to Anaconda support for now.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/459#issuecomment-204802167
https://github.com/qutip/qutip/pull/459#issuecomment-215860625:8,Testability,test,tests,8,"Ok, the tests have been fixed so I am going to merge. I will squash merge as suggested by Alex.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/459#issuecomment-215860625
https://github.com/qutip/qutip/pull/461#issuecomment-206655080:103,Testability,test,tests,103,"Thank you for your contribution, this looks like a nice feature. If you could please provide some unit tests as to its correctness, that would be greatly appreciated.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/461#issuecomment-206655080
https://github.com/qutip/qutip/pull/461#issuecomment-206692075:144,Testability,test,tests,144,"Denis, Good to hear from you again. It looks like a solid addition! Great to have finally squashed this issue. I ran your code through our unit tests in place of the iterative method and it passed. We can just add additional unit tests similar to the ones we have now for the iterative method.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/461#issuecomment-206692075
https://github.com/qutip/qutip/pull/461#issuecomment-206692075:230,Testability,test,tests,230,"Denis, Good to hear from you again. It looks like a solid addition! Great to have finally squashed this issue. I ran your code through our unit tests in place of the iterative method and it passed. We can just add additional unit tests similar to the ones we have now for the iterative method.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/461#issuecomment-206692075
https://github.com/qutip/qutip/pull/461#issuecomment-206850888:251,Testability,test,tests,251,I'm also glad to be back and contributing to the great project. I have accumulated some more stuff to add to stochastic module (later at some point).; Back to business. Maybe we should just change the default method to 'clenshaw' and then the current tests will test it instead of 'iterative'?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/461#issuecomment-206850888
https://github.com/qutip/qutip/pull/461#issuecomment-206850888:262,Testability,test,test,262,I'm also glad to be back and contributing to the great project. I have accumulated some more stuff to add to stochastic module (later at some point).; Back to business. Maybe we should just change the default method to 'clenshaw' and then the current tests will test it instead of 'iterative'?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/461#issuecomment-206850888
https://github.com/qutip/qutip/pull/461#issuecomment-207508213:0,Testability,Test,Tests,0,Tests for the new method are added.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/461#issuecomment-207508213
https://github.com/qutip/qutip/issues/462#issuecomment-207456658:355,Availability,robust,robust,355,"I tried some experiments with elementwise exp with numpy to see if mkl did any parallel processing. It did not seem to. scipy.linalg.expm claims to use the Pade approximation. There used to be a expm2 (that used diagonalisation) and an expm3 (method?) but these have been deprecated. The scipy docs claim that the method used in expm is ""numerically more robust"". In the control modules we either use a eigendecomp (diagonalisation) method or scipy.linalg.expm_frechet as we typically need to compute propagators (which either uses the eigendecomp or is provided by the frechet deriv) . Frechet also uses some Pade approximation. I think the Pade method uses something like a LU decomp, but would need more research. It would always be more efficient to use the eigendecomp if it has been computed already. My guess is that if parallel LU decomp provides much (x100) faster eigendecomp, then the diagonalisation method would be much faster than expm. However, some experimentation would be needed to verify. . I am told that there are many methods of computing expm, and is there is much numerical research into it. It seems strange that scipy only offer us one method. The spinach control library (http://spindynamics.org/Spinach.php) reputedly has some interesting methods of computing expm. A quick Google search found https://github.com/scipy/scipy/pull/354, which shows that scipy considered adding a method kwarg, but have parked the idea. We currently have multiple methods in qutip based. I assume there must have been some motivation for writing our own sparse matrix functions for expm. It would seem that a pretty thorough investigation would be required determine to value of the various options. Would make a nice self contained project for someone.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/462#issuecomment-207456658
https://github.com/qutip/qutip/issues/462#issuecomment-207456658:741,Energy Efficiency,efficient,efficient,741,"I tried some experiments with elementwise exp with numpy to see if mkl did any parallel processing. It did not seem to. scipy.linalg.expm claims to use the Pade approximation. There used to be a expm2 (that used diagonalisation) and an expm3 (method?) but these have been deprecated. The scipy docs claim that the method used in expm is ""numerically more robust"". In the control modules we either use a eigendecomp (diagonalisation) method or scipy.linalg.expm_frechet as we typically need to compute propagators (which either uses the eigendecomp or is provided by the frechet deriv) . Frechet also uses some Pade approximation. I think the Pade method uses something like a LU decomp, but would need more research. It would always be more efficient to use the eigendecomp if it has been computed already. My guess is that if parallel LU decomp provides much (x100) faster eigendecomp, then the diagonalisation method would be much faster than expm. However, some experimentation would be needed to verify. . I am told that there are many methods of computing expm, and is there is much numerical research into it. It seems strange that scipy only offer us one method. The spinach control library (http://spindynamics.org/Spinach.php) reputedly has some interesting methods of computing expm. A quick Google search found https://github.com/scipy/scipy/pull/354, which shows that scipy considered adding a method kwarg, but have parked the idea. We currently have multiple methods in qutip based. I assume there must have been some motivation for writing our own sparse matrix functions for expm. It would seem that a pretty thorough investigation would be required determine to value of the various options. Would make a nice self contained project for someone.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/462#issuecomment-207456658
https://github.com/qutip/qutip/issues/462#issuecomment-207466362:1149,Availability,robust,robust,1149,"pm methods use the Pade approximation. We coded ours many year ago before SciPy had a sparse expm function. However, like I said, it seems that, unless the matrix is diagonal, the output is always dense. Therefore, the dense solver should be the way to go. The one exception would be an idempotent matrix, but again, I do not think this is encountered in practice. I will have a look at the Spinach methods. Seems to be similar to the Matlab code, scaling, Pade, then squaring. The SciPy dense and sparse expm uses the same Higham algorithm as Matlab, so it should be good.; - Paul. > On Apr 8, 2016, at 08:38, Alexander Pitchford notifications@github.com wrote:; > ; > I tried some experiments with elementwise exp with numpy to see if mkl did any parallel processing. It did not seem to.; > ; > scipy.linalg.expm claims to use the Pade approximation. There used to be a expm2 (that used diagonalisation) and an expm3 (method?) but these have been deprecated. The scipy docs claim that the method used in expm is ""numerically more robust"".; > ; > In the control modules we either use a eigendecomp (diagonalisation) method or scipy.linalg.expm_frechet as we typically need to compute propagators (which either uses the eigendecomp or is provided by the frechet deriv) . Frechet also uses some Pade approximation. I think the Pade method uses something like a LU decomp, but would need more research. It would always be more efficient to use the eigendecomp if it has been computed already.; > ; > My guess is that if parallel LU decomp provides much (x100) faster eigendecomp, then the diagonalisation method would be much faster than expm. However, some experimentation would be needed to verify.; > ; > I am told that there are many methods of computing expm, and is there is much numerical research into it. It seems strange that scipy only offer us one method. The spinach control library (http://spindynamics.org/Spinach.php http://spindynamics.org/Spinach.php) reputedly has some interesting m",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/462#issuecomment-207466362
https://github.com/qutip/qutip/issues/462#issuecomment-207466362:1542,Energy Efficiency,efficient,efficient,1542,"e, scaling, Pade, then squaring. The SciPy dense and sparse expm uses the same Higham algorithm as Matlab, so it should be good.; - Paul. > On Apr 8, 2016, at 08:38, Alexander Pitchford notifications@github.com wrote:; > ; > I tried some experiments with elementwise exp with numpy to see if mkl did any parallel processing. It did not seem to.; > ; > scipy.linalg.expm claims to use the Pade approximation. There used to be a expm2 (that used diagonalisation) and an expm3 (method?) but these have been deprecated. The scipy docs claim that the method used in expm is ""numerically more robust"".; > ; > In the control modules we either use a eigendecomp (diagonalisation) method or scipy.linalg.expm_frechet as we typically need to compute propagators (which either uses the eigendecomp or is provided by the frechet deriv) . Frechet also uses some Pade approximation. I think the Pade method uses something like a LU decomp, but would need more research. It would always be more efficient to use the eigendecomp if it has been computed already.; > ; > My guess is that if parallel LU decomp provides much (x100) faster eigendecomp, then the diagonalisation method would be much faster than expm. However, some experimentation would be needed to verify.; > ; > I am told that there are many methods of computing expm, and is there is much numerical research into it. It seems strange that scipy only offer us one method. The spinach control library (http://spindynamics.org/Spinach.php http://spindynamics.org/Spinach.php) reputedly has some interesting methods of computing expm.; > ; > A quick Google search found scipy/scipy#354 https://github.com/scipy/scipy/pull/354, which shows that scipy considered adding a method kwarg, but have parked the idea.; > ; > We currently have multiple methods in qutip based. I assume there must have been some motivation for writing our own sparse matrix functions for expm. It would seem that a pretty thorough investigation would be required determine to valu",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/462#issuecomment-207466362
https://github.com/qutip/qutip/issues/462#issuecomment-207490289:781,Energy Efficiency,monitor,monitor,781,"Yes, I did the mkl.set_num_threads. This is my test script. ```; import numpy as np; import timeit. NUM_THREADS = 1. try:; import mkl; use_mkl = True; except:; use_mkl = False. def timing(f):; def wrap(*args):; time1 = timeit.default_timer(); ret = f(*args); time2 = timeit.default_timer(); print('{} function took {:0.3f} ms'.format(f.__name__, (time2-time1)*1000.0)); return ret; return wrap. if use_mkl:; mkl.set_num_threads(NUM_THREADS); print(""Number of threads is {}"".format(mkl.get_max_threads())); else:; print(""mkl unavailable""). d = 10000; n_reps = 10; A = np.random.random([d, d]). print(""Starting tests""). @timing; def calc_exp(A):; for i in range(n_reps):; E = np.exp(A). calc_exp(A); ```. Whether I set NUM_THREADS to 1 or 4 I only see one processor active in system monitor, and the processing time is the same. This is what starting me looking into whether I should expect numpy / scipy to use multiple cores. The articles I read suggested that numpy and scipy do not contain any intrinsic parallelisation. It may have been out-of-date. Now I just tried a similar test with scipy.linalg.expm and it did use multiple processors and was approximately twice as fast with 4 than with 1.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/462#issuecomment-207490289
https://github.com/qutip/qutip/issues/462#issuecomment-207490289:197,Integrability,wrap,wrap,197,"Yes, I did the mkl.set_num_threads. This is my test script. ```; import numpy as np; import timeit. NUM_THREADS = 1. try:; import mkl; use_mkl = True; except:; use_mkl = False. def timing(f):; def wrap(*args):; time1 = timeit.default_timer(); ret = f(*args); time2 = timeit.default_timer(); print('{} function took {:0.3f} ms'.format(f.__name__, (time2-time1)*1000.0)); return ret; return wrap. if use_mkl:; mkl.set_num_threads(NUM_THREADS); print(""Number of threads is {}"".format(mkl.get_max_threads())); else:; print(""mkl unavailable""). d = 10000; n_reps = 10; A = np.random.random([d, d]). print(""Starting tests""). @timing; def calc_exp(A):; for i in range(n_reps):; E = np.exp(A). calc_exp(A); ```. Whether I set NUM_THREADS to 1 or 4 I only see one processor active in system monitor, and the processing time is the same. This is what starting me looking into whether I should expect numpy / scipy to use multiple cores. The articles I read suggested that numpy and scipy do not contain any intrinsic parallelisation. It may have been out-of-date. Now I just tried a similar test with scipy.linalg.expm and it did use multiple processors and was approximately twice as fast with 4 than with 1.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/462#issuecomment-207490289
https://github.com/qutip/qutip/issues/462#issuecomment-207490289:389,Integrability,wrap,wrap,389,"Yes, I did the mkl.set_num_threads. This is my test script. ```; import numpy as np; import timeit. NUM_THREADS = 1. try:; import mkl; use_mkl = True; except:; use_mkl = False. def timing(f):; def wrap(*args):; time1 = timeit.default_timer(); ret = f(*args); time2 = timeit.default_timer(); print('{} function took {:0.3f} ms'.format(f.__name__, (time2-time1)*1000.0)); return ret; return wrap. if use_mkl:; mkl.set_num_threads(NUM_THREADS); print(""Number of threads is {}"".format(mkl.get_max_threads())); else:; print(""mkl unavailable""). d = 10000; n_reps = 10; A = np.random.random([d, d]). print(""Starting tests""). @timing; def calc_exp(A):; for i in range(n_reps):; E = np.exp(A). calc_exp(A); ```. Whether I set NUM_THREADS to 1 or 4 I only see one processor active in system monitor, and the processing time is the same. This is what starting me looking into whether I should expect numpy / scipy to use multiple cores. The articles I read suggested that numpy and scipy do not contain any intrinsic parallelisation. It may have been out-of-date. Now I just tried a similar test with scipy.linalg.expm and it did use multiple processors and was approximately twice as fast with 4 than with 1.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/462#issuecomment-207490289
https://github.com/qutip/qutip/issues/462#issuecomment-207490289:47,Testability,test,test,47,"Yes, I did the mkl.set_num_threads. This is my test script. ```; import numpy as np; import timeit. NUM_THREADS = 1. try:; import mkl; use_mkl = True; except:; use_mkl = False. def timing(f):; def wrap(*args):; time1 = timeit.default_timer(); ret = f(*args); time2 = timeit.default_timer(); print('{} function took {:0.3f} ms'.format(f.__name__, (time2-time1)*1000.0)); return ret; return wrap. if use_mkl:; mkl.set_num_threads(NUM_THREADS); print(""Number of threads is {}"".format(mkl.get_max_threads())); else:; print(""mkl unavailable""). d = 10000; n_reps = 10; A = np.random.random([d, d]). print(""Starting tests""). @timing; def calc_exp(A):; for i in range(n_reps):; E = np.exp(A). calc_exp(A); ```. Whether I set NUM_THREADS to 1 or 4 I only see one processor active in system monitor, and the processing time is the same. This is what starting me looking into whether I should expect numpy / scipy to use multiple cores. The articles I read suggested that numpy and scipy do not contain any intrinsic parallelisation. It may have been out-of-date. Now I just tried a similar test with scipy.linalg.expm and it did use multiple processors and was approximately twice as fast with 4 than with 1.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/462#issuecomment-207490289
https://github.com/qutip/qutip/issues/462#issuecomment-207490289:609,Testability,test,tests,609,"Yes, I did the mkl.set_num_threads. This is my test script. ```; import numpy as np; import timeit. NUM_THREADS = 1. try:; import mkl; use_mkl = True; except:; use_mkl = False. def timing(f):; def wrap(*args):; time1 = timeit.default_timer(); ret = f(*args); time2 = timeit.default_timer(); print('{} function took {:0.3f} ms'.format(f.__name__, (time2-time1)*1000.0)); return ret; return wrap. if use_mkl:; mkl.set_num_threads(NUM_THREADS); print(""Number of threads is {}"".format(mkl.get_max_threads())); else:; print(""mkl unavailable""). d = 10000; n_reps = 10; A = np.random.random([d, d]). print(""Starting tests""). @timing; def calc_exp(A):; for i in range(n_reps):; E = np.exp(A). calc_exp(A); ```. Whether I set NUM_THREADS to 1 or 4 I only see one processor active in system monitor, and the processing time is the same. This is what starting me looking into whether I should expect numpy / scipy to use multiple cores. The articles I read suggested that numpy and scipy do not contain any intrinsic parallelisation. It may have been out-of-date. Now I just tried a similar test with scipy.linalg.expm and it did use multiple processors and was approximately twice as fast with 4 than with 1.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/462#issuecomment-207490289
https://github.com/qutip/qutip/issues/462#issuecomment-207490289:1080,Testability,test,test,1080,"Yes, I did the mkl.set_num_threads. This is my test script. ```; import numpy as np; import timeit. NUM_THREADS = 1. try:; import mkl; use_mkl = True; except:; use_mkl = False. def timing(f):; def wrap(*args):; time1 = timeit.default_timer(); ret = f(*args); time2 = timeit.default_timer(); print('{} function took {:0.3f} ms'.format(f.__name__, (time2-time1)*1000.0)); return ret; return wrap. if use_mkl:; mkl.set_num_threads(NUM_THREADS); print(""Number of threads is {}"".format(mkl.get_max_threads())); else:; print(""mkl unavailable""). d = 10000; n_reps = 10; A = np.random.random([d, d]). print(""Starting tests""). @timing; def calc_exp(A):; for i in range(n_reps):; E = np.exp(A). calc_exp(A); ```. Whether I set NUM_THREADS to 1 or 4 I only see one processor active in system monitor, and the processing time is the same. This is what starting me looking into whether I should expect numpy / scipy to use multiple cores. The articles I read suggested that numpy and scipy do not contain any intrinsic parallelisation. It may have been out-of-date. Now I just tried a similar test with scipy.linalg.expm and it did use multiple processors and was approximately twice as fast with 4 than with 1.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/462#issuecomment-207490289
https://github.com/qutip/qutip/issues/462#issuecomment-207494345:1094,Energy Efficiency,monitor,monitor,1094,"If they call BLAS functions then they should use threads. It looks like scipy is calling the mkl blas where as numpy is not. A bit odd. . > On Apr 8, 2016, at 09:52, Alexander Pitchford notifications@github.com wrote:; > ; > Yes, I did the mkl.set_num_threads. This is my test script; > ; > import numpy as np; > import timeit; > ; > NUM_THREADS = 1; > ; > try:; > import mkl; > use_mkl = True; > except:; > use_mkl = False; > ; > def timing(f):; > def wrap(_args):; > time1 = timeit.default_timer(); > ret = f(_args); > time2 = timeit.default_timer(); > print('{} function took {:0.3f} ms'.format(f.**name**, (time2-time1)*1000.0)); > return ret; > return wrap; > ; > if use_mkl:; > mkl.set_num_threads(NUM_THREADS); > print(""Number of threads is {}"".format(mkl.get_max_threads())); > else:; > print(""mkl unavailable""); > ; > d = 10000; > n_reps = 10; > A = np.random.random([d, d]); > ; > print(""Starting tests""); > ; > @timing; > def calc_exp(A):; > for i in range(n_reps):; > E = np.exp(A); > ; > calc_exp(A); > Whether I set NUM_THREADS to 1 or 4 I only see one processor active in system monitor, and the processing time is the same.; > ; > This is what starting me looking into whether I should expect numpy / scipy to use multiple cores. The articles I read suggested that numpy and scipy do not contain any intrinsic parallelisation. It may have been out-of-date.; > ; > Now I just tried a similar test with scipy.linalg.expm and it did use multiple processors and was approximately twice as fast with 4 than with 1.; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly or view it on GitHub; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/462#issuecomment-207494345
https://github.com/qutip/qutip/issues/462#issuecomment-207494345:453,Integrability,wrap,wrap,453,"If they call BLAS functions then they should use threads. It looks like scipy is calling the mkl blas where as numpy is not. A bit odd. . > On Apr 8, 2016, at 09:52, Alexander Pitchford notifications@github.com wrote:; > ; > Yes, I did the mkl.set_num_threads. This is my test script; > ; > import numpy as np; > import timeit; > ; > NUM_THREADS = 1; > ; > try:; > import mkl; > use_mkl = True; > except:; > use_mkl = False; > ; > def timing(f):; > def wrap(_args):; > time1 = timeit.default_timer(); > ret = f(_args); > time2 = timeit.default_timer(); > print('{} function took {:0.3f} ms'.format(f.**name**, (time2-time1)*1000.0)); > return ret; > return wrap; > ; > if use_mkl:; > mkl.set_num_threads(NUM_THREADS); > print(""Number of threads is {}"".format(mkl.get_max_threads())); > else:; > print(""mkl unavailable""); > ; > d = 10000; > n_reps = 10; > A = np.random.random([d, d]); > ; > print(""Starting tests""); > ; > @timing; > def calc_exp(A):; > for i in range(n_reps):; > E = np.exp(A); > ; > calc_exp(A); > Whether I set NUM_THREADS to 1 or 4 I only see one processor active in system monitor, and the processing time is the same.; > ; > This is what starting me looking into whether I should expect numpy / scipy to use multiple cores. The articles I read suggested that numpy and scipy do not contain any intrinsic parallelisation. It may have been out-of-date.; > ; > Now I just tried a similar test with scipy.linalg.expm and it did use multiple processors and was approximately twice as fast with 4 than with 1.; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly or view it on GitHub; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/462#issuecomment-207494345
https://github.com/qutip/qutip/issues/462#issuecomment-207494345:657,Integrability,wrap,wrap,657,"If they call BLAS functions then they should use threads. It looks like scipy is calling the mkl blas where as numpy is not. A bit odd. . > On Apr 8, 2016, at 09:52, Alexander Pitchford notifications@github.com wrote:; > ; > Yes, I did the mkl.set_num_threads. This is my test script; > ; > import numpy as np; > import timeit; > ; > NUM_THREADS = 1; > ; > try:; > import mkl; > use_mkl = True; > except:; > use_mkl = False; > ; > def timing(f):; > def wrap(_args):; > time1 = timeit.default_timer(); > ret = f(_args); > time2 = timeit.default_timer(); > print('{} function took {:0.3f} ms'.format(f.**name**, (time2-time1)*1000.0)); > return ret; > return wrap; > ; > if use_mkl:; > mkl.set_num_threads(NUM_THREADS); > print(""Number of threads is {}"".format(mkl.get_max_threads())); > else:; > print(""mkl unavailable""); > ; > d = 10000; > n_reps = 10; > A = np.random.random([d, d]); > ; > print(""Starting tests""); > ; > @timing; > def calc_exp(A):; > for i in range(n_reps):; > E = np.exp(A); > ; > calc_exp(A); > Whether I set NUM_THREADS to 1 or 4 I only see one processor active in system monitor, and the processing time is the same.; > ; > This is what starting me looking into whether I should expect numpy / scipy to use multiple cores. The articles I read suggested that numpy and scipy do not contain any intrinsic parallelisation. It may have been out-of-date.; > ; > Now I just tried a similar test with scipy.linalg.expm and it did use multiple processors and was approximately twice as fast with 4 than with 1.; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly or view it on GitHub; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/462#issuecomment-207494345
https://github.com/qutip/qutip/issues/462#issuecomment-207494345:272,Testability,test,test,272,"If they call BLAS functions then they should use threads. It looks like scipy is calling the mkl blas where as numpy is not. A bit odd. . > On Apr 8, 2016, at 09:52, Alexander Pitchford notifications@github.com wrote:; > ; > Yes, I did the mkl.set_num_threads. This is my test script; > ; > import numpy as np; > import timeit; > ; > NUM_THREADS = 1; > ; > try:; > import mkl; > use_mkl = True; > except:; > use_mkl = False; > ; > def timing(f):; > def wrap(_args):; > time1 = timeit.default_timer(); > ret = f(_args); > time2 = timeit.default_timer(); > print('{} function took {:0.3f} ms'.format(f.**name**, (time2-time1)*1000.0)); > return ret; > return wrap; > ; > if use_mkl:; > mkl.set_num_threads(NUM_THREADS); > print(""Number of threads is {}"".format(mkl.get_max_threads())); > else:; > print(""mkl unavailable""); > ; > d = 10000; > n_reps = 10; > A = np.random.random([d, d]); > ; > print(""Starting tests""); > ; > @timing; > def calc_exp(A):; > for i in range(n_reps):; > E = np.exp(A); > ; > calc_exp(A); > Whether I set NUM_THREADS to 1 or 4 I only see one processor active in system monitor, and the processing time is the same.; > ; > This is what starting me looking into whether I should expect numpy / scipy to use multiple cores. The articles I read suggested that numpy and scipy do not contain any intrinsic parallelisation. It may have been out-of-date.; > ; > Now I just tried a similar test with scipy.linalg.expm and it did use multiple processors and was approximately twice as fast with 4 than with 1.; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly or view it on GitHub; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/462#issuecomment-207494345
https://github.com/qutip/qutip/issues/462#issuecomment-207494345:907,Testability,test,tests,907,"If they call BLAS functions then they should use threads. It looks like scipy is calling the mkl blas where as numpy is not. A bit odd. . > On Apr 8, 2016, at 09:52, Alexander Pitchford notifications@github.com wrote:; > ; > Yes, I did the mkl.set_num_threads. This is my test script; > ; > import numpy as np; > import timeit; > ; > NUM_THREADS = 1; > ; > try:; > import mkl; > use_mkl = True; > except:; > use_mkl = False; > ; > def timing(f):; > def wrap(_args):; > time1 = timeit.default_timer(); > ret = f(_args); > time2 = timeit.default_timer(); > print('{} function took {:0.3f} ms'.format(f.**name**, (time2-time1)*1000.0)); > return ret; > return wrap; > ; > if use_mkl:; > mkl.set_num_threads(NUM_THREADS); > print(""Number of threads is {}"".format(mkl.get_max_threads())); > else:; > print(""mkl unavailable""); > ; > d = 10000; > n_reps = 10; > A = np.random.random([d, d]); > ; > print(""Starting tests""); > ; > @timing; > def calc_exp(A):; > for i in range(n_reps):; > E = np.exp(A); > ; > calc_exp(A); > Whether I set NUM_THREADS to 1 or 4 I only see one processor active in system monitor, and the processing time is the same.; > ; > This is what starting me looking into whether I should expect numpy / scipy to use multiple cores. The articles I read suggested that numpy and scipy do not contain any intrinsic parallelisation. It may have been out-of-date.; > ; > Now I just tried a similar test with scipy.linalg.expm and it did use multiple processors and was approximately twice as fast with 4 than with 1.; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly or view it on GitHub; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/462#issuecomment-207494345
https://github.com/qutip/qutip/issues/462#issuecomment-207494345:1407,Testability,test,test,1407,"If they call BLAS functions then they should use threads. It looks like scipy is calling the mkl blas where as numpy is not. A bit odd. . > On Apr 8, 2016, at 09:52, Alexander Pitchford notifications@github.com wrote:; > ; > Yes, I did the mkl.set_num_threads. This is my test script; > ; > import numpy as np; > import timeit; > ; > NUM_THREADS = 1; > ; > try:; > import mkl; > use_mkl = True; > except:; > use_mkl = False; > ; > def timing(f):; > def wrap(_args):; > time1 = timeit.default_timer(); > ret = f(_args); > time2 = timeit.default_timer(); > print('{} function took {:0.3f} ms'.format(f.**name**, (time2-time1)*1000.0)); > return ret; > return wrap; > ; > if use_mkl:; > mkl.set_num_threads(NUM_THREADS); > print(""Number of threads is {}"".format(mkl.get_max_threads())); > else:; > print(""mkl unavailable""); > ; > d = 10000; > n_reps = 10; > A = np.random.random([d, d]); > ; > print(""Starting tests""); > ; > @timing; > def calc_exp(A):; > for i in range(n_reps):; > E = np.exp(A); > ; > calc_exp(A); > Whether I set NUM_THREADS to 1 or 4 I only see one processor active in system monitor, and the processing time is the same.; > ; > This is what starting me looking into whether I should expect numpy / scipy to use multiple cores. The articles I read suggested that numpy and scipy do not contain any intrinsic parallelisation. It may have been out-of-date.; > ; > Now I just tried a similar test with scipy.linalg.expm and it did use multiple processors and was approximately twice as fast with 4 than with 1.; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly or view it on GitHub; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/462#issuecomment-207494345
https://github.com/qutip/qutip/issues/462#issuecomment-209203520:153,Performance,perform,performance,153,"I have tried to address this in #464. It defaults to a dense method that runs about 10x faster. Also, as already discussed, one can use the MKL to get a performance benefit when the dimensionality becomes large.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/462#issuecomment-209203520
https://github.com/qutip/qutip/pull/464#issuecomment-210095371:43,Testability,test,tests,43,"Well, there are still some issues with the tests not passing. Probably due to the 1e-12 tol there.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/464#issuecomment-210095371
https://github.com/qutip/qutip/pull/464#issuecomment-210293697:45,Modifiability,enhance,enhancement,45,"Looks good to me as well, looks like a great enhancement!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/464#issuecomment-210293697
https://github.com/qutip/qutip/pull/464#issuecomment-210592220:412,Integrability,interface,interfaces,412,"Please feel free to contribute improvements upstream! You can blame me for the scipy implementations of those functions, I'm just a postdoc who needed them for some computational biology calculations. Sorry if they are bad. Also they may be bit-rotting further due to the questionable 'LinearOperator' situation in scipy and the inconsistencies among the np.ndarray, np.matrix, scipy.sparse, and linear operator interfaces.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/464#issuecomment-210592220
https://github.com/qutip/qutip/pull/464#issuecomment-210640593:23,Testability,test,testing,23,"Actually, with further testing it seems that the scipy method is better at larger sized matrices. Should probably stick with that one. The older qutip algorithm is closer to the matlab version per 3015b, and returns similar results. It seems the scipy one is a bit better behaved at larger sizes.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/464#issuecomment-210640593
https://github.com/qutip/qutip/pull/465#issuecomment-210294305:192,Availability,down,downgraded,192,"Good point, sorry to cause that problem, then. Is it worth keeping it at a debug or info severity instead, then? Also, should the warning after a failed import of configobj also be removed or downgraded (https://github.com/qutip/qutip/blob/4fc89ce6804324f20e84039d961ac765105a7a2e/qutip/settings.py#L98)?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/465#issuecomment-210294305
https://github.com/qutip/qutip/pull/465#issuecomment-210294305:163,Modifiability,config,configobj,163,"Good point, sorry to cause that problem, then. Is it worth keeping it at a debug or info severity instead, then? Also, should the warning after a failed import of configobj also be removed or downgraded (https://github.com/qutip/qutip/blob/4fc89ce6804324f20e84039d961ac765105a7a2e/qutip/settings.py#L98)?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/465#issuecomment-210294305
https://github.com/qutip/qutip/pull/465#issuecomment-215308429:161,Deployability,install,install,161,"Perhaps at the info level. At least that is my naive thinking. However, I think maybe the exception that you have in the dnorm is good enough. Then the user can install the required module if they want to use that function. Regardless though, this is something that really needs to be specified in the docs.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/465#issuecomment-215308429
https://github.com/qutip/qutip/issues/469#issuecomment-215877900:45,Deployability,install,installation,45,"It seems that you are running qutip from the installation directory. You should change directories first. . > On Apr 28, 2016, at 08:47, lightning469 notifications@github.com wrote:; > ; > Hi,; > ; > AttributeError Traceback (most recent call last); > C:\Users\David Feng\Desktop\qutip-3.1.0\qutip\tests\test_wigner.py in (); > 37 from numpy.testing import assert_, run_module_suite, assert_equal; > 38 ; > ---> 39 from qutip.states import coherent, fock; > 40 from qutip.wigner import wigner; > 41 from qutip.random_objects import rand_dm, rand_ket; > ; > C:\Users\David Feng\Desktop\qutip-3.1.0\qutip__init__.pyc in (); > 60 qutip.settings.ipython = True; > 61 except:; > ---> 62 qutip.settings.ipython = False; > 63 ; > 64 # -----------------------------------------------------------------------------; > ; > AttributeError: 'module' object has no attribute 'settings'; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly or view it on GitHub; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/469#issuecomment-215877900
https://github.com/qutip/qutip/issues/469#issuecomment-215877900:298,Testability,test,tests,298,"It seems that you are running qutip from the installation directory. You should change directories first. . > On Apr 28, 2016, at 08:47, lightning469 notifications@github.com wrote:; > ; > Hi,; > ; > AttributeError Traceback (most recent call last); > C:\Users\David Feng\Desktop\qutip-3.1.0\qutip\tests\test_wigner.py in (); > 37 from numpy.testing import assert_, run_module_suite, assert_equal; > 38 ; > ---> 39 from qutip.states import coherent, fock; > 40 from qutip.wigner import wigner; > 41 from qutip.random_objects import rand_dm, rand_ket; > ; > C:\Users\David Feng\Desktop\qutip-3.1.0\qutip__init__.pyc in (); > 60 qutip.settings.ipython = True; > 61 except:; > ---> 62 qutip.settings.ipython = False; > 63 ; > 64 # -----------------------------------------------------------------------------; > ; > AttributeError: 'module' object has no attribute 'settings'; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly or view it on GitHub; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/469#issuecomment-215877900
https://github.com/qutip/qutip/issues/469#issuecomment-215877900:342,Testability,test,testing,342,"It seems that you are running qutip from the installation directory. You should change directories first. . > On Apr 28, 2016, at 08:47, lightning469 notifications@github.com wrote:; > ; > Hi,; > ; > AttributeError Traceback (most recent call last); > C:\Users\David Feng\Desktop\qutip-3.1.0\qutip\tests\test_wigner.py in (); > 37 from numpy.testing import assert_, run_module_suite, assert_equal; > 38 ; > ---> 39 from qutip.states import coherent, fock; > 40 from qutip.wigner import wigner; > 41 from qutip.random_objects import rand_dm, rand_ket; > ; > C:\Users\David Feng\Desktop\qutip-3.1.0\qutip__init__.pyc in (); > 60 qutip.settings.ipython = True; > 61 except:; > ---> 62 qutip.settings.ipython = False; > 63 ; > 64 # -----------------------------------------------------------------------------; > ; > AttributeError: 'module' object has no attribute 'settings'; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly or view it on GitHub; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/469#issuecomment-215877900
https://github.com/qutip/qutip/issues/469#issuecomment-215968543:83,Deployability,install,installed,83,"Thanks, it worked! I simply moved it to the library where third-party packages are installed in Canopy.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/469#issuecomment-215968543
https://github.com/qutip/qutip/issues/469#issuecomment-215968543:21,Usability,simpl,simply,21,"Thanks, it worked! I simply moved it to the library where third-party packages are installed in Canopy.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/469#issuecomment-215968543
https://github.com/qutip/qutip/pull/470#issuecomment-216433792:94,Deployability,release,release,94,"I have added this to 3.3, but it can likely be squeezed into the 3.2 branch, depending on the release timeframe.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/470#issuecomment-216433792
https://github.com/qutip/qutip/pull/470#issuecomment-216433792:77,Integrability,depend,depending,77,"I have added this to 3.3, but it can likely be squeezed into the 3.2 branch, depending on the release timeframe.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/470#issuecomment-216433792
https://github.com/qutip/qutip/issues/472#issuecomment-218122293:403,Availability,error,error,403,"We have decided not to continue to maintain the Ubuntu channel. Please; install from source to using qutip 3.2.; Alternatively you can use the conda-forge channel if you are able to work; with qutip 3.1. On 9 May 2016 at 02:52, Qi notifications@github.com wrote:. > There doesn't seem to be the package released under Ubuntu 16.04 channel.; > After I added the Ubuntu PPA for QuTiP, I got the following error/warning:; > ; > qxd@ubuntu1604$: sudo apt-get update; > ...; > W: The repository 'http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu xenial Release' does not have a Release file.; > N: Data from such a repository can't be authenticated and is therefore potentially dangerous to use.; > N: See apt-secure(8) manpage for repository creation and user configuration details.; > E: Failed to fetch http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu/dists/xenial/main/binary-amd64/Packages 404 Not Found; > E: Failed to fetch http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu/dists/xenial/main/binary-i386/Packages 404 Not Found; > ; > Thanks for maintaining it :); > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/issues/472",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/472#issuecomment-218122293
https://github.com/qutip/qutip/issues/472#issuecomment-218122293:72,Deployability,install,install,72,"We have decided not to continue to maintain the Ubuntu channel. Please; install from source to using qutip 3.2.; Alternatively you can use the conda-forge channel if you are able to work; with qutip 3.1. On 9 May 2016 at 02:52, Qi notifications@github.com wrote:. > There doesn't seem to be the package released under Ubuntu 16.04 channel.; > After I added the Ubuntu PPA for QuTiP, I got the following error/warning:; > ; > qxd@ubuntu1604$: sudo apt-get update; > ...; > W: The repository 'http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu xenial Release' does not have a Release file.; > N: Data from such a repository can't be authenticated and is therefore potentially dangerous to use.; > N: See apt-secure(8) manpage for repository creation and user configuration details.; > E: Failed to fetch http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu/dists/xenial/main/binary-amd64/Packages 404 Not Found; > E: Failed to fetch http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu/dists/xenial/main/binary-i386/Packages 404 Not Found; > ; > Thanks for maintaining it :); > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/issues/472",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/472#issuecomment-218122293
https://github.com/qutip/qutip/issues/472#issuecomment-218122293:303,Deployability,release,released,303,"We have decided not to continue to maintain the Ubuntu channel. Please; install from source to using qutip 3.2.; Alternatively you can use the conda-forge channel if you are able to work; with qutip 3.1. On 9 May 2016 at 02:52, Qi notifications@github.com wrote:. > There doesn't seem to be the package released under Ubuntu 16.04 channel.; > After I added the Ubuntu PPA for QuTiP, I got the following error/warning:; > ; > qxd@ubuntu1604$: sudo apt-get update; > ...; > W: The repository 'http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu xenial Release' does not have a Release file.; > N: Data from such a repository can't be authenticated and is therefore potentially dangerous to use.; > N: See apt-secure(8) manpage for repository creation and user configuration details.; > E: Failed to fetch http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu/dists/xenial/main/binary-amd64/Packages 404 Not Found; > E: Failed to fetch http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu/dists/xenial/main/binary-i386/Packages 404 Not Found; > ; > Thanks for maintaining it :); > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/issues/472",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/472#issuecomment-218122293
https://github.com/qutip/qutip/issues/472#issuecomment-218122293:455,Deployability,update,update,455,"We have decided not to continue to maintain the Ubuntu channel. Please; install from source to using qutip 3.2.; Alternatively you can use the conda-forge channel if you are able to work; with qutip 3.1. On 9 May 2016 at 02:52, Qi notifications@github.com wrote:. > There doesn't seem to be the package released under Ubuntu 16.04 channel.; > After I added the Ubuntu PPA for QuTiP, I got the following error/warning:; > ; > qxd@ubuntu1604$: sudo apt-get update; > ...; > W: The repository 'http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu xenial Release' does not have a Release file.; > N: Data from such a repository can't be authenticated and is therefore potentially dangerous to use.; > N: See apt-secure(8) manpage for repository creation and user configuration details.; > E: Failed to fetch http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu/dists/xenial/main/binary-amd64/Packages 404 Not Found; > E: Failed to fetch http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu/dists/xenial/main/binary-i386/Packages 404 Not Found; > ; > Thanks for maintaining it :); > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/issues/472",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/472#issuecomment-218122293
https://github.com/qutip/qutip/issues/472#issuecomment-218122293:534,Deployability,release,releases,534,"We have decided not to continue to maintain the Ubuntu channel. Please; install from source to using qutip 3.2.; Alternatively you can use the conda-forge channel if you are able to work; with qutip 3.1. On 9 May 2016 at 02:52, Qi notifications@github.com wrote:. > There doesn't seem to be the package released under Ubuntu 16.04 channel.; > After I added the Ubuntu PPA for QuTiP, I got the following error/warning:; > ; > qxd@ubuntu1604$: sudo apt-get update; > ...; > W: The repository 'http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu xenial Release' does not have a Release file.; > N: Data from such a repository can't be authenticated and is therefore potentially dangerous to use.; > N: See apt-secure(8) manpage for repository creation and user configuration details.; > E: Failed to fetch http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu/dists/xenial/main/binary-amd64/Packages 404 Not Found; > E: Failed to fetch http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu/dists/xenial/main/binary-i386/Packages 404 Not Found; > ; > Thanks for maintaining it :); > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/issues/472",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/472#issuecomment-218122293
https://github.com/qutip/qutip/issues/472#issuecomment-218122293:557,Deployability,Release,Release,557,"We have decided not to continue to maintain the Ubuntu channel. Please; install from source to using qutip 3.2.; Alternatively you can use the conda-forge channel if you are able to work; with qutip 3.1. On 9 May 2016 at 02:52, Qi notifications@github.com wrote:. > There doesn't seem to be the package released under Ubuntu 16.04 channel.; > After I added the Ubuntu PPA for QuTiP, I got the following error/warning:; > ; > qxd@ubuntu1604$: sudo apt-get update; > ...; > W: The repository 'http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu xenial Release' does not have a Release file.; > N: Data from such a repository can't be authenticated and is therefore potentially dangerous to use.; > N: See apt-secure(8) manpage for repository creation and user configuration details.; > E: Failed to fetch http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu/dists/xenial/main/binary-amd64/Packages 404 Not Found; > E: Failed to fetch http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu/dists/xenial/main/binary-i386/Packages 404 Not Found; > ; > Thanks for maintaining it :); > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/issues/472",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/472#issuecomment-218122293
https://github.com/qutip/qutip/issues/472#issuecomment-218122293:582,Deployability,Release,Release,582,"We have decided not to continue to maintain the Ubuntu channel. Please; install from source to using qutip 3.2.; Alternatively you can use the conda-forge channel if you are able to work; with qutip 3.1. On 9 May 2016 at 02:52, Qi notifications@github.com wrote:. > There doesn't seem to be the package released under Ubuntu 16.04 channel.; > After I added the Ubuntu PPA for QuTiP, I got the following error/warning:; > ; > qxd@ubuntu1604$: sudo apt-get update; > ...; > W: The repository 'http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu xenial Release' does not have a Release file.; > N: Data from such a repository can't be authenticated and is therefore potentially dangerous to use.; > N: See apt-secure(8) manpage for repository creation and user configuration details.; > E: Failed to fetch http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu/dists/xenial/main/binary-amd64/Packages 404 Not Found; > E: Failed to fetch http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu/dists/xenial/main/binary-i386/Packages 404 Not Found; > ; > Thanks for maintaining it :); > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/issues/472",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/472#issuecomment-218122293
https://github.com/qutip/qutip/issues/472#issuecomment-218122293:765,Deployability,configurat,configuration,765,"We have decided not to continue to maintain the Ubuntu channel. Please; install from source to using qutip 3.2.; Alternatively you can use the conda-forge channel if you are able to work; with qutip 3.1. On 9 May 2016 at 02:52, Qi notifications@github.com wrote:. > There doesn't seem to be the package released under Ubuntu 16.04 channel.; > After I added the Ubuntu PPA for QuTiP, I got the following error/warning:; > ; > qxd@ubuntu1604$: sudo apt-get update; > ...; > W: The repository 'http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu xenial Release' does not have a Release file.; > N: Data from such a repository can't be authenticated and is therefore potentially dangerous to use.; > N: See apt-secure(8) manpage for repository creation and user configuration details.; > E: Failed to fetch http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu/dists/xenial/main/binary-amd64/Packages 404 Not Found; > E: Failed to fetch http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu/dists/xenial/main/binary-i386/Packages 404 Not Found; > ; > Thanks for maintaining it :); > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/issues/472",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/472#issuecomment-218122293
https://github.com/qutip/qutip/issues/472#issuecomment-218122293:853,Deployability,release,releases,853,"We have decided not to continue to maintain the Ubuntu channel. Please; install from source to using qutip 3.2.; Alternatively you can use the conda-forge channel if you are able to work; with qutip 3.1. On 9 May 2016 at 02:52, Qi notifications@github.com wrote:. > There doesn't seem to be the package released under Ubuntu 16.04 channel.; > After I added the Ubuntu PPA for QuTiP, I got the following error/warning:; > ; > qxd@ubuntu1604$: sudo apt-get update; > ...; > W: The repository 'http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu xenial Release' does not have a Release file.; > N: Data from such a repository can't be authenticated and is therefore potentially dangerous to use.; > N: See apt-secure(8) manpage for repository creation and user configuration details.; > E: Failed to fetch http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu/dists/xenial/main/binary-amd64/Packages 404 Not Found; > E: Failed to fetch http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu/dists/xenial/main/binary-i386/Packages 404 Not Found; > ; > Thanks for maintaining it :); > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/issues/472",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/472#issuecomment-218122293
https://github.com/qutip/qutip/issues/472#issuecomment-218122293:988,Deployability,release,releases,988,"We have decided not to continue to maintain the Ubuntu channel. Please; install from source to using qutip 3.2.; Alternatively you can use the conda-forge channel if you are able to work; with qutip 3.1. On 9 May 2016 at 02:52, Qi notifications@github.com wrote:. > There doesn't seem to be the package released under Ubuntu 16.04 channel.; > After I added the Ubuntu PPA for QuTiP, I got the following error/warning:; > ; > qxd@ubuntu1604$: sudo apt-get update; > ...; > W: The repository 'http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu xenial Release' does not have a Release file.; > N: Data from such a repository can't be authenticated and is therefore potentially dangerous to use.; > N: See apt-secure(8) manpage for repository creation and user configuration details.; > E: Failed to fetch http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu/dists/xenial/main/binary-amd64/Packages 404 Not Found; > E: Failed to fetch http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu/dists/xenial/main/binary-i386/Packages 404 Not Found; > ; > Thanks for maintaining it :); > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/issues/472",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/472#issuecomment-218122293
https://github.com/qutip/qutip/issues/472#issuecomment-218122293:765,Modifiability,config,configuration,765,"We have decided not to continue to maintain the Ubuntu channel. Please; install from source to using qutip 3.2.; Alternatively you can use the conda-forge channel if you are able to work; with qutip 3.1. On 9 May 2016 at 02:52, Qi notifications@github.com wrote:. > There doesn't seem to be the package released under Ubuntu 16.04 channel.; > After I added the Ubuntu PPA for QuTiP, I got the following error/warning:; > ; > qxd@ubuntu1604$: sudo apt-get update; > ...; > W: The repository 'http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu xenial Release' does not have a Release file.; > N: Data from such a repository can't be authenticated and is therefore potentially dangerous to use.; > N: See apt-secure(8) manpage for repository creation and user configuration details.; > E: Failed to fetch http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu/dists/xenial/main/binary-amd64/Packages 404 Not Found; > E: Failed to fetch http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu/dists/xenial/main/binary-i386/Packages 404 Not Found; > ; > Thanks for maintaining it :); > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/issues/472",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/472#issuecomment-218122293
https://github.com/qutip/qutip/issues/472#issuecomment-218122293:639,Security,authenticat,authenticated,639,"We have decided not to continue to maintain the Ubuntu channel. Please; install from source to using qutip 3.2.; Alternatively you can use the conda-forge channel if you are able to work; with qutip 3.1. On 9 May 2016 at 02:52, Qi notifications@github.com wrote:. > There doesn't seem to be the package released under Ubuntu 16.04 channel.; > After I added the Ubuntu PPA for QuTiP, I got the following error/warning:; > ; > qxd@ubuntu1604$: sudo apt-get update; > ...; > W: The repository 'http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu xenial Release' does not have a Release file.; > N: Data from such a repository can't be authenticated and is therefore potentially dangerous to use.; > N: See apt-secure(8) manpage for repository creation and user configuration details.; > E: Failed to fetch http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu/dists/xenial/main/binary-amd64/Packages 404 Not Found; > E: Failed to fetch http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu/dists/xenial/main/binary-i386/Packages 404 Not Found; > ; > Thanks for maintaining it :); > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/issues/472",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/472#issuecomment-218122293
https://github.com/qutip/qutip/issues/472#issuecomment-218122293:714,Security,secur,secure,714,"We have decided not to continue to maintain the Ubuntu channel. Please; install from source to using qutip 3.2.; Alternatively you can use the conda-forge channel if you are able to work; with qutip 3.1. On 9 May 2016 at 02:52, Qi notifications@github.com wrote:. > There doesn't seem to be the package released under Ubuntu 16.04 channel.; > After I added the Ubuntu PPA for QuTiP, I got the following error/warning:; > ; > qxd@ubuntu1604$: sudo apt-get update; > ...; > W: The repository 'http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu xenial Release' does not have a Release file.; > N: Data from such a repository can't be authenticated and is therefore potentially dangerous to use.; > N: See apt-secure(8) manpage for repository creation and user configuration details.; > E: Failed to fetch http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu/dists/xenial/main/binary-amd64/Packages 404 Not Found; > E: Failed to fetch http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu/dists/xenial/main/binary-i386/Packages 404 Not Found; > ; > Thanks for maintaining it :); > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/issues/472",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/472#issuecomment-218122293
https://github.com/qutip/qutip/issues/472#issuecomment-218226943:394,Testability,test,tests,394,"@ajgpitch Do you have any detailed instructions on using the 3.2 develop branch in Jupyter notebook? I posted a thread in the [email list](https://groups.google.com/forum/#!topic/qutip/oh1t7xJg5x8) while having trouble to compile the examples in using Stochastic equation solvers. I have tried to compile the source and to call from Conda-forge virtual environment, but always fail despite all tests have been passed. Let me know if those examples are outdated. Thanks.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/472#issuecomment-218226943
https://github.com/qutip/qutip/issues/472#issuecomment-218413712:79,Testability,test,test,79,"Yes, the development notebooks can become outdated. Sometimes they are used to test specific new features. . Please remind me here specifically which notebook you have found a problem with and I will raise an issue for it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/472#issuecomment-218413712
https://github.com/qutip/qutip/issues/473#issuecomment-222041567:191,Testability,test,tests,191,"I believe that this is actually intentional, as random sampling of CPTP channels is implemented by the `rand_super_bcsz` and `to_kraus` functions. `rand_kraus_map` is useful for writing unit tests, but is not yet a part of the public API.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/473#issuecomment-222041567
https://github.com/qutip/qutip/issues/474#issuecomment-219623485:69,Energy Efficiency,charge,charge,69,"A simple example of a operator that is traceless and not a dm is the charge operator, e.g. `charge(4)`. How would we know a difference in this case without further info?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/474#issuecomment-219623485
https://github.com/qutip/qutip/issues/474#issuecomment-219623485:92,Energy Efficiency,charge,charge,92,"A simple example of a operator that is traceless and not a dm is the charge operator, e.g. `charge(4)`. How would we know a difference in this case without further info?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/474#issuecomment-219623485
https://github.com/qutip/qutip/issues/474#issuecomment-219623485:2,Usability,simpl,simple,2,"A simple example of a operator that is traceless and not a dm is the charge operator, e.g. `charge(4)`. How would we know a difference in this case without further info?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/474#issuecomment-219623485
https://github.com/qutip/qutip/issues/475#issuecomment-221078645:800,Availability,error,error,800,"I quite like this. I find the operator-to-vector-vector-to-operator casting too cumbersome. I also think its OK notation wise, since we typically use parenthesis when superoperators act on operators. Another option however would be to add this functionality to `Qobj.__mul__`, such that `Qobj.__mul__` is interpreted as 'acting on' if an operator is multiplied from the left on a state, or a superoperator from the left on an operator. Leaving out the parenthesis is also pretty standard notation. For the `Qobj.__call__` solution, I don't like so much that ""A(B)"" is interpreted as ""A B A.dag()"" when A and B are both operators though. This is not standard notation anywhere that I'm familiar with and I would personally be very confused by getting this result. If anything I would have expected an error or possibly the product ""AB"".",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/475#issuecomment-221078645
https://github.com/qutip/qutip/issues/475#issuecomment-221128096:936,Availability,error,error,936,"I'm glad that you like the `__call__` option for `super(oper)`; my thought there was that having `__mul__` cas op-to-vec and vec-to-op could lead to some surprising behavior, especially when manipulating Choi states. As for the proposed semantics for `oper(oper)`, my thought behind making that return `A * B * A.dag()` is that this behavior would then be identical to `to_super(A)(B)`, such that it would be a consistent with previously-used semantics within QuTiP. In particular, all of the superoperator representation conversions so far treat `type=""oper""` Qobj instances as acting by conjugation. Though I agree that adopting `A(B) = A * B * A.dag()` for the `oper(oper)` case could raise some potential for confusion, I think that it may be worth it for consistency, especially since `__call__` would not conflict with any previous code. That said, given that it could be confusing, I agree it could make sense for it to raise an error.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/475#issuecomment-221128096
https://github.com/qutip/qutip/issues/475#issuecomment-221453079:650,Usability,clear,clear,650,"Re `oper(oper)`, I'd personally prefer to be ""forced"" to write `to_super(A)(B)`. Actually I'd even more prefer to write `sprepost(A, A.dag())(B)`. I honestly wouldn't have guessed that `to_super` does a conjugation (if I didn't already know), and at the moment I can't see it in the docstring, so the only way I'd find this out is by looking at the code. The docstring actually claims to raise a `TypeError` if the input is not a map. Even in the code, in the `to_super` function the only comment made if the input is an `oper` is `# Assume unitary` which is a confusing comment. At a minimum I think that this type of non-obvious behavior should be clear from docstrings. For `__mul__` vs. `__call__` I see your point regarding Choi matrices representing superoperators. I would expect `__mul__` to treat a Choi matrix simply as an operator. I think the case for a `__call__` function is strong then.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/475#issuecomment-221453079
https://github.com/qutip/qutip/issues/475#issuecomment-221453079:820,Usability,simpl,simply,820,"Re `oper(oper)`, I'd personally prefer to be ""forced"" to write `to_super(A)(B)`. Actually I'd even more prefer to write `sprepost(A, A.dag())(B)`. I honestly wouldn't have guessed that `to_super` does a conjugation (if I didn't already know), and at the moment I can't see it in the docstring, so the only way I'd find this out is by looking at the code. The docstring actually claims to raise a `TypeError` if the input is not a map. Even in the code, in the `to_super` function the only comment made if the input is an `oper` is `# Assume unitary` which is a confusing comment. At a minimum I think that this type of non-obvious behavior should be clear from docstrings. For `__mul__` vs. `__call__` I see your point regarding Choi matrices representing superoperators. I would expect `__mul__` to treat a Choi matrix simply as an operator. I think the case for a `__call__` function is strong then.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/475#issuecomment-221453079
https://github.com/qutip/qutip/pull/476#issuecomment-221221607:40,Availability,error,errors,40,Can anyone explain why all these travis errors occur?; It seems like they all relate to CVXOPT. They also seem to occur many (10) times each.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/476#issuecomment-221221607
https://github.com/qutip/qutip/pull/476#issuecomment-221224582:50,Testability,test,test,50,"It looks like something broke in the diamond norm test cases, but I'm not sure why. I'll take a look, see if I figure out what happened.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/476#issuecomment-221224582
https://github.com/qutip/qutip/pull/476#issuecomment-221861640:7,Availability,error,errors,7,"The CI errors do not relate to this change, and it is only a one character bug fix, so I will merge unless anyone objects.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/476#issuecomment-221861640
https://github.com/qutip/qutip/pull/478#issuecomment-221337624:58,Testability,test,tests,58,"Need to add unitarity checking and data dumping into some tests. ; Also, will squash commits before merging.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/478#issuecomment-221337624
https://github.com/qutip/qutip/pull/478#issuecomment-221549276:12,Testability,test,tests,12,The dumping tests were mainly added to increase coverage; The unitarity test would have caught #477,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/478#issuecomment-221549276
https://github.com/qutip/qutip/pull/478#issuecomment-221549276:72,Testability,test,test,72,The dumping tests were mainly added to increase coverage; The unitarity test would have caught #477,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/478#issuecomment-221549276
https://github.com/qutip/qutip/pull/478#issuecomment-223043013:100,Testability,test,tests,100,"I have rebased to pick up all the recent bug fixes. Hopefully this will mean this will pass all the tests now.; I have been using the new features quite a lot, so I will squash and merge if this passes the tests.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/478#issuecomment-223043013
https://github.com/qutip/qutip/pull/478#issuecomment-223043013:206,Testability,test,tests,206,"I have rebased to pick up all the recent bug fixes. Hopefully this will mean this will pass all the tests now.; I have been using the new features quite a lot, so I will squash and merge if this passes the tests.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/478#issuecomment-223043013
https://github.com/qutip/qutip/issues/479#issuecomment-221550684:90,Availability,error,error,90,"An explicit warning / exception sounds good to me.; You mention a UserWarning there as an error. Does that mean that the ODE solver raises an exception? If so, then there can be no useful application of this, and hence we should raise an exception - probably a RuntimeError unless anyone has a better suggestion.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/479#issuecomment-221550684
https://github.com/qutip/qutip/issues/479#issuecomment-221595850:40,Availability,error,error,40,"@ajgpitch yes, the solver does raise an error... but not always. I was able to get it to integrate a few times but it was very inconsistent. The other error it sometimes raises is ""too much accuracy was requested for the precision of the machine"". When I realized the issue, I was very surprised it even got that far and I still don't know how it could ever run the calculation with a bad `rho0`. @nonhermitian yes, I see the point in the code where `mesolve` digs down into various types of `H` input. I'll work on something for the easy Qobj cases first, and think about how to handle the function case. Should be able to test the size of what the function returns.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/479#issuecomment-221595850
https://github.com/qutip/qutip/issues/479#issuecomment-221595850:151,Availability,error,error,151,"@ajgpitch yes, the solver does raise an error... but not always. I was able to get it to integrate a few times but it was very inconsistent. The other error it sometimes raises is ""too much accuracy was requested for the precision of the machine"". When I realized the issue, I was very surprised it even got that far and I still don't know how it could ever run the calculation with a bad `rho0`. @nonhermitian yes, I see the point in the code where `mesolve` digs down into various types of `H` input. I'll work on something for the easy Qobj cases first, and think about how to handle the function case. Should be able to test the size of what the function returns.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/479#issuecomment-221595850
https://github.com/qutip/qutip/issues/479#issuecomment-221595850:465,Availability,down,down,465,"@ajgpitch yes, the solver does raise an error... but not always. I was able to get it to integrate a few times but it was very inconsistent. The other error it sometimes raises is ""too much accuracy was requested for the precision of the machine"". When I realized the issue, I was very surprised it even got that far and I still don't know how it could ever run the calculation with a bad `rho0`. @nonhermitian yes, I see the point in the code where `mesolve` digs down into various types of `H` input. I'll work on something for the easy Qobj cases first, and think about how to handle the function case. Should be able to test the size of what the function returns.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/479#issuecomment-221595850
https://github.com/qutip/qutip/issues/479#issuecomment-221595850:89,Deployability,integrat,integrate,89,"@ajgpitch yes, the solver does raise an error... but not always. I was able to get it to integrate a few times but it was very inconsistent. The other error it sometimes raises is ""too much accuracy was requested for the precision of the machine"". When I realized the issue, I was very surprised it even got that far and I still don't know how it could ever run the calculation with a bad `rho0`. @nonhermitian yes, I see the point in the code where `mesolve` digs down into various types of `H` input. I'll work on something for the easy Qobj cases first, and think about how to handle the function case. Should be able to test the size of what the function returns.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/479#issuecomment-221595850
https://github.com/qutip/qutip/issues/479#issuecomment-221595850:89,Integrability,integrat,integrate,89,"@ajgpitch yes, the solver does raise an error... but not always. I was able to get it to integrate a few times but it was very inconsistent. The other error it sometimes raises is ""too much accuracy was requested for the precision of the machine"". When I realized the issue, I was very surprised it even got that far and I still don't know how it could ever run the calculation with a bad `rho0`. @nonhermitian yes, I see the point in the code where `mesolve` digs down into various types of `H` input. I'll work on something for the easy Qobj cases first, and think about how to handle the function case. Should be able to test the size of what the function returns.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/479#issuecomment-221595850
https://github.com/qutip/qutip/issues/479#issuecomment-221595850:624,Testability,test,test,624,"@ajgpitch yes, the solver does raise an error... but not always. I was able to get it to integrate a few times but it was very inconsistent. The other error it sometimes raises is ""too much accuracy was requested for the precision of the machine"". When I realized the issue, I was very surprised it even got that far and I still don't know how it could ever run the calculation with a bad `rho0`. @nonhermitian yes, I see the point in the code where `mesolve` digs down into various types of `H` input. I'll work on something for the easy Qobj cases first, and think about how to handle the function case. Should be able to test the size of what the function returns.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/479#issuecomment-221595850
https://github.com/qutip/qutip/pull/481#issuecomment-222396968:271,Testability,test,test,271,"You should take care of the fact that both `H` and `rho0` are allowed to be superoperators as well. `H` can be a Liouvillian, and `rho0` can be a superoperator to allow for the type of situation mentioned in #384. If one of the two, but not both, are supers, your simple test will fail. . We should fix the docstring of `mesolve` so that it mentions that rho0 can be a super.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/481#issuecomment-222396968
https://github.com/qutip/qutip/pull/481#issuecomment-222396968:264,Usability,simpl,simple,264,"You should take care of the fact that both `H` and `rho0` are allowed to be superoperators as well. `H` can be a Liouvillian, and `rho0` can be a superoperator to allow for the type of situation mentioned in #384. If one of the two, but not both, are supers, your simple test will fail. . We should fix the docstring of `mesolve` so that it mentions that rho0 can be a super.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/481#issuecomment-222396968
https://github.com/qutip/qutip/issues/484#issuecomment-222046697:488,Availability,failure,failures,488,"After investigating a bit more, I think this may be related to 3a5ab42200b3f1851343081614064e67be3b02bf, in that SCS and CVXOPT are not yet compatible with MKL, and require OpenBLAS instead. If I locally use pip to install SCS and CVXOPT with an MKL-enabled conda env, then importing cvxpy fails due to undefined symbols. On the other hand, if I use the Omnia conda channel to install cvxopt and scs, then `dnorm()` works, but the conda env switches to use OpenBLAS. To resolve the build failures, then, I'd suggest temporarily marking the tests as skipped if MKL is enabled.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/484#issuecomment-222046697
https://github.com/qutip/qutip/issues/484#issuecomment-222046697:215,Deployability,install,install,215,"After investigating a bit more, I think this may be related to 3a5ab42200b3f1851343081614064e67be3b02bf, in that SCS and CVXOPT are not yet compatible with MKL, and require OpenBLAS instead. If I locally use pip to install SCS and CVXOPT with an MKL-enabled conda env, then importing cvxpy fails due to undefined symbols. On the other hand, if I use the Omnia conda channel to install cvxopt and scs, then `dnorm()` works, but the conda env switches to use OpenBLAS. To resolve the build failures, then, I'd suggest temporarily marking the tests as skipped if MKL is enabled.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/484#issuecomment-222046697
https://github.com/qutip/qutip/issues/484#issuecomment-222046697:377,Deployability,install,install,377,"After investigating a bit more, I think this may be related to 3a5ab42200b3f1851343081614064e67be3b02bf, in that SCS and CVXOPT are not yet compatible with MKL, and require OpenBLAS instead. If I locally use pip to install SCS and CVXOPT with an MKL-enabled conda env, then importing cvxpy fails due to undefined symbols. On the other hand, if I use the Omnia conda channel to install cvxopt and scs, then `dnorm()` works, but the conda env switches to use OpenBLAS. To resolve the build failures, then, I'd suggest temporarily marking the tests as skipped if MKL is enabled.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/484#issuecomment-222046697
https://github.com/qutip/qutip/issues/484#issuecomment-222046697:540,Testability,test,tests,540,"After investigating a bit more, I think this may be related to 3a5ab42200b3f1851343081614064e67be3b02bf, in that SCS and CVXOPT are not yet compatible with MKL, and require OpenBLAS instead. If I locally use pip to install SCS and CVXOPT with an MKL-enabled conda env, then importing cvxpy fails due to undefined symbols. On the other hand, if I use the Omnia conda channel to install cvxopt and scs, then `dnorm()` works, but the conda env switches to use OpenBLAS. To resolve the build failures, then, I'd suggest temporarily marking the tests as skipped if MKL is enabled.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/484#issuecomment-222046697
https://github.com/qutip/qutip/issues/484#issuecomment-222047139:87,Testability,test,tests,87,A sticky situation given that Anaconda is MKL by default now. I agree that perhaps the tests can be skipped if MKL is present. This can easily be checked via the qutip.settings.has_mkl property,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/484#issuecomment-222047139
https://github.com/qutip/qutip/issues/484#issuecomment-222050661:198,Testability,test,tests,198,"Agreed, it is a bit sticky. I'd guess that since the MKL switchover was relatively recent, they haven't had time to get things working. At any rate, I'll go on and make a PR that skips the relevant tests then.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/484#issuecomment-222050661
https://github.com/qutip/qutip/issues/484#issuecomment-222058027:40,Availability,failure,failure,40,"Yeah, I'd like to get a better isolated failure case first, but once I've done that, I think it makes sense to report this to CVXOPT especially.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/484#issuecomment-222058027
https://github.com/qutip/qutip/pull/485#issuecomment-222051129:22,Testability,test,tests,22,"Minus the known dnorm tests, this is ready to go.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/485#issuecomment-222051129
https://github.com/qutip/qutip/pull/487#issuecomment-222056144:29,Availability,failure,failures,29,"It looks as though the known failures are now properly being skipped. Given that this is causing build failures elsewhere, I'd suggest that this PR is ready for merge.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/487#issuecomment-222056144
https://github.com/qutip/qutip/pull/487#issuecomment-222056144:103,Availability,failure,failures,103,"It looks as though the known failures are now properly being skipped. Given that this is causing build failures elsewhere, I'd suggest that this PR is ready for merge.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/487#issuecomment-222056144
https://github.com/qutip/qutip/pull/489#issuecomment-224191450:203,Deployability,install,install,203,"Testing locally in a conda environment without NumPy, this seems to work. In particular, I tested with the following commands:. ``` bash; $ conda create -n nonp python=2.7; $ source activate nonp; $ pip install git+https://github.com/cgranade/qutip.git@fix-setup-numpy#egg=QuTiP; ```. Notably, `conda create` still provides setuptools. I have not yet tested with neither setuptools nor numpy.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/489#issuecomment-224191450
https://github.com/qutip/qutip/pull/489#issuecomment-224191450:0,Testability,Test,Testing,0,"Testing locally in a conda environment without NumPy, this seems to work. In particular, I tested with the following commands:. ``` bash; $ conda create -n nonp python=2.7; $ source activate nonp; $ pip install git+https://github.com/cgranade/qutip.git@fix-setup-numpy#egg=QuTiP; ```. Notably, `conda create` still provides setuptools. I have not yet tested with neither setuptools nor numpy.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/489#issuecomment-224191450
https://github.com/qutip/qutip/pull/489#issuecomment-224191450:91,Testability,test,tested,91,"Testing locally in a conda environment without NumPy, this seems to work. In particular, I tested with the following commands:. ``` bash; $ conda create -n nonp python=2.7; $ source activate nonp; $ pip install git+https://github.com/cgranade/qutip.git@fix-setup-numpy#egg=QuTiP; ```. Notably, `conda create` still provides setuptools. I have not yet tested with neither setuptools nor numpy.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/489#issuecomment-224191450
https://github.com/qutip/qutip/pull/489#issuecomment-224191450:351,Testability,test,tested,351,"Testing locally in a conda environment without NumPy, this seems to work. In particular, I tested with the following commands:. ``` bash; $ conda create -n nonp python=2.7; $ source activate nonp; $ pip install git+https://github.com/cgranade/qutip.git@fix-setup-numpy#egg=QuTiP; ```. Notably, `conda create` still provides setuptools. I have not yet tested with neither setuptools nor numpy.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/489#issuecomment-224191450
https://github.com/qutip/qutip/pull/489#issuecomment-224199565:5,Testability,test,test,5,"As a test, I've used this PR from the RTD build for [qinfer/python-qinfer](https://github.com/QInfer/python-qinfer), since the RTD virtualenv is by default rather restrictive. The modified setup.py works for that build process, which I think is a fairly good sign.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/489#issuecomment-224199565
https://github.com/qutip/qutip/pull/489#issuecomment-225084745:119,Deployability,install,installed,119,"After more examination, it appears as though `qutip/cy/setup.py` breaks the fix introduced by this PR if Cython is not installed before QuTiP. I'll investigate, but I'd like to get `pip install` working even from very minimal environments.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/489#issuecomment-225084745
https://github.com/qutip/qutip/pull/489#issuecomment-225084745:186,Deployability,install,install,186,"After more examination, it appears as though `qutip/cy/setup.py` breaks the fix introduced by this PR if Cython is not installed before QuTiP. I'll investigate, but I'd like to get `pip install` working even from very minimal environments.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/489#issuecomment-225084745
https://github.com/qutip/qutip/pull/489#issuecomment-225778916:45,Deployability,install,installed,45,"My current understanding is that if NumPy is installed but not Cython, then when `egg-info` is called, NumPy distutils will happily follow `add_subpackage` to pull in `qutip/cy/setup.py`, then choke on the missing Cython dependency. On the other hand, if both are missing, the new fallbacks introduced in this PR will be tripped, such that the `add_subpackage` call will not happen, and `qutip/cy/setup.py` will not get called. I'll readily admit that NumPy but not Cython is an edge case, but it's one that we can probably deal with by trying to import Cython at the top and letting the `ImportError` branch us onto the fallback path. Thoughts?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/489#issuecomment-225778916
https://github.com/qutip/qutip/pull/489#issuecomment-225778916:221,Integrability,depend,dependency,221,"My current understanding is that if NumPy is installed but not Cython, then when `egg-info` is called, NumPy distutils will happily follow `add_subpackage` to pull in `qutip/cy/setup.py`, then choke on the missing Cython dependency. On the other hand, if both are missing, the new fallbacks introduced in this PR will be tripped, such that the `add_subpackage` call will not happen, and `qutip/cy/setup.py` will not get called. I'll readily admit that NumPy but not Cython is an edge case, but it's one that we can probably deal with by trying to import Cython at the top and letting the `ImportError` branch us onto the fallback path. Thoughts?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/489#issuecomment-225778916
https://github.com/qutip/qutip/pull/489#issuecomment-225887759:287,Deployability,install,install,287,"The latest attempt seems to correctly generate `egg_info` if NumPy is missing, if NumPy is present by not Cython, or if both are present. That should make it much easier to list QuTiP as an external dependency in `requirements.txt`, as our`setup.py` should no longer assume a particular install order. If the latest CI passes, I'll add the review merge ready label.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/489#issuecomment-225887759
https://github.com/qutip/qutip/pull/489#issuecomment-225887759:199,Integrability,depend,dependency,199,"The latest attempt seems to correctly generate `egg_info` if NumPy is missing, if NumPy is present by not Cython, or if both are present. That should make it much easier to list QuTiP as an external dependency in `requirements.txt`, as our`setup.py` should no longer assume a particular install order. If the latest CI passes, I'll add the review merge ready label.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/489#issuecomment-225887759
https://github.com/qutip/qutip/issues/491#issuecomment-224636252:17,Deployability,install,installing,17,"You are probably installing with the Anaconda Python package. It points to a location that does not exist for the mkl blas libraries, which it doesnt ship with. . The fortran solver is somewhat dated, and the Python solver is now close in performance. You should probably use the latter one.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/491#issuecomment-224636252
https://github.com/qutip/qutip/issues/491#issuecomment-224636252:239,Performance,perform,performance,239,"You are probably installing with the Anaconda Python package. It points to a location that does not exist for the mkl blas libraries, which it doesnt ship with. . The fortran solver is somewhat dated, and the Python solver is now close in performance. You should probably use the latter one.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/491#issuecomment-224636252
https://github.com/qutip/qutip/issues/491#issuecomment-224640717:22,Deployability,install,install,22,Thanks - I'm doing an install on behalf of one of our researchers - I'll pass comment back.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/491#issuecomment-224640717
https://github.com/qutip/qutip/pull/492#issuecomment-224659499:18,Testability,test,test,18,I will add a unit test to check for this later tonight.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/492#issuecomment-224659499
https://github.com/qutip/qutip/issues/493#issuecomment-224977661:19,Availability,error,error,19,"Indeed, that is my error. Will fix tonight. Thanks for finding it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/493#issuecomment-224977661
https://github.com/qutip/qutip/pull/499#issuecomment-225806294:59,Testability,test,tests,59,"So as to make progress on 3.2.0, since this is now passing tests, I'll mark as review ready.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/499#issuecomment-225806294
https://github.com/qutip/qutip/issues/500#issuecomment-237693792:39,Availability,error,error,39,It appeared there was a floating point error in ode2es that would result in an empty amplitude string for small enough amplitudes. In PR #509 is fixed by forcing the amplitude to zero when the numerical error occurs.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/500#issuecomment-237693792
https://github.com/qutip/qutip/issues/500#issuecomment-237693792:203,Availability,error,error,203,It appeared there was a floating point error in ode2es that would result in an empty amplitude string for small enough amplitudes. In PR #509 is fixed by forcing the amplitude to zero when the numerical error occurs.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/500#issuecomment-237693792
https://github.com/qutip/qutip/issues/501#issuecomment-229219087:28,Deployability,release,release,28,Did you try the development release? Seems to work just fine.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/501#issuecomment-229219087
https://github.com/qutip/qutip/issues/501#issuecomment-229492311:43,Deployability,install,installation,43,Yes. Perhaps it is a problem with my scipy installation or something. I'll do some more poking around and try to figure it out.; - Bill,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/501#issuecomment-229492311
https://github.com/qutip/qutip/pull/502#issuecomment-230108497:234,Deployability,integrat,integration,234,I see. `propagator` performed better with a system of d=2^5 in a simple test. I better do some testing of even larger systems then before merging this. Any thoughts on why `propagator` might be slower also for small systems and short integration times? Some overhead related to parallelization? Thanks for the info.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/502#issuecomment-230108497
https://github.com/qutip/qutip/pull/502#issuecomment-230108497:234,Integrability,integrat,integration,234,I see. `propagator` performed better with a system of d=2^5 in a simple test. I better do some testing of even larger systems then before merging this. Any thoughts on why `propagator` might be slower also for small systems and short integration times? Some overhead related to parallelization? Thanks for the info.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/502#issuecomment-230108497
https://github.com/qutip/qutip/pull/502#issuecomment-230108497:20,Performance,perform,performed,20,I see. `propagator` performed better with a system of d=2^5 in a simple test. I better do some testing of even larger systems then before merging this. Any thoughts on why `propagator` might be slower also for small systems and short integration times? Some overhead related to parallelization? Thanks for the info.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/502#issuecomment-230108497
https://github.com/qutip/qutip/pull/502#issuecomment-230108497:72,Testability,test,test,72,I see. `propagator` performed better with a system of d=2^5 in a simple test. I better do some testing of even larger systems then before merging this. Any thoughts on why `propagator` might be slower also for small systems and short integration times? Some overhead related to parallelization? Thanks for the info.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/502#issuecomment-230108497
https://github.com/qutip/qutip/pull/502#issuecomment-230108497:95,Testability,test,testing,95,I see. `propagator` performed better with a system of d=2^5 in a simple test. I better do some testing of even larger systems then before merging this. Any thoughts on why `propagator` might be slower also for small systems and short integration times? Some overhead related to parallelization? Thanks for the info.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/502#issuecomment-230108497
https://github.com/qutip/qutip/pull/502#issuecomment-230108497:65,Usability,simpl,simple,65,I see. `propagator` performed better with a system of d=2^5 in a simple test. I better do some testing of even larger systems then before merging this. Any thoughts on why `propagator` might be slower also for small systems and short integration times? Some overhead related to parallelization? Thanks for the info.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/502#issuecomment-230108497
https://github.com/qutip/qutip/pull/502#issuecomment-230115449:25,Deployability,integrat,integrator,25,"Added optional argument `integrator` to choose between `propagator` or `mesolve` (also a `parallel={True,False}` argument). Realized there is probably not much to gain from `mesolve` returning a sparse matrix for large systems, however. This is because in the memorycascade method there is some postprocessing of the propagator using the `tensor_contract` method (written by @cgranade) which does not support sparse matrices, so it gets converted to dense anyway. Still `mesolve` actually performs a bit faster for small systems and small times, so still useful to be able to choose the method I guess.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/502#issuecomment-230115449
https://github.com/qutip/qutip/pull/502#issuecomment-230115449:25,Integrability,integrat,integrator,25,"Added optional argument `integrator` to choose between `propagator` or `mesolve` (also a `parallel={True,False}` argument). Realized there is probably not much to gain from `mesolve` returning a sparse matrix for large systems, however. This is because in the memorycascade method there is some postprocessing of the propagator using the `tensor_contract` method (written by @cgranade) which does not support sparse matrices, so it gets converted to dense anyway. Still `mesolve` actually performs a bit faster for small systems and small times, so still useful to be able to choose the method I guess.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/502#issuecomment-230115449
https://github.com/qutip/qutip/pull/502#issuecomment-230115449:489,Performance,perform,performs,489,"Added optional argument `integrator` to choose between `propagator` or `mesolve` (also a `parallel={True,False}` argument). Realized there is probably not much to gain from `mesolve` returning a sparse matrix for large systems, however. This is because in the memorycascade method there is some postprocessing of the propagator using the `tensor_contract` method (written by @cgranade) which does not support sparse matrices, so it gets converted to dense anyway. Still `mesolve` actually performs a bit faster for small systems and small times, so still useful to be able to choose the method I guess.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/502#issuecomment-230115449
https://github.com/qutip/qutip/pull/502#issuecomment-239598753:47,Usability,clear,clear,47,"Yeah, it's ready. It's not actually completely clear when `propagator` outperforms `mesolve`. In the future I will likely completely change the algorithm based on work done by @swhalen who has written a faster implementation..",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/502#issuecomment-239598753
https://github.com/qutip/qutip/issues/503#issuecomment-232399813:129,Availability,error,error,129,"1. You would not get the correct jump statistics.; 2. If you dont jump at the correct time, then you introduce another source of error. Then the next jump time will be affected and so on.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/503#issuecomment-232399813
https://github.com/qutip/qutip/issues/503#issuecomment-242744689:114,Integrability,interface,interface,114,It is just a way to get at the internal data without going through extra checks. It is specific to the ode solver interface.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/503#issuecomment-242744689
https://github.com/qutip/qutip/issues/508#issuecomment-237343862:71,Availability,error,error,71,Did you grab the latest version from git? I cant seem to reproduce the error. Perhaps something has changed in diags since scipy 0.15,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/508#issuecomment-237343862
https://github.com/qutip/qutip/issues/508#issuecomment-237353730:73,Testability,test,tests,73,"The git version matches the latest, so I am a bit confused. We have unit tests for expm that work fine and I pulled the latest version here at work and everything works. I also couldnt find any changes to diags in the scipy changelog. . Maybe remove the old qutip in the sitepackages dir and reinstall.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/508#issuecomment-237353730
https://github.com/qutip/qutip/issues/508#issuecomment-237678785:80,Availability,fault,fault,80,I'll give that a shot. Are there any other hidden dependencies that could be at fault?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/508#issuecomment-237678785
https://github.com/qutip/qutip/issues/508#issuecomment-237678785:50,Integrability,depend,dependencies,50,I'll give that a shot. Are there any other hidden dependencies that could be at fault?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/508#issuecomment-237678785
https://github.com/qutip/qutip/issues/508#issuecomment-237683040:33,Testability,test,tests,33,"Have you tried running the qutip tests? Do those fail? Again, I cannot reproduce the issue.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/508#issuecomment-237683040
https://github.com/qutip/qutip/pull/517#issuecomment-242631394:70,Integrability,depend,dependent,70,Going to merge this now so that I can start to embed it into the time-dependent stuff.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/517#issuecomment-242631394
https://github.com/qutip/qutip/pull/517#issuecomment-242632529:48,Energy Efficiency,efficient,efficient,48,"Cool, that sounds good - I'm sure its much more efficient than what i had proposed.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/517#issuecomment-242632529
https://github.com/qutip/qutip/pull/520#issuecomment-242132546:55,Integrability,depend,dependence,55,What is the motivation behind having the np array time dependence? Is this some thing that the cubic spline function could be used for?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/520#issuecomment-242132546
https://github.com/qutip/qutip/pull/520#issuecomment-242156352:347,Integrability,depend,dependent,347,"I'm a bit confused by your comment: Are asking about the purpose of the np array format itself or did you mean why it should accept non-linear tlists?. The reason it should accept non-linear tlists is because such a thing is good to have when you simulate rapid dynamics followed by slow dynamics. This currently works for all other types of time-dependent formats, so it should also work for this one to avoid confusion. The cubic spline would indeed be nicer here, except it seems to me like it assumes the x values are linear?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/520#issuecomment-242156352
https://github.com/qutip/qutip/pull/520#issuecomment-242156352:405,Safety,avoid,avoid,405,"I'm a bit confused by your comment: Are asking about the purpose of the np array format itself or did you mean why it should accept non-linear tlists?. The reason it should accept non-linear tlists is because such a thing is good to have when you simulate rapid dynamics followed by slow dynamics. This currently works for all other types of time-dependent formats, so it should also work for this one to avoid confusion. The cubic spline would indeed be nicer here, except it seems to me like it assumes the x values are linear?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/520#issuecomment-242156352
https://github.com/qutip/qutip/pull/520#issuecomment-242156997:539,Integrability,depend,dependent,539,"I mean the motivation behind the np array format itself. And indeed, the spline assumes equidistant points. > On Aug 24, 2016, at 12:04, kafischer notifications@github.com wrote:; > ; > I'm a bit confused by your comment: Are asking about the purpose of the np array format itself or did you mean why it should accept non-linear tlists?; > ; > The reason it should accept non-linear tlists is because such a thing is good to have when you simulate rapid dynamics followed by slow dynamics. This currently works for all other types of time-dependent formats, so it should also work for this one to avoid confusion. The cubic spline would indeed be nicer here, except it seems to me like it assumes the x values are linear?; > ; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub https://github.com/qutip/qutip/pull/520#issuecomment-242156352, or mute the thread https://github.com/notifications/unsubscribe-auth/ABMPqQvb7gOJPOTVk9VN5KseYyslkRUTks5qjIe8gaJpZM4JpQHD.; > ; > Untracked with Trackbuster https://trackbuster.com/?sig",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/520#issuecomment-242156997
https://github.com/qutip/qutip/pull/520#issuecomment-242156997:597,Safety,avoid,avoid,597,"I mean the motivation behind the np array format itself. And indeed, the spline assumes equidistant points. > On Aug 24, 2016, at 12:04, kafischer notifications@github.com wrote:; > ; > I'm a bit confused by your comment: Are asking about the purpose of the np array format itself or did you mean why it should accept non-linear tlists?; > ; > The reason it should accept non-linear tlists is because such a thing is good to have when you simulate rapid dynamics followed by slow dynamics. This currently works for all other types of time-dependent formats, so it should also work for this one to avoid confusion. The cubic spline would indeed be nicer here, except it seems to me like it assumes the x values are linear?; > ; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub https://github.com/qutip/qutip/pull/520#issuecomment-242156352, or mute the thread https://github.com/notifications/unsubscribe-auth/ABMPqQvb7gOJPOTVk9VN5KseYyslkRUTks5qjIe8gaJpZM4JpQHD.; > ; > Untracked with Trackbuster https://trackbuster.com/?sig",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/520#issuecomment-242156997
https://github.com/qutip/qutip/pull/520#issuecomment-242163512:304,Integrability,depend,dependence,304,"To be honest, I'm not 100% sure myself since it's just turned into a string and cythonized anyways. When it was initially added, I had assumed the purpose was because occasionally a function doesn't work well in the string format or is slow in the list-function format. Though I'm working on adding time-dependence to the Bloch Redfield solver by using piece-wise constant Liouvillians and there I guess the format makes a bit more sense intuitively, PR #525.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/520#issuecomment-242163512
https://github.com/qutip/qutip/pull/520#issuecomment-242163512:438,Usability,intuit,intuitively,438,"To be honest, I'm not 100% sure myself since it's just turned into a string and cythonized anyways. When it was initially added, I had assumed the purpose was because occasionally a function doesn't work well in the string format or is slow in the list-function format. Though I'm working on adding time-dependence to the Bloch Redfield solver by using piece-wise constant Liouvillians and there I guess the format makes a bit more sense intuitively, PR #525.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/520#issuecomment-242163512
https://github.com/qutip/qutip/pull/520#issuecomment-245201155:87,Energy Efficiency,efficient,efficient,87,"@nonhermitian Hi Paul, I don't think it's super important to necessarily have the most efficient algorithm for allowing non-linear tlists, but I do think it's good to have to avoid tripping up more advanced users. Could you merge this solution and we can always re-visit later?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/520#issuecomment-245201155
https://github.com/qutip/qutip/pull/520#issuecomment-245201155:175,Safety,avoid,avoid,175,"@nonhermitian Hi Paul, I don't think it's super important to necessarily have the most efficient algorithm for allowing non-linear tlists, but I do think it's good to have to avoid tripping up more advanced users. Could you merge this solution and we can always re-visit later?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/520#issuecomment-245201155
https://github.com/qutip/qutip/pull/520#issuecomment-245346539:88,Deployability,integrat,integrate,88,"Let me look at this tonight. I have uploaded the spline interp method, and just need to integrate it with the solvers. I have done something similar elsewhere so it should be straightforward (provided I find the time). The nonlinear list is also easy to incorporate, for SciPy 0.18+, so I think that there interp methods will replace the array based format in the future.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/520#issuecomment-245346539
https://github.com/qutip/qutip/pull/520#issuecomment-245346539:88,Integrability,integrat,integrate,88,"Let me look at this tonight. I have uploaded the spline interp method, and just need to integrate it with the solvers. I have done something similar elsewhere so it should be straightforward (provided I find the time). The nonlinear list is also easy to incorporate, for SciPy 0.18+, so I think that there interp methods will replace the array based format in the future.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/520#issuecomment-245346539
https://github.com/qutip/qutip/pull/520#issuecomment-245490392:18,Testability,test,test,18,This needs a unit test of some kind.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/520#issuecomment-245490392
https://github.com/qutip/qutip/pull/520#issuecomment-245499422:38,Usability,simpl,simple,38,"Sure, I just added something - just a simple mesolve that uses a nonlinear tlist - I put it in test_td_formats.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/520#issuecomment-245499422
https://github.com/qutip/qutip/pull/520#issuecomment-272532379:7,Deployability,update,update,7,"Please update this pull to the latest master so that we can check if it passes with all of the new changes. Also, your last correlation pull did not clean up the *.pyx files generated for the time-dependent code. Please check that no *.pyx files are left hanging around in this pull.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/520#issuecomment-272532379
https://github.com/qutip/qutip/pull/520#issuecomment-272532379:197,Integrability,depend,dependent,197,"Please update this pull to the latest master so that we can check if it passes with all of the new changes. Also, your last correlation pull did not clean up the *.pyx files generated for the time-dependent code. Please check that no *.pyx files are left hanging around in this pull.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/520#issuecomment-272532379
https://github.com/qutip/qutip/issues/521#issuecomment-242049107:1476,Safety,detect,detector,1476," special about the value 1e-12 for Qobjs. Multiplying a Qobj with a float<1e-12 makes all entries 0.0. This can be worked-around as follows:; > ; > import qutip as qt; > ; > print ""Multiplying states by small numbers""; > state3 = qt.ket([0])_1e-12; > state2 = qt.ket([0])_9.999e-13; > state1 = qt.ket([0]); > state1 = qt.Qobj(state1.data*9.999e-13); > print 'Desired:', state3; > print 'Undesired:', state2; > print 'Desired, via workaround:', state1; > Multiplying states by small numbers; > Normal behaviour: Quantum object: dims = [[2], [1]], shape = [2, 1], type = ket; > Qobj data =; > [[ 1.00000000e-12]; > [ 0.00000000e+00]]; > Undesired: Quantum object: dims = [[2], [1]], shape = [2, 1], type = ket; > Qobj data =; > [[ 0.]; > [ 0.]]; > Desired, via workaround: Quantum object: dims = [[2], [1]], shape = [2, 1], type = ket; > Qobj data =; > [[ 9.99900000e-13]; > [ 0.00000000e+00]]; > But the real issue is this 1e-12 bound also occurs for expect() with tensored operators and states even if the individual operators's values are all >1e-12:; > ; > print ""Expectation values with small operators""; > detector = qt.Qobj([[1e-12, 0], [0, 0]]); > print 'Expectation value for one detector, 1e-12:', qt.expect(detector, qt.ket([0])); > detector = qt.Qobj([[1e-6, 0], [0, 0]]); > print 'Expectation value for two detectors, 1e-6:', qt.expect(qt.tensor(detector, detector), qt.tensor(qt.ket([0]), qt.ket([0]))); > detector = qt.Qobj([[1e-14, 0], [0, 0]]); > print 'Expectation value for one detector, 1e-14:', qt.expect(detector, qt.ket([0])); > detector = qt.Qobj([[1e-7, 0], [0, 0]]); > print 'Expectation value for two detectors, 1e-7:', qt.expect(qt.tensor(detector, detector), qt.tensor(qt.ket([0]), qt.ket([0]))); > Expectation values with small operators; > Expectation value for one detector, 1e-12: 1e-12; > Expectation value for two detectors, 1e-6: 1e-12; > Expectation value for one detector, 1e-14: 1e-14; > Expectation value for two detectors, 1e-7: 0.0; > It is important for me to ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/521#issuecomment-242049107
https://github.com/qutip/qutip/issues/521#issuecomment-242049107:1553,Safety,detect,detector,1553,"; > ; > print ""Multiplying states by small numbers""; > state3 = qt.ket([0])_1e-12; > state2 = qt.ket([0])_9.999e-13; > state1 = qt.ket([0]); > state1 = qt.Qobj(state1.data*9.999e-13); > print 'Desired:', state3; > print 'Undesired:', state2; > print 'Desired, via workaround:', state1; > Multiplying states by small numbers; > Normal behaviour: Quantum object: dims = [[2], [1]], shape = [2, 1], type = ket; > Qobj data =; > [[ 1.00000000e-12]; > [ 0.00000000e+00]]; > Undesired: Quantum object: dims = [[2], [1]], shape = [2, 1], type = ket; > Qobj data =; > [[ 0.]; > [ 0.]]; > Desired, via workaround: Quantum object: dims = [[2], [1]], shape = [2, 1], type = ket; > Qobj data =; > [[ 9.99900000e-13]; > [ 0.00000000e+00]]; > But the real issue is this 1e-12 bound also occurs for expect() with tensored operators and states even if the individual operators's values are all >1e-12:; > ; > print ""Expectation values with small operators""; > detector = qt.Qobj([[1e-12, 0], [0, 0]]); > print 'Expectation value for one detector, 1e-12:', qt.expect(detector, qt.ket([0])); > detector = qt.Qobj([[1e-6, 0], [0, 0]]); > print 'Expectation value for two detectors, 1e-6:', qt.expect(qt.tensor(detector, detector), qt.tensor(qt.ket([0]), qt.ket([0]))); > detector = qt.Qobj([[1e-14, 0], [0, 0]]); > print 'Expectation value for one detector, 1e-14:', qt.expect(detector, qt.ket([0])); > detector = qt.Qobj([[1e-7, 0], [0, 0]]); > print 'Expectation value for two detectors, 1e-7:', qt.expect(qt.tensor(detector, detector), qt.tensor(qt.ket([0]), qt.ket([0]))); > Expectation values with small operators; > Expectation value for one detector, 1e-12: 1e-12; > Expectation value for two detectors, 1e-6: 1e-12; > Expectation value for one detector, 1e-14: 1e-14; > Expectation value for two detectors, 1e-7: 0.0; > It is important for me to get the real nonzero value in the last case, but I cannot see a way to do it with the current behaviour.; > ; > —; > You are receiving this because you are subscribed",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/521#issuecomment-242049107
https://github.com/qutip/qutip/issues/521#issuecomment-242049107:1582,Safety,detect,detector,1582,"> state3 = qt.ket([0])_1e-12; > state2 = qt.ket([0])_9.999e-13; > state1 = qt.ket([0]); > state1 = qt.Qobj(state1.data*9.999e-13); > print 'Desired:', state3; > print 'Undesired:', state2; > print 'Desired, via workaround:', state1; > Multiplying states by small numbers; > Normal behaviour: Quantum object: dims = [[2], [1]], shape = [2, 1], type = ket; > Qobj data =; > [[ 1.00000000e-12]; > [ 0.00000000e+00]]; > Undesired: Quantum object: dims = [[2], [1]], shape = [2, 1], type = ket; > Qobj data =; > [[ 0.]; > [ 0.]]; > Desired, via workaround: Quantum object: dims = [[2], [1]], shape = [2, 1], type = ket; > Qobj data =; > [[ 9.99900000e-13]; > [ 0.00000000e+00]]; > But the real issue is this 1e-12 bound also occurs for expect() with tensored operators and states even if the individual operators's values are all >1e-12:; > ; > print ""Expectation values with small operators""; > detector = qt.Qobj([[1e-12, 0], [0, 0]]); > print 'Expectation value for one detector, 1e-12:', qt.expect(detector, qt.ket([0])); > detector = qt.Qobj([[1e-6, 0], [0, 0]]); > print 'Expectation value for two detectors, 1e-6:', qt.expect(qt.tensor(detector, detector), qt.tensor(qt.ket([0]), qt.ket([0]))); > detector = qt.Qobj([[1e-14, 0], [0, 0]]); > print 'Expectation value for one detector, 1e-14:', qt.expect(detector, qt.ket([0])); > detector = qt.Qobj([[1e-7, 0], [0, 0]]); > print 'Expectation value for two detectors, 1e-7:', qt.expect(qt.tensor(detector, detector), qt.tensor(qt.ket([0]), qt.ket([0]))); > Expectation values with small operators; > Expectation value for one detector, 1e-12: 1e-12; > Expectation value for two detectors, 1e-6: 1e-12; > Expectation value for one detector, 1e-14: 1e-14; > Expectation value for two detectors, 1e-7: 0.0; > It is important for me to get the real nonzero value in the last case, but I cannot see a way to do it with the current behaviour.; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, vi",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/521#issuecomment-242049107
https://github.com/qutip/qutip/issues/521#issuecomment-242049107:1608,Safety,detect,detector,1608,"1e-12; > state2 = qt.ket([0])_9.999e-13; > state1 = qt.ket([0]); > state1 = qt.Qobj(state1.data*9.999e-13); > print 'Desired:', state3; > print 'Undesired:', state2; > print 'Desired, via workaround:', state1; > Multiplying states by small numbers; > Normal behaviour: Quantum object: dims = [[2], [1]], shape = [2, 1], type = ket; > Qobj data =; > [[ 1.00000000e-12]; > [ 0.00000000e+00]]; > Undesired: Quantum object: dims = [[2], [1]], shape = [2, 1], type = ket; > Qobj data =; > [[ 0.]; > [ 0.]]; > Desired, via workaround: Quantum object: dims = [[2], [1]], shape = [2, 1], type = ket; > Qobj data =; > [[ 9.99900000e-13]; > [ 0.00000000e+00]]; > But the real issue is this 1e-12 bound also occurs for expect() with tensored operators and states even if the individual operators's values are all >1e-12:; > ; > print ""Expectation values with small operators""; > detector = qt.Qobj([[1e-12, 0], [0, 0]]); > print 'Expectation value for one detector, 1e-12:', qt.expect(detector, qt.ket([0])); > detector = qt.Qobj([[1e-6, 0], [0, 0]]); > print 'Expectation value for two detectors, 1e-6:', qt.expect(qt.tensor(detector, detector), qt.tensor(qt.ket([0]), qt.ket([0]))); > detector = qt.Qobj([[1e-14, 0], [0, 0]]); > print 'Expectation value for one detector, 1e-14:', qt.expect(detector, qt.ket([0])); > detector = qt.Qobj([[1e-7, 0], [0, 0]]); > print 'Expectation value for two detectors, 1e-7:', qt.expect(qt.tensor(detector, detector), qt.tensor(qt.ket([0]), qt.ket([0]))); > Expectation values with small operators; > Expectation value for one detector, 1e-12: 1e-12; > Expectation value for two detectors, 1e-6: 1e-12; > Expectation value for one detector, 1e-14: 1e-14; > Expectation value for two detectors, 1e-7: 0.0; > It is important for me to get the real nonzero value in the last case, but I cannot see a way to do it with the current behaviour.; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub, or mute",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/521#issuecomment-242049107
https://github.com/qutip/qutip/issues/521#issuecomment-242049107:1684,Safety,detect,detectors,1684,"e1 = qt.ket([0]); > state1 = qt.Qobj(state1.data*9.999e-13); > print 'Desired:', state3; > print 'Undesired:', state2; > print 'Desired, via workaround:', state1; > Multiplying states by small numbers; > Normal behaviour: Quantum object: dims = [[2], [1]], shape = [2, 1], type = ket; > Qobj data =; > [[ 1.00000000e-12]; > [ 0.00000000e+00]]; > Undesired: Quantum object: dims = [[2], [1]], shape = [2, 1], type = ket; > Qobj data =; > [[ 0.]; > [ 0.]]; > Desired, via workaround: Quantum object: dims = [[2], [1]], shape = [2, 1], type = ket; > Qobj data =; > [[ 9.99900000e-13]; > [ 0.00000000e+00]]; > But the real issue is this 1e-12 bound also occurs for expect() with tensored operators and states even if the individual operators's values are all >1e-12:; > ; > print ""Expectation values with small operators""; > detector = qt.Qobj([[1e-12, 0], [0, 0]]); > print 'Expectation value for one detector, 1e-12:', qt.expect(detector, qt.ket([0])); > detector = qt.Qobj([[1e-6, 0], [0, 0]]); > print 'Expectation value for two detectors, 1e-6:', qt.expect(qt.tensor(detector, detector), qt.tensor(qt.ket([0]), qt.ket([0]))); > detector = qt.Qobj([[1e-14, 0], [0, 0]]); > print 'Expectation value for one detector, 1e-14:', qt.expect(detector, qt.ket([0])); > detector = qt.Qobj([[1e-7, 0], [0, 0]]); > print 'Expectation value for two detectors, 1e-7:', qt.expect(qt.tensor(detector, detector), qt.tensor(qt.ket([0]), qt.ket([0]))); > Expectation values with small operators; > Expectation value for one detector, 1e-12: 1e-12; > Expectation value for two detectors, 1e-6: 1e-12; > Expectation value for one detector, 1e-14: 1e-14; > Expectation value for two detectors, 1e-7: 0.0; > It is important for me to get the real nonzero value in the last case, but I cannot see a way to do it with the current behaviour.; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub, or mute the thread.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/521#issuecomment-242049107
https://github.com/qutip/qutip/issues/521#issuecomment-242049107:1723,Safety,detect,detector,1723,"e1 = qt.ket([0]); > state1 = qt.Qobj(state1.data*9.999e-13); > print 'Desired:', state3; > print 'Undesired:', state2; > print 'Desired, via workaround:', state1; > Multiplying states by small numbers; > Normal behaviour: Quantum object: dims = [[2], [1]], shape = [2, 1], type = ket; > Qobj data =; > [[ 1.00000000e-12]; > [ 0.00000000e+00]]; > Undesired: Quantum object: dims = [[2], [1]], shape = [2, 1], type = ket; > Qobj data =; > [[ 0.]; > [ 0.]]; > Desired, via workaround: Quantum object: dims = [[2], [1]], shape = [2, 1], type = ket; > Qobj data =; > [[ 9.99900000e-13]; > [ 0.00000000e+00]]; > But the real issue is this 1e-12 bound also occurs for expect() with tensored operators and states even if the individual operators's values are all >1e-12:; > ; > print ""Expectation values with small operators""; > detector = qt.Qobj([[1e-12, 0], [0, 0]]); > print 'Expectation value for one detector, 1e-12:', qt.expect(detector, qt.ket([0])); > detector = qt.Qobj([[1e-6, 0], [0, 0]]); > print 'Expectation value for two detectors, 1e-6:', qt.expect(qt.tensor(detector, detector), qt.tensor(qt.ket([0]), qt.ket([0]))); > detector = qt.Qobj([[1e-14, 0], [0, 0]]); > print 'Expectation value for one detector, 1e-14:', qt.expect(detector, qt.ket([0])); > detector = qt.Qobj([[1e-7, 0], [0, 0]]); > print 'Expectation value for two detectors, 1e-7:', qt.expect(qt.tensor(detector, detector), qt.tensor(qt.ket([0]), qt.ket([0]))); > Expectation values with small operators; > Expectation value for one detector, 1e-12: 1e-12; > Expectation value for two detectors, 1e-6: 1e-12; > Expectation value for one detector, 1e-14: 1e-14; > Expectation value for two detectors, 1e-7: 0.0; > It is important for me to get the real nonzero value in the last case, but I cannot see a way to do it with the current behaviour.; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub, or mute the thread.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/521#issuecomment-242049107
https://github.com/qutip/qutip/issues/521#issuecomment-242049107:1733,Safety,detect,detector,1733,"e1 = qt.ket([0]); > state1 = qt.Qobj(state1.data*9.999e-13); > print 'Desired:', state3; > print 'Undesired:', state2; > print 'Desired, via workaround:', state1; > Multiplying states by small numbers; > Normal behaviour: Quantum object: dims = [[2], [1]], shape = [2, 1], type = ket; > Qobj data =; > [[ 1.00000000e-12]; > [ 0.00000000e+00]]; > Undesired: Quantum object: dims = [[2], [1]], shape = [2, 1], type = ket; > Qobj data =; > [[ 0.]; > [ 0.]]; > Desired, via workaround: Quantum object: dims = [[2], [1]], shape = [2, 1], type = ket; > Qobj data =; > [[ 9.99900000e-13]; > [ 0.00000000e+00]]; > But the real issue is this 1e-12 bound also occurs for expect() with tensored operators and states even if the individual operators's values are all >1e-12:; > ; > print ""Expectation values with small operators""; > detector = qt.Qobj([[1e-12, 0], [0, 0]]); > print 'Expectation value for one detector, 1e-12:', qt.expect(detector, qt.ket([0])); > detector = qt.Qobj([[1e-6, 0], [0, 0]]); > print 'Expectation value for two detectors, 1e-6:', qt.expect(qt.tensor(detector, detector), qt.tensor(qt.ket([0]), qt.ket([0]))); > detector = qt.Qobj([[1e-14, 0], [0, 0]]); > print 'Expectation value for one detector, 1e-14:', qt.expect(detector, qt.ket([0])); > detector = qt.Qobj([[1e-7, 0], [0, 0]]); > print 'Expectation value for two detectors, 1e-7:', qt.expect(qt.tensor(detector, detector), qt.tensor(qt.ket([0]), qt.ket([0]))); > Expectation values with small operators; > Expectation value for one detector, 1e-12: 1e-12; > Expectation value for two detectors, 1e-6: 1e-12; > Expectation value for one detector, 1e-14: 1e-14; > Expectation value for two detectors, 1e-7: 0.0; > It is important for me to get the real nonzero value in the last case, but I cannot see a way to do it with the current behaviour.; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub, or mute the thread.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/521#issuecomment-242049107
https://github.com/qutip/qutip/issues/521#issuecomment-242049107:1784,Safety,detect,detector,1784,"e1 = qt.ket([0]); > state1 = qt.Qobj(state1.data*9.999e-13); > print 'Desired:', state3; > print 'Undesired:', state2; > print 'Desired, via workaround:', state1; > Multiplying states by small numbers; > Normal behaviour: Quantum object: dims = [[2], [1]], shape = [2, 1], type = ket; > Qobj data =; > [[ 1.00000000e-12]; > [ 0.00000000e+00]]; > Undesired: Quantum object: dims = [[2], [1]], shape = [2, 1], type = ket; > Qobj data =; > [[ 0.]; > [ 0.]]; > Desired, via workaround: Quantum object: dims = [[2], [1]], shape = [2, 1], type = ket; > Qobj data =; > [[ 9.99900000e-13]; > [ 0.00000000e+00]]; > But the real issue is this 1e-12 bound also occurs for expect() with tensored operators and states even if the individual operators's values are all >1e-12:; > ; > print ""Expectation values with small operators""; > detector = qt.Qobj([[1e-12, 0], [0, 0]]); > print 'Expectation value for one detector, 1e-12:', qt.expect(detector, qt.ket([0])); > detector = qt.Qobj([[1e-6, 0], [0, 0]]); > print 'Expectation value for two detectors, 1e-6:', qt.expect(qt.tensor(detector, detector), qt.tensor(qt.ket([0]), qt.ket([0]))); > detector = qt.Qobj([[1e-14, 0], [0, 0]]); > print 'Expectation value for one detector, 1e-14:', qt.expect(detector, qt.ket([0])); > detector = qt.Qobj([[1e-7, 0], [0, 0]]); > print 'Expectation value for two detectors, 1e-7:', qt.expect(qt.tensor(detector, detector), qt.tensor(qt.ket([0]), qt.ket([0]))); > Expectation values with small operators; > Expectation value for one detector, 1e-12: 1e-12; > Expectation value for two detectors, 1e-6: 1e-12; > Expectation value for one detector, 1e-14: 1e-14; > Expectation value for two detectors, 1e-7: 0.0; > It is important for me to get the real nonzero value in the last case, but I cannot see a way to do it with the current behaviour.; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub, or mute the thread.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/521#issuecomment-242049107
https://github.com/qutip/qutip/issues/521#issuecomment-242049107:1861,Safety,detect,detector,1861,"e1 = qt.ket([0]); > state1 = qt.Qobj(state1.data*9.999e-13); > print 'Desired:', state3; > print 'Undesired:', state2; > print 'Desired, via workaround:', state1; > Multiplying states by small numbers; > Normal behaviour: Quantum object: dims = [[2], [1]], shape = [2, 1], type = ket; > Qobj data =; > [[ 1.00000000e-12]; > [ 0.00000000e+00]]; > Undesired: Quantum object: dims = [[2], [1]], shape = [2, 1], type = ket; > Qobj data =; > [[ 0.]; > [ 0.]]; > Desired, via workaround: Quantum object: dims = [[2], [1]], shape = [2, 1], type = ket; > Qobj data =; > [[ 9.99900000e-13]; > [ 0.00000000e+00]]; > But the real issue is this 1e-12 bound also occurs for expect() with tensored operators and states even if the individual operators's values are all >1e-12:; > ; > print ""Expectation values with small operators""; > detector = qt.Qobj([[1e-12, 0], [0, 0]]); > print 'Expectation value for one detector, 1e-12:', qt.expect(detector, qt.ket([0])); > detector = qt.Qobj([[1e-6, 0], [0, 0]]); > print 'Expectation value for two detectors, 1e-6:', qt.expect(qt.tensor(detector, detector), qt.tensor(qt.ket([0]), qt.ket([0]))); > detector = qt.Qobj([[1e-14, 0], [0, 0]]); > print 'Expectation value for one detector, 1e-14:', qt.expect(detector, qt.ket([0])); > detector = qt.Qobj([[1e-7, 0], [0, 0]]); > print 'Expectation value for two detectors, 1e-7:', qt.expect(qt.tensor(detector, detector), qt.tensor(qt.ket([0]), qt.ket([0]))); > Expectation values with small operators; > Expectation value for one detector, 1e-12: 1e-12; > Expectation value for two detectors, 1e-6: 1e-12; > Expectation value for one detector, 1e-14: 1e-14; > Expectation value for two detectors, 1e-7: 0.0; > It is important for me to get the real nonzero value in the last case, but I cannot see a way to do it with the current behaviour.; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub, or mute the thread.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/521#issuecomment-242049107
https://github.com/qutip/qutip/issues/521#issuecomment-242049107:1890,Safety,detect,detector,1890,"e1 = qt.ket([0]); > state1 = qt.Qobj(state1.data*9.999e-13); > print 'Desired:', state3; > print 'Undesired:', state2; > print 'Desired, via workaround:', state1; > Multiplying states by small numbers; > Normal behaviour: Quantum object: dims = [[2], [1]], shape = [2, 1], type = ket; > Qobj data =; > [[ 1.00000000e-12]; > [ 0.00000000e+00]]; > Undesired: Quantum object: dims = [[2], [1]], shape = [2, 1], type = ket; > Qobj data =; > [[ 0.]; > [ 0.]]; > Desired, via workaround: Quantum object: dims = [[2], [1]], shape = [2, 1], type = ket; > Qobj data =; > [[ 9.99900000e-13]; > [ 0.00000000e+00]]; > But the real issue is this 1e-12 bound also occurs for expect() with tensored operators and states even if the individual operators's values are all >1e-12:; > ; > print ""Expectation values with small operators""; > detector = qt.Qobj([[1e-12, 0], [0, 0]]); > print 'Expectation value for one detector, 1e-12:', qt.expect(detector, qt.ket([0])); > detector = qt.Qobj([[1e-6, 0], [0, 0]]); > print 'Expectation value for two detectors, 1e-6:', qt.expect(qt.tensor(detector, detector), qt.tensor(qt.ket([0]), qt.ket([0]))); > detector = qt.Qobj([[1e-14, 0], [0, 0]]); > print 'Expectation value for one detector, 1e-14:', qt.expect(detector, qt.ket([0])); > detector = qt.Qobj([[1e-7, 0], [0, 0]]); > print 'Expectation value for two detectors, 1e-7:', qt.expect(qt.tensor(detector, detector), qt.tensor(qt.ket([0]), qt.ket([0]))); > Expectation values with small operators; > Expectation value for one detector, 1e-12: 1e-12; > Expectation value for two detectors, 1e-6: 1e-12; > Expectation value for one detector, 1e-14: 1e-14; > Expectation value for two detectors, 1e-7: 0.0; > It is important for me to get the real nonzero value in the last case, but I cannot see a way to do it with the current behaviour.; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub, or mute the thread.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/521#issuecomment-242049107
https://github.com/qutip/qutip/issues/521#issuecomment-242049107:1916,Safety,detect,detector,1916,"e1 = qt.ket([0]); > state1 = qt.Qobj(state1.data*9.999e-13); > print 'Desired:', state3; > print 'Undesired:', state2; > print 'Desired, via workaround:', state1; > Multiplying states by small numbers; > Normal behaviour: Quantum object: dims = [[2], [1]], shape = [2, 1], type = ket; > Qobj data =; > [[ 1.00000000e-12]; > [ 0.00000000e+00]]; > Undesired: Quantum object: dims = [[2], [1]], shape = [2, 1], type = ket; > Qobj data =; > [[ 0.]; > [ 0.]]; > Desired, via workaround: Quantum object: dims = [[2], [1]], shape = [2, 1], type = ket; > Qobj data =; > [[ 9.99900000e-13]; > [ 0.00000000e+00]]; > But the real issue is this 1e-12 bound also occurs for expect() with tensored operators and states even if the individual operators's values are all >1e-12:; > ; > print ""Expectation values with small operators""; > detector = qt.Qobj([[1e-12, 0], [0, 0]]); > print 'Expectation value for one detector, 1e-12:', qt.expect(detector, qt.ket([0])); > detector = qt.Qobj([[1e-6, 0], [0, 0]]); > print 'Expectation value for two detectors, 1e-6:', qt.expect(qt.tensor(detector, detector), qt.tensor(qt.ket([0]), qt.ket([0]))); > detector = qt.Qobj([[1e-14, 0], [0, 0]]); > print 'Expectation value for one detector, 1e-14:', qt.expect(detector, qt.ket([0])); > detector = qt.Qobj([[1e-7, 0], [0, 0]]); > print 'Expectation value for two detectors, 1e-7:', qt.expect(qt.tensor(detector, detector), qt.tensor(qt.ket([0]), qt.ket([0]))); > Expectation values with small operators; > Expectation value for one detector, 1e-12: 1e-12; > Expectation value for two detectors, 1e-6: 1e-12; > Expectation value for one detector, 1e-14: 1e-14; > Expectation value for two detectors, 1e-7: 0.0; > It is important for me to get the real nonzero value in the last case, but I cannot see a way to do it with the current behaviour.; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub, or mute the thread.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/521#issuecomment-242049107
https://github.com/qutip/qutip/issues/521#issuecomment-242049107:1992,Safety,detect,detectors,1992,"e1 = qt.ket([0]); > state1 = qt.Qobj(state1.data*9.999e-13); > print 'Desired:', state3; > print 'Undesired:', state2; > print 'Desired, via workaround:', state1; > Multiplying states by small numbers; > Normal behaviour: Quantum object: dims = [[2], [1]], shape = [2, 1], type = ket; > Qobj data =; > [[ 1.00000000e-12]; > [ 0.00000000e+00]]; > Undesired: Quantum object: dims = [[2], [1]], shape = [2, 1], type = ket; > Qobj data =; > [[ 0.]; > [ 0.]]; > Desired, via workaround: Quantum object: dims = [[2], [1]], shape = [2, 1], type = ket; > Qobj data =; > [[ 9.99900000e-13]; > [ 0.00000000e+00]]; > But the real issue is this 1e-12 bound also occurs for expect() with tensored operators and states even if the individual operators's values are all >1e-12:; > ; > print ""Expectation values with small operators""; > detector = qt.Qobj([[1e-12, 0], [0, 0]]); > print 'Expectation value for one detector, 1e-12:', qt.expect(detector, qt.ket([0])); > detector = qt.Qobj([[1e-6, 0], [0, 0]]); > print 'Expectation value for two detectors, 1e-6:', qt.expect(qt.tensor(detector, detector), qt.tensor(qt.ket([0]), qt.ket([0]))); > detector = qt.Qobj([[1e-14, 0], [0, 0]]); > print 'Expectation value for one detector, 1e-14:', qt.expect(detector, qt.ket([0])); > detector = qt.Qobj([[1e-7, 0], [0, 0]]); > print 'Expectation value for two detectors, 1e-7:', qt.expect(qt.tensor(detector, detector), qt.tensor(qt.ket([0]), qt.ket([0]))); > Expectation values with small operators; > Expectation value for one detector, 1e-12: 1e-12; > Expectation value for two detectors, 1e-6: 1e-12; > Expectation value for one detector, 1e-14: 1e-14; > Expectation value for two detectors, 1e-7: 0.0; > It is important for me to get the real nonzero value in the last case, but I cannot see a way to do it with the current behaviour.; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub, or mute the thread.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/521#issuecomment-242049107
