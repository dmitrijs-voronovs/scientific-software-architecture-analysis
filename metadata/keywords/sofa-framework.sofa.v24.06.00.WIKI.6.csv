quality_attribute,keyword,matched_word,sentence,source,filename,author,repo,version,wiki,url
Deployability,update,update,"a::gl::component::shader::OglInt2Attribute Class Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglInt2Attribute:. [legend]. Public Member Functions;  SOFA_CLASS (OglInt2Attribute, SOFA_TEMPLATE3(OglAttribute, 2, GL_INT, SOFA_TEMPLATE2(sofa::type::Vec, 2, int)));  ;  OglInt2Attribute ();  ; virtual ~OglInt2Attribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 2, int >), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< sofa::type::Vec< 2, int > > * beginEdit ();  ; void endEdit ();  ; const type::vector< sofa::type::Vec< 2, int > > & getValue () const;  ; void setValue (const type::vector< sofa::type::Vec< 2, int > > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVertex () override;  ; int getSETotalSize () override;  ;  Public Member Functions inherited",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute.html
Integrability,depend,dependent,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::component::shader::OglInt2Attribute Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglInt2Attribute Class Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglInt2Attribute:. [legend]. Public Member Functions;  SOFA_CLASS (OglInt2Attribute, SOFA_TEMPLATE3(OglAttribute, 2, GL_INT, SOFA_TEMPLATE2(sofa::type::Vec, 2, int)));  ;  OglInt2Attribute ();  ; virtual ~OglInt2Attribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 2, int >), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< sofa::type::Vec< 2, int > > * beginEdit ();  ; void endEdit ();  ; const type::vector< sofa::type::Vec< 2, int > > & getValue () const;  ; void setValue (const type::vector< sofa::type::Vec< 2, int > > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseDat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute.html
Usability,clear,clearVisual,"verride;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVertex () override;  ; int getSETotalSize () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute.html
Deployability,update,updateInternal,"e::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglInt2Variable, SOFA_TEMPLATE(OglVariable, SOFA_TEMPLATE2(type::Vec, 2, int)))sofa::gl::component::shader::OglInt2Variable; OglVariable< type::Vec< 2, int > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::Vec< 2, int > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::Vec< 2, int > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglInt2Variable()sofa::gl::component::shader::OglInt2Variableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglInt2Variable Member List . This is the complete list of members for sofa::gl::component::shader::OglInt2Variable, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCre",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable-members.html
Performance,load,loader,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setValue(const type::Vec< 2, int > &v)sofa::gl::component::shader::OglVariable< type::Vec< 2, int > >inlinevirtual; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglInt2Variable, SOFA_TEMPLATE(OglVariable, SOFA_TEMPLATE2(type::Vec, 2, int)))sofa::gl::component::shader::OglInt2Variable; OglVariable< type::Vec< 2, int > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariabl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCre",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable-members.html
Usability,clear,clearLoggedMessages,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::Vec< 2, int > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::Vec< 2, int > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::object",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable-members.html
Availability,down,down,"﻿. SOFA API: sofa::gl::component::shader::OglInt2Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglInt2Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglInt2Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglInt2Variable, SOFA_TEMPLATE(OglVariable, SOFA_TEMPLATE2(type::Vec, 2, int)));  ;  OglInt2Variable ();  ; virtual ~OglInt2Variable ();  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::Vec< 2, int > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::Vec< 2, int > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  cle",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable.html
Deployability,update,updateVisual,"method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable.html
Integrability,depend,dependent,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::component::shader::OglInt2Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglInt2Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglInt2Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglInt2Variable, SOFA_TEMPLATE(OglVariable, SOFA_TEMPLATE2(type::Vec, 2, int)));  ;  OglInt2Variable ();  ; virtual ~OglInt2Variable ();  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::Vec< 2, int > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::Vec< 2, int > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  cle",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable.html
Usability,clear,clearVisual,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable.html
Deployability,update,updateInternal,"ullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglInt3Attribute, SOFA_TEMPLATE3(OglAttribute, 3, GL_INT, SOFA_TEMPLATE2(sofa::type::Vec, 3, int)))sofa::gl::component::shader::OglInt3Attribute; OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 3, int >), core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >protected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglAttribute() overridesofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >protected; ~OglInt3Attribute()sofa::gl::component::sh",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglInt3Attribute Member List . This is the complete list of members for sofa::gl::component::shader::OglInt3Attribute, including all inherited members. _abosofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >protected; _aboSizesofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >protected; _indexsofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >protected; _lastUpdateDataCountersofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >protected; _needUpdatesofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >protected; _topologysofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >protected; _usagesofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list<",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute-members.html
Performance,load,loader,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setUsage(unsigned int usage)sofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >inline; setValue(const type::vector< sofa::type::Vec< 3, int > > &value)sofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglInt3Attribute, SOFA_TEMPLATE3(OglAttribute, 3, GL_INT, SOFA_TEMPLATE2(sofa::type::Vec, 3, int)))s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute-members.html
Testability,log,logging,"Attribute< 3, GL_INT, sofa::type::Vec< 3, int > >protected; _lastUpdateDataCountersofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >protected; _needUpdatesofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >protected; _topologysofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >protected; _usagesofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute-members.html
Usability,clear,clearLoggedMessages,":VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >; disable()sofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectpro",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute-members.html
Availability,down,down,"﻿. SOFA API: sofa::gl::component::shader::OglInt3Attribute Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglInt3Attribute Class Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglInt3Attribute:. [legend]. Public Member Functions;  SOFA_CLASS (OglInt3Attribute, SOFA_TEMPLATE3(OglAttribute, 3, GL_INT, SOFA_TEMPLATE2(sofa::type::Vec, 3, int)));  ;  OglInt3Attribute ();  ; virtual ~OglInt3Attribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 3, int >), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< sofa::type::Vec< 3, int > > * beginEdit ();  ; void endEdit ();  ; const type::vector< sofa::type::Vec< 3, int > > & getValue () const;  ; void setValue (const type::vector< sofa::type::Vec< 3, int > > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseDat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute.html
Deployability,update,update,"a::gl::component::shader::OglInt3Attribute Class Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglInt3Attribute:. [legend]. Public Member Functions;  SOFA_CLASS (OglInt3Attribute, SOFA_TEMPLATE3(OglAttribute, 3, GL_INT, SOFA_TEMPLATE2(sofa::type::Vec, 3, int)));  ;  OglInt3Attribute ();  ; virtual ~OglInt3Attribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 3, int >), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< sofa::type::Vec< 3, int > > * beginEdit ();  ; void endEdit ();  ; const type::vector< sofa::type::Vec< 3, int > > & getValue () const;  ; void setValue (const type::vector< sofa::type::Vec< 3, int > > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVertex () override;  ; int getSETotalSize () override;  ;  Public Member Functions inherited",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute.html
Integrability,depend,dependent,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::component::shader::OglInt3Attribute Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglInt3Attribute Class Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglInt3Attribute:. [legend]. Public Member Functions;  SOFA_CLASS (OglInt3Attribute, SOFA_TEMPLATE3(OglAttribute, 3, GL_INT, SOFA_TEMPLATE2(sofa::type::Vec, 3, int)));  ;  OglInt3Attribute ();  ; virtual ~OglInt3Attribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 3, int >), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< sofa::type::Vec< 3, int > > * beginEdit ();  ; void endEdit ();  ; const type::vector< sofa::type::Vec< 3, int > > & getValue () const;  ; void setValue (const type::vector< sofa::type::Vec< 3, int > > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseDat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute.html
Usability,clear,clearVisual,"verride;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVertex () override;  ; int getSETotalSize () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute.html
Deployability,update,updateInternal,"e::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglInt3Variable, SOFA_TEMPLATE(OglVariable, SOFA_TEMPLATE2(type::Vec, 3, int)))sofa::gl::component::shader::OglInt3Variable; OglVariable< type::Vec< 3, int > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::Vec< 3, int > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::Vec< 3, int > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglInt3Variable()sofa::gl::component::shader::OglInt3Variableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_variable-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglInt3Variable Member List . This is the complete list of members for sofa::gl::component::shader::OglInt3Variable, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCre",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_variable-members.html
Performance,load,loader,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setValue(const type::Vec< 3, int > &v)sofa::gl::component::shader::OglVariable< type::Vec< 3, int > >inlinevirtual; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglInt3Variable, SOFA_TEMPLATE(OglVariable, SOFA_TEMPLATE2(type::Vec, 3, int)))sofa::gl::component::shader::OglInt3Variable; OglVariable< type::Vec< 3, int > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariabl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_variable-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCre",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_variable-members.html
Usability,clear,clearLoggedMessages,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::Vec< 3, int > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::Vec< 3, int > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::object",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_variable-members.html
Availability,down,down,"﻿. SOFA API: sofa::gl::component::shader::OglInt3Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglInt3Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglInt3Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglInt3Variable, SOFA_TEMPLATE(OglVariable, SOFA_TEMPLATE2(type::Vec, 3, int)));  ;  OglInt3Variable ();  ; virtual ~OglInt3Variable ();  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::Vec< 3, int > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::Vec< 3, int > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  cle",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_variable.html
Deployability,update,updateVisual,"method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_variable.html
Integrability,depend,dependent,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_variable.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::component::shader::OglInt3Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglInt3Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglInt3Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglInt3Variable, SOFA_TEMPLATE(OglVariable, SOFA_TEMPLATE2(type::Vec, 3, int)));  ;  OglInt3Variable ();  ; virtual ~OglInt3Variable ();  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::Vec< 3, int > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::Vec< 3, int > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  cle",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_variable.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_variable.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_variable.html
Usability,clear,clearVisual,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_variable.html
Deployability,update,updateInternal,"ullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglInt4Attribute, SOFA_TEMPLATE3(OglAttribute, 4, GL_INT, SOFA_TEMPLATE2(sofa::type::Vec, 4, int)))sofa::gl::component::shader::OglInt4Attribute; OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 4, int >), core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >protected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglAttribute() overridesofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >protected; ~OglInt4Attribute()sofa::gl::component::sh",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglInt4Attribute Member List . This is the complete list of members for sofa::gl::component::shader::OglInt4Attribute, including all inherited members. _abosofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >protected; _aboSizesofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >protected; _indexsofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >protected; _lastUpdateDataCountersofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >protected; _needUpdatesofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >protected; _topologysofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >protected; _usagesofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list<",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute-members.html
Performance,load,loader,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setUsage(unsigned int usage)sofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >inline; setValue(const type::vector< sofa::type::Vec< 4, int > > &value)sofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglInt4Attribute, SOFA_TEMPLATE3(OglAttribute, 4, GL_INT, SOFA_TEMPLATE2(sofa::type::Vec, 4, int)))s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute-members.html
Testability,log,logging,"Attribute< 4, GL_INT, sofa::type::Vec< 4, int > >protected; _lastUpdateDataCountersofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >protected; _needUpdatesofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >protected; _topologysofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >protected; _usagesofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute-members.html
Usability,clear,clearLoggedMessages,":VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >; disable()sofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectpro",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute-members.html
Availability,down,down,"﻿. SOFA API: sofa::gl::component::shader::OglInt4Attribute Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglInt4Attribute Class Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglInt4Attribute:. [legend]. Public Member Functions;  SOFA_CLASS (OglInt4Attribute, SOFA_TEMPLATE3(OglAttribute, 4, GL_INT, SOFA_TEMPLATE2(sofa::type::Vec, 4, int)));  ;  OglInt4Attribute ();  ; virtual ~OglInt4Attribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 4, int >), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< sofa::type::Vec< 4, int > > * beginEdit ();  ; void endEdit ();  ; const type::vector< sofa::type::Vec< 4, int > > & getValue () const;  ; void setValue (const type::vector< sofa::type::Vec< 4, int > > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseDat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute.html
Deployability,update,update,"a::gl::component::shader::OglInt4Attribute Class Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglInt4Attribute:. [legend]. Public Member Functions;  SOFA_CLASS (OglInt4Attribute, SOFA_TEMPLATE3(OglAttribute, 4, GL_INT, SOFA_TEMPLATE2(sofa::type::Vec, 4, int)));  ;  OglInt4Attribute ();  ; virtual ~OglInt4Attribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 4, int >), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< sofa::type::Vec< 4, int > > * beginEdit ();  ; void endEdit ();  ; const type::vector< sofa::type::Vec< 4, int > > & getValue () const;  ; void setValue (const type::vector< sofa::type::Vec< 4, int > > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVertex () override;  ; int getSETotalSize () override;  ;  Public Member Functions inherited",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute.html
Integrability,depend,dependent,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::component::shader::OglInt4Attribute Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglInt4Attribute Class Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglInt4Attribute:. [legend]. Public Member Functions;  SOFA_CLASS (OglInt4Attribute, SOFA_TEMPLATE3(OglAttribute, 4, GL_INT, SOFA_TEMPLATE2(sofa::type::Vec, 4, int)));  ;  OglInt4Attribute ();  ; virtual ~OglInt4Attribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 4, int >), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< sofa::type::Vec< 4, int > > * beginEdit ();  ; void endEdit ();  ; const type::vector< sofa::type::Vec< 4, int > > & getValue () const;  ; void setValue (const type::vector< sofa::type::Vec< 4, int > > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseDat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute.html
Usability,clear,clearVisual,"verride;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVertex () override;  ; int getSETotalSize () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute.html
Deployability,update,updateInternal,"e::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglInt4Variable, SOFA_TEMPLATE(OglVariable, SOFA_TEMPLATE2(type::Vec, 4, int)))sofa::gl::component::shader::OglInt4Variable; OglVariable< type::Vec< 4, int > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::Vec< 4, int > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::Vec< 4, int > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglInt4Variable()sofa::gl::component::shader::OglInt4Variableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglInt4Variable Member List . This is the complete list of members for sofa::gl::component::shader::OglInt4Variable, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCre",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable-members.html
Performance,load,loader,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setValue(const type::Vec< 4, int > &v)sofa::gl::component::shader::OglVariable< type::Vec< 4, int > >inlinevirtual; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglInt4Variable, SOFA_TEMPLATE(OglVariable, SOFA_TEMPLATE2(type::Vec, 4, int)))sofa::gl::component::shader::OglInt4Variable; OglVariable< type::Vec< 4, int > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariabl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCre",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable-members.html
Usability,clear,clearLoggedMessages,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::Vec< 4, int > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::Vec< 4, int > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::object",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable-members.html
Availability,down,down,"﻿. SOFA API: sofa::gl::component::shader::OglInt4Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglInt4Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglInt4Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglInt4Variable, SOFA_TEMPLATE(OglVariable, SOFA_TEMPLATE2(type::Vec, 4, int)));  ;  OglInt4Variable ();  ; virtual ~OglInt4Variable ();  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::Vec< 4, int > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::Vec< 4, int > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  cle",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html
Deployability,update,updateVisual,"method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html
Integrability,depend,dependent,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::component::shader::OglInt4Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglInt4Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglInt4Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglInt4Variable, SOFA_TEMPLATE(OglVariable, SOFA_TEMPLATE2(type::Vec, 4, int)));  ;  OglInt4Variable ();  ; virtual ~OglInt4Variable ();  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::Vec< 4, int > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::Vec< 4, int > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  cle",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html
Usability,clear,clearVisual,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html
Deployability,update,updateInternal,"::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntAttribute, SOFA_TEMPLATE3(OglAttribute, 1, GL_INT, int))sofa::gl::component::shader::OglIntAttribute; OglAttribute< 1, GL_INT, int >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE3(OglAttribute, size, type, int), core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >protected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglAttribute() overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >protected; ~OglIntAttribute()sofa::gl::component::shader::OglIntAttributeinlinevirtual; ~OglShade",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglIntAttribute Member List . This is the complete list of members for sofa::gl::component::shader::OglIntAttribute, including all inherited members. _abosofa::gl::component::shader::OglAttribute< 1, GL_INT, int >protected; _aboSizesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >protected; _indexsofa::gl::component::shader::OglAttribute< 1, GL_INT, int >protected; _lastUpdateDataCountersofa::gl::component::shader::OglAttribute< 1, GL_INT, int >protected; _needUpdatesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >protected; _topologysofa::gl::component::shader::OglAttribute< 1, GL_INT, int >protected; _usagesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; apply",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html
Performance,load,loader,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setUsage(unsigned int usage)sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >inline; setValue(const type::vector< int > &value)sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntAttribute, SOFA_TEMPLATE3(OglAttribute, 1, GL_INT, int))sofa::gl::component::shader::OglIntAttribute; OglAttribute< 1, GL_INT, int >::SOFA_CLASS(BaseObject, Bas",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html
Testability,log,logging,"zesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >protected; _indexsofa::gl::component::shader::OglAttribute< 1, GL_INT, int >protected; _lastUpdateDataCountersofa::gl::component::shader::OglAttribute< 1, GL_INT, int >protected; _needUpdatesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >protected; _topologysofa::gl::component::shader::OglAttribute< 1, GL_INT, int >protected; _usagesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html
Usability,clear,clearLoggedMessages,"const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 1, GL_INT, int >; disable()sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *vp",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html
Availability,down,down,"﻿. SOFA API: sofa::gl::component::shader::OglIntAttribute Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglIntAttribute Class Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglIntAttribute:. [legend]; Detailed Description; INT ATTRIBUTE . Public Member Functions;  SOFA_CLASS (OglIntAttribute, SOFA_TEMPLATE3(OglAttribute, 1, GL_INT, int));  ;  OglIntAttribute ();  ; virtual ~OglIntAttribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, int), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< int > * beginEdit ();  ; void endEdit ();  ; const type::vector< int > & getValue () const;  ; void setValue (const type::vector< int > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVert",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
Deployability,update,update,"c Member Functions |; List of all members . sofa::gl::component::shader::OglIntAttribute Class Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglIntAttribute:. [legend]; Detailed Description; INT ATTRIBUTE . Public Member Functions;  SOFA_CLASS (OglIntAttribute, SOFA_TEMPLATE3(OglAttribute, 1, GL_INT, int));  ;  OglIntAttribute ();  ; virtual ~OglIntAttribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, int), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< int > * beginEdit ();  ; void endEdit ();  ; const type::vector< int > & getValue () const;  ; void setValue (const type::vector< int > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVertex () override;  ; int getSETotalSize () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (Visua",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
Integrability,depend,dependent,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::component::shader::OglIntAttribute Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglIntAttribute Class Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglIntAttribute:. [legend]; Detailed Description; INT ATTRIBUTE . Public Member Functions;  SOFA_CLASS (OglIntAttribute, SOFA_TEMPLATE3(OglAttribute, 1, GL_INT, int));  ;  OglIntAttribute ();  ; virtual ~OglIntAttribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, int), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< int > * beginEdit ();  ; void endEdit ();  ; const type::vector< int > & getValue () const;  ; void setValue (const type::vector< int > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVert",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
Usability,clear,clearVisual,"verride;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVertex () override;  ; int getSETotalSize () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html
Deployability,update,updateInternal,"e::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntVariable, OglVariable< int >)sofa::gl::component::shader::OglIntVariable; OglVariable< int >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< int >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< int >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglIntVariable()sofa::gl::component::shader::OglIntVariableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglIntVariable Member List . This is the complete list of members for sofa::gl::component::shader::OglIntVariable, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html
Performance,load,loader,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setValue(const int &v)sofa::gl::component::shader::OglVariable< int >inlinevirtual; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntVariable, OglVariable< int >)sofa::gl::component::shader::OglIntVariable; OglVariable< int >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< int ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html
Usability,clear,clearLoggedMessages,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< int >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< int >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html
Availability,down,down,"﻿. SOFA API: sofa::gl::component::shader::OglIntVariable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglIntVariable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglIntVariable:. [legend]; Detailed Description; SINGLE INT VARIABLE . Public Member Functions;  SOFA_CLASS (OglIntVariable, OglVariable< int >);  ;  OglIntVariable ();  ; virtual ~OglIntVariable ();  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< int >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const int &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generall",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
Deployability,update,updateVisual,"method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
Integrability,depend,dependent,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::component::shader::OglIntVariable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglIntVariable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglIntVariable:. [legend]; Detailed Description; SINGLE INT VARIABLE . Public Member Functions;  SOFA_CLASS (OglIntVariable, OglVariable< int >);  ;  OglIntVariable ();  ; virtual ~OglIntVariable ();  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< int >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const int &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generall",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
Usability,clear,clearVisual,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html
Deployability,update,updateInternal,"llptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntVector2Variable, OglIntVectorVariable)sofa::gl::component::shader::OglIntVector2Variable; sofa::gl::component::shader::OglIntVectorVariable::SOFA_CLASS(OglIntVectorVariable, OglVariable< type::vector< GLint > >)sofa::gl::component::shader::OglIntVectorVariable; OglVariable< type::vector< GLint > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< GLint > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< GLint > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglIntVector2Variable() overridesofa::gl::component::shader::OglIntVector2Variableinline; ~OglIntVectorVariable()sofa::gl::component::shader::OglIntVectorVariableinlinevirtual; ~OglS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglIntVector2Variable Member List . This is the complete list of members for sofa::gl::component::shader::OglIntVector2Variable, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvir",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html
Performance,load,loader,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setValue(const type::vector< GLint > &v)sofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntVector2Variable, OglIntVectorVariable)sofa::gl::component::shader::OglIntVector2Variable; sofa::gl::component::shader::OglIntVectorVariable::SOFA_CLASS(OglIntVectorVariable, OglVariable< type::vector< GLint > >)sofa::gl::component::shader",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvir",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html
Usability,clear,clearLoggedMessages,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::ob",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html
Availability,down,down,"﻿. SOFA API: sofa::gl::component::shader::OglIntVector2Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglIntVector2Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglIntVector2Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglIntVector2Variable, OglIntVectorVariable);  ;  OglIntVector2Variable ();  ;  ~OglIntVector2Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglIntVectorVariable;  SOFA_CLASS (OglIntVectorVariable, OglVariable< type::vector< GLint > >);  ;  OglIntVectorVariable ();  ; virtual ~OglIntVectorVariable ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< GLint > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
Deployability,update,updateVisual,"method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
Integrability,depend,dependent,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::component::shader::OglIntVector2Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglIntVector2Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglIntVector2Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglIntVector2Variable, OglIntVectorVariable);  ;  OglIntVector2Variable ();  ;  ~OglIntVector2Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglIntVectorVariable;  SOFA_CLASS (OglIntVectorVariable, OglVariable< type::vector< GLint > >);  ;  OglIntVectorVariable ();  ; virtual ~OglIntVectorVariable ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< GLint > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
Usability,clear,clearVisual,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html
Deployability,update,updateInternal,"llptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntVector3Variable, OglIntVectorVariable)sofa::gl::component::shader::OglIntVector3Variable; sofa::gl::component::shader::OglIntVectorVariable::SOFA_CLASS(OglIntVectorVariable, OglVariable< type::vector< GLint > >)sofa::gl::component::shader::OglIntVectorVariable; OglVariable< type::vector< GLint > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< GLint > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< GLint > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglIntVector3Variable() overridesofa::gl::component::shader::OglIntVector3Variableinline; ~OglIntVectorVariable()sofa::gl::component::shader::OglIntVectorVariableinlinevirtual; ~OglS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglIntVector3Variable Member List . This is the complete list of members for sofa::gl::component::shader::OglIntVector3Variable, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvir",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html
Performance,load,loader,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setValue(const type::vector< GLint > &v)sofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntVector3Variable, OglIntVectorVariable)sofa::gl::component::shader::OglIntVector3Variable; sofa::gl::component::shader::OglIntVectorVariable::SOFA_CLASS(OglIntVectorVariable, OglVariable< type::vector< GLint > >)sofa::gl::component::shader",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvir",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html
Usability,clear,clearLoggedMessages,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::ob",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html
Availability,down,down,"﻿. SOFA API: sofa::gl::component::shader::OglIntVector3Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglIntVector3Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglIntVector3Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglIntVector3Variable, OglIntVectorVariable);  ;  OglIntVector3Variable ();  ;  ~OglIntVector3Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglIntVectorVariable;  SOFA_CLASS (OglIntVectorVariable, OglVariable< type::vector< GLint > >);  ;  OglIntVectorVariable ();  ; virtual ~OglIntVectorVariable ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< GLint > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
Deployability,update,updateVisual,"method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
Integrability,depend,dependent,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::component::shader::OglIntVector3Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglIntVector3Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglIntVector3Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglIntVector3Variable, OglIntVectorVariable);  ;  OglIntVector3Variable ();  ;  ~OglIntVector3Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglIntVectorVariable;  SOFA_CLASS (OglIntVectorVariable, OglVariable< type::vector< GLint > >);  ;  OglIntVectorVariable ();  ; virtual ~OglIntVectorVariable ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< GLint > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
Usability,clear,clearVisual,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable.html
Deployability,update,updateInternal,"llptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntVector4Variable, OglIntVectorVariable)sofa::gl::component::shader::OglIntVector4Variable; sofa::gl::component::shader::OglIntVectorVariable::SOFA_CLASS(OglIntVectorVariable, OglVariable< type::vector< GLint > >)sofa::gl::component::shader::OglIntVectorVariable; OglVariable< type::vector< GLint > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< GLint > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< GLint > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglIntVector4Variable() overridesofa::gl::component::shader::OglIntVector4Variableinline; ~OglIntVectorVariable()sofa::gl::component::shader::OglIntVectorVariableinlinevirtual; ~OglS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglIntVector4Variable Member List . This is the complete list of members for sofa::gl::component::shader::OglIntVector4Variable, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvir",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html
Performance,load,loader,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setValue(const type::vector< GLint > &v)sofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntVector4Variable, OglIntVectorVariable)sofa::gl::component::shader::OglIntVector4Variable; sofa::gl::component::shader::OglIntVectorVariable::SOFA_CLASS(OglIntVectorVariable, OglVariable< type::vector< GLint > >)sofa::gl::component::shader",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvir",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html
Usability,clear,clearLoggedMessages,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::ob",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html
Availability,down,down,"﻿. SOFA API: sofa::gl::component::shader::OglIntVector4Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglIntVector4Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglIntVector4Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglIntVector4Variable, OglIntVectorVariable);  ;  OglIntVector4Variable ();  ;  ~OglIntVector4Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglIntVectorVariable;  SOFA_CLASS (OglIntVectorVariable, OglVariable< type::vector< GLint > >);  ;  OglIntVectorVariable ();  ; virtual ~OglIntVectorVariable ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< GLint > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
Deployability,update,updateVisual,"method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
Integrability,depend,dependent,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::component::shader::OglIntVector4Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglIntVector4Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglIntVector4Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglIntVector4Variable, OglIntVectorVariable);  ;  OglIntVector4Variable ();  ;  ~OglIntVector4Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglIntVectorVariable;  SOFA_CLASS (OglIntVectorVariable, OglVariable< type::vector< GLint > >);  ;  OglIntVectorVariable ();  ; virtual ~OglIntVectorVariable ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< GLint > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
Usability,clear,clearVisual,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable.html
Deployability,update,updateInternal,"mesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntVectorVariable, OglVariable< type::vector< GLint > >)sofa::gl::component::shader::OglIntVectorVariable; OglVariable< type::vector< GLint > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< GLint > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< GLint > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglIntVectorVariable()sofa::gl::component::shader::OglIntVectorVariableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglIntVectorVariable Member List . This is the complete list of members for sofa::gl::component::shader::OglIntVectorVariable, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html
Performance,load,loader,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setValue(const type::vector< GLint > &v)sofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntVectorVariable, OglVariable< type::vector< GLint > >)sofa::gl::component::shader::OglIntVectorVariable; OglVariable< type::vector< GLint > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html
Usability,clear,clearLoggedMessages,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::ob",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html
Availability,down,down,"﻿. SOFA API: sofa::gl::component::shader::OglIntVectorVariable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglIntVectorVariable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglIntVectorVariable:. [legend]; Detailed Description; INT VECTOR VARIABLE . Public Member Functions;  SOFA_CLASS (OglIntVectorVariable, OglVariable< type::vector< GLint > >);  ;  OglIntVectorVariable ();  ; virtual ~OglIntVectorVariable ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< GLint > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisua",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
Deployability,update,updateVisual,"method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
Integrability,depend,dependent,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::component::shader::OglIntVectorVariable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglIntVectorVariable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglIntVectorVariable:. [legend]; Detailed Description; INT VECTOR VARIABLE . Public Member Functions;  SOFA_CLASS (OglIntVectorVariable, OglVariable< type::vector< GLint > >);  ;  OglIntVectorVariable ();  ; virtual ~OglIntVectorVariable ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< GLint > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisua",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
Usability,clear,clearVisual,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html
Deployability,update,updateInternal," sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix2x3Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix2x3Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix2x3Variable() overridesofa::gl::component::shader::OglMatrix2x3Variableinline; ~OglShaderE",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglMatrix2x3Variable Member List . This is the complete list of members for sofa::gl::component::shader::OglMatrix2x3Variable, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html
Performance,load,loader,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTranspose(const bool &v)sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; setValue(const type::vector< float > &v)sofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix2x3Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix2x3Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(Ogl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html
Usability,clear,clearLoggedMessages,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::ob",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html
Availability,down,down,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix2x3Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix2x3Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix2x3Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglMatrix2x3Variable, OglMatrix2Variable);  ;  OglMatrix2x3Variable ();  ;  ~OglMatrix2x3Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void draw",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
Deployability,update,updateVisual,"method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
Integrability,depend,dependent,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix2x3Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix2x3Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix2x3Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglMatrix2x3Variable, OglMatrix2Variable);  ;  OglMatrix2x3Variable ();  ;  ~OglMatrix2x3Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void draw",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
Usability,clear,clearVisual,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html
Deployability,update,updateInternal," sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix2x4Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix2x4Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix2x4Variable() overridesofa::gl::component::shader::OglMatrix2x4Variableinline; ~OglShaderE",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglMatrix2x4Variable Member List . This is the complete list of members for sofa::gl::component::shader::OglMatrix2x4Variable, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html
Performance,load,loader,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTranspose(const bool &v)sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; setValue(const type::vector< float > &v)sofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix2x4Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix2x4Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(Ogl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html
Usability,clear,clearLoggedMessages,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::ob",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable-members.html
Availability,down,down,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix2x4Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix2x4Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix2x4Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglMatrix2x4Variable, OglMatrix2Variable);  ;  OglMatrix2x4Variable ();  ;  ~OglMatrix2x4Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void draw",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
Deployability,update,updateVisual,"method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
Integrability,depend,dependent,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix2x4Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix2x4Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix2x4Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglMatrix2x4Variable, OglMatrix2Variable);  ;  OglMatrix2x4Variable ();  ;  ~OglMatrix2x4Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void draw",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
Usability,clear,clearVisual,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x4_variable.html
Deployability,update,updateInternal,"component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() over",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglMatrix2Variable Member List . This is the complete list of members for sofa::gl::component::shader::OglMatrix2Variable, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html
Performance,load,loader,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTranspose(const bool &v)sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; setValue(const type::vector< float > &v)sofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html
Usability,clear,clearLoggedMessages,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::ob",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html
Availability,down,down," events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * get",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
Deployability,update,updateVisual,"method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
Integrability,message,messages,":OglMatrix2Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix2Variable:. [legend]; Detailed Description; Matrix VARIABLE . Public Attributes; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shade",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix2Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix2Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix2Variable:. [legend]; Detailed Description; Matrix VARIABLE . Public Attributes; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTransp",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
Usability,clear,clearVisual,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html
Deployability,update,updateInternal," sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix3x2Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix3x2Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix3x2Variable() overridesofa::gl::component::shader::OglMatrix3x2Variableinline; ~OglShaderE",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglMatrix3x2Variable Member List . This is the complete list of members for sofa::gl::component::shader::OglMatrix3x2Variable, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html
Performance,load,loader,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTranspose(const bool &v)sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; setValue(const type::vector< float > &v)sofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix3x2Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix3x2Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(Ogl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html
Usability,clear,clearLoggedMessages,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::ob",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable-members.html
Availability,down,down,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix3x2Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix3x2Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix3x2Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglMatrix3x2Variable, OglMatrix2Variable);  ;  OglMatrix3x2Variable ();  ;  ~OglMatrix3x2Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void draw",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
Deployability,update,updateVisual,"method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
Integrability,depend,dependent,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix3x2Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix3x2Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix3x2Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglMatrix3x2Variable, OglMatrix2Variable);  ;  OglMatrix3x2Variable ();  ;  ~OglMatrix3x2Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void draw",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
Usability,clear,clearVisual,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x2_variable.html
Deployability,update,updateInternal," sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix3x4Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix3x4Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix3x4Variable() overridesofa::gl::component::shader::OglMatrix3x4Variableinline; ~OglShaderE",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglMatrix3x4Variable Member List . This is the complete list of members for sofa::gl::component::shader::OglMatrix3x4Variable, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html
Performance,load,loader,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTranspose(const bool &v)sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; setValue(const type::vector< float > &v)sofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix3x4Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix3x4Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(Ogl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html
Usability,clear,clearLoggedMessages,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::ob",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable-members.html
Availability,down,down,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix3x4Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix3x4Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix3x4Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglMatrix3x4Variable, OglMatrix2Variable);  ;  OglMatrix3x4Variable ();  ;  ~OglMatrix3x4Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void draw",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
Deployability,update,updateVisual,"method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
Integrability,depend,dependent,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix3x4Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix3x4Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix3x4Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglMatrix3x4Variable, OglMatrix2Variable);  ;  OglMatrix3x4Variable ();  ;  ~OglMatrix3x4Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void draw",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
Usability,clear,clearVisual,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3x4_variable.html
Deployability,update,updateInternal,"tic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix3Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix3Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix3Variable() overridesofa::gl::component::shader::OglMatrix3Variableinline; ~OglShaderEleme",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglMatrix3Variable Member List . This is the complete list of members for sofa::gl::component::shader::OglMatrix3Variable, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html
Performance,load,loader,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTranspose(const bool &v)sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; setValue(const type::vector< float > &v)sofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix3Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix3Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatr",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html
Usability,clear,clearLoggedMessages,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::ob",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable-members.html
Availability,down,down,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix3Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix3Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix3Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglMatrix3Variable, OglMatrix2Variable);  ;  OglMatrix3Variable ();  ;  ~OglMatrix3Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (cons",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
Deployability,update,updateVisual,"method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
Integrability,depend,dependent,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix3Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix3Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix3Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglMatrix3Variable, OglMatrix2Variable);  ;  OglMatrix3Variable ();  ;  ~OglMatrix3Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (cons",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
Usability,clear,clearVisual,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix3_variable.html
Deployability,update,updateInternal," sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix4x2Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix4x2Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix4x2Variable() overridesofa::gl::component::shader::OglMatrix4x2Variableinline; ~OglShaderE",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglMatrix4x2Variable Member List . This is the complete list of members for sofa::gl::component::shader::OglMatrix4x2Variable, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html
Performance,load,loader,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTranspose(const bool &v)sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; setValue(const type::vector< float > &v)sofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix4x2Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix4x2Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(Ogl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html
Usability,clear,clearLoggedMessages,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::ob",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable-members.html
Availability,down,down,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix4x2Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix4x2Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix4x2Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglMatrix4x2Variable, OglMatrix2Variable);  ;  OglMatrix4x2Variable ();  ;  ~OglMatrix4x2Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void draw",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable.html
Deployability,update,updateVisual,"method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable.html
Integrability,depend,dependent,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix4x2Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix4x2Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix4x2Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglMatrix4x2Variable, OglMatrix2Variable);  ;  OglMatrix4x2Variable ();  ;  ~OglMatrix4x2Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void draw",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable.html
Usability,clear,clearVisual,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x2_variable.html
Deployability,update,updateInternal," sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix4x3Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix4x3Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix4x3Variable() overridesofa::gl::component::shader::OglMatrix4x3Variableinline; ~OglShaderE",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x3_variable-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglMatrix4x3Variable Member List . This is the complete list of members for sofa::gl::component::shader::OglMatrix4x3Variable, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x3_variable-members.html
Performance,load,loader,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTranspose(const bool &v)sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; setValue(const type::vector< float > &v)sofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix4x3Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix4x3Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(Ogl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x3_variable-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x3_variable-members.html
Usability,clear,clearLoggedMessages,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::ob",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x3_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x3_variable-members.html
Availability,down,down,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix4x3Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix4x3Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix4x3Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglMatrix4x3Variable, OglMatrix2Variable);  ;  OglMatrix4x3Variable ();  ;  ~OglMatrix4x3Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void draw",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x3_variable.html
Deployability,update,updateVisual,"method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x3_variable.html
Integrability,depend,dependent,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x3_variable.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix4x3Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix4x3Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix4x3Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglMatrix4x3Variable, OglMatrix2Variable);  ;  OglMatrix4x3Variable ();  ;  ~OglMatrix4x3Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void draw",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x3_variable.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x3_variable.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x3_variable.html
Usability,clear,clearVisual,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x3_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4x3_variable.html
Deployability,update,updateInternal,"tic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix4Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix4Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglMatrix4Variable() overridesofa::gl::component::shader::OglMatrix4Variableinline; ~OglShaderEleme",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_variable-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglMatrix4Variable Member List . This is the complete list of members for sofa::gl::component::shader::OglMatrix4Variable, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_variable-members.html
Performance,load,loader,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTranspose(const bool &v)sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; setValue(const type::vector< float > &v)sofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix4Variable, OglMatrix2Variable)sofa::gl::component::shader::OglMatrix4Variable; sofa::gl::component::shader::OglMatrix2Variable::SOFA_CLASS(OglMatr",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_variable-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_variable-members.html
Usability,clear,clearLoggedMessages,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::ob",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_variable-members.html
Availability,down,down,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix4Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix4Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix4Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglMatrix4Variable, OglMatrix2Variable);  ;  OglMatrix4Variable ();  ;  ~OglMatrix4Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (cons",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_variable.html
Deployability,update,updateVisual,"method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_variable.html
Integrability,depend,dependent,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_variable.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix4Variable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix4Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix4Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglMatrix4Variable, OglMatrix2Variable);  ;  OglMatrix4Variable ();  ;  ~OglMatrix4Variable () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglMatrix2Variable;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (cons",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_variable.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_variable.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_variable.html
Usability,clear,clearVisual,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_variable.html
Deployability,update,updateInternal,"ed; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix4VectorVariable, OglVariable< type::vector< type::Mat4x4f > >)sofa::gl::component::shader::OglMatrix4VectorVariable; OglVariable< type::vector< type::Mat4x4f > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< type::Mat4x4f > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix4VectorVariable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< type::Mat4x4f > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix4VectorVariable()sofa::gl::component::shader::OglMatrix4VectorVariableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglMatrix4VectorVariable Member List . This is the complete list of members for sofa::gl::component::shader::OglMatrix4VectorVariable, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObj",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable-members.html
Performance,load,loader,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTranspose(const bool &v)sofa::gl::component::shader::OglMatrix4VectorVariableinlinevirtual; setValue(const type::vector< type::Mat4x4f > &v)sofa::gl::component::shader::OglVariable< type::vector< type::Mat4x4f > >inlinevirtual; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix4VectorVariable, OglVariable< type::vector< type::Mat4x4f > >)sofa::gl::component::shader::OglMatrix4VectorVariable; OglVari",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObj",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable-members.html
Usability,clear,clearLoggedMessages,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< type::Mat4x4f > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< type::Mat4x4f > >inlinevirtual; draw(const core::visual::VisualParams ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable-members.html
Availability,down,down,"ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (OglMatrix4VectorVariable, OglVariable< type::vector< type::Mat4x4f > >);  ;  OglMatrix4VectorVariable ();  ; virtual ~OglMatrix4VectorVariable ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< type::Mat4x4f > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< type::Mat4x4f > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute)",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable.html
Deployability,update,updateVisual,"method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable.html
Integrability,message,messages,"ent::shader::OglMatrix4VectorVariable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix4VectorVariable:. [legend]. Public Attributes; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< type::Mat4x4f > >; Data< type::vector< type::Mat4x4f > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (OglMatrix4VectorVariable, OglVariable< type::vector< type::Mat4x4f > >);  ;  OglMatrix4VectorVariable ();  ; virtual ~OglMatrix4VectorVariable ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::component::shader::OglMatrix4VectorVariable Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix4VectorVariable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix4VectorVariable:. [legend]. Public Attributes; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< type::Mat4x4f > >; Data< type::vector< type::Mat4x4f > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (OglMatrix4VectorVariable, OglVariable< type::vector< type::Mat4x4f > >);  ;  OglMatrix4VectorVariable ();  ; virtual ~OglMatrix4VectorVariable ();  ; vo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable.html
Usability,clear,clearVisual,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable.html
Deployability,update,updateInternal,"ame(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(Shader, objectmodel::BaseObject)sofa::core::visual::Shader; sofa::core::visual::VisualModel::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(OglOITShader, sofa::gl::component::shader::OglShader)sofa::gl::component::shader::OglOITShader; sofa::gl::component::shader::OglShader::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglShader, core::visual::Shader, core::visual::VisualModel)sofa::gl::component::shader::OglShader; SPtr typedefsofa::core::objectmodel::Base; start() overridesofa::gl::component::shader::OglShadervirtual; stop() overridesofa::gl::component::shader::OglShadervirtual; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; turnOnsofa::gl::component::shader::OglShader; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; vertFilenamesofa::gl::component::shader::OglShader; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglOITShader() overridesofa::gl::component::shader::OglOITShaderprotected; ~OglShader() overridesofa::gl::component::shader::OglShaderprotected; ~Shader() overridesofa::core::visual::Shaderinlineprotect",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglOITShader Member List . This is the complete list of members for sofa::gl::component::shader::OglOITShader, including all inherited members. accumulationShader()sofa::gl::component::shader::OglOITShader; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDefineMacro(const unsigned int index, const std::string &name, const std::string &value)sofa::gl::component::shader::OglShader; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; backfaceWritingsofa::gl::component::shader::OglShader; Base()sofa::core::objectmodel::Basep",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader-members.html
Performance,load,loader,"Shader; setMatrix3x2(const unsigned int index, const char *name, int count, bool transpose, const float *f)sofa::gl::component::shader::OglShader; setMatrix3x4(const unsigned int index, const char *name, int count, bool transpose, const float *f)sofa::gl::component::shader::OglShader; setMatrix4(const unsigned int index, const char *name, int count, bool transpose, const float *f)sofa::gl::component::shader::OglShader; setMatrix4x2(const unsigned int index, const char *name, int count, bool transpose, const float *f)sofa::gl::component::shader::OglShader; setMatrix4x3(const unsigned int index, const char *name, int count, bool transpose, const float *f)sofa::gl::component::shader::OglShader; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTexture(const unsigned int index, const char *name, unsigned short unit)sofa::gl::component::shader::OglShader; Shader()sofa::core::visual::Shaderinlineprotected; shaderVectorsofa::gl::component::shader::OglShaderprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(Shader, objectmodel::BaseObject)sofa::core::visual::Shader; sofa::core::visual::VisualModel::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(OglOITShader, sofa::gl::component::shader::OglShader)sofa::gl::component::shader::OglOITShader; sofa::gl::component::shader::OglShader::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglShader, core::visual::Shader, core::visual::VisualModel)sofa::gl::component::shader::OglShader; SPtr typedefsofa::core::objectmodel::Base; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader-members.html
Testability,log,logging," accumulationShader()sofa::gl::component::shader::OglOITShader; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDefineMacro(const unsigned int index, const std::string &name, const std::string &value)sofa::gl::component::shader::OglShader; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; backfaceWritingsofa::gl::component::shader::OglShader; Base()sofa::core::objectmodel::Basep",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader-members.html
Usability,clear,clearLoggedMessages,"Real, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; backfaceWritingsofa::gl::component::shader::OglShader; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; clampVertexColorsofa::gl::component::shader::OglShader; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglShadervirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::vi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader-members.html
Availability,down,down,"﻿. SOFA API: sofa::gl::component::shader::OglOITShader Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gl::component::shader::OglOITShader Class Reference . #include <OglOITShader.h>. Inheritance diagram for sofa::gl::component::shader::OglOITShader:. [legend]. Static Public Attributes; static const std::string PATH_TO_OIT_ACCUMULATION_VERTEX_SHADERS = ""shaders/orderIndependentTransparency/accumulation.vert"";  ; static const std::string PATH_TO_OIT_ACCUMULATION_FRAGMENT_SHADERS = ""shaders/orderIndependentTransparency/accumulation.frag"";  . Public Member Functions;  SOFA_CLASS (OglOITShader, sofa::gl::component::shader::OglShader);  ; sofa::gl::GLSLShader * accumulationShader ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShader;  SOFA_CLASS2 (OglShader, core::visual::Shader, core::visual::VisualModel);  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void parse (core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void start () override;  Start the shader. More...;  ; void stop () override;  Stop the shader. More...;  ; bool isActive () override;  ; unsigned int getNumberOfShaders ();  ; unsigned int getCurrentIndex ();  ; void setCurrentIndex (const unsigned int index);  ; void addDefineMacro (const unsigned int index, const std::string &name, const std::string &value);  ; void setTexture (const unsigned int index, const char *name, unsigned short unit);  ; void setInt (const unsigned int index, const char *",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader.html
Deployability,update,updateInternal,"ributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader.html
Integrability,depend,dependent,"r *name);  ; GLint getGeometryInputType (const unsigned int index);  ; void setGeometryInputType (const unsigned int index, GLint v);  ; GLint getGeometryOutputType (const unsigned int index);  ; void setGeometryOutputType (const unsigned int index, GLint v);  ; GLint getGeometryVerticesOut (const unsigned int index);  ; void setGeometryVerticesOut (const unsigned int index, GLint v);  ; bool insertInNode (core::objectmodel::BaseNode *node) override;  ; bool removeInNode (core::objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::Shader;  SOFA_ABSTRACT_CLASS (Shader, objectmodel::BaseObject);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::component::shader::OglOITShader Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gl::component::shader::OglOITShader Class Reference . #include <OglOITShader.h>. Inheritance diagram for sofa::gl::component::shader::OglOITShader:. [legend]. Static Public Attributes; static const std::string PATH_TO_OIT_ACCUMULATION_VERTEX_SHADERS = ""shaders/orderIndependentTransparency/accumulation.vert"";  ; static const std::string PATH_TO_OIT_ACCUMULATION_FRAGMENT_SHADERS = ""shaders/orderIndependentTransparency/accumulation.frag"";  . Public Member Functions;  SOFA_CLASS (OglOITShader, sofa::gl::component::shader::OglShader);  ; sofa::gl::GLSLShader * accumulationShader ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShader;  SOFA_CLASS2 (OglShader, core::visual::Shader, core::visual::VisualModel);  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void parse (core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void start () override;  Start the shader. More...;  ; void stop () override;  Stop the shader. More...;  ; bool isActive () override;  ; unsigned int getNumberOfShaders ();  ; unsigned int getCurrentIndex ();  ; void setCurrentIndex (const unsigned int index);  ; void addDefineMacro (const unsigned int index, const std::string &name, const std::string &value);  ; void setTexture (const unsigned int index, const char *name, unsigned short unit);  ; void setInt (const unsigned int index, const char *",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader.html
Performance,load,loader,"rticesOut (const unsigned int index);  ; void setGeometryVerticesOut (const unsigned int index, GLint v);  ; bool insertInNode (core::objectmodel::BaseNode *node) override;  ; bool removeInNode (core::objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::Shader;  SOFA_ABSTRACT_CLASS (Shader, objectmodel::BaseObject);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader.html
Deployability,update,updateInternal,"ectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(OglRenderingSRGB, core::visual::VisualManager)sofa::gl::component::shader::OglRenderingSRGB; sofa::core::visual::VisualManager::SOFA_CLASS(VisualManager, VisualModel)sofa::core::visual::VisualManager; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~VisualManager() overridesofa::core::visual::VisualManagerinlineprotected; ~VisualModel() overridesofa::core::visual::VisualModelinlineprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglRenderingSRGB Member List . This is the complete list of members for sofa::gl::component::shader::OglRenderingSRGB, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglRenderingSRGBvirtual; bwdInit()sofa::core::objec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b-members.html
Performance,load,loader,"; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::visual::VisualManagervirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(OglRenderingSRGB, core::visual::VisualManager)sofa::gl::component::shader::OglRenderingSRGB; sofa::core::visual::VisualManager::SOFA_CLASS(VisualManager, VisualModel)sofa::core::visual::VisualManager; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsof",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglRenderingSRGBvirtual; bwdInit()sofa::core::objec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b-members.html
Usability,clear,clearLoggedMessages,"::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglRenderingSRGBvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawScene(VisualParams *)sofa::core::visual::VisualManagerinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b-members.html
Availability,down,down,"ndLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b.html
Deployability,update,updateVisual,"override;  Called after objects in the current branch are displayed. More...;  ;  Public Member Functions inherited from sofa::core::visual::VisualManager;  SOFA_CLASS (VisualManager, VisualModel);  ; virtual void preDrawScene (VisualParams *);  Called before rendering the scene. More...;  ; virtual void postDrawScene (VisualParams *);  Called after rendering the scene. More...;  ; virtual bool drawScene (VisualParams *);  Called instead of rendering the scene. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b.html
Integrability,depend,dependent,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::component::shader::OglRenderingSRGB Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglRenderingSRGB Class Reference . #include <OglRenderingSRGB.h>; The utility to enable/disable sRGB rendering. ; More... Inheritance diagram for sofa::gl::component::shader::OglRenderingSRGB:. [legend]; Detailed Description; The utility to enable/disable sRGB rendering. . Public Member Functions;  SOFA_CLASS (OglRenderingSRGB, core::visual::VisualManager);  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ;  Public Member Functions inherited from sofa::core::visual::VisualManager;  SOFA_CLASS (VisualManager, VisualModel);  ; virtual void preDrawScene (VisualParams *);  Called before rendering the scene. More...;  ; virtual void postDrawScene (VisualParams *);  Called after rendering the scene. More...;  ; virtual bool drawScene (VisualParams *);  Called instead of rendering the scene. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b.html
Usability,clear,clearVisual,"ualManager;  SOFA_CLASS (VisualManager, VisualModel);  ; virtual void preDrawScene (VisualParams *);  Called before rendering the scene. More...;  ; virtual void postDrawScene (VisualParams *);  Called after rendering the scene. More...;  ; virtual bool drawScene (VisualParams *);  Called instead of rendering the scene. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b.html
Deployability,update,updateInternal,":component::shader::OglShader; Shader()sofa::core::visual::Shaderinlineprotected; shaderVectorsofa::gl::component::shader::OglShaderprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(Shader, objectmodel::BaseObject)sofa::core::visual::Shader; sofa::core::visual::VisualModel::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglShader, core::visual::Shader, core::visual::VisualModel)sofa::gl::component::shader::OglShader; SPtr typedefsofa::core::objectmodel::Base; start() overridesofa::gl::component::shader::OglShadervirtual; stop() overridesofa::gl::component::shader::OglShadervirtual; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; turnOnsofa::gl::component::shader::OglShader; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; vertFilenamesofa::gl::component::shader::OglShader; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglShader() overridesofa::gl::component::shader::OglShaderprotected; ~Shader() overridesofa::core::visual::Shaderinlineprotected; ~VisualModel() overridesofa::core::visual::VisualModelinlineprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglShader Member List . This is the complete list of members for sofa::gl::component::shader::OglShader, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDefineMacro(const unsigned int index, const std::string &name, const std::string &value)sofa::gl::component::shader::OglShader; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; backfaceWritingsofa::gl::component::shader::OglShader; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; B",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader-members.html
Performance,load,loader,"Shader; setMatrix3x2(const unsigned int index, const char *name, int count, bool transpose, const float *f)sofa::gl::component::shader::OglShader; setMatrix3x4(const unsigned int index, const char *name, int count, bool transpose, const float *f)sofa::gl::component::shader::OglShader; setMatrix4(const unsigned int index, const char *name, int count, bool transpose, const float *f)sofa::gl::component::shader::OglShader; setMatrix4x2(const unsigned int index, const char *name, int count, bool transpose, const float *f)sofa::gl::component::shader::OglShader; setMatrix4x3(const unsigned int index, const char *name, int count, bool transpose, const float *f)sofa::gl::component::shader::OglShader; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTexture(const unsigned int index, const char *name, unsigned short unit)sofa::gl::component::shader::OglShader; Shader()sofa::core::visual::Shaderinlineprotected; shaderVectorsofa::gl::component::shader::OglShaderprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(Shader, objectmodel::BaseObject)sofa::core::visual::Shader; sofa::core::visual::VisualModel::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglShader, core::visual::Shader, core::visual::VisualModel)sofa::gl::component::shader::OglShader; SPtr typedefsofa::core::objectmodel::Base; start() overridesofa::gl::component::shader::OglShadervirtual; stop() overridesofa::gl::component::shader::OglShadervirtual; storeResetState()sofa:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDefineMacro(const unsigned int index, const std::string &name, const std::string &value)sofa::gl::component::shader::OglShader; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; backfaceWritingsofa::gl::component::shader::OglShader; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; B",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader-members.html
Usability,clear,clearLoggedMessages,"Real, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; backfaceWritingsofa::gl::component::shader::OglShader; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; clampVertexColorsofa::gl::component::shader::OglShader; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglShadervirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::vi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader-members.html
Availability,avail,available,"﻿. SOFA API: sofa::gl::component::shader::OglShader Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gl::component::shader::OglShader Class Reference . #include <OglShader.h>; Utility to use shader for a visual model in OpenGL. ; More... Inheritance diagram for sofa::gl::component::shader::OglShader:. [legend]; Detailed Description; Utility to use shader for a visual model in OpenGL. ; This class is used to implement shader into Sofa, for visual rendering or for special treatment that needs shader mechanism. The 3 kinds of shaders can be defined : vertex, triangle and fragment. Geometry shader is only available with Nvidia's >8 series and Ati's >2K series. . Public Attributes; Data< bool > turnOn;  Activates or not the shader. More...;  ; Data< bool > passive;  ; sofa::core::objectmodel::DataFileNameVector vertFilename;  Files where vertex shader is defined. More...;  ; sofa::core::objectmodel::DataFileNameVector fragFilename;  Files where fragment shader is defined. More...;  ; Data< unsigned int > indexActiveShader;  Set current active shader. More...;  ; Data< bool > backfaceWriting;  it enables writing to gl_BackColor inside a GLSL vertex shader More...;  ; Data< bool > clampVertexColor;  clamp the vertex color between 0 and 1 More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader.html
Deployability,update,updateInternal,"ributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader.html
Integrability,message,messages,"tes; Data< bool > turnOn;  Activates or not the shader. More...;  ; Data< bool > passive;  ; sofa::core::objectmodel::DataFileNameVector vertFilename;  Files where vertex shader is defined. More...;  ; sofa::core::objectmodel::DataFileNameVector fragFilename;  Files where fragment shader is defined. More...;  ; Data< unsigned int > indexActiveShader;  Set current active shader. More...;  ; Data< bool > backfaceWriting;  it enables writing to gl_BackColor inside a GLSL vertex shader More...;  ; Data< bool > clampVertexColor;  clamp the vertex color between 0 and 1 More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  . Protected Attributes; std::vector< sofa::gl::GLSLShader * > shaderVector;  OpenGL shader. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader.html
Modifiability,inherit,inherited,"ty to use shader for a visual model in OpenGL. ; This class is used to implement shader into Sofa, for visual rendering or for special treatment that needs shader mechanism. The 3 kinds of shaders can be defined : vertex, triangle and fragment. Geometry shader is only available with Nvidia's >8 series and Ati's >2K series. . Public Attributes; Data< bool > turnOn;  Activates or not the shader. More...;  ; Data< bool > passive;  ; sofa::core::objectmodel::DataFileNameVector vertFilename;  Files where vertex shader is defined. More...;  ; sofa::core::objectmodel::DataFileNameVector fragFilename;  Files where fragment shader is defined. More...;  ; Data< unsigned int > indexActiveShader;  Set current active shader. More...;  ; Data< bool > backfaceWriting;  it enables writing to gl_BackColor inside a GLSL vertex shader More...;  ; Data< bool > clampVertexColor;  clamp the vertex color between 0 and 1 More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  D",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader.html
Performance,load,loader,"rticesOut (const unsigned int index);  ; void setGeometryVerticesOut (const unsigned int index, GLint v);  ; bool insertInNode (core::objectmodel::BaseNode *node) override;  ; bool removeInNode (core::objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::Shader;  SOFA_ABSTRACT_CLASS (Shader, objectmodel::BaseObject);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader.html
Deployability,update,updateInternal,"ring &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglShaderDefineMacro, OglShaderMacro)sofa::gl::component::shader::OglShaderDefineMacro; sofa::gl::component::shader::OglShaderMacro::SOFA_CLASS(OglShaderMacro, OglShaderElement)sofa::gl::component::shader::OglShaderMacro; sofa::gl::component::shader::OglShaderElement::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; valuesofa::gl::component::shader::OglShaderDefineMacroprotected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglShaderDefineMacro() overridesofa::gl::component::shader::OglShaderDefineMacro; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglShaderMacro() overridesofa::gl::component::shader::OglShaderMacroprotected; ~ShaderElement() overridesofa::core::visual::ShaderElementinlineprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_define_macro-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_define_macro-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglShaderDefineMacro Member List . This is the complete list of members for sofa::gl::component::shader::OglShaderDefineMacro, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecPa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_define_macro-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_define_macro-members.html
Performance,load,loader,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglShaderDefineMacro, OglShaderMacro)sofa::gl::component::shader::OglShaderDefineMacro; sofa::gl::component::shader::OglShaderMacro::SOFA_CLASS(OglShaderMacro, OglShaderElement)sofa::gl::component::shader::OglShaderMacro; sofa::gl::component::shader::OglShaderElement::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseO",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_define_macro-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_define_macro-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecPa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_define_macro-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_define_macro-members.html
Usability,clear,clearLoggedMessages,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Bas",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_define_macro-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_define_macro-members.html
Availability,down,down," More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (OglShaderDefineMacro, OglShaderMacro);  ;  OglShaderDefineMacro ();  ;  ~OglShaderDefineMacro () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderMacro;  SOFA_CLASS (OglShaderMacro, OglShaderElement);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_define_macro.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_define_macro.html
Deployability,update,updateInternal,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_define_macro.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_define_macro.html
Integrability,depend,dependent,"mentType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_define_macro.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_define_macro.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::component::shader::OglShaderDefineMacro Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::gl::component::shader::OglShaderDefineMacro Class Reference . #include <OglShaderMacro.h>. Inheritance diagram for sofa::gl::component::shader::OglShaderDefineMacro:. [legend]. Protected Attributes; Data< std::string > value;  Set a value for define macro. More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (OglShaderDefineMacro, OglShaderMacro);  ;  OglShaderDefineMacro ();  ;  ~OglShaderDefineMacro () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::Ogl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_define_macro.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_define_macro.html
Performance,load,loader,"d::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; vi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_define_macro.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_define_macro.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_define_macro.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_define_macro.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_define_macro.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_define_macro.html
Deployability,update,updateInternal,"unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~ShaderElement() overridesofa::core::visual::ShaderElementinlineprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_element-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_element-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglShaderElement Member List . This is the complete list of members for sofa::gl::component::shader::OglShaderElement, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_element-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_element-members.html
Performance,load,loader,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObj",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_element-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_element-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_element-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_element-members.html
Usability,clear,clearLoggedMessages,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Bas",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_element-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_element-members.html
Availability,down,down," (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual ShaderElementType getSEType () const =0;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; virtual const core::objectmodel::BaseData * getSEValue () const =0;  ; virtual core::objectmodel::BaseData * getSEValue ()=0;  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_element.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_element.html
Deployability,update,updateInternal,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_element.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_element.html
Integrability,interface,interface,"﻿. SOFA API: sofa::gl::component::shader::OglShaderElement Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::gl::component::shader::OglShaderElement Class Reference . #include <OglShader.h>; Abstract class which defines a element to be used with a OglShader. ; More... Inheritance diagram for sofa::gl::component::shader::OglShaderElement:. [legend]; Detailed Description; Abstract class which defines a element to be used with a OglShader. ; This is only an partial implementation of the interface ShaderElement which adds a pointer to its corresponding shader (where it will be used) and the id (or name) of the element. . Protected Attributes; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIn",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_element.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_element.html
Modifiability,inherit,inherited,":OglShaderElement Class Reference . #include <OglShader.h>; Abstract class which defines a element to be used with a OglShader. ; More... Inheritance diagram for sofa::gl::component::shader::OglShaderElement:. [legend]; Detailed Description; Abstract class which defines a element to be used with a OglShader. ; This is only an partial implementation of the interface ShaderElement which adds a pointer to its corresponding shader (where it will be used) and the id (or name) of the element. . Protected Attributes; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual ShaderElementTyp",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_element.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_element.html
Performance,load,loader,", objectmodel::BaseObject);  ; virtual ShaderElementType getSEType () const =0;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; virtual const core::objectmodel::BaseData * getSEValue () const =0;  ; virtual core::objectmodel::BaseData * getSEValue ()=0;  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; vi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_element.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_element.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_element.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_element.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_element.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_element.html
Deployability,update,updateInternal,"re::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglShaderMacro, OglShaderElement)sofa::gl::component::shader::OglShaderMacro; sofa::gl::component::shader::OglShaderElement::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglShaderMacro() overridesofa::gl::component::shader::OglShaderMacroprotected; ~ShaderElement() overridesofa::core::visual::ShaderElementinlineprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglShaderMacro Member List . This is the complete list of members for sofa::gl::component::shader::OglShaderMacro, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro-members.html
Performance,load,loader,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglShaderMacro, OglShaderElement)sofa::gl::component::shader::OglShaderMacro; sofa::gl::component::shader::OglShaderElement::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecDa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro-members.html
Usability,clear,clearLoggedMessages,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Bas",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro-members.html
Availability,down,down,"﻿. SOFA API: sofa::gl::component::shader::OglShaderMacro Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::gl::component::shader::OglShaderMacro Class Reference . #include <OglShaderMacro.h>; Small class to define macro into an OglShader. ; More... Inheritance diagram for sofa::gl::component::shader::OglShaderMacro:. [legend]; Detailed Description; Small class to define macro into an OglShader. ; This small abstract class describes macro into an OpenGL shader (GLSL). It was mainly written for implementing #ifdef macro into shader, and therefore, to have a multi-purpose shader (and not many fragmented shaders). . Public Member Functions;  SOFA_CLASS (OglShaderMacro, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBB",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro.html
Deployability,update,updateInternal,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro.html
Integrability,depend,dependent," const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro.html
Modifiability,variab,variable," sofa::gl::component::shader::OglShaderMacro Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::gl::component::shader::OglShaderMacro Class Reference . #include <OglShaderMacro.h>; Small class to define macro into an OglShader. ; More... Inheritance diagram for sofa::gl::component::shader::OglShaderMacro:. [legend]; Detailed Description; Small class to define macro into an OglShader. ; This small abstract class describes macro into an OpenGL shader (GLSL). It was mainly written for implementing #ifdef macro into shader, and therefore, to have a multi-purpose shader (and not many fragmented shaders). . Public Member Functions;  SOFA_CLASS (OglShaderMacro, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const c",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro.html
Performance,load,loader,"d::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; vi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro.html
Deployability,update,updateBuffers,"pe::Vec3Types))sofa::core::visual::VisualState< defaulttype::Vec3Types >; sofa::core::State::SOFA_CLASS(SOFA_TEMPLATE(State, TDataTypes), BaseState)sofa::core::State< TDataTypes >; SOFA_CLASS2(VisualModelImpl, core::visual::VisualModel, sofa::core::visual::VisualState< defaulttype::Vec3Types >)sofa::component::visual::VisualModelImpl; sourceFactorsofa::gl::component::rendering3d::OglModelprotected; SPtr typedefsofa::core::objectmodel::Base; srgbTexturingsofa::component::visual::VisualModelImpl; State()sofa::core::State< TDataTypes >protected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; texsofa::gl::component::rendering3d::OglModelprotected; TexCoord typedefsofa::component::visual::VisualModelImpl; texturenamesofa::component::visual::VisualModelImpl; texturessofa::gl::component::rendering3d::OglModelprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; trianglesRevisionsofa::gl::component::rendering3d::OglModelprotected; updateBuffers() overridesofa::gl::component::rendering3d::OglModelvirtual; updateEdgesIndicesBuffer()sofa::gl::component::rendering3d::OglModel; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateQuadsIndicesBuffer()sofa::gl::component::rendering3d::OglModel; updateTrianglesIndicesBuffer()sofa::gl::component::rendering3d::OglModel; updateVertexBuffer()sofa::gl::component::rendering3d::OglModel; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; useEdgessofa::gl::component::rendering3d::OglModelprotected; useQuadssofa::gl::component::rendering3d::OglModelprotected; useTopologysofa::component::visual::VisualModelImpl; useTrianglessofa::gl::component::rendering3d::OglModelprotected; vbosofa::gl::component::rendering3d::OglModelprotected; VBOGenDonesofa::gl::component::rendering3d::OglModelprotected; Vec3Real typedefsofa::component::visual::Visu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglShaderVisualModel Member List . This is the complete list of members for sofa::gl::component::shader::OglShaderVisualModel, including all inherited members. abosofa::gl::component::shader::OglShaderVisualModelprotected; accumulatedForcessofa::core::State< TDataTypes >; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToTotalForces(core::ConstVecDerivId forceId) overridesofa::core::State< TDataTypes >virtual; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; alphaBlendsofa::gl::component::rendering3d::OglModelprotected; applyRotation(const SReal rx, const SReal ry, const SReal rz) overridesofa::component::visual::VisualModelImplvirtual; applyRotation(const sofa::type::Quat< SReal > q) overridesofa::component::visual::VisualModelImplvirtual; applyScale(const SReal sx, const SReal sy, const SReal sz) overridesofa::component::visual::VisualModelImplvirtual; applyTranslation(const SReal dx, con",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model-members.html
Performance,load,load,"Implinlinevirtual; internalDraw(const core::visual::VisualParams *vparams, bool transparent) overridesofa::gl::component::rendering3d::OglModelprotectedvirtual; isComponentStateValid() constsofa::core::objectmodel::Baseinline; isEnabledsofa::gl::component::rendering3d::OglModelprotected; isUseEdges()sofa::gl::component::rendering3d::OglModelinline; isUseQuads()sofa::gl::component::rendering3d::OglModelinline; isUseTriangles()sofa::gl::component::rendering3d::OglModelinline; isUsingTopology() constsofa::component::visual::VisualModelImplinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; l_topologysofa::component::visual::VisualModelImpl; lastMeshRevsofa::component::visual::VisualModelImpl; lineSmoothsofa::gl::component::rendering3d::OglModelprotected; lineWidthsofa::gl::component::rendering3d::OglModelprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; load(const std::string &filename, const std::string &loader, const std::string &textureName)sofa::component::visual::VisualModelImpl; loadTexture(const std::string &filename) overridesofa::gl::component::rendering3d::OglModelvirtual; loadTextures() overridesofa::gl::component::rendering3d::OglModelvirtual; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_computeTangentssofa::component::visual::VisualModelImpl; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_dirtyQuadssofa::component::visual::VisualModelImplprotected; m_dirtyTrianglessofa::component::visual::VisualModelImplprotected; m_edgessofa::component::visual::VisualModelImpl; m_fixMergedUVSeamssofa::component::visual::VisualModelImpl; m_handleDynamicTopologysofa::component::visual::VisualModelImpl; m_initRestPositionssofa::component::visual::VisualModelImpl; m_instanciationSourceFileNamesofa::core::objectmodel::Ba",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model-members.html
Testability,log,logging," abosofa::gl::component::shader::OglShaderVisualModelprotected; accumulatedForcessofa::core::State< TDataTypes >; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToTotalForces(core::ConstVecDerivId forceId) overridesofa::core::State< TDataTypes >virtual; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; alphaBlendsofa::gl::component::rendering3d::OglModelprotected; applyRotation(const SReal rx, const SReal ry, const SReal rz) overridesofa::component::visual::VisualModelImplvirtual; applyRotation(const sofa::type::Quat< SReal > q) overridesofa::component::visual::VisualModelImplvirtual; applyScale(const SReal sx, const SReal sy, const SReal sz) overridesofa::component::visual::VisualModelImplvirtual; applyTranslation(const SReal dx, con",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model-members.html
Usability,clear,clearLoggedMessages,"Id v) overridesofa::core::State< TDataTypes >virtual; bboxsofa::component::visual::VisualModelImpl; blendEqsofa::gl::component::rendering3d::OglModelprotected; blendEquationsofa::gl::component::rendering3d::OglModelprotected; blendTransparencysofa::gl::component::rendering3d::OglModel; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglShaderVisualModelvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canUsePatchessofa::gl::component::rendering3d::OglModelprotected; castShadowsofa::component::visual::VisualModelImpl; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *params, bool=false) overridesofa::component::visual::VisualModelImplvirtual; VisualState< defaulttype::Vec3Types >::computeBBox() constsofa::core::State< TDataTypes >; computeBitangent(const Coord &v1, const Coord &v2, const Coord &v3, const TexCoord &t1, const TexCoord &t2, const TexCoord &t3)sofa::component::visual::VisualModelImplstatic; computeMesh()sofa::component::visual::VisualModelImplvirtual; computeNormals()sofa::component::visual::VisualModelImplvirtual; computePositions()sofa::component::visual::VisualModelImplvirtual; computeRestNormals()sofa::gl::component::shader::OglShaderVisualModel; computeRestPositions()sofa::gl::component::shader::OglShaderVisualModel; computeTangent(const Coord &v1, const Coord &v2, const Coord &v3, const TexCoord &t1, const TexCoord &t2, const TexCoord &t3)sofa::component::visual::VisualModelImplstatic; com",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model-members.html
Availability,down,down,":visual::VisualModelImpl; std::set< sofa::core::topology::BaseMeshTopology::TriangleID > m_dirtyTriangles;  ; std::set< sofa::core::topology::BaseMeshTopology::QuadID > m_dirtyQuads;  Internal buffer similar to. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (OglShaderVisualModel, Inherit);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void handleTopologyChange () override;  ; void computeRestPositions ();  ; void computeRestNormals ();  ;  Public Member Functions inherited from sofa::gl::component::rendering3d::OglModel;  SOFA_CLASS (OglModel, Inherit);  ; void parse (core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; bool loadTexture (const std::string &filename) override;  ; bool loadTextures () override;  ; void initTextures ();  ; void doInitVisual (const core::visu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model.html
Deployability,update,updated,﻿. SOFA API: sofa::gl::component::shader::OglShaderVisualModel Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gl::component::shader::OglShaderVisualModel Class Reference . #include <OglShaderVisualModel.h>. Inheritance diagram for sofa::gl::component::shader::OglShaderVisualModel:. [legend]. Public Attributes; OglFloat3Attribute * vrestpositions;  ; OglFloat3Attribute * vrestnormals;  ; OglMatrix4Variable * modelMatrixUniform;  ;  Public Attributes inherited from sofa::gl::component::rendering3d::OglModel; Data< bool > blendTransparency;  Blend transparent parts. More...;  ;  Public Attributes inherited from sofa::component::visual::VisualModelImpl; bool useTopology;  True if list of d_facets should be taken from the attached topology. More...;  ; int lastMeshRev;  Time stamps from the last time the mesh was updated from the topology. More...;  ; bool castShadow;  True if object cast shadows. More...;  ; sofa::core::topology::BaseMeshTopology * m_topology;  ; sofa::core::objectmodel::RenamedData< bool > m_initRestPositions;  ; sofa::core::objectmodel::RenamedData< bool > m_useNormals;  ; sofa::core::objectmodel::RenamedData< bool > m_updateNormals;  ; sofa::core::objectmodel::RenamedData< bool > m_computeTangents;  ; sofa::core::objectmodel::RenamedData< bool > m_updateTangents;  ; sofa::core::objectmodel::RenamedData< bool > m_handleDynamicTopology;  ; sofa::core::objectmodel::RenamedData< bool > m_fixMergedUVSeams;  ; sofa::core::objectmodel::RenamedData< bool > m_keepLines;  ; sofa::core::objectmodel::RenamedData< VecCoord > m_vertices2;  ; sofa::core::objectmodel::RenamedData< VecTexCoord > m_vtexcoords;  ; sofa::core::objectmodel::RenamedData< VecCoord > m_vtangents;  ; sofa::core::objectmodel::RenamedData< VecCoord > m_vbitangents;  ; sofa::core::objectmodel::RenamedData< VecVisualEdge > m_,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model.html
Energy Efficiency,green,green,". More...;  ; Data< bool > alphaBlend;  Enable alpha blending. More...;  ; Data< bool > depthTest;  Enable depth testing. More...;  ; Data< int > cullFace;  Face culling (0 = no culling, 1 = cull back faces, 2 = cull front faces) More...;  ; Data< GLfloat > lineWidth;  Line width (set if != 1, only for lines rendering) More...;  ; Data< GLfloat > pointSize;  Point size (set if != 1, only for points rendering) More...;  ; Data< bool > lineSmooth;  Enable smooth line rendering. More...;  ; Data< bool > pointSmooth;  Enable smooth point rendering. More...;  ; DeprecatedAndRemoved isEnabled;  ; Data< sofa::helper::OptionsGroup > primitiveType;  Select types of primitives to send (necessary for some shader types such as geometry or tessellation) More...;  ; Data< sofa::helper::OptionsGroup > blendEquation;  if alpha blending is enabled this specifies how source and destination colors are combined More...;  ; Data< sofa::helper::OptionsGroup > sourceFactor;  if alpha blending is enabled this specifies how the red, green, blue, and alpha source blending factors are computed More...;  ; Data< sofa::helper::OptionsGroup > destFactor;  if alpha blending is enabled this specifies how the red, green, blue, and alpha destination blending factors are computed More...;  ; GLenum blendEq;  ; GLenum sfactor;  ; GLenum dfactor;  ; sofa::gl::Texture * tex;  ; GLuint vbo;  ; GLuint iboEdges;  ; GLuint iboTriangles;  ; GLuint iboQuads;  ; bool VBOGenDone;  ; bool initDone;  ; bool useEdges;  ; bool useTriangles;  ; bool useQuads;  ; bool canUsePatches;  ; size_t oldVerticesSize;  ; size_t oldNormalsSize;  ; size_t oldTexCoordsSize;  ; size_t oldTangentsSize;  ; size_t oldBitangentsSize;  ; size_t oldEdgesSize;  ; size_t oldTrianglesSize;  ; size_t oldQuadsSize;  ; int edgesRevision;  ; int trianglesRevision;  ; int quadsRevision;  ; std::vector< sofa::type::Vec3f > verticesTmpBuffer;  ; std::vector< sofa::type::Vec3f > normalsTmpBuffer;  ; std::vector< sofa::gl::Texture * > textures;  ; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model.html
Integrability,message,messages,"rd > m_scaleTex;  ; sofa::core::objectmodel::RenamedData< TexCoord > m_translationTex;  ; Data< Vec3Real > d_translation;  Initial Translation of the object. More...;  ; Data< Vec3Real > d_rotation;  Initial Rotation of the object. More...;  ; Data< Vec3Real > d_scale;  Initial Scale of the object. More...;  ; Data< TexCoord > d_scaleTex;  Scale of the texture. More...;  ; Data< TexCoord > d_translationTex;  Translation of the texture. More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::visual::VisualState< defaulttype::Vec3Types >; core::topology::PointData< VecCoord > m_positions;  Vertices coordinates. More...;  ; core::topology::PointData< VecCoord > m_restPositions;  Vertices rest coordinates. More...;  ; core::topology::PointData< VecDeriv > m_vnormals;  Normals of the model. More...;  ; bool modified;  True if input vertices modified since last rendering. More",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model.html
Modifiability,inherit,inherited,﻿. SOFA API: sofa::gl::component::shader::OglShaderVisualModel Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gl::component::shader::OglShaderVisualModel Class Reference . #include <OglShaderVisualModel.h>. Inheritance diagram for sofa::gl::component::shader::OglShaderVisualModel:. [legend]. Public Attributes; OglFloat3Attribute * vrestpositions;  ; OglFloat3Attribute * vrestnormals;  ; OglMatrix4Variable * modelMatrixUniform;  ;  Public Attributes inherited from sofa::gl::component::rendering3d::OglModel; Data< bool > blendTransparency;  Blend transparent parts. More...;  ;  Public Attributes inherited from sofa::component::visual::VisualModelImpl; bool useTopology;  True if list of d_facets should be taken from the attached topology. More...;  ; int lastMeshRev;  Time stamps from the last time the mesh was updated from the topology. More...;  ; bool castShadow;  True if object cast shadows. More...;  ; sofa::core::topology::BaseMeshTopology * m_topology;  ; sofa::core::objectmodel::RenamedData< bool > m_initRestPositions;  ; sofa::core::objectmodel::RenamedData< bool > m_useNormals;  ; sofa::core::objectmodel::RenamedData< bool > m_updateNormals;  ; sofa::core::objectmodel::RenamedData< bool > m_computeTangents;  ; sofa::core::objectmodel::RenamedData< bool > m_updateTangents;  ; sofa::core::objectmodel::RenamedData< bool > m_handleDynamicTopology;  ; sofa::core::objectmodel::RenamedData< bool > m_fixMergedUVSeams;  ; sofa::core::objectmodel::RenamedData< bool > m_keepLines;  ; sofa::core::objectmodel::RenamedData< VecCoord > m_vertices2;  ; sofa::core::objectmodel::RenamedData< VecTexCoord > m_vtexcoords;  ; sofa::core::objectmodel::RenamedData< VecCoord > m_vtangents;  ; sofa::core::objectmodel::RenamedData< VecCoord > m_vbitangents;  ; sofa::core::objectmodel::RenamedData< VecVisualEdge > m_,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model.html
Performance,load,loadTexture,"::OglModel;  SOFA_CLASS (OglModel, Inherit);  ; void parse (core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; bool loadTexture (const std::string &filename) override;  ; bool loadTextures () override;  ; void initTextures ();  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void updateBuffers () override;  ; void deleteBuffers () override;  ; void deleteTextures () override;  ; bool hasTransparent () override;  ; bool hasTexture ();  ; bool isUseEdges ();  ; bool isUseTriangles ();  ; bool isUseQuads ();  ; sofa::gl::Texture * getTex () const;  ; GLuint getVbo ();  ; GLuint getIboEdges ();  ; GLuint getIboTriangles ();  ; GLuint getIboQuads ();  ; const std::vector< sofa::gl::Texture * > & getTextures () const;  ; void createVertexBuffer ();  ; void createEdgesIndicesBuffer ();  ; void createTrianglesIndicesBuffer ();  ; void createQuadsIndicesBuffer ();  ; void initVertexBuffer ();  ; void initEdgesIndicesBuffer ();  ; void initTrianglesIndicesBuffer ();  ; void initQuadsIndicesBuffer ();  ; void updateVertexBuffer ();  ; void updateEdgesIndicesBuffer ();  ; void updateTrianglesIndicesBuffer ();  ; void updateQuadsIndicesBuffer ();  ;  Public Member Functions inherited from sofa::component::visual::VisualModelImpl;  SOFA_CLASS2 (VisualModelImpl, core::visual::VisualModel, sofa::core::visual::VisualState< defaulttype::Vec3Types >);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Index, sofa::Index);  ; bool hasOpaque ();  ; void doDrawVisual (const core::visual::VisualParams *vparams) override;  ; void drawTransparent (const core::visual::VisualParams *vparams) override;  Display transparent surfaces. More...;  ; void drawShadow (const core::visual::VisualParams *vparams) override;  Display shadow-casting surfaces. More...;  ; bool load (const std::string &filename, const std::string &loader, const std::string &textureName);",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model.html
Security,access,access,"re::ConstVecCoordId v) const override;  ; virtual const Data< VecDeriv > * read (core::ConstVecDerivId v) const override;  ; virtual const Data< MatrixDeriv > * read (core::ConstMatrixDerivId) const override;  ;  Public Member Functions inherited from sofa::core::State< TDataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(State, TDataTypes), BaseState);  ; sofa::type::TBoundingBox< Real > computeBBox () const;  Compute the bounding box independently from the visibility parameters. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ; objectmodel::BaseData * baseWrite (VecId v) override;  ; const objectmodel::BaseData * baseRead (ConstVecId v) const override;  ; ReadVecCoord readPositions () const;  ; WriteVecCoord writePositions ();  ; WriteOnlyVecCoord writeOnlyPositions ();  ; ReadVecCoord readRestPositions () const;  ; WriteVecCoord writeRestPositions ();  ; WriteOnlyVecCoord writeOnlyRestPositions ();  ; ReadVecDeriv readVelocities () const;  ; WriteVecDeriv writeVelocities ();  ; WriteOnlyVecDeriv writeOnlyVelocities ();  ; ReadVecDeriv readForces () const;  ; WriteVecDeriv writeForces ();  ; WriteOnlyVecDeriv writeOnlyForces ();  ; ReadVecDeriv readDx () const;  ; WriteVecDeriv writeDx ();  ; WriteOnlyVecDeriv writeOnlyDx ();  ; ReadVecDeriv readNormals () const;  ; const AccumulationVecId< TDataTypes, V_DERIV, V_READ > & readTotalForces () const;  Returns a proxy objects offering simplified access to elements of the cumulative sum of all force containers. More...;  ; void addToTotalForces (core::ConstVecDerivId forceId) override;  The provided VecDerivId will contribute to the sum of all force containers. More...;  ; void removeFromTotalForces (core::ConstVecDerivId forceId) override;  ;  Public Member Functions inherited from sofa::core::BaseState;  SOFA_ABSTRACT_CLASS (BaseState, objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model.html
Testability,test,testing,"ypes >; core::topology::PointData< VecCoord > m_positions;  Vertices coordinates. More...;  ; core::topology::PointData< VecCoord > m_restPositions;  Vertices rest coordinates. More...;  ; core::topology::PointData< VecDeriv > m_vnormals;  Normals of the model. More...;  ; bool modified;  True if input vertices modified since last rendering. More...;  ;  Public Attributes inherited from sofa::core::State< TDataTypes >; AccumulationVecId< TDataTypes, V_DERIV, V_READ > accumulatedForces;  Stores all the VecDerivId corresponding to a force. They can then be accumulated. More...;  . Protected Attributes; GLuint abo;  ; OglShader * shader;  ; int restPosition_lastUpdate;  ;  Protected Attributes inherited from sofa::gl::component::rendering3d::OglModel; Data< bool > premultipliedAlpha;  is alpha premultiplied ? More...;  ; Data< bool > writeZTransparent;  Write into Z Buffer for Transparent Object. More...;  ; Data< bool > alphaBlend;  Enable alpha blending. More...;  ; Data< bool > depthTest;  Enable depth testing. More...;  ; Data< int > cullFace;  Face culling (0 = no culling, 1 = cull back faces, 2 = cull front faces) More...;  ; Data< GLfloat > lineWidth;  Line width (set if != 1, only for lines rendering) More...;  ; Data< GLfloat > pointSize;  Point size (set if != 1, only for points rendering) More...;  ; Data< bool > lineSmooth;  Enable smooth line rendering. More...;  ; Data< bool > pointSmooth;  Enable smooth point rendering. More...;  ; DeprecatedAndRemoved isEnabled;  ; Data< sofa::helper::OptionsGroup > primitiveType;  Select types of primitives to send (necessary for some shader types such as geometry or tessellation) More...;  ; Data< sofa::helper::OptionsGroup > blendEquation;  if alpha blending is enabled this specifies how source and destination colors are combined More...;  ; Data< sofa::helper::OptionsGroup > sourceFactor;  if alpha blending is enabled this specifies how the red, green, blue, and alpha source blending factors are computed More...;  ; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model.html
Usability,clear,clearVisual,"void applyRotation (const sofa::type::Quat< SReal > q) override;  ; void applyScale (const SReal sx, const SReal sy, const SReal sz) override;  ; virtual void applyUVTransformation ();  ; void applyUVTranslation (const Real dU, const Real dV);  ; void applyUVScale (const Real su, const Real sv);  ; void setTranslation (SReal dx, SReal dy, SReal dz);  ; void setRotation (SReal rx, SReal ry, SReal rz);  ; void setScale (SReal sx, SReal sy, SReal sz);  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeLi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model.html
Deployability,update,updateInternal,"nst T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(Shader, objectmodel::BaseObject)sofa::core::visual::Shader; sofa::core::visual::VisualModel::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(OglShadowShader, sofa::gl::component::shader::OglShader)sofa::gl::component::shader::OglShadowShader; sofa::gl::component::shader::OglShader::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglShader, core::visual::Shader, core::visual::VisualModel)sofa::gl::component::shader::OglShader; SPtr typedefsofa::core::objectmodel::Base; start() overridesofa::gl::component::shader::OglShadervirtual; stop() overridesofa::gl::component::shader::OglShadervirtual; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; turnOnsofa::gl::component::shader::OglShader; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; vertFilenamesofa::gl::component::shader::OglShader; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglShader() overridesofa::gl::component::shader::OglShaderprotected; ~OglShadowShader() overridesofa::gl::component::shader::OglShadowShaderprotected; ~Shader() overridesofa::core::visual::Shaderinlinep",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shadow_shader-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shadow_shader-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglShadowShader Member List . This is the complete list of members for sofa::gl::component::shader::OglShadowShader, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDefineMacro(const unsigned int index, const std::string &name, const std::string &value)sofa::gl::component::shader::OglShader; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; backfaceWritingsofa::gl::component::shader::OglShader; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObject",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shadow_shader-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shadow_shader-members.html
Performance,load,loader,"Shader; setMatrix3x2(const unsigned int index, const char *name, int count, bool transpose, const float *f)sofa::gl::component::shader::OglShader; setMatrix3x4(const unsigned int index, const char *name, int count, bool transpose, const float *f)sofa::gl::component::shader::OglShader; setMatrix4(const unsigned int index, const char *name, int count, bool transpose, const float *f)sofa::gl::component::shader::OglShader; setMatrix4x2(const unsigned int index, const char *name, int count, bool transpose, const float *f)sofa::gl::component::shader::OglShader; setMatrix4x3(const unsigned int index, const char *name, int count, bool transpose, const float *f)sofa::gl::component::shader::OglShader; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTexture(const unsigned int index, const char *name, unsigned short unit)sofa::gl::component::shader::OglShader; Shader()sofa::core::visual::Shaderinlineprotected; shaderVectorsofa::gl::component::shader::OglShaderprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(Shader, objectmodel::BaseObject)sofa::core::visual::Shader; sofa::core::visual::VisualModel::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(OglShadowShader, sofa::gl::component::shader::OglShader)sofa::gl::component::shader::OglShadowShader; sofa::gl::component::shader::OglShader::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglShader, core::visual::Shader, core::visual::VisualModel)sofa::gl::component::shader::OglShader; SPtr typedefsofa::core::objectmodel::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shadow_shader-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shadow_shader-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDefineMacro(const unsigned int index, const std::string &name, const std::string &value)sofa::gl::component::shader::OglShader; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; backfaceWritingsofa::gl::component::shader::OglShader; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObject",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shadow_shader-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shadow_shader-members.html
Usability,clear,clearLoggedMessages,"Real, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; backfaceWritingsofa::gl::component::shader::OglShader; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; clampVertexColorsofa::gl::component::shader::OglShader; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglShadervirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::vi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shadow_shader-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shadow_shader-members.html
Availability,down,down,":gl::component::shader::OglShadowShader Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gl::component::shader::OglShadowShader Class Reference . #include <OglShadowShader.h>. Inheritance diagram for sofa::gl::component::shader::OglShadowShader:. [legend]. Static Protected Attributes; static const std::string PATH_TO_SHADOW_VERTEX_SHADERS = ""shaders/hardShadows/shadowMapping.vert"";  ; static const std::string PATH_TO_SHADOW_FRAGMENT_SHADERS = ""shaders/hardShadows/shadowMapping.frag"";  ; static const std::string PATH_TO_SOFT_SHADOW_VERTEX_SHADERS = ""shaders/softShadows/VSM/variance_shadow_mapping.vert"";  ; static const std::string PATH_TO_SOFT_SHADOW_FRAGMENT_SHADERS = ""shaders/softShadows/VSM/variance_shadow_mapping.frag"";  . Public Member Functions;  SOFA_CLASS (OglShadowShader, sofa::gl::component::shader::OglShader);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void initShaders (unsigned int numberOfLights, bool softShadow);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShader;  SOFA_CLASS2 (OglShader, core::visual::Shader, core::visual::VisualModel);  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void parse (core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void start () override;  Start the shader. More...;  ; void stop () override;  Stop the shader. More...;  ; bool isActive () override;  ; unsigned int getNumberOfShaders ();  ; unsigned int getCurrentIndex ();  ; void setCurrentIndex (const unsigned int index);  ; void addDefineMac",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shadow_shader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shadow_shader.html
Deployability,update,updateInternal,"ributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shadow_shader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shadow_shader.html
Integrability,depend,dependent,"r *name);  ; GLint getGeometryInputType (const unsigned int index);  ; void setGeometryInputType (const unsigned int index, GLint v);  ; GLint getGeometryOutputType (const unsigned int index);  ; void setGeometryOutputType (const unsigned int index, GLint v);  ; GLint getGeometryVerticesOut (const unsigned int index);  ; void setGeometryVerticesOut (const unsigned int index, GLint v);  ; bool insertInNode (core::objectmodel::BaseNode *node) override;  ; bool removeInNode (core::objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::Shader;  SOFA_ABSTRACT_CLASS (Shader, objectmodel::BaseObject);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shadow_shader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shadow_shader.html
Modifiability,inherit,inherited,"hadowShader.h>. Inheritance diagram for sofa::gl::component::shader::OglShadowShader:. [legend]. Static Protected Attributes; static const std::string PATH_TO_SHADOW_VERTEX_SHADERS = ""shaders/hardShadows/shadowMapping.vert"";  ; static const std::string PATH_TO_SHADOW_FRAGMENT_SHADERS = ""shaders/hardShadows/shadowMapping.frag"";  ; static const std::string PATH_TO_SOFT_SHADOW_VERTEX_SHADERS = ""shaders/softShadows/VSM/variance_shadow_mapping.vert"";  ; static const std::string PATH_TO_SOFT_SHADOW_FRAGMENT_SHADERS = ""shaders/softShadows/VSM/variance_shadow_mapping.frag"";  . Public Member Functions;  SOFA_CLASS (OglShadowShader, sofa::gl::component::shader::OglShader);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void initShaders (unsigned int numberOfLights, bool softShadow);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShader;  SOFA_CLASS2 (OglShader, core::visual::Shader, core::visual::VisualModel);  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void parse (core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void start () override;  Start the shader. More...;  ; void stop () override;  Stop the shader. More...;  ; bool isActive () override;  ; unsigned int getNumberOfShaders ();  ; unsigned int getCurrentIndex ();  ; void setCurrentIndex (const unsigned int index);  ; void addDefineMacro (const unsigned int index, const std::string &name, const std::string &value);  ; void setTexture (const unsigned int index, const char *name, unsigned short unit);  ; void setInt (const unsigned int index, const char *name, int i);  ; void setInt2 (const unsigned int index, const char *name, int i1, int i2);  ; v",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shadow_shader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shadow_shader.html
Performance,load,loader,"rticesOut (const unsigned int index);  ; void setGeometryVerticesOut (const unsigned int index, GLint v);  ; bool insertInNode (core::objectmodel::BaseNode *node) override;  ; bool removeInNode (core::objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::Shader;  SOFA_ABSTRACT_CLASS (Shader, objectmodel::BaseObject);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shadow_shader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shadow_shader.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shadow_shader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shadow_shader.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shadow_shader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shadow_shader.html
Deployability,update,updateInternal,"const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglTexture, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglTexture; SPtr typedefsofa::core::objectmodel::Base; srgbColorspacesofa::gl::component::shader::OglTextureprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; texturesofa::gl::component::shader::OglTextureprotected; textureFilenamesofa::gl::component::shader::OglTextureprotected; textureUnitsofa::gl::component::shader::OglTextureprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; unbind()sofa::gl::component::shader::OglTexture; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglTexture() overridesofa::gl::component::shader::OglTextureprotected; ~ShaderElement() overridesofa::core::visual::ShaderElementinlineprotected; ~VisualModel() overridesofa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglTexture Member List . This is the complete list of members for sofa::gl::component::shader::OglTexture, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bind()sofa::gl::component::shader::OglTexture; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglTexturevirtua",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture-members.html
Performance,load,loader,"haderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setActiveTexture(unsigned short unit)sofa::gl::component::shader::OglTexturestatic; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglTexture, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglTexture; SPtr typedefsofa::core::objectmodel::Base; srgbColorspacesofa::gl::component::shader::OglTextureprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; texturesofa::gl::component::shade",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bind()sofa::gl::component::shader::OglTexture; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglTexturevirtua",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture-members.html
Usability,clear,clearLoggedMessages,"lModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bind()sofa::gl::component::shader::OglTexture; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglTexturevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; cubemapFilenameNegXsofa::gl::component::shader::OglTextureprotected; cubemapFilenameNegYsofa::gl::component::shader::OglTextureprotected; cubemapFilenameNegZsofa::gl::component::shader::OglTextureprotected; cubemapFilenamePosXsofa::gl::component::shader::OglTextureprotected; cubemapFilenamePosYsofa::gl::component::shader::OglTextureprotected; cubemapFilenamePosZsofa::gl::component::shader::OglTextureprotected; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture-members.html
Availability,down,down,"LINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  . Public Member Functions;  SOFA_CLASS2 (OglTexture, core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; std::string getTextureName ();  ; unsigned short getTextureUnit ();  ; void bind ();  ; void unbind ();  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture.html
Deployability,update,updateVisual,"visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; std::string getTextureName ();  ; unsigned short getTextureUnit ();  ; void bind ();  ; void unbind ();  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture.html
Integrability,depend,dependent,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture.html
Modifiability,variab,variable,"﻿. SOFA API: sofa::gl::component::shader::OglTexture Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::gl::component::shader::OglTexture Class Reference . #include <OglTexture.h>; Defines an uniform sampler (texture) for a OglShader. ; More... Inheritance diagram for sofa::gl::component::shader::OglTexture:. [legend]; Detailed Description; Defines an uniform sampler (texture) for a OglShader. ; This is an abstract class which passes a texture id to an uniform sampler variable defined into the shader and load the image into OpenGL. At the moment, only texture2D is supported. . Static Public Attributes; static GLint MAX_NUMBER_OF_TEXTURE_UNIT = 1;  . Protected Attributes; sofa::core::objectmodel::DataFileName textureFilename;  ; Data< unsigned short > textureUnit;  Set the texture unit. More...;  ; Data< bool > enabled;  enabled ? More...;  ; Data< bool > repeat;  Repeat Texture ? More...;  ; Data< bool > linearInterpolation;  Interpolate Texture ? More...;  ; Data< bool > generateMipmaps;  Generate mipmaps ? More...;  ; Data< bool > srgbColorspace;  SRGB colorspace ? More...;  ; Data< float > minLod;  Minimum mipmap lod ? More...;  ; Data< float > maxLod;  Maximum mipmap lod ? More...;  ; Data< unsigned int > proceduralTextureWidth;  Width of procedural Texture. More...;  ; Data< unsigned int > proceduralTextureHeight;  Height of procedural Texture. More...;  ; Data< unsigned int > proceduralTextureNbBits;  Nb bits per color. More...;  ; Data< type::vector< unsigned int > > proceduralTextureData;  Data of procedural Texture. More...;  ; sofa::core::objectmodel::DataFileName cubemapFilenamePosX;  ; sofa::core::objectmodel::DataFileName cubemapFilenamePosY;  ; sofa::core::objectmodel::DataFileName cubemapFilenamePosZ;  ; sofa::core::objectmodel::DataFileName cub",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture.html
Performance,load,load,"﻿. SOFA API: sofa::gl::component::shader::OglTexture Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::gl::component::shader::OglTexture Class Reference . #include <OglTexture.h>; Defines an uniform sampler (texture) for a OglShader. ; More... Inheritance diagram for sofa::gl::component::shader::OglTexture:. [legend]; Detailed Description; Defines an uniform sampler (texture) for a OglShader. ; This is an abstract class which passes a texture id to an uniform sampler variable defined into the shader and load the image into OpenGL. At the moment, only texture2D is supported. . Static Public Attributes; static GLint MAX_NUMBER_OF_TEXTURE_UNIT = 1;  . Protected Attributes; sofa::core::objectmodel::DataFileName textureFilename;  ; Data< unsigned short > textureUnit;  Set the texture unit. More...;  ; Data< bool > enabled;  enabled ? More...;  ; Data< bool > repeat;  Repeat Texture ? More...;  ; Data< bool > linearInterpolation;  Interpolate Texture ? More...;  ; Data< bool > generateMipmaps;  Generate mipmaps ? More...;  ; Data< bool > srgbColorspace;  SRGB colorspace ? More...;  ; Data< float > minLod;  Minimum mipmap lod ? More...;  ; Data< float > maxLod;  Maximum mipmap lod ? More...;  ; Data< unsigned int > proceduralTextureWidth;  Width of procedural Texture. More...;  ; Data< unsigned int > proceduralTextureHeight;  Height of procedural Texture. More...;  ; Data< unsigned int > proceduralTextureNbBits;  Nb bits per color. More...;  ; Data< type::vector< unsigned int > > proceduralTextureData;  Data of procedural Texture. More...;  ; sofa::core::objectmodel::DataFileName cubemapFilenamePosX;  ; sofa::core::objectmodel::DataFileName cubemapFilenamePosY;  ; sofa::core::objectmodel::DataFileName cubemapFilenamePosZ;  ; sofa::core::objectmodel::DataFileName cub",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture.html
Usability,clear,clearVisual,"ms *) override;  Called after objects in the current branch are displayed. More...;  ; std::string getTextureName ();  ; unsigned short getTextureUnit ();  ; void bind ();  ; void unbind ();  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture.html
Deployability,update,updateInternal,"SS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglTexture2D, OglTexture)sofa::gl::component::shader::OglTexture2D; sofa::gl::component::shader::OglTexture::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglTexture, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglTexture; SPtr typedefsofa::core::objectmodel::Base; srgbColorspacesofa::gl::component::shader::OglTextureprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; texturesofa::gl::component::shader::OglTextureprotected; textureFilenamesofa::gl::component::shader::OglTextureprotected; textureUnitsofa::gl::component::shader::OglTextureprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; unbind()sofa::gl::component::shader::OglTexture; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglTexture() overridesofa::gl::component::shader::OglTextureprotected; ~OglTexture2D() overridesofa::gl::component::shader::OglTexture2D; ~ShaderElement() overridesofa::core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture2_d-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture2_d-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglTexture2D Member List . This is the complete list of members for sofa::gl::component::shader::OglTexture2D, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bind()sofa::gl::component::shader::OglTexture; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglTexturevi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture2_d-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture2_d-members.html
Performance,load,loader,"haderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setActiveTexture(unsigned short unit)sofa::gl::component::shader::OglTexturestatic; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglTexture2D, OglTexture)sofa::gl::component::shader::OglTexture2D; sofa::gl::component::shader::OglTexture::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglTexture, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglTexture; SPtr typedefsofa::core::objectmodel::Base; srgbColorspacesofa::gl::component::sha",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture2_d-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture2_d-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bind()sofa::gl::component::shader::OglTexture; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglTexturevi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture2_d-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture2_d-members.html
Usability,clear,clearLoggedMessages,"lModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bind()sofa::gl::component::shader::OglTexture; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglTexturevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; cubemapFilenameNegXsofa::gl::component::shader::OglTextureprotected; cubemapFilenameNegYsofa::gl::component::shader::OglTextureprotected; cubemapFilenameNegZsofa::gl::component::shader::OglTextureprotected; cubemapFilenamePosXsofa::gl::component::shader::OglTextureprotected; cubemapFilenamePosYsofa::gl::component::shader::OglTextureprotected; cubemapFilenamePosZsofa::gl::component::shader::OglTextureprotected; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture2_d-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture2_d-members.html
Availability,down,down,"﻿. SOFA API: sofa::gl::component::shader::OglTexture2D Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglTexture2D Class Reference . #include <OglTexture.h>. Inheritance diagram for sofa::gl::component::shader::OglTexture2D:. [legend]. Public Member Functions;  SOFA_CLASS (OglTexture2D, OglTexture);  ;  OglTexture2D ();  ;  ~OglTexture2D () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglTexture;  SOFA_CLASS2 (OglTexture, core::visual::VisualModel, OglShaderElement);  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; std::string getTextureName ();  ; unsigned short getTextureUnit ();  ; void bind ();  ; void unbind ();  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to u",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture2_d.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture2_d.html
Deployability,update,updateVisual,"visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; std::string getTextureName ();  ; unsigned short getTextureUnit ();  ; void bind ();  ; void unbind ();  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture2_d.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture2_d.html
Integrability,depend,dependent,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture2_d.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture2_d.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::component::shader::OglTexture2D Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglTexture2D Class Reference . #include <OglTexture.h>. Inheritance diagram for sofa::gl::component::shader::OglTexture2D:. [legend]. Public Member Functions;  SOFA_CLASS (OglTexture2D, OglTexture);  ;  OglTexture2D ();  ;  ~OglTexture2D () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglTexture;  SOFA_CLASS2 (OglTexture, core::visual::VisualModel, OglShaderElement);  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; std::string getTextureName ();  ; unsigned short getTextureUnit ();  ; void bind ();  ; void unbind ();  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to u",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture2_d.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture2_d.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture2_d.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture2_d.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture2_d.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture2_d.html
Usability,clear,clearVisual,"ms *) override;  Called after objects in the current branch are displayed. More...;  ; std::string getTextureName ();  ; unsigned short getTextureUnit ();  ; void bind ();  ; void unbind ();  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture2_d.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture2_d.html
Deployability,update,updateInternal,"lementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglTexturePointer, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglTexturePointer; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; textureUnitsofa::gl::component::shader::OglTexturePointerprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; unbind()sofa::gl::component::shader::OglTexturePointer; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglTexturePointer() overridesofa::gl::component::shader::OglTexturePointerprotected; ~ShaderElement() overridesofa::core::visual::ShaderElementinlineprotected; ~VisualModel(",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglTexturePointer Member List . This is the complete list of members for sofa::gl::component::shader::OglTexturePointer, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bind()sofa::gl::component::shader::OglTexturePointer; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::sha",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer-members.html
Performance,load,loader,"ement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setActiveTexture(unsigned short unit)sofa::gl::component::shader::OglTexturePointerstatic; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglTexturePointer, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglTexturePointer; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; textureUnitsofa::gl::component::shader::OglTexturePointerprotected; trackInternalDa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bind()sofa::gl::component::shader::OglTexturePointer; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::sha",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer-members.html
Usability,clear,clearLoggedMessages,"rtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bind()sofa::gl::component::shader::OglTexturePointer; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglTexturePointervirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core::visual::VisualModelvir",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer-members.html
Availability,down,down,"K > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  . Public Member Functions;  SOFA_CLASS2 (OglTexturePointer, core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; unsigned short getTextureUnit ();  ; void bind ();  ; void unbind ();  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize th",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer.html
Deployability,update,updateVisual,". More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; unsigned short getTextureUnit ();  ; void bind ();  ; void unbind ();  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer.html
Integrability,depend,dependent,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer.html
Modifiability,variab,variable,"﻿. SOFA API: sofa::gl::component::shader::OglTexturePointer Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::gl::component::shader::OglTexturePointer Class Reference . #include <OglTexturePointer.h>; Defines an uniform sampler (texture) for a OglShader. ; More... Inheritance diagram for sofa::gl::component::shader::OglTexturePointer:. [legend]; Detailed Description; Defines an uniform sampler (texture) for a OglShader. ; This is an abstract class which passes a texture id to an uniform sampler variable defined into the shader and load the image into OpenGL. At the moment, only texture2D is supported. . Protected Attributes; LinkTexture l_oglTexture;  ; Data< unsigned short > textureUnit;  Set the texture unit. More...;  ; Data< bool > enabled;  enabled ? More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  . Public Member ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer.html
Performance,load,load,"﻿. SOFA API: sofa::gl::component::shader::OglTexturePointer Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::gl::component::shader::OglTexturePointer Class Reference . #include <OglTexturePointer.h>; Defines an uniform sampler (texture) for a OglShader. ; More... Inheritance diagram for sofa::gl::component::shader::OglTexturePointer:. [legend]; Detailed Description; Defines an uniform sampler (texture) for a OglShader. ; This is an abstract class which passes a texture id to an uniform sampler variable defined into the shader and load the image into OpenGL. At the moment, only texture2D is supported. . Protected Attributes; LinkTexture l_oglTexture;  ; Data< unsigned short > textureUnit;  Set the texture unit. More...;  ; Data< bool > enabled;  enabled ? More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  . Public Member ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer.html
Usability,clear,clearVisual," bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; unsigned short getTextureUnit ();  ; void bind ();  ; void unbind ();  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer.html
Deployability,update,updateInternal,"Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglUInt2Attribute, SOFA_TEMPLATE3(OglAttribute, 2, GL_UNSIGNED_INT, SOFA_TEMPLATE2(sofa::type::Vec, 2, unsigned int)))sofa::gl::component::shader::OglUInt2Attribute; OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 2, unsigned int >), core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >protected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglAttribute() overridesofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >protected; ~OglSh",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglUInt2Attribute Member List . This is the complete list of members for sofa::gl::component::shader::OglUInt2Attribute, including all inherited members. _abosofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >protected; _aboSizesofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >protected; _indexsofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >protected; _lastUpdateDataCountersofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >protected; _needUpdatesofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >protected; _topologysofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >protected; _usagesofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< Ba",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute-members.html
Performance,load,loader,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setUsage(unsigned int usage)sofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >inline; setValue(const type::vector< sofa::type::Vec< 2, unsigned int > > &value)sofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglUInt2Attribute, SOFA_TEMPLATE3(OglAttribute, 2, GL_U",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute-members.html
Testability,log,logging,"ataCountersofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >protected; _needUpdatesofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >protected; _topologysofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >protected; _usagesofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute-members.html
Usability,clear,clearLoggedMessages,"slation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >; disable()sofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >virtual; do",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute-members.html
Availability,down,down,"﻿. SOFA API: sofa::gl::component::shader::OglUInt2Attribute Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglUInt2Attribute Class Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglUInt2Attribute:. [legend]. Public Member Functions;  SOFA_CLASS (OglUInt2Attribute, SOFA_TEMPLATE3(OglAttribute, 2, GL_UNSIGNED_INT, SOFA_TEMPLATE2(sofa::type::Vec, 2, unsigned int)));  ;  OglUInt2Attribute ();  ; virtual ~OglUInt2Attribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 2, unsigned int >), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< sofa::type::Vec< 2, unsigned int > > * beginEdit ();  ; void endEdit ();  ; const type::vector< sofa::type::Vec< 2, unsigned int > > & getValue () const;  ; void setValue (const type::vector< sofa::type::Vec< 2, unsigned int > > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (textur",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute.html
Deployability,update,update,"Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglUInt2Attribute:. [legend]. Public Member Functions;  SOFA_CLASS (OglUInt2Attribute, SOFA_TEMPLATE3(OglAttribute, 2, GL_UNSIGNED_INT, SOFA_TEMPLATE2(sofa::type::Vec, 2, unsigned int)));  ;  OglUInt2Attribute ();  ; virtual ~OglUInt2Attribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 2, unsigned int >), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< sofa::type::Vec< 2, unsigned int > > * beginEdit ();  ; void endEdit ();  ; const type::vector< sofa::type::Vec< 2, unsigned int > > & getValue () const;  ; void setValue (const type::vector< sofa::type::Vec< 2, unsigned int > > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVertex () override;  ; int getSETotalSize () override;  ;  Public",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute.html
Integrability,depend,dependent,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::component::shader::OglUInt2Attribute Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglUInt2Attribute Class Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglUInt2Attribute:. [legend]. Public Member Functions;  SOFA_CLASS (OglUInt2Attribute, SOFA_TEMPLATE3(OglAttribute, 2, GL_UNSIGNED_INT, SOFA_TEMPLATE2(sofa::type::Vec, 2, unsigned int)));  ;  OglUInt2Attribute ();  ; virtual ~OglUInt2Attribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 2, unsigned int >), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< sofa::type::Vec< 2, unsigned int > > * beginEdit ();  ; void endEdit ();  ; const type::vector< sofa::type::Vec< 2, unsigned int > > & getValue () const;  ; void setValue (const type::vector< sofa::type::Vec< 2, unsigned int > > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (textur",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute.html
Usability,clear,clearVisual,"verride;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVertex () override;  ; int getSETotalSize () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute.html
Deployability,update,updateInternal,"Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglUInt3Attribute, SOFA_TEMPLATE3(OglAttribute, 3, GL_UNSIGNED_INT, SOFA_TEMPLATE2(sofa::type::Vec, 3, unsigned int)))sofa::gl::component::shader::OglUInt3Attribute; OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 3, unsigned int >), core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >protected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglAttribute() overridesofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >protected; ~OglSh",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglUInt3Attribute Member List . This is the complete list of members for sofa::gl::component::shader::OglUInt3Attribute, including all inherited members. _abosofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >protected; _aboSizesofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >protected; _indexsofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >protected; _lastUpdateDataCountersofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >protected; _needUpdatesofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >protected; _topologysofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >protected; _usagesofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< Ba",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute-members.html
Performance,load,loader,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setUsage(unsigned int usage)sofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >inline; setValue(const type::vector< sofa::type::Vec< 3, unsigned int > > &value)sofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglUInt3Attribute, SOFA_TEMPLATE3(OglAttribute, 3, GL_U",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute-members.html
Testability,log,logging,"ataCountersofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >protected; _needUpdatesofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >protected; _topologysofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >protected; _usagesofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute-members.html
Usability,clear,clearLoggedMessages,"slation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >; disable()sofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >virtual; do",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute-members.html
Availability,down,down,"﻿. SOFA API: sofa::gl::component::shader::OglUInt3Attribute Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglUInt3Attribute Class Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglUInt3Attribute:. [legend]. Public Member Functions;  SOFA_CLASS (OglUInt3Attribute, SOFA_TEMPLATE3(OglAttribute, 3, GL_UNSIGNED_INT, SOFA_TEMPLATE2(sofa::type::Vec, 3, unsigned int)));  ;  OglUInt3Attribute ();  ; virtual ~OglUInt3Attribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 3, unsigned int >), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< sofa::type::Vec< 3, unsigned int > > * beginEdit ();  ; void endEdit ();  ; const type::vector< sofa::type::Vec< 3, unsigned int > > & getValue () const;  ; void setValue (const type::vector< sofa::type::Vec< 3, unsigned int > > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (textur",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute.html
Deployability,update,update,"Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglUInt3Attribute:. [legend]. Public Member Functions;  SOFA_CLASS (OglUInt3Attribute, SOFA_TEMPLATE3(OglAttribute, 3, GL_UNSIGNED_INT, SOFA_TEMPLATE2(sofa::type::Vec, 3, unsigned int)));  ;  OglUInt3Attribute ();  ; virtual ~OglUInt3Attribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 3, unsigned int >), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< sofa::type::Vec< 3, unsigned int > > * beginEdit ();  ; void endEdit ();  ; const type::vector< sofa::type::Vec< 3, unsigned int > > & getValue () const;  ; void setValue (const type::vector< sofa::type::Vec< 3, unsigned int > > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVertex () override;  ; int getSETotalSize () override;  ;  Public",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute.html
Integrability,depend,dependent,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::component::shader::OglUInt3Attribute Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglUInt3Attribute Class Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglUInt3Attribute:. [legend]. Public Member Functions;  SOFA_CLASS (OglUInt3Attribute, SOFA_TEMPLATE3(OglAttribute, 3, GL_UNSIGNED_INT, SOFA_TEMPLATE2(sofa::type::Vec, 3, unsigned int)));  ;  OglUInt3Attribute ();  ; virtual ~OglUInt3Attribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 3, unsigned int >), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< sofa::type::Vec< 3, unsigned int > > * beginEdit ();  ; void endEdit ();  ; const type::vector< sofa::type::Vec< 3, unsigned int > > & getValue () const;  ; void setValue (const type::vector< sofa::type::Vec< 3, unsigned int > > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (textur",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute.html
Usability,clear,clearVisual,"verride;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVertex () override;  ; int getSETotalSize () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute.html
Deployability,update,updateInternal,"Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglUInt4Attribute, SOFA_TEMPLATE3(OglAttribute, 4, GL_UNSIGNED_INT, SOFA_TEMPLATE2(sofa::type::Vec, 4, unsigned int)))sofa::gl::component::shader::OglUInt4Attribute; OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 4, unsigned int >), core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >protected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglAttribute() overridesofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >protected; ~OglSh",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglUInt4Attribute Member List . This is the complete list of members for sofa::gl::component::shader::OglUInt4Attribute, including all inherited members. _abosofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >protected; _aboSizesofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >protected; _indexsofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >protected; _lastUpdateDataCountersofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >protected; _needUpdatesofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >protected; _topologysofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >protected; _usagesofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< Ba",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute-members.html
Performance,load,loader,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setUsage(unsigned int usage)sofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >inline; setValue(const type::vector< sofa::type::Vec< 4, unsigned int > > &value)sofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglUInt4Attribute, SOFA_TEMPLATE3(OglAttribute, 4, GL_U",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute-members.html
Testability,log,logging,"ataCountersofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >protected; _needUpdatesofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >protected; _topologysofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >protected; _usagesofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute-members.html
Usability,clear,clearLoggedMessages,"slation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >; disable()sofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >virtual; do",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute-members.html
Availability,down,down,"﻿. SOFA API: sofa::gl::component::shader::OglUInt4Attribute Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglUInt4Attribute Class Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglUInt4Attribute:. [legend]. Public Member Functions;  SOFA_CLASS (OglUInt4Attribute, SOFA_TEMPLATE3(OglAttribute, 4, GL_UNSIGNED_INT, SOFA_TEMPLATE2(sofa::type::Vec, 4, unsigned int)));  ;  OglUInt4Attribute ();  ; virtual ~OglUInt4Attribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 4, unsigned int >), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< sofa::type::Vec< 4, unsigned int > > * beginEdit ();  ; void endEdit ();  ; const type::vector< sofa::type::Vec< 4, unsigned int > > & getValue () const;  ; void setValue (const type::vector< sofa::type::Vec< 4, unsigned int > > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (textur",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute.html
Deployability,update,update,"Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglUInt4Attribute:. [legend]. Public Member Functions;  SOFA_CLASS (OglUInt4Attribute, SOFA_TEMPLATE3(OglAttribute, 4, GL_UNSIGNED_INT, SOFA_TEMPLATE2(sofa::type::Vec, 4, unsigned int)));  ;  OglUInt4Attribute ();  ; virtual ~OglUInt4Attribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 4, unsigned int >), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< sofa::type::Vec< 4, unsigned int > > * beginEdit ();  ; void endEdit ();  ; const type::vector< sofa::type::Vec< 4, unsigned int > > & getValue () const;  ; void setValue (const type::vector< sofa::type::Vec< 4, unsigned int > > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVertex () override;  ; int getSETotalSize () override;  ;  Public",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute.html
Integrability,depend,dependent,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::component::shader::OglUInt4Attribute Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglUInt4Attribute Class Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglUInt4Attribute:. [legend]. Public Member Functions;  SOFA_CLASS (OglUInt4Attribute, SOFA_TEMPLATE3(OglAttribute, 4, GL_UNSIGNED_INT, SOFA_TEMPLATE2(sofa::type::Vec, 4, unsigned int)));  ;  OglUInt4Attribute ();  ; virtual ~OglUInt4Attribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 4, unsigned int >), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< sofa::type::Vec< 4, unsigned int > > * beginEdit ();  ; void endEdit ();  ; const type::vector< sofa::type::Vec< 4, unsigned int > > & getValue () const;  ; void setValue (const type::vector< sofa::type::Vec< 4, unsigned int > > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (textur",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute.html
Usability,clear,clearVisual,"verride;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVertex () override;  ; int getSETotalSize () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute.html
Deployability,update,updateInternal,"mentprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglUIntAttribute, SOFA_TEMPLATE3(OglAttribute, 1, GL_UNSIGNED_INT, unsigned int))sofa::gl::component::shader::OglUIntAttribute; OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE3(OglAttribute, size, type, unsigned int), core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >protected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglAttribute() overridesofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >protected; ~OglShaderElement() overridesofa::gl::component::s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglUIntAttribute Member List . This is the complete list of members for sofa::gl::component::shader::OglUIntAttribute, including all inherited members. _abosofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >protected; _aboSizesofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >protected; _indexsofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >protected; _lastUpdateDataCountersofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >protected; _needUpdatesofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >protected; _topologysofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >protected; _usagesofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute-members.html
Performance,load,loader,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setUsage(unsigned int usage)sofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >inline; setValue(const type::vector< unsigned int > &value)sofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglUIntAttribute, SOFA_TEMPLATE3(OglAttribute, 1, GL_UNSIGNED_INT, unsigned int))sofa::gl::component::shader::OglUIntAttr",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute-members.html
Testability,log,logging,"mponent::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >protected; _lastUpdateDataCountersofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >protected; _needUpdatesofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >protected; _topologysofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >protected; _usagesofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute-members.html
Usability,clear,clearLoggedMessages,":visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >; disable()sofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtua",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute-members.html
Availability,down,down,"﻿. SOFA API: sofa::gl::component::shader::OglUIntAttribute Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglUIntAttribute Class Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglUIntAttribute:. [legend]; Detailed Description; UNSIGNED INT ATTRIBUTE . Public Member Functions;  SOFA_CLASS (OglUIntAttribute, SOFA_TEMPLATE3(OglAttribute, 1, GL_UNSIGNED_INT, unsigned int));  ;  OglUIntAttribute ();  ; virtual ~OglUIntAttribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, unsigned int), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< unsigned int > * beginEdit ();  ; void endEdit ();  ; const type::vector< unsigned int > & getValue () const;  ; void setValue (const type::vector< unsigned int > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const ove",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute.html
Deployability,update,update,"nent::shader::OglUIntAttribute Class Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglUIntAttribute:. [legend]; Detailed Description; UNSIGNED INT ATTRIBUTE . Public Member Functions;  SOFA_CLASS (OglUIntAttribute, SOFA_TEMPLATE3(OglAttribute, 1, GL_UNSIGNED_INT, unsigned int));  ;  OglUIntAttribute ();  ; virtual ~OglUIntAttribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, unsigned int), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< unsigned int > * beginEdit ();  ; void endEdit ();  ; const type::vector< unsigned int > & getValue () const;  ; void setValue (const type::vector< unsigned int > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVertex () override;  ; int getSETotalSize () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute.html
Integrability,depend,dependent,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::component::shader::OglUIntAttribute Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::component::shader::OglUIntAttribute Class Reference . #include <OglAttribute.h>. Inheritance diagram for sofa::gl::component::shader::OglUIntAttribute:. [legend]; Detailed Description; UNSIGNED INT ATTRIBUTE . Public Member Functions;  SOFA_CLASS (OglUIntAttribute, SOFA_TEMPLATE3(OglAttribute, 1, GL_UNSIGNED_INT, unsigned int));  ;  OglUIntAttribute ();  ; virtual ~OglUIntAttribute ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, unsigned int), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< unsigned int > * beginEdit ();  ; void endEdit ();  ; const type::vector< unsigned int > & getValue () const;  ; void setValue (const type::vector< unsigned int > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const ove",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute.html
Usability,clear,clearVisual,"verride;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVertex () override;  ; int getSETotalSize () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute.html
Deployability,update,updateInternal,"DataTypes &v)sofa::gl::component::shader::OglVariable< DataTypes >inlinevirtual; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::shader::OglVariable< DataTypes >inlineprotected; ~ShaderElement() over",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OglVariable< DataTypes > Member List . This is the complete list of members for sofa::gl::component::shader::OglVariable< DataTypes >, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObj",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable-members.html
Performance,load,loader,"enum valuesofa::core::visual::ShaderElement; SE_NONE enum valuesofa::core::visual::ShaderElement; SE_TEXTURE enum valuesofa::core::visual::ShaderElement; SE_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(std::string str)sofa::gl::component::shader::OglShaderElementinline; setIndexShader(unsigned int index)sofa::gl::component::shader::OglShaderElementinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setValue(const DataTypes &v)sofa::gl::component::shader::OglVariable< DataTypes >inlinevirtual; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseO",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObj",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable-members.html
Usability,clear,clearLoggedMessages,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< DataTypes >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< DataTypes >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable-members.html
Availability,down,down,"ise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const DataTypes &v);  ; virtual void pushValue ()=0;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resourc",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable.html
Deployability,update,updateVisual,"method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable.html
Integrability,message,messages,"tion; template<class DataTypes>; class sofa::gl::component::shader::OglVariable< DataTypes >; Defines an uniform variable for a OglShader. ; This is an abstract class which pass a value to an uniform variable defined into the shader. At the moment, following types are supported :; int, ivec2, ivec3, ivec4;; float, vec2, vec3, vec4;; int[], ivec2[], ivec3[], ivec4[];; float[], vec2[], vec3[], vec4[]; . Public Attributes; Data< DataTypes > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const DataTypes &v);  ; virtual void pushValue ()=0;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when varia",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable.html
Modifiability,variab,variable,"﻿. SOFA API: sofa::gl::component::shader::OglVariable< DataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gl::component::shader::OglVariable< DataTypes > Class Template Referenceabstract . #include <OglVariable.h>; Defines an uniform variable for a OglShader. ; More... Inheritance diagram for sofa::gl::component::shader::OglVariable< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::gl::component::shader::OglVariable< DataTypes >; Defines an uniform variable for a OglShader. ; This is an abstract class which pass a value to an uniform variable defined into the shader. At the moment, following types are supported :; int, ivec2, ivec3, ivec4;; float, vec2, vec3, vec4;; int[], ivec2[], ivec3[], ivec4[];; float[], vec2[], vec3[], vec4[]; . Public Attributes; Data< DataTypes > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceF",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable.html
Usability,clear,clearVisual,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable.html
Deployability,update,updateInternal," setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(OrderIndependentTransparencyManager, core::visual::VisualManager)sofa::gl::component::shader::OrderIndependentTransparencyManager; sofa::core::visual::VisualManager::SOFA_CLASS(VisualManager, VisualModel)sofa::core::visual::VisualManager; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OrderIndependentTransparencyManager() overridesofa::gl::component::shader::OrderIndependentTransparencyManagerprotected; ~VisualManager() overridesofa::core::visual::VisualManagerinlineprotected; ~VisualModel() overridesofa::core::visual::VisualModelinli",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::OrderIndependentTransparencyManager Member List . This is the complete list of members for sofa::gl::component::shader::OrderIndependentTransparencyManager, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OrderIndepend",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager-members.html
Performance,load,loader,"::shader::OrderIndependentTransparencyManagervirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::visual::VisualManagervirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(OrderIndependentTransparencyManager, core::visual::VisualManager)sofa::gl::component::shader::OrderIndependentTransparencyManager; sofa::core::visual::VisualManager::SOFA_CLASS(VisualManager, VisualModel)sofa::core::visual::VisualManager; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OrderIndepend",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager-members.html
Usability,clear,clearLoggedMessages,"ual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OrderIndependentTransparencyManagervirtual; bwdInit() overridesofa::gl::component::shader::OrderIndependentTransparencyManagervirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; depthScalesofa::gl::component::shader::OrderIndependentTransparencyManager; doInitVisual(const core::visual::VisualParams *vp) overridesofa::gl::component::shader::OrderIndependentTransparencyManagervirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OrderIndependentTransparencyManagervi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager-members.html
Availability,down,down,"  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (OrderIndependentTransparencyManager, core::visual::VisualManager);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void bwdInit () override;  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doInitVisual (const core::visual::VisualParams *vp) override;  ; void preDrawScene (core::visual::VisualParams *vp) override;  Called before rendering the scene. More...;  ; bool drawScene (core::visual::VisualParams *vp) override;  Called instead of rendering the scene. More...;  ; void postDrawScene (core::visual::VisualParams *vp) override;  Called after rendering the scene. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current bran",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager.html
Deployability,update,updateVisual,"VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ;  Public Member Functions inherited from sofa::core::visual::VisualManager;  SOFA_CLASS (VisualManager, VisualModel);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager.html
Integrability,message,messages,"lude <OrderIndependentTransparencyManager.h>; Utility to manage transparency (translucency) into an Opengl scene. ; More... Inheritance diagram for sofa::gl::component::shader::OrderIndependentTransparencyManager:. [legend]; Detailed Description; Utility to manage transparency (translucency) into an Opengl scene. ; NoteReference: http://jcgt.org/published/0002/02/09/paper.pdf . Public Attributes; Data< float > depthScale;  Depth scale. More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (OrderIndependentTransparencyManager, core::visual::VisualManager);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void bwdInit () override;  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void reinit () override;  Update method called when variables use",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::component::shader::OrderIndependentTransparencyManager Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gl::component::shader::OrderIndependentTransparencyManager Class Reference . #include <OrderIndependentTransparencyManager.h>; Utility to manage transparency (translucency) into an Opengl scene. ; More... Inheritance diagram for sofa::gl::component::shader::OrderIndependentTransparencyManager:. [legend]; Detailed Description; Utility to manage transparency (translucency) into an Opengl scene. ; NoteReference: http://jcgt.org/published/0002/02/09/paper.pdf . Public Attributes; Data< float > depthScale;  Depth scale. More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (OrderIndependentTransparencyM",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager.html
Performance,load,loader," ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void updateInternal ();  Update method called when variables (used to compute other inte",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager.html
Usability,clear,clearVisual,"ams *) override;  Called before objects in the current branch are displayed. More...;  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ;  Public Member Functions inherited from sofa::core::visual::VisualManager;  SOFA_CLASS (VisualManager, VisualModel);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager.html
Deployability,update,updateInternal,"sofa::gl::component::shader::Lightinlinevirtual; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(PositionalLight, Light)sofa::gl::component::shader::PositionalLight; sofa::gl::component::shader::Light::SOFA_CLASS(Light, core::visual::VisualModel)sofa::gl::component::shader::Light; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPOTLIGHT enum valuesofa::gl::component::shader::Light; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~Light() overridesofa::gl::component::shader::Lightprotected; ~PositionalLight() overridesofa::gl::component::shader::PositionalLight; ~VisualModel() overridesofa::core::visual::VisualModelinlineprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_positional_light-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_positional_light-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::PositionalLight Member List . This is the complete list of members for sofa::gl::component::shader::PositionalLight, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; b_needUpdatesofa::gl::component::shader::Lightprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; blurDepthTexture()sofa::gl::component::shader::Lightprotected; bwdDraw(",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_positional_light-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_positional_light-members.html
Performance,load,loader,"erridesofa::core::visual::VisualModelvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(const GLint &id)sofa::gl::component::shader::Light; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setShadowTextureUnit(const unsigned short unit)sofa::gl::component::shader::Lightinlinevirtual; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(PositionalLight, Light)sofa::gl::component::shader::PositionalLight; sofa::gl::component::shader::Light::SOFA_CLASS(Light, core::visual::VisualModel)sofa::gl::component::shader::Light; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPOTLIGHT enum valuesofa::gl::component::shader::Light; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_positional_light-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_positional_light-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; b_needUpdatesofa::gl::component::shader::Lightprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; blurDepthTexture()sofa::gl::component::shader::Lightprotected; bwdDraw(",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_positional_light-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_positional_light-members.html
Usability,clear,clearLoggedMessages,"st SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; b_needUpdatesofa::gl::component::shader::Lightprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; blurDepthTexture()sofa::gl::component::shader::Lightprotected; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeShadowMapSize()sofa::gl::component::shader::Lightprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_attenuationsofa::gl::component::shader::PositionalLight; d_colorsofa::gl::component::shader::Light; d_componentStatesofa::core::objectmodel::Base; d_drawSourcesofa::gl::component::shader::Light; d_enablesofa::core::visual::VisualModel; d_fixedsofa::gl::component::shader::PositionalLight; d_messageLogCountsofa::core::objectmodel::Basemutable; d_modelViewMatrixsofa::gl::component::shader::Light; d_positionsofa::gl::component::shader::PositionalLight; d_projectionMatrixsofa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_positional_light-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_positional_light-members.html
Availability,down,down,"objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (PositionalLight, Light);  ;  PositionalLight ();  ;  ~PositionalLight () override;  ; void drawLight (const core::visual::VisualParams *vparams) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void drawSource (const core::visual::VisualParams *) override;  Draw the light source from an external point of view. More...;  ; const sofa::type::Vec3 getPosition () override;  ; LightType getLightType () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::Light;  SOFA_CLASS (Light, core::visual::VisualModel);  ; void setID (const GLint &id);  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  ; GLfloat getZNear ();  ; GLfloat getZFar ();  ; virtual void preDrawShadow (core::visual::VisualParams *vp);  ; virtual void postDrawShadow ();  ; virtual GLuint getShadowMapSize ();  ; const GLfloat * getOpenGLProjectionMatrix ();  ; const GLfloat * getOpenGLModelViewMatrix ();  ; virtual GLuint getDepthTexture ();  ; virtual GLuint getColorTexture ();  ; virtual unsigned short getShadowTextureUnit ();  ; virtual void setShadowTextureUnit (const unsigned short unit);  ; virtual type::Vec3 getDirection ();  ; virtual float getShadowFactor ();  ; virtual float getVSMLightB",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_positional_light.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_positional_light.html
Deployability,update,updateVisual," getZFar ();  ; virtual void preDrawShadow (core::visual::VisualParams *vp);  ; virtual void postDrawShadow ();  ; virtual GLuint getShadowMapSize ();  ; const GLfloat * getOpenGLProjectionMatrix ();  ; const GLfloat * getOpenGLModelViewMatrix ();  ; virtual GLuint getDepthTexture ();  ; virtual GLuint getColorTexture ();  ; virtual unsigned short getShadowTextureUnit ();  ; virtual void setShadowTextureUnit (const unsigned short unit);  ; virtual type::Vec3 getDirection ();  ; virtual float getShadowFactor ();  ; virtual float getVSMLightBleeding ();  ; virtual float getVSMMinVariance ();  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_positional_light.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_positional_light.html
Integrability,message,messages,"g;  [Shadowing] (VSM only) Light bleeding parameter More...;  ; Data< float > d_VSMMinVariance;  [Shadowing] (VSM only) Minimum variance parameter More...;  ; Data< unsigned short > d_textureUnit;  [Shadowing] Texture unit for the generated shadow texture More...;  ; Data< type::vector< float > > d_modelViewMatrix;  [Shadowing] ModelView Matrix More...;  ; Data< type::vector< float > > d_projectionMatrix;  [Shadowing] Projection Matrix More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (PositionalLight, Light);  ;  PositionalLight ();  ;  ~PositionalLight () override;  ; void drawLight (const core::visual::VisualParams *vparams) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void drawSource (const core::visual::VisualParams *) override;  Draw the light source from an exter",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_positional_light.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_positional_light.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::component::shader::PositionalLight Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::gl::component::shader::PositionalLight Class Reference . #include <Light.h>. Inheritance diagram for sofa::gl::component::shader::PositionalLight:. [legend]. Public Attributes; Data< bool > d_fixed;  Fix light position from the camera. More...;  ; Data< sofa::type::Vec3 > d_position;  Set the position of the light. More...;  ; Data< float > d_attenuation;  Set the attenuation of the light. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::Light; Data< sofa::type::RGBAColor > d_color;  Set the color of the light. (default=[1.0,1.0,1.0,1.0]) More...;  ; Data< GLuint > d_shadowTextureSize;  [Shadowing] Set size for shadow texture More...;  ; Data< bool > d_drawSource;  Draw Light Source. More...;  ; Data< float > d_zNear;  [Shadowing] Light's ZNear More...;  ; Data< float > d_zFar;  [Shadowing] Light's ZFar More...;  ; Data< bool > d_shadowsEnabled;  [Shadowing] Enable Shadow from this light More...;  ; Data< bool > d_softShadows;  [Shadowing] Turn on Soft Shadow from this light More...;  ; Data< float > d_shadowFactor;  [Shadowing] Shadow Factor (decrease/increase darkness) More...;  ; Data< float > d_VSMLightBleeding;  [Shadowing] (VSM only) Light bleeding parameter More...;  ; Data< float > d_VSMMinVariance;  [Shadowing] (VSM only) Minimum variance parameter More...;  ; Data< unsigned short > d_textureUnit;  [Shadowing] Texture unit for the generated shadow texture More...;  ; Data< type::vector< float > > d_modelViewMatrix;  [Shadowing] ModelView Matrix More...;  ; Data< type::vector< float > > d_projectionMatrix;  [Shadowing] Projection Matrix More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sof",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_positional_light.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_positional_light.html
Performance,load,loader," ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_positional_light.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_positional_light.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_positional_light.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_positional_light.html
Usability,clear,clearVisual,"ze ();  ; const GLfloat * getOpenGLProjectionMatrix ();  ; const GLfloat * getOpenGLModelViewMatrix ();  ; virtual GLuint getDepthTexture ();  ; virtual GLuint getColorTexture ();  ; virtual unsigned short getShadowTextureUnit ();  ; virtual void setShadowTextureUnit (const unsigned short unit);  ; virtual type::Vec3 getDirection ();  ; virtual float getShadowFactor ();  ; virtual float getVSMLightBleeding ();  ; virtual float getVSMMinVariance ();  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_positional_light.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_positional_light.html
Deployability,update,updateInternal,"unter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(PostProcessManager, core::visual::VisualModel)sofa::gl::component::shader::PostProcessManager; sofa::core::visual::VisualManager::SOFA_CLASS(VisualManager, VisualModel)sofa::core::visual::VisualManager; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; vertFilenamesofa::gl::component::shader::PostProcessManager; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~PostProcessManager() overridesofa::gl::component::shader::PostProcessManagerprotected; ~VisualManager() overridesofa::core::visual::VisualManagerinlineprotected; ~VisualModel() overridesofa::co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_post_process_manager-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_post_process_manager-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::PostProcessManager Member List . This is the complete list of members for sofa::gl::component::shader::PostProcessManager, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_post_process_manager-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_post_process_manager-members.html
Performance,load,loader,"::component::shader::PostProcessManagerinlinevirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::visual::VisualManagervirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(PostProcessManager, core::visual::VisualModel)sofa::gl::component::shader::PostProcessManager; sofa::core::visual::VisualManager::SOFA_CLASS(VisualManager, VisualModel)sofa::core::visual::VisualManager; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finals",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_post_process_manager-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_post_process_manager-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_post_process_manager-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_post_process_manager-members.html
Usability,clear,clearLoggedMessages,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::PostProcessManagervirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawScene(core::visual::VisualParams *vp) overridesofa::gl::component::shader::PostProcessManagervirtual; drawShadow(con",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_post_process_manager-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_post_process_manager-members.html
Availability,down,down,"listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (PostProcessManager, core::visual::VisualModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void preDrawScene (core::visual::VisualParams *vp) override;  Called before rendering the scene. More...;  ; bool drawScene (core::visual::VisualParams *vp) override;  Called instead of rendering the scene. More...;  ; void postDrawScene (core::visual::VisualParams *vp) override;  Called after rendering the scene. More...;  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ;  Public Member Functions inherited from sofa::core::visual::VisualManager;  SOFA_CLASS (VisualManager, VisualModel);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherit",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_post_process_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_post_process_manager.html
Deployability,update,updateVisual,"d before rendering the scene. More...;  ; bool drawScene (core::visual::VisualParams *vp) override;  Called instead of rendering the scene. More...;  ; void postDrawScene (core::visual::VisualParams *vp) override;  Called after rendering the scene. More...;  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ;  Public Member Functions inherited from sofa::core::visual::VisualManager;  SOFA_CLASS (VisualManager, VisualModel);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_post_process_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_post_process_manager.html
Integrability,message,messages,"Member Functions |; List of all members . sofa::gl::component::shader::PostProcessManager Class Reference . #include <PostProcessManager.h>. Inheritance diagram for sofa::gl::component::shader::PostProcessManager:. [legend]. Public Attributes; sofa::core::objectmodel::DataFileName vertFilename;  Files where vertex shader is defined. More...;  ; sofa::core::objectmodel::DataFileName fragFilename;  Files where fragment shader is defined. More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (PostProcessManager, core::visual::VisualModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void preDrawScene (core::visua",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_post_process_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_post_process_manager.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::component::shader::PostProcessManager Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gl::component::shader::PostProcessManager Class Reference . #include <PostProcessManager.h>. Inheritance diagram for sofa::gl::component::shader::PostProcessManager:. [legend]. Public Attributes; sofa::core::objectmodel::DataFileName vertFilename;  Files where vertex shader is defined. More...;  ; sofa::core::objectmodel::DataFileName fragFilename;  Files where fragment shader is defined. More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (PostProcessManager, core::visual::VisualModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void re",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_post_process_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_post_process_manager.html
Performance,load,loader," ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_post_process_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_post_process_manager.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_post_process_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_post_process_manager.html
Usability,clear,clearVisual,"...;  ; void postDrawScene (core::visual::VisualParams *vp) override;  Called after rendering the scene. More...;  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ;  Public Member Functions inherited from sofa::core::visual::VisualManager;  SOFA_CLASS (VisualManager, VisualModel);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_post_process_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_post_process_manager.html
Deployability,update,updateInternal,"vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(SpotLight, PositionalLight)sofa::gl::component::shader::SpotLight; sofa::gl::component::shader::PositionalLight::SOFA_CLASS(PositionalLight, Light)sofa::gl::component::shader::PositionalLight; sofa::gl::component::shader::Light::SOFA_CLASS(Light, core::visual::VisualModel)sofa::gl::component::shader::Light; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SpotLight()sofa::gl::component::shader::SpotLight; SPOTLIGHT enum valuesofa::gl::component::shader::Light; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~Light() overridesofa::gl::component::shader::Lightprotected; ~PositionalLight() overridesofa::gl::component::shader::PositionalLight; ~SpotLight() overridesofa::gl::component::shader::SpotLight; ~VisualModel() overridesofa::core::visual::VisualModelinlin",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::SpotLight Member List . This is the complete list of members for sofa::gl::component::shader::SpotLight, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; b_needUpdatesofa::gl::component::shader::Lightprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; blurDepthTexture()sofa::gl::component::shader::Lightprotected; bwdDraw(VisualParams",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light-members.html
Performance,load,loader,"erridesofa::core::visual::VisualModelvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setID(const GLint &id)sofa::gl::component::shader::Light; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setShadowTextureUnit(const unsigned short unit)sofa::gl::component::shader::Lightinlinevirtual; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(SpotLight, PositionalLight)sofa::gl::component::shader::SpotLight; sofa::gl::component::shader::PositionalLight::SOFA_CLASS(PositionalLight, Light)sofa::gl::component::shader::PositionalLight; sofa::gl::component::shader::Light::SOFA_CLASS(Light, core::visual::VisualModel)sofa::gl::component::shader::Light; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SpotLight()sofa::gl::component::shader::SpotLight; SPOTLIGHT enum valuesofa::gl::component::shader::Light; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; b_needUpdatesofa::gl::component::shader::Lightprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; blurDepthTexture()sofa::gl::component::shader::Lightprotected; bwdDraw(VisualParams",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light-members.html
Usability,clear,clearLoggedMessages,"st SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; b_needUpdatesofa::gl::component::shader::Lightprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; blurDepthTexture()sofa::gl::component::shader::Lightprotected; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeShadowMapSize()sofa::gl::component::shader::Lightprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_attenuationsofa::gl::component::shader::PositionalLight; d_colorsofa::gl::component::shader::Light; d_componentStatesofa::core::objectmodel::Base; d_cutoffsofa::gl::component::shader::SpotLight; d_directionsofa::gl::component::shader::SpotLight; d_drawSourcesofa::gl::component::shader::Light; d_enablesofa::core::visual::VisualModel; d_exponentsofa::gl::component::shader::SpotLight; d_fixedsofa::gl::component::shader::PositionalLight; d_lookatsofa::gl::component::shader::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light-members.html
Availability,down,down,"  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SpotLight, PositionalLight);  ;  SpotLight ();  ;  ~SpotLight () override;  ; void drawLight (const core::visual::VisualParams *vparams) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void drawSource (const core::visual::VisualParams *vparams) override;  Draw the light source from an external point of view. More...;  ; void preDrawShadow (core::visual::VisualParams *vp) override;  ; GLuint getDepthTexture () override;  ; GLuint getColorTexture () override;  ; type::Vec3 getDirection () override;  ; LightType getLightType () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::PositionalLight;  SOFA_CLASS (PositionalLight, Light);  ;  PositionalLight ();  ;  ~PositionalLight () override;  ; const sofa::type::Vec3 getPosition () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::Light;  SOFA_CLASS (Light, core::visual::VisualModel);  ; void setID (const GLint &id);  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  ; GLfloat getZNear ();  ; GLfloat getZFar ();  ; virtual void postDrawShadow ();  ; virtual GLuint getShadowMapSize ();  ; const GLfloat * getOpenGLProjectionMatrix ();  ; const GLfloat * getOpenGLModelViewMatrix ();  ; virtual unsigned short getShadowTextureUnit ();  ; virtual void setShadowTextureUnit (const unsigned short unit);  ; virtual float getShadowFactor ();  ; virtual float getVSML",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light.html
Deployability,update,updateVisual,"called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  ; GLfloat getZNear ();  ; GLfloat getZFar ();  ; virtual void postDrawShadow ();  ; virtual GLuint getShadowMapSize ();  ; const GLfloat * getOpenGLProjectionMatrix ();  ; const GLfloat * getOpenGLModelViewMatrix ();  ; virtual unsigned short getShadowTextureUnit ();  ; virtual void setShadowTextureUnit (const unsigned short unit);  ; virtual float getShadowFactor ();  ; virtual float getVSMLightBleeding ();  ; virtual float getVSMMinVariance ();  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light.html
Integrability,message,messages,"g;  [Shadowing] (VSM only) Light bleeding parameter More...;  ; Data< float > d_VSMMinVariance;  [Shadowing] (VSM only) Minimum variance parameter More...;  ; Data< unsigned short > d_textureUnit;  [Shadowing] Texture unit for the generated shadow texture More...;  ; Data< type::vector< float > > d_modelViewMatrix;  [Shadowing] ModelView Matrix More...;  ; Data< type::vector< float > > d_projectionMatrix;  [Shadowing] Projection Matrix More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SpotLight, PositionalLight);  ;  SpotLight ();  ;  ~SpotLight () override;  ; void drawLight (const core::visual::VisualParams *vparams) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void drawSource (const core::visual::VisualParams *vparams) override;  Draw the light source from an extern",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::component::shader::SpotLight Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::gl::component::shader::SpotLight Class Reference . #include <Light.h>. Inheritance diagram for sofa::gl::component::shader::SpotLight:. [legend]. Public Attributes; Data< sofa::type::Vec3 > d_direction;  Set the direction of the light. More...;  ; Data< float > d_cutoff;  Set the angle (cutoff) of the spot. More...;  ; Data< float > d_exponent;  Set the exponent of the spot. More...;  ; Data< bool > d_lookat;  If true, direction specify the point at which the spotlight should be pointed to. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::PositionalLight; Data< bool > d_fixed;  Fix light position from the camera. More...;  ; Data< sofa::type::Vec3 > d_position;  Set the position of the light. More...;  ; Data< float > d_attenuation;  Set the attenuation of the light. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::Light; Data< sofa::type::RGBAColor > d_color;  Set the color of the light. (default=[1.0,1.0,1.0,1.0]) More...;  ; Data< GLuint > d_shadowTextureSize;  [Shadowing] Set size for shadow texture More...;  ; Data< bool > d_drawSource;  Draw Light Source. More...;  ; Data< float > d_zNear;  [Shadowing] Light's ZNear More...;  ; Data< float > d_zFar;  [Shadowing] Light's ZFar More...;  ; Data< bool > d_shadowsEnabled;  [Shadowing] Enable Shadow from this light More...;  ; Data< bool > d_softShadows;  [Shadowing] Turn on Soft Shadow from this light More...;  ; Data< float > d_shadowFactor;  [Shadowing] Shadow Factor (decrease/increase darkness) More...;  ; Data< float > d_VSMLightBleeding;  [Shadowing] (VSM only) Light bleeding parameter More...;  ; Data< float > d_VSMMinVariance;  [Shadowing] (VSM only) Minimum variance parameter More...;  ; Data< unsigned short > d_textureUnit;  [Shadowing] Text",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light.html
Performance,load,loader," ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light.html
Usability,clear,clearVisual,"  ; GLfloat getZNear ();  ; GLfloat getZFar ();  ; virtual void postDrawShadow ();  ; virtual GLuint getShadowMapSize ();  ; const GLfloat * getOpenGLProjectionMatrix ();  ; const GLfloat * getOpenGLModelViewMatrix ();  ; virtual unsigned short getShadowTextureUnit ();  ; virtual void setShadowTextureUnit (const unsigned short unit);  ; virtual float getShadowFactor ();  ; virtual float getVSMLightBleeding ();  ; virtual float getVSMMinVariance ();  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light.html
Deployability,update,updateInternal,"unter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(VisualManagerPass, core::visual::VisualManager)sofa::gl::component::shader::VisualManagerPass; sofa::core::visual::VisualManager::SOFA_CLASS(VisualManager, VisualModel)sofa::core::visual::VisualManager; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualManagerPass()sofa::gl::component::shader::VisualManagerPass; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~VisualManager() overridesofa::core::visual::VisualManagerinlineprotected; ~VisualManagerPass() overridesofa::gl::component::shader::VisualManagerPass; ~VisualModel() overridesofa::core::v",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::VisualManagerPass Member List . This is the complete list of members for sofa::gl::component::shader::VisualManagerPass, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::VisualManagerPassvirtual; bwdInit()sofa::core::ob",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass-members.html
Performance,load,loader,"ta(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::visual::VisualManagervirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; renderToScreensofa::gl::component::shader::VisualManagerPass; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(VisualManagerPass, core::visual::VisualManager)sofa::gl::component::shader::VisualManagerPass; sofa::core::visual::VisualManager::SOFA_CLASS(VisualManager, VisualModel)sofa::core::visual::VisualManager; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finals",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::VisualManagerPassvirtual; bwdInit()sofa::core::ob",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass-members.html
Usability,clear,clearLoggedMessages,"::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::VisualManagerPassvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkMultipass(sofa::core::objectmodel::BaseContext *con)sofa::gl::component::shader::VisualManagerPassprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::VisualManagerPassvirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::VisualManagerPassvirtual; drawScene(core::visual::VisualParams *vp) overridesofa::gl::component::shader::VisualManagerPassvirtual; dr",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass-members.html
Availability,down,down,"ceFilePos {-1};  . Protected Attributes; bool multiPassEnabled;  ; std::unique_ptr< sofa::gl::FrameBufferObject > fbo;  ; bool prerendered;  ; GLint passWidth;  ; GLint passHeight;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (VisualManagerPass, core::visual::VisualManager);  ;  VisualManagerPass ();  ;  ~VisualManagerPass () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void preDrawScene (core::visual::VisualParams *vp) override;  Called before rendering the scene. More...;  ; bool drawScene (core::visual::VisualParams *vp) override;  Called instead of rendering the scene. More...;  ; void postDrawScene (core::visual::VisualParams *vp) override;  Called after rendering the scene. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void handleEvent (sofa::core::objectmodel::Event *) override;  Handl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass.html
Deployability,update,updateVisual,"d bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void handleEvent (sofa::core::objectmodel::Event *) override;  Handle an event. More...;  ; virtual bool isPrerendered ();  ; virtual sofa::gl::FrameBufferObject & getFBO ();  ; bool hasFilledFbo ();  ; std::string getOutputName ();  ;  Public Member Functions inherited from sofa::core::visual::VisualManager;  SOFA_CLASS (VisualManager, VisualModel);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass.html
Integrability,message,messages,"ass:. [legend]; Detailed Description; Render pass element: render the relevant tagged objects in a FBO. . Public Attributes; Data< float > factor;  set the resolution factor for the output pass. default value:1.0 More...;  ; Data< bool > renderToScreen;  if true, this pass will be displayed on screen (only one renderPass in the scene must be defined as renderToScreen) More...;  ; Data< std::string > outputName;  name the output texture More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; bool multiPassEnabled;  ; std::unique_ptr< sofa::gl::FrameBufferObject > fbo;  ; bool prerendered;  ; GLint passWidth;  ; GLint passHeight;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Att",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass.html
Modifiability,inherit,inherited,"component::shader::VisualManagerPass Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gl::component::shader::VisualManagerPass Class Reference . #include <VisualManagerPass.h>; Render pass element: render the relevant tagged objects in a FBO. ; More... Inheritance diagram for sofa::gl::component::shader::VisualManagerPass:. [legend]; Detailed Description; Render pass element: render the relevant tagged objects in a FBO. . Public Attributes; Data< float > factor;  set the resolution factor for the output pass. default value:1.0 More...;  ; Data< bool > renderToScreen;  if true, this pass will be displayed on screen (only one renderPass in the scene must be defined as renderToScreen) More...;  ; Data< std::string > outputName;  name the output texture More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceF",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass.html
Performance,load,loader," ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass.html
Usability,clear,clearVisual,"::core::objectmodel::Event *) override;  Handle an event. More...;  ; virtual bool isPrerendered ();  ; virtual sofa::gl::FrameBufferObject & getFBO ();  ; bool hasFilledFbo ();  ; std::string getOutputName ();  ;  Public Member Functions inherited from sofa::core::visual::VisualManager;  SOFA_CLASS (VisualManager, VisualModel);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass.html
Deployability,update,updateInternal," BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(VisualManagerSecondaryPass, VisualManagerPass)sofa::gl::component::shader::VisualManagerSecondaryPass; sofa::gl::component::shader::VisualManagerPass::SOFA_CLASS(VisualManagerPass, core::visual::VisualManager)sofa::gl::component::shader::VisualManagerPass; sofa::core::visual::VisualManager::SOFA_CLASS(VisualManager, VisualModel)sofa::core::visual::VisualManager; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; traceFullScreenQuad()sofa::gl::component::shader::VisualManagerSecondaryPassprotectedvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; unbindInput()sofa::gl::component::shader::VisualManagerSecondaryPass; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualManagerPass()sofa::gl::component::shader::VisualManagerPass; VisualManagerSecondaryPass()sofa::gl::component::shader::VisualManagerSecondaryPassprotected; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~VisualManager() overridesofa::core::visual::VisualManagerinlineprotected; ~VisualManagerPass(",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::VisualManagerSecondaryPass Member List . This is the complete list of members for sofa::gl::component::shader::VisualManagerSecondaryPass, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bindInput(core::visual::VisualParams *)sofa::gl::component::shader::VisualManagerSecondaryPass; bwdDraw(co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass-members.html
Performance,load,loader,"ta(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::visual::VisualManagervirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; renderToScreensofa::gl::component::shader::VisualManagerPass; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(VisualManagerSecondaryPass, VisualManagerPass)sofa::gl::component::shader::VisualManagerSecondaryPass; sofa::gl::component::shader::VisualManagerPass::SOFA_CLASS(VisualManagerPass, core::visual::VisualManager)sofa::gl::component::shader::VisualManagerPass; sofa::core::visual::VisualManager::SOFA_CLASS(VisualManager, VisualModel)sofa::core::visual::VisualManager; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; traceFullScreenQuad()sofa::gl::component::shader::VisualManagerSecondaryPassprotectedvirtual; trackInternalData(const BaseData &data)s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bindInput(core::visual::VisualParams *)sofa::gl::component::shader::VisualManagerSecondaryPass; bwdDraw(co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass-members.html
Usability,clear,clearLoggedMessages,")sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bindInput(core::visual::VisualParams *)sofa::gl::component::shader::VisualManagerSecondaryPass; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::VisualManagerPassvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkMultipass(sofa::core::objectmodel::BaseContext *con)sofa::gl::component::shader::VisualManagerPassprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::VisualManagerSecondaryPassvirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::VisualManagerPassvirtual; drawScene(core::visual::VisualParams *vp) overridesofa::gl::component::shader::VisualManagerSecond",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass-members.html
Availability,down,down,"ttributes inherited from sofa::gl::component::shader::VisualManagerPass; bool multiPassEnabled;  ; std::unique_ptr< sofa::gl::FrameBufferObject > fbo;  ; bool prerendered;  ; GLint passWidth;  ; GLint passHeight;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (VisualManagerSecondaryPass, VisualManagerPass);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void preDrawScene (core::visual::VisualParams *vp) override;  Called before rendering the scene. More...;  ; bool drawScene (core::visual::VisualParams *vp) override;  Called instead of rendering the scene. More...;  ; void bindInput (core::visual::VisualParams *);  ; void unbindInput ();  ; sofa::gl::FrameBufferObject & getFBO () override;  ; const sofa::core::objectmodel::TagSet & getOutputTags ();  ;  Public Member Functions inherited from sofa::gl::component::shader::VisualManagerPass;  SOFA_CLASS (VisualManagerPass, core::visual::VisualManager);  ;  VisualManagerPass ();  ;  ~VisualManagerPass () override;  ; void postDrawScene (core::visual::VisualParams *vp) override;  Called after rendering the scene. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass.html
Deployability,update,updateVisual,"in the current branch are displayed. More...;  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void handleEvent (sofa::core::objectmodel::Event *) override;  Handle an event. More...;  ; virtual bool isPrerendered ();  ; bool hasFilledFbo ();  ; std::string getOutputName ();  ;  Public Member Functions inherited from sofa::core::visual::VisualManager;  SOFA_CLASS (VisualManager, VisualModel);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass.html
Integrability,message,messages,"objectmodel::DataFileName fragFilename;  ;  Public Attributes inherited from sofa::gl::component::shader::VisualManagerPass; Data< float > factor;  set the resolution factor for the output pass. default value:1.0 More...;  ; Data< bool > renderToScreen;  if true, this pass will be displayed on screen (only one renderPass in the scene must be defined as renderToScreen) More...;  ; Data< std::string > outputName;  name the output texture More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; OglShader::SPtr m_shaderPostproc;  ; SingleLink< VisualManagerSecondaryPass, OglShader, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_shader;  ;  Protected Attributes inherited from sofa::gl::component::shader::VisualManagerPass; bool multiPassEnabled;  ; std::unique_ptr< sofa::gl::FrameBufferObject > fbo;  ; bool prerendered;  ; GLint passWidth;  ; GLint passHeight;  ;  Protected Attributes inherit",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass.html
Modifiability,inherit,inherited,"nagerSecondaryPass Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gl::component::shader::VisualManagerSecondaryPass Class Reference . #include <VisualManagerSecondaryPass.h>; Render pass element: render the relevant tagged objects in a FBO. ; More... Inheritance diagram for sofa::gl::component::shader::VisualManagerSecondaryPass:. [legend]; Detailed Description; Render pass element: render the relevant tagged objects in a FBO. . Public Attributes; Data< sofa::core::objectmodel::TagSet > input_tags;  list of input passes used as source textures More...;  ; Data< sofa::core::objectmodel::TagSet > output_tags;  output reference tag (use it if the resulting fbo is used as a source for another secondary pass) More...;  ; sofa::core::objectmodel::DataFileName fragFilename;  ;  Public Attributes inherited from sofa::gl::component::shader::VisualManagerPass; Data< float > factor;  set the resolution factor for the output pass. default value:1.0 More...;  ; Data< bool > renderToScreen;  if true, this pass will be displayed on screen (only one renderPass in the scene must be defined as renderToScreen) More...;  ; Data< std::string > outputName;  name the output texture More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass.html
Performance,load,loader," ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass.html
Usability,clear,clearVisual,"ch are displayed. More...;  ; void handleEvent (sofa::core::objectmodel::Event *) override;  Handle an event. More...;  ; virtual bool isPrerendered ();  ; bool hasFilledFbo ();  ; std::string getOutputName ();  ;  Public Member Functions inherited from sofa::core::visual::VisualManager;  SOFA_CLASS (VisualManager, VisualModel);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::component::shader::VisualOITDrawVisitor Member List . This is the complete list of members for sofa::gl::component::shader::VisualOITDrawVisitor, including all inherited members. addTag(Tag t)sofa::simulation::Visitorinline; begin(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; begin(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; bwdVisualModel(simulation::Node *node, core::visual::VisualModel *vm)sofa::simulation::VisualDrawVisitorvirtual; canAccessSleepingNodesofa::simulation::Visitor; childOrderReversed(simulation::Node *)sofa::simulation::Visitorinlinevirtual; ctime_t typedefsofa::simulation::Visitor; debug_write_state_after(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; debug_write_state_before(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; end(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; end(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; execParams() constsofa::simulation::Visitorinline; execute(sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false)sofa::simulation::Visitorvirtual; for_each(Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(VisitorType *visitor, VContext *c",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_o_i_t_draw_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_o_i_t_draw_visitor-members.html
Testability,test,testTags,"Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processObject(simulation::Node *node, core::objectmodel::BaseObject *o) overridesofa::simulation::VisualDrawVisitorvirtual; processVisualModel(simulation::Node *node, core::visual::VisualModel *vm) overridesofa::gl::component::shader::VisualOITDrawVisitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; shadersofa::gl::component::shader::VisualOITDrawVisitor; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat) overridesofa::simulation::VisualVisitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; VisualDrawVisitor(core::visual::VisualParams *params)sofa::simulation::VisualDrawVisitorinline; VisualOITDrawVisitor(core::visual::VisualParams *params, GLSLShader *oitShader)sofa::gl::component::shader::VisualOITDrawVisitorinline; VisualVisitor(core::visual::VisualParams *params)sofa::simulation::VisualVisitorinline; vparamssofa::simulation::VisualVisitorprotected; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_o_i_t_draw_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_o_i_t_draw_visitor-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::component::shader::VisualOITDrawVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::gl::component::shader::VisualOITDrawVisitor Class Reference . Inheritance diagram for sofa::gl::component::shader::VisualOITDrawVisitor:. [legend]. Public Attributes; GLSLShader * shader;  ;  Public Attributes inherited from sofa::simulation::VisualDrawVisitor; bool hasShader;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  VisualOITDrawVisitor (core::visual::VisualParams *params, GLSLShader *oitShader);  ; void processVisualModel (simulation::Node *node, core::visual::VisualModel *vm) override;  ;  Public Member Functions inherited from sofa::simulation::VisualDrawVisitor;  VisualDrawVisitor (core::visual::VisualParams *params);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (simulation::Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual void fwdVisualModel (simulation::Node *node, core::visual::VisualModel *vm);  ; void processObject (simulation::Node *node, core::objectmodel::BaseObject *o) override;  ; virtual void bwdVisualModel (simulation::Node *node, core::visual::VisualModel *vm);  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::VisualVisitor;  VisualVisitor (core::visual::VisualParams *params);  ; const char * getCategoryName () const override;  ; bool treeTraversal (TreeTraversalRepetition &repeat) override;  visual visitor must be executed ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_o_i_t_draw_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_o_i_t_draw_visitor.html
Security,access,access,"﻿. SOFA API: sofa::gl::component::shader::VisualOITDrawVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::gl::component::shader::VisualOITDrawVisitor Class Reference . Inheritance diagram for sofa::gl::component::shader::VisualOITDrawVisitor:. [legend]. Public Attributes; GLSLShader * shader;  ;  Public Attributes inherited from sofa::simulation::VisualDrawVisitor; bool hasShader;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  VisualOITDrawVisitor (core::visual::VisualParams *params, GLSLShader *oitShader);  ; void processVisualModel (simulation::Node *node, core::visual::VisualModel *vm) override;  ;  Public Member Functions inherited from sofa::simulation::VisualDrawVisitor;  VisualDrawVisitor (core::visual::VisualParams *params);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (simulation::Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual void fwdVisualModel (simulation::Node *node, core::visual::VisualModel *vm);  ; void processObject (simulation::Node *node, core::objectmodel::BaseObject *o) override;  ; virtual void bwdVisualModel (simulation::Node *node, core::visual::VisualModel *vm);  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::VisualVisitor;  VisualVisitor (core::visual::VisualParams *params);  ; const char * getCategoryName () const override;  ; bool treeTraversal (TreeTraversalRepetition &repeat) override;  visual visitor must be executed ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_o_i_t_draw_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_o_i_t_draw_visitor.html
Testability,test,testTags,"mulation::Node *node, core::objectmodel::BaseObject *o) override;  ; virtual void bwdVisualModel (simulation::Node *node, core::visual::VisualModel *vm);  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::VisualVisitor;  VisualVisitor (core::visual::VisualParams *params);  ; const char * getCategoryName () const override;  ; bool treeTraversal (TreeTraversalRepetition &repeat) override;  visual visitor must be executed as a tree, such as forward and backward orders are coherent More...;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_o_i_t_draw_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_o_i_t_draw_visitor.html
Deployability,update,update,"onst type::Vec3 &center, const double orient[4][4], const type::Vec3 &length, const type::Vec4f &colorX=type::Vec4f(1, 0, 0, 1), const type::Vec4f &colorY=type::Vec4f(0, 1, 0, 1), const type::Vec4f &colorZ=type::Vec4f(0, 0, 1, 1))=deletesofa::gl::Axisstatic; draw(const double *mat, const type::Vec3 &length, const type::Vec4f &colorX=type::Vec4f(1, 0, 0, 1), const type::Vec4f &colorY=type::Vec4f(0, 1, 0, 1), const type::Vec4f &colorZ=type::Vec4f(0, 0, 1, 1))=deletesofa::gl::Axis; draw(const type::Vec3 &center, const Quaternion &orient, SReal length=1.0_sreal, const type::Vec4f &colorX=type::Vec4f(1, 0, 0, 1), const type::Vec4f &colorY=type::Vec4f(0, 1, 0, 1), const type::Vec4f &colorZ=type::Vec4f(0, 0, 1, 1))=deletesofa::gl::Axisstatic; draw(const type::Vec3 &center, const double orient[4][4], SReal length=1.0_sreal, const type::Vec4f &colorX=type::Vec4f(1, 0, 0, 1), const type::Vec4f &colorY=type::Vec4f(0, 1, 0, 1), const type::Vec4f &colorZ=type::Vec4f(0, 0, 1, 1))=deletesofa::gl::Axisstatic; draw(const double *mat, SReal length=1.0_sreal, const type::Vec4f &colorX=type::Vec4f(1, 0, 0, 1), const type::Vec4f &colorY=type::Vec4f(0, 1, 0, 1), const type::Vec4f &colorZ=type::Vec4f(0, 0, 1, 1))=deletesofa::gl::Axisstatic; draw(const type::Vec3 &center, const type::Vec3 &ext, const double &radius)sofa::gl::Axisstatic; draw(const type::Vec3 &center, const type::Vec3 &ext, const double &r1, const double &r2)sofa::gl::Axisstatic; Quaternion typedefsofa::gl::Axis; SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER(Vector3, sofa::type::Vec3)sofa::gl::Axis; SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER(Vec4f, sofa::type::Vec4f)sofa::gl::Axis; SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER(Vec3d, sofa::type::Vec3d)sofa::gl::Axis; update(const type::Vec3 &center, const Quaternion &orient=Quaternion())sofa::gl::Axis; update(const type::Vec3 &center, const double orient[4][4])sofa::gl::Axis; update(const double *mat)sofa::gl::Axis; ~Axis()sofa::gl::Axis. Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1_axis-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_axis-members.html
Energy Efficiency,green,green,"Quaternion &orient, const type::Vec3 &length)sofa::gl::Axis; Axis(const type::Vec3 &center, const double orient[4][4], const type::Vec3 &length)sofa::gl::Axis; Axis(const double *mat, const type::Vec3 &length)sofa::gl::Axis; Axis(const type::Vec3 &center, const Quaternion &orient, SReal length=1.0_sreal)sofa::gl::Axis; Axis(const type::Vec3 &center, const double orient[4][4], SReal length=1.0_sreal)sofa::gl::Axis; Axis(const double *mat, SReal length=1.0_sreal)sofa::gl::Axis; clear()sofa::gl::Axisinlinestatic; draw(const type::RGBAColor &colorX=type::RGBAColor::red(), const type::RGBAColor &colorY=type::RGBAColor::green(), const type::RGBAColor &colorZ=type::RGBAColor::red())sofa::gl::Axis; draw(const type::Vec3 &center, const Quaternion &orient, const type::Vec3 &length, const type::RGBAColor &colorX=type::RGBAColor::red(), const type::RGBAColor &colorY=type::RGBAColor::green(), const type::RGBAColor &colorZ=type::RGBAColor::red())sofa::gl::Axisstatic; draw(const type::Vec3 &center, const double orient[4][4], const type::Vec3 &length, const type::RGBAColor &colorX=type::RGBAColor::red(), const type::RGBAColor &colorY=type::RGBAColor::green(), const type::RGBAColor &colorZ=type::RGBAColor::red())sofa::gl::Axisstatic; draw(const double *mat, const type::Vec3 &length, const type::RGBAColor &colorX=type::RGBAColor::red(), const type::RGBAColor &colorY=type::RGBAColor::green(), const type::RGBAColor &colorZ=type::RGBAColor::red())sofa::gl::Axisstatic; draw(const type::Vec3 &center, const Quaternion &orient, SReal length=1.0_sreal, const type::RGBAColor &colorX=type::RGBAColor::red(), const type::RGBAColor &colorY=type::RGBAColor::green(), const type::RGBAColor &colorZ=type::RGBAColor::red())sofa::gl::Axisstatic; draw(const type::Vec3 &center, const double orient[4][4], SReal length=1.0_sreal, const type::RGBAColor &colorX=type::RGBAColor::red(), const type::RGBAColor &colorY=type::RGBAColor::green(), const type::RGBAColor &colorZ=type::RGBAColor::red())sofa::gl::Axisstat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1_axis-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_axis-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::Axis Member List . This is the complete list of members for sofa::gl::Axis, including all inherited members. Axis(SReal len=1.0_sreal)sofa::gl::Axis; Axis(const type::Vec3 &len)sofa::gl::Axis; Axis(const type::Vec3 &center, const Quaternion &orient, const type::Vec3 &length)sofa::gl::Axis; Axis(const type::Vec3 &center, const double orient[4][4], const type::Vec3 &length)sofa::gl::Axis; Axis(const double *mat, const type::Vec3 &length)sofa::gl::Axis; Axis(const type::Vec3 &center, const Quaternion &orient, SReal length=1.0_sreal)sofa::gl::Axis; Axis(const type::Vec3 &center, const double orient[4][4], SReal length=1.0_sreal)sofa::gl::Axis; Axis(const double *mat, SReal length=1.0_sreal)sofa::gl::Axis; clear()sofa::gl::Axisinlinestatic; draw(const type::RGBAColor &colorX=type::RGBAColor::red(), const type::RGBAColor &colorY=type::RGBAColor::green(), const type::RGBAColor &colorZ=type::RGBAColor::red())sofa::gl::Axis; draw(const type::Vec3 &center, const Quaternion &orient, const type::Vec3 &length, const type::RGBAColor &colorX=type::RGBAColor::red(), const type::RGBAColor &colorY=type::RGBAColor::green(), const type::RGBAColor &colorZ=type::RGBAColor::red())sofa::gl::Axisstatic; draw(const type::Vec3 &center, const double orient[4][4], const type::Vec3 &length, const type::RGBAColor &colorX=type::RGBAColor::red(), const type::RGBAColor &colorY=type::RGBAColor::green(), const type::RGBAColor &colorZ=type::RGBAColor::red())sofa::gl::Axisstatic; draw(const double *mat, const type::Vec3 &length, const type::RGBAColor &colorX=type::RGBAColor::red(), const type::RGBAColor &colorY=type::RGBAColor::green(), const type::RGBAColor &colorZ=type::RGBAColor::red())sofa::gl::Axisstatic; draw(const type::Vec3 &center, const Quaternion &orient, SReal length=1.0_sreal, const type::RGBAColor &colorX=type::RGBAColor::red(), const type::RGBAColor &colorY=type::RGBAColor::green()",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1_axis-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_axis-members.html
Usability,clear,clear,"Quaternion &orient, const type::Vec3 &length)sofa::gl::Axis; Axis(const type::Vec3 &center, const double orient[4][4], const type::Vec3 &length)sofa::gl::Axis; Axis(const double *mat, const type::Vec3 &length)sofa::gl::Axis; Axis(const type::Vec3 &center, const Quaternion &orient, SReal length=1.0_sreal)sofa::gl::Axis; Axis(const type::Vec3 &center, const double orient[4][4], SReal length=1.0_sreal)sofa::gl::Axis; Axis(const double *mat, SReal length=1.0_sreal)sofa::gl::Axis; clear()sofa::gl::Axisinlinestatic; draw(const type::RGBAColor &colorX=type::RGBAColor::red(), const type::RGBAColor &colorY=type::RGBAColor::green(), const type::RGBAColor &colorZ=type::RGBAColor::red())sofa::gl::Axis; draw(const type::Vec3 &center, const Quaternion &orient, const type::Vec3 &length, const type::RGBAColor &colorX=type::RGBAColor::red(), const type::RGBAColor &colorY=type::RGBAColor::green(), const type::RGBAColor &colorZ=type::RGBAColor::red())sofa::gl::Axisstatic; draw(const type::Vec3 &center, const double orient[4][4], const type::Vec3 &length, const type::RGBAColor &colorX=type::RGBAColor::red(), const type::RGBAColor &colorY=type::RGBAColor::green(), const type::RGBAColor &colorZ=type::RGBAColor::red())sofa::gl::Axisstatic; draw(const double *mat, const type::Vec3 &length, const type::RGBAColor &colorX=type::RGBAColor::red(), const type::RGBAColor &colorY=type::RGBAColor::green(), const type::RGBAColor &colorZ=type::RGBAColor::red())sofa::gl::Axisstatic; draw(const type::Vec3 &center, const Quaternion &orient, SReal length=1.0_sreal, const type::RGBAColor &colorX=type::RGBAColor::red(), const type::RGBAColor &colorY=type::RGBAColor::green(), const type::RGBAColor &colorZ=type::RGBAColor::red())sofa::gl::Axisstatic; draw(const type::Vec3 &center, const double orient[4][4], SReal length=1.0_sreal, const type::RGBAColor &colorX=type::RGBAColor::red(), const type::RGBAColor &colorY=type::RGBAColor::green(), const type::RGBAColor &colorZ=type::RGBAColor::red())sofa::gl::Axisstat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1_axis-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_axis-members.html
Deployability,update,update,"fa::type::Vec4f);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vec3d, sofa::type::Vec3d);  ;  Axis (SReal len=1.0_sreal);  ;  Axis (const type::Vec3 &len);  ;  Axis (const type::Vec3 &center, const Quaternion &orient, const type::Vec3 &length);  ;  Axis (const type::Vec3 &center, const double orient[4][4], const type::Vec3 &length);  ;  Axis (const double *mat, const type::Vec3 &length);  ;  Axis (const type::Vec3 &center, const Quaternion &orient, SReal length=1.0_sreal);  ;  Axis (const type::Vec3 &center, const double orient[4][4], SReal length=1.0_sreal);  ;  Axis (const double *mat, SReal length=1.0_sreal);  ;  ~Axis ();  ; void update (const type::Vec3 &center, const Quaternion &orient=Quaternion());  ; void update (const type::Vec3 &center, const double orient[4][4]);  ; void update (const double *mat);  ; void draw (const type::RGBAColor &colorX=type::RGBAColor::red(), const type::RGBAColor &colorY=type::RGBAColor::green(), const type::RGBAColor &colorZ=type::RGBAColor::red());  ; void draw (const type::Vec4f &colorX=type::Vec4f(1, 0, 0, 1), const type::Vec4f &colorY=type::Vec4f(0, 1, 0, 1), const type::Vec4f &colorZ=type::Vec4f(0, 0, 1, 1))=delete;  ; void draw (const double *mat, const type::Vec3 &length, const type::Vec4f &colorX=type::Vec4f(1, 0, 0, 1), const type::Vec4f &colorY=type::Vec4f(0, 1, 0, 1), const type::Vec4f &colorZ=type::Vec4f(0, 0, 1, 1))=delete;  . Static Public Member Functions; static void draw (const type::Vec3 &center, const Quaternion &orient, const type::Vec3 &length, const type::RGBAColor &colorX=type::RGBAColor::red(), const type::RGBAColor &colorY=type::RGBAColor::green(), const type::RGBAColor &colorZ=type::RGBAColor::red());  ; static void draw (const type::Vec3 &center, const double orient[4][4], const type::Vec3 &length, const type::RGBAColor &colorX=type::RGBAColor::red(), const type::RGBAColor &colorY=type::RGBAColor::green(), const type::RGBAColor &colorZ=type::RGBAColor::red());  ; static void draw (const double *mat, const t",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1_axis.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_axis.html
Energy Efficiency,green,green,"fa::type::Vec4f);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vec3d, sofa::type::Vec3d);  ;  Axis (SReal len=1.0_sreal);  ;  Axis (const type::Vec3 &len);  ;  Axis (const type::Vec3 &center, const Quaternion &orient, const type::Vec3 &length);  ;  Axis (const type::Vec3 &center, const double orient[4][4], const type::Vec3 &length);  ;  Axis (const double *mat, const type::Vec3 &length);  ;  Axis (const type::Vec3 &center, const Quaternion &orient, SReal length=1.0_sreal);  ;  Axis (const type::Vec3 &center, const double orient[4][4], SReal length=1.0_sreal);  ;  Axis (const double *mat, SReal length=1.0_sreal);  ;  ~Axis ();  ; void update (const type::Vec3 &center, const Quaternion &orient=Quaternion());  ; void update (const type::Vec3 &center, const double orient[4][4]);  ; void update (const double *mat);  ; void draw (const type::RGBAColor &colorX=type::RGBAColor::red(), const type::RGBAColor &colorY=type::RGBAColor::green(), const type::RGBAColor &colorZ=type::RGBAColor::red());  ; void draw (const type::Vec4f &colorX=type::Vec4f(1, 0, 0, 1), const type::Vec4f &colorY=type::Vec4f(0, 1, 0, 1), const type::Vec4f &colorZ=type::Vec4f(0, 0, 1, 1))=delete;  ; void draw (const double *mat, const type::Vec3 &length, const type::Vec4f &colorX=type::Vec4f(1, 0, 0, 1), const type::Vec4f &colorY=type::Vec4f(0, 1, 0, 1), const type::Vec4f &colorZ=type::Vec4f(0, 0, 1, 1))=delete;  . Static Public Member Functions; static void draw (const type::Vec3 &center, const Quaternion &orient, const type::Vec3 &length, const type::RGBAColor &colorX=type::RGBAColor::red(), const type::RGBAColor &colorY=type::RGBAColor::green(), const type::RGBAColor &colorZ=type::RGBAColor::red());  ; static void draw (const type::Vec3 &center, const double orient[4][4], const type::Vec3 &length, const type::RGBAColor &colorX=type::RGBAColor::red(), const type::RGBAColor &colorY=type::RGBAColor::green(), const type::RGBAColor &colorZ=type::RGBAColor::red());  ; static void draw (const double *mat, const t",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1_axis.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_axis.html
Usability,clear,clear,"::Vec3 &center, const double orient[4][4], const type::Vec3 &length, const type::Vec4f &colorX=type::Vec4f(1, 0, 0, 1), const type::Vec4f &colorY=type::Vec4f(0, 1, 0, 1), const type::Vec4f &colorZ=type::Vec4f(0, 0, 1, 1))=delete;  ; static void draw (const type::Vec3 &center, const Quaternion &orient, SReal length=1.0_sreal, const type::Vec4f &colorX=type::Vec4f(1, 0, 0, 1), const type::Vec4f &colorY=type::Vec4f(0, 1, 0, 1), const type::Vec4f &colorZ=type::Vec4f(0, 0, 1, 1))=delete;  ; static void draw (const type::Vec3 &center, const double orient[4][4], SReal length=1.0_sreal, const type::Vec4f &colorX=type::Vec4f(1, 0, 0, 1), const type::Vec4f &colorY=type::Vec4f(0, 1, 0, 1), const type::Vec4f &colorZ=type::Vec4f(0, 0, 1, 1))=delete;  ; static void draw (const double *mat, SReal length=1.0_sreal, const type::Vec4f &colorX=type::Vec4f(1, 0, 0, 1), const type::Vec4f &colorY=type::Vec4f(0, 1, 0, 1), const type::Vec4f &colorZ=type::Vec4f(0, 0, 1, 1))=delete;  ; static void draw (const type::Vec3 &center, const type::Vec3 &ext, const double &radius);  ; static void draw (const type::Vec3 &center, const type::Vec3 &ext, const double &r1, const double &r2);  ; static void clear ();  . Constructor details. ◆ Axis() [1/8]. sofa::gl::Axis::Axis ; (; SReal ; len = 1.0_sreal). ◆ Axis() [2/8]. sofa::gl::Axis::Axis ; (; const type::Vec3 & ; len). ◆ Axis() [3/8]. sofa::gl::Axis::Axis ; (; const type::Vec3 & ; center, . const Quaternion & ; orient, . const type::Vec3 & ; length . ). ◆ Axis() [4/8]. sofa::gl::Axis::Axis ; (; const type::Vec3 & ; center, . const double ; orient[4][4], . const type::Vec3 & ; length . ). ◆ Axis() [5/8]. sofa::gl::Axis::Axis ; (; const double * ; mat, . const type::Vec3 & ; length . ). ◆ Axis() [6/8]. sofa::gl::Axis::Axis ; (; const type::Vec3 & ; center, . const Quaternion & ; orient, . SReal ; length = 1.0_sreal . ). ◆ Axis() [7/8]. sofa::gl::Axis::Axis ; (; const type::Vec3 & ; center, . const double ; orient[4][4], . SReal ; length = 1.0_sreal . )",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1_axis.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_axis.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::BasicShapesGL_FakeSphere< VertexType > Member List . This is the complete list of members for sofa::gl::BasicShapesGL_FakeSphere< VertexType >, including all inherited members. BasicShapesGL_FakeSphere()sofa::gl::BasicShapesGL_FakeSphere< VertexType >; draw(const VertexType &center, const float &radius)sofa::gl::BasicShapesGL_FakeSphere< VertexType >; draw(const type::vector< VertexType > &centers, const float &radius)sofa::gl::BasicShapesGL_FakeSphere< VertexType >; draw(const type::vector< VertexType > &centers, const std::vector< float > &radii)sofa::gl::BasicShapesGL_FakeSphere< VertexType >; init()sofa::gl::BasicShapesGL_FakeSphere< VertexType >; ~BasicShapesGL_FakeSphere()sofa::gl::BasicShapesGL_FakeSphere< VertexType >virtual. Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1_basic_shapes_g_l___fake_sphere-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_basic_shapes_g_l___fake_sphere-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::BasicShapesGL_Sphere< VertexType > Member List . This is the complete list of members for sofa::gl::BasicShapesGL_Sphere< VertexType >, including all inherited members. BasicShapesGL_Sphere()sofa::gl::BasicShapesGL_Sphere< VertexType >; draw(const VertexType &center, const float &radius, const unsigned int rings=32, const unsigned int sectors=16)sofa::gl::BasicShapesGL_Sphere< VertexType >; draw(const type::vector< VertexType > &centers, const float &radius, const unsigned int rings=32, const unsigned int sectors=16)sofa::gl::BasicShapesGL_Sphere< VertexType >; draw(const type::vector< VertexType > &centers, const std::vector< float > &radius, const unsigned int rings=32, const unsigned int sectors=16)sofa::gl::BasicShapesGL_Sphere< VertexType >; init()sofa::gl::BasicShapesGL_Sphere< VertexType >inline; ~BasicShapesGL_Sphere()sofa::gl::BasicShapesGL_Sphere< VertexType >virtual. Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1_basic_shapes_g_l___sphere-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_basic_shapes_g_l___sphere-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::Capture Member List . This is the complete list of members for sofa::gl::Capture, including all inherited members. Capture()sofa::gl::Capture; countersofa::gl::Captureprotected; findFilename()sofa::gl::Capture; getCounter() constsofa::gl::Captureinline; getPrefix() constsofa::gl::Captureinline; prefixsofa::gl::Captureprotected; saveScreen(const std::string &filename, int compression_level=-1)sofa::gl::Capture; saveScreen(int compression_level=-1)sofa::gl::Capture; setCounter(int v=-1)sofa::gl::Captureinline; setPrefix(const std::string v)sofa::gl::Captureinline. Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1_capture-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_capture-members.html
Deployability,update,update,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::Cylinder Member List . This is the complete list of members for sofa::gl::Cylinder, including all inherited members. clear()sofa::gl::Cylinderinlinestatic; Cylinder(SReal len=1.0_sreal)sofa::gl::Cylinder; Cylinder(const Vec3 &len)sofa::gl::Cylinder; Cylinder(const Vec3 &center, const Quaternion &orient, const Vec3 &length)sofa::gl::Cylinder; Cylinder(const Vec3 &center, const double orient[4][4], const Vec3 &length)sofa::gl::Cylinder; Cylinder(const double *mat, const Vec3 &length)sofa::gl::Cylinder; Cylinder(const Vec3 &center, const Quaternion &orient, SReal length=1.0_sreal)sofa::gl::Cylinder; Cylinder(const Vec3 &center, const double orient[4][4], SReal length=1.0_sreal)sofa::gl::Cylinder; Cylinder(const double *mat, SReal length=1.0_sreal)sofa::gl::Cylinder; draw()sofa::gl::Cylinder; draw(const Vec3 &center, const Quaternion &orient, const Vec3 &length)sofa::gl::Cylinderstatic; draw(const Vec3 &center, const double orient[4][4], const Vec3 &length)sofa::gl::Cylinderstatic; draw(const double *mat, const Vec3 &length)sofa::gl::Cylinderstatic; draw(const Vec3 &center, const Quaternion &orient, SReal length=1.0_sreal)sofa::gl::Cylinderstatic; draw(const Vec3 &center, const double orient[4][4], SReal length=1.0_sreal)sofa::gl::Cylinderstatic; draw(const double *mat, SReal length=1.0_sreal)sofa::gl::Cylinderstatic; Quaternion typedefsofa::gl::Cylinder; SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER(Vector3, sofa::type::Vec3)sofa::gl::Cylinder; update(const Vec3 &center, const Quaternion &orient=Quaternion())sofa::gl::Cylinder; update(const Vec3 &center, const double orient[4][4])sofa::gl::Cylinder; update(const double *mat)sofa::gl::Cylinder; ~Cylinder()sofa::gl::Cylinder. Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1_cylinder-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_cylinder-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::Cylinder Member List . This is the complete list of members for sofa::gl::Cylinder, including all inherited members. clear()sofa::gl::Cylinderinlinestatic; Cylinder(SReal len=1.0_sreal)sofa::gl::Cylinder; Cylinder(const Vec3 &len)sofa::gl::Cylinder; Cylinder(const Vec3 &center, const Quaternion &orient, const Vec3 &length)sofa::gl::Cylinder; Cylinder(const Vec3 &center, const double orient[4][4], const Vec3 &length)sofa::gl::Cylinder; Cylinder(const double *mat, const Vec3 &length)sofa::gl::Cylinder; Cylinder(const Vec3 &center, const Quaternion &orient, SReal length=1.0_sreal)sofa::gl::Cylinder; Cylinder(const Vec3 &center, const double orient[4][4], SReal length=1.0_sreal)sofa::gl::Cylinder; Cylinder(const double *mat, SReal length=1.0_sreal)sofa::gl::Cylinder; draw()sofa::gl::Cylinder; draw(const Vec3 &center, const Quaternion &orient, const Vec3 &length)sofa::gl::Cylinderstatic; draw(const Vec3 &center, const double orient[4][4], const Vec3 &length)sofa::gl::Cylinderstatic; draw(const double *mat, const Vec3 &length)sofa::gl::Cylinderstatic; draw(const Vec3 &center, const Quaternion &orient, SReal length=1.0_sreal)sofa::gl::Cylinderstatic; draw(const Vec3 &center, const double orient[4][4], SReal length=1.0_sreal)sofa::gl::Cylinderstatic; draw(const double *mat, SReal length=1.0_sreal)sofa::gl::Cylinderstatic; Quaternion typedefsofa::gl::Cylinder; SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER(Vector3, sofa::type::Vec3)sofa::gl::Cylinder; update(const Vec3 &center, const Quaternion &orient=Quaternion())sofa::gl::Cylinder; update(const Vec3 &center, const double orient[4][4])sofa::gl::Cylinder; update(const double *mat)sofa::gl::Cylinder; ~Cylinder()sofa::gl::Cylinder. Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1_cylinder-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_cylinder-members.html
Usability,clear,clear,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::Cylinder Member List . This is the complete list of members for sofa::gl::Cylinder, including all inherited members. clear()sofa::gl::Cylinderinlinestatic; Cylinder(SReal len=1.0_sreal)sofa::gl::Cylinder; Cylinder(const Vec3 &len)sofa::gl::Cylinder; Cylinder(const Vec3 &center, const Quaternion &orient, const Vec3 &length)sofa::gl::Cylinder; Cylinder(const Vec3 &center, const double orient[4][4], const Vec3 &length)sofa::gl::Cylinder; Cylinder(const double *mat, const Vec3 &length)sofa::gl::Cylinder; Cylinder(const Vec3 &center, const Quaternion &orient, SReal length=1.0_sreal)sofa::gl::Cylinder; Cylinder(const Vec3 &center, const double orient[4][4], SReal length=1.0_sreal)sofa::gl::Cylinder; Cylinder(const double *mat, SReal length=1.0_sreal)sofa::gl::Cylinder; draw()sofa::gl::Cylinder; draw(const Vec3 &center, const Quaternion &orient, const Vec3 &length)sofa::gl::Cylinderstatic; draw(const Vec3 &center, const double orient[4][4], const Vec3 &length)sofa::gl::Cylinderstatic; draw(const double *mat, const Vec3 &length)sofa::gl::Cylinderstatic; draw(const Vec3 &center, const Quaternion &orient, SReal length=1.0_sreal)sofa::gl::Cylinderstatic; draw(const Vec3 &center, const double orient[4][4], SReal length=1.0_sreal)sofa::gl::Cylinderstatic; draw(const double *mat, SReal length=1.0_sreal)sofa::gl::Cylinderstatic; Quaternion typedefsofa::gl::Cylinder; SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER(Vector3, sofa::type::Vec3)sofa::gl::Cylinder; update(const Vec3 &center, const Quaternion &orient=Quaternion())sofa::gl::Cylinder; update(const Vec3 &center, const double orient[4][4])sofa::gl::Cylinder; update(const double *mat)sofa::gl::Cylinder; ~Cylinder()sofa::gl::Cylinder. Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1_cylinder-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_cylinder-members.html
Deployability,update,update,"﻿. SOFA API: sofa::gl::Cylinder Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::gl::Cylinder Class Reference . #include <Cylinder.h>. Public Member Functions;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ;  Cylinder (SReal len=1.0_sreal);  ;  Cylinder (const Vec3 &len);  ;  Cylinder (const Vec3 &center, const Quaternion &orient, const Vec3 &length);  ;  Cylinder (const Vec3 &center, const double orient[4][4], const Vec3 &length);  ;  Cylinder (const double *mat, const Vec3 &length);  ;  Cylinder (const Vec3 &center, const Quaternion &orient, SReal length=1.0_sreal);  ;  Cylinder (const Vec3 &center, const double orient[4][4], SReal length=1.0_sreal);  ;  Cylinder (const double *mat, SReal length=1.0_sreal);  ;  ~Cylinder ();  ; void update (const Vec3 &center, const Quaternion &orient=Quaternion());  ; void update (const Vec3 &center, const double orient[4][4]);  ; void update (const double *mat);  ; void draw ();  . Static Public Member Functions; static void draw (const Vec3 &center, const Quaternion &orient, const Vec3 &length);  ; static void draw (const Vec3 &center, const double orient[4][4], const Vec3 &length);  ; static void draw (const double *mat, const Vec3 &length);  ; static void draw (const Vec3 &center, const Quaternion &orient, SReal length=1.0_sreal);  ; static void draw (const Vec3 &center, const double orient[4][4], SReal length=1.0_sreal);  ; static void draw (const double *mat, SReal length=1.0_sreal);  ; static void clear ();  . Constructor details. ◆ Cylinder() [1/8]. sofa::gl::Cylinder::Cylinder ; (; SReal ; len = 1.0_sreal). ◆ Cylinder() [2/8]. sofa::gl::Cylinder::Cylinder ; (; const Vec3 & ; len). ◆ Cylinder() [3/8]. sofa::gl::Cylinder::Cylinder ; (; const Vec3 & ; center, . const Quaternion & ; orient, . const Vec3 & ; length . ). ◆ Cylinder() [4/8]. sofa::gl::Cylinder::Cylinder ; (; cons",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1_cylinder.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_cylinder.html
Usability,clear,clear,"uble *mat, const Vec3 &length);  ;  Cylinder (const Vec3 &center, const Quaternion &orient, SReal length=1.0_sreal);  ;  Cylinder (const Vec3 &center, const double orient[4][4], SReal length=1.0_sreal);  ;  Cylinder (const double *mat, SReal length=1.0_sreal);  ;  ~Cylinder ();  ; void update (const Vec3 &center, const Quaternion &orient=Quaternion());  ; void update (const Vec3 &center, const double orient[4][4]);  ; void update (const double *mat);  ; void draw ();  . Static Public Member Functions; static void draw (const Vec3 &center, const Quaternion &orient, const Vec3 &length);  ; static void draw (const Vec3 &center, const double orient[4][4], const Vec3 &length);  ; static void draw (const double *mat, const Vec3 &length);  ; static void draw (const Vec3 &center, const Quaternion &orient, SReal length=1.0_sreal);  ; static void draw (const Vec3 &center, const double orient[4][4], SReal length=1.0_sreal);  ; static void draw (const double *mat, SReal length=1.0_sreal);  ; static void clear ();  . Constructor details. ◆ Cylinder() [1/8]. sofa::gl::Cylinder::Cylinder ; (; SReal ; len = 1.0_sreal). ◆ Cylinder() [2/8]. sofa::gl::Cylinder::Cylinder ; (; const Vec3 & ; len). ◆ Cylinder() [3/8]. sofa::gl::Cylinder::Cylinder ; (; const Vec3 & ; center, . const Quaternion & ; orient, . const Vec3 & ; length . ). ◆ Cylinder() [4/8]. sofa::gl::Cylinder::Cylinder ; (; const Vec3 & ; center, . const double ; orient[4][4], . const Vec3 & ; length . ). ◆ Cylinder() [5/8]. sofa::gl::Cylinder::Cylinder ; (; const double * ; mat, . const Vec3 & ; length . ). ◆ Cylinder() [6/8]. sofa::gl::Cylinder::Cylinder ; (; const Vec3 & ; center, . const Quaternion & ; orient, . SReal ; length = 1.0_sreal . ). ◆ Cylinder() [7/8]. sofa::gl::Cylinder::Cylinder ; (; const Vec3 & ; center, . const double ; orient[4][4], . SReal ; length = 1.0_sreal . ). ◆ Cylinder() [8/8]. sofa::gl::Cylinder::Cylinder ; (; const double * ; mat, . SReal ; length = 1.0_sreal . ). ◆ ~Cylinder(). sofa::gl::Cylinde",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1_cylinder.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_cylinder.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::DrawToolGL Member List . This is the complete list of members for sofa::gl::DrawToolGL, including all inherited members. clear() overridesofa::gl::DrawToolGLvirtual; disableBlending() overridesofa::gl::DrawToolGLvirtual; disableDepthTest() overridesofa::gl::DrawToolGLvirtual; disableLighting() overridesofa::gl::DrawToolGLvirtual; disablePolygonOffset() overridesofa::gl::DrawToolGLvirtual; draw3DText(const type::Vec3 &p, float scale, const type::RGBAColor &color, const char *text) overridesofa::gl::DrawToolGLvirtual; draw3DText_Indices(const std::vector< type::Vec3 > &positions, float scale, const type::RGBAColor &color) overridesofa::gl::DrawToolGLvirtual; drawArrow(const type::Vec3 &p1, const type::Vec3 &p2, float radius, const type::RGBAColor &color, int subd=16) overridesofa::gl::DrawToolGLvirtual; drawArrow(const type::Vec3 &p1, const type::Vec3 &p2, float radius, float coneLength, const type::RGBAColor &color, int subd=16) overridesofa::gl::DrawToolGLvirtual; drawArrow(const type::Vec3 &p1, const type::Vec3 &p2, float radius, float coneLength, float coneRadius, const type::RGBAColor &color, int subd=16) overridesofa::gl::DrawToolGLvirtual; drawBoundingBox(const type::Vec3 &min, const type::Vec3 &max, float size=1.0) overridesofa::gl::DrawToolGLvirtual; drawCapsule(const type::Vec3 &p1, const type::Vec3 &p2, float radius, const type::RGBAColor &color, int subd=16) overridesofa::gl::DrawToolGLvirtual; drawCircle(float radius, float lineThickness, int resolution, const type::RGBAColor &color) overridesofa::gl::DrawToolGLvirtual; drawCone(const type::Vec3 &p1, const type::Vec3 &p2, float radius1, float radius2, const type::RGBAColor &color, int subd=16) overridesofa::gl::DrawToolGLvirtual; drawCross(const type::Vec3 &p, float length, const type::RGBAColor &color) overridesofa::gl::DrawToolGLvirtual; drawCube(const float &radius, const type::RGBAColor &color,",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1_draw_tool_g_l-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_draw_tool_g_l-members.html
Usability,clear,clear,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::DrawToolGL Member List . This is the complete list of members for sofa::gl::DrawToolGL, including all inherited members. clear() overridesofa::gl::DrawToolGLvirtual; disableBlending() overridesofa::gl::DrawToolGLvirtual; disableDepthTest() overridesofa::gl::DrawToolGLvirtual; disableLighting() overridesofa::gl::DrawToolGLvirtual; disablePolygonOffset() overridesofa::gl::DrawToolGLvirtual; draw3DText(const type::Vec3 &p, float scale, const type::RGBAColor &color, const char *text) overridesofa::gl::DrawToolGLvirtual; draw3DText_Indices(const std::vector< type::Vec3 > &positions, float scale, const type::RGBAColor &color) overridesofa::gl::DrawToolGLvirtual; drawArrow(const type::Vec3 &p1, const type::Vec3 &p2, float radius, const type::RGBAColor &color, int subd=16) overridesofa::gl::DrawToolGLvirtual; drawArrow(const type::Vec3 &p1, const type::Vec3 &p2, float radius, float coneLength, const type::RGBAColor &color, int subd=16) overridesofa::gl::DrawToolGLvirtual; drawArrow(const type::Vec3 &p1, const type::Vec3 &p2, float radius, float coneLength, float coneRadius, const type::RGBAColor &color, int subd=16) overridesofa::gl::DrawToolGLvirtual; drawBoundingBox(const type::Vec3 &min, const type::Vec3 &max, float size=1.0) overridesofa::gl::DrawToolGLvirtual; drawCapsule(const type::Vec3 &p1, const type::Vec3 &p2, float radius, const type::RGBAColor &color, int subd=16) overridesofa::gl::DrawToolGLvirtual; drawCircle(float radius, float lineThickness, int resolution, const type::RGBAColor &color) overridesofa::gl::DrawToolGLvirtual; drawCone(const type::Vec3 &p1, const type::Vec3 &p2, float radius1, float radius2, const type::RGBAColor &color, int subd=16) overridesofa::gl::DrawToolGLvirtual; drawCross(const type::Vec3 &p, float length, const type::RGBAColor &color) overridesofa::gl::DrawToolGLvirtual; drawCube(const float &radius, const type::RGBAColor &color,",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1_draw_tool_g_l-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_draw_tool_g_l-members.html
Modifiability,variab,variable,") override;  ; void drawBoundingBox (const type::Vec3 &min, const type::Vec3 &max, float size=1.0) override;  ; void draw3DText (const type::Vec3 &p, float scale, const type::RGBAColor &color, const char *text) override;  ; virtual void draw3DText_Indices (const std::vector< type::Vec3 > &positions, float scale, const type::RGBAColor &color) override;  ; void clear () override;  ; void setMaterial (const type::RGBAColor &color) override;  ; void resetMaterial (const type::RGBAColor &color) override;  ; void resetMaterial () override;  ; void pushMatrix () override;  ; void popMatrix () override;  ; void multMatrix (float *glTransform) override;  ; void scale (float s) override;  ; void translate (float x, float y, float z) override;  ; void writeOverlayText (int x, int y, unsigned fontSize, const type::RGBAColor &color, const char *text) override;  draw 2D text at position (x,y) from top-left corner More...;  ; void enablePolygonOffset (float factor, float units) override;  ; void disablePolygonOffset () override;  Remove variable depth offset for polygon drawing. More...;  ; void enableBlending () override;  ; void disableBlending () override;  ; void enableLighting () override;  ; void disableLighting () override;  ; void enableDepthTest () override;  ; void disableDepthTest () override;  ; void saveLastState () override;  ; void restoreLastState () override;  ; void readPixels (int x, int y, int w, int h, float *rgb, float *z=nullptr) override;  ; void internalDrawSpheres (const type::vector< type::Vec3 > &centers, const float &radius, const unsigned int rings, const unsigned int sectors);  ; void internalDrawSphere (const type::Vec3 &center, const float &radius, const unsigned int rings, const unsigned int sectors);  ; void setLightingEnabled (bool _isAnabled) override;  ; bool getLightEnabled ();  ; void setPolygonMode (int _mode, bool _wireframe) override;  ; int getPolygonMode ();  ; bool getWireFrameEnabled ();  ;  Public Member Functions inherited from sofa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1_draw_tool_g_l.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_draw_tool_g_l.html
Usability,clear,clear,"color) override;  ; virtual void drawHexahedra (const std::vector< type::Vec3 > &points, const type::RGBAColor &color) override;  ; virtual void drawScaledHexahedra (const std::vector< type::Vec3 > &points, const type::RGBAColor &color, const float scale) override;  ; void drawSphere (const type::Vec3 &p, float radius) override;  ; void drawSphere (const type::Vec3 &p, float radius, const type::RGBAColor &color) override;  ; void drawEllipsoid (const type::Vec3 &p, const type::Vec3 &radii) override;  ; void drawBoundingBox (const type::Vec3 &min, const type::Vec3 &max, float size=1.0) override;  ; void draw3DText (const type::Vec3 &p, float scale, const type::RGBAColor &color, const char *text) override;  ; virtual void draw3DText_Indices (const std::vector< type::Vec3 > &positions, float scale, const type::RGBAColor &color) override;  ; void clear () override;  ; void setMaterial (const type::RGBAColor &color) override;  ; void resetMaterial (const type::RGBAColor &color) override;  ; void resetMaterial () override;  ; void pushMatrix () override;  ; void popMatrix () override;  ; void multMatrix (float *glTransform) override;  ; void scale (float s) override;  ; void translate (float x, float y, float z) override;  ; void writeOverlayText (int x, int y, unsigned fontSize, const type::RGBAColor &color, const char *text) override;  draw 2D text at position (x,y) from top-left corner More...;  ; void enablePolygonOffset (float factor, float units) override;  ; void disablePolygonOffset () override;  Remove variable depth offset for polygon drawing. More...;  ; void enableBlending () override;  ; void disableBlending () override;  ; void enableLighting () override;  ; void disableLighting () override;  ; void enableDepthTest () override;  ; void disableDepthTest () override;  ; void saveLastState () override;  ; void restoreLastState () override;  ; void readPixels (int x, int y, int w, int h, float *rgb, float *z=nullptr) override;  ; void internalDrawSpheres (const ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1_draw_tool_g_l.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_draw_tool_g_l.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::FrameBufferObject Member List . This is the complete list of members for sofa::gl::FrameBufferObject, including all inherited members. checkFBO()sofa::gl::FrameBufferObject; createColorBuffer()sofa::gl::FrameBufferObject; createDepthBuffer()sofa::gl::FrameBufferObject; destroy()sofa::gl::FrameBufferObject; FrameBufferObject(bool depthTexture=false, bool enableDepth=true, bool enableColor=true, bool enableMipMap=false, GLint defaultWindowFramebuffer=getCurrentFramebufferID())sofa::gl::FrameBufferObject; FrameBufferObject(const fboParameters &FboFormat, bool depthTexture=false, bool enableDepth=true, bool enableColor=true, bool enableMipMap=false, GLint defaultWindowFramebuffer=getCurrentFramebufferID())sofa::gl::FrameBufferObject; getColorTexture()sofa::gl::FrameBufferObject; getDepthTexture()sofa::gl::FrameBufferObject; getID()sofa::gl::FrameBufferObject; init(unsigned int width, unsigned height)sofa::gl::FrameBufferObject; initColorBuffer()sofa::gl::FrameBufferObject; initDepthBuffer()sofa::gl::FrameBufferObject; reinit(unsigned int width, unsigned height, bool lDepthTexture, bool lEnableDepth, bool lEnableColor)sofa::gl::FrameBufferObject; setFormat(const fboParameters &fboParams)sofa::gl::FrameBufferObjectinline; setSize(unsigned int width, unsigned height)sofa::gl::FrameBufferObject; start()sofa::gl::FrameBufferObject; stop()sofa::gl::FrameBufferObject; ~FrameBufferObject()sofa::gl::FrameBufferObjectvirtual. Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1_frame_buffer_object-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_frame_buffer_object-members.html
Deployability,update,update,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::GlText Member List . This is the complete list of members for sofa::gl::GlText, including all inherited members. draw()sofa::gl::GlText; draw(const T &text, const type::Vec3 &position=type::Vec3(0.0, 0.0, 0.0), const double &scale=1.0)sofa::gl::GlTextstatic; GlText()sofa::gl::GlText; GlText(const std::string &text)sofa::gl::GlText; GlText(const std::string &text, const type::Vec3 &position)sofa::gl::GlText; GlText(const std::string &text, const type::Vec3 &position, const double &scale)sofa::gl::GlText; setText(const std::string &text)sofa::gl::GlText; setText(const T &text)sofa::gl::GlText; textureDraw_Indices(const type::vector< type::Vec3 > &positions, const float &scale)sofa::gl::GlTextstatic; textureDraw_Overlay(const char *text, const double scale=1.0)sofa::gl::GlTextstatic; update(const type::Vec3 &position)sofa::gl::GlText; update(const double &scale)sofa::gl::GlText; ~GlText()sofa::gl::GlText. Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1_gl_text-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_gl_text-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::GlText Member List . This is the complete list of members for sofa::gl::GlText, including all inherited members. draw()sofa::gl::GlText; draw(const T &text, const type::Vec3 &position=type::Vec3(0.0, 0.0, 0.0), const double &scale=1.0)sofa::gl::GlTextstatic; GlText()sofa::gl::GlText; GlText(const std::string &text)sofa::gl::GlText; GlText(const std::string &text, const type::Vec3 &position)sofa::gl::GlText; GlText(const std::string &text, const type::Vec3 &position, const double &scale)sofa::gl::GlText; setText(const std::string &text)sofa::gl::GlText; setText(const T &text)sofa::gl::GlText; textureDraw_Indices(const type::vector< type::Vec3 > &positions, const float &scale)sofa::gl::GlTextstatic; textureDraw_Overlay(const char *text, const double scale=1.0)sofa::gl::GlTextstatic; update(const type::Vec3 &position)sofa::gl::GlText; update(const double &scale)sofa::gl::GlText; ~GlText()sofa::gl::GlText. Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1_gl_text-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_gl_text-members.html
Deployability,update,update,"framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::gl::GlText Class Reference . #include <glText.h>; Detailed Description; This class, called GlText, allows to render text in OpenGL, always facing the camera in 2D (screen) or in 3D (world coordinates) . Public Member Functions;  GlText ();  Constructor. More...;  ;  GlText (const std::string &text);  Constructor with specified text. More...;  ;  GlText (const std::string &text, const type::Vec3 &position);  Constructor with specified text and position. More...;  ;  GlText (const std::string &text, const type::Vec3 &position, const double &scale);  Constructor with specified text, position and scale. More...;  ;  ~GlText ();  Destructor. More...;  ; void setText (const std::string &text);  Update the text to render. More...;  ; template<typename T > ; void setText (const T &text);  Update the text to render. More...;  ; void update (const type::Vec3 &position);  Update the position used to render the text. More...;  ; void update (const double &scale);  Update the scale used to render the text. More...;  ; void draw ();  Render the text at the defined position and scale. More...;  . Static Public Member Functions; template<typename T > ; static void draw (const T &text, const type::Vec3 &position=type::Vec3(0.0, 0.0, 0.0), const double &scale=1.0);  Render the text at the defined position and scale. More...;  ; static void textureDraw_Overlay (const char *text, const double scale=1.0);  ; static void textureDraw_Indices (const type::vector< type::Vec3 > &positions, const float &scale);  . Constructor details. ◆ GlText() [1/4]. sofa::gl::GlText::GlText ; (; ). Constructor. . ◆ GlText() [2/4]. sofa::gl::GlText::GlText ; (; const std::string & ; text). Constructor with specified text. . ◆ GlText() [3/4]. sofa::gl::GlText::GlText ; (; const std::string & ; text, . const type::Vec3 & ; position . ). Constructor with specified text and position. .",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1_gl_text.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_gl_text.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::GLSLFileListener Member List . This is the complete list of members for sofa::gl::GLSLFileListener, including all inherited members. fileHasChanged(const std::string &filename) overridesofa::gl::GLSLFileListenerinlinevirtual; GLSLFileListener(GLSLShader *owner)sofa::gl::GLSLFileListenerinline; m_glslshadersofa::gl::GLSLFileListener; ~FileEventListener()sofa::helper::system::FileEventListenerinlinevirtual. Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_file_listener-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_file_listener-members.html
Modifiability,inherit,inherited,﻿. SOFA API: sofa::gl::GLSLFileListener Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::gl::GLSLFileListener Class Reference . Inheritance diagram for sofa::gl::GLSLFileListener:. [legend]. Public Attributes; GLSLShader * m_glslshader;  This attribute is not owning the pointer. More...;  . Public Member Functions;  GLSLFileListener (GLSLShader *owner);  ; void fileHasChanged (const std::string &filename) override;  Inherited from FileEventListener. More...;  ;  Public Member Functions inherited from sofa::helper::system::FileEventListener; virtual ~FileEventListener ();  . Attribute details. ◆ m_glslshader. GLSLShader* sofa::gl::GLSLFileListener::m_glslshader. This attribute is not owning the pointer. . Constructor details. ◆ GLSLFileListener(). sofa::gl::GLSLFileListener::GLSLFileListener ; (; GLSLShader * ; owner). inline . Function details. ◆ fileHasChanged(). void sofa::gl::GLSLFileListener::fileHasChanged ; (; const std::string & ; filename). inlineoverridevirtual . Inherited from FileEventListener. ; Implements sofa::helper::system::FileEventListener. sofaglGLSLFileListener; Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_file_listener.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_file_listener.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::GLSLShader Member List . This is the complete list of members for sofa::gl::GLSLShader, including all inherited members. AddDefineMacro(const std::string &name, const std::string &value)sofa::gl::GLSLShader; AddHeader(const std::string &header)sofa::gl::GLSLShader; CompileShader(GLint target, const ShaderContents &shaderContent, const std::string &header)sofa::gl::GLSLShaderprotected; forceReloadShaderFromFile(const std::string &filename)sofa::gl::GLSLShader; GetActiveShaderProgram()sofa::gl::GLSLShaderstatic; GetAttributeVariable(std::string strVariable)sofa::gl::GLSLShader; GetFragmentShaderFileName() constsofa::gl::GLSLShaderinline; GetFragmentShaderID() constsofa::gl::GLSLShaderinline; GetHeader() constsofa::gl::GLSLShader; GetProgram() constsofa::gl::GLSLShaderinline; GetShaderFileName(GLint type) constsofa::gl::GLSLShader; GetShaderID(GLint type) constsofa::gl::GLSLShader; GetShaderStageName(GLint target)sofa::gl::GLSLShader; GetShaderString(GLint type) constsofa::gl::GLSLShader; GetVariable(std::string strVariable)sofa::gl::GLSLShader; GetVertexShaderFileName() constsofa::gl::GLSLShaderinline; GetVertexShaderID() constsofa::gl::GLSLShaderinline; GLSLShader()sofa::gl::GLSLShader; headersofa::gl::GLSLShaderprotected; InitGLSL()sofa::gl::GLSLShaderstatic; InitShaders()sofa::gl::GLSLShader; InitShaders(const std::string &strVertex, const std::string &strFragment)sofa::gl::GLSLShaderinline; IsReady() constsofa::gl::GLSLShaderinline; IsSet(GLint type) constsofa::gl::GLSLShader; LoadTextFile(const std::string &strFile)sofa::gl::GLSLShader; m_filelistenersofa::gl::GLSLShaderprotected; m_hProgramObjectsofa::gl::GLSLShaderprotected; m_hShaderContentssofa::gl::GLSLShaderprotected; m_hShaderssofa::gl::GLSLShaderprotected; Release()sofa::gl::GLSLShader; SetActiveShaderProgram(GLhandleARB s)sofa::gl::GLSLShaderstatic; SetFloat(GLint variable, float newValue)sofa::gl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader-members.html
Deployability,release,releases,"nt);  ; void SetVertexShaderFileName (const std::string &fileName);  ; void SetVertexShaderFromString (const std::string &string);  ; void SetFragmentShaderFileName (const std::string &fileName);  ; void SetFragmentShaderFromString (const std::string &string);  ; std::string GetShaderStageName (GLint target);  ; std::string LoadTextFile (const std::string &strFile);  This loads our text file for each shader and returns it in a string. More...;  ; void InitShaders ();  This function loads a vertex and fragment shader file. More...;  ; void forceReloadShaderFromFile (const std::string &filename);  ; void InitShaders (const std::string &strVertex, const std::string &strFragment);  This loads a vertex and fragment shader. More...;  ; GLint GetVariable (std::string strVariable);  This returns an ID for a variable in our shader. More...;  ; GLint GetAttributeVariable (std::string strVariable);  This returns an ID for an attribute variable in our shader. More...;  ; void Release ();  This releases our memory for our shader. More...;  . bool IsReady () const;  ; GLhandleARB GetProgram () const;  ; std::string GetShaderFileName (GLint type) const;  ; std::string GetShaderString (GLint type) const;  ; std::string GetHeader () const;  ; bool IsSet (GLint type) const;  ; GLhandleARB GetShaderID (GLint type) const;  ; std::string GetVertexShaderFileName () const;  ; GLhandleARB GetVertexShaderID () const;  ; std::string GetFragmentShaderFileName () const;  ; GLhandleARB GetFragmentShaderID () const;  . void SetInt (GLint variable, int newValue);  ; void SetFloat (GLint variable, float newValue);  . void SetInt2 (GLint variable, int i1, int i2);  ; void SetInt3 (GLint variable, int i1, int i2, int i3);  ; void SetInt4 (GLint variable, int i1, int i2, int i3, int i4);  ; void SetFloat2 (GLint variable, float v0, float v1);  ; void SetFloat3 (GLint variable, float v0, float v1, float v2);  ; void SetFloat4 (GLint variable, float v0, float v1, float v2, float v3);  . void SetIntVecto",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader.html
Modifiability,variab,variable,"  ; void SetShaderFileName (GLint target, const std::string &fileName);  This function loads and returns a text file for our shaders. More...;  ; void SetShaderFromString (GLint target, const std::string &shaderContent);  ; void SetVertexShaderFileName (const std::string &fileName);  ; void SetVertexShaderFromString (const std::string &string);  ; void SetFragmentShaderFileName (const std::string &fileName);  ; void SetFragmentShaderFromString (const std::string &string);  ; std::string GetShaderStageName (GLint target);  ; std::string LoadTextFile (const std::string &strFile);  This loads our text file for each shader and returns it in a string. More...;  ; void InitShaders ();  This function loads a vertex and fragment shader file. More...;  ; void forceReloadShaderFromFile (const std::string &filename);  ; void InitShaders (const std::string &strVertex, const std::string &strFragment);  This loads a vertex and fragment shader. More...;  ; GLint GetVariable (std::string strVariable);  This returns an ID for a variable in our shader. More...;  ; GLint GetAttributeVariable (std::string strVariable);  This returns an ID for an attribute variable in our shader. More...;  ; void Release ();  This releases our memory for our shader. More...;  . bool IsReady () const;  ; GLhandleARB GetProgram () const;  ; std::string GetShaderFileName (GLint type) const;  ; std::string GetShaderString (GLint type) const;  ; std::string GetHeader () const;  ; bool IsSet (GLint type) const;  ; GLhandleARB GetShaderID (GLint type) const;  ; std::string GetVertexShaderFileName () const;  ; GLhandleARB GetVertexShaderID () const;  ; std::string GetFragmentShaderFileName () const;  ; GLhandleARB GetFragmentShaderID () const;  . void SetInt (GLint variable, int newValue);  ; void SetFloat (GLint variable, float newValue);  . void SetInt2 (GLint variable, int i1, int i2);  ; void SetInt3 (GLint variable, int i1, int i2, int i3);  ; void SetInt4 (GLint variable, int i1, int i2, int i3, int i4);  ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader.html
Performance,load,loaded,"﻿. SOFA API: sofa::gl::GLSLShader Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::gl::GLSLShader Class Reference . #include <GLSLShader.h>. Classes; struct  ShaderContents;  A shader is a source code, as such it can be loaded either directly by its source or a filename (containing the source) More...;  . Protected Attributes; std::string header;  ; std::map< GLint, ShaderContents > m_hShaderContents;  ; std::map< GLint, GLhandleARB > m_hShaders;  ; GLhandleARB m_hProgramObject;  This handle stores our program information which encompasses our shader. More...;  ; std::shared_ptr< sofa::helper::system::FileEventListener > m_filelistener;  . Public Member Functions;  GLSLShader ();  ;  ~GLSLShader ();  ; void AddHeader (const std::string &header);  This builds a header before any shader contents. More...;  ; void AddDefineMacro (const std::string &name, const std::string &value);  ; void SetShaderFileName (GLint target, const std::string &fileName);  This function loads and returns a text file for our shaders. More...;  ; void SetShaderFromString (GLint target, const std::string &shaderContent);  ; void SetVertexShaderFileName (const std::string &fileName);  ; void SetVertexShaderFromString (const std::string &string);  ; void SetFragmentShaderFileName (const std::string &fileName);  ; void SetFragmentShaderFromString (const std::string &string);  ; std::string GetShaderStageName (GLint target);  ; std::string LoadTextFile (const std::string &strFile);  This loads our text file for each shader and returns it in a string. More...;  ; void InitShaders ();  This function loads a vertex and fragment shader file. More...;  ; void forceReloadShaderFromFile (const std::string &filename);  ; void InitShaders (const std::string &strVertex, const std::string &strFragment);  This loads a",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader.html
Testability,log,log," transpose, const GLfloat *value);  ; void SetMatrix3 (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);  ; void SetMatrix4 (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);  ; void SetMatrix2x3 (GLint, GLsizei, GLboolean, const GLfloat *);  ; void SetMatrix3x2 (GLint, GLsizei, GLboolean, const GLfloat *);  ; void SetMatrix2x4 (GLint, GLsizei, GLboolean, const GLfloat *);  ; void SetMatrix4x2 (GLint, GLsizei, GLboolean, const GLfloat *);  ; void SetMatrix3x4 (GLint, GLsizei, GLboolean, const GLfloat *);  ; void SetMatrix4x3 (GLint, GLsizei, GLboolean, const GLfloat *);  . void TurnOn ();  ; void TurnOff ();  . Static Public Member Functions; static bool InitGLSL ();  This is used to load all of the extensions and checks compatibility. More...;  ; static GLhandleARB GetActiveShaderProgram ();  ; static void SetActiveShaderProgram (GLhandleARB s);  . Protected Member Functions; bool CompileShader (GLint target, const ShaderContents &shaderContent, const std::string &header);  This function compiles a shader and check the log. More...;  . Attribute details. ◆ header. std::string sofa::gl::GLSLShader::header. protected . ◆ m_filelistener. std::shared_ptr<sofa::helper::system::FileEventListener> sofa::gl::GLSLShader::m_filelistener. protected . ◆ m_hProgramObject. GLhandleARB sofa::gl::GLSLShader::m_hProgramObject. protected . This handle stores our program information which encompasses our shader. . ◆ m_hShaderContents. std::map<GLint, ShaderContents> sofa::gl::GLSLShader::m_hShaderContents. protected . ◆ m_hShaders. std::map<GLint, GLhandleARB> sofa::gl::GLSLShader::m_hShaders. protected . Constructor details. ◆ GLSLShader(). sofa::gl::GLSLShader::GLSLShader ; (; ). ◆ ~GLSLShader(). sofa::gl::GLSLShader::~GLSLShader ; (; ). Function details. ◆ AddDefineMacro(). void sofa::gl::GLSLShader::AddDefineMacro ; (; const std::string & ; name, . const std::string & ; value . ). ◆ AddHeader(). void sofa::gl::GLSLShader::AddHeader",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader.html
Deployability,update,update,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::Texture Member List . This is the complete list of members for sofa::gl::Texture, including all inherited members. bind(void)sofa::gl::Texture; getId() constsofa::gl::Textureinline; getImage(void)sofa::gl::Texture; getTarget() constsofa::gl::Textureinline; init()sofa::gl::Texture; Texture()sofa::gl::Textureinline; Texture(helper::io::Image *img, bool repeat=true, bool linearInterpolation=true, bool generateMipmaps=true, bool srgbColorspace=false, float minLod=-1000, float maxLod=1000)sofa::gl::Textureinline; unbind(void)sofa::gl::Texture; update()sofa::gl::Texture; ~Texture()sofa::gl::Texture. Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1_texture-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_texture-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::Texture Member List . This is the complete list of members for sofa::gl::Texture, including all inherited members. bind(void)sofa::gl::Texture; getId() constsofa::gl::Textureinline; getImage(void)sofa::gl::Texture; getTarget() constsofa::gl::Textureinline; init()sofa::gl::Texture; Texture()sofa::gl::Textureinline; Texture(helper::io::Image *img, bool repeat=true, bool linearInterpolation=true, bool generateMipmaps=true, bool srgbColorspace=false, float minLod=-1000, float maxLod=1000)sofa::gl::Textureinline; unbind(void)sofa::gl::Texture; update()sofa::gl::Texture; ~Texture()sofa::gl::Texture. Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1_texture-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_texture-members.html
Deployability,update,update,"﻿. SOFA API: sofa::gl::Texture Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::Texture Class Reference . #include <Texture.h>. Public Member Functions;  Texture ();  ;  Texture (helper::io::Image *img, bool repeat=true, bool linearInterpolation=true, bool generateMipmaps=true, bool srgbColorspace=false, float minLod=-1000, float maxLod=1000);  ; helper::io::Image * getImage (void);  ; GLuint getTarget () const;  ; void bind (void);  ; void unbind (void);  ; void init ();  ; void update ();  ;  ~Texture ();  ; GLuint getId () const;  . Constructor details. ◆ Texture() [1/2]. sofa::gl::Texture::Texture ; (; ). inline . ◆ Texture() [2/2]. sofa::gl::Texture::Texture ; (; helper::io::Image * ; img, . bool ; repeat = true, . bool ; linearInterpolation = true, . bool ; generateMipmaps = true, . bool ; srgbColorspace = false, . float ; minLod = -1000, . float ; maxLod = 1000 . ). inline . ◆ ~Texture(). sofa::gl::Texture::~Texture ; (; void ; ). Function details. ◆ bind(). void sofa::gl::Texture::bind ; (; void ; ). ◆ getId(). GLuint sofa::gl::Texture::getId ; (; ); const. inline . ◆ getImage(). helper::io::Image * sofa::gl::Texture::getImage ; (; void ; ). ◆ getTarget(). GLuint sofa::gl::Texture::getTarget ; (; ); const. inline . ◆ init(). void sofa::gl::Texture::init ; (; void ; ). ◆ unbind(). void sofa::gl::Texture::unbind ; (; void ; ). ◆ update(). void sofa::gl::Texture::update ; (; ). sofaglTexture; Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1_texture.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_texture.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::TransformationGL Member List . This is the complete list of members for sofa::gl::TransformationGL, including all inherited members. Apply() overridesofa::gl::TransformationGLvirtual; ApplyInverse() overridesofa::gl::TransformationGLvirtual; ApplyWithCentring() overridesofa::gl::TransformationGLvirtual; InvertTransRotMatrix(SReal matrix[4][4])sofa::helper::visual::Transformationprotected; InvertTransRotMatrix(SReal sMatrix[4][4], SReal dMatrix[4][4])sofa::helper::visual::Transformationprotected; objectCentersofa::helper::visual::Transformation; operator*(Vector v) constsofa::helper::visual::Transformationinline; operator=(const Transformation &transform)sofa::helper::visual::Transformation; rotationsofa::helper::visual::Transformation; scalesofa::helper::visual::Transformation; Transformation()sofa::helper::visual::Transformation; Transformation(const Transformation &other)sofa::helper::visual::Transformation; TransformationGL()sofa::gl::TransformationGL; translationsofa::helper::visual::Transformation; ~Transformation()sofa::helper::visual::Transformationvirtual; ~TransformationGL()sofa::gl::TransformationGLvirtual. Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1_transformation_g_l-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_transformation_g_l-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gl::TransformationGL Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gl::TransformationGL Class Reference . #include <TransformationGL.h>. Inheritance diagram for sofa::gl::TransformationGL:. [legend]. Public Member Functions;  TransformationGL ();  ; virtual ~TransformationGL ();  ; void Apply () override;  ; void ApplyWithCentring () override;  ; void ApplyInverse () override;  ;  Public Member Functions inherited from sofa::helper::visual::Transformation;  Transformation ();  ; virtual ~Transformation ();  ;  Transformation (const Transformation &other);  ; Transformation & operator= (const Transformation &transform);  ; template<class Vector > ; Vector operator* (Vector v) const;  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::visual::Transformation; SReal translation [3];  ; SReal scale [3];  ; SReal rotation [4][4];  ; SReal objectCenter [3];  ;  Protected Member Functions inherited from sofa::helper::visual::Transformation; void InvertTransRotMatrix (SReal matrix[4][4]);  ; void InvertTransRotMatrix (SReal sMatrix[4][4], SReal dMatrix[4][4]);  . Constructor details. ◆ TransformationGL(). sofa::gl::TransformationGL::TransformationGL ; (; ). ◆ ~TransformationGL(). sofa::gl::TransformationGL::~TransformationGL ; (; ). virtual . Function details. ◆ Apply(). void sofa::gl::TransformationGL::Apply ; (; ). overridevirtual . Reimplemented from sofa::helper::visual::Transformation. ◆ ApplyInverse(). void sofa::gl::TransformationGL::ApplyInverse ; (; ). overridevirtual . Reimplemented from sofa::helper::visual::Transformation. ◆ ApplyWithCentring(). void sofa::gl::TransformationGL::ApplyWithCentring ; (; ). overridevirtual . Reimplemented from sofa::helper::visual::Transformation. sofaglTransformationGL; Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1_transformation_g_l.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_transformation_g_l.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::VideoRecorderFFMPEG Member List . This is the complete list of members for sofa::gl::VideoRecorderFFMPEG, including all inherited members. addFrame()sofa::gl::VideoRecorderFFMPEG; findFilename(const unsigned int bitrate, const unsigned int framerate, const std::string &extension)sofa::gl::VideoRecorderFFMPEG; finishVideo()sofa::gl::VideoRecorderFFMPEG; init(const std::string &ffmpeg_exec_filepath, const std::string &filename, int width, int height, unsigned int framerate, unsigned int bitrate, const std::string &codec="""")sofa::gl::VideoRecorderFFMPEG; m_ffmpegsofa::gl::VideoRecorderFFMPEGprotected; m_ffmpegBuffersofa::gl::VideoRecorderFFMPEGprotected; m_ffmpegBufferSizesofa::gl::VideoRecorderFFMPEGprotected; m_ffmpegExecPathsofa::gl::VideoRecorderFFMPEGprotected; m_ffmpegHeightsofa::gl::VideoRecorderFFMPEGprotected; m_ffmpegWidthsofa::gl::VideoRecorderFFMPEGprotected; m_filenamesofa::gl::VideoRecorderFFMPEGprotected; m_FrameCountsofa::gl::VideoRecorderFFMPEGprotected; m_frameratesofa::gl::VideoRecorderFFMPEGprotected; m_pixelFormatSizesofa::gl::VideoRecorderFFMPEGprotected; m_prefixsofa::gl::VideoRecorderFFMPEGprotected; m_viewportBuffersofa::gl::VideoRecorderFFMPEGprotected; m_viewportBufferSizesofa::gl::VideoRecorderFFMPEGprotected; m_viewportHeightsofa::gl::VideoRecorderFFMPEGprotected; m_viewportWidthsofa::gl::VideoRecorderFFMPEGprotected; saveVideo()sofa::gl::VideoRecorderFFMPEG; setPrefix(const std::string v)sofa::gl::VideoRecorderFFMPEGinline; VideoRecorderFFMPEG()sofa::gl::VideoRecorderFFMPEG; ~VideoRecorderFFMPEG()sofa::gl::VideoRecorderFFMPEG. Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gl_1_1_video_recorder_f_f_m_p_e_g-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_video_recorder_f_f_m_p_e_g-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::batch::BatchGUI Member List . This is the complete list of members for sofa::gui::batch::BatchGUI, including all inherited members. BaseGUI()sofa::gui::common::BaseGUIprotected; BatchGUI()sofa::gui::batch::BatchGUI; canBeDefaultGUI() const overridesofa::gui::batch::BatchGUIinlinevirtual; canExportJson(const std::string &timerOutputStr, const std::string &timerId)sofa::gui::batch::BatchGUIprotectedstatic; centerWindow()sofa::gui::common::BaseGUIinlinevirtual; closeGUI() overridesofa::gui::batch::BatchGUIvirtual; configDirectoryPathsofa::gui::common::BaseGUIprotectedstatic; configureGUI(sofa::simulation::NodeSPtr groot)sofa::gui::common::BaseGUIvirtual; CreateGUI(const char *name, sofa::simulation::NodeSPtr groot=nullptr, const char *filename=nullptr)sofa::gui::batch::BatchGUIstatic; currentSimulation() overridesofa::gui::batch::BatchGUIvirtual; DEFAULT_NUMBER_OF_ITERATIONSsofa::gui::batch::BatchGUIstatic; exportGnuplot(sofa::simulation::Node *node, std::string gnuplot_directory="""")sofa::gui::common::BaseGUI; exportJson(const std::string &timerOutputStr, int iterationNumber) constsofa::gui::batch::BatchGUIprotected; filenamesofa::gui::batch::BatchGUIprotected; getConfigDirectoryPath()sofa::gui::common::BaseGUIstatic; GetGUIName()sofa::gui::common::BaseGUIinlinestatic; GetProgramName()sofa::gui::common::BaseGUIinlinestatic; getScreenshotDirectoryPath()sofa::gui::common::BaseGUIstatic; getViewer()sofa::gui::common::BaseGUIinlinevirtual; grootsofa::gui::batch::BatchGUIprotected; hideProgressBarsofa::gui::batch::BatchGUIinlineprotectedstatic; initViewer(BaseViewer *)sofa::gui::common::BaseGUIinlinevirtual; m_dumpVisitorStreamsofa::gui::batch::BatchGUIprotected; mainLoop() overridesofa::gui::batch::BatchGUIvirtual; mArgumentParsersofa::gui::common::BaseGUIprotectedstatic; mGuiNamesofa::gui::common::BaseGUIprotectedstatic; mProgramNamesofa::gui::common::BaseGUIprote",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1batch_1_1_batch_g_u_i-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1batch_1_1_batch_g_u_i-members.html
Integrability,message,message,"gister the scene in our GUI. More...;  ; void resetScene ();  ; int mainLoop () override;  ; void redraw () override;  Update the GUI. More...;  ; int closeGUI () override;  Close the GUI. More...;  ; sofa::simulation::Node * currentSimulation () override;  Get the rootNode of the sofa scene. More...;  ;  Public Member Functions inherited from sofa::gui::common::BaseGUI; virtual void configureGUI (sofa::simulation::NodeSPtr groot);  Use a component setting to configure our GUI. More...;  ; void exportGnuplot (sofa::simulation::Node *node, std::string gnuplot_directory="""");  ; virtual void setDumpState (bool);  ; virtual void setLogTime (bool);  ; virtual void setExportState (bool);  ; virtual void setGnuplotPath (const std::string &);  ; virtual void initViewer (BaseViewer *);  ; virtual void setViewerConfiguration (sofa::component::setting::ViewerSetting *);  ; virtual void setViewerResolution (int, int);  ; virtual void setFullScreen ();  ; virtual void centerWindow ();  ; virtual void setBackgroundColor (const sofa::type::RGBAColor &);  ; virtual void setBackgroundImage (const std::string &);  ; virtual BaseViewer * getViewer ();  ; virtual void registerViewer (BaseViewer *);  ; virtual bool saveScreenshot (const std::string &filename, int compression_level=-1);  ; virtual void setMouseButtonConfiguration (sofa::component::setting::MouseButtonSetting *);  ; virtual void stepMainLoop ();  ; virtual void sendMessage (const std::string &, const std::string &);  Send a (script) message. More...;  ; virtual void showFPS (double);  Force the displayed FPS value (if any) More...;  . Protected Member Functions;  ~BatchGUI () override;  The destructor should not be called directly. Use the closeGUI() method instead. More...;  ; void startDumpVisitor ();  ; void stopDumpVisitor ();  ; void exportJson (const std::string &timerOutputStr, int iterationNumber) const;  Export a text file (with json extension) containing the timer output string. More...;  ;  Protected Member Fun",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1batch_1_1_batch_g_u_i.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1batch_1_1_batch_g_u_i.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::batch::BatchGUI Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Static Protected Attributes |; Public Member Functions |; Protected Member Functions |; Static Protected Member Functions |; List of all members . sofa::gui::batch::BatchGUI Class Reference . #include <BatchGUI.h>. Inheritance diagram for sofa::gui::batch::BatchGUI:. [legend]. Protected Attributes; std::ostringstream m_dumpVisitorStream;  ; sofa::simulation::NodeSPtr groot;  ; std::string filename;  . Static Protected Attributes; static signed int nbIter = BatchGUI::DEFAULT_NUMBER_OF_ITERATIONS;  ; static std::string nbIterInp ="""";  ; static bool hideProgressBar { false };  ;  Static Protected Attributes inherited from sofa::gui::common::BaseGUI; static std::string mGuiName = """";  ; static std::string configDirectoryPath = ""."";  ; static std::string screenshotDirectoryPath = ""."";  ; static const char * mProgramName = nullptr;  ; static ArgumentParser * mArgumentParser = nullptr;  . Public Member Functions; bool canBeDefaultGUI () const override;  ; methods each GUI must implement;  BatchGUI ();  ; void setScene (sofa::simulation::NodeSPtr groot, const char *filename="""", bool temporaryFile=false) override;  Register the scene in our GUI. More...;  ; void resetScene ();  ; int mainLoop () override;  ; void redraw () override;  Update the GUI. More...;  ; int closeGUI () override;  Close the GUI. More...;  ; sofa::simulation::Node * currentSimulation () override;  Get the rootNode of the sofa scene. More...;  ;  Public Member Functions inherited from sofa::gui::common::BaseGUI; virtual void configureGUI (sofa::simulation::NodeSPtr groot);  Use a component setting to configure our GUI. More...;  ; void exportGnuplot (sofa::simulation::Node *node, std::string gnuplot_directory="""");  ; virtual void setDumpState (bool);  ; virtual void setLogTime (bool);  ; virtual void setExportState (bool);  ; virtual void setGnuplotPat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1batch_1_1_batch_g_u_i.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1batch_1_1_batch_g_u_i.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::batch::ProgressBar Member List . This is the complete list of members for sofa::gui::batch::ProgressBar, including all inherited members. ProgressBar(const int nbIterations)sofa::gui::batch::ProgressBarexplicit; tick()sofa::gui::batch::ProgressBar; ~ProgressBar()sofa::gui::batch::ProgressBar. Generated on Mon Nov 11 2024 03:19:18 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1batch_1_1_progress_bar-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1batch_1_1_progress_bar-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::common::AddFrameOperation Member List . This is the complete list of members for sofa::gui::common::AddFrameOperation, including all inherited members. buttonsofa::gui::common::Operationprotected; configure(PickHandler *picker, MOUSE_BUTTON b)sofa::gui::common::Operationinlinevirtual; configure(PickHandler *picker, sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p) overridesofa::gui::common::AddFrameOperationprotectedvirtual; createPerformer()sofa::gui::common::Operationvirtual; defaultPerformerType() overridesofa::gui::common::AddFrameOperationprotectedvirtual; end()sofa::gui::common::Operationvirtual; endOperation()sofa::gui::common::Operationinlinevirtual; execution()sofa::gui::common::Operationinlinevirtual; getDescription()sofa::gui::common::AddFrameOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; mbsettingsofa::gui::common::Operationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; setSetting(sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; start()sofa::gui::common::Operationvirtual; wait()sofa::gui::common::Operationinlinevirtual; ~Operation()sofa::gui::common::Operationinlinevirtual. Generated on Mon Nov 11 2024 03:19:18 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_frame_operation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_frame_operation-members.html
Performance,perform,performer,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::common::AddFrameOperation Member List . This is the complete list of members for sofa::gui::common::AddFrameOperation, including all inherited members. buttonsofa::gui::common::Operationprotected; configure(PickHandler *picker, MOUSE_BUTTON b)sofa::gui::common::Operationinlinevirtual; configure(PickHandler *picker, sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p) overridesofa::gui::common::AddFrameOperationprotectedvirtual; createPerformer()sofa::gui::common::Operationvirtual; defaultPerformerType() overridesofa::gui::common::AddFrameOperationprotectedvirtual; end()sofa::gui::common::Operationvirtual; endOperation()sofa::gui::common::Operationinlinevirtual; execution()sofa::gui::common::Operationinlinevirtual; getDescription()sofa::gui::common::AddFrameOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; mbsettingsofa::gui::common::Operationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; setSetting(sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; start()sofa::gui::common::Operationvirtual; wait()sofa::gui::common::Operationinlinevirtual; ~Operation()sofa::gui::common::Operationinlinevirtual. Generated on Mon Nov 11 2024 03:19:18 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_frame_operation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_frame_operation-members.html
Deployability,release,released,"ormerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Function details. ◆ configurePerformer(). void sofa::gui::common::AddFrameOperation::configurePerformer ; (; sofa::gui::component::performer::InteractionPerformer * ; p). overrideprotectedvirtual . Reimplemented from sofa::gui::common::Operation. ◆ defaultPerformerType(). std::string sofa::gui::common::AddFrameOperation::defaultPerformerType ; (; ). overrideprotectedvirtual . Reimplemented from sofa::gui::common::Operation. ◆ getDescription(). static std::string sofa::gui::common::AddFrameOperation::getDescription ; (; ). inlinestatic . sofaguicommonAddFrameOperation; Generated on Mon Nov 11 2024 03:19:18 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_frame_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_frame_operation.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::common::AddFrameOperation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::common::AddFrameOperation Class Reference . #include <MouseOperations.h>. Inheritance diagram for sofa::gui::common::AddFrameOperation:. [legend]. Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Protected Member Functions; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_frame_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_frame_operation.html
Performance,perform,performer,"﻿. SOFA API: sofa::gui::common::AddFrameOperation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::common::AddFrameOperation Class Reference . #include <MouseOperations.h>. Inheritance diagram for sofa::gui::common::AddFrameOperation:. [legend]. Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Protected Member Functions; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_frame_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_frame_operation.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::common::AddRecordedCameraOperation Member List . This is the complete list of members for sofa::gui::common::AddRecordedCameraOperation, including all inherited members. AddRecordedCameraOperation()sofa::gui::common::AddRecordedCameraOperationinline; buttonsofa::gui::common::Operationprotected; configure(PickHandler *picker, MOUSE_BUTTON b)sofa::gui::common::Operationinlinevirtual; configure(PickHandler *picker, sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p) overridesofa::gui::common::AddRecordedCameraOperationprotectedvirtual; createPerformer()sofa::gui::common::Operationvirtual; defaultPerformerType() overridesofa::gui::common::AddRecordedCameraOperationprotectedvirtual; end()sofa::gui::common::Operationvirtual; endOperation()sofa::gui::common::Operationinlinevirtual; execution()sofa::gui::common::Operationinlinevirtual; getDescription()sofa::gui::common::AddRecordedCameraOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; mbsettingsofa::gui::common::Operationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; setSetting(sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; settingsofa::gui::common::AddRecordedCameraOperationprotected; start()sofa::gui::common::Operationvirtual; wait()sofa::gui::common::Operationinlinevirtual; ~Operation()sofa::gui::common::Operationinlinevirtual. Generated on Mon Nov 11 2024 03:19:18 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_recorded_camera_operation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_recorded_camera_operation-members.html
Performance,perform,performer,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::common::AddRecordedCameraOperation Member List . This is the complete list of members for sofa::gui::common::AddRecordedCameraOperation, including all inherited members. AddRecordedCameraOperation()sofa::gui::common::AddRecordedCameraOperationinline; buttonsofa::gui::common::Operationprotected; configure(PickHandler *picker, MOUSE_BUTTON b)sofa::gui::common::Operationinlinevirtual; configure(PickHandler *picker, sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p) overridesofa::gui::common::AddRecordedCameraOperationprotectedvirtual; createPerformer()sofa::gui::common::Operationvirtual; defaultPerformerType() overridesofa::gui::common::AddRecordedCameraOperationprotectedvirtual; end()sofa::gui::common::Operationvirtual; endOperation()sofa::gui::common::Operationinlinevirtual; execution()sofa::gui::common::Operationinlinevirtual; getDescription()sofa::gui::common::AddRecordedCameraOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; mbsettingsofa::gui::common::Operationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; setSetting(sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; settingsofa::gui::common::AddRecordedCameraOperationprotected; start()sofa::gui::common::Operationvirtual; wait()sofa::gui::common::Operationinlinevirtual; ~Operation()sofa::gui::common::Operationinlinevirtual. Generated on Mon Nov 11 2024 03:19:18 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_recorded_camera_operation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_recorded_camera_operation-members.html
Deployability,release,released,"::gui::common::AddRecordedCameraOperation:. [legend]. Protected Attributes; sofa::gui::component::AddRecordedCameraButtonSetting::SPtr setting;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  . Public Member Functions;  AddRecordedCameraOperation ();  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Protected Member Functions; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  . Attribute details. ◆ setting. sofa::gui::component::AddRecordedCameraButtonSetting::SPtr sofa::gui::common::AddRecordedCameraOperation::setting. protected . Constructor d",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_recorded_camera_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_recorded_camera_operation.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::common::AddRecordedCameraOperation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::common::AddRecordedCameraOperation Class Reference . #include <MouseOperations.h>. Inheritance diagram for sofa::gui::common::AddRecordedCameraOperation:. [legend]. Protected Attributes; sofa::gui::component::AddRecordedCameraButtonSetting::SPtr setting;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  . Public Member Functions;  AddRecordedCameraOperation ();  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Protected Member Functions; virtual std::string defaultPerformerType () override;  ; void configurePerform",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_recorded_camera_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_recorded_camera_operation.html
Performance,perform,performer,"tes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  . Public Member Functions;  AddRecordedCameraOperation ();  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Protected Member Functions; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  . Attribute details. ◆ setting. sofa::gui::component::AddRecordedCameraButtonSetting::SPtr sofa::gui::common::AddRecordedCameraOperation::setting. protected . Constructor details. ◆ AddRecordedCameraOperation(). sofa::gui::common::AddRecordedCameraOperation::AddRecordedCameraOperation ; (; ). inline . Function details. ◆ configurePerfo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_recorded_camera_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_recorded_camera_operation.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::common::AddSutureOperation Member List . This is the complete list of members for sofa::gui::common::AddSutureOperation, including all inherited members. AddSutureOperation()sofa::gui::common::AddSutureOperationinline; buttonsofa::gui::common::Operationprotected; configure(PickHandler *picker, MOUSE_BUTTON b)sofa::gui::common::Operationinlinevirtual; configure(PickHandler *picker, sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p) overridesofa::gui::common::AddSutureOperationprotectedvirtual; createPerformer()sofa::gui::common::Operationvirtual; dampingsofa::gui::common::AddSutureOperationprotected; defaultPerformerType() overridesofa::gui::common::AddSutureOperationprotectedvirtual; end()sofa::gui::common::Operationvirtual; endOperation()sofa::gui::common::Operationinlinevirtual; execution()sofa::gui::common::Operationinlinevirtual; getDamping() constsofa::gui::common::AddSutureOperationinlinevirtual; getDescription()sofa::gui::common::AddSutureOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; getStiffness() constsofa::gui::common::AddSutureOperationinlinevirtual; mbsettingsofa::gui::common::Operationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; setDamping(double f)sofa::gui::common::AddSutureOperationinline; setSetting(sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; setStiffness(double f)sofa::gui::common::AddSutureOperationinline; start()sofa::gui::common::Operationvirtual; stiffnesssofa::gui::common::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_suture_operation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_suture_operation-members.html
Performance,perform,performer,"uding all inherited members. AddSutureOperation()sofa::gui::common::AddSutureOperationinline; buttonsofa::gui::common::Operationprotected; configure(PickHandler *picker, MOUSE_BUTTON b)sofa::gui::common::Operationinlinevirtual; configure(PickHandler *picker, sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p) overridesofa::gui::common::AddSutureOperationprotectedvirtual; createPerformer()sofa::gui::common::Operationvirtual; dampingsofa::gui::common::AddSutureOperationprotected; defaultPerformerType() overridesofa::gui::common::AddSutureOperationprotectedvirtual; end()sofa::gui::common::Operationvirtual; endOperation()sofa::gui::common::Operationinlinevirtual; execution()sofa::gui::common::Operationinlinevirtual; getDamping() constsofa::gui::common::AddSutureOperationinlinevirtual; getDescription()sofa::gui::common::AddSutureOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; getStiffness() constsofa::gui::common::AddSutureOperationinlinevirtual; mbsettingsofa::gui::common::Operationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; setDamping(double f)sofa::gui::common::AddSutureOperationinline; setSetting(sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; setStiffness(double f)sofa::gui::common::AddSutureOperationinline; start()sofa::gui::common::Operationvirtual; stiffnesssofa::gui::common::AddSutureOperationprotected; wait()sofa::gui::common::Operationinlinevirtual; ~AddSutureOperation() overridesofa::gui::common::AddSutureOperationinline; ~Operation()sofa::gui::common::Operationinlinevirtual. Generated on Mon Nov 11 202",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_suture_operation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_suture_operation-members.html
Deployability,release,released,"rited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  . Public Member Functions;  AddSutureOperation ();  ;  ~AddSutureOperation () override;  ; void setStiffness (double f);  ; virtual double getStiffness () const;  ; void setDamping (double f);  ; virtual double getDamping () const;  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Protected Member Functions; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  . Attribute details. ◆ damping. double sofa::gui::common::AddSutureOperation::damping. protected . ◆ stiffness. double sofa::gui::common::AddSutureOperation::stiffness. pro",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_suture_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_suture_operation.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::common::AddSutureOperation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::common::AddSutureOperation Class Reference . #include <MouseOperations.h>. Inheritance diagram for sofa::gui::common::AddSutureOperation:. [legend]. Protected Attributes; double stiffness;  ; double damping;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  . Public Member Functions;  AddSutureOperation ();  ;  ~AddSutureOperation () override;  ; void setStiffness (double f);  ; virtual double getStiffness () const;  ; void setDamping (double f);  ; virtual double getDamping () const;  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_suture_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_suture_operation.html
Performance,perform,performer," Member Functions;  AddSutureOperation ();  ;  ~AddSutureOperation () override;  ; void setStiffness (double f);  ; virtual double getStiffness () const;  ; void setDamping (double f);  ; virtual double getDamping () const;  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Protected Member Functions; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  . Attribute details. ◆ damping. double sofa::gui::common::AddSutureOperation::damping. protected . ◆ stiffness. double sofa::gui::common::AddSutureOperation::stiffness. protected . Constructor details. ◆ AddSutureOperation(). sofa::gui::common::AddSutureOperation::AddSutureOperation ; (; ). inline . ◆ ~AddSutureOperation(). sofa::gui::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_suture_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_suture_operation.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::common::ArgumentParser Member List . This is the complete list of members for sofa::gui::common::ArgumentParser, including all inherited members. addArgument(std::shared_ptr< cxxopts::Value > s, const std::string name, const std::string help)sofa::gui::common::ArgumentParser; addArgument(std::shared_ptr< cxxopts::Value > s, const std::string name, const std::string help, std::function< void(const ArgumentParser *, const std::string &)> callback)sofa::gui::common::ArgumentParser; addArgument(const std::string name, const std::string help)sofa::gui::common::ArgumentParser; ArgumentParser(int argc, char **argv)sofa::gui::common::ArgumentParser; extrasofa::gui::common::ArgumentParserstatic; extra_args()sofa::gui::common::ArgumentParserinlinestatic; getInputFileList()sofa::gui::common::ArgumentParser; getMap() constsofa::gui::common::ArgumentParser; getValueFromKey(const std::string &key, T &value) constsofa::gui::common::ArgumentParserinline; parse()sofa::gui::common::ArgumentParser; showArgs()sofa::gui::common::ArgumentParser; showHelp()sofa::gui::common::ArgumentParser; ~ArgumentParser()sofa::gui::common::ArgumentParser. Generated on Mon Nov 11 2024 03:19:18 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_argument_parser-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_argument_parser-members.html
Usability,simpl,simply,"lic Member Functions |; Static Public Member Functions |; List of all members . sofa::gui::common::ArgumentParser Class Reference . #include <ArgumentParser.h>; Detailed Description; Command line parser; This object parses arguments from a command line or from an input stream. See alsoArgument . Static Public Attributes; static std::vector< std::string > extra = std::vector<std::string>();  . Public Member Functions;  ArgumentParser (int argc, char **argv);  constructor. More...;  ;  ~ArgumentParser ();  ; void addArgument (std::shared_ptr< cxxopts::Value > s, const std::string name, const std::string help);  addArgument More...;  ; void addArgument (std::shared_ptr< cxxopts::Value > s, const std::string name, const std::string help, std::function< void(const ArgumentParser *, const std::string &)> callback);  addArgument More...;  ; void addArgument (const std::string name, const std::string help);  addArgument More...;  ; void showHelp ();  simply display the help (You need to add -h –help options in your main and call this function by yourself More...;  ; void parse ();  this is the main function. You have to call this function if you want to parse the arguments given to the constructor More...;  ; void showArgs ();  display args with values More...;  ; template<typename T > ; bool getValueFromKey (const std::string &key, T &value) const;  get the value associated to the key (if this key exists or the type is correct) More...;  ; const std::unordered_map< std::string, std::string > & getMap () const;  ; std::vector< std::string > getInputFileList ();  . Static Public Member Functions; static const std::vector< std::string > extra_args ();  return extra_args needed for python (arguments) More...;  . Attribute details. ◆ extra. std::vector< std::string > sofa::gui::common::ArgumentParser::extra = std::vector<std::string>(). static . last parsed extra arguments extra parameter needed for python (arguments) . Constructor details. ◆ ArgumentParser(). sofa::gui::common:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_argument_parser.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_argument_parser.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::common::AttachOperation Member List . This is the complete list of members for sofa::gui::common::AttachOperation, including all inherited members. AttachOperation(sofa::gui::component::AttachBodyButtonSetting::SPtr s=sofa::core::objectmodel::New< sofa::gui::component::AttachBodyButtonSetting >())sofa::gui::common::AttachOperationinline; buttonsofa::gui::common::Operationprotected; configure(PickHandler *picker, MOUSE_BUTTON b)sofa::gui::common::Operationinlinevirtual; configure(PickHandler *picker, sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p) overridesofa::gui::common::AttachOperationprotectedvirtual; createPerformer()sofa::gui::common::Operationvirtual; defaultPerformerType() overridesofa::gui::common::AttachOperationprotectedvirtual; end()sofa::gui::common::Operationvirtual; endOperation()sofa::gui::common::Operationinlinevirtual; execution()sofa::gui::common::Operationinlinevirtual; getArrowSize() constsofa::gui::common::AttachOperationinline; getDescription()sofa::gui::common::AttachOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; getShowFactorSize() constsofa::gui::common::AttachOperationinline; getStiffness() constsofa::gui::common::AttachOperationinline; mbsettingsofa::gui::common::Operationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; setArrowSize(double s)sofa::gui::common::AttachOperationinline; setSetting(sofa::component::setting::MouseButtonSetting *s) overridesofa::gui::common::AttachOperationinlineprotectedvirtual; setShowFac",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_attach_operation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_attach_operation-members.html
Performance,perform,performer," AttachOperation(sofa::gui::component::AttachBodyButtonSetting::SPtr s=sofa::core::objectmodel::New< sofa::gui::component::AttachBodyButtonSetting >())sofa::gui::common::AttachOperationinline; buttonsofa::gui::common::Operationprotected; configure(PickHandler *picker, MOUSE_BUTTON b)sofa::gui::common::Operationinlinevirtual; configure(PickHandler *picker, sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p) overridesofa::gui::common::AttachOperationprotectedvirtual; createPerformer()sofa::gui::common::Operationvirtual; defaultPerformerType() overridesofa::gui::common::AttachOperationprotectedvirtual; end()sofa::gui::common::Operationvirtual; endOperation()sofa::gui::common::Operationinlinevirtual; execution()sofa::gui::common::Operationinlinevirtual; getArrowSize() constsofa::gui::common::AttachOperationinline; getDescription()sofa::gui::common::AttachOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; getShowFactorSize() constsofa::gui::common::AttachOperationinline; getStiffness() constsofa::gui::common::AttachOperationinline; mbsettingsofa::gui::common::Operationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; setArrowSize(double s)sofa::gui::common::AttachOperationinline; setSetting(sofa::component::setting::MouseButtonSetting *s) overridesofa::gui::common::AttachOperationinlineprotectedvirtual; setShowFac",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_attach_operation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_attach_operation-members.html
Deployability,release,released,"Operation (sofa::gui::component::AttachBodyButtonSetting::SPtr s=sofa::core::objectmodel::New< sofa::gui::component::AttachBodyButtonSetting >());  ;  ~AttachOperation () override;  ; void setStiffness (double s);  ; double getStiffness () const;  ; void setArrowSize (double s);  ; double getArrowSize () const;  ; void setShowFactorSize (double s);  ; double getShowFactorSize () const;  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Protected Member Functions; void setSetting (sofa::component::setting::MouseButtonSetting *s) override;  ; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  . Attribute details. ◆ setting. sofa::gui::component::AttachBodyButtonSetting::SPtr sofa::gui::common::AttachOperation::setting. protected . Constructor details. ◆ AttachO",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_attach_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_attach_operation.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::common::AttachOperation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::common::AttachOperation Class Reference . #include <MouseOperations.h>. Inheritance diagram for sofa::gui::common::AttachOperation:. [legend]. Protected Attributes; sofa::gui::component::AttachBodyButtonSetting::SPtr setting;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  . Public Member Functions;  AttachOperation (sofa::gui::component::AttachBodyButtonSetting::SPtr s=sofa::core::objectmodel::New< sofa::gui::component::AttachBodyButtonSetting >());  ;  ~AttachOperation () override;  ; void setStiffness (double s);  ; double getStiffness () const;  ; void setArrowSize (double s);  ; double getArrowSize () const;  ; void setShowFactorSize (double s);  ; double getShowFactorSize () const;  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static std::string getDescript",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_attach_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_attach_operation.html
Performance,perform,performer,"yButtonSetting >());  ;  ~AttachOperation () override;  ; void setStiffness (double s);  ; double getStiffness () const;  ; void setArrowSize (double s);  ; double getArrowSize () const;  ; void setShowFactorSize (double s);  ; double getShowFactorSize () const;  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Protected Member Functions; void setSetting (sofa::component::setting::MouseButtonSetting *s) override;  ; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  . Attribute details. ◆ setting. sofa::gui::component::AttachBodyButtonSetting::SPtr sofa::gui::common::AttachOperation::setting. protected . Constructor details. ◆ AttachOperation(). sofa::gui::common::AttachOperation::AttachOperation ; (; sofa::gui::component::AttachBodyButtonSetting::SPtr ; s =",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_attach_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_attach_operation.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::common::BaseGUI Member List . This is the complete list of members for sofa::gui::common::BaseGUI, including all inherited members. BaseGUI()sofa::gui::common::BaseGUIprotected; canBeDefaultGUI() constsofa::gui::common::BaseGUIinlinevirtual; centerWindow()sofa::gui::common::BaseGUIinlinevirtual; closeGUI()=0sofa::gui::common::BaseGUIpure virtual; configDirectoryPathsofa::gui::common::BaseGUIprotectedstatic; configureGUI(sofa::simulation::NodeSPtr groot)sofa::gui::common::BaseGUIvirtual; currentSimulation()=0sofa::gui::common::BaseGUIpure virtual; exportGnuplot(sofa::simulation::Node *node, std::string gnuplot_directory="""")sofa::gui::common::BaseGUI; getConfigDirectoryPath()sofa::gui::common::BaseGUIstatic; GetGUIName()sofa::gui::common::BaseGUIinlinestatic; GetProgramName()sofa::gui::common::BaseGUIinlinestatic; getScreenshotDirectoryPath()sofa::gui::common::BaseGUIstatic; getViewer()sofa::gui::common::BaseGUIinlinevirtual; initViewer(BaseViewer *)sofa::gui::common::BaseGUIinlinevirtual; mainLoop()=0sofa::gui::common::BaseGUIpure virtual; mArgumentParsersofa::gui::common::BaseGUIprotectedstatic; mGuiNamesofa::gui::common::BaseGUIprotectedstatic; mProgramNamesofa::gui::common::BaseGUIprotectedstatic; redraw()=0sofa::gui::common::BaseGUIpure virtual; registerViewer(BaseViewer *)sofa::gui::common::BaseGUIinlinevirtual; saveScreenshot(const std::string &filename, int compression_level=-1)sofa::gui::common::BaseGUIvirtual; screenshotDirectoryPathsofa::gui::common::BaseGUIprotectedstatic; sendMessage(const std::string &, const std::string &)sofa::gui::common::BaseGUIinlinevirtual; SetArgumentParser(ArgumentParser *parser)sofa::gui::common::BaseGUIinlinestatic; setBackgroundColor(const sofa::type::RGBAColor &)sofa::gui::common::BaseGUIinlinevirtual; setBackgroundImage(const std::string &)sofa::gui::common::BaseGUIinlinevirtual; setConfigDirectoryPath(const std::str",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_base_g_u_i-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_base_g_u_i-members.html
Integrability,message,message,"rootNode of the sofa scene. More...;  ; methods to configure the GUI; virtual void setDumpState (bool);  ; virtual void setLogTime (bool);  ; virtual void setExportState (bool);  ; virtual void setGnuplotPath (const std::string &);  ; virtual void initViewer (BaseViewer *);  ; virtual void setViewerConfiguration (sofa::component::setting::ViewerSetting *);  ; virtual void setViewerResolution (int, int);  ; virtual void setFullScreen ();  ; virtual void centerWindow ();  ; virtual void setBackgroundColor (const sofa::type::RGBAColor &);  ; virtual void setBackgroundImage (const std::string &);  ; virtual BaseViewer * getViewer ();  ; virtual void registerViewer (BaseViewer *);  ; virtual bool saveScreenshot (const std::string &filename, int compression_level=-1);  ; virtual void setMouseButtonConfiguration (sofa::component::setting::MouseButtonSetting *);  ; methods to communicate with the GUI; Do one step of the GUI loop . virtual void stepMainLoop ();  ; virtual void sendMessage (const std::string &, const std::string &);  Send a (script) message. More...;  ; virtual void showFPS (double);  Force the displayed FPS value (if any) More...;  . Static Public Member Functions; static std::string & GetGUIName ();  ; static const char * GetProgramName ();  ; static void SetProgramName (const char *argv0);  ; static void SetArgumentParser (ArgumentParser *parser);  ; static const std::string & getConfigDirectoryPath ();  ; static const std::string & getScreenshotDirectoryPath ();  ; static void setConfigDirectoryPath (const std::string &path, bool createIfNecessary=false);  ; static void setScreenshotDirectoryPath (const std::string &path, bool createIfNecessary=false);  . Protected Member Functions;  BaseGUI ();  ; virtual ~BaseGUI ();  The destructor should not be called directly. Use the closeGUI() method instead. More...;  . Attribute details. ◆ configDirectoryPath. std::string sofa::gui::common::BaseGUI::configDirectoryPath = ""."". staticprotected . ◆ mArgumentParser. ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_base_g_u_i.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_base_g_u_i.html
Modifiability,config,configDirectoryPath,"﻿. SOFA API: sofa::gui::common::BaseGUI Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::common::BaseGUI Class Referenceabstract . #include <BaseGUI.h>. Inheritance diagram for sofa::gui::common::BaseGUI:. [legend]. Static Protected Attributes; static std::string mGuiName = """";  ; static std::string configDirectoryPath = ""."";  ; static std::string screenshotDirectoryPath = ""."";  ; static const char * mProgramName = nullptr;  ; static ArgumentParser * mArgumentParser = nullptr;  . Public Member Functions; virtual void configureGUI (sofa::simulation::NodeSPtr groot);  Use a component setting to configure our GUI. More...;  ; void exportGnuplot (sofa::simulation::Node *node, std::string gnuplot_directory="""");  ; virtual bool canBeDefaultGUI () const;  ; methods each GUI must implement; Start the GUI loop . virtual int mainLoop ()=0;  ; virtual void redraw ()=0;  Update the GUI. More...;  ; virtual int closeGUI ()=0;  Close the GUI. More...;  ; virtual void setScene (sofa::simulation::NodeSPtr groot, const char *filename=nullptr, bool temporaryFile=false)=0;  Register the scene in our GUI. More...;  ; virtual sofa::simulation::Node * currentSimulation ()=0;  Get the rootNode of the sofa scene. More...;  ; methods to configure the GUI; virtual void setDumpState (bool);  ; virtual void setLogTime (bool);  ; virtual void setExportState (bool);  ; virtual void setGnuplotPath (const std::string &);  ; virtual void initViewer (BaseViewer *);  ; virtual void setViewerConfiguration (sofa::component::setting::ViewerSetting *);  ; virtual void setViewerResolution (int, int);  ; virtual void setFullScreen ();  ; virtual void centerWindow ();  ; virtual void setBackgroundColor (const sofa::type::RGBAColor &);  ; virtual void setBackgroundImage (const std::string &);  ; virtual BaseViewer *",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_base_g_u_i.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_base_g_u_i.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::common::BaseViewer Member List . This is the complete list of members for sofa::gui::common::BaseViewer, including all inherited members. _backgroundsofa::gui::common::BaseViewerprotected; _fullScreensofa::gui::common::BaseViewerprotected; _mouseInteractorMovingsofa::gui::common::BaseViewerprotected; _mouseInteractorSavedPosXsofa::gui::common::BaseViewerprotected; _mouseInteractorSavedPosYsofa::gui::common::BaseViewerprotected; _navigationModesofa::gui::common::BaseViewerprotected; _screenshotDirectorysofa::gui::common::BaseViewerprotected; _videosofa::gui::common::BaseViewerprotected; ambientColoursofa::gui::common::BaseViewerprotected; backgroundColoursofa::gui::common::BaseViewerprotected; backgroundImageFilesofa::gui::common::BaseViewerprotected; BaseViewer()sofa::gui::common::BaseViewer; captureEvent()sofa::gui::common::BaseViewerinlinevirtual; configure(sofa::component::setting::ViewerSetting *viewerConf)sofa::gui::common::BaseViewervirtual; currentCamerasofa::gui::common::BaseViewerprotected; drawColourPicking(ColourPickingVisitor::ColourCode)sofa::gui::common::BaseViewerinlinevirtual; drawScene(void)=0sofa::gui::common::BaseViewerpure virtual; fitNodeBBox(sofa::core::objectmodel::BaseNode *)sofa::gui::common::BaseViewervirtual; fitObjectBBox(sofa::core::objectmodel::BaseObject *)sofa::gui::common::BaseViewervirtual; getBackgroundImage()sofa::gui::common::BaseViewer; getHeight()=0sofa::gui::common::BaseViewerpure virtual; getPickHandler()sofa::gui::common::BaseViewer; getScene()sofa::gui::common::BaseViewervirtual; getSceneFileName()sofa::gui::common::BaseViewervirtual; getView(sofa::type::Vec3 &pos, sofa::type::Quat< SReal > &ori) constsofa::gui::common::BaseViewervirtual; getWidth()=0sofa::gui::common::BaseViewerpure virtual; grootsofa::gui::common::BaseViewerprotected; initTexturesDonesofa::gui::common::BaseViewerprotected; load(void)sofa::gui::com",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_base_viewer-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_base_viewer-members.html
Performance,load,load,"ure(sofa::component::setting::ViewerSetting *viewerConf)sofa::gui::common::BaseViewervirtual; currentCamerasofa::gui::common::BaseViewerprotected; drawColourPicking(ColourPickingVisitor::ColourCode)sofa::gui::common::BaseViewerinlinevirtual; drawScene(void)=0sofa::gui::common::BaseViewerpure virtual; fitNodeBBox(sofa::core::objectmodel::BaseNode *)sofa::gui::common::BaseViewervirtual; fitObjectBBox(sofa::core::objectmodel::BaseObject *)sofa::gui::common::BaseViewervirtual; getBackgroundImage()sofa::gui::common::BaseViewer; getHeight()=0sofa::gui::common::BaseViewerpure virtual; getPickHandler()sofa::gui::common::BaseViewer; getScene()sofa::gui::common::BaseViewervirtual; getSceneFileName()sofa::gui::common::BaseViewervirtual; getView(sofa::type::Vec3 &pos, sofa::type::Quat< SReal > &ori) constsofa::gui::common::BaseViewervirtual; getWidth()=0sofa::gui::common::BaseViewerpure virtual; grootsofa::gui::common::BaseViewerprotected; initTexturesDonesofa::gui::common::BaseViewerprotected; load(void)sofa::gui::common::BaseViewervirtual; m_bShowAxissofa::gui::common::BaseViewerprotected; m_isVideoButtonPressedsofa::gui::common::BaseViewerprotected; moveRayPickInteractor(int, int)sofa::gui::common::BaseViewerinlinevirtual; moveView(const sofa::type::Vec3 &pos, const sofa::type::Quat< SReal > &ori)sofa::gui::common::BaseViewervirtual; newView()sofa::gui::common::BaseViewervirtual; picksofa::gui::common::BaseViewerprotected; ready()sofa::gui::common::BaseViewervirtual; redraw()=0sofa::gui::common::BaseViewerprotectedpure virtual; resetView()sofa::gui::common::BaseViewervirtual; saveView()=0sofa::gui::common::BaseViewerpure virtual; sceneFileNamesofa::gui::common::BaseViewerprotected; screenshot(const std::string &filename, int compression_level=-1)sofa::gui::common::BaseViewervirtual; screenshotName()sofa::gui::common::BaseViewervirtual; setBackgroundColour(float r, float g, float b)sofa::gui::common::BaseViewervirtual; setBackgroundImage(std::string imageFileName=std::string(""",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_base_viewer-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_base_viewer-members.html
Modifiability,config,configure,"virtual void setSceneFileName (const std::string &f);  ; virtual void setScene (sofa::simulation::Node::SPtr scene, const char *filename=nullptr, bool=false);  ; virtual void setCameraMode (core::visual::VisualParams::CameraType);  ; virtual bool ready ();  ; virtual void wait ();  ask the viewer to resume its activity More...;  ; virtual bool load (void);  Load the viewer. It's the initialisation. More...;  ; virtual bool unload (void);  unload the viewer without delete More...;  ; virtual void viewAll (void)=0;  Recompute viewer's home position so it encompass the whole scene and apply it. More...;  ; virtual void configure (sofa::component::setting::ViewerSetting *viewerConf);  ; virtual const std::string screenshotName ();  ; virtual void setPrefix (const std::string &prefix, bool prependDirectory=true);  ; virtual void screenshot (const std::string &filename, int compression_level=-1);  ; virtual void getView (sofa::type::Vec3 &pos, sofa::type::Quat< SReal > &ori) const;  ; virtual void setView (const sofa::type::Vec3 &pos, const sofa::type::Quat< SReal > &ori);  ; virtual void moveView (const sofa::type::Vec3 &pos, const sofa::type::Quat< SReal > &ori);  ; virtual void newView ();  ; virtual void resetView ();  ; virtual void setBackgroundColour (float r, float g, float b);  ; virtual void setBackgroundImage (std::string imageFileName=std::string(""textures/SOFA_logo.bmp""));  ; std::string getBackgroundImage ();  ; virtual void saveView ()=0;  ; virtual void setSizeW (int)=0;  ; virtual void setSizeH (int)=0;  ; virtual int getWidth ()=0;  ; virtual int getHeight ()=0;  ; virtual void captureEvent ();  ; virtual void fitObjectBBox (sofa::core::objectmodel::BaseObject *);  ; virtual void fitNodeBBox (sofa::core::objectmodel::BaseNode *);  ; virtual void setFullScreen (bool);  ; virtual void moveRayPickInteractor (int, int);  RayCasting PickHandler. More...;  ; PickHandler * getPickHandler ();  ; virtual void drawScene (void)=0;  the rendering pass is done here (h",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_base_viewer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_base_viewer.html
Performance,load,load,"sed;  ; bool m_bShowAxis;  ; bool _fullScreen;  ; int _background;  ; bool initTexturesDone;  ; sofa::type::Vec3 backgroundColour;  ; std::string backgroundImageFile;  ; sofa::type::Vec3 ambientColour;  ; std::unique_ptr< PickHandler > pick;  ; int _navigationMode;  ; bool _mouseInteractorMoving;  ; int _mouseInteractorSavedPosX;  ; int _mouseInteractorSavedPosY;  ; std::string _screenshotDirectory;  . Public Member Functions;  BaseViewer ();  ; virtual ~BaseViewer ();  ; virtual void drawColourPicking (ColourPickingVisitor::ColourCode);  ; virtual sofa::simulation::Node * getScene ();  ; virtual const std::string & getSceneFileName ();  ; virtual void setSceneFileName (const std::string &f);  ; virtual void setScene (sofa::simulation::Node::SPtr scene, const char *filename=nullptr, bool=false);  ; virtual void setCameraMode (core::visual::VisualParams::CameraType);  ; virtual bool ready ();  ; virtual void wait ();  ask the viewer to resume its activity More...;  ; virtual bool load (void);  Load the viewer. It's the initialisation. More...;  ; virtual bool unload (void);  unload the viewer without delete More...;  ; virtual void viewAll (void)=0;  Recompute viewer's home position so it encompass the whole scene and apply it. More...;  ; virtual void configure (sofa::component::setting::ViewerSetting *viewerConf);  ; virtual const std::string screenshotName ();  ; virtual void setPrefix (const std::string &prefix, bool prependDirectory=true);  ; virtual void screenshot (const std::string &filename, int compression_level=-1);  ; virtual void getView (sofa::type::Vec3 &pos, sofa::type::Quat< SReal > &ori) const;  ; virtual void setView (const sofa::type::Vec3 &pos, const sofa::type::Quat< SReal > &ori);  ; virtual void moveView (const sofa::type::Vec3 &pos, const sofa::type::Quat< SReal > &ori);  ; virtual void newView ();  ; virtual void resetView ();  ; virtual void setBackgroundColour (float r, float g, float b);  ; virtual void setBackgroundImage (std::string ima",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_base_viewer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_base_viewer.html
Usability,resume,resume,"h>. Inheritance diagram for sofa::gui::common::BaseViewer:. [legend]. Protected Attributes; sofa::simulation::Node::SPtr groot;  the sofa root note of the current scene More...;  ; sofa::component::visual::BaseCamera::SPtr currentCamera;  ; std::string sceneFileName;  ; bool _video;  ; bool m_isVideoButtonPressed;  ; bool m_bShowAxis;  ; bool _fullScreen;  ; int _background;  ; bool initTexturesDone;  ; sofa::type::Vec3 backgroundColour;  ; std::string backgroundImageFile;  ; sofa::type::Vec3 ambientColour;  ; std::unique_ptr< PickHandler > pick;  ; int _navigationMode;  ; bool _mouseInteractorMoving;  ; int _mouseInteractorSavedPosX;  ; int _mouseInteractorSavedPosY;  ; std::string _screenshotDirectory;  . Public Member Functions;  BaseViewer ();  ; virtual ~BaseViewer ();  ; virtual void drawColourPicking (ColourPickingVisitor::ColourCode);  ; virtual sofa::simulation::Node * getScene ();  ; virtual const std::string & getSceneFileName ();  ; virtual void setSceneFileName (const std::string &f);  ; virtual void setScene (sofa::simulation::Node::SPtr scene, const char *filename=nullptr, bool=false);  ; virtual void setCameraMode (core::visual::VisualParams::CameraType);  ; virtual bool ready ();  ; virtual void wait ();  ask the viewer to resume its activity More...;  ; virtual bool load (void);  Load the viewer. It's the initialisation. More...;  ; virtual bool unload (void);  unload the viewer without delete More...;  ; virtual void viewAll (void)=0;  Recompute viewer's home position so it encompass the whole scene and apply it. More...;  ; virtual void configure (sofa::component::setting::ViewerSetting *viewerConf);  ; virtual const std::string screenshotName ();  ; virtual void setPrefix (const std::string &prefix, bool prependDirectory=true);  ; virtual void screenshot (const std::string &filename, int compression_level=-1);  ; virtual void getView (sofa::type::Vec3 &pos, sofa::type::Quat< SReal > &ori) const;  ; virtual void setView (const sofa::type::Vec3 &po",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_base_viewer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_base_viewer.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::common::BaseViewerArgument Member List . This is the complete list of members for sofa::gui::common::BaseViewerArgument, including all inherited members. BaseViewerArgument(std::string _name, const unsigned int nbMSAASamples=1)sofa::gui::common::BaseViewerArgumentinline; getName() constsofa::gui::common::BaseViewerArgumentinlinevirtual; getNbMSAASamples()sofa::gui::common::BaseViewerArgumentinlinevirtual; m_nbMSAASamplessofa::gui::common::BaseViewerArgumentprotected; namesofa::gui::common::BaseViewerArgumentprotected; ~BaseViewerArgument()sofa::gui::common::BaseViewerArgumentinlinevirtual. Generated on Mon Nov 11 2024 03:19:19 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_base_viewer_argument-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_base_viewer_argument-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::common::CallBackPicker Member List . This is the complete list of members for sofa::gui::common::CallBackPicker, including all inherited members. execute(const BodyPicked &body)=0sofa::gui::common::CallBackPickerpure virtual; ~CallBackPicker()sofa::gui::common::CallBackPickerinlinevirtual. Generated on Mon Nov 11 2024 03:19:18 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_call_back_picker-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_call_back_picker-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::common::CallBackRender Member List . This is the complete list of members for sofa::gui::common::CallBackRender, including all inherited members. render(ColourPickingVisitor::ColourCode code)=0sofa::gui::common::CallBackRenderpure virtual; ~CallBackRender()sofa::gui::common::CallBackRenderinlinevirtual. Generated on Mon Nov 11 2024 03:19:18 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_call_back_render-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_call_back_render-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::common::ColourPickingVisitor Member List . This is the complete list of members for sofa::gui::common::ColourPickingVisitor, including all inherited members. addTag(Tag t)sofa::simulation::Visitorinline; begin(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; begin(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorvirtual; canAccessSleepingNodesofa::simulation::Visitor; childOrderReversed(simulation::Node *)sofa::simulation::Visitorinlinevirtual; ColourCode enum namesofa::gui::common::ColourPickingVisitor; ColourPickingVisitor(const core::visual::VisualParams *params, ColourCode Method)sofa::gui::common::ColourPickingVisitorinline; ctime_t typedefsofa::simulation::Visitor; debug_write_state_after(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; debug_write_state_before(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitorprotected; drawColourPicking(const ColourCode)sofa::gui::common::ColourPickingVisitorinlinevirtual; ENCODE_COLLISIONELEMENT enum valuesofa::gui::common::ColourPickingVisitor; ENCODE_RELATIVEPOSITION enum valuesofa::gui::common::ColourPickingVisitor; end(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; end(simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0)sofa::simulation::Visitorvirtual; execParams() constsofa::simulation::Visitorinline; execute(sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false)sofa::simulation::Visitorvirtual; for_each(Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::str",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_colour_picking_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_colour_picking_visitor-members.html
Testability,test,testTags,"::gui::common::ColourPickingVisitorinlinevirtual; getInfos() constsofa::simulation::Visitorinlinevirtual; isThreadSafe() constsofa::simulation::Visitorinlinevirtual; NO_REPETITION enum valuesofa::simulation::Visitor; paramssofa::simulation::Visitorprotected; processCollisionModel(simulation::Node *node, core::CollisionModel *)sofa::gui::common::ColourPickingVisitor; processNodeBottomUp(simulation::Node *)sofa::simulation::Visitorinlinevirtual; processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *node) overridesofa::gui::common::ColourPickingVisitorvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_colour_picking_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_colour_picking_visitor-members.html
Modifiability,inherit,inherited,":gui::common::ColourPickingVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gui::common::ColourPickingVisitor Class Reference . #include <ColourPickingVisitor.h>. Inheritance diagram for sofa::gui::common::ColourPickingVisitor:. [legend]. Public Member Functions; virtual void drawColourPicking (const ColourCode);  ;  ColourPickingVisitor (const core::visual::VisualParams *params, ColourCode Method);  ; void processCollisionModel (simulation::Node *node, core::CollisionModel *);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_colour_picking_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_colour_picking_visitor.html
Security,access,access,"rallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; void for_each (VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; Visitor::Result for_each (VisitorType *visitor, VContext *ctx, const Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_e",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_colour_picking_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_colour_picking_visitor.html
Testability,test,testTags,"ollisionModel (simulation::Node *node, core::CollisionModel *);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_colour_picking_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_colour_picking_visitor.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::common::ConstraintAttachOperation Member List . This is the complete list of members for sofa::gui::common::ConstraintAttachOperation, including all inherited members. AttachOperation(sofa::gui::component::AttachBodyButtonSetting::SPtr s=sofa::core::objectmodel::New< sofa::gui::component::AttachBodyButtonSetting >())sofa::gui::common::AttachOperationinline; buttonsofa::gui::common::Operationprotected; configure(PickHandler *picker, MOUSE_BUTTON b)sofa::gui::common::Operationinlinevirtual; configure(PickHandler *picker, sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p) overridesofa::gui::common::AttachOperationprotectedvirtual; createPerformer()sofa::gui::common::Operationvirtual; defaultPerformerType()sofa::gui::common::ConstraintAttachOperationinlineprotectedvirtual; end()sofa::gui::common::Operationvirtual; endOperation()sofa::gui::common::Operationinlinevirtual; execution()sofa::gui::common::Operationinlinevirtual; getArrowSize() constsofa::gui::common::AttachOperationinline; getDescription()sofa::gui::common::ConstraintAttachOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; getShowFactorSize() constsofa::gui::common::AttachOperationinline; getStiffness() constsofa::gui::common::AttachOperationinline; mbsettingsofa::gui::common::Operationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; setArrowSize(double s)sofa::gui::common::AttachOperationinline; setSetting(sofa::component::setting::MouseButtonSetting *s) overridesofa::gui::common::AttachOperat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_constraint_attach_operation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_constraint_attach_operation-members.html
Performance,perform,performer," AttachOperation(sofa::gui::component::AttachBodyButtonSetting::SPtr s=sofa::core::objectmodel::New< sofa::gui::component::AttachBodyButtonSetting >())sofa::gui::common::AttachOperationinline; buttonsofa::gui::common::Operationprotected; configure(PickHandler *picker, MOUSE_BUTTON b)sofa::gui::common::Operationinlinevirtual; configure(PickHandler *picker, sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p) overridesofa::gui::common::AttachOperationprotectedvirtual; createPerformer()sofa::gui::common::Operationvirtual; defaultPerformerType()sofa::gui::common::ConstraintAttachOperationinlineprotectedvirtual; end()sofa::gui::common::Operationvirtual; endOperation()sofa::gui::common::Operationinlinevirtual; execution()sofa::gui::common::Operationinlinevirtual; getArrowSize() constsofa::gui::common::AttachOperationinline; getDescription()sofa::gui::common::ConstraintAttachOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; getShowFactorSize() constsofa::gui::common::AttachOperationinline; getStiffness() constsofa::gui::common::AttachOperationinline; mbsettingsofa::gui::common::Operationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; setArrowSize(double s)sofa::gui::common::AttachOperationinline; setSetting(sofa::component::setting::MouseButtonSetting *s) overridesofa::gui::common::AttachOperat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_constraint_attach_operation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_constraint_attach_operation-members.html
Deployability,release,released,":AttachOperation; sofa::gui::component::AttachBodyButtonSetting::SPtr setting;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  ;  Public Member Functions inherited from sofa::gui::common::AttachOperation;  AttachOperation (sofa::gui::component::AttachBodyButtonSetting::SPtr s=sofa::core::objectmodel::New< sofa::gui::component::AttachBodyButtonSetting >());  ;  ~AttachOperation () override;  ; void setStiffness (double s);  ; double getStiffness () const;  ; void setArrowSize (double s);  ; double getArrowSize () const;  ; void setShowFactorSize (double s);  ; double getShowFactorSize () const;  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Function details. ◆ defaultPerformerType(). virtual std::string sofa::gui::common::ConstraintAttachOperation::defaultPerformerType ; (; ). inlineprotectedvirtual . Reimplemented from sofa::gui::common::AttachOperation. ◆ getDescription(). static std::string sofa::gui::common::ConstraintAttachOperation::getDescription ; (; ). inlinestatic . sofaguicommonConstraintAttachOperation; Generated on Mon Nov 11 2024 03:19:18 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_constraint_attach_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_constraint_attach_operation.html
Modifiability,inherit,inherited,﻿. SOFA API: sofa::gui::common::ConstraintAttachOperation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::common::ConstraintAttachOperation Class Reference . #include <MouseOperations.h>. Inheritance diagram for sofa::gui::common::ConstraintAttachOperation:. [legend]. Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::AttachOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Protected Member Functions; virtual std::string defaultPerformerType ();  ;  Protected Member Functions inherited from sofa::gui::common::AttachOperation; void setSetting (sofa::component::setting::MouseButtonSetting *s) override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Protected Attributes inherited from sofa::gui::common::AttachOperation; sofa::gui::component::AttachBodyButtonSetting::SPtr setting;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  ;  Public Member Functions inherited from sofa::gui::common::AttachOperation;  AttachOperation (sofa::gui::component::AttachBodyButtonSetting::SPtr s=sofa::core::objectmodel::New< sofa::gui::component::AttachBodyButtonSetting >());  ;  ~AttachOperation () override;  ; void setStiffness (double s);  ; double getStiffness () const;  ; void setArrowSize (double s);  ; double getArrowSize () const;  ; void setShowFactorSize (double s);  ; double getSho,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_constraint_attach_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_constraint_attach_operation.html
Performance,perform,performer,﻿. SOFA API: sofa::gui::common::ConstraintAttachOperation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::common::ConstraintAttachOperation Class Reference . #include <MouseOperations.h>. Inheritance diagram for sofa::gui::common::ConstraintAttachOperation:. [legend]. Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::AttachOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Protected Member Functions; virtual std::string defaultPerformerType ();  ;  Protected Member Functions inherited from sofa::gui::common::AttachOperation; void setSetting (sofa::component::setting::MouseButtonSetting *s) override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Protected Attributes inherited from sofa::gui::common::AttachOperation; sofa::gui::component::AttachBodyButtonSetting::SPtr setting;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  ;  Public Member Functions inherited from sofa::gui::common::AttachOperation;  AttachOperation (sofa::gui::component::AttachBodyButtonSetting::SPtr s=sofa::core::objectmodel::New< sofa::gui::component::AttachBodyButtonSetting >());  ;  ~AttachOperation () override;  ; void setStiffness (double s);  ; double getStiffness () const;  ; void setArrowSize (double s);  ; double getArrowSize () const;  ; void setShowFactorSize (double s);  ; double getSho,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_constraint_attach_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_constraint_attach_operation.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::common::FilesRecentlyOpenedManager Member List . This is the complete list of members for sofa::gui::common::FilesRecentlyOpenedManager, including all inherited members. filessofa::gui::common::FilesRecentlyOpenedManagerprotected; FilesRecentlyOpenedManager(const std::string &configFile)sofa::gui::common::FilesRecentlyOpenedManager; getFilename(unsigned int idx) constsofa::gui::common::FilesRecentlyOpenedManagerinlinevirtual; getFiles() constsofa::gui::common::FilesRecentlyOpenedManagerinline; getMaxNumFiles() constsofa::gui::common::FilesRecentlyOpenedManagerinline; getPath() constsofa::gui::common::FilesRecentlyOpenedManagerinline; max_num_filessofa::gui::common::FilesRecentlyOpenedManagerprotected; openFile(const std::string &file)sofa::gui::common::FilesRecentlyOpenedManagervirtual; pathsofa::gui::common::FilesRecentlyOpenedManagerprotected; setFiles(const type::vector< std::string > &f)sofa::gui::common::FilesRecentlyOpenedManagerinline; setPath(const std::string &p)sofa::gui::common::FilesRecentlyOpenedManager; writeFiles() constsofa::gui::common::FilesRecentlyOpenedManagerprotected; ~FilesRecentlyOpenedManager()sofa::gui::common::FilesRecentlyOpenedManagerinlinevirtual. Generated on Mon Nov 11 2024 03:19:18 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_files_recently_opened_manager-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_files_recently_opened_manager-members.html
Modifiability,config,configFile,﻿. SOFA API: sofa::gui::common::FilesRecentlyOpenedManager Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::common::FilesRecentlyOpenedManager Class Reference . #include <FilesRecentlyOpenedManager.h>. Inheritance diagram for sofa::gui::common::FilesRecentlyOpenedManager:. [legend]. Protected Attributes; const unsigned int max_num_files;  ; sofa::type::vector< std::string > files;  ; std::string path;  . Public Member Functions;  FilesRecentlyOpenedManager (const std::string &configFile);  ; virtual ~FilesRecentlyOpenedManager ();  ; virtual void openFile (const std::string &file);  ; virtual std::string getFilename (unsigned int idx) const;  ; unsigned int getMaxNumFiles () const;  ; const std::string & getPath () const;  ; void setPath (const std::string &p);  ; const sofa::type::vector< std::string > & getFiles () const;  ; void setFiles (const type::vector< std::string > &f);  . Protected Member Functions; void writeFiles () const;  . Attribute details. ◆ files. sofa::type::vector< std::string > sofa::gui::common::FilesRecentlyOpenedManager::files. protected . ◆ max_num_files. const unsigned int sofa::gui::common::FilesRecentlyOpenedManager::max_num_files. protected . ◆ path. std::string sofa::gui::common::FilesRecentlyOpenedManager::path. protected . Constructor details. ◆ FilesRecentlyOpenedManager(). sofa::gui::common::FilesRecentlyOpenedManager::FilesRecentlyOpenedManager ; (; const std::string & ; configFile). ◆ ~FilesRecentlyOpenedManager(). virtual sofa::gui::common::FilesRecentlyOpenedManager::~FilesRecentlyOpenedManager ; (; ). inlinevirtual . Function details. ◆ getFilename(). virtual std::string sofa::gui::common::FilesRecentlyOpenedManager::getFilename ; (; unsigned int ; idx); const. inlinevirtual . ◆ getFiles(). const sofa::type::vector< std::string >& sofa::gui::common::FilesRecentlyOpenedManage,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_files_recently_opened_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_files_recently_opened_manager.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::common::FixOperation Member List . This is the complete list of members for sofa::gui::common::FixOperation, including all inherited members. buttonsofa::gui::common::Operationprotected; configure(PickHandler *picker, MOUSE_BUTTON b)sofa::gui::common::Operationinlinevirtual; configure(PickHandler *picker, sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p) overridesofa::gui::common::FixOperationprotectedvirtual; createPerformer()sofa::gui::common::Operationvirtual; defaultPerformerType() overridesofa::gui::common::FixOperationprotectedvirtual; end()sofa::gui::common::Operationvirtual; endOperation()sofa::gui::common::Operationinlinevirtual; execution()sofa::gui::common::Operationinlinevirtual; FixOperation()sofa::gui::common::FixOperationinline; getDescription()sofa::gui::common::FixOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; getStiffness() constsofa::gui::common::FixOperationinlinevirtual; mbsettingsofa::gui::common::Operationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; setSetting(sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; setStiffness(double s)sofa::gui::common::FixOperationinline; settingsofa::gui::common::FixOperationprotected; start()sofa::gui::common::Operationvirtual; wait()sofa::gui::common::Operationinlinevirtual; ~FixOperation() overridesofa::gui::common::FixOperationinline; ~Operation()sofa::gui::common::Operationinlinevirtual. Generated on Mon Nov 11 2024 03:19:18 for SOFA API by 1.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_fix_operation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_fix_operation-members.html
Performance,perform,performer," API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::common::FixOperation Member List . This is the complete list of members for sofa::gui::common::FixOperation, including all inherited members. buttonsofa::gui::common::Operationprotected; configure(PickHandler *picker, MOUSE_BUTTON b)sofa::gui::common::Operationinlinevirtual; configure(PickHandler *picker, sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p) overridesofa::gui::common::FixOperationprotectedvirtual; createPerformer()sofa::gui::common::Operationvirtual; defaultPerformerType() overridesofa::gui::common::FixOperationprotectedvirtual; end()sofa::gui::common::Operationvirtual; endOperation()sofa::gui::common::Operationinlinevirtual; execution()sofa::gui::common::Operationinlinevirtual; FixOperation()sofa::gui::common::FixOperationinline; getDescription()sofa::gui::common::FixOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; getStiffness() constsofa::gui::common::FixOperationinlinevirtual; mbsettingsofa::gui::common::Operationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; setSetting(sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; setStiffness(double s)sofa::gui::common::FixOperationinline; settingsofa::gui::common::FixOperationprotected; start()sofa::gui::common::Operationvirtual; wait()sofa::gui::common::Operationinlinevirtual; ~FixOperation() overridesofa::gui::common::FixOperationinline; ~Operation()sofa::gui::common::Operationinlinevirtual. Generated on Mon Nov 11 2024 03:19:18 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_fix_operation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_fix_operation-members.html
Deployability,release,released,"onent::FixPickedParticleButtonSetting::SPtr setting;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  . Public Member Functions;  FixOperation ();  ;  ~FixOperation () override;  ; void setStiffness (double s);  ; virtual double getStiffness () const;  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Protected Member Functions; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  . Attribute details. ◆ setting. sofa::gui::component::FixPickedParticleButtonSetting::SPtr sofa::gui::common::FixOperation::setting. protected . Constructor details. ◆ FixO",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_fix_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_fix_operation.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::common::FixOperation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::common::FixOperation Class Reference . #include <MouseOperations.h>. Inheritance diagram for sofa::gui::common::FixOperation:. [legend]. Protected Attributes; sofa::gui::component::FixPickedParticleButtonSetting::SPtr setting;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  . Public Member Functions;  FixOperation ();  ;  ~FixOperation () override;  ; void setStiffness (double s);  ; virtual double getStiffness () const;  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Protected Member Functions; virtual std::string defaultPe",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_fix_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_fix_operation.html
Performance,perform,performer,"nt::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  . Public Member Functions;  FixOperation ();  ;  ~FixOperation () override;  ; void setStiffness (double s);  ; virtual double getStiffness () const;  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Protected Member Functions; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  . Attribute details. ◆ setting. sofa::gui::component::FixPickedParticleButtonSetting::SPtr sofa::gui::common::FixOperation::setting. protected . Constructor details. ◆ FixOperation(). sofa::gui::common::FixOperation::FixOperation ; (; ). inline . ◆ ~FixOperation(). sofa::gui::common::FixOperation::~FixOperation ; (; ). inlineoverride .",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_fix_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_fix_operation.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::common::GUIManager Member List . This is the complete list of members for sofa::gui::common::GUIManager, including all inherited members. CenterWindow()sofa::gui::common::GUIManagerstatic; closeGUI()sofa::gui::common::GUIManagerstatic; createGUI(sofa::simulation::NodeSPtr groot=nullptr, const char *filename=nullptr)sofa::gui::common::GUIManagerstatic; CreateGUIFn typedefsofa::gui::common::GUIManager; currentArgumentParsersofa::gui::common::GUIManagerprotectedstatic; currentGUIsofa::gui::common::GUIManagerprotectedstatic; CurrentSimulation()sofa::gui::common::GUIManagerstatic; GetCurrentGUIName()sofa::gui::common::GUIManagerstatic; getGUI()sofa::gui::common::GUIManagerstatic; GetGUICreator(const char *name=nullptr)sofa::gui::common::GUIManagerprotectedstatic; GetValidGUIName()sofa::gui::common::GUIManagerstatic; guiCreatorssofa::gui::common::GUIManagerprotectedstatic; guiOptionssofa::gui::common::GUIManagerprotectedstatic; Init(const char *argv0, const char *name="""")sofa::gui::common::GUIManagerstatic; ListSupportedGUI()sofa::gui::common::GUIManagerstatic; ListSupportedGUI(char separator)sofa::gui::common::GUIManagerstatic; MainLoop(sofa::simulation::NodeSPtr groot=nullptr, const char *filename=nullptr)sofa::gui::common::GUIManagerstatic; Redraw()sofa::gui::common::GUIManagerstatic; RegisterGUI(const char *name, CreateGUIFn *creator, RegisterGUIParameters *parameters=nullptr, int priority=0)sofa::gui::common::GUIManagerstatic; RegisterGUIParameters typedefsofa::gui::common::GUIManager; RegisterParameters(ArgumentParser *parser)sofa::gui::common::GUIManagerstatic; SaveScreenshot(const char *filename)sofa::gui::common::GUIManagerstatic; SetDimension(int width, int height)sofa::gui::common::GUIManagerstatic; SetFullScreen()sofa::gui::common::GUIManagerstatic; SetScene(sofa::simulation::NodeSPtr groot, const char *filename=nullptr, bool temporaryFile=false)sofa::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_g_u_i_manager-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_g_u_i_manager-members.html
Security,access,access,"tic std::list< GUICreator > guiCreators;  ; static std::vector< std::string > guiOptions;  ; static BaseGUI * currentGUI = nullptr;  ; static std::string valid_guiname = """";  ; static ArgumentParser * currentArgumentParser = nullptr;  . Static Public Member Functions; static int Init (const char *argv0, const char *name="""");  ; static int RegisterGUI (const char *name, CreateGUIFn *creator, RegisterGUIParameters *parameters=nullptr, int priority=0);  Set parameter for a gui creation and Store in the guiCreators list. More...;  ; static const char * GetValidGUIName ();  ; static const std::string & GetCurrentGUIName ();  ; static std::vector< std::string > ListSupportedGUI ();  ; static std::string ListSupportedGUI (char separator);  ; static void RegisterParameters (ArgumentParser *parser);  ; static int createGUI (sofa::simulation::NodeSPtr groot=nullptr, const char *filename=nullptr);  ; static void closeGUI ();  ; static BaseGUI * getGUI ();  ; Static methods for direct access to GUI; static int MainLoop (sofa::simulation::NodeSPtr groot=nullptr, const char *filename=nullptr);  ; static void Redraw ();  ; static sofa::simulation::Node * CurrentSimulation ();  ; static void SetScene (sofa::simulation::NodeSPtr groot, const char *filename=nullptr, bool temporaryFile=false);  ; static void SetDimension (int width, int height);  ; static void SetFullScreen ();  ; static void CenterWindow ();  ; static void SaveScreenshot (const char *filename);  . Static Protected Member Functions; static GUICreator * GetGUICreator (const char *name=nullptr);  Comparison between guiname passed as parameter and all guiname store in guiCreators list. More...;  . Attribute details. ◆ currentArgumentParser. ArgumentParser * sofa::gui::common::GUIManager::currentArgumentParser = nullptr. staticprotected . ◆ currentGUI. BaseGUI * sofa::gui::common::GUIManager::currentGUI = nullptr. staticprotected . ◆ guiCreators. std::list< GUIManager::GUICreator > sofa::gui::common::GUIManager::guiCreato",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_g_u_i_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_g_u_i_manager.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::common::InciseOperation Member List . This is the complete list of members for sofa::gui::common::InciseOperation, including all inherited members. buttonsofa::gui::common::Operationprotected; configure(PickHandler *picker, MOUSE_BUTTON b)sofa::gui::common::Operationinlinevirtual; configure(PickHandler *picker, sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p)sofa::gui::common::Operationvirtual; cptsofa::gui::common::InciseOperationprotected; createPerformer()sofa::gui::common::Operationvirtual; defaultPerformerType()sofa::gui::common::Operationinlinevirtual; end() overridesofa::gui::common::InciseOperationvirtual; endOperation() overridesofa::gui::common::InciseOperationvirtual; execution() overridesofa::gui::common::InciseOperationvirtual; finishIncisionsofa::gui::common::InciseOperationprotected; getCompleteIncision()sofa::gui::common::InciseOperationinlinevirtual; getDescription()sofa::gui::common::InciseOperationinlinestatic; getId()sofa::gui::common::Operationinline; getIncisionMethod() constsofa::gui::common::InciseOperationinlinevirtual; getKeepPoint()sofa::gui::common::InciseOperationinlinevirtual; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; getSnapingBorderValue() constsofa::gui::common::InciseOperationinlinevirtual; getSnapingValue() constsofa::gui::common::InciseOperationinlinevirtual; InciseOperation()sofa::gui::common::InciseOperationinline; keepPointsofa::gui::common::InciseOperationprotected; mbsettingsofa::gui::common::Operationprotected; methodsofa::gui::common::InciseOperationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; performersofa::gui::common::Operation; pickHandlesof",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_incise_operation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_incise_operation-members.html
Performance,perform,performer," buttonsofa::gui::common::Operationprotected; configure(PickHandler *picker, MOUSE_BUTTON b)sofa::gui::common::Operationinlinevirtual; configure(PickHandler *picker, sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p)sofa::gui::common::Operationvirtual; cptsofa::gui::common::InciseOperationprotected; createPerformer()sofa::gui::common::Operationvirtual; defaultPerformerType()sofa::gui::common::Operationinlinevirtual; end() overridesofa::gui::common::InciseOperationvirtual; endOperation() overridesofa::gui::common::InciseOperationvirtual; execution() overridesofa::gui::common::InciseOperationvirtual; finishIncisionsofa::gui::common::InciseOperationprotected; getCompleteIncision()sofa::gui::common::InciseOperationinlinevirtual; getDescription()sofa::gui::common::InciseOperationinlinestatic; getId()sofa::gui::common::Operationinline; getIncisionMethod() constsofa::gui::common::InciseOperationinlinevirtual; getKeepPoint()sofa::gui::common::InciseOperationinlinevirtual; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; getSnapingBorderValue() constsofa::gui::common::InciseOperationinlinevirtual; getSnapingValue() constsofa::gui::common::InciseOperationinlinevirtual; InciseOperation()sofa::gui::common::InciseOperationinline; keepPointsofa::gui::common::InciseOperationprotected; mbsettingsofa::gui::common::Operationprotected; methodsofa::gui::common::InciseOperationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; performersofa::gui::common::Operation; pickHandlesof",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_incise_operation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_incise_operation-members.html
Deployability,release,released,"napingBorderValue;  ; int snapingValue;  ; int cpt;  ; bool finishIncision;  ; bool keepPoint;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  . Public Member Functions;  InciseOperation ();  ;  ~InciseOperation () override;  ; void start () override;  ; void execution () override;  This function is called each time the mouse is clicked. More...;  ; void end () override;  ; void endOperation () override;  This function is called after each mouse click. More...;  ; void setIncisionMethod (int m);  ; void setSnapingBorderValue (int m);  ; void setSnapingValue (int m);  ; void setCompleteIncision (bool m);  ; void setKeepPoint (bool m);  ; virtual int getIncisionMethod () const;  ; virtual int getSnapingBorderValue () const;  ; virtual int getSnapingValue () const;  ; virtual bool getCompleteIncision ();  ; virtual bool getKeepPoint ();  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual std::string defaultPerformerType ();  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; virtual void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p);  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Additional In",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_incise_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_incise_operation.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::common::InciseOperation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::gui::common::InciseOperation Class Reference . #include <MouseOperations.h>. Inheritance diagram for sofa::gui::common::InciseOperation:. [legend]. Protected Attributes; sofa::gui::component::performer::InteractionPerformer * startPerformer;  ; int method;  ; int snapingBorderValue;  ; int snapingValue;  ; int cpt;  ; bool finishIncision;  ; bool keepPoint;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  . Public Member Functions;  InciseOperation ();  ;  ~InciseOperation () override;  ; void start () override;  ; void execution () override;  This function is called each time the mouse is clicked. More...;  ; void end () override;  ; void endOperation () override;  This function is called after each mouse click. More...;  ; void setIncisionMethod (int m);  ; void setSnapingBorderValue (int m);  ; void setSnapingValue (int m);  ; void setCompleteIncision (bool m);  ; void setKeepPoint (bool m);  ; virtual int getIncisionMethod () const;  ; virtual int getSnapingBorderValue () const;  ; virtual int getSnapingValue () const;  ; virtual bool getCompleteIncision ();  ; virtual bool getKeepPoint ();  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s)",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_incise_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_incise_operation.html
Performance,perform,performer,"﻿. SOFA API: sofa::gui::common::InciseOperation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::gui::common::InciseOperation Class Reference . #include <MouseOperations.h>. Inheritance diagram for sofa::gui::common::InciseOperation:. [legend]. Protected Attributes; sofa::gui::component::performer::InteractionPerformer * startPerformer;  ; int method;  ; int snapingBorderValue;  ; int snapingValue;  ; int cpt;  ; bool finishIncision;  ; bool keepPoint;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  . Public Member Functions;  InciseOperation ();  ;  ~InciseOperation () override;  ; void start () override;  ; void execution () override;  This function is called each time the mouse is clicked. More...;  ; void end () override;  ; void endOperation () override;  This function is called after each mouse click. More...;  ; void setIncisionMethod (int m);  ; void setSnapingBorderValue (int m);  ; void setSnapingValue (int m);  ; void setCompleteIncision (bool m);  ; void setKeepPoint (bool m);  ; virtual int getIncisionMethod () const;  ; virtual int getSnapingBorderValue () const;  ; virtual int getSnapingValue () const;  ; virtual bool getCompleteIncision ();  ; virtual bool getKeepPoint ();  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s)",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_incise_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_incise_operation.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::common::Operation Member List . This is the complete list of members for sofa::gui::common::Operation, including all inherited members. buttonsofa::gui::common::Operationprotected; configure(PickHandler *picker, MOUSE_BUTTON b)sofa::gui::common::Operationinlinevirtual; configure(PickHandler *picker, sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p)sofa::gui::common::Operationvirtual; createPerformer()sofa::gui::common::Operationvirtual; defaultPerformerType()sofa::gui::common::Operationinlinevirtual; end()sofa::gui::common::Operationvirtual; endOperation()sofa::gui::common::Operationinlinevirtual; execution()sofa::gui::common::Operationinlinevirtual; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; mbsettingsofa::gui::common::Operationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; OperationFactory classsofa::gui::common::Operationfriend; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; setSetting(sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; start()sofa::gui::common::Operationvirtual; wait()sofa::gui::common::Operationinlinevirtual; ~Operation()sofa::gui::common::Operationinlinevirtual. Generated on Mon Nov 11 2024 03:19:18 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_operation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_operation-members.html
Performance,perform,performer,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::common::Operation Member List . This is the complete list of members for sofa::gui::common::Operation, including all inherited members. buttonsofa::gui::common::Operationprotected; configure(PickHandler *picker, MOUSE_BUTTON b)sofa::gui::common::Operationinlinevirtual; configure(PickHandler *picker, sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p)sofa::gui::common::Operationvirtual; createPerformer()sofa::gui::common::Operationvirtual; defaultPerformerType()sofa::gui::common::Operationinlinevirtual; end()sofa::gui::common::Operationvirtual; endOperation()sofa::gui::common::Operationinlinevirtual; execution()sofa::gui::common::Operationinlinevirtual; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; mbsettingsofa::gui::common::Operationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; OperationFactory classsofa::gui::common::Operationfriend; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; setSetting(sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; start()sofa::gui::common::Operationvirtual; wait()sofa::gui::common::Operationinlinevirtual; ~Operation()sofa::gui::common::Operationinlinevirtual. Generated on Mon Nov 11 2024 03:19:18 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_operation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_operation-members.html
Deployability,release,released,"tatic Public Member Functions |; Friends |; List of all members . sofa::gui::common::Operation Class Reference . #include <MouseOperations.h>. Inheritance diagram for sofa::gui::common::Operation:. [legend]. Public Attributes; sofa::gui::component::performer::InteractionPerformer * performer;  . Protected Attributes; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  . Public Member Functions;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual std::string defaultPerformerType ();  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; virtual void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p);  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Friends; class OperationFactory;  . Attribute details. ◆ button. MOUSE_BUTTON sofa::gui::common::Operation::button. protected . ◆ mbsetting. sofa::component::setting::MouseButtonSetting::SPtr sofa::gui::common::Operation::mbsetting. protected . ◆ performer. sofa::gui::component::performer::InteractionPerformer* sofa::gui::common::Operation::performer. ◆ pickHandle. PickHandler* sofa::gui::common::Operation::pickHandle. protected . Constructor details. ◆ Operation(). sofa::gui::common::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_operation.html
Modifiability,config,configure,"﻿. SOFA API: sofa::gui::common::Operation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Friends |; List of all members . sofa::gui::common::Operation Class Reference . #include <MouseOperations.h>. Inheritance diagram for sofa::gui::common::Operation:. [legend]. Public Attributes; sofa::gui::component::performer::InteractionPerformer * performer;  . Protected Attributes; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  . Public Member Functions;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual std::string defaultPerformerType ();  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; virtual void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p);  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Friends; class OperationFactory;  . Attribute details. ◆ button. MOUSE_BUTTON sofa::gui::common::Operation::button. protected . ◆ mbsetting. sofa::component::setting::MouseButtonSetting::SPtr sofa::gui::common::Operation::mbsetting. protected . ◆ performer. sofa::gui::component::perf",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_operation.html
Performance,perform,performer,"﻿. SOFA API: sofa::gui::common::Operation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Friends |; List of all members . sofa::gui::common::Operation Class Reference . #include <MouseOperations.h>. Inheritance diagram for sofa::gui::common::Operation:. [legend]. Public Attributes; sofa::gui::component::performer::InteractionPerformer * performer;  . Protected Attributes; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  . Public Member Functions;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual std::string defaultPerformerType ();  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; virtual void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p);  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Friends; class OperationFactory;  . Attribute details. ◆ button. MOUSE_BUTTON sofa::gui::common::Operation::button. protected . ◆ mbsetting. sofa::component::setting::MouseButtonSetting::SPtr sofa::gui::common::Operation::mbsetting. protected . ◆ performer. sofa::gui::component::perf",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_operation.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::common::OperationCreator Member List . This is the complete list of members for sofa::gui::common::OperationCreator, including all inherited members. create() const =0sofa::gui::common::OperationCreatorpure virtual; getDescription() const =0sofa::gui::common::OperationCreatorpure virtual; ~OperationCreator()sofa::gui::common::OperationCreatorinlinevirtual. Generated on Mon Nov 11 2024 03:19:18 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_operation_creator-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_operation_creator-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::common::OperationFactory Member List . This is the complete list of members for sofa::gui::common::OperationFactory, including all inherited members. GetDescription(const std::string &name)sofa::gui::common::OperationFactoryinlinestatic; getInstance()sofa::gui::common::OperationFactoryinlinestatic; Instanciate(const std::string &name)sofa::gui::common::OperationFactoryinlinestatic; RegisterStorage typedefsofa::gui::common::OperationFactory; registrysofa::gui::common::OperationFactory. Generated on Mon Nov 11 2024 03:19:18 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_operation_factory-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_operation_factory-members.html
Deployability,update,updateRay,"stPicked()sofa::gui::common::PickHandlerinline; getOperation(MOUSE_BUTTON button)sofa::gui::common::PickHandlerinline; handleMouseEvent(MOUSE_STATUS status, MOUSE_BUTTON button)sofa::gui::common::PickHandler; init(core::objectmodel::BaseNode *root)sofa::gui::common::PickHandler; instanceComponentssofa::gui::common::PickHandlerprotected; interactionsofa::gui::common::PickHandlerprotected; interactorInUsesofa::gui::common::PickHandlerprotected; lastPickedsofa::gui::common::PickHandlerprotected; m_defaultLengthsofa::gui::common::PickHandlerprotected; mouseButtonsofa::gui::common::PickHandlerprotected; mouseCollisionsofa::gui::common::PickHandlerprotected; mouseContainersofa::gui::common::PickHandlerprotected; mouseNodesofa::gui::common::PickHandlerprotected; mousePositionsofa::gui::common::PickHandlerprotected; mouseStatussofa::gui::common::PickHandlerprotected; needToCastRay()sofa::gui::common::PickHandlerprotected; operationssofa::gui::common::PickHandlerprotected; PickHandler(double defaultLength=1000000)sofa::gui::common::PickHandler; PickingMethod enum namesofa::gui::common::PickHandler; pickingMethodsofa::gui::common::PickHandlerprotected; RAY_CASTING enum valuesofa::gui::common::PickHandler; renderCallbacksofa::gui::common::PickHandlerprotected; reset()sofa::gui::common::PickHandler; SELECTION_BUFFER enum valuesofa::gui::common::PickHandler; setColourRenderCallback(CallBackRender *colourRender)sofa::gui::common::PickHandlerinline; setCompatibleInteractor()sofa::gui::common::PickHandlerprotected; setPickingMethod(PickingMethod method)sofa::gui::common::PickHandlerinline; unload()sofa::gui::common::PickHandler; updateMouse2D(MousePosition mouse)sofa::gui::common::PickHandlerinline; updateRay(const sofa::type::Vec3 &position, const sofa::type::Vec3 &orientation)sofa::gui::common::PickHandler; useCollisionssofa::gui::common::PickHandlerprotected; useSelectionBufferMethod() constsofa::gui::common::PickHandlerinline; ~PickHandler()sofa::gui::common::PickHandlervirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_pick_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_pick_handler-members.html
Energy Efficiency,allocate,allocateSelectionBuffer," activateRay(int width, int height, core::objectmodel::BaseNode *root)sofa::gui::common::PickHandler; addCallBack(CallBackPicker *c)sofa::gui::common::PickHandlerinline; allocateSelectionBuffer(int width, int height)sofa::gui::common::PickHandlervirtual; callbackssofa::gui::common::PickHandlerprotected; changeOperation(sofa::component::setting::MouseButtonSetting *setting)sofa::gui::common::PickHandler; changeOperation(MOUSE_BUTTON button, const std::string &op)sofa::gui::common::PickHandler; clearCallBacks()sofa::gui::common::PickHandlerinline; deactivateRay()sofa::gui::common::PickHandler; destroySelectionBuffer()sofa::gui::common::PickHandlervirtual; findCollision()sofa::gui::common::PickHandlerprotectedvirtual; findCollisionUsingBruteForce(const type::Vec3 &origin, const type::Vec3 &direction, double maxLength, core::objectmodel::BaseNode *root)sofa::gui::common::PickHandlerstatic; findCollisionUsingBruteForce()sofa::gui::common::PickHandlerprotected; findCollisionUsingColourCoding(const type::Vec3 &origin, const type::Vec3 &direction)sofa::gui::common::PickHandlervirtual; findCollisionUsingColourCoding()sofa::gui::common::PickHandlerprotected; findCollisionUsingPipeline()sofa::gui::common::PickHandlerprotected; getCallBackPicker()sofa::gui::common::PickHandlerinline; getInteraction()sofa::gui::common::PickHandler; getLastPicked()sofa::gui::common::PickHandlerinline; getOperation(MOUSE_BUTTON button)sofa::gui::common::PickHandlerinline; handleMouseEvent(MOUSE_STATUS status, MOUSE_BUTTON button)sofa::gui::common::PickHandler; init(core::objectmodel::BaseNode *root)sofa::gui::common::PickHandler; instanceComponentssofa::gui::common::PickHandlerprotected; interactionsofa::gui::common::PickHandlerprotected; interactorInUs",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_pick_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_pick_handler-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::common::PickHandler Member List . This is the complete list of members for sofa::gui::common::PickHandler, including all inherited members. activateRay(int width, int height, core::objectmodel::BaseNode *root)sofa::gui::common::PickHandler; addCallBack(CallBackPicker *c)sofa::gui::common::PickHandlerinline; allocateSelectionBuffer(int width, int height)sofa::gui::common::PickHandlervirtual; callbackssofa::gui::common::PickHandlerprotected; changeOperation(sofa::component::setting::MouseButtonSetting *setting)sofa::gui::common::PickHandler; changeOperation(MOUSE_BUTTON button, const std::string &op)sofa::gui::common::PickHandler; clearCallBacks()sofa::gui::common::PickHandlerinline; deactivateRay()sofa::gui::common::PickHandler; destroySelectionBuffer()sofa::gui::common::PickHandlervirtual; findCollision()sofa::gui::common::PickHandlerprotectedvirtual; findCollisionUsingBruteForce(const type::Vec3 &origin, const type::Vec3 &direction, double maxLength, core::objectmodel::BaseNode *root)sofa::gui::common::PickHandlerstatic; findCollisionUsingBruteForce()sofa::gui::common::PickHandlerprotected; findCollisionUsingColourCoding(const type::Vec3 &origin, const type::Vec3 &direction)sofa::gui::common::PickHandlervirtual; findCollisionUsingColourCoding()sofa::gui::common::PickHandlerprotected; findCollisionUsingPipeline()sofa::gui::common::PickHandlerprotected; getCallBackPicker()sofa::gui::common::PickHandlerinline; getInteraction()sofa::gui::common::PickHandler; getLastPicked()sofa::gui::common::PickHandlerinline; getOperation(MOUSE_BUTTON button)sofa::gui::common::PickHandlerinline; handleMouseEvent(MOUSE_STATUS status, MOUSE_BUTTON button)sofa::gui::common::PickHandler; init(core::objectmodel::BaseNode *root)sofa::gui::common::PickHandler; instanceComponentssofa::gui::common::PickHandlerprotected; interactionsofa::gui::common::PickHandlerprotected; interactorInUs",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_pick_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_pick_handler-members.html
Usability,clear,clearCallBacks," activateRay(int width, int height, core::objectmodel::BaseNode *root)sofa::gui::common::PickHandler; addCallBack(CallBackPicker *c)sofa::gui::common::PickHandlerinline; allocateSelectionBuffer(int width, int height)sofa::gui::common::PickHandlervirtual; callbackssofa::gui::common::PickHandlerprotected; changeOperation(sofa::component::setting::MouseButtonSetting *setting)sofa::gui::common::PickHandler; changeOperation(MOUSE_BUTTON button, const std::string &op)sofa::gui::common::PickHandler; clearCallBacks()sofa::gui::common::PickHandlerinline; deactivateRay()sofa::gui::common::PickHandler; destroySelectionBuffer()sofa::gui::common::PickHandlervirtual; findCollision()sofa::gui::common::PickHandlerprotectedvirtual; findCollisionUsingBruteForce(const type::Vec3 &origin, const type::Vec3 &direction, double maxLength, core::objectmodel::BaseNode *root)sofa::gui::common::PickHandlerstatic; findCollisionUsingBruteForce()sofa::gui::common::PickHandlerprotected; findCollisionUsingColourCoding(const type::Vec3 &origin, const type::Vec3 &direction)sofa::gui::common::PickHandlervirtual; findCollisionUsingColourCoding()sofa::gui::common::PickHandlerprotected; findCollisionUsingPipeline()sofa::gui::common::PickHandlerprotected; getCallBackPicker()sofa::gui::common::PickHandlerinline; getInteraction()sofa::gui::common::PickHandler; getLastPicked()sofa::gui::common::PickHandlerinline; getOperation(MOUSE_BUTTON button)sofa::gui::common::PickHandlerinline; handleMouseEvent(MOUSE_STATUS status, MOUSE_BUTTON button)sofa::gui::common::PickHandler; init(core::objectmodel::BaseNode *root)sofa::gui::common::PickHandler; instanceComponentssofa::gui::common::PickHandlerprotected; interactionsofa::gui::common::PickHandlerprotected; interactorInUs",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_pick_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_pick_handler-members.html
Deployability,update,updateRay,"ponentMouseInteraction * > instanceComponents;  ; BodyPicked lastPicked;  ; bool useCollisions;  ; type::fixed_array< Operation *, NONE > operations;  ; type::vector< CallBackPicker * > callbacks;  ; CallBackRender * renderCallback;  ; PickingMethod pickingMethod;  ; double m_defaultLength;  Default length of the ray. Set by constructor. More...;  . Public Member Functions;  PickHandler (double defaultLength=1000000);  ; virtual ~PickHandler ();  ; void activateRay (int width, int height, core::objectmodel::BaseNode *root);  ; void deactivateRay ();  ; virtual void allocateSelectionBuffer (int width, int height);  ; virtual void destroySelectionBuffer ();  ; void setPickingMethod (PickingMethod method);  ; bool useSelectionBufferMethod () const;  ; void updateRay (const sofa::type::Vec3 &position, const sofa::type::Vec3 &orientation);  ; void handleMouseEvent (MOUSE_STATUS status, MOUSE_BUTTON button);  ; void init (core::objectmodel::BaseNode *root);  ; void reset ();  ; void unload ();  ; void setColourRenderCallback (CallBackRender *colourRender);  ; void updateMouse2D (MousePosition mouse);  ; Operation * getOperation (MOUSE_BUTTON button);  ; Operation * changeOperation (sofa::component::setting::MouseButtonSetting *setting);  ; Operation * changeOperation (MOUSE_BUTTON button, const std::string &op);  ; void addCallBack (CallBackPicker *c);  ; type::vector< CallBackPicker * > getCallBackPicker ();  ; void clearCallBacks ();  ; virtual BodyPicked findCollisionUsingColourCoding (const type::Vec3 &origin, const type::Vec3 &direction);  ; ComponentMouseInteraction * getInteraction ();  ; BodyPicked * getLastPicked ();  . Static Public Member Functions; static BodyPicked findCollisionUsingBruteForce (const type::Vec3 &origin, const type::Vec3 &direction, double maxLength, core::objectmodel::BaseNode *root);  . Protected Member Functions; virtual BodyPicked findCollision ();  ; BodyPicked findCollisionUsingPipeline ();  ; BodyPicked findCollisionUsingBruteForce ();  ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_pick_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_pick_handler.html
Energy Efficiency,allocate,allocateSelectionBuffer,"ponentMouseInteraction * > instanceComponents;  ; BodyPicked lastPicked;  ; bool useCollisions;  ; type::fixed_array< Operation *, NONE > operations;  ; type::vector< CallBackPicker * > callbacks;  ; CallBackRender * renderCallback;  ; PickingMethod pickingMethod;  ; double m_defaultLength;  Default length of the ray. Set by constructor. More...;  . Public Member Functions;  PickHandler (double defaultLength=1000000);  ; virtual ~PickHandler ();  ; void activateRay (int width, int height, core::objectmodel::BaseNode *root);  ; void deactivateRay ();  ; virtual void allocateSelectionBuffer (int width, int height);  ; virtual void destroySelectionBuffer ();  ; void setPickingMethod (PickingMethod method);  ; bool useSelectionBufferMethod () const;  ; void updateRay (const sofa::type::Vec3 &position, const sofa::type::Vec3 &orientation);  ; void handleMouseEvent (MOUSE_STATUS status, MOUSE_BUTTON button);  ; void init (core::objectmodel::BaseNode *root);  ; void reset ();  ; void unload ();  ; void setColourRenderCallback (CallBackRender *colourRender);  ; void updateMouse2D (MousePosition mouse);  ; Operation * getOperation (MOUSE_BUTTON button);  ; Operation * changeOperation (sofa::component::setting::MouseButtonSetting *setting);  ; Operation * changeOperation (MOUSE_BUTTON button, const std::string &op);  ; void addCallBack (CallBackPicker *c);  ; type::vector< CallBackPicker * > getCallBackPicker ();  ; void clearCallBacks ();  ; virtual BodyPicked findCollisionUsingColourCoding (const type::Vec3 &origin, const type::Vec3 &direction);  ; ComponentMouseInteraction * getInteraction ();  ; BodyPicked * getLastPicked ();  . Static Public Member Functions; static BodyPicked findCollisionUsingBruteForce (const type::Vec3 &origin, const type::Vec3 &direction, double maxLength, core::objectmodel::BaseNode *root);  . Protected Member Functions; virtual BodyPicked findCollision ();  ; BodyPicked findCollisionUsingPipeline ();  ; BodyPicked findCollisionUsingBruteForce ();  ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_pick_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_pick_handler.html
Usability,clear,clearCallBacks,"ponentMouseInteraction * > instanceComponents;  ; BodyPicked lastPicked;  ; bool useCollisions;  ; type::fixed_array< Operation *, NONE > operations;  ; type::vector< CallBackPicker * > callbacks;  ; CallBackRender * renderCallback;  ; PickingMethod pickingMethod;  ; double m_defaultLength;  Default length of the ray. Set by constructor. More...;  . Public Member Functions;  PickHandler (double defaultLength=1000000);  ; virtual ~PickHandler ();  ; void activateRay (int width, int height, core::objectmodel::BaseNode *root);  ; void deactivateRay ();  ; virtual void allocateSelectionBuffer (int width, int height);  ; virtual void destroySelectionBuffer ();  ; void setPickingMethod (PickingMethod method);  ; bool useSelectionBufferMethod () const;  ; void updateRay (const sofa::type::Vec3 &position, const sofa::type::Vec3 &orientation);  ; void handleMouseEvent (MOUSE_STATUS status, MOUSE_BUTTON button);  ; void init (core::objectmodel::BaseNode *root);  ; void reset ();  ; void unload ();  ; void setColourRenderCallback (CallBackRender *colourRender);  ; void updateMouse2D (MousePosition mouse);  ; Operation * getOperation (MOUSE_BUTTON button);  ; Operation * changeOperation (sofa::component::setting::MouseButtonSetting *setting);  ; Operation * changeOperation (MOUSE_BUTTON button, const std::string &op);  ; void addCallBack (CallBackPicker *c);  ; type::vector< CallBackPicker * > getCallBackPicker ();  ; void clearCallBacks ();  ; virtual BodyPicked findCollisionUsingColourCoding (const type::Vec3 &origin, const type::Vec3 &direction);  ; ComponentMouseInteraction * getInteraction ();  ; BodyPicked * getLastPicked ();  . Static Public Member Functions; static BodyPicked findCollisionUsingBruteForce (const type::Vec3 &origin, const type::Vec3 &direction, double maxLength, core::objectmodel::BaseNode *root);  . Protected Member Functions; virtual BodyPicked findCollision ();  ; BodyPicked findCollisionUsingPipeline ();  ; BodyPicked findCollisionUsingBruteForce ();  ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_pick_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_pick_handler.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::common::RegisterOperation Member List . This is the complete list of members for sofa::gui::common::RegisterOperation, including all inherited members. add()sofa::gui::common::RegisterOperationinline; creatorsofa::gui::common::RegisterOperation; namesofa::gui::common::RegisterOperation; RegisterOperation(const std::string &n)sofa::gui::common::RegisterOperationinline. Generated on Mon Nov 11 2024 03:19:18 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_register_operation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_register_operation-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::common::StartNavigationOperation Member List . This is the complete list of members for sofa::gui::common::StartNavigationOperation, including all inherited members. buttonsofa::gui::common::Operationprotected; configure(PickHandler *picker, MOUSE_BUTTON b)sofa::gui::common::Operationinlinevirtual; configure(PickHandler *picker, sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p) overridesofa::gui::common::StartNavigationOperationprotectedvirtual; createPerformer()sofa::gui::common::Operationvirtual; defaultPerformerType() overridesofa::gui::common::StartNavigationOperationprotectedvirtual; end()sofa::gui::common::Operationvirtual; endOperation()sofa::gui::common::Operationinlinevirtual; execution()sofa::gui::common::Operationinlinevirtual; getDescription()sofa::gui::common::StartNavigationOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; mbsettingsofa::gui::common::Operationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; setSetting(sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; settingsofa::gui::common::StartNavigationOperationprotected; start()sofa::gui::common::Operationvirtual; StartNavigationOperation()sofa::gui::common::StartNavigationOperationinline; wait()sofa::gui::common::Operationinlinevirtual; ~Operation()sofa::gui::common::Operationinlinevirtual. Generated on Mon Nov 11 2024 03:19:18 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_start_navigation_operation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_start_navigation_operation-members.html
Performance,perform,performer,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::common::StartNavigationOperation Member List . This is the complete list of members for sofa::gui::common::StartNavigationOperation, including all inherited members. buttonsofa::gui::common::Operationprotected; configure(PickHandler *picker, MOUSE_BUTTON b)sofa::gui::common::Operationinlinevirtual; configure(PickHandler *picker, sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p) overridesofa::gui::common::StartNavigationOperationprotectedvirtual; createPerformer()sofa::gui::common::Operationvirtual; defaultPerformerType() overridesofa::gui::common::StartNavigationOperationprotectedvirtual; end()sofa::gui::common::Operationvirtual; endOperation()sofa::gui::common::Operationinlinevirtual; execution()sofa::gui::common::Operationinlinevirtual; getDescription()sofa::gui::common::StartNavigationOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; mbsettingsofa::gui::common::Operationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; setSetting(sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; settingsofa::gui::common::StartNavigationOperationprotected; start()sofa::gui::common::Operationvirtual; StartNavigationOperation()sofa::gui::common::StartNavigationOperationinline; wait()sofa::gui::common::Operationinlinevirtual; ~Operation()sofa::gui::common::Operationinlinevirtual. Generated on Mon Nov 11 2024 03:19:18 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_start_navigation_operation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_start_navigation_operation-members.html
Deployability,release,released,"r sofa::gui::common::StartNavigationOperation:. [legend]. Protected Attributes; sofa::gui::component::StartNavigationButtonSetting::SPtr setting;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  . Public Member Functions;  StartNavigationOperation ();  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Protected Member Functions; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  . Attribute details. ◆ setting. sofa::gui::component::StartNavigationButtonSetting::SPtr sofa::gui::common::StartNavigationOperation::setting. protected . Constructor detai",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_start_navigation_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_start_navigation_operation.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::common::StartNavigationOperation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::common::StartNavigationOperation Class Reference . #include <MouseOperations.h>. Inheritance diagram for sofa::gui::common::StartNavigationOperation:. [legend]. Protected Attributes; sofa::gui::component::StartNavigationButtonSetting::SPtr setting;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  . Public Member Functions;  StartNavigationOperation ();  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Protected Member Functions; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_start_navigation_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_start_navigation_operation.html
Performance,perform,performer,"butes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  . Public Member Functions;  StartNavigationOperation ();  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Protected Member Functions; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  . Attribute details. ◆ setting. sofa::gui::component::StartNavigationButtonSetting::SPtr sofa::gui::common::StartNavigationOperation::setting. protected . Constructor details. ◆ StartNavigationOperation(). sofa::gui::common::StartNavigationOperation::StartNavigationOperation ; (; ). inline . Function details. ◆ configurePerformer(). vo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_start_navigation_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_start_navigation_operation.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::common::TopologyOperation Member List . This is the complete list of members for sofa::gui::common::TopologyOperation, including all inherited members. buttonsofa::gui::common::Operationprotected; configure(PickHandler *picker, MOUSE_BUTTON b)sofa::gui::common::Operationinlinevirtual; configure(PickHandler *picker, sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p)sofa::gui::common::Operationvirtual; createPerformer()sofa::gui::common::Operationvirtual; defaultPerformerType()sofa::gui::common::Operationinlinevirtual; end() overridesofa::gui::common::TopologyOperationvirtual; endOperation() overridesofa::gui::common::TopologyOperationvirtual; execution() overridesofa::gui::common::TopologyOperationvirtual; firstClicksofa::gui::common::TopologyOperationprotected; getDescription()sofa::gui::common::TopologyOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; getScale() constsofa::gui::common::TopologyOperationinlinevirtual; getTopologicalOperation() constsofa::gui::common::TopologyOperationinlinevirtual; getVolumicMesh() constsofa::gui::common::TopologyOperationinlinevirtual; mbsettingsofa::gui::common::Operationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; scalesofa::gui::common::TopologyOperationprotected; setScale(double s)sofa::gui::common::TopologyOperationinline; setSetting(sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; setTopologicalOperation(int m)sofa::gui::common::TopologyOperationinline; setVolumicM",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_topology_operation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_topology_operation-members.html
Performance,perform,performer," buttonsofa::gui::common::Operationprotected; configure(PickHandler *picker, MOUSE_BUTTON b)sofa::gui::common::Operationinlinevirtual; configure(PickHandler *picker, sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p)sofa::gui::common::Operationvirtual; createPerformer()sofa::gui::common::Operationvirtual; defaultPerformerType()sofa::gui::common::Operationinlinevirtual; end() overridesofa::gui::common::TopologyOperationvirtual; endOperation() overridesofa::gui::common::TopologyOperationvirtual; execution() overridesofa::gui::common::TopologyOperationvirtual; firstClicksofa::gui::common::TopologyOperationprotected; getDescription()sofa::gui::common::TopologyOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; getScale() constsofa::gui::common::TopologyOperationinlinevirtual; getTopologicalOperation() constsofa::gui::common::TopologyOperationinlinevirtual; getVolumicMesh() constsofa::gui::common::TopologyOperationinlinevirtual; mbsettingsofa::gui::common::Operationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; scalesofa::gui::common::TopologyOperationprotected; setScale(double s)sofa::gui::common::TopologyOperationinline; setSetting(sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; setTopologicalOperation(int m)sofa::gui::common::TopologyOperationinline; setVolumicM",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_topology_operation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_topology_operation-members.html
Deployability,release,released,"iagram for sofa::gui::common::TopologyOperation:. [legend]. Protected Attributes; int topologicalOperation;  ; double scale;  ; bool volumicMesh;  ; bool firstClick;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  . Public Member Functions;  TopologyOperation ();  ;  ~TopologyOperation () override;  ; void start () override;  ; void execution () override;  This function is called each time the mouse is clicked. More...;  ; void end () override;  ; void endOperation () override;  This function is called after each mouse click. More...;  ; void setTopologicalOperation (int m);  ; void setScale (double s);  ; void setVolumicMesh (bool v);  ; virtual int getTopologicalOperation () const;  ; virtual double getScale () const;  ; virtual bool getVolumicMesh () const;  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual std::string defaultPerformerType ();  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; virtual void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p);  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Opera",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_topology_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_topology_operation.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::common::TopologyOperation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::gui::common::TopologyOperation Class Reference . #include <MouseOperations.h>. Inheritance diagram for sofa::gui::common::TopologyOperation:. [legend]. Protected Attributes; int topologicalOperation;  ; double scale;  ; bool volumicMesh;  ; bool firstClick;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  . Public Member Functions;  TopologyOperation ();  ;  ~TopologyOperation () override;  ; void start () override;  ; void execution () override;  This function is called each time the mouse is clicked. More...;  ; void end () override;  ; void endOperation () override;  This function is called after each mouse click. More...;  ; void setTopologicalOperation (int m);  ; void setScale (double s);  ; void setVolumicMesh (bool v);  ; virtual int getTopologicalOperation () const;  ; virtual double getScale () const;  ; virtual bool getVolumicMesh () const;  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual std::string defaultPerformerType ();  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; virtual void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p);  ; MOUSE_BUTTO",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_topology_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_topology_operation.html
Performance,perform,performer," each time the mouse is clicked. More...;  ; void end () override;  ; void endOperation () override;  This function is called after each mouse click. More...;  ; void setTopologicalOperation (int m);  ; void setScale (double s);  ; void setVolumicMesh (bool v);  ; virtual int getTopologicalOperation () const;  ; virtual double getScale () const;  ; virtual bool getVolumicMesh () const;  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual std::string defaultPerformerType ();  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; virtual void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p);  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  . Attribute details. ◆ firstClick. bool sofa::gui::common::TopologyOperation::firstClick. protected . ◆ scale. double sofa::gui::common::TopologyOperation::scale. protected . ◆ topologicalOperation. int sofa::gui::common::TopologyOperation::topologicalOperation. protected . ◆ volumicMesh. bool sofa::gui::common::TopologyOperation::volumicMesh. protected . Constructor details. ◆ TopologyOperation(). sofa::gui::common::TopologyOperation::Topolo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_topology_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_topology_operation.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::common::TOperationCreator< RealOperation > Member List . This is the complete list of members for sofa::gui::common::TOperationCreator< RealOperation >, including all inherited members. create() const overridesofa::gui::common::TOperationCreator< RealOperation >inlinevirtual; getDescription() const overridesofa::gui::common::TOperationCreator< RealOperation >inlinevirtual; ~OperationCreator()sofa::gui::common::OperationCreatorinlinevirtual. Generated on Mon Nov 11 2024 03:19:18 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_t_operation_creator-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_t_operation_creator-members.html
Modifiability,inherit,inherited,﻿. SOFA API: sofa::gui::common::TOperationCreator< RealOperation > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gui::common::TOperationCreator< RealOperation > Class Template Reference . #include <OperationFactory.h>. Inheritance diagram for sofa::gui::common::TOperationCreator< RealOperation >:. [legend]. Public Member Functions; Operation * create () const override;  ; std::string getDescription () const override;  ;  Public Member Functions inherited from sofa::gui::common::OperationCreator; virtual ~OperationCreator ();  . Function details. ◆ create(). template<class RealOperation > . Operation* sofa::gui::common::TOperationCreator< RealOperation >::create ; (; ); const. inlineoverridevirtual . Implements sofa::gui::common::OperationCreator. ◆ getDescription(). template<class RealOperation > . std::string sofa::gui::common::TOperationCreator< RealOperation >::getDescription ; (; ); const. inlineoverridevirtual . Implements sofa::gui::common::OperationCreator. sofaguicommonTOperationCreator; Generated on Mon Nov 11 2024 03:19:18 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_t_operation_creator.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_t_operation_creator.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::common::ViewerQtArgument Member List . This is the complete list of members for sofa::gui::common::ViewerQtArgument, including all inherited members. BaseViewerArgument(std::string _name, const unsigned int nbMSAASamples=1)sofa::gui::common::BaseViewerArgumentinline; getName() constsofa::gui::common::BaseViewerArgumentinlinevirtual; getNbMSAASamples()sofa::gui::common::BaseViewerArgumentinlinevirtual; getParentWidget() constsofa::gui::common::ViewerQtArgumentinline; m_nbMSAASamplessofa::gui::common::BaseViewerArgumentprotected; namesofa::gui::common::BaseViewerArgumentprotected; parentsofa::gui::common::ViewerQtArgumentprotected; ViewerQtArgument(std::string _name, QWidget *_parent, const unsigned int nbMSAASamples=1)sofa::gui::common::ViewerQtArgumentinline; ~BaseViewerArgument()sofa::gui::common::BaseViewerArgumentinlinevirtual. Generated on Mon Nov 11 2024 03:19:19 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_viewer_qt_argument-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_viewer_qt_argument-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::common::ViewerQtArgument Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::gui::common::ViewerQtArgument Class Reference . #include <ViewerFactory.h>. Inheritance diagram for sofa::gui::common::ViewerQtArgument:. [legend]. Protected Attributes; QWidget * parent;  ;  Protected Attributes inherited from sofa::gui::common::BaseViewerArgument; std::string name;  ; unsigned int m_nbMSAASamples;  . Public Member Functions;  ViewerQtArgument (std::string _name, QWidget *_parent, const unsigned int nbMSAASamples=1);  ; QWidget * getParentWidget () const;  ;  Public Member Functions inherited from sofa::gui::common::BaseViewerArgument;  BaseViewerArgument (std::string _name, const unsigned int nbMSAASamples=1);  ; virtual ~BaseViewerArgument ();  ; virtual std::string getName () const;  ; virtual unsigned int getNbMSAASamples ();  . Attribute details. ◆ parent. QWidget* sofa::gui::common::ViewerQtArgument::parent. protected . Constructor details. ◆ ViewerQtArgument(). sofa::gui::common::ViewerQtArgument::ViewerQtArgument ; (; std::string ; _name, . QWidget * ; _parent, . const unsigned int ; nbMSAASamples = 1 . ). inline . Function details. ◆ getParentWidget(). QWidget* sofa::gui::common::ViewerQtArgument::getParentWidget ; (; ); const. inline . sofaguicommonViewerQtArgument; Generated on Mon Nov 11 2024 03:19:19 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_viewer_qt_argument.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_viewer_qt_argument.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::AddRecordedCameraPerformer Member List . This is the complete list of members for sofa::gui::component::performer::AddRecordedCameraPerformer, including all inherited members. AddRecordedCameraPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::AddRecordedCameraPerformerinline; configure(sofa::component::setting::MouseButtonSetting *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; create(RealObject *, BaseMouseInteractor *interactor)sofa::gui::component::performer::InteractionPerformerinlinestatic; draw(const core::visual::VisualParams *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; execute() overridesofa::gui::component::performer::AddRecordedCameraPerformerinlinevirtual; handleEvent(core::objectmodel::Event *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; InteractionPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::InteractionPerformerinline; InteractionPerformerFactory typedefsofa::gui::component::performer::InteractionPerformer; m_freezePerformersofa::gui::component::performer::InteractionPerformer; m_interactorsofa::gui::component::performer::InteractionPerformer; setPerformerFreeze()sofa::gui::component::performer::InteractionPerformerinlinevirtual; SOFA_ATTRIBUTE_DISABLED__NAMING(""v24.06"", ""v24.06"", interactor, m_interactor)sofa::gui::component::performer::InteractionPerformer; SOFA_ATTRIBUTE_DISABLED__NAMING(""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer)sofa::gui::component::performer::InteractionPerformer; start() overridesofa::gui::component::performer::AddRecordedCameraPerformervirtual; ~AddRecordedCameraPerformer() overridesofa::gui::component::performer::AddRecordedCameraPerformerinline; ~InteractionPerformer()sofa::gui::component::performer::InteractionPerformerinlinevirtual. Generated on Mon Nov 11 2024 03:19:20 for SOFA ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_add_recorded_camera_performer-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_add_recorded_camera_performer-members.html
Performance,perform,performer,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::AddRecordedCameraPerformer Member List . This is the complete list of members for sofa::gui::component::performer::AddRecordedCameraPerformer, including all inherited members. AddRecordedCameraPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::AddRecordedCameraPerformerinline; configure(sofa::component::setting::MouseButtonSetting *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; create(RealObject *, BaseMouseInteractor *interactor)sofa::gui::component::performer::InteractionPerformerinlinestatic; draw(const core::visual::VisualParams *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; execute() overridesofa::gui::component::performer::AddRecordedCameraPerformerinlinevirtual; handleEvent(core::objectmodel::Event *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; InteractionPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::InteractionPerformerinline; InteractionPerformerFactory typedefsofa::gui::component::performer::InteractionPerformer; m_freezePerformersofa::gui::component::performer::InteractionPerformer; m_interactorsofa::gui::component::performer::InteractionPerformer; setPerformerFreeze()sofa::gui::component::performer::InteractionPerformerinlinevirtual; SOFA_ATTRIBUTE_DISABLED__NAMING(""v24.06"", ""v24.06"", interactor, m_interactor)sofa::gui::component::performer::InteractionPerformer; SOFA_ATTRIBUTE_DISABLED__NAMING(""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer)sofa::gui::component::performer::InteractionPerformer; start() overridesofa::gui::component::performer::AddRecordedCameraPerformervirtual; ~AddRecordedCameraPerformer() overridesofa::gui::component::performer::AddRecordedCameraPerformerinline; ~InteractionPerformer()sofa::gui::component::performer::InteractionPerformerinlinevirtual. Generated on Mon Nov 11 2024 03:19:20 for SOFA ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_add_recorded_camera_performer-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_add_recorded_camera_performer-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::component::performer::AddRecordedCameraPerformer Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gui::component::performer::AddRecordedCameraPerformer Class Reference . #include <AddRecordedCameraPerformer.h>. Inheritance diagram for sofa::gui::component::performer::AddRecordedCameraPerformer:. [legend]. Public Member Functions;  AddRecordedCameraPerformer (BaseMouseInteractor *i);  ;  ~AddRecordedCameraPerformer () override;  ; void start () override;  ; void execute () override;  ;  Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer;  InteractionPerformer (BaseMouseInteractor *i);  ; virtual ~InteractionPerformer ();  ; virtual void configure (sofa::component::setting::MouseButtonSetting *);  ; virtual void handleEvent (core::objectmodel::Event *);  ; virtual void draw (const core::visual::VisualParams *);  ; virtual void setPerformerFreeze ();  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", interactor, m_interactor);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::component::performer::InteractionPerformer; BaseMouseInteractor * m_interactor;  ; bool m_freezePerformer;  ;  Static Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer; template<class RealObject > ; static RealObject * create (RealObject *, BaseMouseInteractor *interactor);  . Constructor details. ◆ AddRecordedCameraPerformer(). sofa::gui::component::performer::AddRecordedCameraPerformer::AddRecordedCameraPerformer ; (; BaseMouseInteractor * ; i). inline . ◆ ~AddRecordedCameraPerformer(). sofa::gui::component::performer::AddRecordedCameraPerformer::~AddRecordedCameraPerformer ; (; ). inlineoverride . Function details. ◆ execute(). void sofa::gui::component::performer::Ad",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_add_recorded_camera_performer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_add_recorded_camera_performer.html
Performance,perform,performer,"﻿. SOFA API: sofa::gui::component::performer::AddRecordedCameraPerformer Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gui::component::performer::AddRecordedCameraPerformer Class Reference . #include <AddRecordedCameraPerformer.h>. Inheritance diagram for sofa::gui::component::performer::AddRecordedCameraPerformer:. [legend]. Public Member Functions;  AddRecordedCameraPerformer (BaseMouseInteractor *i);  ;  ~AddRecordedCameraPerformer () override;  ; void start () override;  ; void execute () override;  ;  Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer;  InteractionPerformer (BaseMouseInteractor *i);  ; virtual ~InteractionPerformer ();  ; virtual void configure (sofa::component::setting::MouseButtonSetting *);  ; virtual void handleEvent (core::objectmodel::Event *);  ; virtual void draw (const core::visual::VisualParams *);  ; virtual void setPerformerFreeze ();  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", interactor, m_interactor);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::component::performer::InteractionPerformer; BaseMouseInteractor * m_interactor;  ; bool m_freezePerformer;  ;  Static Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer; template<class RealObject > ; static RealObject * create (RealObject *, BaseMouseInteractor *interactor);  . Constructor details. ◆ AddRecordedCameraPerformer(). sofa::gui::component::performer::AddRecordedCameraPerformer::AddRecordedCameraPerformer ; (; BaseMouseInteractor * ; i). inline . ◆ ~AddRecordedCameraPerformer(). sofa::gui::component::performer::AddRecordedCameraPerformer::~AddRecordedCameraPerformer ; (; ). inlineoverride . Function details. ◆ execute(). void sofa::gui::component::performer::Ad",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_add_recorded_camera_performer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_add_recorded_camera_performer.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::AttachBodyPerformer< DataTypes > Member List . This is the complete list of members for sofa::gui::component::performer::AttachBodyPerformer< DataTypes >, including all inherited members. AttachBodyPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::AttachBodyPerformer< DataTypes >; BaseAttachBodyPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >explicit; clear()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; configure(sofa::component::setting::MouseButtonSetting *setting) overridesofa::gui::component::performer::AttachBodyPerformer< DataTypes >inlinevirtual; create(RealObject *, BaseMouseInteractor *interactor)sofa::gui::component::performer::TInteractionPerformer< DataTypes >inlinestatic; draw(const core::visual::VisualParams *vparams)sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; execute()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; getInteractionObject()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >; handleEvent(core::objectmodel::Event *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; InteractionPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::InteractionPerformerinline; InteractionPerformerFactory typedefsofa::gui::component::performer::InteractionPerformer; m_flagssofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_freezePerformersofa::gui::component::performer::InteractionPerformer; m_interactionObjectsofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_interactorsofa::gui::component::performer::InteractionPerformer; m_mappersofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_sizesofa::gui::component::performer::AttachBodyPer",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_attach_body_performer-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_attach_body_performer-members.html
Performance,perform,performer,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::AttachBodyPerformer< DataTypes > Member List . This is the complete list of members for sofa::gui::component::performer::AttachBodyPerformer< DataTypes >, including all inherited members. AttachBodyPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::AttachBodyPerformer< DataTypes >; BaseAttachBodyPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >explicit; clear()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; configure(sofa::component::setting::MouseButtonSetting *setting) overridesofa::gui::component::performer::AttachBodyPerformer< DataTypes >inlinevirtual; create(RealObject *, BaseMouseInteractor *interactor)sofa::gui::component::performer::TInteractionPerformer< DataTypes >inlinestatic; draw(const core::visual::VisualParams *vparams)sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; execute()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; getInteractionObject()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >; handleEvent(core::objectmodel::Event *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; InteractionPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::InteractionPerformerinline; InteractionPerformerFactory typedefsofa::gui::component::performer::InteractionPerformer; m_flagssofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_freezePerformersofa::gui::component::performer::InteractionPerformer; m_interactionObjectsofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_interactorsofa::gui::component::performer::InteractionPerformer; m_mappersofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_sizesofa::gui::component::performer::AttachBodyPer",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_attach_body_performer-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_attach_body_performer-members.html
Usability,clear,clear," AttachBodyPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::AttachBodyPerformer< DataTypes >; BaseAttachBodyPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >explicit; clear()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; configure(sofa::component::setting::MouseButtonSetting *setting) overridesofa::gui::component::performer::AttachBodyPerformer< DataTypes >inlinevirtual; create(RealObject *, BaseMouseInteractor *interactor)sofa::gui::component::performer::TInteractionPerformer< DataTypes >inlinestatic; draw(const core::visual::VisualParams *vparams)sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; execute()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; getInteractionObject()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >; handleEvent(core::objectmodel::Event *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; InteractionPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::InteractionPerformerinline; InteractionPerformerFactory typedefsofa::gui::component::performer::InteractionPerformer; m_flagssofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_freezePerformersofa::gui::component::performer::InteractionPerformer; m_interactionObjectsofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_interactorsofa::gui::component::performer::InteractionPerformer; m_mappersofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_sizesofa::gui::component::performer::AttachBodyPer",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_attach_body_performer-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_attach_body_performer-members.html
Modifiability,inherit,inherited,﻿. SOFA API: sofa::gui::component::performer::AttachBodyPerformer< DataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::gui::component::performer::AttachBodyPerformer< DataTypes > Class Template Reference . #include <AttachBodyPerformer.h>. Inheritance diagram for sofa::gui::component::performer::AttachBodyPerformer< DataTypes >:. [legend]. Protected Attributes; SReal m_stiffness;  ; SReal m_size;  ;  Protected Attributes inherited from sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >; sofa::core::objectmodel::BaseObject::SPtr m_interactionObject;  ; MouseContactMapper * m_mapper;  ; core::visual::DisplayFlags m_flags;  . Public Member Functions;  AttachBodyPerformer (BaseMouseInteractor *i);  ; virtual ~AttachBodyPerformer ()=default;  ; virtual bool startPartial (const BodyPicked &picked) override;  ; void setStiffness (SReal s);  ; void setArrowSize (float s);  ; virtual void configure (sofa::component::setting::MouseButtonSetting *setting) override;  ;  Public Member Functions inherited from sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >;  BaseAttachBodyPerformer (BaseMouseInteractor *i);  ; virtual ~BaseAttachBodyPerformer ();  ; virtual void start ();  ; virtual void draw (const core::visual::VisualParams *vparams);  ; virtual void clear ();  ; virtual void execute ();  ; sofa::core::objectmodel::BaseObject::SPtr getInteractionObject ();  ;  Public Member Functions inherited from sofa::gui::component::performer::TInteractionPerformer< DataTypes >;  TInteractionPerformer (BaseMouseInteractor *i);  ;  Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer;  InteractionPerformer (BaseMouseInteractor *i);  ; virtual ~InteractionPerformer ();  ; virtual void handleEvent (core::objectmodel::Event *);  ; virtual void setPerformerFreeze ();  ;  SOFA_ATT,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_attach_body_performer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_attach_body_performer.html
Performance,perform,performer,﻿. SOFA API: sofa::gui::component::performer::AttachBodyPerformer< DataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::gui::component::performer::AttachBodyPerformer< DataTypes > Class Template Reference . #include <AttachBodyPerformer.h>. Inheritance diagram for sofa::gui::component::performer::AttachBodyPerformer< DataTypes >:. [legend]. Protected Attributes; SReal m_stiffness;  ; SReal m_size;  ;  Protected Attributes inherited from sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >; sofa::core::objectmodel::BaseObject::SPtr m_interactionObject;  ; MouseContactMapper * m_mapper;  ; core::visual::DisplayFlags m_flags;  . Public Member Functions;  AttachBodyPerformer (BaseMouseInteractor *i);  ; virtual ~AttachBodyPerformer ()=default;  ; virtual bool startPartial (const BodyPicked &picked) override;  ; void setStiffness (SReal s);  ; void setArrowSize (float s);  ; virtual void configure (sofa::component::setting::MouseButtonSetting *setting) override;  ;  Public Member Functions inherited from sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >;  BaseAttachBodyPerformer (BaseMouseInteractor *i);  ; virtual ~BaseAttachBodyPerformer ();  ; virtual void start ();  ; virtual void draw (const core::visual::VisualParams *vparams);  ; virtual void clear ();  ; virtual void execute ();  ; sofa::core::objectmodel::BaseObject::SPtr getInteractionObject ();  ;  Public Member Functions inherited from sofa::gui::component::performer::TInteractionPerformer< DataTypes >;  TInteractionPerformer (BaseMouseInteractor *i);  ;  Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer;  InteractionPerformer (BaseMouseInteractor *i);  ; virtual ~InteractionPerformer ();  ; virtual void handleEvent (core::objectmodel::Event *);  ; virtual void setPerformerFreeze ();  ;  SOFA_ATT,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_attach_body_performer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_attach_body_performer.html
Usability,clear,clear,"gui::component::performer::AttachBodyPerformer< DataTypes >:. [legend]. Protected Attributes; SReal m_stiffness;  ; SReal m_size;  ;  Protected Attributes inherited from sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >; sofa::core::objectmodel::BaseObject::SPtr m_interactionObject;  ; MouseContactMapper * m_mapper;  ; core::visual::DisplayFlags m_flags;  . Public Member Functions;  AttachBodyPerformer (BaseMouseInteractor *i);  ; virtual ~AttachBodyPerformer ()=default;  ; virtual bool startPartial (const BodyPicked &picked) override;  ; void setStiffness (SReal s);  ; void setArrowSize (float s);  ; virtual void configure (sofa::component::setting::MouseButtonSetting *setting) override;  ;  Public Member Functions inherited from sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >;  BaseAttachBodyPerformer (BaseMouseInteractor *i);  ; virtual ~BaseAttachBodyPerformer ();  ; virtual void start ();  ; virtual void draw (const core::visual::VisualParams *vparams);  ; virtual void clear ();  ; virtual void execute ();  ; sofa::core::objectmodel::BaseObject::SPtr getInteractionObject ();  ;  Public Member Functions inherited from sofa::gui::component::performer::TInteractionPerformer< DataTypes >;  TInteractionPerformer (BaseMouseInteractor *i);  ;  Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer;  InteractionPerformer (BaseMouseInteractor *i);  ; virtual ~InteractionPerformer ();  ; virtual void handleEvent (core::objectmodel::Event *);  ; virtual void setPerformerFreeze ();  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", interactor, m_interactor);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::component::performer::InteractionPerformer; BaseMouseInteractor * m_interactor;  ; bool m_freezePerformer;  ;  Static Public Member Functions inherited from sofa::gu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_attach_body_performer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_attach_body_performer.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes > Member List . This is the complete list of members for sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >, including all inherited members. BaseAttachBodyPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >explicit; clear()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; configure(sofa::component::setting::MouseButtonSetting *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; create(RealObject *, BaseMouseInteractor *interactor)sofa::gui::component::performer::TInteractionPerformer< DataTypes >inlinestatic; draw(const core::visual::VisualParams *vparams)sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; execute()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; getInteractionObject()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >; handleEvent(core::objectmodel::Event *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; InteractionPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::InteractionPerformerinline; InteractionPerformerFactory typedefsofa::gui::component::performer::InteractionPerformer; m_flagssofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_freezePerformersofa::gui::component::performer::InteractionPerformer; m_interactionObjectsofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_interactorsofa::gui::component::performer::InteractionPerformer; m_mappersofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; MouseContactMapper typedefsofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >; MouseContainer typedefsofa::gui::component::performer::BaseAttachBodyPerformer< DataT",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_attach_body_performer-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_attach_body_performer-members.html
Performance,perform,performer,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes > Member List . This is the complete list of members for sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >, including all inherited members. BaseAttachBodyPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >explicit; clear()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; configure(sofa::component::setting::MouseButtonSetting *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; create(RealObject *, BaseMouseInteractor *interactor)sofa::gui::component::performer::TInteractionPerformer< DataTypes >inlinestatic; draw(const core::visual::VisualParams *vparams)sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; execute()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; getInteractionObject()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >; handleEvent(core::objectmodel::Event *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; InteractionPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::InteractionPerformerinline; InteractionPerformerFactory typedefsofa::gui::component::performer::InteractionPerformer; m_flagssofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_freezePerformersofa::gui::component::performer::InteractionPerformer; m_interactionObjectsofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_interactorsofa::gui::component::performer::InteractionPerformer; m_mappersofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; MouseContactMapper typedefsofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >; MouseContainer typedefsofa::gui::component::performer::BaseAttachBodyPerformer< DataT",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_attach_body_performer-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_attach_body_performer-members.html
Usability,clear,clear,"gui::component::performer::BaseAttachBodyPerformer< DataTypes >, including all inherited members. BaseAttachBodyPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >explicit; clear()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; configure(sofa::component::setting::MouseButtonSetting *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; create(RealObject *, BaseMouseInteractor *interactor)sofa::gui::component::performer::TInteractionPerformer< DataTypes >inlinestatic; draw(const core::visual::VisualParams *vparams)sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; execute()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; getInteractionObject()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >; handleEvent(core::objectmodel::Event *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; InteractionPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::InteractionPerformerinline; InteractionPerformerFactory typedefsofa::gui::component::performer::InteractionPerformer; m_flagssofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_freezePerformersofa::gui::component::performer::InteractionPerformer; m_interactionObjectsofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_interactorsofa::gui::component::performer::InteractionPerformer; m_mappersofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; MouseContactMapper typedefsofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >; MouseContainer typedefsofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >; setPerformerFreeze()sofa::gui::component::performer::InteractionPerformerinlinevirtual; SOFA_ATTRIBUTE_DISABLED__NAMING(""v24.06"", ""v24.06"", interactor, m_interactor)sofa::gui::component::performer::InteractionPerformer; SO",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_attach_body_performer-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_attach_body_performer-members.html
Modifiability,plugin,plugin,"﻿. SOFA API: sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes > Class Template Referenceabstract . #include <BaseAttachBodyPerformer.h>. Inheritance diagram for sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >; This class is a virtualization of attachment performer used to allow the blind use of either ""AttachBodyPerformer"" based on springs and ""ConstraintAttachBodyPerformer"" based on lagrangian constraints. An example of use can be found in the external plugin Sofa.IGTLink in the component ""iGTLinkMouseInteractor"" . Protected Attributes; sofa::core::objectmodel::BaseObject::SPtr m_interactionObject;  ; MouseContactMapper * m_mapper;  ; core::visual::DisplayFlags m_flags;  . Public Member Functions;  BaseAttachBodyPerformer (BaseMouseInteractor *i);  ; virtual ~BaseAttachBodyPerformer ();  ; virtual void start ();  ; virtual void draw (const core::visual::VisualParams *vparams);  ; virtual void clear ();  ; virtual void execute ();  ; sofa::core::objectmodel::BaseObject::SPtr getInteractionObject ();  ; virtual bool startPartial (const BodyPicked &picked)=0;  ;  Public Member Functions inherited from sofa::gui::component::performer::TInteractionPerformer< DataTypes >;  TInteractionPerformer (BaseMouseInteractor *i);  ;  Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer;  InteractionPerformer (BaseMouseInteractor *i);  ; virtual ~InteractionPerformer ();  ; virtual void configure (sofa::component::setting::MouseButtonSetting *);  ; virtual void handleEvent (core::objectmodel::Event *);  ; virtual void setPerformer",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_attach_body_performer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_attach_body_performer.html
Performance,perform,performer,"﻿. SOFA API: sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes > Class Template Referenceabstract . #include <BaseAttachBodyPerformer.h>. Inheritance diagram for sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >; This class is a virtualization of attachment performer used to allow the blind use of either ""AttachBodyPerformer"" based on springs and ""ConstraintAttachBodyPerformer"" based on lagrangian constraints. An example of use can be found in the external plugin Sofa.IGTLink in the component ""iGTLinkMouseInteractor"" . Protected Attributes; sofa::core::objectmodel::BaseObject::SPtr m_interactionObject;  ; MouseContactMapper * m_mapper;  ; core::visual::DisplayFlags m_flags;  . Public Member Functions;  BaseAttachBodyPerformer (BaseMouseInteractor *i);  ; virtual ~BaseAttachBodyPerformer ();  ; virtual void start ();  ; virtual void draw (const core::visual::VisualParams *vparams);  ; virtual void clear ();  ; virtual void execute ();  ; sofa::core::objectmodel::BaseObject::SPtr getInteractionObject ();  ; virtual bool startPartial (const BodyPicked &picked)=0;  ;  Public Member Functions inherited from sofa::gui::component::performer::TInteractionPerformer< DataTypes >;  TInteractionPerformer (BaseMouseInteractor *i);  ;  Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer;  InteractionPerformer (BaseMouseInteractor *i);  ; virtual ~InteractionPerformer ();  ; virtual void configure (sofa::component::setting::MouseButtonSetting *);  ; virtual void handleEvent (core::objectmodel::Event *);  ; virtual void setPerformer",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_attach_body_performer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_attach_body_performer.html
Usability,clear,clear,"nt::performer::BaseAttachBodyPerformer< DataTypes >; This class is a virtualization of attachment performer used to allow the blind use of either ""AttachBodyPerformer"" based on springs and ""ConstraintAttachBodyPerformer"" based on lagrangian constraints. An example of use can be found in the external plugin Sofa.IGTLink in the component ""iGTLinkMouseInteractor"" . Protected Attributes; sofa::core::objectmodel::BaseObject::SPtr m_interactionObject;  ; MouseContactMapper * m_mapper;  ; core::visual::DisplayFlags m_flags;  . Public Member Functions;  BaseAttachBodyPerformer (BaseMouseInteractor *i);  ; virtual ~BaseAttachBodyPerformer ();  ; virtual void start ();  ; virtual void draw (const core::visual::VisualParams *vparams);  ; virtual void clear ();  ; virtual void execute ();  ; sofa::core::objectmodel::BaseObject::SPtr getInteractionObject ();  ; virtual bool startPartial (const BodyPicked &picked)=0;  ;  Public Member Functions inherited from sofa::gui::component::performer::TInteractionPerformer< DataTypes >;  TInteractionPerformer (BaseMouseInteractor *i);  ;  Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer;  InteractionPerformer (BaseMouseInteractor *i);  ; virtual ~InteractionPerformer ();  ; virtual void configure (sofa::component::setting::MouseButtonSetting *);  ; virtual void handleEvent (core::objectmodel::Event *);  ; virtual void setPerformerFreeze ();  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", interactor, m_interactor);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::component::performer::InteractionPerformer; BaseMouseInteractor * m_interactor;  ; bool m_freezePerformer;  ;  Static Public Member Functions inherited from sofa::gui::component::performer::TInteractionPerformer< DataTypes >; template<class RealObject > ; static RealObject * create (RealObject *, BaseMouseInte",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_attach_body_performer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_attach_body_performer.html
Deployability,update,updateInternal,"a::core::objectmodel::Base; setMouseAttached(bool b)sofa::gui::component::performer::BaseMouseInteractorinline; setMouseRayModel(MouseCollisionModel *model)sofa::gui::component::performer::BaseMouseInteractorinline; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseMouseInteractor, core::BehaviorModel)sofa::gui::component::performer::BaseMouseInteractor; sofa::core::BehaviorModel::SOFA_ABSTRACT_CLASS(BehaviorModel, objectmodel::BaseObject)sofa::core::BehaviorModel; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updatePosition(SReal dt) overridesofa::gui::component::performer::BaseMouseInteractorvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecPerformer typedefsofa::gui::component::performer::BaseMouseInteractor; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BehaviorModel() overridesofa::core::BehaviorModelinlineprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::BaseMouseInteractor Member List . This is the complete list of members for sofa::gui::component::performer::BaseMouseInteractor, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::BehaviorModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInteractionPerformer(InteractionPerformer *i)sofa::gui::component::performer::BaseMouseInteractor; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseMouseInteractor()sofa::gui::component::performer::BaseMouseInteractorinlineprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BehaviorModel()sofa::core::BehaviorModelinlineprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor-members.html
Performance,perform,performer,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::BaseMouseInteractor Member List . This is the complete list of members for sofa::gui::component::performer::BaseMouseInteractor, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::BehaviorModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInteractionPerformer(InteractionPerformer *i)sofa::gui::component::performer::BaseMouseInteractor; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseMouseInteractor()sofa::gui::component::performer::BaseMouseInteractorinlineprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BehaviorModel()sofa::core::BehaviorModelinlineprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::BehaviorModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInteractionPerformer(InteractionPerformer *i)sofa::gui::component::performer::BaseMouseInteractor; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseMouseInteractor()sofa::gui::component::performer::BaseMouseInteractorinlineprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BehaviorModel()sofa::core::BehaviorModelinlineprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor-members.html
Usability,clear,clearLoggedMessages,"< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseMouseInteractor()sofa::gui::component::performer::BaseMouseInteractorinlineprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BehaviorModel()sofa::core::BehaviorModelinlineprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::gui::component::performer::BaseMouseInteractorvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; distanceFromMousesofa::gui::component::performer::BaseMouseInteractorprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::gui::component::performer::BaseMouseInteractorvirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor-members.html
Availability,down,down,", std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor.html
Deployability,update,updatePosition,"rited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_ABSTRACT_CLASS (BaseMouseInteractor, core::BehaviorModel);  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void cleanup () override;  ; void addInteractionPerformer (InteractionPerformer *i);  ; bool removeInteractionPerformer (InteractionPerformer *i);  ; void updatePosition (SReal dt) override;  Computation of a new simulation step. More...;  ; void handleEvent (core::objectmodel::Event *e) override;  Handle an event. More...;  ; virtual core::behavior::BaseMechanicalState * getMouseContainer ()=0;  ; bool isMouseAttached () const;  ; void setMouseAttached (bool b);  ; MouseCollisionModel * getMouseRayModel ();  ; void setMouseRayModel (MouseCollisionModel *model);  ; BodyPicked getBodyPicked () const;  ; void setBodyPicked (BodyPicked picked);  ; SReal getDistanceFromMouse () const;  ; void setDistanceFromMouse (SReal d);  ;  Public Member Functions inherited from sofa::core::BehaviorModel;  SOFA_ABSTRACT_CLASS (BehaviorModel, objectmodel::BaseObject);  ; virtual bool addBBox (SReal *, SReal *);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SO",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor.html
Integrability,depend,dependent,":BehaviorModel);  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void cleanup () override;  ; void addInteractionPerformer (InteractionPerformer *i);  ; bool removeInteractionPerformer (InteractionPerformer *i);  ; void updatePosition (SReal dt) override;  Computation of a new simulation step. More...;  ; void handleEvent (core::objectmodel::Event *e) override;  Handle an event. More...;  ; virtual core::behavior::BaseMechanicalState * getMouseContainer ()=0;  ; bool isMouseAttached () const;  ; void setMouseAttached (bool b);  ; MouseCollisionModel * getMouseRayModel ();  ; void setMouseRayModel (MouseCollisionModel *model);  ; BodyPicked getBodyPicked () const;  ; void setBodyPicked (BodyPicked picked);  ; SReal getDistanceFromMouse () const;  ; void setDistanceFromMouse (SReal d);  ;  Public Member Functions inherited from sofa::core::BehaviorModel;  SOFA_ABSTRACT_CLASS (BehaviorModel, objectmodel::BaseObject);  ; virtual bool addBBox (SReal *, SReal *);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const B",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::component::performer::BaseMouseInteractor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::component::performer::BaseMouseInteractor Class Referenceabstract . #include <MouseInteractor.h>. Inheritance diagram for sofa::gui::component::performer::BaseMouseInteractor:. [legend]. Protected Attributes; MouseCollisionModel * mouseCollision;  ; BodyPicked lastPicked;  ; bool isAttached;  ; SReal distanceFromMouse;  ; VecPerformer performers;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_ABSTRACT_CLASS (BaseMouseInteractor, core::BehaviorModel);  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void cleanup () override;  ; void addInteractionPerformer (InteractionPerformer *i);  ; bool removeInteractionPerformer (InteractionPerformer *i);  ; void updatePosition (SReal dt) override;  Computation of a new simulation step. More...;  ; void handleEvent (core::objectmodel::Event *e) override;  Handle an event. More...;  ; virtual core::behavior::BaseMechanicalState * getMouseContainer ()=0;  ; bool isMouseAttached () const;  ; void setMouseAttached (bool ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor.html
Performance,perform,performer,"﻿. SOFA API: sofa::gui::component::performer::BaseMouseInteractor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::component::performer::BaseMouseInteractor Class Referenceabstract . #include <MouseInteractor.h>. Inheritance diagram for sofa::gui::component::performer::BaseMouseInteractor:. [legend]. Protected Attributes; MouseCollisionModel * mouseCollision;  ; BodyPicked lastPicked;  ; bool isAttached;  ; SReal distanceFromMouse;  ; VecPerformer performers;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_ABSTRACT_CLASS (BaseMouseInteractor, core::BehaviorModel);  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void cleanup () override;  ; void addInteractionPerformer (InteractionPerformer *i);  ; bool removeInteractionPerformer (InteractionPerformer *i);  ; void updatePosition (SReal dt) override;  Computation of a new simulation step. More...;  ; void handleEvent (core::objectmodel::Event *e) override;  Handle an event. More...;  ; virtual core::behavior::BaseMechanicalState * getMouseContainer ()=0;  ; bool isMouseAttached () const;  ; void setMouseAttached (bool ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::ComponentMouseInteraction Member List . This is the complete list of members for sofa::gui::component::performer::ComponentMouseInteraction, including all inherited members. attach(simulation::Node *parentNode)sofa::gui::component::performer::ComponentMouseInteraction; ComponentMouseInteraction()sofa::gui::component::performer::ComponentMouseInteraction; ComponentMouseInteractionFactory typedefsofa::gui::component::performer::ComponentMouseInteraction; create(RealObject *, core::objectmodel::BaseContext *)sofa::gui::component::performer::ComponentMouseInteractioninlinestatic; createInteractionComponents(sofa::simulation::Node *parent, sofa::simulation::Node *current)=0sofa::gui::component::performer::ComponentMouseInteractionpure virtual; detach()sofa::gui::component::performer::ComponentMouseInteraction; isCompatible(core::objectmodel::BaseContext *) const =0sofa::gui::component::performer::ComponentMouseInteractionpure virtual; mouseInSofasofa::gui::component::performer::ComponentMouseInteraction; mouseInteractorsofa::gui::component::performer::ComponentMouseInteraction; nodeRayPicksofa::gui::component::performer::ComponentMouseInteraction; reset()sofa::gui::component::performer::ComponentMouseInteraction; ~ComponentMouseInteraction()sofa::gui::component::performer::ComponentMouseInteractionvirtual. Generated on Mon Nov 11 2024 03:19:20 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_component_mouse_interaction-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_component_mouse_interaction-members.html
Performance,perform,performer,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::ComponentMouseInteraction Member List . This is the complete list of members for sofa::gui::component::performer::ComponentMouseInteraction, including all inherited members. attach(simulation::Node *parentNode)sofa::gui::component::performer::ComponentMouseInteraction; ComponentMouseInteraction()sofa::gui::component::performer::ComponentMouseInteraction; ComponentMouseInteractionFactory typedefsofa::gui::component::performer::ComponentMouseInteraction; create(RealObject *, core::objectmodel::BaseContext *)sofa::gui::component::performer::ComponentMouseInteractioninlinestatic; createInteractionComponents(sofa::simulation::Node *parent, sofa::simulation::Node *current)=0sofa::gui::component::performer::ComponentMouseInteractionpure virtual; detach()sofa::gui::component::performer::ComponentMouseInteraction; isCompatible(core::objectmodel::BaseContext *) const =0sofa::gui::component::performer::ComponentMouseInteractionpure virtual; mouseInSofasofa::gui::component::performer::ComponentMouseInteraction; mouseInteractorsofa::gui::component::performer::ComponentMouseInteraction; nodeRayPicksofa::gui::component::performer::ComponentMouseInteraction; reset()sofa::gui::component::performer::ComponentMouseInteraction; ~ComponentMouseInteraction()sofa::gui::component::performer::ComponentMouseInteractionvirtual. Generated on Mon Nov 11 2024 03:19:20 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_component_mouse_interaction-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_component_mouse_interaction-members.html
Performance,perform,performer,"﻿. SOFA API: sofa::gui::component::performer::ComponentMouseInteraction Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::gui::component::performer::ComponentMouseInteraction Class Referenceabstract . #include <ComponentMouseInteraction.h>. Inheritance diagram for sofa::gui::component::performer::ComponentMouseInteraction:. [legend]. Public Attributes; simulation::NodeSPtr nodeRayPick;  ; sofa::core::behavior::BaseMechanicalState::SPtr mouseInSofa;  ; sofa::gui::component::performer::BaseMouseInteractor::SPtr mouseInteractor;  . Public Member Functions;  ComponentMouseInteraction ();  ; virtual ~ComponentMouseInteraction ();  ; virtual void createInteractionComponents (sofa::simulation::Node *parent, sofa::simulation::Node *current)=0;  ; void attach (simulation::Node *parentNode);  ; void detach ();  ; void reset ();  ; virtual bool isCompatible (core::objectmodel::BaseContext *) const =0;  . Static Public Member Functions; template<class RealObject > ; static RealObject * create (RealObject *, core::objectmodel::BaseContext *);  . Attribute details. ◆ mouseInSofa. sofa::core::behavior::BaseMechanicalState::SPtr sofa::gui::component::performer::ComponentMouseInteraction::mouseInSofa. ◆ mouseInteractor. sofa::gui::component::performer::BaseMouseInteractor::SPtr sofa::gui::component::performer::ComponentMouseInteraction::mouseInteractor. ◆ nodeRayPick. simulation::NodeSPtr sofa::gui::component::performer::ComponentMouseInteraction::nodeRayPick. Constructor details. ◆ ComponentMouseInteraction(). sofa::gui::component::performer::ComponentMouseInteraction::ComponentMouseInteraction ; (; ). ◆ ~ComponentMouseInteraction(). sofa::gui::component::performer::ComponentMouseInteraction::~ComponentMouseInteraction ; (; ). virtual . Function details. ◆ attach(). void sofa::gui::component::performer::ComponentMouseInteraction::atta",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_component_mouse_interaction.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_component_mouse_interaction.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::ConstraintAttachBodyPerformer< DataTypes > Member List . This is the complete list of members for sofa::gui::component::performer::ConstraintAttachBodyPerformer< DataTypes >, including all inherited members. BaseAttachBodyPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >explicit; clear()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; configure(sofa::component::setting::MouseButtonSetting *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; ConstraintAttachBodyPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::ConstraintAttachBodyPerformer< DataTypes >; create(RealObject *, BaseMouseInteractor *interactor)sofa::gui::component::performer::TInteractionPerformer< DataTypes >inlinestatic; draw(const core::visual::VisualParams *vparams)sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; execute()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; getInteractionObject()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >; handleEvent(core::objectmodel::Event *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; InteractionPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::InteractionPerformerinline; InteractionPerformerFactory typedefsofa::gui::component::performer::InteractionPerformer; m_flagssofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_freezePerformersofa::gui::component::performer::InteractionPerformer; m_interactionObjectsofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_interactorsofa::gui::component::performer::InteractionPerformer; m_mappersofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_mstate1sofa::gui::component::performer",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_constraint_attach_body_performer-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_constraint_attach_body_performer-members.html
Performance,perform,performer,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::ConstraintAttachBodyPerformer< DataTypes > Member List . This is the complete list of members for sofa::gui::component::performer::ConstraintAttachBodyPerformer< DataTypes >, including all inherited members. BaseAttachBodyPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >explicit; clear()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; configure(sofa::component::setting::MouseButtonSetting *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; ConstraintAttachBodyPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::ConstraintAttachBodyPerformer< DataTypes >; create(RealObject *, BaseMouseInteractor *interactor)sofa::gui::component::performer::TInteractionPerformer< DataTypes >inlinestatic; draw(const core::visual::VisualParams *vparams)sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; execute()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; getInteractionObject()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >; handleEvent(core::objectmodel::Event *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; InteractionPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::InteractionPerformerinline; InteractionPerformerFactory typedefsofa::gui::component::performer::InteractionPerformer; m_flagssofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_freezePerformersofa::gui::component::performer::InteractionPerformer; m_interactionObjectsofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_interactorsofa::gui::component::performer::InteractionPerformer; m_mappersofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_mstate1sofa::gui::component::performer",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_constraint_attach_body_performer-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_constraint_attach_body_performer-members.html
Usability,clear,clear," BaseAttachBodyPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >explicit; clear()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; configure(sofa::component::setting::MouseButtonSetting *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; ConstraintAttachBodyPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::ConstraintAttachBodyPerformer< DataTypes >; create(RealObject *, BaseMouseInteractor *interactor)sofa::gui::component::performer::TInteractionPerformer< DataTypes >inlinestatic; draw(const core::visual::VisualParams *vparams)sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; execute()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; getInteractionObject()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >; handleEvent(core::objectmodel::Event *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; InteractionPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::InteractionPerformerinline; InteractionPerformerFactory typedefsofa::gui::component::performer::InteractionPerformer; m_flagssofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_freezePerformersofa::gui::component::performer::InteractionPerformer; m_interactionObjectsofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_interactorsofa::gui::component::performer::InteractionPerformer; m_mappersofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_mstate1sofa::gui::component::performer",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_constraint_attach_body_performer-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_constraint_attach_body_performer-members.html
Modifiability,inherit,inherited,﻿. SOFA API: sofa::gui::component::performer::ConstraintAttachBodyPerformer< DataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::gui::component::performer::ConstraintAttachBodyPerformer< DataTypes > Class Template Reference . #include <ConstraintAttachBodyPerformer.h>. Inheritance diagram for sofa::gui::component::performer::ConstraintAttachBodyPerformer< DataTypes >:. [legend]. Protected Attributes; sofa::core::behavior::MechanicalState< DataTypes > * m_mstate1;  ; sofa::core::behavior::MechanicalState< DataTypes > * m_mstate2;  ;  Protected Attributes inherited from sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >; sofa::core::objectmodel::BaseObject::SPtr m_interactionObject;  ; MouseContactMapper * m_mapper;  ; core::visual::DisplayFlags m_flags;  . Public Member Functions;  ConstraintAttachBodyPerformer (BaseMouseInteractor *i);  ; virtual ~ConstraintAttachBodyPerformer ()=default;  ; virtual bool startPartial (const BodyPicked &picked) override;  ;  Public Member Functions inherited from sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >;  BaseAttachBodyPerformer (BaseMouseInteractor *i);  ; virtual ~BaseAttachBodyPerformer ();  ; virtual void start ();  ; virtual void draw (const core::visual::VisualParams *vparams);  ; virtual void clear ();  ; virtual void execute ();  ; sofa::core::objectmodel::BaseObject::SPtr getInteractionObject ();  ;  Public Member Functions inherited from sofa::gui::component::performer::TInteractionPerformer< DataTypes >;  TInteractionPerformer (BaseMouseInteractor *i);  ;  Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer;  InteractionPerformer (BaseMouseInteractor *i);  ; virtual ~InteractionPerformer ();  ; virtual void configure (sofa::component::setting::MouseButtonSetting *);  ; virtual void handleEvent (core:,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_constraint_attach_body_performer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_constraint_attach_body_performer.html
Performance,perform,performer,﻿. SOFA API: sofa::gui::component::performer::ConstraintAttachBodyPerformer< DataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::gui::component::performer::ConstraintAttachBodyPerformer< DataTypes > Class Template Reference . #include <ConstraintAttachBodyPerformer.h>. Inheritance diagram for sofa::gui::component::performer::ConstraintAttachBodyPerformer< DataTypes >:. [legend]. Protected Attributes; sofa::core::behavior::MechanicalState< DataTypes > * m_mstate1;  ; sofa::core::behavior::MechanicalState< DataTypes > * m_mstate2;  ;  Protected Attributes inherited from sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >; sofa::core::objectmodel::BaseObject::SPtr m_interactionObject;  ; MouseContactMapper * m_mapper;  ; core::visual::DisplayFlags m_flags;  . Public Member Functions;  ConstraintAttachBodyPerformer (BaseMouseInteractor *i);  ; virtual ~ConstraintAttachBodyPerformer ()=default;  ; virtual bool startPartial (const BodyPicked &picked) override;  ;  Public Member Functions inherited from sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >;  BaseAttachBodyPerformer (BaseMouseInteractor *i);  ; virtual ~BaseAttachBodyPerformer ();  ; virtual void start ();  ; virtual void draw (const core::visual::VisualParams *vparams);  ; virtual void clear ();  ; virtual void execute ();  ; sofa::core::objectmodel::BaseObject::SPtr getInteractionObject ();  ;  Public Member Functions inherited from sofa::gui::component::performer::TInteractionPerformer< DataTypes >;  TInteractionPerformer (BaseMouseInteractor *i);  ;  Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer;  InteractionPerformer (BaseMouseInteractor *i);  ; virtual ~InteractionPerformer ();  ; virtual void configure (sofa::component::setting::MouseButtonSetting *);  ; virtual void handleEvent (core:,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_constraint_attach_body_performer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_constraint_attach_body_performer.html
Usability,clear,clear,"gend]. Protected Attributes; sofa::core::behavior::MechanicalState< DataTypes > * m_mstate1;  ; sofa::core::behavior::MechanicalState< DataTypes > * m_mstate2;  ;  Protected Attributes inherited from sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >; sofa::core::objectmodel::BaseObject::SPtr m_interactionObject;  ; MouseContactMapper * m_mapper;  ; core::visual::DisplayFlags m_flags;  . Public Member Functions;  ConstraintAttachBodyPerformer (BaseMouseInteractor *i);  ; virtual ~ConstraintAttachBodyPerformer ()=default;  ; virtual bool startPartial (const BodyPicked &picked) override;  ;  Public Member Functions inherited from sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >;  BaseAttachBodyPerformer (BaseMouseInteractor *i);  ; virtual ~BaseAttachBodyPerformer ();  ; virtual void start ();  ; virtual void draw (const core::visual::VisualParams *vparams);  ; virtual void clear ();  ; virtual void execute ();  ; sofa::core::objectmodel::BaseObject::SPtr getInteractionObject ();  ;  Public Member Functions inherited from sofa::gui::component::performer::TInteractionPerformer< DataTypes >;  TInteractionPerformer (BaseMouseInteractor *i);  ;  Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer;  InteractionPerformer (BaseMouseInteractor *i);  ; virtual ~InteractionPerformer ();  ; virtual void configure (sofa::component::setting::MouseButtonSetting *);  ; virtual void handleEvent (core::objectmodel::Event *);  ; virtual void setPerformerFreeze ();  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", interactor, m_interactor);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::component::performer::InteractionPerformer; BaseMouseInteractor * m_interactor;  ; bool m_freezePerformer;  ;  Static Public Member Functions inherited from sofa::gui::component::performer::TInte",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_constraint_attach_body_performer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_constraint_attach_body_performer.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::FixParticlePerformer< DataTypes > Member List . This is the complete list of members for sofa::gui::component::performer::FixParticlePerformer< DataTypes >, including all inherited members. configure(sofa::component::setting::MouseButtonSetting *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; Coord typedefsofa::gui::component::performer::FixParticlePerformer< DataTypes >; create(RealObject *, BaseMouseInteractor *interactor)sofa::gui::component::performer::TInteractionPerformer< DataTypes >inlinestatic; draw(const core::visual::VisualParams *vparams)sofa::gui::component::performer::FixParticlePerformer< DataTypes >virtual; execute()sofa::gui::component::performer::FixParticlePerformer< DataTypes >virtual; fixationssofa::gui::component::performer::FixParticlePerformer< DataTypes >protected; FixParticlePerformer(BaseMouseInteractor *i)sofa::gui::component::performer::FixParticlePerformer< DataTypes >; getFixationPoints(const BodyPicked &b, type::vector< unsigned int > &points, typename DataTypes::Coord &fixPoint)sofa::gui::component::performer::FixParticlePerformer< DataTypes >protected; GetFixationPointsOnModelFunction typedefsofa::gui::component::performer::FixParticlePerformer< DataTypes >; getFixationPointsSphere(sofa::core::sptr< sofa::core::CollisionModel > model, const Index idx, type::vector< Index > &points, Coord &fixPoint)sofa::gui::component::performer::FixParticlePerformer< DataTypes >inlinestatic; getFixationPointsTriangle(sofa::core::sptr< sofa::core::CollisionModel > model, const Index idx, type::vector< Index > &points, Coord &fixPoint)sofa::gui::component::performer::FixParticlePerformer< DataTypes >inlinestatic; getMapInstance()sofa::gui::component::performer::FixParticlePerformer< DataTypes >inlinestatic; handleEvent(core::objectmodel::Event *)sofa::gui::component::performer::InteractionPerformerin",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_fix_particle_performer-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_fix_particle_performer-members.html
Performance,perform,performer,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::FixParticlePerformer< DataTypes > Member List . This is the complete list of members for sofa::gui::component::performer::FixParticlePerformer< DataTypes >, including all inherited members. configure(sofa::component::setting::MouseButtonSetting *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; Coord typedefsofa::gui::component::performer::FixParticlePerformer< DataTypes >; create(RealObject *, BaseMouseInteractor *interactor)sofa::gui::component::performer::TInteractionPerformer< DataTypes >inlinestatic; draw(const core::visual::VisualParams *vparams)sofa::gui::component::performer::FixParticlePerformer< DataTypes >virtual; execute()sofa::gui::component::performer::FixParticlePerformer< DataTypes >virtual; fixationssofa::gui::component::performer::FixParticlePerformer< DataTypes >protected; FixParticlePerformer(BaseMouseInteractor *i)sofa::gui::component::performer::FixParticlePerformer< DataTypes >; getFixationPoints(const BodyPicked &b, type::vector< unsigned int > &points, typename DataTypes::Coord &fixPoint)sofa::gui::component::performer::FixParticlePerformer< DataTypes >protected; GetFixationPointsOnModelFunction typedefsofa::gui::component::performer::FixParticlePerformer< DataTypes >; getFixationPointsSphere(sofa::core::sptr< sofa::core::CollisionModel > model, const Index idx, type::vector< Index > &points, Coord &fixPoint)sofa::gui::component::performer::FixParticlePerformer< DataTypes >inlinestatic; getFixationPointsTriangle(sofa::core::sptr< sofa::core::CollisionModel > model, const Index idx, type::vector< Index > &points, Coord &fixPoint)sofa::gui::component::performer::FixParticlePerformer< DataTypes >inlinestatic; getMapInstance()sofa::gui::component::performer::FixParticlePerformer< DataTypes >inlinestatic; handleEvent(core::objectmodel::Event *)sofa::gui::component::performer::InteractionPerformerin",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_fix_particle_performer-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_fix_particle_performer-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::component::performer::FixParticlePerformer< DataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Static Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::component::performer::FixParticlePerformer< DataTypes > Class Template Reference . #include <FixParticlePerformer.h>. Inheritance diagram for sofa::gui::component::performer::FixParticlePerformer< DataTypes >:. [legend]. Protected Attributes; std::vector< simulation::Node * > fixations;  ;  Protected Attributes inherited from sofa::gui::component::performer::FixParticlePerformerConfiguration; SReal stiffness;  . Static Protected Attributes; static MapTypeFunction * s_mapSupportedModels = nullptr;  . Public Member Functions;  FixParticlePerformer (BaseMouseInteractor *i);  ; void start ();  ; void execute ();  ; void draw (const core::visual::VisualParams *vparams);  ;  Public Member Functions inherited from sofa::gui::component::performer::TInteractionPerformer< DataTypes >;  TInteractionPerformer (BaseMouseInteractor *i);  ;  Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer;  InteractionPerformer (BaseMouseInteractor *i);  ; virtual ~InteractionPerformer ();  ; virtual void configure (sofa::component::setting::MouseButtonSetting *);  ; virtual void handleEvent (core::objectmodel::Event *);  ; virtual void setPerformerFreeze ();  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", interactor, m_interactor);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer);  ;  Public Member Functions inherited from sofa::gui::component::performer::FixParticlePerformerConfiguration; void setStiffness (SReal s);  . Static Public Member Functions; static MapTypeFunction * getMapInstance ();  ; template<typename TCollisionModel > ; static int Re",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_fix_particle_performer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_fix_particle_performer.html
Performance,perform,performer,"﻿. SOFA API: sofa::gui::component::performer::FixParticlePerformer< DataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Static Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::component::performer::FixParticlePerformer< DataTypes > Class Template Reference . #include <FixParticlePerformer.h>. Inheritance diagram for sofa::gui::component::performer::FixParticlePerformer< DataTypes >:. [legend]. Protected Attributes; std::vector< simulation::Node * > fixations;  ;  Protected Attributes inherited from sofa::gui::component::performer::FixParticlePerformerConfiguration; SReal stiffness;  . Static Protected Attributes; static MapTypeFunction * s_mapSupportedModels = nullptr;  . Public Member Functions;  FixParticlePerformer (BaseMouseInteractor *i);  ; void start ();  ; void execute ();  ; void draw (const core::visual::VisualParams *vparams);  ;  Public Member Functions inherited from sofa::gui::component::performer::TInteractionPerformer< DataTypes >;  TInteractionPerformer (BaseMouseInteractor *i);  ;  Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer;  InteractionPerformer (BaseMouseInteractor *i);  ; virtual ~InteractionPerformer ();  ; virtual void configure (sofa::component::setting::MouseButtonSetting *);  ; virtual void handleEvent (core::objectmodel::Event *);  ; virtual void setPerformerFreeze ();  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", interactor, m_interactor);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer);  ;  Public Member Functions inherited from sofa::gui::component::performer::FixParticlePerformerConfiguration; void setStiffness (SReal s);  . Static Public Member Functions; static MapTypeFunction * getMapInstance ();  ; template<typename TCollisionModel > ; static int Re",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_fix_particle_performer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_fix_particle_performer.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::FixParticlePerformerConfiguration Member List . This is the complete list of members for sofa::gui::component::performer::FixParticlePerformerConfiguration, including all inherited members. setStiffness(SReal s)sofa::gui::component::performer::FixParticlePerformerConfigurationinline; stiffnesssofa::gui::component::performer::FixParticlePerformerConfigurationprotected. Generated on Mon Nov 11 2024 03:19:20 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_fix_particle_performer_configuration-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_fix_particle_performer_configuration-members.html
Performance,perform,performer,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::FixParticlePerformerConfiguration Member List . This is the complete list of members for sofa::gui::component::performer::FixParticlePerformerConfiguration, including all inherited members. setStiffness(SReal s)sofa::gui::component::performer::FixParticlePerformerConfigurationinline; stiffnesssofa::gui::component::performer::FixParticlePerformerConfigurationprotected. Generated on Mon Nov 11 2024 03:19:20 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_fix_particle_performer_configuration-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_fix_particle_performer_configuration-members.html
Performance,perform,performer,﻿. SOFA API: sofa::gui::component::performer::FixParticlePerformerConfiguration Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::gui::component::performer::FixParticlePerformerConfiguration Class Reference . #include <FixParticlePerformer.h>. Inheritance diagram for sofa::gui::component::performer::FixParticlePerformerConfiguration:. [legend]. Protected Attributes; SReal stiffness;  . Public Member Functions; void setStiffness (SReal s);  . Attribute details. ◆ stiffness. SReal sofa::gui::component::performer::FixParticlePerformerConfiguration::stiffness. protected . Function details. ◆ setStiffness(). void sofa::gui::component::performer::FixParticlePerformerConfiguration::setStiffness ; (; SReal ; s). inline . sofaguicomponentperformerFixParticlePerformerConfiguration; Generated on Mon Nov 11 2024 03:19:20 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_fix_particle_performer_configuration.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_fix_particle_performer_configuration.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::InciseAlongPathPerformer Member List . This is the complete list of members for sofa::gui::component::performer::InciseAlongPathPerformer, including all inherited members. configure(sofa::component::setting::MouseButtonSetting *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; cptsofa::gui::component::performer::InciseAlongPathPerformerprotected; create(RealObject *, BaseMouseInteractor *interactor)sofa::gui::component::performer::InteractionPerformerinlinestatic; currentMethodsofa::gui::component::performer::InciseAlongPathPerformerConfigurationprotected; draw(const core::visual::VisualParams *vparams) overridesofa::gui::component::performer::InciseAlongPathPerformervirtual; execute() overridesofa::gui::component::performer::InciseAlongPathPerformervirtual; finishIncisionsofa::gui::component::performer::InciseAlongPathPerformerConfigurationprotected; firstBodysofa::gui::component::performer::InciseAlongPathPerformerprotected; firstIncisionBodysofa::gui::component::performer::InciseAlongPathPerformerprotected; fullcutsofa::gui::component::performer::InciseAlongPathPerformerprotected; getFirstIncisionBodyPicked()sofa::gui::component::performer::InciseAlongPathPerformerinline; getLastBodyPicked()sofa::gui::component::performer::InciseAlongPathPerformerinline; handleEvent(core::objectmodel::Event *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; InciseAlongPathPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::InciseAlongPathPerformerinline; Index typedefsofa::gui::component::performer::InciseAlongPathPerformer; initialNbPointssofa::gui::component::performer::InciseAlongPathPerformerprotected; initialNbTrianglessofa::gui::component::performer::InciseAlongPathPerformerprotected; InteractionPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::InteractionPerformerinline; Inter",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_incise_along_path_performer-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_incise_along_path_performer-members.html
Performance,perform,performer,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::InciseAlongPathPerformer Member List . This is the complete list of members for sofa::gui::component::performer::InciseAlongPathPerformer, including all inherited members. configure(sofa::component::setting::MouseButtonSetting *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; cptsofa::gui::component::performer::InciseAlongPathPerformerprotected; create(RealObject *, BaseMouseInteractor *interactor)sofa::gui::component::performer::InteractionPerformerinlinestatic; currentMethodsofa::gui::component::performer::InciseAlongPathPerformerConfigurationprotected; draw(const core::visual::VisualParams *vparams) overridesofa::gui::component::performer::InciseAlongPathPerformervirtual; execute() overridesofa::gui::component::performer::InciseAlongPathPerformervirtual; finishIncisionsofa::gui::component::performer::InciseAlongPathPerformerConfigurationprotected; firstBodysofa::gui::component::performer::InciseAlongPathPerformerprotected; firstIncisionBodysofa::gui::component::performer::InciseAlongPathPerformerprotected; fullcutsofa::gui::component::performer::InciseAlongPathPerformerprotected; getFirstIncisionBodyPicked()sofa::gui::component::performer::InciseAlongPathPerformerinline; getLastBodyPicked()sofa::gui::component::performer::InciseAlongPathPerformerinline; handleEvent(core::objectmodel::Event *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; InciseAlongPathPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::InciseAlongPathPerformerinline; Index typedefsofa::gui::component::performer::InciseAlongPathPerformer; initialNbPointssofa::gui::component::performer::InciseAlongPathPerformerprotected; initialNbTrianglessofa::gui::component::performer::InciseAlongPathPerformerprotected; InteractionPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::InteractionPerformerinline; Inter",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_incise_along_path_performer-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_incise_along_path_performer-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::component::performer::InciseAlongPathPerformer Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::component::performer::InciseAlongPathPerformer Class Reference . #include <InciseAlongPathPerformer.h>. Inheritance diagram for sofa::gui::component::performer::InciseAlongPathPerformer:. [legend]. Protected Attributes; TopologicalChangeManager topologyChangeManager;  ; BodyPicked startBody;  ; BodyPicked firstBody;  ; BodyPicked secondBody;  ; BodyPicked firstIncisionBody;  ; int cpt;  ; bool fullcut;  ; unsigned int initialNbTriangles;  ; unsigned int initialNbPoints;  ;  Protected Attributes inherited from sofa::gui::component::performer::InciseAlongPathPerformerConfiguration; int currentMethod;  ; int snapingBorderValue;  ; int snapingValue;  ; bool finishIncision;  ; bool keepPoint;  . Public Member Functions;  InciseAlongPathPerformer (BaseMouseInteractor *i);  ;  ~InciseAlongPathPerformer () override;  ; void start () override;  ; void execute () override;  ; void draw (const core::visual::VisualParams *vparams) override;  ; BodyPicked & getFirstIncisionBodyPicked ();  ; BodyPicked & getLastBodyPicked ();  ; void setPerformerFreeze () override;  ;  Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer;  InteractionPerformer (BaseMouseInteractor *i);  ; virtual ~InteractionPerformer ();  ; virtual void configure (sofa::component::setting::MouseButtonSetting *);  ; virtual void handleEvent (core::objectmodel::Event *);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", interactor, m_interactor);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer);  ;  Public Member Functions inherited from sofa::gui::component::performer::InciseAlongPathPerformerConfiguration; void setIncisionMethod (int m);  ; void setSnap",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_incise_along_path_performer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_incise_along_path_performer.html
Performance,perform,performer,"﻿. SOFA API: sofa::gui::component::performer::InciseAlongPathPerformer Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::component::performer::InciseAlongPathPerformer Class Reference . #include <InciseAlongPathPerformer.h>. Inheritance diagram for sofa::gui::component::performer::InciseAlongPathPerformer:. [legend]. Protected Attributes; TopologicalChangeManager topologyChangeManager;  ; BodyPicked startBody;  ; BodyPicked firstBody;  ; BodyPicked secondBody;  ; BodyPicked firstIncisionBody;  ; int cpt;  ; bool fullcut;  ; unsigned int initialNbTriangles;  ; unsigned int initialNbPoints;  ;  Protected Attributes inherited from sofa::gui::component::performer::InciseAlongPathPerformerConfiguration; int currentMethod;  ; int snapingBorderValue;  ; int snapingValue;  ; bool finishIncision;  ; bool keepPoint;  . Public Member Functions;  InciseAlongPathPerformer (BaseMouseInteractor *i);  ;  ~InciseAlongPathPerformer () override;  ; void start () override;  ; void execute () override;  ; void draw (const core::visual::VisualParams *vparams) override;  ; BodyPicked & getFirstIncisionBodyPicked ();  ; BodyPicked & getLastBodyPicked ();  ; void setPerformerFreeze () override;  ;  Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer;  InteractionPerformer (BaseMouseInteractor *i);  ; virtual ~InteractionPerformer ();  ; virtual void configure (sofa::component::setting::MouseButtonSetting *);  ; virtual void handleEvent (core::objectmodel::Event *);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", interactor, m_interactor);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer);  ;  Public Member Functions inherited from sofa::gui::component::performer::InciseAlongPathPerformerConfiguration; void setIncisionMethod (int m);  ; void setSnap",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_incise_along_path_performer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_incise_along_path_performer.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::InciseAlongPathPerformerConfiguration Member List . This is the complete list of members for sofa::gui::component::performer::InciseAlongPathPerformerConfiguration, including all inherited members. currentMethodsofa::gui::component::performer::InciseAlongPathPerformerConfigurationprotected; finishIncisionsofa::gui::component::performer::InciseAlongPathPerformerConfigurationprotected; keepPointsofa::gui::component::performer::InciseAlongPathPerformerConfigurationprotected; setCompleteIncision(bool m)sofa::gui::component::performer::InciseAlongPathPerformerConfigurationinline; setIncisionMethod(int m)sofa::gui::component::performer::InciseAlongPathPerformerConfigurationinline; setKeepPoint(bool m)sofa::gui::component::performer::InciseAlongPathPerformerConfigurationinline; setSnapingBorderValue(int m)sofa::gui::component::performer::InciseAlongPathPerformerConfigurationinline; setSnapingValue(int m)sofa::gui::component::performer::InciseAlongPathPerformerConfigurationinline; snapingBorderValuesofa::gui::component::performer::InciseAlongPathPerformerConfigurationprotected; snapingValuesofa::gui::component::performer::InciseAlongPathPerformerConfigurationprotected. Generated on Mon Nov 11 2024 03:20:04 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_incise_along_path_performer_configuration-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_incise_along_path_performer_configuration-members.html
Performance,perform,performer,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::InciseAlongPathPerformerConfiguration Member List . This is the complete list of members for sofa::gui::component::performer::InciseAlongPathPerformerConfiguration, including all inherited members. currentMethodsofa::gui::component::performer::InciseAlongPathPerformerConfigurationprotected; finishIncisionsofa::gui::component::performer::InciseAlongPathPerformerConfigurationprotected; keepPointsofa::gui::component::performer::InciseAlongPathPerformerConfigurationprotected; setCompleteIncision(bool m)sofa::gui::component::performer::InciseAlongPathPerformerConfigurationinline; setIncisionMethod(int m)sofa::gui::component::performer::InciseAlongPathPerformerConfigurationinline; setKeepPoint(bool m)sofa::gui::component::performer::InciseAlongPathPerformerConfigurationinline; setSnapingBorderValue(int m)sofa::gui::component::performer::InciseAlongPathPerformerConfigurationinline; setSnapingValue(int m)sofa::gui::component::performer::InciseAlongPathPerformerConfigurationinline; snapingBorderValuesofa::gui::component::performer::InciseAlongPathPerformerConfigurationprotected; snapingValuesofa::gui::component::performer::InciseAlongPathPerformerConfigurationprotected. Generated on Mon Nov 11 2024 03:20:04 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_incise_along_path_performer_configuration-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_incise_along_path_performer_configuration-members.html
Performance,perform,performer,﻿. SOFA API: sofa::gui::component::performer::InciseAlongPathPerformerConfiguration Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::gui::component::performer::InciseAlongPathPerformerConfiguration Class Reference . #include <InciseAlongPathPerformer.h>. Inheritance diagram for sofa::gui::component::performer::InciseAlongPathPerformerConfiguration:. [legend]. Protected Attributes; int currentMethod;  ; int snapingBorderValue;  ; int snapingValue;  ; bool finishIncision;  ; bool keepPoint;  . Public Member Functions; void setIncisionMethod (int m);  ; void setSnapingBorderValue (int m);  ; void setSnapingValue (int m);  ; void setCompleteIncision (bool m);  ; void setKeepPoint (bool m);  . Attribute details. ◆ currentMethod. int sofa::gui::component::performer::InciseAlongPathPerformerConfiguration::currentMethod. protected . ◆ finishIncision. bool sofa::gui::component::performer::InciseAlongPathPerformerConfiguration::finishIncision. protected . ◆ keepPoint. bool sofa::gui::component::performer::InciseAlongPathPerformerConfiguration::keepPoint. protected . ◆ snapingBorderValue. int sofa::gui::component::performer::InciseAlongPathPerformerConfiguration::snapingBorderValue. protected . ◆ snapingValue. int sofa::gui::component::performer::InciseAlongPathPerformerConfiguration::snapingValue. protected . Function details. ◆ setCompleteIncision(). void sofa::gui::component::performer::InciseAlongPathPerformerConfiguration::setCompleteIncision ; (; bool ; m). inline . ◆ setIncisionMethod(). void sofa::gui::component::performer::InciseAlongPathPerformerConfiguration::setIncisionMethod ; (; int ; m). inline . ◆ setKeepPoint(). void sofa::gui::component::performer::InciseAlongPathPerformerConfiguration::setKeepPoint ; (; bool ; m). inline . ◆ setSnapingBorderValue(). void sofa::gui::component::performer::InciseAlongPathPerformerConfiguration::setSnapingBorde,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_incise_along_path_performer_configuration.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_incise_along_path_performer_configuration.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::InteractionPerformer Member List . This is the complete list of members for sofa::gui::component::performer::InteractionPerformer, including all inherited members. configure(sofa::component::setting::MouseButtonSetting *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; create(RealObject *, BaseMouseInteractor *interactor)sofa::gui::component::performer::InteractionPerformerinlinestatic; draw(const core::visual::VisualParams *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; execute()=0sofa::gui::component::performer::InteractionPerformerpure virtual; handleEvent(core::objectmodel::Event *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; InteractionPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::InteractionPerformerinline; InteractionPerformerFactory typedefsofa::gui::component::performer::InteractionPerformer; m_freezePerformersofa::gui::component::performer::InteractionPerformer; m_interactorsofa::gui::component::performer::InteractionPerformer; setPerformerFreeze()sofa::gui::component::performer::InteractionPerformerinlinevirtual; SOFA_ATTRIBUTE_DISABLED__NAMING(""v24.06"", ""v24.06"", interactor, m_interactor)sofa::gui::component::performer::InteractionPerformer; SOFA_ATTRIBUTE_DISABLED__NAMING(""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer)sofa::gui::component::performer::InteractionPerformer; start()=0sofa::gui::component::performer::InteractionPerformerpure virtual; ~InteractionPerformer()sofa::gui::component::performer::InteractionPerformerinlinevirtual. Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_interaction_performer-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_interaction_performer-members.html
Performance,perform,performer,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::InteractionPerformer Member List . This is the complete list of members for sofa::gui::component::performer::InteractionPerformer, including all inherited members. configure(sofa::component::setting::MouseButtonSetting *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; create(RealObject *, BaseMouseInteractor *interactor)sofa::gui::component::performer::InteractionPerformerinlinestatic; draw(const core::visual::VisualParams *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; execute()=0sofa::gui::component::performer::InteractionPerformerpure virtual; handleEvent(core::objectmodel::Event *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; InteractionPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::InteractionPerformerinline; InteractionPerformerFactory typedefsofa::gui::component::performer::InteractionPerformer; m_freezePerformersofa::gui::component::performer::InteractionPerformer; m_interactorsofa::gui::component::performer::InteractionPerformer; setPerformerFreeze()sofa::gui::component::performer::InteractionPerformerinlinevirtual; SOFA_ATTRIBUTE_DISABLED__NAMING(""v24.06"", ""v24.06"", interactor, m_interactor)sofa::gui::component::performer::InteractionPerformer; SOFA_ATTRIBUTE_DISABLED__NAMING(""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer)sofa::gui::component::performer::InteractionPerformer; start()=0sofa::gui::component::performer::InteractionPerformerpure virtual; ~InteractionPerformer()sofa::gui::component::performer::InteractionPerformerinlinevirtual. Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_interaction_performer-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_interaction_performer-members.html
Modifiability,config,configure,"﻿. SOFA API: sofa::gui::component::performer::InteractionPerformer Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::gui::component::performer::InteractionPerformer Class Referenceabstract . #include <InteractionPerformer.h>. Inheritance diagram for sofa::gui::component::performer::InteractionPerformer:. [legend]. Public Attributes; BaseMouseInteractor * m_interactor;  ; bool m_freezePerformer;  . Public Member Functions;  InteractionPerformer (BaseMouseInteractor *i);  ; virtual ~InteractionPerformer ();  ; virtual void configure (sofa::component::setting::MouseButtonSetting *);  ; virtual void start ()=0;  ; virtual void execute ()=0;  ; virtual void handleEvent (core::objectmodel::Event *);  ; virtual void draw (const core::visual::VisualParams *);  ; virtual void setPerformerFreeze ();  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", interactor, m_interactor);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer);  . Static Public Member Functions; template<class RealObject > ; static RealObject * create (RealObject *, BaseMouseInteractor *interactor);  . Attribute details. ◆ m_freezePerformer. bool sofa::gui::component::performer::InteractionPerformer::m_freezePerformer. ◆ m_interactor. BaseMouseInteractor* sofa::gui::component::performer::InteractionPerformer::m_interactor. Constructor details. ◆ InteractionPerformer(). sofa::gui::component::performer::InteractionPerformer::InteractionPerformer ; (; BaseMouseInteractor * ; i). inline . ◆ ~InteractionPerformer(). virtual sofa::gui::component::performer::InteractionPerformer::~InteractionPerformer ; (; ). inlinevirtual . Function details. ◆ configure(). virtual void sofa::gui::component::performer::InteractionPerformer::configure ; (; sofa::component::setting::MouseButtonSetting * ; ). inlinevirtual . Reimplemented in ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_interaction_performer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_interaction_performer.html
Performance,perform,performer,"﻿. SOFA API: sofa::gui::component::performer::InteractionPerformer Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::gui::component::performer::InteractionPerformer Class Referenceabstract . #include <InteractionPerformer.h>. Inheritance diagram for sofa::gui::component::performer::InteractionPerformer:. [legend]. Public Attributes; BaseMouseInteractor * m_interactor;  ; bool m_freezePerformer;  . Public Member Functions;  InteractionPerformer (BaseMouseInteractor *i);  ; virtual ~InteractionPerformer ();  ; virtual void configure (sofa::component::setting::MouseButtonSetting *);  ; virtual void start ()=0;  ; virtual void execute ()=0;  ; virtual void handleEvent (core::objectmodel::Event *);  ; virtual void draw (const core::visual::VisualParams *);  ; virtual void setPerformerFreeze ();  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", interactor, m_interactor);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer);  . Static Public Member Functions; template<class RealObject > ; static RealObject * create (RealObject *, BaseMouseInteractor *interactor);  . Attribute details. ◆ m_freezePerformer. bool sofa::gui::component::performer::InteractionPerformer::m_freezePerformer. ◆ m_interactor. BaseMouseInteractor* sofa::gui::component::performer::InteractionPerformer::m_interactor. Constructor details. ◆ InteractionPerformer(). sofa::gui::component::performer::InteractionPerformer::InteractionPerformer ; (; BaseMouseInteractor * ; i). inline . ◆ ~InteractionPerformer(). virtual sofa::gui::component::performer::InteractionPerformer::~InteractionPerformer ; (; ). inlinevirtual . Function details. ◆ configure(). virtual void sofa::gui::component::performer::InteractionPerformer::configure ; (; sofa::component::setting::MouseButtonSetting * ; ). inlinevirtual . Reimplemented in ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_interaction_performer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_interaction_performer.html
Deployability,update,updateInternal,"st std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseMouseInteractor, core::BehaviorModel)sofa::gui::component::performer::BaseMouseInteractor; sofa::core::BehaviorModel::SOFA_ABSTRACT_CLASS(BehaviorModel, objectmodel::BaseObject)sofa::core::BehaviorModel; SOFA_CLASS(SOFA_TEMPLATE(MouseInteractor, DataTypes), BaseMouseInteractor)sofa::gui::component::performer::MouseInteractor< DataTypes >; sofa::gui::component::performer::BaseMouseInteractor::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updatePosition(SReal dt) overridesofa::gui::component::performer::BaseMouseInteractorvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecPerformer typedefsofa::gui::component::performer::BaseMouseInteractor; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BehaviorModel() overridesofa::core::BehaviorModelinlineprotected; ~MouseInteractor() overridesofa::gui::component::performer::MouseInteractor< DataTypes >inline.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::MouseInteractor< DataTypes > Member List . This is the complete list of members for sofa::gui::component::performer::MouseInteractor< DataTypes >, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::BehaviorModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInteractionPerformer(InteractionPerformer *i)sofa::gui::component::performer::BaseMouseInteractor; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseMouseInteractor()sofa::gui::component::performer::BaseMouseInteractorinlineprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BehaviorModel()sofa::core::BehaviorModelinlineprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::obje",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor-members.html
Performance,perform,performer,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::MouseInteractor< DataTypes > Member List . This is the complete list of members for sofa::gui::component::performer::MouseInteractor< DataTypes >, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::BehaviorModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInteractionPerformer(InteractionPerformer *i)sofa::gui::component::performer::BaseMouseInteractor; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseMouseInteractor()sofa::gui::component::performer::BaseMouseInteractorinlineprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BehaviorModel()sofa::core::BehaviorModelinlineprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::obje",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::BehaviorModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInteractionPerformer(InteractionPerformer *i)sofa::gui::component::performer::BaseMouseInteractor; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseMouseInteractor()sofa::gui::component::performer::BaseMouseInteractorinlineprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BehaviorModel()sofa::core::BehaviorModelinlineprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::obje",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor-members.html
Usability,clear,clearLoggedMessages,"< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseMouseInteractor()sofa::gui::component::performer::BaseMouseInteractorinlineprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BehaviorModel()sofa::core::BehaviorModelinlineprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::gui::component::performer::BaseMouseInteractorvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::gui::component::performer::MouseInteractor< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; distanceFromMousesofa::gui::component::performer::BaseMouseInteractorprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::gui::component::performer::BaseMouseInteractorvirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor-members.html
Availability,down,down,"t::performer::BaseMouseInteractor; MouseCollisionModel * mouseCollision;  ; BodyPicked lastPicked;  ; bool isAttached;  ; SReal distanceFromMouse;  ; VecPerformer performers;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(MouseInteractor, DataTypes), BaseMouseInteractor);  ;  MouseInteractor ();  ;  ~MouseInteractor () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; core::behavior::BaseMechanicalState * getMouseContainer () override;  ;  Public Member Functions inherited from sofa::gui::component::performer::BaseMouseInteractor;  SOFA_ABSTRACT_CLASS (BaseMouseInteractor, core::BehaviorModel);  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void cleanup () override;  ; void addInteractionPerformer (InteractionPerformer *i);  ; bool removeInteractionPerformer (InteractionPerformer *i);  ; void updatePosition (SReal dt) override;  Computation of a new simulation step. More...;  ; void handleEvent (core::objectmodel::Event *e) override;  Handle an event. More...;  ; bool isMouseAttached () const;  ; void setMouseAttached (bool b);  ; MouseCollisionModel * getMouseRayModel ();  ; void setMouseRayModel (MouseCol",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor.html
Deployability,update,updatePosition,";  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(MouseInteractor, DataTypes), BaseMouseInteractor);  ;  MouseInteractor ();  ;  ~MouseInteractor () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; core::behavior::BaseMechanicalState * getMouseContainer () override;  ;  Public Member Functions inherited from sofa::gui::component::performer::BaseMouseInteractor;  SOFA_ABSTRACT_CLASS (BaseMouseInteractor, core::BehaviorModel);  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void cleanup () override;  ; void addInteractionPerformer (InteractionPerformer *i);  ; bool removeInteractionPerformer (InteractionPerformer *i);  ; void updatePosition (SReal dt) override;  Computation of a new simulation step. More...;  ; void handleEvent (core::objectmodel::Event *e) override;  Handle an event. More...;  ; bool isMouseAttached () const;  ; void setMouseAttached (bool b);  ; MouseCollisionModel * getMouseRayModel ();  ; void setMouseRayModel (MouseCollisionModel *model);  ; BodyPicked getBodyPicked () const;  ; void setBodyPicked (BodyPicked picked);  ; SReal getDistanceFromMouse () const;  ; void setDistanceFromMouse (SReal d);  ;  Public Member Functions inherited from sofa::core::BehaviorModel;  SOFA_ABSTRACT_CLASS (BehaviorModel, objectmodel::BaseObject);  ; virtual bool addBBox (SReal *, SReal *);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::Exe",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor.html
Integrability,depend,dependent,"CT_CLASS (BaseMouseInteractor, core::BehaviorModel);  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void cleanup () override;  ; void addInteractionPerformer (InteractionPerformer *i);  ; bool removeInteractionPerformer (InteractionPerformer *i);  ; void updatePosition (SReal dt) override;  Computation of a new simulation step. More...;  ; void handleEvent (core::objectmodel::Event *e) override;  Handle an event. More...;  ; bool isMouseAttached () const;  ; void setMouseAttached (bool b);  ; MouseCollisionModel * getMouseRayModel ();  ; void setMouseRayModel (MouseCollisionModel *model);  ; BodyPicked getBodyPicked () const;  ; void setBodyPicked (BodyPicked picked);  ; SReal getDistanceFromMouse () const;  ; void setDistanceFromMouse (SReal d);  ;  Public Member Functions inherited from sofa::core::BehaviorModel;  SOFA_ABSTRACT_CLASS (BehaviorModel, objectmodel::BaseObject);  ; virtual bool addBBox (SReal *, SReal *);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; B",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor.html
Modifiability,inherit,inherited,"ctor< DataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::gui::component::performer::MouseInteractor< DataTypes > Class Template Reference . #include <MouseInteractor.h>; class to execute specific tasks of the Mouse ; More... Inheritance diagram for sofa::gui::component::performer::MouseInteractor< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::gui::component::performer::MouseInteractor< DataTypes >; class to execute specific tasks of the Mouse . Protected Attributes; MouseContainer * mouseInSofa;  ;  Protected Attributes inherited from sofa::gui::component::performer::BaseMouseInteractor; MouseCollisionModel * mouseCollision;  ; BodyPicked lastPicked;  ; bool isAttached;  ; SReal distanceFromMouse;  ; VecPerformer performers;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(MouseInteractor, DataTypes), BaseMouseInteractor);  ;  MouseInteractor ();  ;  ~MouseInteractor () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; core::behavior::BaseMechanicalState * getMouseContainer () override;  ;  Public Member Functions inherited fr",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor.html
Performance,perform,performer,"﻿. SOFA API: sofa::gui::component::performer::MouseInteractor< DataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::gui::component::performer::MouseInteractor< DataTypes > Class Template Reference . #include <MouseInteractor.h>; class to execute specific tasks of the Mouse ; More... Inheritance diagram for sofa::gui::component::performer::MouseInteractor< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::gui::component::performer::MouseInteractor< DataTypes >; class to execute specific tasks of the Mouse . Protected Attributes; MouseContainer * mouseInSofa;  ;  Protected Attributes inherited from sofa::gui::component::performer::BaseMouseInteractor; MouseCollisionModel * mouseCollision;  ; BodyPicked lastPicked;  ; bool isAttached;  ; SReal distanceFromMouse;  ; VecPerformer performers;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(MouseInteractor, DataTypes), BaseMouseInteractor);  ;  MouseInteractor ();  ;  ~MouseInteractor () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; core::behavior::BaseMechanicalState * getMouseContai",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes > Member List . This is the complete list of members for sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >, including all inherited members. configure(sofa::component::setting::MouseButtonSetting *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; create(RealObject *, BaseMouseInteractor *interactor)sofa::gui::component::performer::TInteractionPerformer< DataTypes >inlinestatic; createElementList()sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >protected; draw(const core::visual::VisualParams *vparams)sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >virtual; end()sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >; execute()sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >virtual; firstClicksofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >protected; getElementInZone(VecIds &elementsToTest)sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >protected; getNeighboorElements(VecIds &elementsToTest)sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >protected; handleEvent(core::objectmodel::Event *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; InteractionPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::InteractionPerformerinline; InteractionPerformerFactory typedefsofa::gui::component::performer::InteractionPerformer; m_freezePerformersofa::gui::component::performer::InteractionPerformer; m_interactorsofa::gui::component::performer::InteractionPerformer; pickedsofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >protected; RemovePrimitivePerformer(BaseMouseInteractor *i)sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >; RemovePrimitivePerformerConfigurati",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer-members.html
Performance,perform,performer,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes > Member List . This is the complete list of members for sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >, including all inherited members. configure(sofa::component::setting::MouseButtonSetting *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; create(RealObject *, BaseMouseInteractor *interactor)sofa::gui::component::performer::TInteractionPerformer< DataTypes >inlinestatic; createElementList()sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >protected; draw(const core::visual::VisualParams *vparams)sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >virtual; end()sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >; execute()sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >virtual; firstClicksofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >protected; getElementInZone(VecIds &elementsToTest)sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >protected; getNeighboorElements(VecIds &elementsToTest)sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >protected; handleEvent(core::objectmodel::Event *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; InteractionPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::InteractionPerformerinline; InteractionPerformerFactory typedefsofa::gui::component::performer::InteractionPerformer; m_freezePerformersofa::gui::component::performer::InteractionPerformer; m_interactorsofa::gui::component::performer::InteractionPerformer; pickedsofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >protected; RemovePrimitivePerformer(BaseMouseInteractor *i)sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >; RemovePrimitivePerformerConfigurati",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer-members.html
Availability,error,error,ormer< DataTypes >::volumeOnSurface. protected . bool: true if a volumique zone is going to be removed at the surface of a volumique mesh. . Constructor details. ◆ RemovePrimitivePerformer(). template<class DataTypes > . sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::RemovePrimitivePerformer ; (; BaseMouseInteractor * ; i). ◆ ~RemovePrimitivePerformer(). template<class DataTypes > . sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::~RemovePrimitivePerformer ; (; ). inline . Function details. ◆ createElementList(). template<class DataTypes > . bool sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::createElementList. protected . Function creating a list of elements concerned by the removal operation. This function detect if a volume or a surface or a volume on the surface is going to be removed. Elements are stored in See alsoselectedElem. Calling . getNeighboorElements and . getElementInZone.; Returnsbool: false if method has encounter an error. . ◆ draw(). template<class DataTypes > . void sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::draw ; (; const core::visual::VisualParams * ; vparams). virtual . Reimplemented from sofa::gui::component::performer::InteractionPerformer. ◆ end(). template<class DataTypes > . void sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::end. ◆ execute(). template<class DataTypes > . void sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::execute. virtual . Implements sofa::gui::component::performer::InteractionPerformer. ◆ getElementInZone(). template<class DataTypes > . RemovePrimitivePerformer< DataTypes >::VecIds sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::getElementInZone ; (; VecIds & ; elementsToTest). protected . Function testing if elements are in the range of a given zone The zone is given by the selectorScale. Test is done on Barycentric point of elements. I.e if th,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer.html
Modifiability,inherit,inherited,"e <RemovePrimitivePerformer.h>. Inheritance diagram for sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >; Class to perform removing of topological elements (either one element or a an area) and handling topological mapping . Protected Attributes; BodyPicked picked;  picked structure from mouseInteractor. More...;  ; bool firstClick;  bool: true if first click (when removing zone, first clic show zone, second delete it). More...;  ; bool surfaceOnVolume;  bool: true if a surface zone is going to be removed on a volumique mesh. More...;  ; bool volumeOnSurface;  bool: true if a volumique zone is going to be removed at the surface of a volumique mesh. More...;  ; VecIds selectedElem;  vector of element Id concerned by the operation More...;  ;  Protected Attributes inherited from sofa::gui::component::performer::RemovePrimitivePerformerConfiguration; int topologicalOperation;  ; bool volumicMesh;  ; double selectorScale;  . Public Member Functions;  RemovePrimitivePerformer (BaseMouseInteractor *i);  ;  ~RemovePrimitivePerformer ();  ; void start ();  Functions called by TopologicalOperation performer. More...;  ; void execute ();  ; void end ();  ; void draw (const core::visual::VisualParams *vparams);  ;  Public Member Functions inherited from sofa::gui::component::performer::TInteractionPerformer< DataTypes >;  TInteractionPerformer (BaseMouseInteractor *i);  ;  Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer;  InteractionPerformer (BaseMouseInteractor *i);  ; virtual ~InteractionPerformer ();  ; virtual void configure (sofa::component::setting::MouseButtonSetting *);  ; virtual void handleEvent (core::objectmodel::Event *);  ; virtual void setPerformerFreeze ();  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", interactor, m_interactor);  ;  SOFA_ATTRIBUTE_",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer.html
Performance,perform,performer,"﻿. SOFA API: sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes > Class Template Reference . #include <RemovePrimitivePerformer.h>. Inheritance diagram for sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >; Class to perform removing of topological elements (either one element or a an area) and handling topological mapping . Protected Attributes; BodyPicked picked;  picked structure from mouseInteractor. More...;  ; bool firstClick;  bool: true if first click (when removing zone, first clic show zone, second delete it). More...;  ; bool surfaceOnVolume;  bool: true if a surface zone is going to be removed on a volumique mesh. More...;  ; bool volumeOnSurface;  bool: true if a volumique zone is going to be removed at the surface of a volumique mesh. More...;  ; VecIds selectedElem;  vector of element Id concerned by the operation More...;  ;  Protected Attributes inherited from sofa::gui::component::performer::RemovePrimitivePerformerConfiguration; int topologicalOperation;  ; bool volumicMesh;  ; double selectorScale;  . Public Member Functions;  RemovePrimitivePerformer (BaseMouseInteractor *i);  ;  ~RemovePrimitivePerformer ();  ; void start ();  Functions called by TopologicalOperation performer. More...;  ; void execute ();  ; void end ();  ; void draw (const core::visual::VisualParams *vparams);  ;  Public Member Functions inherited from sofa::gui::component::performer::TInteractionPerformer< DataTypes >;  TInteractionPerformer (BaseMouseInteractor *i);  ;  Public Member Functions inherited from sofa::gui::component::per",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer.html
Safety,detect,detect,: true if a surface zone is going to be removed on a volumique mesh. . ◆ volumeOnSurface. template<class DataTypes > . bool sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::volumeOnSurface. protected . bool: true if a volumique zone is going to be removed at the surface of a volumique mesh. . Constructor details. ◆ RemovePrimitivePerformer(). template<class DataTypes > . sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::RemovePrimitivePerformer ; (; BaseMouseInteractor * ; i). ◆ ~RemovePrimitivePerformer(). template<class DataTypes > . sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::~RemovePrimitivePerformer ; (; ). inline . Function details. ◆ createElementList(). template<class DataTypes > . bool sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::createElementList. protected . Function creating a list of elements concerned by the removal operation. This function detect if a volume or a surface or a volume on the surface is going to be removed. Elements are stored in See alsoselectedElem. Calling . getNeighboorElements and . getElementInZone.; Returnsbool: false if method has encounter an error. . ◆ draw(). template<class DataTypes > . void sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::draw ; (; const core::visual::VisualParams * ; vparams). virtual . Reimplemented from sofa::gui::component::performer::InteractionPerformer. ◆ end(). template<class DataTypes > . void sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::end. ◆ execute(). template<class DataTypes > . void sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::execute. virtual . Implements sofa::gui::component::performer::InteractionPerformer. ◆ getElementInZone(). template<class DataTypes > . RemovePrimitivePerformer< DataTypes >::VecIds sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::getElementInZone ; (; VecIds & ; elementsToTe,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer.html
Testability,test,testing,"d in See alsoselectedElem. Calling . getNeighboorElements and . getElementInZone.; Returnsbool: false if method has encounter an error. . ◆ draw(). template<class DataTypes > . void sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::draw ; (; const core::visual::VisualParams * ; vparams). virtual . Reimplemented from sofa::gui::component::performer::InteractionPerformer. ◆ end(). template<class DataTypes > . void sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::end. ◆ execute(). template<class DataTypes > . void sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::execute. virtual . Implements sofa::gui::component::performer::InteractionPerformer. ◆ getElementInZone(). template<class DataTypes > . RemovePrimitivePerformer< DataTypes >::VecIds sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::getElementInZone ; (; VecIds & ; elementsToTest). protected . Function testing if elements are in the range of a given zone The zone is given by the selectorScale. Test is done on Barycentric point of elements. I.e if this point is in the range of the area. then, element is accepted otherwise, element is rejected. Parameters. elementsToTestvector of element Id to test. . ReturnsVecIds: vector of element Id containing accepted element. . ◆ getNeighboorElements(). template<class DataTypes > . RemovePrimitivePerformer< DataTypes >::VecIds sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::getNeighboorElements ; (; VecIds & ; elementsToTest). protected . Function to get all elements directly neighboor of a given list of elements compute the list without redundancy using container xxAroundVertex() (where xx is the type of element). Parameters. elementsToTestvector of element Id to test. . ReturnsVecIds: vector of element Id containing neighbour (without already accepted elements and redundancy). . ◆ start(). template<class DataTypes > . void sofa::gui::component::performer::Remov",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::RemovePrimitivePerformerConfiguration Member List . This is the complete list of members for sofa::gui::component::performer::RemovePrimitivePerformerConfiguration, including all inherited members. RemovePrimitivePerformerConfiguration()sofa::gui::component::performer::RemovePrimitivePerformerConfigurationinline; selectorScalesofa::gui::component::performer::RemovePrimitivePerformerConfigurationprotected; setScale(double s)sofa::gui::component::performer::RemovePrimitivePerformerConfigurationinline; setTopologicalOperation(int m)sofa::gui::component::performer::RemovePrimitivePerformerConfigurationinline; setVolumicMesh(bool v)sofa::gui::component::performer::RemovePrimitivePerformerConfigurationinline; topologicalOperationsofa::gui::component::performer::RemovePrimitivePerformerConfigurationprotected; volumicMeshsofa::gui::component::performer::RemovePrimitivePerformerConfigurationprotected. Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer_configuration-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer_configuration-members.html
Performance,perform,performer,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::RemovePrimitivePerformerConfiguration Member List . This is the complete list of members for sofa::gui::component::performer::RemovePrimitivePerformerConfiguration, including all inherited members. RemovePrimitivePerformerConfiguration()sofa::gui::component::performer::RemovePrimitivePerformerConfigurationinline; selectorScalesofa::gui::component::performer::RemovePrimitivePerformerConfigurationprotected; setScale(double s)sofa::gui::component::performer::RemovePrimitivePerformerConfigurationinline; setTopologicalOperation(int m)sofa::gui::component::performer::RemovePrimitivePerformerConfigurationinline; setVolumicMesh(bool v)sofa::gui::component::performer::RemovePrimitivePerformerConfigurationinline; topologicalOperationsofa::gui::component::performer::RemovePrimitivePerformerConfigurationprotected; volumicMeshsofa::gui::component::performer::RemovePrimitivePerformerConfigurationprotected. Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer_configuration-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer_configuration-members.html
Modifiability,config,configure,"﻿. SOFA API: sofa::gui::component::performer::RemovePrimitivePerformerConfiguration Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::gui::component::performer::RemovePrimitivePerformerConfiguration Class Reference . #include <RemovePrimitivePerformer.h>. Inheritance diagram for sofa::gui::component::performer::RemovePrimitivePerformerConfiguration:. [legend]; Detailed Description; Class to configure primitive removal. Several parameters:; topologicalOperation: if 0, other parameters aren't use. 0 = ""remove on element"" 1 = ""remove a zone of elements""; volumicMesh: false = surfacique mesh true = volumique mesh; selectorScale: size of zone . Protected Attributes; int topologicalOperation;  ; bool volumicMesh;  ; double selectorScale;  . Public Member Functions;  RemovePrimitivePerformerConfiguration ();  ; void setTopologicalOperation (int m);  ; void setVolumicMesh (bool v);  ; void setScale (double s);  . Attribute details. ◆ selectorScale. double sofa::gui::component::performer::RemovePrimitivePerformerConfiguration::selectorScale. protected . ◆ topologicalOperation. int sofa::gui::component::performer::RemovePrimitivePerformerConfiguration::topologicalOperation. protected . ◆ volumicMesh. bool sofa::gui::component::performer::RemovePrimitivePerformerConfiguration::volumicMesh. protected . Constructor details. ◆ RemovePrimitivePerformerConfiguration(). sofa::gui::component::performer::RemovePrimitivePerformerConfiguration::RemovePrimitivePerformerConfiguration ; (; ). inline . Function details. ◆ setScale(). void sofa::gui::component::performer::RemovePrimitivePerformerConfiguration::setScale ; (; double ; s). inline . ◆ setTopologicalOperation(). void sofa::gui::component::performer::RemovePrimitivePerformerConfiguration::setTopologicalOperation ; (; int ; m). inline . ◆ setVolumicMesh(). void sofa::gui::component::performer::RemovePrimitivePerfor",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer_configuration.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer_configuration.html
Performance,perform,performer,"﻿. SOFA API: sofa::gui::component::performer::RemovePrimitivePerformerConfiguration Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::gui::component::performer::RemovePrimitivePerformerConfiguration Class Reference . #include <RemovePrimitivePerformer.h>. Inheritance diagram for sofa::gui::component::performer::RemovePrimitivePerformerConfiguration:. [legend]; Detailed Description; Class to configure primitive removal. Several parameters:; topologicalOperation: if 0, other parameters aren't use. 0 = ""remove on element"" 1 = ""remove a zone of elements""; volumicMesh: false = surfacique mesh true = volumique mesh; selectorScale: size of zone . Protected Attributes; int topologicalOperation;  ; bool volumicMesh;  ; double selectorScale;  . Public Member Functions;  RemovePrimitivePerformerConfiguration ();  ; void setTopologicalOperation (int m);  ; void setVolumicMesh (bool v);  ; void setScale (double s);  . Attribute details. ◆ selectorScale. double sofa::gui::component::performer::RemovePrimitivePerformerConfiguration::selectorScale. protected . ◆ topologicalOperation. int sofa::gui::component::performer::RemovePrimitivePerformerConfiguration::topologicalOperation. protected . ◆ volumicMesh. bool sofa::gui::component::performer::RemovePrimitivePerformerConfiguration::volumicMesh. protected . Constructor details. ◆ RemovePrimitivePerformerConfiguration(). sofa::gui::component::performer::RemovePrimitivePerformerConfiguration::RemovePrimitivePerformerConfiguration ; (; ). inline . Function details. ◆ setScale(). void sofa::gui::component::performer::RemovePrimitivePerformerConfiguration::setScale ; (; double ; s). inline . ◆ setTopologicalOperation(). void sofa::gui::component::performer::RemovePrimitivePerformerConfiguration::setTopologicalOperation ; (; int ; m). inline . ◆ setVolumicMesh(). void sofa::gui::component::performer::RemovePrimitivePerfor",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer_configuration.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer_configuration.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::StartNavigationPerformer Member List . This is the complete list of members for sofa::gui::component::performer::StartNavigationPerformer, including all inherited members. configure(sofa::component::setting::MouseButtonSetting *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; create(RealObject *, BaseMouseInteractor *interactor)sofa::gui::component::performer::InteractionPerformerinlinestatic; draw(const core::visual::VisualParams *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; execute() overridesofa::gui::component::performer::StartNavigationPerformerinlinevirtual; handleEvent(core::objectmodel::Event *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; InteractionPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::InteractionPerformerinline; InteractionPerformerFactory typedefsofa::gui::component::performer::InteractionPerformer; m_freezePerformersofa::gui::component::performer::InteractionPerformer; m_interactorsofa::gui::component::performer::InteractionPerformer; setPerformerFreeze()sofa::gui::component::performer::InteractionPerformerinlinevirtual; SOFA_ATTRIBUTE_DISABLED__NAMING(""v24.06"", ""v24.06"", interactor, m_interactor)sofa::gui::component::performer::InteractionPerformer; SOFA_ATTRIBUTE_DISABLED__NAMING(""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer)sofa::gui::component::performer::InteractionPerformer; start() overridesofa::gui::component::performer::StartNavigationPerformervirtual; StartNavigationPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::StartNavigationPerformerinline; ~InteractionPerformer()sofa::gui::component::performer::InteractionPerformerinlinevirtual; ~StartNavigationPerformer() overridesofa::gui::component::performer::StartNavigationPerformerinline. Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_start_navigation_performer-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_start_navigation_performer-members.html
Performance,perform,performer,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::StartNavigationPerformer Member List . This is the complete list of members for sofa::gui::component::performer::StartNavigationPerformer, including all inherited members. configure(sofa::component::setting::MouseButtonSetting *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; create(RealObject *, BaseMouseInteractor *interactor)sofa::gui::component::performer::InteractionPerformerinlinestatic; draw(const core::visual::VisualParams *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; execute() overridesofa::gui::component::performer::StartNavigationPerformerinlinevirtual; handleEvent(core::objectmodel::Event *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; InteractionPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::InteractionPerformerinline; InteractionPerformerFactory typedefsofa::gui::component::performer::InteractionPerformer; m_freezePerformersofa::gui::component::performer::InteractionPerformer; m_interactorsofa::gui::component::performer::InteractionPerformer; setPerformerFreeze()sofa::gui::component::performer::InteractionPerformerinlinevirtual; SOFA_ATTRIBUTE_DISABLED__NAMING(""v24.06"", ""v24.06"", interactor, m_interactor)sofa::gui::component::performer::InteractionPerformer; SOFA_ATTRIBUTE_DISABLED__NAMING(""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer)sofa::gui::component::performer::InteractionPerformer; start() overridesofa::gui::component::performer::StartNavigationPerformervirtual; StartNavigationPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::StartNavigationPerformerinline; ~InteractionPerformer()sofa::gui::component::performer::InteractionPerformerinlinevirtual; ~StartNavigationPerformer() overridesofa::gui::component::performer::StartNavigationPerformerinline. Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_start_navigation_performer-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_start_navigation_performer-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::component::performer::StartNavigationPerformer Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gui::component::performer::StartNavigationPerformer Class Reference . #include <StartNavigationPerformer.h>. Inheritance diagram for sofa::gui::component::performer::StartNavigationPerformer:. [legend]. Public Member Functions;  StartNavigationPerformer (BaseMouseInteractor *i);  ;  ~StartNavigationPerformer () override;  ; void start () override;  ; void execute () override;  ;  Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer;  InteractionPerformer (BaseMouseInteractor *i);  ; virtual ~InteractionPerformer ();  ; virtual void configure (sofa::component::setting::MouseButtonSetting *);  ; virtual void handleEvent (core::objectmodel::Event *);  ; virtual void draw (const core::visual::VisualParams *);  ; virtual void setPerformerFreeze ();  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", interactor, m_interactor);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::component::performer::InteractionPerformer; BaseMouseInteractor * m_interactor;  ; bool m_freezePerformer;  ;  Static Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer; template<class RealObject > ; static RealObject * create (RealObject *, BaseMouseInteractor *interactor);  . Constructor details. ◆ StartNavigationPerformer(). sofa::gui::component::performer::StartNavigationPerformer::StartNavigationPerformer ; (; BaseMouseInteractor * ; i). inline . ◆ ~StartNavigationPerformer(). sofa::gui::component::performer::StartNavigationPerformer::~StartNavigationPerformer ; (; ). inlineoverride . Function details. ◆ execute(). void sofa::gui::component::performer::StartNavigationPerformer::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_start_navigation_performer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_start_navigation_performer.html
Performance,perform,performer,"﻿. SOFA API: sofa::gui::component::performer::StartNavigationPerformer Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gui::component::performer::StartNavigationPerformer Class Reference . #include <StartNavigationPerformer.h>. Inheritance diagram for sofa::gui::component::performer::StartNavigationPerformer:. [legend]. Public Member Functions;  StartNavigationPerformer (BaseMouseInteractor *i);  ;  ~StartNavigationPerformer () override;  ; void start () override;  ; void execute () override;  ;  Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer;  InteractionPerformer (BaseMouseInteractor *i);  ; virtual ~InteractionPerformer ();  ; virtual void configure (sofa::component::setting::MouseButtonSetting *);  ; virtual void handleEvent (core::objectmodel::Event *);  ; virtual void draw (const core::visual::VisualParams *);  ; virtual void setPerformerFreeze ();  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", interactor, m_interactor);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::component::performer::InteractionPerformer; BaseMouseInteractor * m_interactor;  ; bool m_freezePerformer;  ;  Static Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer; template<class RealObject > ; static RealObject * create (RealObject *, BaseMouseInteractor *interactor);  . Constructor details. ◆ StartNavigationPerformer(). sofa::gui::component::performer::StartNavigationPerformer::StartNavigationPerformer ; (; BaseMouseInteractor * ; i). inline . ◆ ~StartNavigationPerformer(). sofa::gui::component::performer::StartNavigationPerformer::~StartNavigationPerformer ; (; ). inlineoverride . Function details. ◆ execute(). void sofa::gui::component::performer::StartNavigationPerformer::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_start_navigation_performer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_start_navigation_performer.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::SuturePointPerformer< DataTypes > Member List . This is the complete list of members for sofa::gui::component::performer::SuturePointPerformer< DataTypes >, including all inherited members. addedSpringssofa::gui::component::performer::SuturePointPerformer< DataTypes >protected; configure(sofa::component::setting::MouseButtonSetting *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; create(RealObject *, BaseMouseInteractor *interactor)sofa::gui::component::performer::TInteractionPerformer< DataTypes >inlinestatic; dampingsofa::gui::component::performer::SuturePointPerformerConfigurationprotected; draw(const core::visual::VisualParams *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; execute()sofa::gui::component::performer::SuturePointPerformer< DataTypes >inlinevirtual; firstsofa::gui::component::performer::SuturePointPerformer< DataTypes >protected; firstPickedsofa::gui::component::performer::SuturePointPerformer< DataTypes >protected; fixedIndexsofa::gui::component::performer::SuturePointPerformer< DataTypes >protected; FixObjectsofa::gui::component::performer::SuturePointPerformer< DataTypes >protected; FixObjectType typedefsofa::gui::component::performer::SuturePointPerformer< DataTypes >; handleEvent(core::objectmodel::Event *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; InteractionPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::InteractionPerformerinline; InteractionPerformerFactory typedefsofa::gui::component::performer::InteractionPerformer; m_freezePerformersofa::gui::component::performer::InteractionPerformer; m_interactorsofa::gui::component::performer::InteractionPerformer; Real typedefsofa::gui::component::performer::SuturePointPerformer< DataTypes >; setDamping(double f)sofa::gui::component::performer::SuturePointPerformerConfigurationinline; s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_suture_point_performer-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_suture_point_performer-members.html
Performance,perform,performer,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::SuturePointPerformer< DataTypes > Member List . This is the complete list of members for sofa::gui::component::performer::SuturePointPerformer< DataTypes >, including all inherited members. addedSpringssofa::gui::component::performer::SuturePointPerformer< DataTypes >protected; configure(sofa::component::setting::MouseButtonSetting *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; create(RealObject *, BaseMouseInteractor *interactor)sofa::gui::component::performer::TInteractionPerformer< DataTypes >inlinestatic; dampingsofa::gui::component::performer::SuturePointPerformerConfigurationprotected; draw(const core::visual::VisualParams *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; execute()sofa::gui::component::performer::SuturePointPerformer< DataTypes >inlinevirtual; firstsofa::gui::component::performer::SuturePointPerformer< DataTypes >protected; firstPickedsofa::gui::component::performer::SuturePointPerformer< DataTypes >protected; fixedIndexsofa::gui::component::performer::SuturePointPerformer< DataTypes >protected; FixObjectsofa::gui::component::performer::SuturePointPerformer< DataTypes >protected; FixObjectType typedefsofa::gui::component::performer::SuturePointPerformer< DataTypes >; handleEvent(core::objectmodel::Event *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; InteractionPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::InteractionPerformerinline; InteractionPerformerFactory typedefsofa::gui::component::performer::InteractionPerformer; m_freezePerformersofa::gui::component::performer::InteractionPerformer; m_interactorsofa::gui::component::performer::InteractionPerformer; Real typedefsofa::gui::component::performer::SuturePointPerformer< DataTypes >; setDamping(double f)sofa::gui::component::performer::SuturePointPerformerConfigurationinline; s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_suture_point_performer-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_suture_point_performer-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::component::performer::SuturePointPerformer< DataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::gui::component::performer::SuturePointPerformer< DataTypes > Class Template Reference . #include <SuturePointPerformer.h>. Inheritance diagram for sofa::gui::component::performer::SuturePointPerformer< DataTypes >:. [legend]. Protected Attributes; bool first;  ; unsigned int fixedIndex;  ; sofa::type::vector< Spring > addedSprings;  ; BodyPicked firstPicked;  ; SpringObjectType * SpringObject;  ; FixObjectType * FixObject;  ;  Protected Attributes inherited from sofa::gui::component::performer::SuturePointPerformerConfiguration; double stiffness;  ; double damping;  . Public Member Functions;  SuturePointPerformer (BaseMouseInteractor *i);  ;  ~SuturePointPerformer ();  ; void start ();  ; void execute ();  ;  Public Member Functions inherited from sofa::gui::component::performer::TInteractionPerformer< DataTypes >;  TInteractionPerformer (BaseMouseInteractor *i);  ;  Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer;  InteractionPerformer (BaseMouseInteractor *i);  ; virtual ~InteractionPerformer ();  ; virtual void configure (sofa::component::setting::MouseButtonSetting *);  ; virtual void handleEvent (core::objectmodel::Event *);  ; virtual void draw (const core::visual::VisualParams *);  ; virtual void setPerformerFreeze ();  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", interactor, m_interactor);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer);  ;  Public Member Functions inherited from sofa::gui::component::performer::SuturePointPerformerConfiguration; void setStiffness (double f);  ; void setDamping (double f);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::component::performer::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_suture_point_performer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_suture_point_performer.html
Performance,perform,performer,"﻿. SOFA API: sofa::gui::component::performer::SuturePointPerformer< DataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::gui::component::performer::SuturePointPerformer< DataTypes > Class Template Reference . #include <SuturePointPerformer.h>. Inheritance diagram for sofa::gui::component::performer::SuturePointPerformer< DataTypes >:. [legend]. Protected Attributes; bool first;  ; unsigned int fixedIndex;  ; sofa::type::vector< Spring > addedSprings;  ; BodyPicked firstPicked;  ; SpringObjectType * SpringObject;  ; FixObjectType * FixObject;  ;  Protected Attributes inherited from sofa::gui::component::performer::SuturePointPerformerConfiguration; double stiffness;  ; double damping;  . Public Member Functions;  SuturePointPerformer (BaseMouseInteractor *i);  ;  ~SuturePointPerformer ();  ; void start ();  ; void execute ();  ;  Public Member Functions inherited from sofa::gui::component::performer::TInteractionPerformer< DataTypes >;  TInteractionPerformer (BaseMouseInteractor *i);  ;  Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer;  InteractionPerformer (BaseMouseInteractor *i);  ; virtual ~InteractionPerformer ();  ; virtual void configure (sofa::component::setting::MouseButtonSetting *);  ; virtual void handleEvent (core::objectmodel::Event *);  ; virtual void draw (const core::visual::VisualParams *);  ; virtual void setPerformerFreeze ();  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", interactor, m_interactor);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer);  ;  Public Member Functions inherited from sofa::gui::component::performer::SuturePointPerformerConfiguration; void setStiffness (double f);  ; void setDamping (double f);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::component::performer::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_suture_point_performer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_suture_point_performer.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::SuturePointPerformerConfiguration Member List . This is the complete list of members for sofa::gui::component::performer::SuturePointPerformerConfiguration, including all inherited members. dampingsofa::gui::component::performer::SuturePointPerformerConfigurationprotected; setDamping(double f)sofa::gui::component::performer::SuturePointPerformerConfigurationinline; setStiffness(double f)sofa::gui::component::performer::SuturePointPerformerConfigurationinline; stiffnesssofa::gui::component::performer::SuturePointPerformerConfigurationprotected. Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_suture_point_performer_configuration-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_suture_point_performer_configuration-members.html
Performance,perform,performer,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::SuturePointPerformerConfiguration Member List . This is the complete list of members for sofa::gui::component::performer::SuturePointPerformerConfiguration, including all inherited members. dampingsofa::gui::component::performer::SuturePointPerformerConfigurationprotected; setDamping(double f)sofa::gui::component::performer::SuturePointPerformerConfigurationinline; setStiffness(double f)sofa::gui::component::performer::SuturePointPerformerConfigurationinline; stiffnesssofa::gui::component::performer::SuturePointPerformerConfigurationprotected. Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_suture_point_performer_configuration-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_suture_point_performer_configuration-members.html
Performance,perform,performer,﻿. SOFA API: sofa::gui::component::performer::SuturePointPerformerConfiguration Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::gui::component::performer::SuturePointPerformerConfiguration Class Reference . #include <SuturePointPerformer.h>. Inheritance diagram for sofa::gui::component::performer::SuturePointPerformerConfiguration:. [legend]. Protected Attributes; double stiffness;  ; double damping;  . Public Member Functions; void setStiffness (double f);  ; void setDamping (double f);  . Attribute details. ◆ damping. double sofa::gui::component::performer::SuturePointPerformerConfiguration::damping. protected . ◆ stiffness. double sofa::gui::component::performer::SuturePointPerformerConfiguration::stiffness. protected . Function details. ◆ setDamping(). void sofa::gui::component::performer::SuturePointPerformerConfiguration::setDamping ; (; double ; f). inline . ◆ setStiffness(). void sofa::gui::component::performer::SuturePointPerformerConfiguration::setStiffness ; (; double ; f). inline . sofaguicomponentperformerSuturePointPerformerConfiguration; Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_suture_point_performer_configuration.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_suture_point_performer_configuration.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::TopologicalChangeManager Member List . This is the complete list of members for sofa::gui::component::performer::TopologicalChangeManager, including all inherited members. incisionCollisionModel(sofa::core::CollisionElementIterator elem, sofa::type::Vec3 &pos, bool firstInput, int snapingValue=0, int snapingBorderValue=0)sofa::gui::component::performer::TopologicalChangeManager; incisionCollisionModel(sofa::core::CollisionModel *model1, Index idx1, const sofa::type::Vec3 &firstPoint, sofa::core::CollisionModel *model2, Index idx2, const sofa::type::Vec3 &secondPoint, int snapingValue=0, int snapingBorderValue=0)sofa::gui::component::performer::TopologicalChangeManager; Index typedefsofa::gui::component::performer::TopologicalChangeManager; removeItemsFromCollisionModel(sofa::core::CollisionElementIterator) constsofa::gui::component::performer::TopologicalChangeManager; removeItemsFromCollisionModel(sofa::core::CollisionModel *model, const Index &index) constsofa::gui::component::performer::TopologicalChangeManager; removeItemsFromCollisionModel(sofa::core::CollisionModel *model, const type::vector< Index > &indices) constsofa::gui::component::performer::TopologicalChangeManager; setIncisionFirstCut(bool isFirstCut)sofa::gui::component::performer::TopologicalChangeManager; TopologicalChangeManager()sofa::gui::component::performer::TopologicalChangeManager; ~TopologicalChangeManager()sofa::gui::component::performer::TopologicalChangeManager. Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_topological_change_manager-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_topological_change_manager-members.html
Performance,perform,performer,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::TopologicalChangeManager Member List . This is the complete list of members for sofa::gui::component::performer::TopologicalChangeManager, including all inherited members. incisionCollisionModel(sofa::core::CollisionElementIterator elem, sofa::type::Vec3 &pos, bool firstInput, int snapingValue=0, int snapingBorderValue=0)sofa::gui::component::performer::TopologicalChangeManager; incisionCollisionModel(sofa::core::CollisionModel *model1, Index idx1, const sofa::type::Vec3 &firstPoint, sofa::core::CollisionModel *model2, Index idx2, const sofa::type::Vec3 &secondPoint, int snapingValue=0, int snapingBorderValue=0)sofa::gui::component::performer::TopologicalChangeManager; Index typedefsofa::gui::component::performer::TopologicalChangeManager; removeItemsFromCollisionModel(sofa::core::CollisionElementIterator) constsofa::gui::component::performer::TopologicalChangeManager; removeItemsFromCollisionModel(sofa::core::CollisionModel *model, const Index &index) constsofa::gui::component::performer::TopologicalChangeManager; removeItemsFromCollisionModel(sofa::core::CollisionModel *model, const type::vector< Index > &indices) constsofa::gui::component::performer::TopologicalChangeManager; setIncisionFirstCut(bool isFirstCut)sofa::gui::component::performer::TopologicalChangeManager; TopologicalChangeManager()sofa::gui::component::performer::TopologicalChangeManager; ~TopologicalChangeManager()sofa::gui::component::performer::TopologicalChangeManager. Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_topological_change_manager-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_topological_change_manager-members.html
Performance,perform,performer,"﻿. SOFA API: sofa::gui::component::performer::TopologicalChangeManager Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Member Functions |; List of all members . sofa::gui::component::performer::TopologicalChangeManager Class Reference . #include <TopologicalChangeManager.h>; a class to manage the handling of topological changes which have been requested from the Collision Model ; More...; Detailed Description; a class to manage the handling of topological changes which have been requested from the Collision Model . Public Member Functions;  TopologicalChangeManager ();  ;  ~TopologicalChangeManager ();  ; Index removeItemsFromCollisionModel (sofa::core::CollisionElementIterator) const;  Handles Removing of topological element (from any type of topology) More...;  ; Index removeItemsFromCollisionModel (sofa::core::CollisionModel *model, const Index &index) const;  ; Index removeItemsFromCollisionModel (sofa::core::CollisionModel *model, const type::vector< Index > &indices) const;  ; bool incisionCollisionModel (sofa::core::CollisionElementIterator elem, sofa::type::Vec3 &pos, bool firstInput, int snapingValue=0, int snapingBorderValue=0);  ; bool incisionCollisionModel (sofa::core::CollisionModel *model1, Index idx1, const sofa::type::Vec3 &firstPoint, sofa::core::CollisionModel *model2, Index idx2, const sofa::type::Vec3 &secondPoint, int snapingValue=0, int snapingBorderValue=0);  ; void setIncisionFirstCut (bool isFirstCut);  . Constructor details. ◆ TopologicalChangeManager(). sofa::gui::component::performer::TopologicalChangeManager::TopologicalChangeManager ; (; ). ◆ ~TopologicalChangeManager(). sofa::gui::component::performer::TopologicalChangeManager::~TopologicalChangeManager ; (; ). Function details. ◆ incisionCollisionModel() [1/2]. bool sofa::gui::component::performer::TopologicalChangeManager::incisionCollisionModel ; (; sofa::core::CollisionElementIterator ; elem, . sofa::type::Vec3 & ; pos, .",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_topological_change_manager.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_topological_change_manager.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::TComponentMouseInteraction< DataTypes > Member List . This is the complete list of members for sofa::gui::component::performer::TComponentMouseInteraction< DataTypes >, including all inherited members. attach(simulation::Node *parentNode)sofa::gui::component::performer::ComponentMouseInteraction; ComponentMouseInteraction()sofa::gui::component::performer::ComponentMouseInteraction; ComponentMouseInteractionFactory typedefsofa::gui::component::performer::ComponentMouseInteraction; create(RealObject *, core::objectmodel::BaseContext *)sofa::gui::component::performer::ComponentMouseInteractioninlinestatic; createInteractionComponents(sofa::simulation::Node *parent, sofa::simulation::Node *current) overridesofa::gui::component::performer::TComponentMouseInteraction< DataTypes >virtual; detach()sofa::gui::component::performer::ComponentMouseInteraction; isCompatible(core::objectmodel::BaseContext *context) const overridesofa::gui::component::performer::TComponentMouseInteraction< DataTypes >virtual; mouseInSofasofa::gui::component::performer::ComponentMouseInteraction; mouseInteractorsofa::gui::component::performer::ComponentMouseInteraction; mouseMappingsofa::gui::component::performer::TComponentMouseInteraction< DataTypes >protected; nodeRayPicksofa::gui::component::performer::ComponentMouseInteraction; reset()sofa::gui::component::performer::ComponentMouseInteraction; ~ComponentMouseInteraction()sofa::gui::component::performer::ComponentMouseInteractionvirtual. Generated on Mon Nov 11 2024 03:19:20 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_t_component_mouse_interaction-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_t_component_mouse_interaction-members.html
Performance,perform,performer,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::TComponentMouseInteraction< DataTypes > Member List . This is the complete list of members for sofa::gui::component::performer::TComponentMouseInteraction< DataTypes >, including all inherited members. attach(simulation::Node *parentNode)sofa::gui::component::performer::ComponentMouseInteraction; ComponentMouseInteraction()sofa::gui::component::performer::ComponentMouseInteraction; ComponentMouseInteractionFactory typedefsofa::gui::component::performer::ComponentMouseInteraction; create(RealObject *, core::objectmodel::BaseContext *)sofa::gui::component::performer::ComponentMouseInteractioninlinestatic; createInteractionComponents(sofa::simulation::Node *parent, sofa::simulation::Node *current) overridesofa::gui::component::performer::TComponentMouseInteraction< DataTypes >virtual; detach()sofa::gui::component::performer::ComponentMouseInteraction; isCompatible(core::objectmodel::BaseContext *context) const overridesofa::gui::component::performer::TComponentMouseInteraction< DataTypes >virtual; mouseInSofasofa::gui::component::performer::ComponentMouseInteraction; mouseInteractorsofa::gui::component::performer::ComponentMouseInteraction; mouseMappingsofa::gui::component::performer::TComponentMouseInteraction< DataTypes >protected; nodeRayPicksofa::gui::component::performer::ComponentMouseInteraction; reset()sofa::gui::component::performer::ComponentMouseInteraction; ~ComponentMouseInteraction()sofa::gui::component::performer::ComponentMouseInteractionvirtual. Generated on Mon Nov 11 2024 03:19:20 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_t_component_mouse_interaction-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_t_component_mouse_interaction-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::component::performer::TComponentMouseInteraction< DataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::gui::component::performer::TComponentMouseInteraction< DataTypes > Class Template Reference . #include <ComponentMouseInteraction.h>. Inheritance diagram for sofa::gui::component::performer::TComponentMouseInteraction< DataTypes >:. [legend]. Protected Attributes; MouseMapping mouseMapping;  . Public Member Functions; void createInteractionComponents (sofa::simulation::Node *parent, sofa::simulation::Node *current) override;  ; bool isCompatible (core::objectmodel::BaseContext *context) const override;  ;  Public Member Functions inherited from sofa::gui::component::performer::ComponentMouseInteraction;  ComponentMouseInteraction ();  ; virtual ~ComponentMouseInteraction ();  ; void attach (simulation::Node *parentNode);  ; void detach ();  ; void reset ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::component::performer::ComponentMouseInteraction; simulation::NodeSPtr nodeRayPick;  ; sofa::core::behavior::BaseMechanicalState::SPtr mouseInSofa;  ; sofa::gui::component::performer::BaseMouseInteractor::SPtr mouseInteractor;  ;  Static Public Member Functions inherited from sofa::gui::component::performer::ComponentMouseInteraction; template<class RealObject > ; static RealObject * create (RealObject *, core::objectmodel::BaseContext *);  . Attribute details. ◆ mouseMapping. template<class DataTypes > . MouseMapping sofa::gui::component::performer::TComponentMouseInteraction< DataTypes >::mouseMapping. protected . Function details. ◆ createInteractionComponents(). template<class DataTypes > . void sofa::gui::component::performer::TComponentMouseInteraction< DataTypes >::createInteractionComponents ; (; sofa::simulation::Node * ; parent, . sofa::simulation::Node * ; current . )",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_t_component_mouse_interaction.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_t_component_mouse_interaction.html
Performance,perform,performer,"﻿. SOFA API: sofa::gui::component::performer::TComponentMouseInteraction< DataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::gui::component::performer::TComponentMouseInteraction< DataTypes > Class Template Reference . #include <ComponentMouseInteraction.h>. Inheritance diagram for sofa::gui::component::performer::TComponentMouseInteraction< DataTypes >:. [legend]. Protected Attributes; MouseMapping mouseMapping;  . Public Member Functions; void createInteractionComponents (sofa::simulation::Node *parent, sofa::simulation::Node *current) override;  ; bool isCompatible (core::objectmodel::BaseContext *context) const override;  ;  Public Member Functions inherited from sofa::gui::component::performer::ComponentMouseInteraction;  ComponentMouseInteraction ();  ; virtual ~ComponentMouseInteraction ();  ; void attach (simulation::Node *parentNode);  ; void detach ();  ; void reset ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::component::performer::ComponentMouseInteraction; simulation::NodeSPtr nodeRayPick;  ; sofa::core::behavior::BaseMechanicalState::SPtr mouseInSofa;  ; sofa::gui::component::performer::BaseMouseInteractor::SPtr mouseInteractor;  ;  Static Public Member Functions inherited from sofa::gui::component::performer::ComponentMouseInteraction; template<class RealObject > ; static RealObject * create (RealObject *, core::objectmodel::BaseContext *);  . Attribute details. ◆ mouseMapping. template<class DataTypes > . MouseMapping sofa::gui::component::performer::TComponentMouseInteraction< DataTypes >::mouseMapping. protected . Function details. ◆ createInteractionComponents(). template<class DataTypes > . void sofa::gui::component::performer::TComponentMouseInteraction< DataTypes >::createInteractionComponents ; (; sofa::simulation::Node * ; parent, . sofa::simulation::Node * ; current . )",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_t_component_mouse_interaction.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_t_component_mouse_interaction.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::TInteractionPerformer< DataTypes > Member List . This is the complete list of members for sofa::gui::component::performer::TInteractionPerformer< DataTypes >, including all inherited members. configure(sofa::component::setting::MouseButtonSetting *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; create(RealObject *, BaseMouseInteractor *interactor)sofa::gui::component::performer::TInteractionPerformer< DataTypes >inlinestatic; draw(const core::visual::VisualParams *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; execute()=0sofa::gui::component::performer::InteractionPerformerpure virtual; handleEvent(core::objectmodel::Event *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; InteractionPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::InteractionPerformerinline; InteractionPerformerFactory typedefsofa::gui::component::performer::InteractionPerformer; m_freezePerformersofa::gui::component::performer::InteractionPerformer; m_interactorsofa::gui::component::performer::InteractionPerformer; setPerformerFreeze()sofa::gui::component::performer::InteractionPerformerinlinevirtual; SOFA_ATTRIBUTE_DISABLED__NAMING(""v24.06"", ""v24.06"", interactor, m_interactor)sofa::gui::component::performer::InteractionPerformer; SOFA_ATTRIBUTE_DISABLED__NAMING(""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer)sofa::gui::component::performer::InteractionPerformer; start()=0sofa::gui::component::performer::InteractionPerformerpure virtual; TInteractionPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::TInteractionPerformer< DataTypes >inline; ~InteractionPerformer()sofa::gui::component::performer::InteractionPerformerinlinevirtual. Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_t_interaction_performer-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_t_interaction_performer-members.html
Performance,perform,performer,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::performer::TInteractionPerformer< DataTypes > Member List . This is the complete list of members for sofa::gui::component::performer::TInteractionPerformer< DataTypes >, including all inherited members. configure(sofa::component::setting::MouseButtonSetting *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; create(RealObject *, BaseMouseInteractor *interactor)sofa::gui::component::performer::TInteractionPerformer< DataTypes >inlinestatic; draw(const core::visual::VisualParams *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; execute()=0sofa::gui::component::performer::InteractionPerformerpure virtual; handleEvent(core::objectmodel::Event *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; InteractionPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::InteractionPerformerinline; InteractionPerformerFactory typedefsofa::gui::component::performer::InteractionPerformer; m_freezePerformersofa::gui::component::performer::InteractionPerformer; m_interactorsofa::gui::component::performer::InteractionPerformer; setPerformerFreeze()sofa::gui::component::performer::InteractionPerformerinlinevirtual; SOFA_ATTRIBUTE_DISABLED__NAMING(""v24.06"", ""v24.06"", interactor, m_interactor)sofa::gui::component::performer::InteractionPerformer; SOFA_ATTRIBUTE_DISABLED__NAMING(""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer)sofa::gui::component::performer::InteractionPerformer; start()=0sofa::gui::component::performer::InteractionPerformerpure virtual; TInteractionPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::TInteractionPerformer< DataTypes >inline; ~InteractionPerformer()sofa::gui::component::performer::InteractionPerformerinlinevirtual. Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_t_interaction_performer-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_t_interaction_performer-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::component::performer::TInteractionPerformer< DataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::gui::component::performer::TInteractionPerformer< DataTypes > Class Template Reference . #include <InteractionPerformer.h>. Inheritance diagram for sofa::gui::component::performer::TInteractionPerformer< DataTypes >:. [legend]. Public Member Functions;  TInteractionPerformer (BaseMouseInteractor *i);  ;  Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer;  InteractionPerformer (BaseMouseInteractor *i);  ; virtual ~InteractionPerformer ();  ; virtual void configure (sofa::component::setting::MouseButtonSetting *);  ; virtual void start ()=0;  ; virtual void execute ()=0;  ; virtual void handleEvent (core::objectmodel::Event *);  ; virtual void draw (const core::visual::VisualParams *);  ; virtual void setPerformerFreeze ();  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", interactor, m_interactor);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer);  . Static Public Member Functions; template<class RealObject > ; static RealObject * create (RealObject *, BaseMouseInteractor *interactor);  ;  Static Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer; template<class RealObject > ; static RealObject * create (RealObject *, BaseMouseInteractor *interactor);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::component::performer::InteractionPerformer; BaseMouseInteractor * m_interactor;  ; bool m_freezePerformer;  . Constructor details. ◆ TInteractionPerformer(). template<class DataTypes > . sofa::gui::component::performer::TInteractionPerformer< DataTypes >::TInteractionPerformer ; (; BaseMouseInteractor * ; i). inline . Function details. ◆ create()",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_t_interaction_performer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_t_interaction_performer.html
Performance,perform,performer,"﻿. SOFA API: sofa::gui::component::performer::TInteractionPerformer< DataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::gui::component::performer::TInteractionPerformer< DataTypes > Class Template Reference . #include <InteractionPerformer.h>. Inheritance diagram for sofa::gui::component::performer::TInteractionPerformer< DataTypes >:. [legend]. Public Member Functions;  TInteractionPerformer (BaseMouseInteractor *i);  ;  Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer;  InteractionPerformer (BaseMouseInteractor *i);  ; virtual ~InteractionPerformer ();  ; virtual void configure (sofa::component::setting::MouseButtonSetting *);  ; virtual void start ()=0;  ; virtual void execute ()=0;  ; virtual void handleEvent (core::objectmodel::Event *);  ; virtual void draw (const core::visual::VisualParams *);  ; virtual void setPerformerFreeze ();  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", interactor, m_interactor);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer);  . Static Public Member Functions; template<class RealObject > ; static RealObject * create (RealObject *, BaseMouseInteractor *interactor);  ;  Static Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer; template<class RealObject > ; static RealObject * create (RealObject *, BaseMouseInteractor *interactor);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::component::performer::InteractionPerformer; BaseMouseInteractor * m_interactor;  ; bool m_freezePerformer;  . Constructor details. ◆ TInteractionPerformer(). template<class DataTypes > . sofa::gui::component::performer::TInteractionPerformer< DataTypes >::TInteractionPerformer ; (; BaseMouseInteractor * ; i). inline . Function details. ◆ create()",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_t_interaction_performer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_t_interaction_performer.html
Deployability,update,updateInternal,"td::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(AddFrameButtonSetting, sofa::component::setting::MouseButtonSetting)sofa::gui::component::AddFrameButtonSetting; sofa::component::setting::MouseButtonSetting::SOFA_CLASS(MouseButtonSetting, core::objectmodel::ConfigurationSetting)sofa::component::setting::MouseButtonSetting; sofa::core::objectmodel::ConfigurationSetting::SOFA_CLASS(ConfigurationSetting, BaseObject)sofa::core::objectmodel::ConfigurationSetting; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ConfigurationSetting() overridesofa::core::objectmodel::ConfigurationSettingprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::AddFrameButtonSetting Member List . This is the complete list of members for sofa::gui::component::AddFrameButtonSetting, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; AddFrameButtonSetting()sofa::gui::component::AddFrameButtonSettingprotected; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buttonsofa::component::setting::MouseButtonSetting; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::obj",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting-members.html
Performance,load,loader,"fa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::objectmodel::ConfigurationSettingvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(AddFrameButtonSetting, sofa::component::setting::MouseButtonSetting)sofa::gui::component::AddFrameButtonSetting; sofa::component::setting::MouseButtonSetting::SOFA_CLASS(MouseButtonSetting, core::objectmodel::ConfigurationSetting)sofa::component::setting::MouseButtonSetting; sofa::core::objectmodel::ConfigurationSetting::SOFA_CLASS(ConfigurationSetting, BaseObject)sofa::core::objectmodel::ConfigurationSetting; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; AddFrameButtonSetting()sofa::gui::component::AddFrameButtonSettingprotected; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buttonsofa::component::setting::MouseButtonSetting; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::obj",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting-members.html
Usability,clear,clearLoggedMessages,"jectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buttonsofa::component::setting::MouseButtonSetting; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ConfigurationSetting()sofa::core::objectmodel::ConfigurationSettingprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_buttonsofa::component::setting::MouseButtonSetting; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting-members.html
Availability,down,down,"﻿. SOFA API: sofa::gui::component::AddFrameButtonSetting Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::component::AddFrameButtonSetting Class Reference . #include <AddFrameButtonSetting.h>. Inheritance diagram for sofa::gui::component::AddFrameButtonSetting:. [legend]. Public Member Functions;  SOFA_CLASS (AddFrameButtonSetting, sofa::component::setting::MouseButtonSetting);  ; std::string getOperationType () override;  ;  Public Member Functions inherited from sofa::component::setting::MouseButtonSetting;  SOFA_CLASS (MouseButtonSetting, core::objectmodel::ConfigurationSetting);  ;  Public Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting.html
Deployability,update,updateInternal,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting.html
Integrability,depend,dependent,"ing, sofa::component::setting::MouseButtonSetting);  ; std::string getOperationType () override;  ;  Public Member Functions inherited from sofa::component::setting::MouseButtonSetting;  SOFA_CLASS (MouseButtonSetting, core::objectmodel::ConfigurationSetting);  ;  Public Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::component::AddFrameButtonSetting Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::component::AddFrameButtonSetting Class Reference . #include <AddFrameButtonSetting.h>. Inheritance diagram for sofa::gui::component::AddFrameButtonSetting:. [legend]. Public Member Functions;  SOFA_CLASS (AddFrameButtonSetting, sofa::component::setting::MouseButtonSetting);  ; std::string getOperationType () override;  ;  Public Member Functions inherited from sofa::component::setting::MouseButtonSetting;  SOFA_CLASS (MouseButtonSetting, core::objectmodel::ConfigurationSetting);  ;  Public Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting.html
Performance,load,loader,"ctions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting.html
Deployability,update,updateInternal,"FileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(AddRecordedCameraButtonSetting, sofa::component::setting::MouseButtonSetting)sofa::gui::component::AddRecordedCameraButtonSetting; sofa::component::setting::MouseButtonSetting::SOFA_CLASS(MouseButtonSetting, core::objectmodel::ConfigurationSetting)sofa::component::setting::MouseButtonSetting; sofa::core::objectmodel::ConfigurationSetting::SOFA_CLASS(ConfigurationSetting, BaseObject)sofa::core::objectmodel::ConfigurationSetting; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ConfigurationSetting() overridesofa::core::objectmodel::ConfigurationSettingprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_recorded_camera_button_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_recorded_camera_button_setting-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::AddRecordedCameraButtonSetting Member List . This is the complete list of members for sofa::gui::component::AddRecordedCameraButtonSetting, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; AddRecordedCameraButtonSetting()sofa::gui::component::AddRecordedCameraButtonSettinginlineprotected; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buttonsofa::component::setting::MouseButtonSetting; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::Bas",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_recorded_camera_button_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_recorded_camera_button_setting-members.html
Performance,load,loader,"fa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::objectmodel::ConfigurationSettingvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(AddRecordedCameraButtonSetting, sofa::component::setting::MouseButtonSetting)sofa::gui::component::AddRecordedCameraButtonSetting; sofa::component::setting::MouseButtonSetting::SOFA_CLASS(MouseButtonSetting, core::objectmodel::ConfigurationSetting)sofa::component::setting::MouseButtonSetting; sofa::core::objectmodel::ConfigurationSetting::SOFA_CLASS(ConfigurationSetting, BaseObject)sofa::core::objectmodel::ConfigurationSetting; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(boo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_recorded_camera_button_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_recorded_camera_button_setting-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; AddRecordedCameraButtonSetting()sofa::gui::component::AddRecordedCameraButtonSettinginlineprotected; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buttonsofa::component::setting::MouseButtonSetting; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::Bas",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_recorded_camera_button_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_recorded_camera_button_setting-members.html
Usability,clear,clearLoggedMessages,"jectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buttonsofa::component::setting::MouseButtonSetting; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ConfigurationSetting()sofa::core::objectmodel::ConfigurationSettingprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_buttonsofa::component::setting::MouseButtonSetting; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_recorded_camera_button_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_recorded_camera_button_setting-members.html
Availability,down,down,"﻿. SOFA API: sofa::gui::component::AddRecordedCameraButtonSetting Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::component::AddRecordedCameraButtonSetting Class Reference . #include <AddRecordedCameraButtonSetting.h>. Inheritance diagram for sofa::gui::component::AddRecordedCameraButtonSetting:. [legend]. Public Member Functions;  SOFA_CLASS (AddRecordedCameraButtonSetting, sofa::component::setting::MouseButtonSetting);  ; std::string getOperationType () override;  ;  Public Member Functions inherited from sofa::component::setting::MouseButtonSetting;  SOFA_CLASS (MouseButtonSetting, core::objectmodel::ConfigurationSetting);  ;  Public Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current tim",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_recorded_camera_button_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_recorded_camera_button_setting.html
Deployability,update,updateInternal,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_recorded_camera_button_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_recorded_camera_button_setting.html
Integrability,depend,dependent,"ing, sofa::component::setting::MouseButtonSetting);  ; std::string getOperationType () override;  ;  Public Member Functions inherited from sofa::component::setting::MouseButtonSetting;  SOFA_CLASS (MouseButtonSetting, core::objectmodel::ConfigurationSetting);  ;  Public Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_recorded_camera_button_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_recorded_camera_button_setting.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::component::AddRecordedCameraButtonSetting Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::component::AddRecordedCameraButtonSetting Class Reference . #include <AddRecordedCameraButtonSetting.h>. Inheritance diagram for sofa::gui::component::AddRecordedCameraButtonSetting:. [legend]. Public Member Functions;  SOFA_CLASS (AddRecordedCameraButtonSetting, sofa::component::setting::MouseButtonSetting);  ; std::string getOperationType () override;  ;  Public Member Functions inherited from sofa::component::setting::MouseButtonSetting;  SOFA_CLASS (MouseButtonSetting, core::objectmodel::ConfigurationSetting);  ;  Public Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current tim",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_recorded_camera_button_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_recorded_camera_button_setting.html
Performance,load,loader,"ctions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_recorded_camera_button_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_recorded_camera_button_setting.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_recorded_camera_button_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_recorded_camera_button_setting.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_recorded_camera_button_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_recorded_camera_button_setting.html
Deployability,update,updateInternal,"< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ATTRIBUTE_DISABLED__NAMING(""v24.06"", ""v24.06"", stiffness, d_stiffness)sofa::gui::component::AttachBodyButtonSetting; SOFA_ATTRIBUTE_DISABLED__NAMING(""v24.06"", ""v24.06"", arrowSize, d_arrowSize)sofa::gui::component::AttachBodyButtonSetting; SOFA_ATTRIBUTE_DISABLED__NAMING(""v24.06"", ""v24.06"", showFactorSize, d_showFactorSize)sofa::gui::component::AttachBodyButtonSetting; SOFA_CLASS(AttachBodyButtonSetting, sofa::component::setting::MouseButtonSetting)sofa::gui::component::AttachBodyButtonSetting; sofa::component::setting::MouseButtonSetting::SOFA_CLASS(MouseButtonSetting, core::objectmodel::ConfigurationSetting)sofa::component::setting::MouseButtonSetting; sofa::core::objectmodel::ConfigurationSetting::SOFA_CLASS(ConfigurationSetting, BaseObject)sofa::core::objectmodel::ConfigurationSetting; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ConfigurationSetting() overridesofa::core::objectmodel::ConfigurationSettingprotected. Generated on Mon Nov 11 2024 03:19:19 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_attach_body_button_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_attach_body_button_setting-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::AttachBodyButtonSetting Member List . This is the complete list of members for sofa::gui::component::AttachBodyButtonSetting, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; AttachBodyButtonSetting()sofa::gui::component::AttachBodyButtonSettingprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buttonsofa::component::setting::MouseButtonSetting; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::c",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_attach_body_button_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_attach_body_button_setting-members.html
Performance,load,loader,"inksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MouseButtonSetting()sofa::component::setting::MouseButtonSettingprotected; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; notMuted() constsofa::core::objectmodel::Baseinline; parse(BaseObjectDescription *arg) overridesofa::core::objectmodel::BaseObjectvirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::objectmodel::Basevirtual; parseFields(const std::list< std::string > &str)sofa::core::objectmodel::Base; parseFields(const std::map< std::string, std::string * > &str)sofa::core::objectmodel::Basevirtual; Ptr typedefsofa::core::objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::objectmodel::ConfigurationSettingvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ATTRIBUTE_DISABLED__NAMING(""v24.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_attach_body_button_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_attach_body_button_setting-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; AttachBodyButtonSetting()sofa::gui::component::AttachBodyButtonSettingprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buttonsofa::component::setting::MouseButtonSetting; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::c",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_attach_body_button_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_attach_body_button_setting-members.html
Usability,clear,clearLoggedMessages,"std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; AttachBodyButtonSetting()sofa::gui::component::AttachBodyButtonSettingprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buttonsofa::component::setting::MouseButtonSetting; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ConfigurationSetting()sofa::core::objectmodel::ConfigurationSettingprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_arrowSizesofa::gui::component::AttachBodyButtonSetting; d_buttonsofa::component::setting::MouseButtonSetting; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_showFactorSizesofa::gui::component::AttachBodyButtonSetting; d_stiffnesssofa::gui::component::AttachBodyButtonSetting; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_attach_body_button_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_attach_body_button_setting-members.html
Availability,down,down,"::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (AttachBodyButtonSetting, sofa::component::setting::MouseButtonSetting);  ; std::string getOperationType () override;  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", stiffness, d_stiffness);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", arrowSize, d_arrowSize);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", showFactorSize, d_showFactorSize);  ;  Public Member Functions inherited from sofa::component::setting::MouseButtonSetting;  SOFA_CLASS (MouseButtonSetting, core::objectmodel::ConfigurationSetting);  ;  Public Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *dest",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_attach_body_button_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_attach_body_button_setting.html
Deployability,update,updateInternal,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_attach_body_button_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_attach_body_button_setting.html
Integrability,message,messages,"nd]. Public Attributes; Data< SReal > d_stiffness;  Stiffness of the spring to attach a particule. More...;  ; Data< SReal > d_arrowSize;  Size of the drawn spring: if >0 an arrow will be drawn. More...;  ; Data< SReal > d_showFactorSize;  Show factor size of the JointSpringForcefield when interacting with rigids. More...;  ;  Public Attributes inherited from sofa::component::setting::MouseButtonSetting; sofa::core::objectmodel::RenamedData< sofa::helper::OptionsGroup > button;  ; core::objectmodel::Data< sofa::helper::OptionsGroup > d_button;  Mouse button used. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (AttachBodyButtonSetting, sofa::component::setting::MouseButtonSetting);  ; std::string getOperationType () override;  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", stiffness, d_stiffness);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", arrowSize, d_arrowSize);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", showFactorSize, d_showFactorSize);  ;  Public Member Func",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_attach_body_button_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_attach_body_button_setting.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::component::AttachBodyButtonSetting Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::component::AttachBodyButtonSetting Class Reference . #include <AttachBodyButtonSetting.h>. Inheritance diagram for sofa::gui::component::AttachBodyButtonSetting:. [legend]. Public Attributes; Data< SReal > d_stiffness;  Stiffness of the spring to attach a particule. More...;  ; Data< SReal > d_arrowSize;  Size of the drawn spring: if >0 an arrow will be drawn. More...;  ; Data< SReal > d_showFactorSize;  Show factor size of the JointSpringForcefield when interacting with rigids. More...;  ;  Public Attributes inherited from sofa::component::setting::MouseButtonSetting; sofa::core::objectmodel::RenamedData< sofa::helper::OptionsGroup > button;  ; core::objectmodel::Data< sofa::helper::OptionsGroup > d_button;  Mouse button used. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Publi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_attach_body_button_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_attach_body_button_setting.html
Performance,load,loader,"ctions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_attach_body_button_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_attach_body_button_setting.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_attach_body_button_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_attach_body_button_setting.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_attach_body_button_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_attach_body_button_setting.html
Deployability,update,updateInternal,"me(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(ConstraintAttachButtonSetting, MouseButtonSetting)sofa::gui::component::ConstraintAttachButtonSetting; sofa::component::setting::MouseButtonSetting::SOFA_CLASS(MouseButtonSetting, core::objectmodel::ConfigurationSetting)sofa::component::setting::MouseButtonSetting; sofa::core::objectmodel::ConfigurationSetting::SOFA_CLASS(ConfigurationSetting, BaseObject)sofa::core::objectmodel::ConfigurationSetting; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ConfigurationSetting() overridesofa::core::objectmodel::ConfigurationSettingprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_constraint_attach_button_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_constraint_attach_button_setting-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::ConstraintAttachButtonSetting Member List . This is the complete list of members for sofa::gui::component::ConstraintAttachButtonSetting, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buttonsofa::component::setting::MouseButtonSetting; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_constraint_attach_button_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_constraint_attach_button_setting-members.html
Performance,load,loader,"fa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::objectmodel::ConfigurationSettingvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(ConstraintAttachButtonSetting, MouseButtonSetting)sofa::gui::component::ConstraintAttachButtonSetting; sofa::component::setting::MouseButtonSetting::SOFA_CLASS(MouseButtonSetting, core::objectmodel::ConfigurationSetting)sofa::component::setting::MouseButtonSetting; sofa::core::objectmodel::ConfigurationSetting::SOFA_CLASS(ConfigurationSetting, BaseObject)sofa::core::objectmodel::ConfigurationSetting; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_constraint_attach_button_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_constraint_attach_button_setting-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buttonsofa::component::setting::MouseButtonSetting; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_constraint_attach_button_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_constraint_attach_button_setting-members.html
Usability,clear,clearLoggedMessages,"jectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buttonsofa::component::setting::MouseButtonSetting; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ConfigurationSetting()sofa::core::objectmodel::ConfigurationSettingprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_buttonsofa::component::setting::MouseButtonSetting; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_constraint_attach_button_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_constraint_attach_button_setting-members.html
Availability,down,down,"﻿. SOFA API: sofa::gui::component::ConstraintAttachButtonSetting Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gui::component::ConstraintAttachButtonSetting Class Reference . #include <ConstraintAttachButtonSetting.h>. Inheritance diagram for sofa::gui::component::ConstraintAttachButtonSetting:. [legend]. Public Member Functions;  SOFA_CLASS (ConstraintAttachButtonSetting, MouseButtonSetting);  ; std::string getOperationType () override;  ;  Public Member Functions inherited from sofa::component::setting::MouseButtonSetting;  SOFA_CLASS (MouseButtonSetting, core::objectmodel::ConfigurationSetting);  ;  Public Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; Ba",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_constraint_attach_button_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_constraint_attach_button_setting.html
Deployability,update,updateInternal,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_constraint_attach_button_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_constraint_attach_button_setting.html
Integrability,depend,dependent,"ConstraintAttachButtonSetting, MouseButtonSetting);  ; std::string getOperationType () override;  ;  Public Member Functions inherited from sofa::component::setting::MouseButtonSetting;  SOFA_CLASS (MouseButtonSetting, core::objectmodel::ConfigurationSetting);  ;  Public Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_constraint_attach_button_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_constraint_attach_button_setting.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::component::ConstraintAttachButtonSetting Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gui::component::ConstraintAttachButtonSetting Class Reference . #include <ConstraintAttachButtonSetting.h>. Inheritance diagram for sofa::gui::component::ConstraintAttachButtonSetting:. [legend]. Public Member Functions;  SOFA_CLASS (ConstraintAttachButtonSetting, MouseButtonSetting);  ; std::string getOperationType () override;  ;  Public Member Functions inherited from sofa::component::setting::MouseButtonSetting;  SOFA_CLASS (MouseButtonSetting, core::objectmodel::ConfigurationSetting);  ;  Public Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; Ba",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_constraint_attach_button_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_constraint_attach_button_setting.html
Performance,load,loader,"ctions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_constraint_attach_button_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_constraint_attach_button_setting.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_constraint_attach_button_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_constraint_attach_button_setting.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_constraint_attach_button_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_constraint_attach_button_setting.html
Deployability,update,updateInternal,"e; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(FixPickedParticleButtonSetting, MouseButtonSetting)sofa::gui::component::FixPickedParticleButtonSetting; sofa::component::setting::MouseButtonSetting::SOFA_CLASS(MouseButtonSetting, core::objectmodel::ConfigurationSetting)sofa::component::setting::MouseButtonSetting; sofa::core::objectmodel::ConfigurationSetting::SOFA_CLASS(ConfigurationSetting, BaseObject)sofa::core::objectmodel::ConfigurationSetting; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; stiffnesssofa::gui::component::FixPickedParticleButtonSetting; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ConfigurationSetting() overridesofa::core::objectmodel::ConfigurationSettingprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::FixPickedParticleButtonSetting Member List . This is the complete list of members for sofa::gui::component::FixPickedParticleButtonSetting, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buttonsofa::component::setting::MouseButtonSetting; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsof",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting-members.html
Performance,load,loader,"fa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::objectmodel::ConfigurationSettingvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(FixPickedParticleButtonSetting, MouseButtonSetting)sofa::gui::component::FixPickedParticleButtonSetting; sofa::component::setting::MouseButtonSetting::SOFA_CLASS(MouseButtonSetting, core::objectmodel::ConfigurationSetting)sofa::component::setting::MouseButtonSetting; sofa::core::objectmodel::ConfigurationSetting::SOFA_CLASS(ConfigurationSetting, BaseObject)sofa::core::objectmodel::ConfigurationSetting; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; stiffnesssofa::gui::component::FixPickedParticleButtonSetting; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::obj",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buttonsofa::component::setting::MouseButtonSetting; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsof",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting-members.html
Usability,clear,clearLoggedMessages,"jectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buttonsofa::component::setting::MouseButtonSetting; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ConfigurationSetting()sofa::core::objectmodel::ConfigurationSettingprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_buttonsofa::component::setting::MouseButtonSetting; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting-members.html
Availability,down,down,"tedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (FixPickedParticleButtonSetting, MouseButtonSetting);  ; std::string getOperationType () override;  ;  Public Member Functions inherited from sofa::component::setting::MouseButtonSetting;  SOFA_CLASS (MouseButtonSetting, core::objectmodel::ConfigurationSetting);  ;  Public Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting.html
Deployability,update,updateInternal,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting.html
Integrability,message,messages,"List of all members . sofa::gui::component::FixPickedParticleButtonSetting Class Reference . #include <FixPickedParticleButtonSetting.h>. Inheritance diagram for sofa::gui::component::FixPickedParticleButtonSetting:. [legend]. Public Attributes; Data< SReal > stiffness;  Stiffness of the spring to fix a particule. More...;  ;  Public Attributes inherited from sofa::component::setting::MouseButtonSetting; sofa::core::objectmodel::RenamedData< sofa::helper::OptionsGroup > button;  ; core::objectmodel::Data< sofa::helper::OptionsGroup > d_button;  Mouse button used. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (FixPickedParticleButtonSetting, MouseButtonSetting);  ; std::string getOperationType () override;  ;  Public Member Functions inherited from sofa::component::setting::MouseButtonSetting;  SOFA_CLASS (MouseButtonSetting, core::objectmodel::ConfigurationSetting);  ;  Public Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObje",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::component::FixPickedParticleButtonSetting Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::component::FixPickedParticleButtonSetting Class Reference . #include <FixPickedParticleButtonSetting.h>. Inheritance diagram for sofa::gui::component::FixPickedParticleButtonSetting:. [legend]. Public Attributes; Data< SReal > stiffness;  Stiffness of the spring to fix a particule. More...;  ;  Public Attributes inherited from sofa::component::setting::MouseButtonSetting; sofa::core::objectmodel::RenamedData< sofa::helper::OptionsGroup > button;  ; core::objectmodel::Data< sofa::helper::OptionsGroup > d_button;  Mouse button used. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (FixPickedParticleButtonSetting, MouseButtonSetting);  ; std::string getOperationType () override;  ;  Public Member Functions inherited from sofa::component::set",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting.html
Performance,load,loader,"ctions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting.html
Deployability,update,updateInternal,"os(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(StartNavigationButtonSetting, MouseButtonSetting)sofa::gui::component::StartNavigationButtonSetting; sofa::component::setting::MouseButtonSetting::SOFA_CLASS(MouseButtonSetting, core::objectmodel::ConfigurationSetting)sofa::component::setting::MouseButtonSetting; sofa::core::objectmodel::ConfigurationSetting::SOFA_CLASS(ConfigurationSetting, BaseObject)sofa::core::objectmodel::ConfigurationSetting; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; StartNavigationButtonSetting()sofa::gui::component::StartNavigationButtonSettinginlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ConfigurationSetting() overridesofa::core::objectmodel::ConfigurationSettingprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_start_navigation_button_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_start_navigation_button_setting-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::component::StartNavigationButtonSetting Member List . This is the complete list of members for sofa::gui::component::StartNavigationButtonSetting, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buttonsofa::component::setting::MouseButtonSetting; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::c",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_start_navigation_button_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_start_navigation_button_setting-members.html
Performance,load,loader,"fa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::objectmodel::ConfigurationSettingvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(StartNavigationButtonSetting, MouseButtonSetting)sofa::gui::component::StartNavigationButtonSetting; sofa::component::setting::MouseButtonSetting::SOFA_CLASS(MouseButtonSetting, core::objectmodel::ConfigurationSetting)sofa::component::setting::MouseButtonSetting; sofa::core::objectmodel::ConfigurationSetting::SOFA_CLASS(ConfigurationSetting, BaseObject)sofa::core::objectmodel::ConfigurationSetting; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; StartNavigationButtonSetting()sofa::gui::component::StartNavigationButtonSettinginlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; u",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_start_navigation_button_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_start_navigation_button_setting-members.html
Testability,log,logging," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buttonsofa::component::setting::MouseButtonSetting; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::c",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_start_navigation_button_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_start_navigation_button_setting-members.html
Usability,clear,clearLoggedMessages,"jectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buttonsofa::component::setting::MouseButtonSetting; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ConfigurationSetting()sofa::core::objectmodel::ConfigurationSettingprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_buttonsofa::component::setting::MouseButtonSetting; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_start_navigation_button_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_start_navigation_button_setting-members.html
Availability,down,down,"﻿. SOFA API: sofa::gui::component::StartNavigationButtonSetting Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::component::StartNavigationButtonSetting Class Reference . #include <AddRecordedCameraButtonSetting.h>. Inheritance diagram for sofa::gui::component::StartNavigationButtonSetting:. [legend]. Public Member Functions;  SOFA_CLASS (StartNavigationButtonSetting, MouseButtonSetting);  ; std::string getOperationType () override;  ;  Public Member Functions inherited from sofa::component::setting::MouseButtonSetting;  SOFA_CLASS (MouseButtonSetting, core::objectmodel::ConfigurationSetting);  ;  Public Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext *",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_start_navigation_button_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_start_navigation_button_setting.html
Deployability,update,updateInternal,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_start_navigation_button_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_start_navigation_button_setting.html
Integrability,depend,dependent,"(StartNavigationButtonSetting, MouseButtonSetting);  ; std::string getOperationType () override;  ;  Public Member Functions inherited from sofa::component::setting::MouseButtonSetting;  SOFA_CLASS (MouseButtonSetting, core::objectmodel::ConfigurationSetting);  ;  Public Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_start_navigation_button_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_start_navigation_button_setting.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::component::StartNavigationButtonSetting Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::component::StartNavigationButtonSetting Class Reference . #include <AddRecordedCameraButtonSetting.h>. Inheritance diagram for sofa::gui::component::StartNavigationButtonSetting:. [legend]. Public Member Functions;  SOFA_CLASS (StartNavigationButtonSetting, MouseButtonSetting);  ; std::string getOperationType () override;  ;  Public Member Functions inherited from sofa::component::setting::MouseButtonSetting;  SOFA_CLASS (MouseButtonSetting, core::objectmodel::ConfigurationSetting);  ;  Public Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext *",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_start_navigation_button_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_start_navigation_button_setting.html
Performance,load,loader,"ctions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_start_navigation_button_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_start_navigation_button_setting.html
Testability,log,logging," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_start_navigation_button_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_start_navigation_button_setting.html
Usability,clear,clearLoggedMessages," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_start_navigation_button_setting.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_start_navigation_button_setting.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::data_widget_container< T > Member List . This is the complete list of members for sofa::gui::qt::data_widget_container< T >, including all inherited members. container_layoutsofa::gui::qt::data_widget_container< T >; createLayout(DataWidget *parent)sofa::gui::qt::data_widget_container< T >inline; createLayout(QLayout *layout)sofa::gui::qt::data_widget_container< T >inline; createWidgets(DataWidget *parent, const data_type &d, bool readOnly)sofa::gui::qt::data_widget_container< T >inline; data_type typedefsofa::gui::qt::data_widget_container< T >; data_widget_container()sofa::gui::qt::data_widget_container< T >inline; helper typedefsofa::gui::qt::data_widget_container< T >; insertWidgets()sofa::gui::qt::data_widget_container< T >inline; Layout typedefsofa::gui::qt::data_widget_container< T >; readFromData(const data_type &d)sofa::gui::qt::data_widget_container< T >inline; setReadOnly(bool readOnly)sofa::gui::qt::data_widget_container< T >inline; wsofa::gui::qt::data_widget_container< T >; Widget typedefsofa::gui::qt::data_widget_container< T >; writeToData(data_type &d)sofa::gui::qt::data_widget_container< T >inline. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::data_widget_container< sofa::core::topology::Topology::Edge > Member List . This is the complete list of members for sofa::gui::qt::data_widget_container< sofa::core::topology::Topology::Edge >, including all inherited members. container_layoutsofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Edge >; createLayout(DataWidget *parent)sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Edge >inline; createLayout(QLayout *layout)sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Edge >inline; createWidgets(DataWidget *parent, const data_type &d, bool readOnly)sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Edge >inline; data_type typedefsofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Edge >; fixed_vector_data_widget_container()sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Edge >inline; insertWidgets()sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Edge >inline; Layout typedefsofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Edge >; N enum valuesofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Edge >; readFromData(const data_type &d)sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Edge >inline; setReadOnly(bool readOnly)sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Edge >inline; value_type typedefsofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Edge >; vhelper typedefsofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Edge >; wsofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Edge >; writeToData",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_edge_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_edge_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::qt::data_widget_container< sofa::core::topology::Topology::Edge > Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::data_widget_container< sofa::core::topology::Topology::Edge > Class Reference . #include <SimpleDataWidget.h>. Inheritance diagram for sofa::gui::qt::data_widget_container< sofa::core::topology::Topology::Edge >:. [legend]. Additional Inherited Members;  Public Attributes inherited from sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Edge >; data_widget_container< typename vector_data_trait< sofa::core::topology::Topology::Edge >::value_type > w [N];  ; Layout * container_layout;  ;  Public Member Functions inherited from sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Edge >;  fixed_vector_data_widget_container ();  ; bool createLayout (DataWidget *parent);  ; bool createLayout (QLayout *layout);  ; bool createWidgets (DataWidget *parent, const data_type &d, bool readOnly);  ; void setReadOnly (bool readOnly);  ; void readFromData (const data_type &d);  ; void writeToData (data_type &d);  ; void insertWidgets ();  . sofaguiqtdata_widget_container< sofa::core::topology::Topology::Edge >; Generated on Mon Nov 11 2024 03:24:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_edge_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_edge_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::data_widget_container< sofa::core::topology::Topology::Hexahedron > Member List . This is the complete list of members for sofa::gui::qt::data_widget_container< sofa::core::topology::Topology::Hexahedron >, including all inherited members. container_layoutsofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Hexahedron >; createLayout(DataWidget *parent)sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Hexahedron >inline; createLayout(QLayout *layout)sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Hexahedron >inline; createWidgets(DataWidget *parent, const data_type &d, bool readOnly)sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Hexahedron >inline; data_type typedefsofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Hexahedron >; fixed_vector_data_widget_container()sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Hexahedron >inline; insertWidgets()sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Hexahedron >inline; Layout typedefsofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Hexahedron >; N enum valuesofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Hexahedron >; readFromData(const data_type &d)sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Hexahedron >inline; setReadOnly(bool readOnly)sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Hexahedron >inline; value_type typedefsofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Hexahedron >; vhelper typedefsofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Hexahedron >; wsofa::gui::q",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_hexahedron_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_hexahedron_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::qt::data_widget_container< sofa::core::topology::Topology::Hexahedron > Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::data_widget_container< sofa::core::topology::Topology::Hexahedron > Class Reference . #include <SimpleDataWidget.h>. Inheritance diagram for sofa::gui::qt::data_widget_container< sofa::core::topology::Topology::Hexahedron >:. [legend]. Additional Inherited Members;  Public Attributes inherited from sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Hexahedron >; data_widget_container< typename vector_data_trait< sofa::core::topology::Topology::Hexahedron >::value_type > w [N];  ; Layout * container_layout;  ;  Public Member Functions inherited from sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Hexahedron >;  fixed_vector_data_widget_container ();  ; bool createLayout (DataWidget *parent);  ; bool createLayout (QLayout *layout);  ; bool createWidgets (DataWidget *parent, const data_type &d, bool readOnly);  ; void setReadOnly (bool readOnly);  ; void readFromData (const data_type &d);  ; void writeToData (data_type &d);  ; void insertWidgets ();  . sofaguiqtdata_widget_container< sofa::core::topology::Topology::Hexahedron >; Generated on Mon Nov 11 2024 03:24:42 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_hexahedron_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_hexahedron_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::data_widget_container< sofa::core::topology::Topology::Quad > Member List . This is the complete list of members for sofa::gui::qt::data_widget_container< sofa::core::topology::Topology::Quad >, including all inherited members. container_layoutsofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Quad >; createLayout(DataWidget *parent)sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Quad >inline; createLayout(QLayout *layout)sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Quad >inline; createWidgets(DataWidget *parent, const data_type &d, bool readOnly)sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Quad >inline; data_type typedefsofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Quad >; fixed_vector_data_widget_container()sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Quad >inline; insertWidgets()sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Quad >inline; Layout typedefsofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Quad >; N enum valuesofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Quad >; readFromData(const data_type &d)sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Quad >inline; setReadOnly(bool readOnly)sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Quad >inline; value_type typedefsofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Quad >; vhelper typedefsofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Quad >; wsofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Quad >; writeToData",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_quad_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_quad_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::qt::data_widget_container< sofa::core::topology::Topology::Quad > Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::data_widget_container< sofa::core::topology::Topology::Quad > Class Reference . #include <SimpleDataWidget.h>. Inheritance diagram for sofa::gui::qt::data_widget_container< sofa::core::topology::Topology::Quad >:. [legend]. Additional Inherited Members;  Public Attributes inherited from sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Quad >; data_widget_container< typename vector_data_trait< sofa::core::topology::Topology::Quad >::value_type > w [N];  ; Layout * container_layout;  ;  Public Member Functions inherited from sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Quad >;  fixed_vector_data_widget_container ();  ; bool createLayout (DataWidget *parent);  ; bool createLayout (QLayout *layout);  ; bool createWidgets (DataWidget *parent, const data_type &d, bool readOnly);  ; void setReadOnly (bool readOnly);  ; void readFromData (const data_type &d);  ; void writeToData (data_type &d);  ; void insertWidgets ();  . sofaguiqtdata_widget_container< sofa::core::topology::Topology::Quad >; Generated on Mon Nov 11 2024 03:24:23 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_quad_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_quad_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::data_widget_container< sofa::core::topology::Topology::Tetrahedron > Member List . This is the complete list of members for sofa::gui::qt::data_widget_container< sofa::core::topology::Topology::Tetrahedron >, including all inherited members. container_layoutsofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Tetrahedron >; createLayout(DataWidget *parent)sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Tetrahedron >inline; createLayout(QLayout *layout)sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Tetrahedron >inline; createWidgets(DataWidget *parent, const data_type &d, bool readOnly)sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Tetrahedron >inline; data_type typedefsofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Tetrahedron >; fixed_vector_data_widget_container()sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Tetrahedron >inline; insertWidgets()sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Tetrahedron >inline; Layout typedefsofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Tetrahedron >; N enum valuesofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Tetrahedron >; readFromData(const data_type &d)sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Tetrahedron >inline; setReadOnly(bool readOnly)sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Tetrahedron >inline; value_type typedefsofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Tetrahedron >; vhelper typedefsofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Tetrahedron >",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_tetrahedron_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_tetrahedron_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::qt::data_widget_container< sofa::core::topology::Topology::Tetrahedron > Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::data_widget_container< sofa::core::topology::Topology::Tetrahedron > Class Reference . #include <SimpleDataWidget.h>. Inheritance diagram for sofa::gui::qt::data_widget_container< sofa::core::topology::Topology::Tetrahedron >:. [legend]. Additional Inherited Members;  Public Attributes inherited from sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Tetrahedron >; data_widget_container< typename vector_data_trait< sofa::core::topology::Topology::Tetrahedron >::value_type > w [N];  ; Layout * container_layout;  ;  Public Member Functions inherited from sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Tetrahedron >;  fixed_vector_data_widget_container ();  ; bool createLayout (DataWidget *parent);  ; bool createLayout (QLayout *layout);  ; bool createWidgets (DataWidget *parent, const data_type &d, bool readOnly);  ; void setReadOnly (bool readOnly);  ; void readFromData (const data_type &d);  ; void writeToData (data_type &d);  ; void insertWidgets ();  . sofaguiqtdata_widget_container< sofa::core::topology::Topology::Tetrahedron >; Generated on Mon Nov 11 2024 03:24:32 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_tetrahedron_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_tetrahedron_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::data_widget_container< sofa::core::topology::Topology::Triangle > Member List . This is the complete list of members for sofa::gui::qt::data_widget_container< sofa::core::topology::Topology::Triangle >, including all inherited members. container_layoutsofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Triangle >; createLayout(DataWidget *parent)sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Triangle >inline; createLayout(QLayout *layout)sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Triangle >inline; createWidgets(DataWidget *parent, const data_type &d, bool readOnly)sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Triangle >inline; data_type typedefsofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Triangle >; fixed_vector_data_widget_container()sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Triangle >inline; insertWidgets()sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Triangle >inline; Layout typedefsofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Triangle >; N enum valuesofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Triangle >; readFromData(const data_type &d)sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Triangle >inline; setReadOnly(bool readOnly)sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Triangle >inline; value_type typedefsofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Triangle >; vhelper typedefsofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Triangle >; wsofa::gui::qt::fixed_vector_data_widget_co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_triangle_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_triangle_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::qt::data_widget_container< sofa::core::topology::Topology::Triangle > Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::data_widget_container< sofa::core::topology::Topology::Triangle > Class Reference . #include <SimpleDataWidget.h>. Inheritance diagram for sofa::gui::qt::data_widget_container< sofa::core::topology::Topology::Triangle >:. [legend]. Additional Inherited Members;  Public Attributes inherited from sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Triangle >; data_widget_container< typename vector_data_trait< sofa::core::topology::Topology::Triangle >::value_type > w [N];  ; Layout * container_layout;  ;  Public Member Functions inherited from sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Triangle >;  fixed_vector_data_widget_container ();  ; bool createLayout (DataWidget *parent);  ; bool createLayout (QLayout *layout);  ; bool createWidgets (DataWidget *parent, const data_type &d, bool readOnly);  ; void setReadOnly (bool readOnly);  ; void readFromData (const data_type &d);  ; void writeToData (data_type &d);  ; void insertWidgets ();  . sofaguiqtdata_widget_container< sofa::core::topology::Topology::Triangle >; Generated on Mon Nov 11 2024 03:24:13 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_triangle_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_triangle_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::data_widget_container< sofa::defaulttype::RigidCoord< N, T > > Member List . This is the complete list of members for sofa::gui::qt::data_widget_container< sofa::defaulttype::RigidCoord< N, T > >, including all inherited members. checksofa::gui::qt::struct_data_widget_container< sofa::defaulttype::RigidCoord< N, T > >; Container typedefsofa::gui::qt::struct_data_widget_container< sofa::defaulttype::RigidCoord< N, T > >; container_layoutsofa::gui::qt::struct_data_widget_container< sofa::defaulttype::RigidCoord< N, T > >; createLayout(DataWidget *parent)sofa::gui::qt::struct_data_widget_container< sofa::defaulttype::RigidCoord< N, T > >inline; createLayout(QLayout *layout)sofa::gui::qt::struct_data_widget_container< sofa::defaulttype::RigidCoord< N, T > >inline; createWidgets(DataWidget *parent, const data_type &d, bool readOnly)sofa::gui::qt::struct_data_widget_container< sofa::defaulttype::RigidCoord< N, T > >inline; data_type typedefsofa::gui::qt::struct_data_widget_container< sofa::defaulttype::RigidCoord< N, T > >; insertWidgets()sofa::gui::qt::struct_data_widget_container< sofa::defaulttype::RigidCoord< N, T > >inline; labelsofa::gui::qt::struct_data_widget_container< sofa::defaulttype::RigidCoord< N, T > >; Layout typedefsofa::gui::qt::struct_data_widget_container< sofa::defaulttype::RigidCoord< N, T > >; master_layoutsofa::gui::qt::struct_data_widget_container< sofa::defaulttype::RigidCoord< N, T > >; MasterLayout typedefsofa::gui::qt::struct_data_widget_container< sofa::defaulttype::RigidCoord< N, T > >; psofa::gui::qt::struct_data_widget_container< sofa::defaulttype::RigidCoord< N, T > >; PrevContainer typedefsofa::gui::qt::struct_data_widget_container< sofa::defaulttype::RigidCoord< N, T > >; readConstantsFromData(const data_type &d)sofa::gui::qt::struct_data_widget_container< sofa::defaulttype::RigidCoord< N, T > >inline; readFromData(const dat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1defaulttype_1_1_rigid_coord_3_01_n_00_01_t_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1defaulttype_1_1_rigid_coord_3_01_n_00_01_t_01_4_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::qt::data_widget_container< sofa::defaulttype::RigidCoord< N, T > > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::data_widget_container< sofa::defaulttype::RigidCoord< N, T > > Class Template Reference . #include <StructDataWidget.h>. Inheritance diagram for sofa::gui::qt::data_widget_container< sofa::defaulttype::RigidCoord< N, T > >:. [legend]. Additional Inherited Members;  Public Attributes inherited from sofa::gui::qt::struct_data_widget_container< sofa::defaulttype::RigidCoord< N, T > >; PrevContainer p;  ; Container w;  ; QCheckBox * check;  ; QLabel * label;  ; Layout * container_layout;  ; MasterLayout * master_layout;  ;  Public Member Functions inherited from sofa::gui::qt::struct_data_widget_container< sofa::defaulttype::RigidCoord< N, T > >;  struct_data_widget_container ();  ; void setMasterLayout (MasterLayout *layout);  ; bool createLayout (DataWidget *parent);  ; bool createLayout (QLayout *layout);  ; void insertWidgets ();  ; bool createWidgets (DataWidget *parent, const data_type &d, bool readOnly);  ; void setReadOnly (bool readOnly);  ; void readFromData (const data_type &d);  ; void readConstantsFromData (const data_type &d);  ; void writeToData (data_type &d);  . sofaguiqtdata_widget_container< sofa::defaulttype::RigidCoord< N, T > >; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1defaulttype_1_1_rigid_coord_3_01_n_00_01_t_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1defaulttype_1_1_rigid_coord_3_01_n_00_01_t_01_4_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::data_widget_container< sofa::defaulttype::RigidMass< N, T > > Member List . This is the complete list of members for sofa::gui::qt::data_widget_container< sofa::defaulttype::RigidMass< N, T > >, including all inherited members. checksofa::gui::qt::struct_data_widget_container< sofa::defaulttype::RigidMass< N, T > >; Container typedefsofa::gui::qt::struct_data_widget_container< sofa::defaulttype::RigidMass< N, T > >; container_layoutsofa::gui::qt::struct_data_widget_container< sofa::defaulttype::RigidMass< N, T > >; createLayout(DataWidget *parent)sofa::gui::qt::struct_data_widget_container< sofa::defaulttype::RigidMass< N, T > >inline; createLayout(QLayout *layout)sofa::gui::qt::struct_data_widget_container< sofa::defaulttype::RigidMass< N, T > >inline; createWidgets(DataWidget *parent, const data_type &d, bool readOnly)sofa::gui::qt::struct_data_widget_container< sofa::defaulttype::RigidMass< N, T > >inline; data_type typedefsofa::gui::qt::struct_data_widget_container< sofa::defaulttype::RigidMass< N, T > >; insertWidgets()sofa::gui::qt::struct_data_widget_container< sofa::defaulttype::RigidMass< N, T > >inline; labelsofa::gui::qt::struct_data_widget_container< sofa::defaulttype::RigidMass< N, T > >; Layout typedefsofa::gui::qt::struct_data_widget_container< sofa::defaulttype::RigidMass< N, T > >; master_layoutsofa::gui::qt::struct_data_widget_container< sofa::defaulttype::RigidMass< N, T > >; MasterLayout typedefsofa::gui::qt::struct_data_widget_container< sofa::defaulttype::RigidMass< N, T > >; psofa::gui::qt::struct_data_widget_container< sofa::defaulttype::RigidMass< N, T > >; PrevContainer typedefsofa::gui::qt::struct_data_widget_container< sofa::defaulttype::RigidMass< N, T > >; readConstantsFromData(const data_type &d)sofa::gui::qt::struct_data_widget_container< sofa::defaulttype::RigidMass< N, T > >inline; readFromData(const data_type &d)sofa::g",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1defaulttype_1_1_rigid_mass_3_01_n_00_01_t_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1defaulttype_1_1_rigid_mass_3_01_n_00_01_t_01_4_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::qt::data_widget_container< sofa::defaulttype::RigidMass< N, T > > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::data_widget_container< sofa::defaulttype::RigidMass< N, T > > Class Template Reference . #include <StructDataWidget.h>. Inheritance diagram for sofa::gui::qt::data_widget_container< sofa::defaulttype::RigidMass< N, T > >:. [legend]. Additional Inherited Members;  Public Attributes inherited from sofa::gui::qt::struct_data_widget_container< sofa::defaulttype::RigidMass< N, T > >; PrevContainer p;  ; Container w;  ; QCheckBox * check;  ; QLabel * label;  ; Layout * container_layout;  ; MasterLayout * master_layout;  ;  Public Member Functions inherited from sofa::gui::qt::struct_data_widget_container< sofa::defaulttype::RigidMass< N, T > >;  struct_data_widget_container ();  ; void setMasterLayout (MasterLayout *layout);  ; bool createLayout (DataWidget *parent);  ; bool createLayout (QLayout *layout);  ; void insertWidgets ();  ; bool createWidgets (DataWidget *parent, const data_type &d, bool readOnly);  ; void setReadOnly (bool readOnly);  ; void readFromData (const data_type &d);  ; void readConstantsFromData (const data_type &d);  ; void writeToData (data_type &d);  . sofaguiqtdata_widget_container< sofa::defaulttype::RigidMass< N, T > >; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1defaulttype_1_1_rigid_mass_3_01_n_00_01_t_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1defaulttype_1_1_rigid_mass_3_01_n_00_01_t_01_4_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::data_widget_container< sofa::type::fixed_array< T, N > > Member List . This is the complete list of members for sofa::gui::qt::data_widget_container< sofa::type::fixed_array< T, N > >, including all inherited members. container_layoutsofa::gui::qt::fixed_vector_data_widget_container< sofa::type::fixed_array< T, N > >; createLayout(DataWidget *parent)sofa::gui::qt::fixed_vector_data_widget_container< sofa::type::fixed_array< T, N > >inline; createLayout(QLayout *layout)sofa::gui::qt::fixed_vector_data_widget_container< sofa::type::fixed_array< T, N > >inline; createWidgets(DataWidget *parent, const data_type &d, bool readOnly)sofa::gui::qt::fixed_vector_data_widget_container< sofa::type::fixed_array< T, N > >inline; data_type typedefsofa::gui::qt::fixed_vector_data_widget_container< sofa::type::fixed_array< T, N > >; fixed_vector_data_widget_container()sofa::gui::qt::fixed_vector_data_widget_container< sofa::type::fixed_array< T, N > >inline; insertWidgets()sofa::gui::qt::fixed_vector_data_widget_container< sofa::type::fixed_array< T, N > >inline; Layout typedefsofa::gui::qt::fixed_vector_data_widget_container< sofa::type::fixed_array< T, N > >; N enum valuesofa::gui::qt::fixed_vector_data_widget_container< sofa::type::fixed_array< T, N > >; readFromData(const data_type &d)sofa::gui::qt::fixed_vector_data_widget_container< sofa::type::fixed_array< T, N > >inline; setReadOnly(bool readOnly)sofa::gui::qt::fixed_vector_data_widget_container< sofa::type::fixed_array< T, N > >inline; value_type typedefsofa::gui::qt::fixed_vector_data_widget_container< sofa::type::fixed_array< T, N > >; vhelper typedefsofa::gui::qt::fixed_vector_data_widget_container< sofa::type::fixed_array< T, N > >; wsofa::gui::qt::fixed_vector_data_widget_container< sofa::type::fixed_array< T, N > >; writeToData(data_type &d)sofa::gui::qt::fixed_vector_data_widget_container< sofa::type::fix",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1type_1_1fixed__array_3_01_t_00_01_n_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1type_1_1fixed__array_3_01_t_00_01_n_01_4_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::qt::data_widget_container< sofa::type::fixed_array< T, N > > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::data_widget_container< sofa::type::fixed_array< T, N > > Class Template Reference . #include <SimpleDataWidget.h>. Inheritance diagram for sofa::gui::qt::data_widget_container< sofa::type::fixed_array< T, N > >:. [legend]. Additional Inherited Members;  Public Attributes inherited from sofa::gui::qt::fixed_vector_data_widget_container< sofa::type::fixed_array< T, N > >; data_widget_container< typename vector_data_trait< sofa::type::fixed_array< T, N > >::value_type > w [N];  ; Layout * container_layout;  ;  Public Member Functions inherited from sofa::gui::qt::fixed_vector_data_widget_container< sofa::type::fixed_array< T, N > >;  fixed_vector_data_widget_container ();  ; bool createLayout (DataWidget *parent);  ; bool createLayout (QLayout *layout);  ; bool createWidgets (DataWidget *parent, const data_type &d, bool readOnly);  ; void setReadOnly (bool readOnly);  ; void readFromData (const data_type &d);  ; void writeToData (data_type &d);  ; void insertWidgets ();  . sofaguiqtdata_widget_container< sofa::type::fixed_array< T, N > >; Generated on Mon Nov 11 2024 03:23:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1type_1_1fixed__array_3_01_t_00_01_n_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1type_1_1fixed__array_3_01_t_00_01_n_01_4_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::data_widget_container< sofa::type::Material > Member List . This is the complete list of members for sofa::gui::qt::data_widget_container< sofa::type::Material >, including all inherited members. checksofa::gui::qt::struct_data_widget_container< sofa::type::Material >; Container typedefsofa::gui::qt::struct_data_widget_container< sofa::type::Material >; container_layoutsofa::gui::qt::struct_data_widget_container< sofa::type::Material >; createLayout(DataWidget *parent)sofa::gui::qt::struct_data_widget_container< sofa::type::Material >inline; createLayout(QLayout *layout)sofa::gui::qt::struct_data_widget_container< sofa::type::Material >inline; createWidgets(DataWidget *parent, const data_type &d, bool readOnly)sofa::gui::qt::struct_data_widget_container< sofa::type::Material >inline; data_type typedefsofa::gui::qt::struct_data_widget_container< sofa::type::Material >; insertWidgets()sofa::gui::qt::struct_data_widget_container< sofa::type::Material >inline; labelsofa::gui::qt::struct_data_widget_container< sofa::type::Material >; Layout typedefsofa::gui::qt::struct_data_widget_container< sofa::type::Material >; master_layoutsofa::gui::qt::struct_data_widget_container< sofa::type::Material >; MasterLayout typedefsofa::gui::qt::struct_data_widget_container< sofa::type::Material >; psofa::gui::qt::struct_data_widget_container< sofa::type::Material >; PrevContainer typedefsofa::gui::qt::struct_data_widget_container< sofa::type::Material >; readConstantsFromData(const data_type &d)sofa::gui::qt::struct_data_widget_container< sofa::type::Material >inline; readFromData(const data_type &d)sofa::gui::qt::struct_data_widget_container< sofa::type::Material >inline; setMasterLayout(MasterLayout *layout)sofa::gui::qt::struct_data_widget_container< sofa::type::Material >inline; setReadOnly(bool readOnly)sofa::gui::qt::struct_data_widget_container< sofa::type::Material ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1type_1_1_material_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1type_1_1_material_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::qt::data_widget_container< sofa::type::Material > Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::data_widget_container< sofa::type::Material > Class Reference . #include <StructDataWidget.h>. Inheritance diagram for sofa::gui::qt::data_widget_container< sofa::type::Material >:. [legend]. Additional Inherited Members;  Public Attributes inherited from sofa::gui::qt::struct_data_widget_container< sofa::type::Material >; PrevContainer p;  ; Container w;  ; QCheckBox * check;  ; QLabel * label;  ; Layout * container_layout;  ; MasterLayout * master_layout;  ;  Public Member Functions inherited from sofa::gui::qt::struct_data_widget_container< sofa::type::Material >;  struct_data_widget_container ();  ; void setMasterLayout (MasterLayout *layout);  ; bool createLayout (DataWidget *parent);  ; bool createLayout (QLayout *layout);  ; void insertWidgets ();  ; bool createWidgets (DataWidget *parent, const data_type &d, bool readOnly);  ; void setReadOnly (bool readOnly);  ; void readFromData (const data_type &d);  ; void readConstantsFromData (const data_type &d);  ; void writeToData (data_type &d);  . sofaguiqtdata_widget_container< sofa::type::Material >; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1type_1_1_material_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1type_1_1_material_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::data_widget_container< sofa::type::Mat< L, C, T > > Member List . This is the complete list of members for sofa::gui::qt::data_widget_container< sofa::type::Mat< L, C, T > >, including all inherited members. C enum valuesofa::gui::qt::fixed_grid_data_widget_container< sofa::type::Mat< L, C, T > >; container_layoutsofa::gui::qt::fixed_grid_data_widget_container< sofa::type::Mat< L, C, T > >; createLayout(QWidget *parent)sofa::gui::qt::fixed_grid_data_widget_container< sofa::type::Mat< L, C, T > >inline; createLayout(QLayout *layout)sofa::gui::qt::fixed_grid_data_widget_container< sofa::type::Mat< L, C, T > >inline; createWidgets(DataWidget *parent, const data_type &d, bool readOnly)sofa::gui::qt::fixed_grid_data_widget_container< sofa::type::Mat< L, C, T > >inline; data_type typedefsofa::gui::qt::fixed_grid_data_widget_container< sofa::type::Mat< L, C, T > >; fixed_grid_data_widget_container()sofa::gui::qt::fixed_grid_data_widget_container< sofa::type::Mat< L, C, T > >inline; insertWidgets()sofa::gui::qt::fixed_grid_data_widget_container< sofa::type::Mat< L, C, T > >inline; L enum valuesofa::gui::qt::fixed_grid_data_widget_container< sofa::type::Mat< L, C, T > >; Layout typedefsofa::gui::qt::fixed_grid_data_widget_container< sofa::type::Mat< L, C, T > >; readFromData(const data_type &d)sofa::gui::qt::fixed_grid_data_widget_container< sofa::type::Mat< L, C, T > >inline; rhelper typedefsofa::gui::qt::fixed_grid_data_widget_container< sofa::type::Mat< L, C, T > >; row_type typedefsofa::gui::qt::fixed_grid_data_widget_container< sofa::type::Mat< L, C, T > >; setReadOnly(bool readOnly)sofa::gui::qt::fixed_grid_data_widget_container< sofa::type::Mat< L, C, T > >inline; value_type typedefsofa::gui::qt::fixed_grid_data_widget_container< sofa::type::Mat< L, C, T > >; vhelper typedefsofa::gui::qt::fixed_grid_data_widget_container< sofa::type::Mat< L, C, T > >; wsof",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1type_1_1_mat_3_01_l_00_01_c_00_01_t_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1type_1_1_mat_3_01_l_00_01_c_00_01_t_01_4_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::qt::data_widget_container< sofa::type::Mat< L, C, T > > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::data_widget_container< sofa::type::Mat< L, C, T > > Class Template Reference . #include <SimpleDataWidget.h>. Inheritance diagram for sofa::gui::qt::data_widget_container< sofa::type::Mat< L, C, T > >:. [legend]. Additional Inherited Members;  Public Attributes inherited from sofa::gui::qt::fixed_grid_data_widget_container< sofa::type::Mat< L, C, T > >; data_widget_container< typename vector_data_trait< typename vector_data_trait< sofa::type::Mat< L, C, T > >::value_type >::value_type > w [L][C];  ; Layout * container_layout;  ;  Public Member Functions inherited from sofa::gui::qt::fixed_grid_data_widget_container< sofa::type::Mat< L, C, T > >;  fixed_grid_data_widget_container ();  ; bool createLayout (QWidget *parent);  ; bool createLayout (QLayout *layout);  ; bool createWidgets (DataWidget *parent, const data_type &d, bool readOnly);  ; void setReadOnly (bool readOnly);  ; void readFromData (const data_type &d);  ; void writeToData (data_type &d);  ; void insertWidgets ();  . sofaguiqtdata_widget_container< sofa::type::Mat< L, C, T > >; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1type_1_1_mat_3_01_l_00_01_c_00_01_t_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1type_1_1_mat_3_01_l_00_01_c_00_01_t_01_4_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::data_widget_container< sofa::type::Vec< N, T > > Member List . This is the complete list of members for sofa::gui::qt::data_widget_container< sofa::type::Vec< N, T > >, including all inherited members. container_layoutsofa::gui::qt::fixed_vector_data_widget_container< sofa::type::Vec< N, T > >; createLayout(DataWidget *parent)sofa::gui::qt::fixed_vector_data_widget_container< sofa::type::Vec< N, T > >inline; createLayout(QLayout *layout)sofa::gui::qt::fixed_vector_data_widget_container< sofa::type::Vec< N, T > >inline; createWidgets(DataWidget *parent, const data_type &d, bool readOnly)sofa::gui::qt::fixed_vector_data_widget_container< sofa::type::Vec< N, T > >inline; data_type typedefsofa::gui::qt::fixed_vector_data_widget_container< sofa::type::Vec< N, T > >; fixed_vector_data_widget_container()sofa::gui::qt::fixed_vector_data_widget_container< sofa::type::Vec< N, T > >inline; insertWidgets()sofa::gui::qt::fixed_vector_data_widget_container< sofa::type::Vec< N, T > >inline; Layout typedefsofa::gui::qt::fixed_vector_data_widget_container< sofa::type::Vec< N, T > >; N enum valuesofa::gui::qt::fixed_vector_data_widget_container< sofa::type::Vec< N, T > >; readFromData(const data_type &d)sofa::gui::qt::fixed_vector_data_widget_container< sofa::type::Vec< N, T > >inline; setReadOnly(bool readOnly)sofa::gui::qt::fixed_vector_data_widget_container< sofa::type::Vec< N, T > >inline; value_type typedefsofa::gui::qt::fixed_vector_data_widget_container< sofa::type::Vec< N, T > >; vhelper typedefsofa::gui::qt::fixed_vector_data_widget_container< sofa::type::Vec< N, T > >; wsofa::gui::qt::fixed_vector_data_widget_container< sofa::type::Vec< N, T > >; writeToData(data_type &d)sofa::gui::qt::fixed_vector_data_widget_container< sofa::type::Vec< N, T > >inline. Generated on Mon Nov 11 2024 03:25:19 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1type_1_1_vec_3_01_n_00_01_t_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1type_1_1_vec_3_01_n_00_01_t_01_4_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::qt::data_widget_container< sofa::type::Vec< N, T > > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::data_widget_container< sofa::type::Vec< N, T > > Class Template Reference . #include <SimpleDataWidget.h>. Inheritance diagram for sofa::gui::qt::data_widget_container< sofa::type::Vec< N, T > >:. [legend]. Additional Inherited Members;  Public Attributes inherited from sofa::gui::qt::fixed_vector_data_widget_container< sofa::type::Vec< N, T > >; data_widget_container< typename vector_data_trait< sofa::type::Vec< N, T > >::value_type > w [N];  ; Layout * container_layout;  ;  Public Member Functions inherited from sofa::gui::qt::fixed_vector_data_widget_container< sofa::type::Vec< N, T > >;  fixed_vector_data_widget_container ();  ; bool createLayout (DataWidget *parent);  ; bool createLayout (QLayout *layout);  ; bool createWidgets (DataWidget *parent, const data_type &d, bool readOnly);  ; void setReadOnly (bool readOnly);  ; void readFromData (const data_type &d);  ; void writeToData (data_type &d);  ; void insertWidgets ();  . sofaguiqtdata_widget_container< sofa::type::Vec< N, T > >; Generated on Mon Nov 11 2024 03:25:19 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1type_1_1_vec_3_01_n_00_01_t_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1type_1_1_vec_3_01_n_00_01_t_01_4_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::data_widget_container< CLASS > Member List . This is the complete list of members for sofa::gui::qt::data_widget_container< CLASS >, including all inherited members. checksofa::gui::qt::struct_data_widget_container< CLASS >; Container typedefsofa::gui::qt::struct_data_widget_container< CLASS >; container_layoutsofa::gui::qt::struct_data_widget_container< CLASS >; createLayout(DataWidget *parent)sofa::gui::qt::struct_data_widget_container< CLASS >inline; createLayout(QLayout *layout)sofa::gui::qt::struct_data_widget_container< CLASS >inline; createWidgets(DataWidget *parent, const data_type &d, bool readOnly)sofa::gui::qt::struct_data_widget_container< CLASS >inline; data_type typedefsofa::gui::qt::struct_data_widget_container< CLASS >; insertWidgets()sofa::gui::qt::struct_data_widget_container< CLASS >inline; labelsofa::gui::qt::struct_data_widget_container< CLASS >; Layout typedefsofa::gui::qt::struct_data_widget_container< CLASS >; master_layoutsofa::gui::qt::struct_data_widget_container< CLASS >; MasterLayout typedefsofa::gui::qt::struct_data_widget_container< CLASS >; psofa::gui::qt::struct_data_widget_container< CLASS >; PrevContainer typedefsofa::gui::qt::struct_data_widget_container< CLASS >; readConstantsFromData(const data_type &d)sofa::gui::qt::struct_data_widget_container< CLASS >inline; readFromData(const data_type &d)sofa::gui::qt::struct_data_widget_container< CLASS >inline; setMasterLayout(MasterLayout *layout)sofa::gui::qt::struct_data_widget_container< CLASS >inline; setReadOnly(bool readOnly)sofa::gui::qt::struct_data_widget_container< CLASS >inline; shelper typedefsofa::gui::qt::struct_data_widget_container< CLASS >; struct_data_widget_container()sofa::gui::qt::struct_data_widget_container< CLASS >inline; value_type typedefsofa::gui::qt::struct_data_widget_container< CLASS >; vhelper typedefsofa::gui::qt::struct_data_widget_container< ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01_c_l_a_s_s_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01_c_l_a_s_s_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::qt::data_widget_container< CLASS > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::data_widget_container< CLASS > Class Template Reference . #include <StructDataWidget.h>. Inheritance diagram for sofa::gui::qt::data_widget_container< CLASS >:. [legend]. Additional Inherited Members;  Public Attributes inherited from sofa::gui::qt::struct_data_widget_container< CLASS >; PrevContainer p;  ; Container w;  ; QCheckBox * check;  ; QLabel * label;  ; Layout * container_layout;  ; MasterLayout * master_layout;  ;  Public Member Functions inherited from sofa::gui::qt::struct_data_widget_container< CLASS >;  struct_data_widget_container ();  ; void setMasterLayout (MasterLayout *layout);  ; bool createLayout (DataWidget *parent);  ; bool createLayout (QLayout *layout);  ; void insertWidgets ();  ; bool createWidgets (DataWidget *parent, const data_type &d, bool readOnly);  ; void setReadOnly (bool readOnly);  ; void readFromData (const data_type &d);  ; void readConstantsFromData (const data_type &d);  ; void writeToData (data_type &d);  . sofaguiqtdata_widget_container< CLASS >; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01_c_l_a_s_s_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01_c_l_a_s_s_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::data_widget_container< Quat< T > > Member List . This is the complete list of members for sofa::gui::qt::data_widget_container< Quat< T > >, including all inherited members. container_layoutsofa::gui::qt::fixed_vector_data_widget_container< Quat< T > >; createLayout(DataWidget *parent)sofa::gui::qt::fixed_vector_data_widget_container< Quat< T > >inline; createLayout(QLayout *layout)sofa::gui::qt::fixed_vector_data_widget_container< Quat< T > >inline; createWidgets(DataWidget *parent, const data_type &d, bool readOnly)sofa::gui::qt::fixed_vector_data_widget_container< Quat< T > >inline; data_type typedefsofa::gui::qt::fixed_vector_data_widget_container< Quat< T > >; fixed_vector_data_widget_container()sofa::gui::qt::fixed_vector_data_widget_container< Quat< T > >inline; insertWidgets()sofa::gui::qt::fixed_vector_data_widget_container< Quat< T > >inline; Layout typedefsofa::gui::qt::fixed_vector_data_widget_container< Quat< T > >; N enum valuesofa::gui::qt::fixed_vector_data_widget_container< Quat< T > >; readFromData(const data_type &d)sofa::gui::qt::fixed_vector_data_widget_container< Quat< T > >inline; setReadOnly(bool readOnly)sofa::gui::qt::fixed_vector_data_widget_container< Quat< T > >inline; value_type typedefsofa::gui::qt::fixed_vector_data_widget_container< Quat< T > >; vhelper typedefsofa::gui::qt::fixed_vector_data_widget_container< Quat< T > >; wsofa::gui::qt::fixed_vector_data_widget_container< Quat< T > >; writeToData(data_type &d)sofa::gui::qt::fixed_vector_data_widget_container< Quat< T > >inline. Generated on Mon Nov 11 2024 03:25:30 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01_quat_3_01_t_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01_quat_3_01_t_01_4_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::qt::data_widget_container< Quat< T > > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::data_widget_container< Quat< T > > Class Template Reference . #include <SimpleDataWidget.h>. Inheritance diagram for sofa::gui::qt::data_widget_container< Quat< T > >:. [legend]. Additional Inherited Members;  Public Attributes inherited from sofa::gui::qt::fixed_vector_data_widget_container< Quat< T > >; data_widget_container< typename vector_data_trait< Quat< T > >::value_type > w [N];  ; Layout * container_layout;  ;  Public Member Functions inherited from sofa::gui::qt::fixed_vector_data_widget_container< Quat< T > >;  fixed_vector_data_widget_container ();  ; bool createLayout (DataWidget *parent);  ; bool createLayout (QLayout *layout);  ; bool createWidgets (DataWidget *parent, const data_type &d, bool readOnly);  ; void setReadOnly (bool readOnly);  ; void readFromData (const data_type &d);  ; void writeToData (data_type &d);  ; void insertWidgets ();  . sofaguiqtdata_widget_container< Quat< T > >; Generated on Mon Nov 11 2024 03:25:30 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01_quat_3_01_t_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01_quat_3_01_t_01_4_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::data_widget_trait< T > Member List . This is the complete list of members for sofa::gui::qt::data_widget_trait< T >, including all inherited members. connectChanged(Widget *w, DataWidget *datawidget)sofa::gui::qt::data_widget_trait< T >inlinestatic; create(QWidget *parent, const data_type &)sofa::gui::qt::data_widget_trait< T >inlinestatic; data_type typedefsofa::gui::qt::data_widget_trait< T >; readFromData(Widget *w, const data_type &d)sofa::gui::qt::data_widget_trait< T >inlinestatic; setReadOnly(Widget *w, bool readOnly)sofa::gui::qt::data_widget_trait< T >inlinestatic; Widget typedefsofa::gui::qt::data_widget_trait< T >; writeToData(Widget *w, data_type &d)sofa::gui::qt::data_widget_trait< T >inlinestatic. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait-members.html
Usability,simpl,simple,"﻿. SOFA API: sofa::gui::qt::data_widget_trait< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::gui::qt::data_widget_trait< T > Class Template Reference . #include <SimpleDataWidget.h>; Detailed Description; template<class T>; class sofa::gui::qt::data_widget_trait< T >; This class is used to specify how to graphically represent a data type, by default using a simple QLineEdit . Static Public Member Functions; static Widget * create (QWidget *parent, const data_type &);  ; static void readFromData (Widget *w, const data_type &d);  ; static void writeToData (Widget *w, data_type &d);  ; static void setReadOnly (Widget *w, bool readOnly);  ; static void connectChanged (Widget *w, DataWidget *datawidget);  . Function details. ◆ connectChanged(). template<class T > . static void sofa::gui::qt::data_widget_trait< T >::connectChanged ; (; Widget * ; w, . DataWidget * ; datawidget . ). inlinestatic . ◆ create(). template<class T > . static Widget* sofa::gui::qt::data_widget_trait< T >::create ; (; QWidget * ; parent, . const data_type & ;  . ). inlinestatic . ◆ readFromData(). template<class T > . static void sofa::gui::qt::data_widget_trait< T >::readFromData ; (; Widget * ; w, . const data_type & ; d . ). inlinestatic . ◆ setReadOnly(). template<class T > . static void sofa::gui::qt::data_widget_trait< T >::setReadOnly ; (; Widget * ; w, . bool ; readOnly . ). inlinestatic . ◆ writeToData(). template<class T > . static void sofa::gui::qt::data_widget_trait< T >::writeToData ; (; Widget * ; w, . data_type & ; d . ). inlinestatic . sofaguiqtdata_widget_trait; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::data_widget_trait< bool > Member List . This is the complete list of members for sofa::gui::qt::data_widget_trait< bool >, including all inherited members. connectChanged(Widget *w, DataWidget *datawidget)sofa::gui::qt::data_widget_trait< bool >inlinestatic; create(QWidget *parent, const data_type &)sofa::gui::qt::data_widget_trait< bool >inlinestatic; data_type typedefsofa::gui::qt::data_widget_trait< bool >; readFromData(Widget *w, const data_type &d)sofa::gui::qt::data_widget_trait< bool >inlinestatic; setReadOnly(Widget *w, bool readOnly)sofa::gui::qt::data_widget_trait< bool >inlinestatic; Widget typedefsofa::gui::qt::data_widget_trait< bool >; writeToData(Widget *w, data_type &d)sofa::gui::qt::data_widget_trait< bool >inlinestatic. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait_3_01bool_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait_3_01bool_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::data_widget_trait< char > Member List . This is the complete list of members for sofa::gui::qt::data_widget_trait< char >, including all inherited members. connectChanged(Widget *w, DataWidget *datawidget)sofa::gui::qt::int_data_widget_trait< char, -128, 127 >inlinestatic; create(QWidget *parent, const data_type &)sofa::gui::qt::int_data_widget_trait< char, -128, 127 >inlinestatic; data_type typedefsofa::gui::qt::int_data_widget_trait< char, -128, 127 >; readFromData(Widget *w, const data_type &d)sofa::gui::qt::int_data_widget_trait< char, -128, 127 >inlinestatic; setReadOnly(Widget *w, bool readOnly)sofa::gui::qt::int_data_widget_trait< char, -128, 127 >inlinestatic; Widget typedefsofa::gui::qt::int_data_widget_trait< char, -128, 127 >; writeToData(Widget *w, data_type &d)sofa::gui::qt::int_data_widget_trait< char, -128, 127 >inlinestatic. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait_3_01char_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait_3_01char_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::qt::data_widget_trait< char > Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::data_widget_trait< char > Class Reference . #include <SimpleDataWidget.h>. Inheritance diagram for sofa::gui::qt::data_widget_trait< char >:. [legend]. Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::int_data_widget_trait< char, -128, 127 >; static Widget * create (QWidget *parent, const data_type &);  ; static void readFromData (Widget *w, const data_type &d);  ; static void writeToData (Widget *w, data_type &d);  ; static void setReadOnly (Widget *w, bool readOnly);  ; static void connectChanged (Widget *w, DataWidget *datawidget);  . sofaguiqtdata_widget_trait< char >; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait_3_01char_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait_3_01char_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::data_widget_trait< double > Member List . This is the complete list of members for sofa::gui::qt::data_widget_trait< double >, including all inherited members. connectChanged(Widget *w, DataWidget *datawidget)sofa::gui::qt::real_data_widget_trait< double >inlinestatic; create(QWidget *parent, const data_type &)sofa::gui::qt::real_data_widget_trait< double >inlinestatic; data_type typedefsofa::gui::qt::real_data_widget_trait< double >; readFromData(Widget *w, const data_type &d)sofa::gui::qt::real_data_widget_trait< double >inlinestatic; setReadOnly(Widget *w, bool readOnly)sofa::gui::qt::real_data_widget_trait< double >inlinestatic; Widget typedefsofa::gui::qt::real_data_widget_trait< double >; writeToData(Widget *w, data_type &d)sofa::gui::qt::real_data_widget_trait< double >inlinestatic. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait_3_01double_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait_3_01double_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::qt::data_widget_trait< double > Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::data_widget_trait< double > Class Reference . #include <SimpleDataWidget.h>. Inheritance diagram for sofa::gui::qt::data_widget_trait< double >:. [legend]. Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::real_data_widget_trait< double >; static Widget * create (QWidget *parent, const data_type &);  ; static void readFromData (Widget *w, const data_type &d);  ; static void writeToData (Widget *w, data_type &d);  ; static void setReadOnly (Widget *w, bool readOnly);  ; static void connectChanged (Widget *w, DataWidget *datawidget);  . sofaguiqtdata_widget_trait< double >; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait_3_01double_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait_3_01double_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::data_widget_trait< float > Member List . This is the complete list of members for sofa::gui::qt::data_widget_trait< float >, including all inherited members. connectChanged(Widget *w, DataWidget *datawidget)sofa::gui::qt::real_data_widget_trait< float >inlinestatic; create(QWidget *parent, const data_type &)sofa::gui::qt::real_data_widget_trait< float >inlinestatic; data_type typedefsofa::gui::qt::real_data_widget_trait< float >; readFromData(Widget *w, const data_type &d)sofa::gui::qt::real_data_widget_trait< float >inlinestatic; setReadOnly(Widget *w, bool readOnly)sofa::gui::qt::real_data_widget_trait< float >inlinestatic; Widget typedefsofa::gui::qt::real_data_widget_trait< float >; writeToData(Widget *w, data_type &d)sofa::gui::qt::real_data_widget_trait< float >inlinestatic. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait_3_01float_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait_3_01float_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::qt::data_widget_trait< float > Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::data_widget_trait< float > Class Reference . #include <SimpleDataWidget.h>. Inheritance diagram for sofa::gui::qt::data_widget_trait< float >:. [legend]. Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::real_data_widget_trait< float >; static Widget * create (QWidget *parent, const data_type &);  ; static void readFromData (Widget *w, const data_type &d);  ; static void writeToData (Widget *w, data_type &d);  ; static void setReadOnly (Widget *w, bool readOnly);  ; static void connectChanged (Widget *w, DataWidget *datawidget);  . sofaguiqtdata_widget_trait< float >; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait_3_01float_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait_3_01float_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::data_widget_trait< int > Member List . This is the complete list of members for sofa::gui::qt::data_widget_trait< int >, including all inherited members. connectChanged(Widget *w, DataWidget *datawidget)sofa::gui::qt::int_data_widget_trait< int, INT_MIN, INT_MAX >inlinestatic; create(QWidget *parent, const data_type &)sofa::gui::qt::int_data_widget_trait< int, INT_MIN, INT_MAX >inlinestatic; data_type typedefsofa::gui::qt::int_data_widget_trait< int, INT_MIN, INT_MAX >; readFromData(Widget *w, const data_type &d)sofa::gui::qt::int_data_widget_trait< int, INT_MIN, INT_MAX >inlinestatic; setReadOnly(Widget *w, bool readOnly)sofa::gui::qt::int_data_widget_trait< int, INT_MIN, INT_MAX >inlinestatic; Widget typedefsofa::gui::qt::int_data_widget_trait< int, INT_MIN, INT_MAX >; writeToData(Widget *w, data_type &d)sofa::gui::qt::int_data_widget_trait< int, INT_MIN, INT_MAX >inlinestatic. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait_3_01int_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait_3_01int_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::qt::data_widget_trait< int > Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::data_widget_trait< int > Class Reference . #include <SimpleDataWidget.h>. Inheritance diagram for sofa::gui::qt::data_widget_trait< int >:. [legend]. Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::int_data_widget_trait< int, INT_MIN, INT_MAX >; static Widget * create (QWidget *parent, const data_type &);  ; static void readFromData (Widget *w, const data_type &d);  ; static void writeToData (Widget *w, data_type &d);  ; static void setReadOnly (Widget *w, bool readOnly);  ; static void connectChanged (Widget *w, DataWidget *datawidget);  . sofaguiqtdata_widget_trait< int >; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait_3_01int_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait_3_01int_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::data_widget_trait< std::string > Member List . This is the complete list of members for sofa::gui::qt::data_widget_trait< std::string >, including all inherited members. connectChanged(Widget *w, DataWidget *datawidget)sofa::gui::qt::data_widget_trait< std::string >inlinestatic; create(QWidget *parent, const data_type &)sofa::gui::qt::data_widget_trait< std::string >inlinestatic; data_type typedefsofa::gui::qt::data_widget_trait< std::string >; readFromData(Widget *w, const data_type &d)sofa::gui::qt::data_widget_trait< std::string >inlinestatic; setReadOnly(Widget *w, bool readOnly)sofa::gui::qt::data_widget_trait< std::string >inlinestatic; Widget typedefsofa::gui::qt::data_widget_trait< std::string >; writeToData(Widget *w, data_type &d)sofa::gui::qt::data_widget_trait< std::string >inlinestatic. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait_3_01std_1_1string_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait_3_01std_1_1string_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::data_widget_trait< unsigned char > Member List . This is the complete list of members for sofa::gui::qt::data_widget_trait< unsigned char >, including all inherited members. connectChanged(Widget *w, DataWidget *datawidget)sofa::gui::qt::int_data_widget_trait< unsigned char, 0, 255 >inlinestatic; create(QWidget *parent, const data_type &)sofa::gui::qt::int_data_widget_trait< unsigned char, 0, 255 >inlinestatic; data_type typedefsofa::gui::qt::int_data_widget_trait< unsigned char, 0, 255 >; readFromData(Widget *w, const data_type &d)sofa::gui::qt::int_data_widget_trait< unsigned char, 0, 255 >inlinestatic; setReadOnly(Widget *w, bool readOnly)sofa::gui::qt::int_data_widget_trait< unsigned char, 0, 255 >inlinestatic; Widget typedefsofa::gui::qt::int_data_widget_trait< unsigned char, 0, 255 >; writeToData(Widget *w, data_type &d)sofa::gui::qt::int_data_widget_trait< unsigned char, 0, 255 >inlinestatic. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait_3_01unsigned_01char_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait_3_01unsigned_01char_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::qt::data_widget_trait< unsigned char > Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::data_widget_trait< unsigned char > Class Reference . #include <SimpleDataWidget.h>. Inheritance diagram for sofa::gui::qt::data_widget_trait< unsigned char >:. [legend]. Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::int_data_widget_trait< unsigned char, 0, 255 >; static Widget * create (QWidget *parent, const data_type &);  ; static void readFromData (Widget *w, const data_type &d);  ; static void writeToData (Widget *w, data_type &d);  ; static void setReadOnly (Widget *w, bool readOnly);  ; static void connectChanged (Widget *w, DataWidget *datawidget);  . sofaguiqtdata_widget_trait< unsigned char >; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait_3_01unsigned_01char_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait_3_01unsigned_01char_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::data_widget_trait< unsigned int > Member List . This is the complete list of members for sofa::gui::qt::data_widget_trait< unsigned int >, including all inherited members. connectChanged(Widget *w, DataWidget *datawidget)sofa::gui::qt::int_data_widget_trait< unsigned int, 0, INT_MAX >inlinestatic; create(QWidget *parent, const data_type &)sofa::gui::qt::int_data_widget_trait< unsigned int, 0, INT_MAX >inlinestatic; data_type typedefsofa::gui::qt::int_data_widget_trait< unsigned int, 0, INT_MAX >; readFromData(Widget *w, const data_type &d)sofa::gui::qt::int_data_widget_trait< unsigned int, 0, INT_MAX >inlinestatic; setReadOnly(Widget *w, bool readOnly)sofa::gui::qt::int_data_widget_trait< unsigned int, 0, INT_MAX >inlinestatic; Widget typedefsofa::gui::qt::int_data_widget_trait< unsigned int, 0, INT_MAX >; writeToData(Widget *w, data_type &d)sofa::gui::qt::int_data_widget_trait< unsigned int, 0, INT_MAX >inlinestatic. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait_3_01unsigned_01int_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait_3_01unsigned_01int_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::qt::data_widget_trait< unsigned int > Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::data_widget_trait< unsigned int > Class Reference . #include <SimpleDataWidget.h>. Inheritance diagram for sofa::gui::qt::data_widget_trait< unsigned int >:. [legend]. Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::int_data_widget_trait< unsigned int, 0, INT_MAX >; static Widget * create (QWidget *parent, const data_type &);  ; static void readFromData (Widget *w, const data_type &d);  ; static void writeToData (Widget *w, data_type &d);  ; static void setReadOnly (Widget *w, bool readOnly);  ; static void connectChanged (Widget *w, DataWidget *datawidget);  . sofaguiqtdata_widget_trait< unsigned int >; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait_3_01unsigned_01int_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait_3_01unsigned_01int_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::data_widget_trait< Polynomial_LD< Real, N > > Member List . This is the complete list of members for sofa::gui::qt::data_widget_trait< Polynomial_LD< Real, N > >, including all inherited members. connectChanged(Widget *w, DataWidget *datawidget)sofa::gui::qt::data_widget_trait< Polynomial_LD< Real, N > >inlinestatic; create(QWidget *parent, const data_type &)sofa::gui::qt::data_widget_trait< Polynomial_LD< Real, N > >inlinestatic; data_type typedefsofa::gui::qt::data_widget_trait< Polynomial_LD< Real, N > >; readFromData(Widget *w, const data_type &d)sofa::gui::qt::data_widget_trait< Polynomial_LD< Real, N > >inlinestatic; setReadOnly(Widget *w, bool readOnly)sofa::gui::qt::data_widget_trait< Polynomial_LD< Real, N > >inlinestatic; Widget typedefsofa::gui::qt::data_widget_trait< Polynomial_LD< Real, N > >; writeToData(Widget *, data_type &)sofa::gui::qt::data_widget_trait< Polynomial_LD< Real, N > >inlinestatic. Generated on Mon Nov 11 2024 03:25:30 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait_3_01_polynomial___l_d_3_01_real_00_01_n_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait_3_01_polynomial___l_d_3_01_real_00_01_n_01_4_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::default_struct_data_trait_var< T, I > Member List . This is the complete list of members for sofa::gui::qt::default_struct_data_trait_var< T, I >, including all inherited members. data_type typedefsofa::gui::qt::default_struct_data_trait_var< T, I >; isCheckable()sofa::gui::qt::default_struct_data_trait_var< T, I >inlinestatic; isChecked(const data_type &)sofa::gui::qt::default_struct_data_trait_var< T, I >inlinestatic; name()sofa::gui::qt::default_struct_data_trait_var< T, I >inlinestatic; readOnly()sofa::gui::qt::default_struct_data_trait_var< T, I >inlinestatic; setChecked(bool, data_type &)sofa::gui::qt::default_struct_data_trait_var< T, I >inlinestatic; shortname()sofa::gui::qt::default_struct_data_trait_var< T, I >inlinestatic. Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1default__struct__data__trait__var-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1default__struct__data__trait__var-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::fixed_grid_data_widget_container< T, Container > Member List . This is the complete list of members for sofa::gui::qt::fixed_grid_data_widget_container< T, Container >, including all inherited members. C enum valuesofa::gui::qt::fixed_grid_data_widget_container< T, Container >; container_layoutsofa::gui::qt::fixed_grid_data_widget_container< T, Container >; createLayout(QWidget *parent)sofa::gui::qt::fixed_grid_data_widget_container< T, Container >inline; createLayout(QLayout *layout)sofa::gui::qt::fixed_grid_data_widget_container< T, Container >inline; createWidgets(DataWidget *parent, const data_type &d, bool readOnly)sofa::gui::qt::fixed_grid_data_widget_container< T, Container >inline; data_type typedefsofa::gui::qt::fixed_grid_data_widget_container< T, Container >; fixed_grid_data_widget_container()sofa::gui::qt::fixed_grid_data_widget_container< T, Container >inline; insertWidgets()sofa::gui::qt::fixed_grid_data_widget_container< T, Container >inline; L enum valuesofa::gui::qt::fixed_grid_data_widget_container< T, Container >; Layout typedefsofa::gui::qt::fixed_grid_data_widget_container< T, Container >; readFromData(const data_type &d)sofa::gui::qt::fixed_grid_data_widget_container< T, Container >inline; rhelper typedefsofa::gui::qt::fixed_grid_data_widget_container< T, Container >; row_type typedefsofa::gui::qt::fixed_grid_data_widget_container< T, Container >; setReadOnly(bool readOnly)sofa::gui::qt::fixed_grid_data_widget_container< T, Container >inline; value_type typedefsofa::gui::qt::fixed_grid_data_widget_container< T, Container >; vhelper typedefsofa::gui::qt::fixed_grid_data_widget_container< T, Container >; wsofa::gui::qt::fixed_grid_data_widget_container< T, Container >; writeToData(data_type &d)sofa::gui::qt::fixed_grid_data_widget_container< T, Container >inline. Generated on Mon Nov 11 2024 03:23:44 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1fixed__grid__data__widget__container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1fixed__grid__data__widget__container-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::fixed_vector_data_widget_container< T, Container > Member List . This is the complete list of members for sofa::gui::qt::fixed_vector_data_widget_container< T, Container >, including all inherited members. container_layoutsofa::gui::qt::fixed_vector_data_widget_container< T, Container >; createLayout(DataWidget *parent)sofa::gui::qt::fixed_vector_data_widget_container< T, Container >inline; createLayout(QLayout *layout)sofa::gui::qt::fixed_vector_data_widget_container< T, Container >inline; createWidgets(DataWidget *parent, const data_type &d, bool readOnly)sofa::gui::qt::fixed_vector_data_widget_container< T, Container >inline; data_type typedefsofa::gui::qt::fixed_vector_data_widget_container< T, Container >; fixed_vector_data_widget_container()sofa::gui::qt::fixed_vector_data_widget_container< T, Container >inline; insertWidgets()sofa::gui::qt::fixed_vector_data_widget_container< T, Container >inline; Layout typedefsofa::gui::qt::fixed_vector_data_widget_container< T, Container >; N enum valuesofa::gui::qt::fixed_vector_data_widget_container< T, Container >; readFromData(const data_type &d)sofa::gui::qt::fixed_vector_data_widget_container< T, Container >inline; setReadOnly(bool readOnly)sofa::gui::qt::fixed_vector_data_widget_container< T, Container >inline; value_type typedefsofa::gui::qt::fixed_vector_data_widget_container< T, Container >; vhelper typedefsofa::gui::qt::fixed_vector_data_widget_container< T, Container >; wsofa::gui::qt::fixed_vector_data_widget_container< T, Container >; writeToData(data_type &d)sofa::gui::qt::fixed_vector_data_widget_container< T, Container >inline. Generated on Mon Nov 11 2024 03:23:44 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1fixed__vector__data__widget__container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1fixed__vector__data__widget__container-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::flat_data_trait< T, TYPE_SINGLE > Member List . This is the complete list of members for sofa::gui::qt::flat_data_trait< T, TYPE_SINGLE >, including all inherited members. data_type typedefsofa::gui::qt::flat_data_trait< T, TYPE_SINGLE >; data_type typedefsofa::gui::qt::flat_data_trait< T, TYPE_SINGLE >; get(const data_type &d, int=0)sofa::gui::qt::flat_data_trait< T, TYPE_SINGLE >inlinestatic; get(const data_type &d, int=0)sofa::gui::qt::flat_data_trait< T, TYPE_SINGLE >inlinestatic; header(const data_type &, int=0)sofa::gui::qt::flat_data_trait< T, TYPE_SINGLE >inlinestatic; header(const data_type &, int=0)sofa::gui::qt::flat_data_trait< T, TYPE_SINGLE >inlinestatic; is_single enum valuesofa::gui::qt::flat_data_trait< T, TYPE_SINGLE >; is_struct enum valuesofa::gui::qt::flat_data_trait< T, TYPE_SINGLE >; is_vector enum valuesofa::gui::qt::flat_data_trait< T, TYPE_SINGLE >; set(const value_type &v, data_type &d, int=0)sofa::gui::qt::flat_data_trait< T, TYPE_SINGLE >inlinestatic; set(const value_type &v, data_type &d, int=0)sofa::gui::qt::flat_data_trait< T, TYPE_SINGLE >inlinestatic; setS(const std::string &v, data_type &d, int=0)sofa::gui::qt::flat_data_trait< T, TYPE_SINGLE >inlinestatic; setS(const std::string &v, data_type &d, int=0)sofa::gui::qt::flat_data_trait< T, TYPE_SINGLE >inlinestatic; size()sofa::gui::qt::flat_data_trait< T, TYPE_SINGLE >inlinestatic; size(const data_type &)sofa::gui::qt::flat_data_trait< T, TYPE_SINGLE >inlinestatic; size()sofa::gui::qt::flat_data_trait< T, TYPE_SINGLE >inlinestatic; size(const data_type &)sofa::gui::qt::flat_data_trait< T, TYPE_SINGLE >inlinestatic; value_type typedefsofa::gui::qt::flat_data_trait< T, TYPE_SINGLE >; value_type typedefsofa::gui::qt::flat_data_trait< T, TYPE_SINGLE >. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1flat__data__trait_3_01_t_00_01_t_y_p_e___s_i_n_g_l_e_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1flat__data__trait_3_01_t_00_01_t_y_p_e___s_i_n_g_l_e_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::flat_data_trait< T, TYPE_STRUCT > Member List . This is the complete list of members for sofa::gui::qt::flat_data_trait< T, TYPE_STRUCT >, including all inherited members. data_type typedefsofa::gui::qt::flat_struct_data_trait< T, N >; data_type typedefsofa::gui::qt::flat_struct_data_trait< T, N >; get(const data_type &d, int i=0)sofa::gui::qt::flat_struct_data_trait< T, N >inlinestatic; get(const data_type &d, int i=0)sofa::gui::qt::flat_struct_data_trait< T, N >inlinestatic; header(const data_type &d, int i=0)sofa::gui::qt::flat_struct_data_trait< T, N >inlinestatic; header(const data_type &d, int i=0)sofa::gui::qt::flat_struct_data_trait< T, N >inlinestatic; iotype typedefsofa::gui::qt::flat_struct_data_trait< T, N >; iotype typedefsofa::gui::qt::flat_struct_data_trait< T, N >; is_default enum valuesofa::gui::qt::flat_struct_data_trait< T, N >; is_single enum valuesofa::gui::qt::flat_struct_data_trait< T, N >; is_struct enum valuesofa::gui::qt::flat_struct_data_trait< T, N >; is_vector enum valuesofa::gui::qt::flat_struct_data_trait< T, N >; prev typedefsofa::gui::qt::flat_struct_data_trait< T, N >; prev typedefsofa::gui::qt::flat_struct_data_trait< T, N >; set(const value_type &v, data_type &d, int i=0)sofa::gui::qt::flat_struct_data_trait< T, N >inlinestatic; set(const value_type &v, data_type &d, int i=0)sofa::gui::qt::flat_struct_data_trait< T, N >inlinestatic; setS(const std::string &v, data_type &d, int i=0)sofa::gui::qt::flat_struct_data_trait< T, N >inlinestatic; setS(const std::string &v, data_type &d, int i=0)sofa::gui::qt::flat_struct_data_trait< T, N >inlinestatic; shelper typedefsofa::gui::qt::flat_struct_data_trait< T, N >; shelper typedefsofa::gui::qt::flat_struct_data_trait< T, N >; size()sofa::gui::qt::flat_struct_data_trait< T, N >inlinestatic; size(const data_type &)sofa::gui::qt::flat_struct_data_trait< T, N >inlinestatic; size()so",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1flat__data__trait_3_01_t_00_01_t_y_p_e___s_t_r_u_c_t_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1flat__data__trait_3_01_t_00_01_t_y_p_e___s_t_r_u_c_t_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::qt::flat_data_trait< T, TYPE_STRUCT > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::flat_data_trait< T, TYPE_STRUCT > Class Template Reference . #include <QTableDataContainer.h>. Inheritance diagram for sofa::gui::qt::flat_data_trait< T, TYPE_STRUCT >:. [legend]. Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::flat_struct_data_trait< T, N >; static int size ();  ; static int size (const data_type &);  ; static const char * header (const data_type &d, int i=0);  ; static value_type * get (const data_type &d, int i=0);  ; static void setS (const std::string &v, data_type &d, int i=0);  ; static void set (const value_type &v, data_type &d, int i=0);  ; static int size ();  ; static int size (const data_type &);  ; static const char * header (const data_type &d, int i=0);  ; static value_type * get (const data_type &d, int i=0);  ; static void setS (const std::string &v, data_type &d, int i=0);  ; static void set (const value_type &v, data_type &d, int i=0);  . sofaguiqtflat_data_trait< T, TYPE_STRUCT >; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1flat__data__trait_3_01_t_00_01_t_y_p_e___s_t_r_u_c_t_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1flat__data__trait_3_01_t_00_01_t_y_p_e___s_t_r_u_c_t_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::flat_data_trait< T, TYPE_VECTOR > Member List . This is the complete list of members for sofa::gui::qt::flat_data_trait< T, TYPE_VECTOR >, including all inherited members. data_type typedefsofa::gui::qt::flat_vector_data_trait< T >; data_type typedefsofa::gui::qt::flat_vector_data_trait< T >; get(const data_type &d, int i=0)sofa::gui::qt::flat_vector_data_trait< T >inlinestatic; get(const data_type &d, int i=0)sofa::gui::qt::flat_vector_data_trait< T >inlinestatic; header(const data_type &d, int i=0)sofa::gui::qt::flat_vector_data_trait< T >inlinestatic; header(const data_type &d, int i=0)sofa::gui::qt::flat_vector_data_trait< T >inlinestatic; is_default enum valuesofa::gui::qt::flat_vector_data_trait< T >; is_single enum valuesofa::gui::qt::flat_vector_data_trait< T >; is_struct enum valuesofa::gui::qt::flat_vector_data_trait< T >; is_vector enum valuesofa::gui::qt::flat_vector_data_trait< T >; set(const value_type &v, data_type &d, int i=0)sofa::gui::qt::flat_vector_data_trait< T >inlinestatic; set(const value_type &v, data_type &d, int i=0)sofa::gui::qt::flat_vector_data_trait< T >inlinestatic; setS(const std::string &v, data_type &d, int i=0)sofa::gui::qt::flat_vector_data_trait< T >inlinestatic; setS(const std::string &v, data_type &d, int i=0)sofa::gui::qt::flat_vector_data_trait< T >inlinestatic; size()sofa::gui::qt::flat_vector_data_trait< T >inlinestatic; size(const data_type &)sofa::gui::qt::flat_vector_data_trait< T >inlinestatic; size()sofa::gui::qt::flat_vector_data_trait< T >inlinestatic; size(const data_type &)sofa::gui::qt::flat_vector_data_trait< T >inlinestatic; value_type typedefsofa::gui::qt::flat_vector_data_trait< T >; value_type typedefsofa::gui::qt::flat_vector_data_trait< T >; vhelper typedefsofa::gui::qt::flat_vector_data_trait< T >; vhelper typedefsofa::gui::qt::flat_vector_data_trait< T >; vtrait typedefsofa::gui::qt::flat_vec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1flat__data__trait_3_01_t_00_01_t_y_p_e___v_e_c_t_o_r_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1flat__data__trait_3_01_t_00_01_t_y_p_e___v_e_c_t_o_r_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::qt::flat_data_trait< T, TYPE_VECTOR > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::flat_data_trait< T, TYPE_VECTOR > Class Template Reference . #include <QTableDataContainer.h>. Inheritance diagram for sofa::gui::qt::flat_data_trait< T, TYPE_VECTOR >:. [legend]. Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::flat_vector_data_trait< T >; static int size ();  ; static int size (const data_type &);  ; static const char * header (const data_type &d, int i=0);  ; static const value_type * get (const data_type &d, int i=0);  ; static void set (const value_type &v, data_type &d, int i=0);  ; static void setS (const std::string &v, data_type &d, int i=0);  ; static int size ();  ; static int size (const data_type &);  ; static const char * header (const data_type &d, int i=0);  ; static const value_type * get (const data_type &d, int i=0);  ; static void set (const value_type &v, data_type &d, int i=0);  ; static void setS (const std::string &v, data_type &d, int i=0);  . sofaguiqtflat_data_trait< T, TYPE_VECTOR >; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1flat__data__trait_3_01_t_00_01_t_y_p_e___v_e_c_t_o_r_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1flat__data__trait_3_01_t_00_01_t_y_p_e___v_e_c_t_o_r_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::flat_struct_data_trait< T, N > Member List . This is the complete list of members for sofa::gui::qt::flat_struct_data_trait< T, N >, including all inherited members. data_type typedefsofa::gui::qt::flat_struct_data_trait< T, N >; data_type typedefsofa::gui::qt::flat_struct_data_trait< T, N >; get(const data_type &d, int i=0)sofa::gui::qt::flat_struct_data_trait< T, N >inlinestatic; get(const data_type &d, int i=0)sofa::gui::qt::flat_struct_data_trait< T, N >inlinestatic; header(const data_type &d, int i=0)sofa::gui::qt::flat_struct_data_trait< T, N >inlinestatic; header(const data_type &d, int i=0)sofa::gui::qt::flat_struct_data_trait< T, N >inlinestatic; iotype typedefsofa::gui::qt::flat_struct_data_trait< T, N >; iotype typedefsofa::gui::qt::flat_struct_data_trait< T, N >; is_default enum valuesofa::gui::qt::flat_struct_data_trait< T, N >; is_single enum valuesofa::gui::qt::flat_struct_data_trait< T, N >; is_struct enum valuesofa::gui::qt::flat_struct_data_trait< T, N >; is_vector enum valuesofa::gui::qt::flat_struct_data_trait< T, N >; prev typedefsofa::gui::qt::flat_struct_data_trait< T, N >; prev typedefsofa::gui::qt::flat_struct_data_trait< T, N >; set(const value_type &v, data_type &d, int i=0)sofa::gui::qt::flat_struct_data_trait< T, N >inlinestatic; set(const value_type &v, data_type &d, int i=0)sofa::gui::qt::flat_struct_data_trait< T, N >inlinestatic; setS(const std::string &v, data_type &d, int i=0)sofa::gui::qt::flat_struct_data_trait< T, N >inlinestatic; setS(const std::string &v, data_type &d, int i=0)sofa::gui::qt::flat_struct_data_trait< T, N >inlinestatic; shelper typedefsofa::gui::qt::flat_struct_data_trait< T, N >; shelper typedefsofa::gui::qt::flat_struct_data_trait< T, N >; size()sofa::gui::qt::flat_struct_data_trait< T, N >inlinestatic; size(const data_type &)sofa::gui::qt::flat_struct_data_trait< T, N >inlinestatic; size()sofa::gu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1flat__struct__data__trait-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1flat__struct__data__trait-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::flat_struct_data_trait< T, 0 > Member List . This is the complete list of members for sofa::gui::qt::flat_struct_data_trait< T, 0 >, including all inherited members. data_type typedefsofa::gui::qt::flat_struct_data_trait< T, 0 >; data_type typedefsofa::gui::qt::flat_struct_data_trait< T, 0 >; get(const data_type &, int=0)sofa::gui::qt::flat_struct_data_trait< T, 0 >inlinestatic; get(const data_type &, int=0)sofa::gui::qt::flat_struct_data_trait< T, 0 >inlinestatic; header(const data_type &, int=0)sofa::gui::qt::flat_struct_data_trait< T, 0 >inlinestatic; header(const data_type &, int=0)sofa::gui::qt::flat_struct_data_trait< T, 0 >inlinestatic; is_default enum valuesofa::gui::qt::flat_struct_data_trait< T, 0 >; is_single enum valuesofa::gui::qt::flat_struct_data_trait< T, 0 >; is_struct enum valuesofa::gui::qt::flat_struct_data_trait< T, 0 >; is_vector enum valuesofa::gui::qt::flat_struct_data_trait< T, 0 >; set(const value_type &, data_type &, int=0)sofa::gui::qt::flat_struct_data_trait< T, 0 >inlinestatic; set(const value_type &, data_type &, int=0)sofa::gui::qt::flat_struct_data_trait< T, 0 >inlinestatic; setS(const std::string &, data_type &, int=0)sofa::gui::qt::flat_struct_data_trait< T, 0 >inlinestatic; setS(const std::string &, data_type &, int=0)sofa::gui::qt::flat_struct_data_trait< T, 0 >inlinestatic; shelper typedefsofa::gui::qt::flat_struct_data_trait< T, 0 >; shelper typedefsofa::gui::qt::flat_struct_data_trait< T, 0 >; size()sofa::gui::qt::flat_struct_data_trait< T, 0 >inlinestatic; size(const data_type &)sofa::gui::qt::flat_struct_data_trait< T, 0 >inlinestatic; size()sofa::gui::qt::flat_struct_data_trait< T, 0 >inlinestatic; size(const data_type &)sofa::gui::qt::flat_struct_data_trait< T, 0 >inlinestatic; value_type typedefsofa::gui::qt::flat_struct_data_trait< T, 0 >; value_type typedefsofa::gui::qt::flat_struct_data_trait< T, 0 >. Gener",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1flat__struct__data__trait_3_01_t_00_010_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1flat__struct__data__trait_3_01_t_00_010_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::flat_vector_data_trait< T > Member List . This is the complete list of members for sofa::gui::qt::flat_vector_data_trait< T >, including all inherited members. data_type typedefsofa::gui::qt::flat_vector_data_trait< T >; data_type typedefsofa::gui::qt::flat_vector_data_trait< T >; get(const data_type &d, int i=0)sofa::gui::qt::flat_vector_data_trait< T >inlinestatic; get(const data_type &d, int i=0)sofa::gui::qt::flat_vector_data_trait< T >inlinestatic; header(const data_type &d, int i=0)sofa::gui::qt::flat_vector_data_trait< T >inlinestatic; header(const data_type &d, int i=0)sofa::gui::qt::flat_vector_data_trait< T >inlinestatic; is_default enum valuesofa::gui::qt::flat_vector_data_trait< T >; is_single enum valuesofa::gui::qt::flat_vector_data_trait< T >; is_struct enum valuesofa::gui::qt::flat_vector_data_trait< T >; is_vector enum valuesofa::gui::qt::flat_vector_data_trait< T >; set(const value_type &v, data_type &d, int i=0)sofa::gui::qt::flat_vector_data_trait< T >inlinestatic; set(const value_type &v, data_type &d, int i=0)sofa::gui::qt::flat_vector_data_trait< T >inlinestatic; setS(const std::string &v, data_type &d, int i=0)sofa::gui::qt::flat_vector_data_trait< T >inlinestatic; setS(const std::string &v, data_type &d, int i=0)sofa::gui::qt::flat_vector_data_trait< T >inlinestatic; size()sofa::gui::qt::flat_vector_data_trait< T >inlinestatic; size(const data_type &)sofa::gui::qt::flat_vector_data_trait< T >inlinestatic; size()sofa::gui::qt::flat_vector_data_trait< T >inlinestatic; size(const data_type &)sofa::gui::qt::flat_vector_data_trait< T >inlinestatic; value_type typedefsofa::gui::qt::flat_vector_data_trait< T >; value_type typedefsofa::gui::qt::flat_vector_data_trait< T >; vhelper typedefsofa::gui::qt::flat_vector_data_trait< T >; vhelper typedefsofa::gui::qt::flat_vector_data_trait< T >; vtrait typedefsofa::gui::qt::flat_vector_data_tra",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1flat__vector__data__trait-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1flat__vector__data__trait-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::graph_data_widget_container< T > Member List . This is the complete list of members for sofa::gui::qt::graph_data_widget_container< T >, including all inherited members. container_layoutsofa::gui::qt::graph_data_widget_container< T >; createLayout(DataWidget *parent)sofa::gui::qt::graph_data_widget_container< T >inline; createLayout(QLayout *layout)sofa::gui::qt::graph_data_widget_container< T >inline; createWidgets(DataWidget *parent, const data_type &d, bool)sofa::gui::qt::graph_data_widget_container< T >inline; data_type typedefsofa::gui::qt::graph_data_widget_container< T >; graph_data_widget_container()sofa::gui::qt::graph_data_widget_container< T >inline; insertWidgets()sofa::gui::qt::graph_data_widget_container< T >inline; Layout typedefsofa::gui::qt::graph_data_widget_container< T >; optionssofa::gui::qt::graph_data_widget_container< T >; readFromData(const data_type &d0)sofa::gui::qt::graph_data_widget_container< T >inline; setReadOnly(bool)sofa::gui::qt::graph_data_widget_container< T >inline; wsofa::gui::qt::graph_data_widget_container< T >; Widget typedefsofa::gui::qt::graph_data_widget_container< T >; writeToData(data_type &)sofa::gui::qt::graph_data_widget_container< T >inline. Generated on Mon Nov 11 2024 03:23:42 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1graph__data__widget__container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1graph__data__widget__container-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::int_data_widget_trait< T, vmin, vmax > Member List . This is the complete list of members for sofa::gui::qt::int_data_widget_trait< T, vmin, vmax >, including all inherited members. connectChanged(Widget *w, DataWidget *datawidget)sofa::gui::qt::int_data_widget_trait< T, vmin, vmax >inlinestatic; create(QWidget *parent, const data_type &)sofa::gui::qt::int_data_widget_trait< T, vmin, vmax >inlinestatic; data_type typedefsofa::gui::qt::int_data_widget_trait< T, vmin, vmax >; readFromData(Widget *w, const data_type &d)sofa::gui::qt::int_data_widget_trait< T, vmin, vmax >inlinestatic; setReadOnly(Widget *w, bool readOnly)sofa::gui::qt::int_data_widget_trait< T, vmin, vmax >inlinestatic; Widget typedefsofa::gui::qt::int_data_widget_trait< T, vmin, vmax >; writeToData(Widget *w, data_type &d)sofa::gui::qt::int_data_widget_trait< T, vmin, vmax >inlinestatic. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1int__data__widget__trait-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1int__data__widget__trait-members.html
Deployability,update,updateDataValue,"ignal; dataValueChanged(QString dataValueString)sofa::gui::qt::DataWidgetsignal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< Material >inline; getData() constsofa::gui::qt::TDataWidget< Material >inline; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MaterialDataWidget(QWidget *parent, const char *name, Data< Material > *data)sofa::gui::qt::materialdatawidget_h::MaterialDataWidgetinline; MyData typedefsofa::gui::qt::DataWidget; MyTData typedefsofa::gui::qt::TDataWidget< Material >; numColumnWidget()sofa::gui::qt::materialdatawidget_h::MaterialDataWidgetinlinevirtual; readFromData()sofa::gui::qt::materialdatawidget_h::MaterialDataWidgetprotectedvirtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< Material >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< Material >; sofa::gui::qt::DataWidget::setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)sofa::gui::qt::materialdatawidget_h::MaterialDataWidgetvirtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setWidgetDirty(bool b=true)sofa::gui::qt::DataWidgetslot; sizeWidget()sofa::gui::qt::DataWidgetinlinevirtual; Tdatasofa::gui::qt::TDataWidget< Material >protected; TDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::TDataWidget< Material >inline; updateDataValue()sofa::gui::qt::DataWidgetslot; updateVisibility()sofa::gui::qt::DataWidget; updateWidgetValue()sofa::gui::qt::DataWidgetslot; WidgetDirty(bool)sofa::gui::qt::DataWidgetsignal; writeToData()sofa::gui::qt::materialdatawidget_h::MaterialDataWidgetprotectedvirtual; ~DataWidget() overridesofa::gui::qt::DataWidget.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1materialdatawidget__h_1_1_material_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1materialdatawidget__h_1_1_material_data_widget-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::materialdatawidget_h::MaterialDataWidget Member List . This is the complete list of members for sofa::gui::qt::materialdatawidget_h::MaterialDataWidget, including all inherited members. _ambientCheckBoxsofa::gui::qt::materialdatawidget_h::MaterialDataWidgetprotected; _ambientPickersofa::gui::qt::materialdatawidget_h::MaterialDataWidgetprotected; _diffuseCheckBoxsofa::gui::qt::materialdatawidget_h::MaterialDataWidgetprotected; _diffusePickersofa::gui::qt::materialdatawidget_h::MaterialDataWidgetprotected; _emissiveCheckBoxsofa::gui::qt::materialdatawidget_h::MaterialDataWidgetprotected; _emissivePickersofa::gui::qt::materialdatawidget_h::MaterialDataWidgetprotected; _nameEditsofa::gui::qt::materialdatawidget_h::MaterialDataWidgetprotected; _shininessCheckBoxsofa::gui::qt::materialdatawidget_h::MaterialDataWidgetprotected; _shininessEditsofa::gui::qt::materialdatawidget_h::MaterialDataWidgetprotected; _specularCheckBoxsofa::gui::qt::materialdatawidget_h::MaterialDataWidgetprotected; _specularPickersofa::gui::qt::materialdatawidget_h::MaterialDataWidgetprotected; baseDatasofa::gui::qt::DataWidgetprotected; countersofa::gui::qt::DataWidgetprotected; create(RealObject *, CreatorArgument &arg)sofa::gui::qt::TDataWidget< Material >inlinestatic; sofa::gui::qt::DataWidget::create(T *, const CreatorArgument &arg)sofa::gui::qt::DataWidgetinlinestatic; CreateDataWidget(const DataWidget::CreatorArgument &dwarg)sofa::gui::qt::DataWidgetstatic; createWidgets()sofa::gui::qt::materialdatawidget_h::MaterialDataWidgetvirtual; DataOwnerDirty(bool)sofa::gui::qt::DataWidgetsignal; dataValueChanged(QString dataValueString)sofa::gui::qt::DataWidgetsignal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1materialdatawidget__h_1_1_material_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1materialdatawidget__h_1_1_material_data_widget-members.html
Deployability,update,updateVisibility,"l bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< Material >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< Material > * getData ();  ; const sofa::core::objectmodel::Data< Material > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  . Protected Member Functions; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void writeToData ();  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< Material >; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueC",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1materialdatawidget__h_1_1_material_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1materialdatawidget__h_1_1_material_data_widget.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::qt::materialdatawidget_h::MaterialDataWidget Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::qt::materialdatawidget_h::MaterialDataWidget Class Reference . #include <MaterialDataWidget.h>. Inheritance diagram for sofa::gui::qt::materialdatawidget_h::MaterialDataWidget:. [legend]. Protected Attributes; QLineEdit * _nameEdit;  ; QRGBAColorPicker * _ambientPicker;  ; QRGBAColorPicker * _emissivePicker;  ; QRGBAColorPicker * _specularPicker;  ; QRGBAColorPicker * _diffusePicker;  ; QLineEdit * _shininessEdit;  ; QCheckBox * _ambientCheckBox;  ; QCheckBox * _emissiveCheckBox;  ; QCheckBox * _specularCheckBox;  ; QCheckBox * _diffuseCheckBox;  ; QCheckBox * _shininessCheckBox;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< Material >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  MaterialDataWidget (QWidget *parent, const char *name, Data< Material > *data);  ; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< Material >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< Material > * getData ();  ; const sofa::core::objectmodel::Data< Material > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (M",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1materialdatawidget__h_1_1_material_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1materialdatawidget__h_1_1_material_data_widget.html
Security,access,accessor," inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  MaterialDataWidget (QWidget *parent, const char *name, Data< Material > *data);  ; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< Material >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< Material > * getData ();  ; const sofa::core::objectmodel::Data< Material > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  . Protected Member Functions; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void writeToData ();  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< Material >; static RealObjec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1materialdatawidget__h_1_1_material_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1materialdatawidget__h_1_1_material_data_widget.html
Deployability,update,updateDataValue,"idget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< VectorMaterial >inline; getData() constsofa::gui::qt::TDataWidget< VectorMaterial >inline; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::DataWidget; MyTData typedefsofa::gui::qt::TDataWidget< VectorMaterial >; numColumnWidget()sofa::gui::qt::materialdatawidget_h::VectorMaterialDataWidgetinlinevirtual; readFromData()sofa::gui::qt::materialdatawidget_h::VectorMaterialDataWidgetprotectedvirtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< VectorMaterial >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< VectorMaterial >; sofa::gui::qt::DataWidget::setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)sofa::gui::qt::materialdatawidget_h::VectorMaterialDataWidgetvirtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setWidgetDirty(bool b=true)sofa::gui::qt::DataWidgetslot; sizeWidget()sofa::gui::qt::DataWidgetinlinevirtual; Tdatasofa::gui::qt::TDataWidget< VectorMaterial >protected; TDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::TDataWidget< VectorMaterial >inline; updateDataValue()sofa::gui::qt::DataWidgetslot; updateVisibility()sofa::gui::qt::DataWidget; updateWidgetValue()sofa::gui::qt::DataWidgetslot; VectorMaterialDataWidget(QWidget *parent, const char *name, Data< type::vector< Material > > *data)sofa::gui::qt::materialdatawidget_h::VectorMaterialDataWidgetinline; WidgetDirty(bool)sofa::gui::qt::DataWidgetsignal; writeToData()sofa::gui::qt::materialdatawidget_h::VectorMaterialDataWidgetprotectedvirtual; ~DataWidget() overridesofa::gui::qt::DataWidget.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1materialdatawidget__h_1_1_vector_material_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1materialdatawidget__h_1_1_vector_material_data_widget-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::materialdatawidget_h::VectorMaterialDataWidget Member List . This is the complete list of members for sofa::gui::qt::materialdatawidget_h::VectorMaterialDataWidget, including all inherited members. _comboBoxsofa::gui::qt::materialdatawidget_h::VectorMaterialDataWidgetprotected; _currentMaterialsofa::gui::qt::materialdatawidget_h::VectorMaterialDataWidgetprotected; _currentMaterialPossofa::gui::qt::materialdatawidget_h::VectorMaterialDataWidgetprotected; _materialDataWidgetsofa::gui::qt::materialdatawidget_h::VectorMaterialDataWidgetprotected; _vectorEditedMaterialsofa::gui::qt::materialdatawidget_h::VectorMaterialDataWidgetprotected; baseDatasofa::gui::qt::DataWidgetprotected; changeMaterial(int)sofa::gui::qt::materialdatawidget_h::VectorMaterialDataWidgetprotectedslot; countersofa::gui::qt::DataWidgetprotected; create(RealObject *, CreatorArgument &arg)sofa::gui::qt::TDataWidget< VectorMaterial >inlinestatic; sofa::gui::qt::DataWidget::create(T *, const CreatorArgument &arg)sofa::gui::qt::DataWidgetinlinestatic; CreateDataWidget(const DataWidget::CreatorArgument &dwarg)sofa::gui::qt::DataWidgetstatic; createWidgets()sofa::gui::qt::materialdatawidget_h::VectorMaterialDataWidgetvirtual; DataOwnerDirty(bool)sofa::gui::qt::DataWidgetsignal; dataValueChanged(QString dataValueString)sofa::gui::qt::DataWidgetsignal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< VectorMaterial >inline; getData() constsofa::gui::qt::TDataWidget< VectorMaterial >inline; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataW",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1materialdatawidget__h_1_1_vector_material_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1materialdatawidget__h_1_1_vector_material_data_widget-members.html
Deployability,update,updateVisibility,"ts ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< VectorMaterial >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< VectorMaterial > * getData ();  ; const sofa::core::objectmodel::Data< VectorMaterial > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  . Protected Member Functions; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void writeToData ();  . Protected Slots; void changeMaterial (int);  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< VectorMaterial >; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (boo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1materialdatawidget__h_1_1_vector_material_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1materialdatawidget__h_1_1_vector_material_data_widget.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::qt::materialdatawidget_h::VectorMaterialDataWidget Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; Protected Slots |; List of all members . sofa::gui::qt::materialdatawidget_h::VectorMaterialDataWidget Class Reference . #include <MaterialDataWidget.h>. Inheritance diagram for sofa::gui::qt::materialdatawidget_h::VectorMaterialDataWidget:. [legend]. Protected Attributes; MaterialDataWidget * _materialDataWidget;  ; VectorMaterial _vectorEditedMaterial;  ; core::objectmodel::Data< Material > _currentMaterial;  ; QComboBox * _comboBox;  ; int _currentMaterialPos;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< VectorMaterial >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  VectorMaterialDataWidget (QWidget *parent, const char *name, Data< type::vector< Material > > *data);  ; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< VectorMaterial >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< VectorMaterial > * getData ();  ; const sofa::core::objectmodel::Data< VectorMaterial > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidge",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1materialdatawidget__h_1_1_vector_material_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1materialdatawidget__h_1_1_vector_material_data_widget.html
Security,access,accessor,"DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  VectorMaterialDataWidget (QWidget *parent, const char *name, Data< type::vector< Material > > *data);  ; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< VectorMaterial >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< VectorMaterial > * getData ();  ; const sofa::core::objectmodel::Data< VectorMaterial > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  . Protected Member Functions; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void writeToData ();  . Protected Slots; void changeMaterial (int);  . Additional Inherited Members;  Static Public Member Functions inherited from ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1materialdatawidget__h_1_1_vector_material_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1materialdatawidget__h_1_1_vector_material_data_widget.html
Deployability,update,updateRGBAColor,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPicker Member List . This is the complete list of members for sofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPicker, including all inherited members. _asofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPickerprotected; _bsofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPickerprotected; _colorButtonsofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPickerprotected; _gsofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPickerprotected; _rsofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPickerprotected; _rgbasofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPickerprotected; getColor() constsofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPicker; hasChanged()sofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPickersignal; QRGBAColorPicker(QWidget *parent)sofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPicker; raiseQColorDialog()sofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPickerprotectedslot; redrawColorButton()sofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPickerprotectedslot; setColor(const type::RGBAColor &color)sofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPicker; setColor(const Vec4f &color)sofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPicker; updateRGBAColor()sofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPickerprotectedslot. Generated on Mon Nov 11 2024 03:25:44 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1qrgbacolorpicker__h_1_1_q_r_g_b_a_color_picker-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1qrgbacolorpicker__h_1_1_q_r_g_b_a_color_picker-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPicker Member List . This is the complete list of members for sofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPicker, including all inherited members. _asofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPickerprotected; _bsofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPickerprotected; _colorButtonsofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPickerprotected; _gsofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPickerprotected; _rsofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPickerprotected; _rgbasofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPickerprotected; getColor() constsofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPicker; hasChanged()sofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPickersignal; QRGBAColorPicker(QWidget *parent)sofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPicker; raiseQColorDialog()sofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPickerprotectedslot; redrawColorButton()sofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPickerprotectedslot; setColor(const type::RGBAColor &color)sofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPicker; setColor(const Vec4f &color)sofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPicker; updateRGBAColor()sofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPickerprotectedslot. Generated on Mon Nov 11 2024 03:25:44 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1qrgbacolorpicker__h_1_1_q_r_g_b_a_color_picker-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1qrgbacolorpicker__h_1_1_q_r_g_b_a_color_picker-members.html
Deployability,update,updateRGBAColor,﻿. SOFA API: sofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPicker Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Signals |; Protected Slots |; List of all members . sofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPicker Class Reference . #include <QRGBAColorPicker.h>. Inheritance diagram for sofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPicker:. [legend]; Detailed Description; Implement a widget to select a color either using a color wheel or by three values. . Protected Attributes; QRgb _rgba;  ; QLineEdit * _r;  ; QLineEdit * _g;  ; QLineEdit * _b;  ; QLineEdit * _a;  ; QPushButton * _colorButton;  . Public Member Functions;  QRGBAColorPicker (QWidget *parent);  ; void setColor (const type::RGBAColor &color);  ; void setColor (const Vec4f &color);  ; type::RGBAColor getColor () const;  . Signals; void hasChanged ();  . Protected Slots; void updateRGBAColor ();  ; void redrawColorButton ();  ; void raiseQColorDialog ();  . Attribute details. ◆ _a. QLineEdit* sofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPicker::_a. protected . ◆ _b. QLineEdit* sofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPicker::_b. protected . ◆ _colorButton. QPushButton* sofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPicker::_colorButton. protected . ◆ _g. QLineEdit* sofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPicker::_g. protected . ◆ _r. QLineEdit* sofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPicker::_r. protected . ◆ _rgba. QRgb sofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPicker::_rgba. protected . Constructor details. ◆ QRGBAColorPicker(). sofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPicker::QRGBAColorPicker ; (; QWidget * ; parent). Function details. ◆ getColor(). type::RGBAColor sofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPicker::getColor ; (; ); const. ◆ hasChanged. void sofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPicker::hasChanged ; (; ). signal . ◆ raiseQColorDialog. void sofa::gui::qt::qrgbacolorp,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1qrgbacolorpicker__h_1_1_q_r_g_b_a_color_picker.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1qrgbacolorpicker__h_1_1_q_r_g_b_a_color_picker.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::real_data_widget_trait< T > Member List . This is the complete list of members for sofa::gui::qt::real_data_widget_trait< T >, including all inherited members. connectChanged(Widget *w, DataWidget *datawidget)sofa::gui::qt::real_data_widget_trait< T >inlinestatic; create(QWidget *parent, const data_type &)sofa::gui::qt::real_data_widget_trait< T >inlinestatic; data_type typedefsofa::gui::qt::real_data_widget_trait< T >; readFromData(Widget *w, const data_type &d)sofa::gui::qt::real_data_widget_trait< T >inlinestatic; setReadOnly(Widget *w, bool readOnly)sofa::gui::qt::real_data_widget_trait< T >inlinestatic; Widget typedefsofa::gui::qt::real_data_widget_trait< T >; writeToData(Widget *w, data_type &d)sofa::gui::qt::real_data_widget_trait< T >inlinestatic. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1real__data__widget__trait-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1real__data__widget__trait-members.html
Deployability,update,updateDataValue,"::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< RGBAColor >inline; getData() constsofa::gui::qt::TDataWidget< RGBAColor >inline; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_colorPickersofa::gui::qt::rgbacolordatawidget_h::RGBAColorDataWidgetprotected; m_isFilledsofa::gui::qt::DataWidgetprotected; m_nameEditsofa::gui::qt::rgbacolordatawidget_h::RGBAColorDataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::DataWidget; MyTData typedefsofa::gui::qt::TDataWidget< RGBAColor >; numColumnWidget()sofa::gui::qt::rgbacolordatawidget_h::RGBAColorDataWidgetinlinevirtual; readFromData()sofa::gui::qt::rgbacolordatawidget_h::RGBAColorDataWidgetprotectedvirtual; RGBAColorDataWidget(QWidget *parent, const char *name, Data< RGBAColor > *data)sofa::gui::qt::rgbacolordatawidget_h::RGBAColorDataWidgetinline; setData(MyTData *d)sofa::gui::qt::TDataWidget< RGBAColor >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< RGBAColor >; sofa::gui::qt::DataWidget::setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)sofa::gui::qt::rgbacolordatawidget_h::RGBAColorDataWidgetvirtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setWidgetDirty(bool b=true)sofa::gui::qt::DataWidgetslot; sizeWidget()sofa::gui::qt::DataWidgetinlinevirtual; Tdatasofa::gui::qt::TDataWidget< RGBAColor >protected; TDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::TDataWidget< RGBAColor >inline; updateDataValue()sofa::gui::qt::DataWidgetslot; updateVisibility()sofa::gui::qt::DataWidget; updateWidgetValue()sofa::gui::qt::DataWidgetslot; WidgetDirty(bool)sofa::gui::qt::DataWidgetsignal; writeToData()sofa::gui::qt::rgbacolordatawidget_h::RGBAColorDataWidgetprotectedvirtual; ~DataWidget() overridesofa::gui::qt::DataWidget.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1rgbacolordatawidget__h_1_1_r_g_b_a_color_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1rgbacolordatawidget__h_1_1_r_g_b_a_color_data_widget-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::rgbacolordatawidget_h::RGBAColorDataWidget Member List . This is the complete list of members for sofa::gui::qt::rgbacolordatawidget_h::RGBAColorDataWidget, including all inherited members. baseDatasofa::gui::qt::DataWidgetprotected; countersofa::gui::qt::DataWidgetprotected; create(RealObject *, CreatorArgument &arg)sofa::gui::qt::TDataWidget< RGBAColor >inlinestatic; sofa::gui::qt::DataWidget::create(T *, const CreatorArgument &arg)sofa::gui::qt::DataWidgetinlinestatic; CreateDataWidget(const DataWidget::CreatorArgument &dwarg)sofa::gui::qt::DataWidgetstatic; createWidgets()sofa::gui::qt::rgbacolordatawidget_h::RGBAColorDataWidgetvirtual; DataOwnerDirty(bool)sofa::gui::qt::DataWidgetsignal; dataValueChanged(QString dataValueString)sofa::gui::qt::DataWidgetsignal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< RGBAColor >inline; getData() constsofa::gui::qt::TDataWidget< RGBAColor >inline; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_colorPickersofa::gui::qt::rgbacolordatawidget_h::RGBAColorDataWidgetprotected; m_isFilledsofa::gui::qt::DataWidgetprotected; m_nameEditsofa::gui::qt::rgbacolordatawidget_h::RGBAColorDataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::DataWidget; MyTData typedefsofa::gui::qt::TDataWidget< RGBAColor >; numColumnWidget()sofa::gui::qt::rgbacolordatawidget_h::RGBAColorDataWidgetinlinevirtual; readFromData()sofa::gui::qt::rgbacolordatawidget_h::RGBAColorDataWidgetprotectedvirtual; RGBAColorDataWidget(QWidget *parent, const char *name, Data< RGBAColor > *data)sofa::gui::qt::rgbacolordatawidget_h:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1rgbacolordatawidget__h_1_1_r_g_b_a_color_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1rgbacolordatawidget__h_1_1_r_g_b_a_color_data_widget-members.html
Deployability,update,updateVisibility,"ool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< RGBAColor >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< RGBAColor > * getData ();  ; const sofa::core::objectmodel::Data< RGBAColor > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  . Protected Member Functions; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void writeToData ();  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< RGBAColor >; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValue",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1rgbacolordatawidget__h_1_1_r_g_b_a_color_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1rgbacolordatawidget__h_1_1_r_g_b_a_color_data_widget.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::qt::rgbacolordatawidget_h::RGBAColorDataWidget Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::qt::rgbacolordatawidget_h::RGBAColorDataWidget Class Reference . #include <RGBAColorDataWidget.h>. Inheritance diagram for sofa::gui::qt::rgbacolordatawidget_h::RGBAColorDataWidget:. [legend]. Protected Attributes; QLineEdit * m_nameEdit;  ; QRGBAColorPicker * m_colorPicker;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< RGBAColor >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  RGBAColorDataWidget (QWidget *parent, const char *name, Data< RGBAColor > *data);  ; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< RGBAColor >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< RGBAColor > * getData ();  ; const sofa::core::objectmodel::Data< RGBAColor > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1rgbacolordatawidget__h_1_1_r_g_b_a_color_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1rgbacolordatawidget__h_1_1_r_g_b_a_color_data_widget.html
Security,access,accessor,"erited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  RGBAColorDataWidget (QWidget *parent, const char *name, Data< RGBAColor > *data);  ; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< RGBAColor >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< RGBAColor > * getData ();  ; const sofa::core::objectmodel::Data< RGBAColor > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  . Protected Member Functions; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void writeToData ();  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< RGBAColor >; static RealOb",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1rgbacolordatawidget__h_1_1_r_g_b_a_color_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1rgbacolordatawidget__h_1_1_r_g_b_a_color_data_widget.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::struct_data_trait< T > Member List . This is the complete list of members for sofa::gui::qt::struct_data_trait< T >, including all inherited members. data_type typedefsofa::gui::qt::struct_data_trait< T >; NVAR enum valuesofa::gui::qt::struct_data_trait< T >; set(data_type &)sofa::gui::qt::struct_data_trait< T >inlinestatic. Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1struct__data__trait-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1struct__data__trait-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::struct_data_trait< sofa::defaulttype::RigidCoord< N, T > > Member List . This is the complete list of members for sofa::gui::qt::struct_data_trait< sofa::defaulttype::RigidCoord< N, T > >, including all inherited members. data_type typedefsofa::gui::qt::struct_data_trait< sofa::defaulttype::RigidCoord< N, T > >; NVAR enum valuesofa::gui::qt::struct_data_trait< sofa::defaulttype::RigidCoord< N, T > >; set(data_type &)sofa::gui::qt::struct_data_trait< sofa::defaulttype::RigidCoord< N, T > >inlinestatic. Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1struct__data__trait_3_01sofa_1_1defaulttype_1_1_rigid_coord_3_01_n_00_01_t_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1struct__data__trait_3_01sofa_1_1defaulttype_1_1_rigid_coord_3_01_n_00_01_t_01_4_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::struct_data_trait< sofa::defaulttype::RigidMass< N, T > > Member List . This is the complete list of members for sofa::gui::qt::struct_data_trait< sofa::defaulttype::RigidMass< N, T > >, including all inherited members. data_type typedefsofa::gui::qt::struct_data_trait< sofa::defaulttype::RigidMass< N, T > >; NVAR enum valuesofa::gui::qt::struct_data_trait< sofa::defaulttype::RigidMass< N, T > >; set(data_type &d)sofa::gui::qt::struct_data_trait< sofa::defaulttype::RigidMass< N, T > >inlinestatic. Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1struct__data__trait_3_01sofa_1_1defaulttype_1_1_rigid_mass_3_01_n_00_01_t_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1struct__data__trait_3_01sofa_1_1defaulttype_1_1_rigid_mass_3_01_n_00_01_t_01_4_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::struct_data_trait< sofa::type::Material > Member List . This is the complete list of members for sofa::gui::qt::struct_data_trait< sofa::type::Material >, including all inherited members. data_type typedefsofa::gui::qt::struct_data_trait< sofa::type::Material >; NVAR enum valuesofa::gui::qt::struct_data_trait< sofa::type::Material >; set(data_type &)sofa::gui::qt::struct_data_trait< sofa::type::Material >inlinestatic. Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1struct__data__trait_3_01sofa_1_1type_1_1_material_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1struct__data__trait_3_01sofa_1_1type_1_1_material_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::struct_data_trait< CLASS > Member List . This is the complete list of members for sofa::gui::qt::struct_data_trait< CLASS >, including all inherited members. data_type typedefsofa::gui::qt::struct_data_trait< CLASS >; data_type typedefsofa::gui::qt::struct_data_trait< CLASS >; data_type typedefsofa::gui::qt::struct_data_trait< CLASS >; data_type typedefsofa::gui::qt::struct_data_trait< CLASS >; NVAR enum valuesofa::gui::qt::struct_data_trait< CLASS >; set(data_type &)sofa::gui::qt::struct_data_trait< CLASS >inlinestatic; set(data_type &)sofa::gui::qt::struct_data_trait< CLASS >inlinestatic; set(data_type &)sofa::gui::qt::struct_data_trait< CLASS >inlinestatic; set(data_type &)sofa::gui::qt::struct_data_trait< CLASS >inlinestatic. Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1struct__data__trait_3_01_c_l_a_s_s_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1struct__data__trait_3_01_c_l_a_s_s_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::struct_data_trait_var< T, I > Member List . This is the complete list of members for sofa::gui::qt::struct_data_trait_var< T, I >, including all inherited members. data_type typedefsofa::gui::qt::struct_data_trait_var< T, I >; get(const data_type &d)sofa::gui::qt::struct_data_trait_var< T, I >inlinestatic; isCheckable()sofa::gui::qt::struct_data_trait_var< T, I >inlinestatic; isChecked(const data_type &)sofa::gui::qt::struct_data_trait_var< T, I >inlinestatic; name()sofa::gui::qt::struct_data_trait_var< T, I >inlinestatic; readOnly()sofa::gui::qt::struct_data_trait_var< T, I >inlinestatic; set(const value_type &v, data_type &d)sofa::gui::qt::struct_data_trait_var< T, I >inlinestatic; setChecked(bool, data_type &)sofa::gui::qt::struct_data_trait_var< T, I >inlinestatic; value_type typedefsofa::gui::qt::struct_data_trait_var< T, I >. Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1struct__data__trait__var-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1struct__data__trait__var-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::struct_data_widget_container< T, N > Member List . This is the complete list of members for sofa::gui::qt::struct_data_widget_container< T, N >, including all inherited members. checksofa::gui::qt::struct_data_widget_container< T, N >; Container typedefsofa::gui::qt::struct_data_widget_container< T, N >; container_layoutsofa::gui::qt::struct_data_widget_container< T, N >; createLayout(DataWidget *parent)sofa::gui::qt::struct_data_widget_container< T, N >inline; createLayout(QLayout *layout)sofa::gui::qt::struct_data_widget_container< T, N >inline; createWidgets(DataWidget *parent, const data_type &d, bool readOnly)sofa::gui::qt::struct_data_widget_container< T, N >inline; data_type typedefsofa::gui::qt::struct_data_widget_container< T, N >; insertWidgets()sofa::gui::qt::struct_data_widget_container< T, N >inline; labelsofa::gui::qt::struct_data_widget_container< T, N >; Layout typedefsofa::gui::qt::struct_data_widget_container< T, N >; master_layoutsofa::gui::qt::struct_data_widget_container< T, N >; MasterLayout typedefsofa::gui::qt::struct_data_widget_container< T, N >; psofa::gui::qt::struct_data_widget_container< T, N >; PrevContainer typedefsofa::gui::qt::struct_data_widget_container< T, N >; readConstantsFromData(const data_type &d)sofa::gui::qt::struct_data_widget_container< T, N >inline; readFromData(const data_type &d)sofa::gui::qt::struct_data_widget_container< T, N >inline; setMasterLayout(MasterLayout *layout)sofa::gui::qt::struct_data_widget_container< T, N >inline; setReadOnly(bool readOnly)sofa::gui::qt::struct_data_widget_container< T, N >inline; shelper typedefsofa::gui::qt::struct_data_widget_container< T, N >; struct_data_widget_container()sofa::gui::qt::struct_data_widget_container< T, N >inline; value_type typedefsofa::gui::qt::struct_data_widget_container< T, N >; vhelper typedefsofa::gui::qt::struct_data_widget_container< T, N >; w",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1struct__data__widget__container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1struct__data__widget__container-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::struct_data_widget_container< T, 0 > Member List . This is the complete list of members for sofa::gui::qt::struct_data_widget_container< T, 0 >, including all inherited members. container_layoutsofa::gui::qt::struct_data_widget_container< T, 0 >; createLayout(DataWidget *)sofa::gui::qt::struct_data_widget_container< T, 0 >inline; createLayout(QLayout *)sofa::gui::qt::struct_data_widget_container< T, 0 >inline; createWidgets(DataWidget *, const data_type &, bool)sofa::gui::qt::struct_data_widget_container< T, 0 >inline; data_type typedefsofa::gui::qt::struct_data_widget_container< T, 0 >; insertWidgets()sofa::gui::qt::struct_data_widget_container< T, 0 >inline; Layout typedefsofa::gui::qt::struct_data_widget_container< T, 0 >; master_layoutsofa::gui::qt::struct_data_widget_container< T, 0 >; MasterLayout typedefsofa::gui::qt::struct_data_widget_container< T, 0 >; readConstantsFromData(const data_type &)sofa::gui::qt::struct_data_widget_container< T, 0 >inline; readFromData(const data_type &)sofa::gui::qt::struct_data_widget_container< T, 0 >inline; setMasterLayout(MasterLayout *)sofa::gui::qt::struct_data_widget_container< T, 0 >inline; setReadOnly(bool)sofa::gui::qt::struct_data_widget_container< T, 0 >inline; shelper typedefsofa::gui::qt::struct_data_widget_container< T, 0 >; struct_data_widget_container()sofa::gui::qt::struct_data_widget_container< T, 0 >inline; writeToData(data_type &)sofa::gui::qt::struct_data_widget_container< T, 0 >inline. Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1struct__data__widget__container_3_01_t_00_010_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1struct__data__widget__container_3_01_t_00_010_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::table_data_widget_container< T, FLAGS > Member List . This is the complete list of members for sofa::gui::qt::table_data_widget_container< T, FLAGS >, including all inherited members. colssofa::gui::qt::table_data_widget_container< T, FLAGS >; container_layoutsofa::gui::qt::table_data_widget_container< T, FLAGS >; createLayout(DataWidget *parent)sofa::gui::qt::table_data_widget_container< T, FLAGS >inline; createLayout(QLayout *layout)sofa::gui::qt::table_data_widget_container< T, FLAGS >inline; createLayout(DataWidget *parent)sofa::gui::qt::table_data_widget_container< T, FLAGS >inline; createLayout(QLayout *layout)sofa::gui::qt::table_data_widget_container< T, FLAGS >inline; createWidgets(DataWidget *parent, const data_type &d, bool readOnly)sofa::gui::qt::table_data_widget_container< T, FLAGS >inline; createWidgets(DataWidget *parent, const data_type &d, bool readOnly)sofa::gui::qt::table_data_widget_container< T, FLAGS >inline; data_type typedefsofa::gui::qt::table_data_widget_container< T, FLAGS >; data_type typedefsofa::gui::qt::table_data_widget_container< T, FLAGS >; fillTable(const data_type &d)sofa::gui::qt::table_data_widget_container< T, FLAGS >inline; fillTable(const data_type &d)sofa::gui::qt::table_data_widget_container< T, FLAGS >inline; getCell(int r, int c, V &v)sofa::gui::qt::table_data_widget_container< T, FLAGS >inline; getCell(int r, int c, const std::string &s)sofa::gui::qt::table_data_widget_container< T, FLAGS >inline; getCell(int r, int c, V &v)sofa::gui::qt::table_data_widget_container< T, FLAGS >inline; getCell(int r, int c, const std::string &s)sofa::gui::qt::table_data_widget_container< T, FLAGS >inline; getCellText(int r, int c)sofa::gui::qt::table_data_widget_container< T, FLAGS >inline; getCellText(int r, int c)sofa::gui::qt::table_data_widget_container< T, FLAGS >inline; insertWidgets()sofa::gui::qt::table_data_widget_co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1table__data__widget__container-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1table__data__widget__container-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::vector_data_trait< T > Member List . This is the complete list of members for sofa::gui::qt::vector_data_trait< T >, including all inherited members. data_type typedefsofa::gui::qt::vector_data_trait< T >; get(const data_type &d, Size i=0)sofa::gui::qt::vector_data_trait< T >inlinestatic; header(const data_type &, Size=0)sofa::gui::qt::vector_data_trait< T >inlinestatic; header(const data_type &, Size i)sofa::gui::qt::vector_data_trait< T >inline; header(const data_type &, Size i)sofa::gui::qt::vector_data_trait< T >inline; header(const data_type &, Size i)sofa::gui::qt::vector_data_trait< T >inline; header(const data_type &, Size i)sofa::gui::qt::vector_data_trait< T >inline; NDIM enum valuesofa::gui::qt::vector_data_trait< T >; resize(Size, data_type &)sofa::gui::qt::vector_data_trait< T >inlinestatic; set(const value_type &v, data_type &d, Size i=0)sofa::gui::qt::vector_data_trait< T >inlinestatic; SIZE enum valuesofa::gui::qt::vector_data_trait< T >; size(const data_type &)sofa::gui::qt::vector_data_trait< T >inlinestatic; value_type typedefsofa::gui::qt::vector_data_trait< T >. Generated on Mon Nov 11 2024 03:23:44 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::vector_data_trait< sofa::component::topology::PointSubset > Member List . This is the complete list of members for sofa::gui::qt::vector_data_trait< sofa::component::topology::PointSubset >, including all inherited members. data_type typedefsofa::gui::qt::vector_data_trait< sofa::component::topology::PointSubset >; get(const data_type &d, int i=0)sofa::gui::qt::vector_data_trait< sofa::component::topology::PointSubset >inlinestatic; header(const data_type &, int=0)sofa::gui::qt::vector_data_trait< sofa::component::topology::PointSubset >inlinestatic; NDIM enum valuesofa::gui::qt::vector_data_trait< sofa::component::topology::PointSubset >; resize(int s, data_type &d)sofa::gui::qt::vector_data_trait< sofa::component::topology::PointSubset >inlinestatic; set(const value_type &v, data_type &d, int i=0)sofa::gui::qt::vector_data_trait< sofa::component::topology::PointSubset >inlinestatic; size(const data_type &d)sofa::gui::qt::vector_data_trait< sofa::component::topology::PointSubset >inlinestatic; value_type typedefsofa::gui::qt::vector_data_trait< sofa::component::topology::PointSubset >. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01sofa_1_1component_1_1topology_1_1_point_subset_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01sofa_1_1component_1_1topology_1_1_point_subset_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::vector_data_trait< sofa::core::topology::Topology::Edge > Member List . This is the complete list of members for sofa::gui::qt::vector_data_trait< sofa::core::topology::Topology::Edge >, including all inherited members. data_type typedefsofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 2 > >; get(const data_type &d, Size i=0)sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 2 > >inlinestatic; header(const data_type &, Size=0)sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 2 > >inlinestatic; header(const data_type &, Size i)sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 2 > >inline; header(const data_type &, Size i)sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 2 > >inline; header(const data_type &, Size i)sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 2 > >inline; header(const data_type &, Size i)sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 2 > >inline; NDIM enum valuesofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 2 > >; resize(Size, data_type &)sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 2 > >inlinestatic; set(const value_type &v, data_type &d, Size i=0)sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 2 > >inlinestatic; SIZE enum valuesofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 2 > >; size(const data_type &)sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topol",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_edge_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_edge_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::qt::vector_data_trait< sofa::core::topology::Topology::Edge > Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::vector_data_trait< sofa::core::topology::Topology::Edge > Class Reference . #include <SimpleDataWidget.h>; Topological edges/triangles/... support. ; More... Inheritance diagram for sofa::gui::qt::vector_data_trait< sofa::core::topology::Topology::Edge >:. [legend]; Detailed Description; Topological edges/triangles/... support. . Additional Inherited Members;  Public Member Functions inherited from sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 2 > >; const char * header (const data_type &, Size i);  ; const char * header (const data_type &, Size i);  ; const char * header (const data_type &, Size i);  ; const char * header (const data_type &, Size i);  ;  Static Public Member Functions inherited from sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 2 > >; static Size size (const data_type &);  Get the number of rows. More...;  ; static const char * header (const data_type &, Size=0);  Get the name of a row, or nullptr if the index should be used instead. More...;  ; static const value_type * get (const data_type &d, Size i=0);  Get a row. More...;  ; static void set (const value_type &v, data_type &d, Size i=0);  Set a row. More...;  ; static void resize (Size, data_type &);  Resize. More...;  . sofaguiqtvector_data_trait< sofa::core::topology::Topology::Edge >; Generated on Mon Nov 11 2024 03:23:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_edge_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_edge_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::vector_data_trait< sofa::core::topology::Topology::Hexahedron > Member List . This is the complete list of members for sofa::gui::qt::vector_data_trait< sofa::core::topology::Topology::Hexahedron >, including all inherited members. data_type typedefsofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 8 > >; get(const data_type &d, Size i=0)sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 8 > >inlinestatic; header(const data_type &, Size=0)sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 8 > >inlinestatic; header(const data_type &, Size i)sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 8 > >inline; header(const data_type &, Size i)sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 8 > >inline; header(const data_type &, Size i)sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 8 > >inline; header(const data_type &, Size i)sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 8 > >inline; NDIM enum valuesofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 8 > >; resize(Size, data_type &)sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 8 > >inlinestatic; set(const value_type &v, data_type &d, Size i=0)sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 8 > >inlinestatic; SIZE enum valuesofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 8 > >; size(const data_type &)sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_hexahedron_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_hexahedron_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::qt::vector_data_trait< sofa::core::topology::Topology::Hexahedron > Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::vector_data_trait< sofa::core::topology::Topology::Hexahedron > Class Reference . #include <SimpleDataWidget.h>. Inheritance diagram for sofa::gui::qt::vector_data_trait< sofa::core::topology::Topology::Hexahedron >:. [legend]. Additional Inherited Members;  Public Member Functions inherited from sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 8 > >; const char * header (const data_type &, Size i);  ; const char * header (const data_type &, Size i);  ; const char * header (const data_type &, Size i);  ; const char * header (const data_type &, Size i);  ;  Static Public Member Functions inherited from sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 8 > >; static Size size (const data_type &);  Get the number of rows. More...;  ; static const char * header (const data_type &, Size=0);  Get the name of a row, or nullptr if the index should be used instead. More...;  ; static const value_type * get (const data_type &d, Size i=0);  Get a row. More...;  ; static void set (const value_type &v, data_type &d, Size i=0);  Set a row. More...;  ; static void resize (Size, data_type &);  Resize. More...;  . sofaguiqtvector_data_trait< sofa::core::topology::Topology::Hexahedron >; Generated on Mon Nov 11 2024 03:24:32 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_hexahedron_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_hexahedron_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::vector_data_trait< sofa::core::topology::Topology::Quad > Member List . This is the complete list of members for sofa::gui::qt::vector_data_trait< sofa::core::topology::Topology::Quad >, including all inherited members. data_type typedefsofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 4 > >; get(const data_type &d, Size i=0)sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 4 > >inlinestatic; header(const data_type &, Size=0)sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 4 > >inlinestatic; header(const data_type &, Size i)sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 4 > >inline; header(const data_type &, Size i)sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 4 > >inline; header(const data_type &, Size i)sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 4 > >inline; header(const data_type &, Size i)sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 4 > >inline; NDIM enum valuesofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 4 > >; resize(Size, data_type &)sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 4 > >inlinestatic; set(const value_type &v, data_type &d, Size i=0)sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 4 > >inlinestatic; SIZE enum valuesofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 4 > >; size(const data_type &)sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topol",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_quad_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_quad_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::qt::vector_data_trait< sofa::core::topology::Topology::Quad > Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::vector_data_trait< sofa::core::topology::Topology::Quad > Class Reference . #include <SimpleDataWidget.h>. Inheritance diagram for sofa::gui::qt::vector_data_trait< sofa::core::topology::Topology::Quad >:. [legend]. Additional Inherited Members;  Public Member Functions inherited from sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 4 > >; const char * header (const data_type &, Size i);  ; const char * header (const data_type &, Size i);  ; const char * header (const data_type &, Size i);  ; const char * header (const data_type &, Size i);  ;  Static Public Member Functions inherited from sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 4 > >; static Size size (const data_type &);  Get the number of rows. More...;  ; static const char * header (const data_type &, Size=0);  Get the name of a row, or nullptr if the index should be used instead. More...;  ; static const value_type * get (const data_type &d, Size i=0);  Get a row. More...;  ; static void set (const value_type &v, data_type &d, Size i=0);  Set a row. More...;  ; static void resize (Size, data_type &);  Resize. More...;  . sofaguiqtvector_data_trait< sofa::core::topology::Topology::Quad >; Generated on Mon Nov 11 2024 03:24:13 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_quad_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_quad_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::vector_data_trait< sofa::core::topology::Topology::Tetrahedron > Member List . This is the complete list of members for sofa::gui::qt::vector_data_trait< sofa::core::topology::Topology::Tetrahedron >, including all inherited members. data_type typedefsofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 4 > >; get(const data_type &d, Size i=0)sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 4 > >inlinestatic; header(const data_type &, Size=0)sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 4 > >inlinestatic; header(const data_type &, Size i)sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 4 > >inline; header(const data_type &, Size i)sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 4 > >inline; header(const data_type &, Size i)sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 4 > >inline; header(const data_type &, Size i)sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 4 > >inline; NDIM enum valuesofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 4 > >; resize(Size, data_type &)sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 4 > >inlinestatic; set(const value_type &v, data_type &d, Size i=0)sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 4 > >inlinestatic; SIZE enum valuesofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 4 > >; size(const data_type &)sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sof",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_tetrahedron_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_tetrahedron_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::qt::vector_data_trait< sofa::core::topology::Topology::Tetrahedron > Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::vector_data_trait< sofa::core::topology::Topology::Tetrahedron > Class Reference . #include <SimpleDataWidget.h>. Inheritance diagram for sofa::gui::qt::vector_data_trait< sofa::core::topology::Topology::Tetrahedron >:. [legend]. Additional Inherited Members;  Public Member Functions inherited from sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 4 > >; const char * header (const data_type &, Size i);  ; const char * header (const data_type &, Size i);  ; const char * header (const data_type &, Size i);  ; const char * header (const data_type &, Size i);  ;  Static Public Member Functions inherited from sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 4 > >; static Size size (const data_type &);  Get the number of rows. More...;  ; static const char * header (const data_type &, Size=0);  Get the name of a row, or nullptr if the index should be used instead. More...;  ; static const value_type * get (const data_type &d, Size i=0);  Get a row. More...;  ; static void set (const value_type &v, data_type &d, Size i=0);  Set a row. More...;  ; static void resize (Size, data_type &);  Resize. More...;  . sofaguiqtvector_data_trait< sofa::core::topology::Topology::Tetrahedron >; Generated on Mon Nov 11 2024 03:24:23 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_tetrahedron_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_tetrahedron_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::vector_data_trait< sofa::core::topology::Topology::Triangle > Member List . This is the complete list of members for sofa::gui::qt::vector_data_trait< sofa::core::topology::Topology::Triangle >, including all inherited members. data_type typedefsofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 3 > >; get(const data_type &d, Size i=0)sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 3 > >inlinestatic; header(const data_type &, Size=0)sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 3 > >inlinestatic; header(const data_type &, Size i)sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 3 > >inline; header(const data_type &, Size i)sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 3 > >inline; header(const data_type &, Size i)sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 3 > >inline; header(const data_type &, Size i)sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 3 > >inline; NDIM enum valuesofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 3 > >; resize(Size, data_type &)sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 3 > >inlinestatic; set(const value_type &v, data_type &d, Size i=0)sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 3 > >inlinestatic; SIZE enum valuesofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 3 > >; size(const data_type &)sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::cor",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_triangle_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_triangle_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::qt::vector_data_trait< sofa::core::topology::Topology::Triangle > Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::vector_data_trait< sofa::core::topology::Topology::Triangle > Class Reference . #include <SimpleDataWidget.h>. Inheritance diagram for sofa::gui::qt::vector_data_trait< sofa::core::topology::Topology::Triangle >:. [legend]. Additional Inherited Members;  Public Member Functions inherited from sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 3 > >; const char * header (const data_type &, Size i);  ; const char * header (const data_type &, Size i);  ; const char * header (const data_type &, Size i);  ; const char * header (const data_type &, Size i);  ;  Static Public Member Functions inherited from sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 3 > >; static Size size (const data_type &);  Get the number of rows. More...;  ; static const char * header (const data_type &, Size=0);  Get the name of a row, or nullptr if the index should be used instead. More...;  ; static const value_type * get (const data_type &d, Size i=0);  Get a row. More...;  ; static void set (const value_type &v, data_type &d, Size i=0);  Set a row. More...;  ; static void resize (Size, data_type &);  Resize. More...;  . sofaguiqtvector_data_trait< sofa::core::topology::Topology::Triangle >; Generated on Mon Nov 11 2024 03:24:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_triangle_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_triangle_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< T, N > > Member List . This is the complete list of members for sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< T, N > >, including all inherited members. data_type typedefsofa::gui::qt::vector_data_trait< sofa::type::fixed_array< T, N > >; get(const data_type &d, sofa::Index i=0)sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< T, N > >inlinestatic; header(const data_type &, sofa::Size=0)sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< T, N > >inlinestatic; NDIM enum valuesofa::gui::qt::vector_data_trait< sofa::type::fixed_array< T, N > >; resize(sofa::Size, data_type &)sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< T, N > >inlinestatic; set(const value_type &v, data_type &d, sofa::Index i=0)sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< T, N > >inlinestatic; SIZE enum valuesofa::gui::qt::vector_data_trait< sofa::type::fixed_array< T, N > >; size(const data_type &)sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< T, N > >inlinestatic; value_type typedefsofa::gui::qt::vector_data_trait< sofa::type::fixed_array< T, N > >. Generated on Mon Nov 11 2024 03:23:44 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01sofa_1_1type_1_1fixed__array_3_01_t_00_01_n_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01sofa_1_1type_1_1fixed__array_3_01_t_00_01_n_01_4_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::vector_data_trait< sofa::type::vector< T > > Member List . This is the complete list of members for sofa::gui::qt::vector_data_trait< sofa::type::vector< T > >, including all inherited members. data_type typedefsofa::gui::qt::vector_data_trait< std::vector< T > >; data_type typedefsofa::gui::qt::vector_data_trait< std::vector< T > >; get(const data_type &d, int i=0)sofa::gui::qt::vector_data_trait< std::vector< T > >inlinestatic; get(const data_type &d, int i=0)sofa::gui::qt::vector_data_trait< std::vector< T > >inlinestatic; header(const data_type &, int=0)sofa::gui::qt::vector_data_trait< std::vector< T > >inlinestatic; header(const data_type &, int=0)sofa::gui::qt::vector_data_trait< std::vector< T > >inlinestatic; NDIM enum valuesofa::gui::qt::vector_data_trait< std::vector< T > >; resize(int s, data_type &d)sofa::gui::qt::vector_data_trait< std::vector< T > >inlinestatic; resize(int s, data_type &d)sofa::gui::qt::vector_data_trait< std::vector< T > >inlinestatic; set(const value_type &v, data_type &d, int i=0)sofa::gui::qt::vector_data_trait< std::vector< T > >inlinestatic; set(const value_type &v, data_type &d, int i=0)sofa::gui::qt::vector_data_trait< std::vector< T > >inlinestatic; size(const data_type &d)sofa::gui::qt::vector_data_trait< std::vector< T > >inlinestatic; size(const data_type &d)sofa::gui::qt::vector_data_trait< std::vector< T > >inlinestatic; value_type typedefsofa::gui::qt::vector_data_trait< std::vector< T > >; value_type typedefsofa::gui::qt::vector_data_trait< std::vector< T > >. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01sofa_1_1type_1_1vector_3_01_t_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01sofa_1_1type_1_1vector_3_01_t_01_4_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::qt::vector_data_trait< sofa::type::vector< T > > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::vector_data_trait< sofa::type::vector< T > > Class Template Reference . #include <QTableDataContainer.h>. Inheritance diagram for sofa::gui::qt::vector_data_trait< sofa::type::vector< T > >:. [legend]. Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::vector_data_trait< std::vector< T > >; static int size (const data_type &d);  ; static const char * header (const data_type &, int=0);  ; static const value_type * get (const data_type &d, int i=0);  ; static void set (const value_type &v, data_type &d, int i=0);  ; static void resize (int s, data_type &d);  ; static int size (const data_type &d);  ; static const char * header (const data_type &, int=0);  ; static const value_type * get (const data_type &d, int i=0);  ; static void set (const value_type &v, data_type &d, int i=0);  ; static void resize (int s, data_type &d);  . sofaguiqtvector_data_trait< sofa::type::vector< T > >; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01sofa_1_1type_1_1vector_3_01_t_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01sofa_1_1type_1_1vector_3_01_t_01_4_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::vector_data_trait< sofa::type::Mat< L, C, T > > Member List . This is the complete list of members for sofa::gui::qt::vector_data_trait< sofa::type::Mat< L, C, T > >, including all inherited members. data_type typedefsofa::gui::qt::vector_data_trait< sofa::type::Mat< L, C, T > >; get(const data_type &d, sofa::Index i=0)sofa::gui::qt::vector_data_trait< sofa::type::Mat< L, C, T > >inlinestatic; header(const data_type &, sofa::Index=0)sofa::gui::qt::vector_data_trait< sofa::type::Mat< L, C, T > >inlinestatic; NDIM enum valuesofa::gui::qt::vector_data_trait< sofa::type::Mat< L, C, T > >; resize(sofa::Size, data_type &)sofa::gui::qt::vector_data_trait< sofa::type::Mat< L, C, T > >inlinestatic; set(const value_type &v, data_type &d, sofa::Index i=0)sofa::gui::qt::vector_data_trait< sofa::type::Mat< L, C, T > >inlinestatic; SIZE enum valuesofa::gui::qt::vector_data_trait< sofa::type::Mat< L, C, T > >; size(const data_type &)sofa::gui::qt::vector_data_trait< sofa::type::Mat< L, C, T > >inlinestatic; value_type typedefsofa::gui::qt::vector_data_trait< sofa::type::Mat< L, C, T > >. Generated on Mon Nov 11 2024 03:25:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01sofa_1_1type_1_1_mat_3_01_l_00_01_c_00_01_t_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01sofa_1_1type_1_1_mat_3_01_l_00_01_c_00_01_t_01_4_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::vector_data_trait< sofa::type::Vec< N, T > > Member List . This is the complete list of members for sofa::gui::qt::vector_data_trait< sofa::type::Vec< N, T > >, including all inherited members. data_type typedefsofa::gui::qt::vector_data_trait< sofa::type::Vec< N, T > >; get(const data_type &d, Size i=0)sofa::gui::qt::vector_data_trait< sofa::type::Vec< N, T > >inlinestatic; header(const data_type &, Size=0)sofa::gui::qt::vector_data_trait< sofa::type::Vec< N, T > >inlinestatic; NDIM enum valuesofa::gui::qt::vector_data_trait< sofa::type::Vec< N, T > >; resize(Size, data_type &)sofa::gui::qt::vector_data_trait< sofa::type::Vec< N, T > >inlinestatic; set(const value_type &v, data_type &d, Size i=0)sofa::gui::qt::vector_data_trait< sofa::type::Vec< N, T > >inlinestatic; Size typedefsofa::gui::qt::vector_data_trait< sofa::type::Vec< N, T > >; SIZE enum valuesofa::gui::qt::vector_data_trait< sofa::type::Vec< N, T > >; size(const data_type &)sofa::gui::qt::vector_data_trait< sofa::type::Vec< N, T > >inlinestatic; value_type typedefsofa::gui::qt::vector_data_trait< sofa::type::Vec< N, T > >. Generated on Mon Nov 11 2024 03:25:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01sofa_1_1type_1_1_vec_3_01_n_00_01_t_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01sofa_1_1type_1_1_vec_3_01_n_00_01_t_01_4_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::vector_data_trait< std::deque< T > > Member List . This is the complete list of members for sofa::gui::qt::vector_data_trait< std::deque< T > >, including all inherited members. data_type typedefsofa::gui::qt::vector_data_trait< std::deque< T > >; get(const data_type &d, int i=0)sofa::gui::qt::vector_data_trait< std::deque< T > >inlinestatic; header(const data_type &, int=0)sofa::gui::qt::vector_data_trait< std::deque< T > >inlinestatic; NDIM enum valuesofa::gui::qt::vector_data_trait< std::deque< T > >; resize(int s, data_type &d)sofa::gui::qt::vector_data_trait< std::deque< T > >inlinestatic; set(const value_type &v, data_type &d, int i=0)sofa::gui::qt::vector_data_trait< std::deque< T > >inlinestatic; size(const data_type &d)sofa::gui::qt::vector_data_trait< std::deque< T > >inlinestatic; value_type typedefsofa::gui::qt::vector_data_trait< std::deque< T > >. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01std_1_1deque_3_01_t_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01std_1_1deque_3_01_t_01_4_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::vector_data_trait< std::map< std::string, T > > Member List . This is the complete list of members for sofa::gui::qt::vector_data_trait< std::map< std::string, T > >, including all inherited members. data_type typedefsofa::gui::qt::vector_data_trait< std::map< std::string, T > >; data_type typedefsofa::gui::qt::vector_data_trait< std::map< std::string, T > >; get(const data_type &d, int i=0)sofa::gui::qt::vector_data_trait< std::map< std::string, T > >inlinestatic; get(const data_type &d, int i=0)sofa::gui::qt::vector_data_trait< std::map< std::string, T > >inlinestatic; header(const data_type &d, int i=0)sofa::gui::qt::vector_data_trait< std::map< std::string, T > >inlinestatic; header(const data_type &d, int i=0)sofa::gui::qt::vector_data_trait< std::map< std::string, T > >inlinestatic; NDIM enum valuesofa::gui::qt::vector_data_trait< std::map< std::string, T > >; resize(int, data_type &)sofa::gui::qt::vector_data_trait< std::map< std::string, T > >inlinestatic; resize(int, data_type &)sofa::gui::qt::vector_data_trait< std::map< std::string, T > >inlinestatic; set(const value_type &v, data_type &d, int i=0)sofa::gui::qt::vector_data_trait< std::map< std::string, T > >inlinestatic; set(const value_type &v, data_type &d, int i=0)sofa::gui::qt::vector_data_trait< std::map< std::string, T > >inlinestatic; size(const data_type &d)sofa::gui::qt::vector_data_trait< std::map< std::string, T > >inlinestatic; size(const data_type &d)sofa::gui::qt::vector_data_trait< std::map< std::string, T > >inlinestatic; value_type typedefsofa::gui::qt::vector_data_trait< std::map< std::string, T > >; value_type typedefsofa::gui::qt::vector_data_trait< std::map< std::string, T > >. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01std_1_1map_3_01std_1_1string_00_01_t_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01std_1_1map_3_01std_1_1string_00_01_t_01_4_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::vector_data_trait< std::vector< T > > Member List . This is the complete list of members for sofa::gui::qt::vector_data_trait< std::vector< T > >, including all inherited members. data_type typedefsofa::gui::qt::vector_data_trait< std::vector< T > >; data_type typedefsofa::gui::qt::vector_data_trait< std::vector< T > >; get(const data_type &d, int i=0)sofa::gui::qt::vector_data_trait< std::vector< T > >inlinestatic; get(const data_type &d, int i=0)sofa::gui::qt::vector_data_trait< std::vector< T > >inlinestatic; header(const data_type &, int=0)sofa::gui::qt::vector_data_trait< std::vector< T > >inlinestatic; header(const data_type &, int=0)sofa::gui::qt::vector_data_trait< std::vector< T > >inlinestatic; NDIM enum valuesofa::gui::qt::vector_data_trait< std::vector< T > >; resize(int s, data_type &d)sofa::gui::qt::vector_data_trait< std::vector< T > >inlinestatic; resize(int s, data_type &d)sofa::gui::qt::vector_data_trait< std::vector< T > >inlinestatic; set(const value_type &v, data_type &d, int i=0)sofa::gui::qt::vector_data_trait< std::vector< T > >inlinestatic; set(const value_type &v, data_type &d, int i=0)sofa::gui::qt::vector_data_trait< std::vector< T > >inlinestatic; size(const data_type &d)sofa::gui::qt::vector_data_trait< std::vector< T > >inlinestatic; size(const data_type &d)sofa::gui::qt::vector_data_trait< std::vector< T > >inlinestatic; value_type typedefsofa::gui::qt::vector_data_trait< std::vector< T > >; value_type typedefsofa::gui::qt::vector_data_trait< std::vector< T > >. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01std_1_1vector_3_01_t_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01std_1_1vector_3_01_t_01_4_01_4-members.html
Modifiability,variab,variable-sized,"﻿. SOFA API: sofa::gui::qt::vector_data_trait< std::vector< T > > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::gui::qt::vector_data_trait< std::vector< T > > Class Template Reference . #include <QTableDataContainer.h>; variable-sized vectors support ; More... Inheritance diagram for sofa::gui::qt::vector_data_trait< std::vector< T > >:. [legend]; Detailed Description; template<class T>; class sofa::gui::qt::vector_data_trait< std::vector< T > >; variable-sized vectors support . Static Public Member Functions; static int size (const data_type &d);  ; static const char * header (const data_type &, int=0);  ; static const value_type * get (const data_type &d, int i=0);  ; static void set (const value_type &v, data_type &d, int i=0);  ; static void resize (int s, data_type &d);  ; static int size (const data_type &d);  ; static const char * header (const data_type &, int=0);  ; static const value_type * get (const data_type &d, int i=0);  ; static void set (const value_type &v, data_type &d, int i=0);  ; static void resize (int s, data_type &d);  . Function details. ◆ get() [1/2]. template<class T > . static const value_type* sofa::gui::qt::vector_data_trait< std::vector< T > >::get ; (; const data_type & ; d, . int ; i = 0 . ). inlinestatic . ◆ get() [2/2]. template<class T > . static const value_type* sofa::gui::qt::vector_data_trait< std::vector< T > >::get ; (; const data_type & ; d, . int ; i = 0 . ). inlinestatic . ◆ header() [1/2]. template<class T > . static const char* sofa::gui::qt::vector_data_trait< std::vector< T > >::header ; (; const data_type & ; , . int ; = 0 . ). inlinestatic . ◆ header() [2/2]. template<class T > . static const char* sofa::gui::qt::vector_data_trait< std::vector< T > >::header ; (; const data_type & ; , . int ; = 0 . ). inlinestatic . ◆ resize() [1/2]. template<class T > . static void sofa::gui::qt::vector_data_trait< st",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01std_1_1vector_3_01_t_01_4_01_4.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01std_1_1vector_3_01_t_01_4_01_4.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::vector_data_trait< Quat< T > > Member List . This is the complete list of members for sofa::gui::qt::vector_data_trait< Quat< T > >, including all inherited members. data_type typedefsofa::gui::qt::vector_data_trait< Quat< T > >; get(const data_type &d, sofa::Index i=0)sofa::gui::qt::vector_data_trait< Quat< T > >inlinestatic; header(const data_type &, sofa::Index i=0)sofa::gui::qt::vector_data_trait< Quat< T > >inlinestatic; NDIM enum valuesofa::gui::qt::vector_data_trait< Quat< T > >; resize(sofa::Size, data_type &)sofa::gui::qt::vector_data_trait< Quat< T > >inlinestatic; set(const value_type &v, data_type &d, sofa::Index i=0)sofa::gui::qt::vector_data_trait< Quat< T > >inlinestatic; SIZE enum valuesofa::gui::qt::vector_data_trait< Quat< T > >; size(const data_type &)sofa::gui::qt::vector_data_trait< Quat< T > >inlinestatic; value_type typedefsofa::gui::qt::vector_data_trait< Quat< T > >. Generated on Mon Nov 11 2024 03:25:20 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01_quat_3_01_t_01_4_01_4-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01_quat_3_01_t_01_4_01_4-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::viewer::qgl::QtGLViewer Member List . This is the complete list of members for sofa::gui::qt::viewer::qgl::QtGLViewer, including all inherited members. _backgroundsofa::gui::common::BaseViewerprotected; _fullScreensofa::gui::common::BaseViewerprotected; _mouseInteractorMovingsofa::gui::common::BaseViewerprotected; _mouseInteractorSavedPosXsofa::gui::common::BaseViewerprotected; _mouseInteractorSavedPosYsofa::gui::common::BaseViewerprotected; _navigationModesofa::gui::common::BaseViewerprotected; _screenshotDirectorysofa::gui::common::BaseViewerprotected; _videosofa::gui::common::BaseViewerprotected; acceleratedName()sofa::gui::qt::viewer::qgl::QtGLViewerinlinestatic; ambientColoursofa::gui::common::BaseViewerprotected; backgroundColoursofa::gui::common::BaseViewerprotected; backgroundImageFilesofa::gui::common::BaseViewerprotected; BaseViewer()sofa::gui::common::BaseViewer; captureEvent() overridesofa::gui::qt::viewer::qgl::QtGLViewerinlinevirtualslot; captureTimersofa::gui::qt::viewer::SofaViewerprotected; colourPickingRenderCallBacksofa::gui::qt::viewer::SofaViewerprotected; configure(sofa::component::setting::ViewerSetting *viewerConf) overridesofa::gui::qt::viewer::SofaViewervirtual; configureViewerTab(QTabWidget *)sofa::gui::qt::viewer::SofaViewerinlinevirtual; create(QtGLViewer *, sofa::gui::common::BaseViewerArgument &arg)sofa::gui::qt::viewer::qgl::QtGLViewerinlinestatic; currentCamerasofa::gui::common::BaseViewerprotected; CustomPolicySofaViewer()sofa::gui::qt::viewer::CustomPolicySofaViewer< VisualModelPolicyType >inline; draw() overridesofa::gui::qt::viewer::qgl::QtGLViewerprotected; drawColourPicking(common::ColourPickingVisitor::ColourCode code) overridesofa::gui::qt::viewer::qgl::QtGLViewervirtual; DrawLogo(void)sofa::gui::qt::viewer::qgl::QtGLViewerprotectedvirtual; drawScene() overridesofa::gui::qt::viewer::qgl::QtGLViewerprotectedvirtual",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qgl_1_1_qt_g_l_viewer-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qgl_1_1_qt_g_l_viewer-members.html
Performance,load,load,"a::gui::common::BaseViewer; getHeight() overridesofa::gui::qt::viewer::qgl::QtGLViewerinlinevirtual; getPickHandler()sofa::gui::common::BaseViewer; getQWidget() overridesofa::gui::qt::viewer::qgl::QtGLViewerinlinevirtual; getScene()sofa::gui::common::BaseViewervirtual; getSceneFileName()sofa::gui::common::BaseViewervirtual; getView(type::Vec3 &pos, type::Quat< SReal > &ori) const overridesofa::gui::qt::viewer::qgl::QtGLViewervirtualslot; getWidth() overridesofa::gui::qt::viewer::qgl::QtGLViewerinlinevirtual; grootsofa::gui::common::BaseViewerprotected; helpString() const overridesofa::gui::qt::viewer::qgl::QtGLViewervirtual; init() overridesofa::gui::qt::viewer::qgl::QtGLViewerprotected; initTexturesDonesofa::gui::common::BaseViewerprotected; isControlPressed() constsofa::gui::qt::viewer::SofaViewer; keyPressEvent(QKeyEvent *e) overridesofa::gui::qt::viewer::qgl::QtGLViewerprotectedvirtual; keyReleaseEvent(QKeyEvent *e) overridesofa::gui::qt::viewer::qgl::QtGLViewerprotectedvirtual; load(void)sofa::gui::common::BaseViewervirtual; m_backendsofa::gui::qt::viewer::SofaViewerprotected; m_bShowAxissofa::gui::common::BaseViewerprotected; m_isControlPressedsofa::gui::qt::viewer::SofaViewerprotected; m_isVideoButtonPressedsofa::gui::common::BaseViewerprotected; mouseEvent(QMouseEvent *e) overridesofa::gui::qt::viewer::qgl::QtGLViewerprotectedvirtual; mouseMoveEvent(QMouseEvent *e) overridesofa::gui::qt::viewer::qgl::QtGLViewerprotectedvirtual; mousePressEvent(QMouseEvent *e) overridesofa::gui::qt::viewer::qgl::QtGLViewerprotectedvirtual; mouseReleaseEvent(QMouseEvent *e) overridesofa::gui::qt::viewer::qgl::QtGLViewerprotectedvirtual; moveRayPickInteractor(int eventX, int eventY) overridesofa::gui::qt::viewer::qgl::QtGLViewervirtual; moveView(const sofa::type::Vec3 &pos, const sofa::type::Quat< SReal > &ori)sofa::gui::common::BaseViewervirtual; newView()sofa::gui::common::BaseViewervirtual; picksofa::gui::common::BaseViewerprotected; QtGLViewer(QWidget *parent, const char *na",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qgl_1_1_qt_g_l_viewer-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qgl_1_1_qt_g_l_viewer-members.html
Modifiability,inherit,inherited,"ist of all members . sofa::gui::qt::viewer::qgl::QtGLViewer Class Reference . #include <QtGLViewer.h>. Inheritance diagram for sofa::gui::qt::viewer::qgl::QtGLViewer:. [legend]. Public Member Functions; virtual void drawColourPicking (common::ColourPickingVisitor::ColourCode code) override;  ;  QtGLViewer (QWidget *parent, const char *name="""");  ;  ~QtGLViewer () override;  ; QWidget * getQWidget () override;  ; int getWidth () override;  ; int getHeight () override;  ; bool ready () override;  ; void wait () override;  ask the viewer to resume its activity More...;  ; void UpdateOBJ (void);  ; void moveRayPickInteractor (int eventX, int eventY) override;  RayCasting PickHandler. More...;  ; void setCameraMode (core::visual::VisualParams::CameraType mode) override;  ; void screenshot (const std::string &filename, int compression_level=-1) override;  ; QString helpString () const override;  ;  Public Member Functions inherited from sofa::gui::qt::viewer::CustomPolicySofaViewer< VisualModelPolicyType >;  CustomPolicySofaViewer ();  ;  ~CustomPolicySofaViewer () override;  ;  Public Member Functions inherited from sofa::gui::qt::viewer::SofaViewer;  SofaViewer ();  ;  ~SofaViewer () override;  ; virtual void removeViewerTab (QTabWidget *);  Optional QTabWidget GUI for a concreate viewer. More...;  ; virtual void configureViewerTab (QTabWidget *);  Optional QTabWidget GUI for a concreate viewer. More...;  ; void captureEvent () override;  ; bool isControlPressed () const;  ; virtual void configure (sofa::component::setting::ViewerSetting *viewerConf) override;  ; const std::string screenshotName () override;  ; void setPrefix (const std::string &prefix, bool prependDirectory=true) override;  ; virtual void setBackgroundImage (std::string imageFileName=std::string(""textures/SOFA_logo.bmp"")) override;  ;  Public Member Functions inherited from sofa::gui::common::BaseViewer;  BaseViewer ();  ; virtual ~BaseViewer ();  ; virtual sofa::simulation::Node * getScene ();  ; virtu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qgl_1_1_qt_g_l_viewer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qgl_1_1_qt_g_l_viewer.html
Performance,load,load,"ofaViewer ();  ;  ~CustomPolicySofaViewer () override;  ;  Public Member Functions inherited from sofa::gui::qt::viewer::SofaViewer;  SofaViewer ();  ;  ~SofaViewer () override;  ; virtual void removeViewerTab (QTabWidget *);  Optional QTabWidget GUI for a concreate viewer. More...;  ; virtual void configureViewerTab (QTabWidget *);  Optional QTabWidget GUI for a concreate viewer. More...;  ; void captureEvent () override;  ; bool isControlPressed () const;  ; virtual void configure (sofa::component::setting::ViewerSetting *viewerConf) override;  ; const std::string screenshotName () override;  ; void setPrefix (const std::string &prefix, bool prependDirectory=true) override;  ; virtual void setBackgroundImage (std::string imageFileName=std::string(""textures/SOFA_logo.bmp"")) override;  ;  Public Member Functions inherited from sofa::gui::common::BaseViewer;  BaseViewer ();  ; virtual ~BaseViewer ();  ; virtual sofa::simulation::Node * getScene ();  ; virtual const std::string & getSceneFileName ();  ; virtual void setSceneFileName (const std::string &f);  ; virtual void setScene (sofa::simulation::Node::SPtr scene, const char *filename=nullptr, bool=false);  ; virtual bool load (void);  Load the viewer. It's the initialisation. More...;  ; virtual bool unload (void);  unload the viewer without delete More...;  ; virtual void getView (sofa::type::Vec3 &pos, sofa::type::Quat< SReal > &ori) const;  ; virtual void setView (const sofa::type::Vec3 &pos, const sofa::type::Quat< SReal > &ori);  ; virtual void moveView (const sofa::type::Vec3 &pos, const sofa::type::Quat< SReal > &ori);  ; virtual void newView ();  ; virtual void resetView ();  ; virtual void setBackgroundColour (float r, float g, float b);  ; std::string getBackgroundImage ();  ; virtual void saveView ()=0;  ; virtual void setSizeW (int)=0;  ; virtual void setSizeH (int)=0;  ; virtual void fitObjectBBox (sofa::core::objectmodel::BaseObject *);  ; virtual void fitNodeBBox (sofa::core::objectmodel::BaseNode *)",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qgl_1_1_qt_g_l_viewer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qgl_1_1_qt_g_l_viewer.html
Usability,resume,resume,"﻿. SOFA API: sofa::gui::qt::viewer::qgl::QtGLViewer Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Signals |; Public Slots |; List of all members . sofa::gui::qt::viewer::qgl::QtGLViewer Class Reference . #include <QtGLViewer.h>. Inheritance diagram for sofa::gui::qt::viewer::qgl::QtGLViewer:. [legend]. Public Member Functions; virtual void drawColourPicking (common::ColourPickingVisitor::ColourCode code) override;  ;  QtGLViewer (QWidget *parent, const char *name="""");  ;  ~QtGLViewer () override;  ; QWidget * getQWidget () override;  ; int getWidth () override;  ; int getHeight () override;  ; bool ready () override;  ; void wait () override;  ask the viewer to resume its activity More...;  ; void UpdateOBJ (void);  ; void moveRayPickInteractor (int eventX, int eventY) override;  RayCasting PickHandler. More...;  ; void setCameraMode (core::visual::VisualParams::CameraType mode) override;  ; void screenshot (const std::string &filename, int compression_level=-1) override;  ; QString helpString () const override;  ;  Public Member Functions inherited from sofa::gui::qt::viewer::CustomPolicySofaViewer< VisualModelPolicyType >;  CustomPolicySofaViewer ();  ;  ~CustomPolicySofaViewer () override;  ;  Public Member Functions inherited from sofa::gui::qt::viewer::SofaViewer;  SofaViewer ();  ;  ~SofaViewer () override;  ; virtual void removeViewerTab (QTabWidget *);  Optional QTabWidget GUI for a concreate viewer. More...;  ; virtual void configureViewerTab (QTabWidget *);  Optional QTabWidget GUI for a concreate viewer. More...;  ; void captureEvent () override;  ; bool isControlPressed () const;  ; virtual void configure (sofa::component::setting::ViewerSetting *viewerConf) override;  ; const std::string screenshotName () override;  ; void setPrefix (const std::string &prefix, bool prependDirectory=true) override;  ; virtual void setBack",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qgl_1_1_qt_g_l_viewer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qgl_1_1_qt_g_l_viewer.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::viewer::qt::QtViewer Member List . This is the complete list of members for sofa::gui::qt::viewer::qt::QtViewer, including all inherited members. _backgroundsofa::gui::common::BaseViewerprotected; _fullScreensofa::gui::common::BaseViewerprotected; _mouseInteractorAbsolutePositionsofa::gui::qt::viewer::qt::QtViewer; _mouseInteractorCurrentQuatsofa::gui::qt::viewer::qt::QtViewer; _mouseInteractorMovingsofa::gui::common::BaseViewerprotected; _mouseInteractorNewQuatsofa::gui::qt::viewer::qt::QtViewerstatic; _mouseInteractorRotationModesofa::gui::qt::viewer::qt::QtViewer; _mouseInteractorSavedPosXsofa::gui::common::BaseViewerprotected; _mouseInteractorSavedPosYsofa::gui::common::BaseViewerprotected; _mouseInteractorTrackballsofa::gui::qt::viewer::qt::QtViewer; _mouseInteractorTranslationModesofa::gui::qt::viewer::qt::QtViewer; _mouseRotatesofa::gui::qt::viewer::qt::QtViewerstatic; _mouseTranssofa::gui::qt::viewer::qt::QtViewerstatic; _navigationModesofa::gui::common::BaseViewerprotected; _screenshotDirectorysofa::gui::common::BaseViewerprotected; _translationModesofa::gui::qt::viewer::qt::QtViewer; _videosofa::gui::common::BaseViewerprotected; acceleratedName()sofa::gui::qt::viewer::qt::QtViewerinlinestatic; ambientColoursofa::gui::common::BaseViewerprotected; ApplyMouseInteractorTransformation(int x, int y)sofa::gui::qt::viewer::qt::QtViewer; backgroundColoursofa::gui::common::BaseViewerprotected; backgroundImageFilesofa::gui::common::BaseViewerprotected; BaseViewer()sofa::gui::common::BaseViewer; calcProjection(int width=0, int height=0)sofa::gui::qt::viewer::qt::QtViewerprotected; captureEvent() overridesofa::gui::qt::viewer::qt::QtViewerinlinevirtualslot; captureTimersofa::gui::qt::viewer::SofaViewerprotected; colourPickingRenderCallBacksofa::gui::qt::viewer::SofaViewerprotected; configure(sofa::component::setting::ViewerSetting *viewerConf) overridesofa:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qt_1_1_qt_viewer-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qt_1_1_qt_viewer-members.html
Performance,load,load,"r::qt::QtViewerinlinevirtualslot; fitObjectBBox(sofa::core::objectmodel::BaseObject *obj) overridesofa::gui::qt::viewer::qt::QtViewerinlinevirtualslot; getBackgroundImage()sofa::gui::common::BaseViewer; getHeight() overridesofa::gui::qt::viewer::qt::QtViewerinlinevirtual; getPickHandler()sofa::gui::common::BaseViewer; getQWidget() overridesofa::gui::qt::viewer::qt::QtViewerinlinevirtual; getScene() overridesofa::gui::qt::viewer::qt::QtViewerinlinevirtual; getSceneFileName()sofa::gui::common::BaseViewervirtual; getView(type::Vec3 &pos, type::Quat< SReal > &ori) const overridesofa::gui::qt::viewer::qt::QtViewervirtualslot; getWidth() overridesofa::gui::qt::viewer::qt::QtViewerinlinevirtual; grootsofa::gui::common::BaseViewerprotected; helpString() const overridesofa::gui::qt::viewer::qt::QtViewervirtual; initializeGL() overridesofa::gui::qt::viewer::qt::QtViewerprotected; initTexturesDonesofa::gui::common::BaseViewerprotected; isControlPressed() constsofa::gui::qt::viewer::SofaViewer; load(void)sofa::gui::common::BaseViewervirtual; m_backendsofa::gui::qt::viewer::SofaViewerprotected; m_bShowAxissofa::gui::common::BaseViewerprotected; m_isControlPressedsofa::gui::qt::viewer::SofaViewerprotected; m_isVideoButtonPressedsofa::gui::common::BaseViewerprotected; moveRayPickInteractor(int eventX, int eventY) overridesofa::gui::qt::viewer::qt::QtViewervirtual; moveView(const type::Vec3 &pos, const type::Quat< SReal > &ori) overridesofa::gui::qt::viewer::qt::QtViewervirtualslot; newView() overridesofa::gui::qt::viewer::qt::QtViewervirtualslot; paintEvent(QPaintEvent *qpe) overridesofa::gui::qt::viewer::qt::QtViewerprotected; paintGL() overridesofa::gui::qt::viewer::qt::QtViewerprotected; picksofa::gui::common::BaseViewerprotected; QtViewer(QWidget *parent, const char *name="""")sofa::gui::qt::viewer::qt::QtViewer; quit()sofa::gui::qt::viewer::qt::QtViewersignal; ready() overridesofa::gui::qt::viewer::qt::QtViewerinlinevirtual; redraw() overridesofa::gui::qt::viewer::SofaViewerprot",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qt_1_1_qt_viewer-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qt_1_1_qt_viewer-members.html
Modifiability,inherit,inherited,"; static const std::string VIEW_FILE_EXTENSION = ""view"";  TODO: standardize .view file parameters. More...;  ; static Quat< SReal > _mouseInteractorNewQuat;  ; static bool _mouseTrans = false;  ; static bool _mouseRotate = false;  . Public Member Functions;  QtViewer (QWidget *parent, const char *name="""");  ;  ~QtViewer () override;  ; QWidget * getQWidget () override;  ; bool ready () override;  ; void wait () override;  ask the viewer to resume its activity More...;  ; sofa::simulation::Node * getScene () override;  ; int getWidth () override;  ; int getHeight () override;  ; void UpdateOBJ (void);  ; void moveRayPickInteractor (int eventX, int eventY) override;  RayCasting PickHandler. More...;  ; void ApplyMouseInteractorTransformation (int x, int y);  ; QString helpString () const override;  ; void screenshot (const std::string &filename, int compression_level=-1) override;  ;  Public Member Functions inherited from sofa::gui::qt::viewer::CustomPolicySofaViewer< VisualModelPolicyType >;  CustomPolicySofaViewer ();  ;  ~CustomPolicySofaViewer () override;  ;  Public Member Functions inherited from sofa::gui::qt::viewer::SofaViewer;  SofaViewer ();  ;  ~SofaViewer () override;  ; virtual void removeViewerTab (QTabWidget *);  Optional QTabWidget GUI for a concreate viewer. More...;  ; virtual void configureViewerTab (QTabWidget *);  Optional QTabWidget GUI for a concreate viewer. More...;  ; void captureEvent () override;  ; bool isControlPressed () const;  ; virtual void configure (sofa::component::setting::ViewerSetting *viewerConf) override;  ; const std::string screenshotName () override;  ; void setPrefix (const std::string &prefix, bool prependDirectory=true) override;  ; virtual void setBackgroundImage (std::string imageFileName=std::string(""textures/SOFA_logo.bmp"")) override;  ;  Public Member Functions inherited from sofa::gui::common::BaseViewer;  BaseViewer ();  ; virtual ~BaseViewer ();  ; virtual void drawColourPicking (ColourPickingVisitor::ColourCod",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qt_1_1_qt_viewer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qt_1_1_qt_viewer.html
Performance,load,load,"erride;  ;  Public Member Functions inherited from sofa::gui::qt::viewer::SofaViewer;  SofaViewer ();  ;  ~SofaViewer () override;  ; virtual void removeViewerTab (QTabWidget *);  Optional QTabWidget GUI for a concreate viewer. More...;  ; virtual void configureViewerTab (QTabWidget *);  Optional QTabWidget GUI for a concreate viewer. More...;  ; void captureEvent () override;  ; bool isControlPressed () const;  ; virtual void configure (sofa::component::setting::ViewerSetting *viewerConf) override;  ; const std::string screenshotName () override;  ; void setPrefix (const std::string &prefix, bool prependDirectory=true) override;  ; virtual void setBackgroundImage (std::string imageFileName=std::string(""textures/SOFA_logo.bmp"")) override;  ;  Public Member Functions inherited from sofa::gui::common::BaseViewer;  BaseViewer ();  ; virtual ~BaseViewer ();  ; virtual void drawColourPicking (ColourPickingVisitor::ColourCode);  ; virtual const std::string & getSceneFileName ();  ; virtual void setSceneFileName (const std::string &f);  ; virtual void setScene (sofa::simulation::Node::SPtr scene, const char *filename=nullptr, bool=false);  ; virtual void setCameraMode (core::visual::VisualParams::CameraType);  ; virtual bool load (void);  Load the viewer. It's the initialisation. More...;  ; virtual bool unload (void);  unload the viewer without delete More...;  ; virtual void getView (sofa::type::Vec3 &pos, sofa::type::Quat< SReal > &ori) const;  ; virtual void setView (const sofa::type::Vec3 &pos, const sofa::type::Quat< SReal > &ori);  ; virtual void moveView (const sofa::type::Vec3 &pos, const sofa::type::Quat< SReal > &ori);  ; virtual void newView ();  ; virtual void resetView ();  ; virtual void setBackgroundColour (float r, float g, float b);  ; std::string getBackgroundImage ();  ; virtual void saveView ()=0;  ; virtual void setSizeW (int)=0;  ; virtual void setSizeH (int)=0;  ; virtual void fitObjectBBox (sofa::core::objectmodel::BaseObject *);  ; virtual void fi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qt_1_1_qt_viewer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qt_1_1_qt_viewer.html
Usability,resume,resume,"amework for multi-physics simuation. Public Attributes |; Static Public Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Signals |; Public Slots |; List of all members . sofa::gui::qt::viewer::qt::QtViewer Class Reference . #include <QtViewer.h>. Inheritance diagram for sofa::gui::qt::viewer::qt::QtViewer:. [legend]. Public Attributes; bool _mouseInteractorTranslationMode;  ; bool _mouseInteractorRotationMode;  ; int _translationMode;  ; Quat< SReal > _mouseInteractorCurrentQuat;  ; Vec3 _mouseInteractorAbsolutePosition;  ; Trackball _mouseInteractorTrackball;  . Static Public Attributes; static const std::string VIEW_FILE_EXTENSION = ""view"";  TODO: standardize .view file parameters. More...;  ; static Quat< SReal > _mouseInteractorNewQuat;  ; static bool _mouseTrans = false;  ; static bool _mouseRotate = false;  . Public Member Functions;  QtViewer (QWidget *parent, const char *name="""");  ;  ~QtViewer () override;  ; QWidget * getQWidget () override;  ; bool ready () override;  ; void wait () override;  ask the viewer to resume its activity More...;  ; sofa::simulation::Node * getScene () override;  ; int getWidth () override;  ; int getHeight () override;  ; void UpdateOBJ (void);  ; void moveRayPickInteractor (int eventX, int eventY) override;  RayCasting PickHandler. More...;  ; void ApplyMouseInteractorTransformation (int x, int y);  ; QString helpString () const override;  ; void screenshot (const std::string &filename, int compression_level=-1) override;  ;  Public Member Functions inherited from sofa::gui::qt::viewer::CustomPolicySofaViewer< VisualModelPolicyType >;  CustomPolicySofaViewer ();  ;  ~CustomPolicySofaViewer () override;  ;  Public Member Functions inherited from sofa::gui::qt::viewer::SofaViewer;  SofaViewer ();  ;  ~SofaViewer () override;  ; virtual void removeViewerTab (QTabWidget *);  Optional QTabWidget GUI for a concreate viewer. More...;  ; virtual void configureViewerTab (QTabWidget",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qt_1_1_qt_viewer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qt_1_1_qt_viewer.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::viewer::CustomPolicySofaViewer< VisualModelPolicyType > Member List . This is the complete list of members for sofa::gui::qt::viewer::CustomPolicySofaViewer< VisualModelPolicyType >, including all inherited members. _backgroundsofa::gui::common::BaseViewerprotected; _fullScreensofa::gui::common::BaseViewerprotected; _mouseInteractorMovingsofa::gui::common::BaseViewerprotected; _mouseInteractorSavedPosXsofa::gui::common::BaseViewerprotected; _mouseInteractorSavedPosYsofa::gui::common::BaseViewerprotected; _navigationModesofa::gui::common::BaseViewerprotected; _screenshotDirectorysofa::gui::common::BaseViewerprotected; _videosofa::gui::common::BaseViewerprotected; ambientColoursofa::gui::common::BaseViewerprotected; backgroundColoursofa::gui::common::BaseViewerprotected; backgroundImageFilesofa::gui::common::BaseViewerprotected; BaseViewer()sofa::gui::common::BaseViewer; captureEvent() overridesofa::gui::qt::viewer::SofaViewervirtual; captureTimersofa::gui::qt::viewer::SofaViewerprotected; colourPickingRenderCallBacksofa::gui::qt::viewer::SofaViewerprotected; configure(sofa::component::setting::ViewerSetting *viewerConf) overridesofa::gui::qt::viewer::SofaViewervirtual; configureViewerTab(QTabWidget *)sofa::gui::qt::viewer::SofaViewerinlinevirtual; currentCamerasofa::gui::common::BaseViewerprotected; CustomPolicySofaViewer()sofa::gui::qt::viewer::CustomPolicySofaViewer< VisualModelPolicyType >inline; drawColourPicking(ColourPickingVisitor::ColourCode)sofa::gui::common::BaseViewerinlinevirtual; drawScene(void)=0sofa::gui::common::BaseViewerpure virtual; fitNodeBBox(sofa::core::objectmodel::BaseNode *)sofa::gui::common::BaseViewervirtual; fitObjectBBox(sofa::core::objectmodel::BaseObject *)sofa::gui::common::BaseViewervirtual; getBackgroundImage()sofa::gui::common::BaseViewer; getHeight()=0sofa::gui::common::BaseViewerpure virtual; getPickHandler()sofa::gui:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_custom_policy_sofa_viewer-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_custom_policy_sofa_viewer-members.html
Performance,load,load,"jectmodel::BaseNode *)sofa::gui::common::BaseViewervirtual; fitObjectBBox(sofa::core::objectmodel::BaseObject *)sofa::gui::common::BaseViewervirtual; getBackgroundImage()sofa::gui::common::BaseViewer; getHeight()=0sofa::gui::common::BaseViewerpure virtual; getPickHandler()sofa::gui::common::BaseViewer; getQWidget()=0sofa::gui::qt::viewer::SofaViewerpure virtual; getScene()sofa::gui::common::BaseViewervirtual; getSceneFileName()sofa::gui::common::BaseViewervirtual; getView(sofa::type::Vec3 &pos, sofa::type::Quat< SReal > &ori) constsofa::gui::common::BaseViewervirtual; getWidth()=0sofa::gui::common::BaseViewerpure virtual; grootsofa::gui::common::BaseViewerprotected; helpString() const =0sofa::gui::qt::viewer::SofaViewerpure virtual; initTexturesDonesofa::gui::common::BaseViewerprotected; isControlPressed() constsofa::gui::qt::viewer::SofaViewer; keyPressEvent(QKeyEvent *e)sofa::gui::qt::viewer::SofaViewervirtual; keyReleaseEvent(QKeyEvent *e)sofa::gui::qt::viewer::SofaViewervirtual; load(void)sofa::gui::common::BaseViewervirtual; m_backendsofa::gui::qt::viewer::SofaViewerprotected; m_bShowAxissofa::gui::common::BaseViewerprotected; m_isControlPressedsofa::gui::qt::viewer::SofaViewerprotected; m_isVideoButtonPressedsofa::gui::common::BaseViewerprotected; mouseEvent(QMouseEvent *e)sofa::gui::qt::viewer::SofaViewervirtual; mouseMoveEvent(QMouseEvent *e)sofa::gui::qt::viewer::SofaViewervirtual; mousePressEvent(QMouseEvent *e)sofa::gui::qt::viewer::SofaViewervirtual; mouseReleaseEvent(QMouseEvent *e)sofa::gui::qt::viewer::SofaViewervirtual; moveRayPickInteractor(int, int)sofa::gui::common::BaseViewerinlinevirtual; moveView(const sofa::type::Vec3 &pos, const sofa::type::Quat< SReal > &ori)sofa::gui::common::BaseViewervirtual; newView()sofa::gui::common::BaseViewervirtual; picksofa::gui::common::BaseViewerprotected; ready()sofa::gui::common::BaseViewervirtual; redraw() overridesofa::gui::qt::viewer::SofaViewerprotectedvirtual; redrawn()=0sofa::gui::qt::viewer::SofaViewerpur",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_custom_policy_sofa_viewer-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_custom_policy_sofa_viewer-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::qt::viewer::CustomPolicySofaViewer< VisualModelPolicyType > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gui::qt::viewer::CustomPolicySofaViewer< VisualModelPolicyType > Class Template Reference . #include <OglModelPolicy.h>. Inheritance diagram for sofa::gui::qt::viewer::CustomPolicySofaViewer< VisualModelPolicyType >:. [legend]. Public Member Functions;  CustomPolicySofaViewer ();  ;  ~CustomPolicySofaViewer () override;  ;  Public Member Functions inherited from sofa::gui::qt::viewer::SofaViewer;  SofaViewer ();  ;  ~SofaViewer () override;  ; virtual void removeViewerTab (QTabWidget *);  Optional QTabWidget GUI for a concreate viewer. More...;  ; virtual void configureViewerTab (QTabWidget *);  Optional QTabWidget GUI for a concreate viewer. More...;  ; virtual QWidget * getQWidget ()=0;  ; virtual QString helpString () const =0;  ; void captureEvent () override;  ; virtual void keyPressEvent (QKeyEvent *e);  ; virtual void keyReleaseEvent (QKeyEvent *e);  ; bool isControlPressed () const;  ; virtual void wheelEvent (QWheelEvent *e);  ; virtual void mouseMoveEvent (QMouseEvent *e);  ; virtual void mousePressEvent (QMouseEvent *e);  ; virtual void mouseReleaseEvent (QMouseEvent *e);  ; virtual bool mouseEvent (QMouseEvent *e);  ; virtual void configure (sofa::component::setting::ViewerSetting *viewerConf) override;  ; const std::string screenshotName () override;  ; void setPrefix (const std::string &prefix, bool prependDirectory=true) override;  ; virtual void screenshot (const std::string &filename, int compression_level=-1) override;  ; virtual void setBackgroundImage (std::string imageFileName=std::string(""textures/SOFA_logo.bmp"")) override;  ;  Public Member Functions inherited from sofa::gui::common::BaseViewer;  BaseViewer ();  ; virtual ~BaseViewer ();  ; virtual void drawColourPicking (ColourPickingVisitor::ColourCode);  ; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_custom_policy_sofa_viewer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_custom_policy_sofa_viewer.html
Performance,load,load,"ewerConf) override;  ; const std::string screenshotName () override;  ; void setPrefix (const std::string &prefix, bool prependDirectory=true) override;  ; virtual void screenshot (const std::string &filename, int compression_level=-1) override;  ; virtual void setBackgroundImage (std::string imageFileName=std::string(""textures/SOFA_logo.bmp"")) override;  ;  Public Member Functions inherited from sofa::gui::common::BaseViewer;  BaseViewer ();  ; virtual ~BaseViewer ();  ; virtual void drawColourPicking (ColourPickingVisitor::ColourCode);  ; virtual sofa::simulation::Node * getScene ();  ; virtual const std::string & getSceneFileName ();  ; virtual void setSceneFileName (const std::string &f);  ; virtual void setScene (sofa::simulation::Node::SPtr scene, const char *filename=nullptr, bool=false);  ; virtual void setCameraMode (core::visual::VisualParams::CameraType);  ; virtual bool ready ();  ; virtual void wait ();  ask the viewer to resume its activity More...;  ; virtual bool load (void);  Load the viewer. It's the initialisation. More...;  ; virtual bool unload (void);  unload the viewer without delete More...;  ; virtual void viewAll (void)=0;  Recompute viewer's home position so it encompass the whole scene and apply it. More...;  ; virtual void getView (sofa::type::Vec3 &pos, sofa::type::Quat< SReal > &ori) const;  ; virtual void setView (const sofa::type::Vec3 &pos, const sofa::type::Quat< SReal > &ori);  ; virtual void moveView (const sofa::type::Vec3 &pos, const sofa::type::Quat< SReal > &ori);  ; virtual void newView ();  ; virtual void resetView ();  ; virtual void setBackgroundColour (float r, float g, float b);  ; std::string getBackgroundImage ();  ; virtual void saveView ()=0;  ; virtual void setSizeW (int)=0;  ; virtual void setSizeH (int)=0;  ; virtual int getWidth ()=0;  ; virtual int getHeight ()=0;  ; virtual void fitObjectBBox (sofa::core::objectmodel::BaseObject *);  ; virtual void fitNodeBBox (sofa::core::objectmodel::BaseNode *);  ; virtual ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_custom_policy_sofa_viewer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_custom_policy_sofa_viewer.html
Usability,resume,resume,"bool isControlPressed () const;  ; virtual void wheelEvent (QWheelEvent *e);  ; virtual void mouseMoveEvent (QMouseEvent *e);  ; virtual void mousePressEvent (QMouseEvent *e);  ; virtual void mouseReleaseEvent (QMouseEvent *e);  ; virtual bool mouseEvent (QMouseEvent *e);  ; virtual void configure (sofa::component::setting::ViewerSetting *viewerConf) override;  ; const std::string screenshotName () override;  ; void setPrefix (const std::string &prefix, bool prependDirectory=true) override;  ; virtual void screenshot (const std::string &filename, int compression_level=-1) override;  ; virtual void setBackgroundImage (std::string imageFileName=std::string(""textures/SOFA_logo.bmp"")) override;  ;  Public Member Functions inherited from sofa::gui::common::BaseViewer;  BaseViewer ();  ; virtual ~BaseViewer ();  ; virtual void drawColourPicking (ColourPickingVisitor::ColourCode);  ; virtual sofa::simulation::Node * getScene ();  ; virtual const std::string & getSceneFileName ();  ; virtual void setSceneFileName (const std::string &f);  ; virtual void setScene (sofa::simulation::Node::SPtr scene, const char *filename=nullptr, bool=false);  ; virtual void setCameraMode (core::visual::VisualParams::CameraType);  ; virtual bool ready ();  ; virtual void wait ();  ask the viewer to resume its activity More...;  ; virtual bool load (void);  Load the viewer. It's the initialisation. More...;  ; virtual bool unload (void);  unload the viewer without delete More...;  ; virtual void viewAll (void)=0;  Recompute viewer's home position so it encompass the whole scene and apply it. More...;  ; virtual void getView (sofa::type::Vec3 &pos, sofa::type::Quat< SReal > &ori) const;  ; virtual void setView (const sofa::type::Vec3 &pos, const sofa::type::Quat< SReal > &ori);  ; virtual void moveView (const sofa::type::Vec3 &pos, const sofa::type::Quat< SReal > &ori);  ; virtual void newView ();  ; virtual void resetView ();  ; virtual void setBackgroundColour (float r, float g, float b);  ; s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_custom_policy_sofa_viewer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_custom_policy_sofa_viewer.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::viewer::EngineBackend Member List . This is the complete list of members for sofa::gui::qt::viewer::EngineBackend, including all inherited members. addFrameRecorder()=0sofa::gui::qt::viewer::EngineBackendpure virtual; drawBackgroundImage(const int screenWidth, const int screenHeight)=0sofa::gui::qt::viewer::EngineBackendpure virtual; endRecorder()=0sofa::gui::qt::viewer::EngineBackendpure virtual; EngineBackend()=defaultsofa::gui::qt::viewer::EngineBackend; initRecorder(int width, int height, unsigned int framerate, unsigned int bitrate, const std::string &codecExtension="""", const std::string &codecName="""")=0sofa::gui::qt::viewer::EngineBackendpure virtual; screenshot(const std::string &filename, int compression_level=-1)=0sofa::gui::qt::viewer::EngineBackendpure virtual; screenshotName()=0sofa::gui::qt::viewer::EngineBackendpure virtual; setBackgroundImage(helper::io::Image *image)=0sofa::gui::qt::viewer::EngineBackendpure virtual; setPickingMethod(sofa::gui::common::PickHandler *pick, sofa::component::setting::ViewerSetting *viewerConf)=0sofa::gui::qt::viewer::EngineBackendpure virtual; setPrefix(const std::string &prefix)=0sofa::gui::qt::viewer::EngineBackendpure virtual; ~EngineBackend()=defaultsofa::gui::qt::viewer::EngineBackendvirtual. Generated on Mon Nov 11 2024 03:25:44 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_engine_backend-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_engine_backend-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::viewer::GLBackend Member List . This is the complete list of members for sofa::gui::qt::viewer::GLBackend, including all inherited members. addFrameRecorder()sofa::gui::qt::viewer::GLBackendvirtual; drawBackgroundImage(const int screenWidth, const int screenHeight)sofa::gui::qt::viewer::GLBackendvirtual; endRecorder()sofa::gui::qt::viewer::GLBackendvirtual; EngineBackend()=defaultsofa::gui::qt::viewer::EngineBackend; GLBackend()sofa::gui::qt::viewer::GLBackend; initRecorder(int width, int height, unsigned int framerate, unsigned int bitrate, const std::string &codecExtension="""", const std::string &codecName="""")sofa::gui::qt::viewer::GLBackendvirtual; screenshot(const std::string &filename, int compression_level=-1)sofa::gui::qt::viewer::GLBackendvirtual; screenshotName()sofa::gui::qt::viewer::GLBackendvirtual; setBackgroundImage(helper::io::Image *image)sofa::gui::qt::viewer::GLBackendvirtual; setPickingMethod(sofa::gui::common::PickHandler *pick, sofa::component::setting::ViewerSetting *viewerConf)sofa::gui::qt::viewer::GLBackendvirtual; setPrefix(const std::string &prefix)sofa::gui::qt::viewer::GLBackendvirtual; ~EngineBackend()=defaultsofa::gui::qt::viewer::EngineBackendvirtual; ~GLBackend()sofa::gui::qt::viewer::GLBackendvirtual. Generated on Mon Nov 11 2024 03:25:44 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_g_l_backend-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_g_l_backend-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::qt::viewer::GLBackend Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gui::qt::viewer::GLBackend Class Reference . #include <GLBackend.h>. Inheritance diagram for sofa::gui::qt::viewer::GLBackend:. [legend]. Public Member Functions;  GLBackend ();  ; virtual ~GLBackend ();  ; void setPickingMethod (sofa::gui::common::PickHandler *pick, sofa::component::setting::ViewerSetting *viewerConf);  ; void setPrefix (const std::string &prefix);  ; const std::string screenshotName ();  ; void screenshot (const std::string &filename, int compression_level=-1);  ; void setBackgroundImage (helper::io::Image *image);  ; void drawBackgroundImage (const int screenWidth, const int screenHeight);  ; bool initRecorder (int width, int height, unsigned int framerate, unsigned int bitrate, const std::string &codecExtension="""", const std::string &codecName="""");  ; void endRecorder ();  ; void addFrameRecorder ();  ;  Public Member Functions inherited from sofa::gui::qt::viewer::EngineBackend;  EngineBackend ()=default;  ; virtual ~EngineBackend ()=default;  . Constructor details. ◆ GLBackend(). sofa::gui::qt::viewer::GLBackend::GLBackend ; (; ). ◆ ~GLBackend(). sofa::gui::qt::viewer::GLBackend::~GLBackend ; (; ). virtual . Function details. ◆ addFrameRecorder(). void sofa::gui::qt::viewer::GLBackend::addFrameRecorder ; (; ). virtual . Implements sofa::gui::qt::viewer::EngineBackend. ◆ drawBackgroundImage(). void sofa::gui::qt::viewer::GLBackend::drawBackgroundImage ; (; const int ; screenWidth, . const int ; screenHeight . ). virtual . Implements sofa::gui::qt::viewer::EngineBackend. ◆ endRecorder(). void sofa::gui::qt::viewer::GLBackend::endRecorder ; (; ). virtual . Implements sofa::gui::qt::viewer::EngineBackend. ◆ initRecorder(). bool sofa::gui::qt::viewer::GLBackend::initRecorder ; (; int ; width, . int ; height, . unsigned int ; framerate, . unsigned int ; bitrate,",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_g_l_backend.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_g_l_backend.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::viewer::OglModelPolicy Member List . This is the complete list of members for sofa::gui::qt::viewer::OglModelPolicy, including all inherited members. classVisualModelsofa::gui::qt::viewer::OglModelPolicyprotected; drawToolsofa::gui::qt::viewer::OglModelPolicyprotected; load() overridesofa::gui::qt::viewer::OglModelPolicyvirtual; unload() overridesofa::gui::qt::viewer::OglModelPolicyvirtual; VisualModelPolicy(core::visual::VisualParams *vparams=core::visual::visualparams::defaultInstance())sofa::gui::qt::viewer::VisualModelPolicy; vparamssofa::gui::qt::viewer::VisualModelPolicyprotected; ~VisualModelPolicy()sofa::gui::qt::viewer::VisualModelPolicyvirtual. Generated on Mon Nov 11 2024 03:25:44 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_ogl_model_policy-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_ogl_model_policy-members.html
Performance,load,load,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::viewer::OglModelPolicy Member List . This is the complete list of members for sofa::gui::qt::viewer::OglModelPolicy, including all inherited members. classVisualModelsofa::gui::qt::viewer::OglModelPolicyprotected; drawToolsofa::gui::qt::viewer::OglModelPolicyprotected; load() overridesofa::gui::qt::viewer::OglModelPolicyvirtual; unload() overridesofa::gui::qt::viewer::OglModelPolicyvirtual; VisualModelPolicy(core::visual::VisualParams *vparams=core::visual::visualparams::defaultInstance())sofa::gui::qt::viewer::VisualModelPolicy; vparamssofa::gui::qt::viewer::VisualModelPolicyprotected; ~VisualModelPolicy()sofa::gui::qt::viewer::VisualModelPolicyvirtual. Generated on Mon Nov 11 2024 03:25:44 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_ogl_model_policy-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_ogl_model_policy-members.html
Modifiability,inherit,inherited,﻿. SOFA API: sofa::gui::qt::viewer::OglModelPolicy Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::gui::qt::viewer::OglModelPolicy Class Reference . #include <OglModelPolicy.h>. Inheritance diagram for sofa::gui::qt::viewer::OglModelPolicy:. [legend]. Protected Attributes; sofa::core::ObjectFactory::ClassEntry::SPtr classVisualModel;  ; std::unique_ptr< sofa::helper::visual::DrawTool > drawTool;  ;  Protected Attributes inherited from sofa::gui::qt::viewer::VisualModelPolicy; sofa::core::visual::VisualParams * vparams;  . Public Member Functions; void load () override;  ; void unload () override;  ;  Public Member Functions inherited from sofa::gui::qt::viewer::VisualModelPolicy;  VisualModelPolicy (core::visual::VisualParams *vparams=core::visual::visualparams::defaultInstance());  ; virtual ~VisualModelPolicy ();  . Attribute details. ◆ classVisualModel. sofa::core::ObjectFactory::ClassEntry::SPtr sofa::gui::qt::viewer::OglModelPolicy::classVisualModel. protected . ◆ drawTool. std::unique_ptr<sofa::helper::visual::DrawTool> sofa::gui::qt::viewer::OglModelPolicy::drawTool. protected . Function details. ◆ load(). void sofa::gui::qt::viewer::OglModelPolicy::load ; (; void ; ). overridevirtual . Implements sofa::gui::qt::viewer::VisualModelPolicy. ◆ unload(). void sofa::gui::qt::viewer::OglModelPolicy::unload ; (; void ; ). overridevirtual . Implements sofa::gui::qt::viewer::VisualModelPolicy. sofaguiqtviewerOglModelPolicy; Generated on Mon Nov 11 2024 03:25:44 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_ogl_model_policy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_ogl_model_policy.html
Performance,load,load,﻿. SOFA API: sofa::gui::qt::viewer::OglModelPolicy Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::gui::qt::viewer::OglModelPolicy Class Reference . #include <OglModelPolicy.h>. Inheritance diagram for sofa::gui::qt::viewer::OglModelPolicy:. [legend]. Protected Attributes; sofa::core::ObjectFactory::ClassEntry::SPtr classVisualModel;  ; std::unique_ptr< sofa::helper::visual::DrawTool > drawTool;  ;  Protected Attributes inherited from sofa::gui::qt::viewer::VisualModelPolicy; sofa::core::visual::VisualParams * vparams;  . Public Member Functions; void load () override;  ; void unload () override;  ;  Public Member Functions inherited from sofa::gui::qt::viewer::VisualModelPolicy;  VisualModelPolicy (core::visual::VisualParams *vparams=core::visual::visualparams::defaultInstance());  ; virtual ~VisualModelPolicy ();  . Attribute details. ◆ classVisualModel. sofa::core::ObjectFactory::ClassEntry::SPtr sofa::gui::qt::viewer::OglModelPolicy::classVisualModel. protected . ◆ drawTool. std::unique_ptr<sofa::helper::visual::DrawTool> sofa::gui::qt::viewer::OglModelPolicy::drawTool. protected . Function details. ◆ load(). void sofa::gui::qt::viewer::OglModelPolicy::load ; (; void ; ). overridevirtual . Implements sofa::gui::qt::viewer::VisualModelPolicy. ◆ unload(). void sofa::gui::qt::viewer::OglModelPolicy::unload ; (; void ; ). overridevirtual . Implements sofa::gui::qt::viewer::VisualModelPolicy. sofaguiqtviewerOglModelPolicy; Generated on Mon Nov 11 2024 03:25:44 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_ogl_model_policy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_ogl_model_policy.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::viewer::SofaViewer Member List . This is the complete list of members for sofa::gui::qt::viewer::SofaViewer, including all inherited members. _backgroundsofa::gui::common::BaseViewerprotected; _fullScreensofa::gui::common::BaseViewerprotected; _mouseInteractorMovingsofa::gui::common::BaseViewerprotected; _mouseInteractorSavedPosXsofa::gui::common::BaseViewerprotected; _mouseInteractorSavedPosYsofa::gui::common::BaseViewerprotected; _navigationModesofa::gui::common::BaseViewerprotected; _screenshotDirectorysofa::gui::common::BaseViewerprotected; _videosofa::gui::common::BaseViewerprotected; ambientColoursofa::gui::common::BaseViewerprotected; backgroundColoursofa::gui::common::BaseViewerprotected; backgroundImageFilesofa::gui::common::BaseViewerprotected; BaseViewer()sofa::gui::common::BaseViewer; captureEvent() overridesofa::gui::qt::viewer::SofaViewervirtual; captureTimersofa::gui::qt::viewer::SofaViewerprotected; colourPickingRenderCallBacksofa::gui::qt::viewer::SofaViewerprotected; configure(sofa::component::setting::ViewerSetting *viewerConf) overridesofa::gui::qt::viewer::SofaViewervirtual; configureViewerTab(QTabWidget *)sofa::gui::qt::viewer::SofaViewerinlinevirtual; currentCamerasofa::gui::common::BaseViewerprotected; drawColourPicking(ColourPickingVisitor::ColourCode)sofa::gui::common::BaseViewerinlinevirtual; drawScene(void)=0sofa::gui::common::BaseViewerpure virtual; fitNodeBBox(sofa::core::objectmodel::BaseNode *)sofa::gui::common::BaseViewervirtual; fitObjectBBox(sofa::core::objectmodel::BaseObject *)sofa::gui::common::BaseViewervirtual; getBackgroundImage()sofa::gui::common::BaseViewer; getHeight()=0sofa::gui::common::BaseViewerpure virtual; getPickHandler()sofa::gui::common::BaseViewer; getQWidget()=0sofa::gui::qt::viewer::SofaViewerpure virtual; getScene()sofa::gui::common::BaseViewervirtual; getSceneFileName()sofa::gui::common::BaseViewe",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_sofa_viewer-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_sofa_viewer-members.html
Performance,load,load,"jectmodel::BaseNode *)sofa::gui::common::BaseViewervirtual; fitObjectBBox(sofa::core::objectmodel::BaseObject *)sofa::gui::common::BaseViewervirtual; getBackgroundImage()sofa::gui::common::BaseViewer; getHeight()=0sofa::gui::common::BaseViewerpure virtual; getPickHandler()sofa::gui::common::BaseViewer; getQWidget()=0sofa::gui::qt::viewer::SofaViewerpure virtual; getScene()sofa::gui::common::BaseViewervirtual; getSceneFileName()sofa::gui::common::BaseViewervirtual; getView(sofa::type::Vec3 &pos, sofa::type::Quat< SReal > &ori) constsofa::gui::common::BaseViewervirtual; getWidth()=0sofa::gui::common::BaseViewerpure virtual; grootsofa::gui::common::BaseViewerprotected; helpString() const =0sofa::gui::qt::viewer::SofaViewerpure virtual; initTexturesDonesofa::gui::common::BaseViewerprotected; isControlPressed() constsofa::gui::qt::viewer::SofaViewer; keyPressEvent(QKeyEvent *e)sofa::gui::qt::viewer::SofaViewervirtual; keyReleaseEvent(QKeyEvent *e)sofa::gui::qt::viewer::SofaViewervirtual; load(void)sofa::gui::common::BaseViewervirtual; m_backendsofa::gui::qt::viewer::SofaViewerprotected; m_bShowAxissofa::gui::common::BaseViewerprotected; m_isControlPressedsofa::gui::qt::viewer::SofaViewerprotected; m_isVideoButtonPressedsofa::gui::common::BaseViewerprotected; mouseEvent(QMouseEvent *e)sofa::gui::qt::viewer::SofaViewervirtual; mouseMoveEvent(QMouseEvent *e)sofa::gui::qt::viewer::SofaViewervirtual; mousePressEvent(QMouseEvent *e)sofa::gui::qt::viewer::SofaViewervirtual; mouseReleaseEvent(QMouseEvent *e)sofa::gui::qt::viewer::SofaViewervirtual; moveRayPickInteractor(int, int)sofa::gui::common::BaseViewerinlinevirtual; moveView(const sofa::type::Vec3 &pos, const sofa::type::Quat< SReal > &ori)sofa::gui::common::BaseViewervirtual; newView()sofa::gui::common::BaseViewervirtual; picksofa::gui::common::BaseViewerprotected; ready()sofa::gui::common::BaseViewervirtual; redraw() overridesofa::gui::qt::viewer::SofaViewerprotectedvirtual; redrawn()=0sofa::gui::qt::viewer::SofaViewerpur",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_sofa_viewer-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_sofa_viewer-members.html
Modifiability,inherit,inherited,﻿. SOFA API: sofa::gui::qt::viewer::SofaViewer Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; Signals |; List of all members . sofa::gui::qt::viewer::SofaViewer Class Referenceabstract . #include <SofaViewer.h>. Inheritance diagram for sofa::gui::qt::viewer::SofaViewer:. [legend]. Protected Attributes; std::unique_ptr< EngineBackend > m_backend;  ; QTimer captureTimer;  ; bool m_isControlPressed;  ; ColourPickingRenderCallBack colourPickingRenderCallBack;  ;  Protected Attributes inherited from sofa::gui::common::BaseViewer; sofa::simulation::Node::SPtr groot;  the sofa root note of the current scene More...;  ; sofa::component::visual::BaseCamera::SPtr currentCamera;  ; std::string sceneFileName;  ; bool _video;  ; bool m_isVideoButtonPressed;  ; bool m_bShowAxis;  ; bool _fullScreen;  ; int _background;  ; bool initTexturesDone;  ; sofa::type::Vec3 backgroundColour;  ; std::string backgroundImageFile;  ; sofa::type::Vec3 ambientColour;  ; std::unique_ptr< PickHandler > pick;  ; int _navigationMode;  ; bool _mouseInteractorMoving;  ; int _mouseInteractorSavedPosX;  ; int _mouseInteractorSavedPosY;  ; std::string _screenshotDirectory;  . Public Member Functions;  SofaViewer ();  ;  ~SofaViewer () override;  ; virtual void removeViewerTab (QTabWidget *);  Optional QTabWidget GUI for a concreate viewer. More...;  ; virtual void configureViewerTab (QTabWidget *);  Optional QTabWidget GUI for a concreate viewer. More...;  ; virtual QWidget * getQWidget ()=0;  ; virtual QString helpString () const =0;  ; void captureEvent () override;  ; virtual void keyPressEvent (QKeyEvent *e);  ; virtual void keyReleaseEvent (QKeyEvent *e);  ; bool isControlPressed () const;  ; virtual void wheelEvent (QWheelEvent *e);  ; virtual void mouseMoveEvent (QMouseEvent *e);  ; virtual void mousePressEvent (QMouseEvent *e);  ; virtual void mouseReleaseEvent (QMouseEvent ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_sofa_viewer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_sofa_viewer.html
Performance,load,load,"ewerConf) override;  ; const std::string screenshotName () override;  ; void setPrefix (const std::string &prefix, bool prependDirectory=true) override;  ; virtual void screenshot (const std::string &filename, int compression_level=-1) override;  ; virtual void setBackgroundImage (std::string imageFileName=std::string(""textures/SOFA_logo.bmp"")) override;  ;  Public Member Functions inherited from sofa::gui::common::BaseViewer;  BaseViewer ();  ; virtual ~BaseViewer ();  ; virtual void drawColourPicking (ColourPickingVisitor::ColourCode);  ; virtual sofa::simulation::Node * getScene ();  ; virtual const std::string & getSceneFileName ();  ; virtual void setSceneFileName (const std::string &f);  ; virtual void setScene (sofa::simulation::Node::SPtr scene, const char *filename=nullptr, bool=false);  ; virtual void setCameraMode (core::visual::VisualParams::CameraType);  ; virtual bool ready ();  ; virtual void wait ();  ask the viewer to resume its activity More...;  ; virtual bool load (void);  Load the viewer. It's the initialisation. More...;  ; virtual bool unload (void);  unload the viewer without delete More...;  ; virtual void viewAll (void)=0;  Recompute viewer's home position so it encompass the whole scene and apply it. More...;  ; virtual void getView (sofa::type::Vec3 &pos, sofa::type::Quat< SReal > &ori) const;  ; virtual void setView (const sofa::type::Vec3 &pos, const sofa::type::Quat< SReal > &ori);  ; virtual void moveView (const sofa::type::Vec3 &pos, const sofa::type::Quat< SReal > &ori);  ; virtual void newView ();  ; virtual void resetView ();  ; virtual void setBackgroundColour (float r, float g, float b);  ; std::string getBackgroundImage ();  ; virtual void saveView ()=0;  ; virtual void setSizeW (int)=0;  ; virtual void setSizeH (int)=0;  ; virtual int getWidth ()=0;  ; virtual int getHeight ()=0;  ; virtual void fitObjectBBox (sofa::core::objectmodel::BaseObject *);  ; virtual void fitNodeBBox (sofa::core::objectmodel::BaseNode *);  ; virtual ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_sofa_viewer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_sofa_viewer.html
Usability,resume,resume,"bool isControlPressed () const;  ; virtual void wheelEvent (QWheelEvent *e);  ; virtual void mouseMoveEvent (QMouseEvent *e);  ; virtual void mousePressEvent (QMouseEvent *e);  ; virtual void mouseReleaseEvent (QMouseEvent *e);  ; virtual bool mouseEvent (QMouseEvent *e);  ; virtual void configure (sofa::component::setting::ViewerSetting *viewerConf) override;  ; const std::string screenshotName () override;  ; void setPrefix (const std::string &prefix, bool prependDirectory=true) override;  ; virtual void screenshot (const std::string &filename, int compression_level=-1) override;  ; virtual void setBackgroundImage (std::string imageFileName=std::string(""textures/SOFA_logo.bmp"")) override;  ;  Public Member Functions inherited from sofa::gui::common::BaseViewer;  BaseViewer ();  ; virtual ~BaseViewer ();  ; virtual void drawColourPicking (ColourPickingVisitor::ColourCode);  ; virtual sofa::simulation::Node * getScene ();  ; virtual const std::string & getSceneFileName ();  ; virtual void setSceneFileName (const std::string &f);  ; virtual void setScene (sofa::simulation::Node::SPtr scene, const char *filename=nullptr, bool=false);  ; virtual void setCameraMode (core::visual::VisualParams::CameraType);  ; virtual bool ready ();  ; virtual void wait ();  ask the viewer to resume its activity More...;  ; virtual bool load (void);  Load the viewer. It's the initialisation. More...;  ; virtual bool unload (void);  unload the viewer without delete More...;  ; virtual void viewAll (void)=0;  Recompute viewer's home position so it encompass the whole scene and apply it. More...;  ; virtual void getView (sofa::type::Vec3 &pos, sofa::type::Quat< SReal > &ori) const;  ; virtual void setView (const sofa::type::Vec3 &pos, const sofa::type::Quat< SReal > &ori);  ; virtual void moveView (const sofa::type::Vec3 &pos, const sofa::type::Quat< SReal > &ori);  ; virtual void newView ();  ; virtual void resetView ();  ; virtual void setBackgroundColour (float r, float g, float b);  ; s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_sofa_viewer.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_sofa_viewer.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::viewer::VisualModelPolicy Member List . This is the complete list of members for sofa::gui::qt::viewer::VisualModelPolicy, including all inherited members. load()=0sofa::gui::qt::viewer::VisualModelPolicypure virtual; unload()=0sofa::gui::qt::viewer::VisualModelPolicypure virtual; VisualModelPolicy(core::visual::VisualParams *vparams=core::visual::visualparams::defaultInstance())sofa::gui::qt::viewer::VisualModelPolicy; vparamssofa::gui::qt::viewer::VisualModelPolicyprotected; ~VisualModelPolicy()sofa::gui::qt::viewer::VisualModelPolicyvirtual. Generated on Mon Nov 11 2024 03:25:44 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_visual_model_policy-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_visual_model_policy-members.html
Performance,load,load,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::viewer::VisualModelPolicy Member List . This is the complete list of members for sofa::gui::qt::viewer::VisualModelPolicy, including all inherited members. load()=0sofa::gui::qt::viewer::VisualModelPolicypure virtual; unload()=0sofa::gui::qt::viewer::VisualModelPolicypure virtual; VisualModelPolicy(core::visual::VisualParams *vparams=core::visual::visualparams::defaultInstance())sofa::gui::qt::viewer::VisualModelPolicy; vparamssofa::gui::qt::viewer::VisualModelPolicyprotected; ~VisualModelPolicy()sofa::gui::qt::viewer::VisualModelPolicyvirtual. Generated on Mon Nov 11 2024 03:25:44 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_visual_model_policy-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_visual_model_policy-members.html
Performance,load,load,﻿. SOFA API: sofa::gui::qt::viewer::VisualModelPolicy Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::gui::qt::viewer::VisualModelPolicy Class Referenceabstract . #include <VisualModelPolicy.h>. Inheritance diagram for sofa::gui::qt::viewer::VisualModelPolicy:. [legend]. Protected Attributes; sofa::core::visual::VisualParams * vparams;  . Public Member Functions;  VisualModelPolicy (core::visual::VisualParams *vparams=core::visual::visualparams::defaultInstance());  ; virtual ~VisualModelPolicy ();  ; virtual void load ()=0;  ; virtual void unload ()=0;  . Attribute details. ◆ vparams. sofa::core::visual::VisualParams* sofa::gui::qt::viewer::VisualModelPolicy::vparams. protected . Constructor details. ◆ VisualModelPolicy(). sofa::gui::qt::viewer::VisualModelPolicy::VisualModelPolicy ; (; core::visual::VisualParams * ; vparams = core::visual::visualparams::defaultInstance()). ◆ ~VisualModelPolicy(). sofa::gui::qt::viewer::VisualModelPolicy::~VisualModelPolicy ; (; ). virtual . Function details. ◆ load(). virtual void sofa::gui::qt::viewer::VisualModelPolicy::load ; (; ). pure virtual . Implemented in sofa::gui::qt::viewer::OglModelPolicy. ◆ unload(). virtual void sofa::gui::qt::viewer::VisualModelPolicy::unload ; (; ). pure virtual . Implemented in sofa::gui::qt::viewer::OglModelPolicy. sofaguiqtviewerVisualModelPolicy; Generated on Mon Nov 11 2024 03:25:44 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_visual_model_policy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_visual_model_policy.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::AboutSOFADialog Member List . This is the complete list of members for sofa::gui::qt::AboutSOFADialog, including all inherited members. AboutSOFADialog(QWidget *parent)sofa::gui::qt::AboutSOFADialog; clickSupportUs()sofa::gui::qt::AboutSOFADialogslot. Generated on Mon Nov 11 2024 03:23:37 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_about_s_o_f_a_dialog-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_about_s_o_f_a_dialog-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::BrowserHistory Member List . This is the complete list of members for sofa::gui::qt::BrowserHistory, including all inherited members. current()sofa::gui::qt::BrowserHistory; m_historysofa::gui::qt::BrowserHistory; pop()sofa::gui::qt::BrowserHistory; push(const std::string &html, const std::string &scene, const std::string &rootdir)sofa::gui::qt::BrowserHistory; size()sofa::gui::qt::BrowserHistory. Generated on Mon Nov 11 2024 03:23:42 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_browser_history-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_browser_history-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::BrowserHistoryEntry Member List . This is the complete list of members for sofa::gui::qt::BrowserHistoryEntry, including all inherited members. BrowserHistoryEntry(const std::string &html, const std::string &scene, const std::string &rootdir)sofa::gui::qt::BrowserHistoryEntryinline; m_htmlfilesofa::gui::qt::BrowserHistoryEntry; m_rootdirsofa::gui::qt::BrowserHistoryEntry; m_scenefilesofa::gui::qt::BrowserHistoryEntry. Generated on Mon Nov 11 2024 03:23:42 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_browser_history_entry-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_browser_history_entry-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::CaptureOptionsWidget Member List . This is the complete list of members for sofa::gui::qt::CaptureOptionsWidget, including all inherited members. CaptureOptionsWidget(QWidget *parent=nullptr)sofa::gui::qt::CaptureOptionsWidget; framerateSpinBoxsofa::gui::qt::CaptureOptionsWidget; frameskipSpinBoxsofa::gui::qt::CaptureOptionsWidget; realtimeCheckBoxsofa::gui::qt::CaptureOptionsWidget. Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_capture_options_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_capture_options_widget-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::ChartsWidget Member List . This is the complete list of members for sofa::gui::qt::ChartsWidget, including all inherited members. ChartsWidget(const std::string &name, QWidget *parent)sofa::gui::qt::ChartsWidget; clear()sofa::gui::qt::ChartsWidget; piesofa::gui::qt::ChartsWidgetprotected; selectionsofa::gui::qt::ChartsWidgetprotected; setChart(std::vector< dataTime > &value, unsigned int s)sofa::gui::qt::ChartsWidget; tablesofa::gui::qt::ChartsWidgetprotected. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_charts_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_charts_widget-members.html
Usability,clear,clear,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::ChartsWidget Member List . This is the complete list of members for sofa::gui::qt::ChartsWidget, including all inherited members. ChartsWidget(const std::string &name, QWidget *parent)sofa::gui::qt::ChartsWidget; clear()sofa::gui::qt::ChartsWidget; piesofa::gui::qt::ChartsWidgetprotected; selectionsofa::gui::qt::ChartsWidgetprotected; setChart(std::vector< dataTime > &value, unsigned int s)sofa::gui::qt::ChartsWidget; tablesofa::gui::qt::ChartsWidgetprotected. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_charts_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_charts_widget-members.html
Usability,clear,clear,"﻿. SOFA API: sofa::gui::qt::ChartsWidget Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::gui::qt::ChartsWidget Class Reference . #include <PieWidget.h>. Inheritance diagram for sofa::gui::qt::ChartsWidget:. [legend]. Protected Attributes; unsigned int selection;  ; PieWidget * pie;  ; QTableWidget * table;  . Public Member Functions;  ChartsWidget (const std::string &name, QWidget *parent);  ; void setChart (std::vector< dataTime > &value, unsigned int s);  ; void clear ();  . Attribute details. ◆ pie. PieWidget* sofa::gui::qt::ChartsWidget::pie. protected . ◆ selection. unsigned int sofa::gui::qt::ChartsWidget::selection. protected . ◆ table. QTableWidget* sofa::gui::qt::ChartsWidget::table. protected . Constructor details. ◆ ChartsWidget(). sofa::gui::qt::ChartsWidget::ChartsWidget ; (; const std::string & ; name, . QWidget * ; parent . ). Function details. ◆ clear(). void sofa::gui::qt::ChartsWidget::clear ; (; ). ◆ setChart(). void sofa::gui::qt::ChartsWidget::setChart ; (; std::vector< dataTime > & ; value, . unsigned int ; s . ). sofaguiqtChartsWidget; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_charts_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_charts_widget.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::ClickableTextEdit Member List . This is the complete list of members for sofa::gui::qt::ClickableTextEdit, including all inherited members. ClickableTextEdit(QWidget *w)sofa::gui::qt::ClickableTextEditinline. Generated on Mon Nov 11 2024 03:23:42 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_clickable_text_edit-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_clickable_text_edit-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::ColourPickingRenderCallBack Member List . This is the complete list of members for sofa::gui::qt::ColourPickingRenderCallBack, including all inherited members. _viewersofa::gui::qt::ColourPickingRenderCallBackprotected; ColourPickingRenderCallBack()sofa::gui::qt::ColourPickingRenderCallBack; ColourPickingRenderCallBack(viewer::SofaViewer *viewer)sofa::gui::qt::ColourPickingRenderCallBack; render(common::ColourPickingVisitor::ColourCode code) overridesofa::gui::qt::ColourPickingRenderCallBackvirtual; ~CallBackRender()sofa::gui::common::CallBackRenderinlinevirtual. Generated on Mon Nov 11 2024 03:23:42 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_colour_picking_render_call_back-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_colour_picking_render_call_back-members.html
Modifiability,inherit,inherited,﻿. SOFA API: sofa::gui::qt::ColourPickingRenderCallBack Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::gui::qt::ColourPickingRenderCallBack Class Reference . #include <PickHandlerCallBacks.h>. Inheritance diagram for sofa::gui::qt::ColourPickingRenderCallBack:. [legend]. Protected Attributes; viewer::SofaViewer * _viewer;  . Public Member Functions;  ColourPickingRenderCallBack ();  ;  ColourPickingRenderCallBack (viewer::SofaViewer *viewer);  ; void render (common::ColourPickingVisitor::ColourCode code) override;  ;  Public Member Functions inherited from sofa::gui::common::CallBackRender; virtual ~CallBackRender ();  . Attribute details. ◆ _viewer. viewer::SofaViewer* sofa::gui::qt::ColourPickingRenderCallBack::_viewer. protected . Constructor details. ◆ ColourPickingRenderCallBack() [1/2]. sofa::gui::qt::ColourPickingRenderCallBack::ColourPickingRenderCallBack ; (; ). ◆ ColourPickingRenderCallBack() [2/2]. sofa::gui::qt::ColourPickingRenderCallBack::ColourPickingRenderCallBack ; (; viewer::SofaViewer * ; viewer). Function details. ◆ render(). void sofa::gui::qt::ColourPickingRenderCallBack::render ; (; common::ColourPickingVisitor::ColourCode ; code). overridevirtual . Implements sofa::gui::common::CallBackRender. sofaguiqtColourPickingRenderCallBack; Generated on Mon Nov 11 2024 03:23:42 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_colour_picking_render_call_back.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_colour_picking_render_call_back.html
Deployability,update,updateDataValue,"y(bool)sofa::gui::qt::DataWidgetsignal; dataValueChanged(QString dataValueString)sofa::gui::qt::DataWidgetsignal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< std::string >inline; getData() constsofa::gui::qt::TDataWidget< std::string >inline; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::DataWidget; MyTData typedefsofa::gui::qt::TDataWidget< std::string >; numColumnWidget()sofa::gui::qt::DataWidgetinlinevirtual; openFileButtonsofa::gui::qt::DataFileNameWidgetprotected; openFilePathsofa::gui::qt::DataFileNameWidgetprotected; raiseDialog()sofa::gui::qt::DataFileNameWidgetprotectedvirtualslot; readFromData()sofa::gui::qt::DataFileNameWidgetprotectedvirtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< std::string >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< std::string >; sofa::gui::qt::DataWidget::setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)sofa::gui::qt::DataFileNameWidgetvirtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setWidgetDirty(bool b=true)sofa::gui::qt::DataWidgetslot; sizeWidget()sofa::gui::qt::DataWidgetinlinevirtual; Tdatasofa::gui::qt::TDataWidget< std::string >protected; TDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::TDataWidget< std::string >inline; updateDataValue()sofa::gui::qt::DataWidgetslot; updateVisibility()sofa::gui::qt::DataWidget; updateWidgetValue()sofa::gui::qt::DataWidgetslot; WidgetDirty(bool)sofa::gui::qt::DataWidgetsignal; writeToData()sofa::gui::qt::DataFileNameWidgetprotectedvirtual; ~DataWidget() overridesofa::gui::qt::DataWidget.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_data_file_name_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_data_file_name_widget-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::DataFileNameWidget Member List . This is the complete list of members for sofa::gui::qt::DataFileNameWidget, including all inherited members. baseDatasofa::gui::qt::DataWidgetprotected; countersofa::gui::qt::DataWidgetprotected; create(RealObject *, CreatorArgument &arg)sofa::gui::qt::TDataWidget< std::string >inlinestatic; sofa::gui::qt::DataWidget::create(T *, const CreatorArgument &arg)sofa::gui::qt::DataWidgetinlinestatic; CreateDataWidget(const DataWidget::CreatorArgument &dwarg)sofa::gui::qt::DataWidgetstatic; createWidgets()sofa::gui::qt::DataFileNameWidgetvirtual; DataFileNameWidget(QWidget *parent, const char *name, core::objectmodel::Data< std::string > *data)sofa::gui::qt::DataFileNameWidgetinline; DataOwnerDirty(bool)sofa::gui::qt::DataWidgetsignal; dataValueChanged(QString dataValueString)sofa::gui::qt::DataWidgetsignal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< std::string >inline; getData() constsofa::gui::qt::TDataWidget< std::string >inline; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::DataWidget; MyTData typedefsofa::gui::qt::TDataWidget< std::string >; numColumnWidget()sofa::gui::qt::DataWidgetinlinevirtual; openFileButtonsofa::gui::qt::DataFileNameWidgetprotected; openFilePathsofa::gui::qt::DataFileNameWidgetprotected; raiseDialog()sofa::gui::qt::DataFileNameWidgetprotectedvirtualslot; readFromData()sofa::gui::qt::DataFileNameWidgetprotectedvirtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< std::string >inlinevirtual",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_data_file_name_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_data_file_name_widget-members.html
Deployability,update,updateVisibility,"st char *name, core::objectmodel::Data< std::string > *data);  ; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< std::string >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< std::string > * getData ();  ; const sofa::core::objectmodel::Data< std::string > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  . Protected Member Functions; virtual void readFromData ();  Implements how update the widgets knowing the data value. More...;  ; virtual void writeToData ();  Implements how to update the data, knowing the widget value. More...;  . Protected Slots; virtual void raiseDialog ();  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< std::string >; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_data_file_name_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_data_file_name_widget.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::qt::DataFileNameWidget Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; Protected Slots |; List of all members . sofa::gui::qt::DataFileNameWidget Class Reference . #include <DataFilenameWidget.h>. Inheritance diagram for sofa::gui::qt::DataFileNameWidget:. [legend]. Protected Attributes; QLineEdit * openFilePath;  ; QPushButton * openFileButton;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< std::string >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  DataFileNameWidget (QWidget *parent, const char *name, core::objectmodel::Data< std::string > *data);  ; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< std::string >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< std::string > * getData ();  ; const sofa::core::objectmodel::Data< std::string > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_data_file_name_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_data_file_name_widget.html
Security,access,accessor,"::string >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  DataFileNameWidget (QWidget *parent, const char *name, core::objectmodel::Data< std::string > *data);  ; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< std::string >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< std::string > * getData ();  ; const sofa::core::objectmodel::Data< std::string > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  . Protected Member Functions; virtual void readFromData ();  Implements how update the widgets knowing the data value. More...;  ; virtual void writeToData ();  Implements how to update the data, knowing the widget value. More...;  . Pro",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_data_file_name_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_data_file_name_widget.html
Deployability,update,updateDataValue,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::DataWidget Member List . This is the complete list of members for sofa::gui::qt::DataWidget, including all inherited members. baseDatasofa::gui::qt::DataWidgetprotected; countersofa::gui::qt::DataWidgetprotected; create(T *, const CreatorArgument &arg)sofa::gui::qt::DataWidgetinlinestatic; CreateDataWidget(const DataWidget::CreatorArgument &dwarg)sofa::gui::qt::DataWidgetstatic; createWidgets()=0sofa::gui::qt::DataWidgetpure virtual; DataOwnerDirty(bool)sofa::gui::qt::DataWidgetsignal; dataValueChanged(QString dataValueString)sofa::gui::qt::DataWidgetsignal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::DataWidget; numColumnWidget()sofa::gui::qt::DataWidgetinlinevirtual; readFromData()=0sofa::gui::qt::DataWidgetprotectedpure virtual; setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)=0sofa::gui::qt::DataWidgetpure virtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setWidgetDirty(bool b=true)sofa::gui::qt::DataWidgetslot; sizeWidget()sofa::gui::qt::DataWidgetinlinevirtual; updateDataValue()sofa::gui::qt::DataWidgetslot; updateVisibility()sofa::gui::qt::DataWidget; updateWidgetValue()sofa::gui::qt::DataWidgetslot; WidgetDirty(bool)sofa::gui::qt::DataWidgetsignal; writeToData()=0sofa::gui::qt::DataWidgetprotectedpure virtual; ~DataWidget() overridesofa::gui::qt::DataWidget. Generated on Mon Nov 11 2024 03:23:37 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_data_widget-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::DataWidget Member List . This is the complete list of members for sofa::gui::qt::DataWidget, including all inherited members. baseDatasofa::gui::qt::DataWidgetprotected; countersofa::gui::qt::DataWidgetprotected; create(T *, const CreatorArgument &arg)sofa::gui::qt::DataWidgetinlinestatic; CreateDataWidget(const DataWidget::CreatorArgument &dwarg)sofa::gui::qt::DataWidgetstatic; createWidgets()=0sofa::gui::qt::DataWidgetpure virtual; DataOwnerDirty(bool)sofa::gui::qt::DataWidgetsignal; dataValueChanged(QString dataValueString)sofa::gui::qt::DataWidgetsignal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::DataWidget; numColumnWidget()sofa::gui::qt::DataWidgetinlinevirtual; readFromData()=0sofa::gui::qt::DataWidgetprotectedpure virtual; setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)=0sofa::gui::qt::DataWidgetpure virtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setWidgetDirty(bool b=true)sofa::gui::qt::DataWidgetslot; sizeWidget()sofa::gui::qt::DataWidgetinlinevirtual; updateDataValue()sofa::gui::qt::DataWidgetslot; updateVisibility()sofa::gui::qt::DataWidget; updateWidgetValue()sofa::gui::qt::DataWidgetslot; WidgetDirty(bool)sofa::gui::qt::DataWidgetsignal; writeToData()=0sofa::gui::qt::DataWidgetprotectedpure virtual; ~DataWidget() overridesofa::gui::qt::DataWidget. Generated on Mon Nov 11 2024 03:23:37 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_data_widget-members.html
Deployability,update,updateVisibility,"ns |; Signals |; Public Slots |; List of all members . sofa::gui::qt::DataWidget Class Referenceabstract . #include <DataWidget.h>; Abstract Interface of a qwidget which allows to edit a data. ; More... Inheritance diagram for sofa::gui::qt::DataWidget:. [legend]; Detailed Description; Abstract Interface of a qwidget which allows to edit a data. . Classes; struct  CreatorArgument;  . Protected Attributes; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual bool createWidgets ()=0;  ; virtual void setDataReadOnly (bool readOnly)=0;  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  . Static Public Member Functions; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  . Protected Member Functions; virtual void readFromData ()=0;  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void writeToData ()=0;  . Signals; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_data_widget.html
Modifiability,config,configure,"tion; Abstract Interface of a qwidget which allows to edit a data. . Classes; struct  CreatorArgument;  . Protected Attributes; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual bool createWidgets ()=0;  ; virtual void setDataReadOnly (bool readOnly)=0;  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  . Static Public Member Functions; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  . Protected Member Functions; virtual void readFromData ()=0;  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void writeToData ()=0;  . Signals; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  . Public Slots; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Attribute details. ◆ baseData. core::objectmodel::BaseData* sofa::gui::qt::DataWidget::baseDa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_data_widget.html
Security,access,accessor,"et Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Signals |; Public Slots |; List of all members . sofa::gui::qt::DataWidget Class Referenceabstract . #include <DataWidget.h>; Abstract Interface of a qwidget which allows to edit a data. ; More... Inheritance diagram for sofa::gui::qt::DataWidget:. [legend]; Detailed Description; Abstract Interface of a qwidget which allows to edit a data. . Classes; struct  CreatorArgument;  . Protected Attributes; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual bool createWidgets ()=0;  ; virtual void setDataReadOnly (bool readOnly)=0;  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  . Static Public Member Functions; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  . Protected Member Functions; virtual void rea",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_data_widget.html
Deployability,update,updateDataValue,"me, core::objectmodel::Data< DisplayFlags > *data, bool root=false)sofa::gui::qt::DisplayFlagsDataWidgetinline; fillFromData()sofa::gui::qt::DataWidgetslot; flagssofa::gui::qt::DisplayFlagsDataWidgetprotected; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< sofa::core::visual::DisplayFlags >inline; getData() constsofa::gui::qt::TDataWidget< sofa::core::visual::DisplayFlags >inline; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; isRootsofa::gui::qt::DisplayFlagsDataWidgetprotected; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::DataWidget; MyTData typedefsofa::gui::qt::TDataWidget< sofa::core::visual::DisplayFlags >; numColumnWidget()sofa::gui::qt::DisplayFlagsDataWidgetinlineprotectedvirtual; readFromData()sofa::gui::qt::DisplayFlagsDataWidgetprotectedvirtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< sofa::core::visual::DisplayFlags >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< sofa::core::visual::DisplayFlags >; sofa::gui::qt::DataWidget::setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)sofa::gui::qt::DisplayFlagsDataWidgetvirtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setWidgetDirty(bool b=true)sofa::gui::qt::DataWidgetslot; sizeWidget()sofa::gui::qt::DisplayFlagsDataWidgetinlineprotectedvirtual; Tdatasofa::gui::qt::TDataWidget< sofa::core::visual::DisplayFlags >protected; TDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::TDataWidget< sofa::core::visual::DisplayFlags >inline; updateDataValue()sofa::gui::qt::DataWidgetslot; updateVisibility()sofa::gui::qt::DataWidget; updateWidgetValue()sofa::gui::qt::DataWidgetslot; WidgetDirty(bool)sofa::gui::qt::DataWidgetsignal; writeToData()sofa::gui::qt::DisplayFlagsDataWidgetprotectedvirtual; ~DataWidget() overridesofa::gui::qt::DataWidget.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_display_flags_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_display_flags_data_widget-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::DisplayFlagsDataWidget Member List . This is the complete list of members for sofa::gui::qt::DisplayFlagsDataWidget, including all inherited members. baseDatasofa::gui::qt::DataWidgetprotected; countersofa::gui::qt::DataWidgetprotected; create(RealObject *, CreatorArgument &arg)sofa::gui::qt::TDataWidget< sofa::core::visual::DisplayFlags >inlinestatic; sofa::gui::qt::DataWidget::create(T *, const CreatorArgument &arg)sofa::gui::qt::DataWidgetinlinestatic; CreateDataWidget(const DataWidget::CreatorArgument &dwarg)sofa::gui::qt::DataWidgetstatic; createWidgets()sofa::gui::qt::DisplayFlagsDataWidgetvirtual; DataOwnerDirty(bool)sofa::gui::qt::DataWidgetsignal; dataValueChanged(QString dataValueString)sofa::gui::qt::DataWidgetsignal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; DisplayFlags typedefsofa::gui::qt::DisplayFlagsDataWidget; DisplayFlagsDataWidget(QWidget *parent, const char *name, core::objectmodel::Data< DisplayFlags > *data, bool root=false)sofa::gui::qt::DisplayFlagsDataWidgetinline; fillFromData()sofa::gui::qt::DataWidgetslot; flagssofa::gui::qt::DisplayFlagsDataWidgetprotected; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< sofa::core::visual::DisplayFlags >inline; getData() constsofa::gui::qt::TDataWidget< sofa::core::visual::DisplayFlags >inline; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; isRootsofa::gui::qt::DisplayFlagsDataWidgetprotected; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::DataWidget; MyTData typedefsofa::gui::qt::TDataWidget< sofa::core::visual::DisplayFlags >; numColumnWidget()sofa::gui::qt::DisplayFlagsDataWidgetinlineprotectedvirtual; readFromDat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_display_flags_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_display_flags_data_widget-members.html
Deployability,update,updateVisibility,"; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< sofa::core::visual::DisplayFlags >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< sofa::core::visual::DisplayFlags > * getData ();  ; const sofa::core::objectmodel::Data< sofa::core::visual::DisplayFlags > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  . Protected Member Functions; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void writeToData ();  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< sofa::core::visual::DisplayFlags >; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited fr",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_display_flags_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_display_flags_data_widget.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::qt::DisplayFlagsDataWidget Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::qt::DisplayFlagsDataWidget Class Reference . #include <DisplayFlagsDataWidget.h>. Inheritance diagram for sofa::gui::qt::DisplayFlagsDataWidget:. [legend]. Protected Attributes; DisplayFlagWidget * flags;  ; bool isRoot;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< sofa::core::visual::DisplayFlags >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  DisplayFlagsDataWidget (QWidget *parent, const char *name, core::objectmodel::Data< DisplayFlags > *data, bool root=false);  ; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< sofa::core::visual::DisplayFlags >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< sofa::core::visual::DisplayFlags > * getData ();  ; const sofa::core::objectmodel::Data< sofa::core::visual::DisplayFlags > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::o",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_display_flags_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_display_flags_data_widget.html
Security,access,accessor," inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  DisplayFlagsDataWidget (QWidget *parent, const char *name, core::objectmodel::Data< DisplayFlags > *data, bool root=false);  ; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< sofa::core::visual::DisplayFlags >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< sofa::core::visual::DisplayFlags > * getData ();  ; const sofa::core::objectmodel::Data< sofa::core::visual::DisplayFlags > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  . Protected Member Functions; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void writeToData ();  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  . Additional Inheri",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_display_flags_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_display_flags_data_widget.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::DisplayFlagWidget Member List . This is the complete list of members for sofa::gui::qt::DisplayFlagWidget, including all inherited members. ALLFLAGS enum valuesofa::gui::qt::DisplayFlagWidget; BEHAVIORMODELS enum valuesofa::gui::qt::DisplayFlagWidget; BOUNDINGCOLLISIONMODELS enum valuesofa::gui::qt::DisplayFlagWidget; change(int, bool)sofa::gui::qt::DisplayFlagWidgetsignal; clicked()sofa::gui::qt::DisplayFlagWidgetsignal; COLLISIONMODELS enum valuesofa::gui::qt::DisplayFlagWidget; DETECTIONOUTPUTS enum valuesofa::gui::qt::DisplayFlagWidget; DisplayFlagWidget(QWidget *parent, const char *name=nullptr, Qt::WindowFlags f=Qt::WindowType::Widget)sofa::gui::qt::DisplayFlagWidget; findChildren(QTreeWidgetItem *, std::vector< QTreeWidgetItem * > &children)sofa::gui::qt::DisplayFlagWidgetprotected; FORCEFIELDS enum valuesofa::gui::qt::DisplayFlagWidget; getFlag(int idx)sofa::gui::qt::DisplayFlagWidgetinline; INTERACTIONFORCEFIELDS enum valuesofa::gui::qt::DisplayFlagWidget; itemShowFlagsofa::gui::qt::DisplayFlagWidgetprotected; mapFlagsofa::gui::qt::DisplayFlagWidgetprotected; MAPPINGS enum valuesofa::gui::qt::DisplayFlagWidget; MECHANICALMAPPINGS enum valuesofa::gui::qt::DisplayFlagWidget; mouseReleaseEvent(QMouseEvent *e) overridesofa::gui::qt::DisplayFlagWidgetprotected; NORMALS enum valuesofa::gui::qt::DisplayFlagWidget; RENDERING enum valuesofa::gui::qt::DisplayFlagWidget; setFlag(int idx, bool value)sofa::gui::qt::DisplayFlagWidgetinline; setTreeWidgetCheckable(QTreeWidgetItem *w, const char *name)sofa::gui::qt::DisplayFlagWidgetprotected; setTreeWidgetNodeCheckable(QTreeWidgetItem *w, const char *name)sofa::gui::qt::DisplayFlagWidgetprotected; VISUAL_FLAG enum namesofa::gui::qt::DisplayFlagWidget; VISUALMODELS enum valuesofa::gui::qt::DisplayFlagWidget; WIREFRAME enum valuesofa::gui::qt::DisplayFlagWidget. Generated on Mon Nov 11 2024 03:23:37 for SOFA API",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_display_flag_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_display_flag_widget-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::DocBrowser Member List . This is the complete list of members for sofa::gui::qt::DocBrowser, including all inherited members. DocBrowser(RealGUI *g)sofa::gui::qt::DocBrowser; flipVisibility()sofa::gui::qt::DocBrowserslot; goTo(const QUrl &u)sofa::gui::qt::DocBrowserslot; goToHome()sofa::gui::qt::DocBrowserslot; goToPrev()sofa::gui::qt::DocBrowserslot; loadHtml(const std::string &filename)sofa::gui::qt::DocBrowser; onLinkClicked(const QUrl &url)sofa::gui::qt::DocBrowserslot; showEvent(QShowEvent *) overridesofa::gui::qt::DocBrowservirtual; visibilityChanged(bool)sofa::gui::qt::DocBrowsersignal; ~DocBrowser() overridesofa::gui::qt::DocBrowser. Generated on Mon Nov 11 2024 03:23:42 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_doc_browser-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_doc_browser-members.html
Performance,load,loadHtml,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::DocBrowser Member List . This is the complete list of members for sofa::gui::qt::DocBrowser, including all inherited members. DocBrowser(RealGUI *g)sofa::gui::qt::DocBrowser; flipVisibility()sofa::gui::qt::DocBrowserslot; goTo(const QUrl &u)sofa::gui::qt::DocBrowserslot; goToHome()sofa::gui::qt::DocBrowserslot; goToPrev()sofa::gui::qt::DocBrowserslot; loadHtml(const std::string &filename)sofa::gui::qt::DocBrowser; onLinkClicked(const QUrl &url)sofa::gui::qt::DocBrowserslot; showEvent(QShowEvent *) overridesofa::gui::qt::DocBrowservirtual; visibilityChanged(bool)sofa::gui::qt::DocBrowsersignal; ~DocBrowser() overridesofa::gui::qt::DocBrowser. Generated on Mon Nov 11 2024 03:23:42 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_doc_browser-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_doc_browser-members.html
Performance,load,loadHtml,﻿. SOFA API: sofa::gui::qt::DocBrowser Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Signals |; Public Slots |; List of all members . sofa::gui::qt::DocBrowser Class Reference . #include <QDocBrowser.h>. Inheritance diagram for sofa::gui::qt::DocBrowser:. [legend]. Public Member Functions;  DocBrowser (RealGUI *g);  ;  ~DocBrowser () override;  ; void loadHtml (const std::string &filename);  ; virtual void showEvent (QShowEvent *) override;  . Signals; void visibilityChanged (bool);  . Public Slots; void onLinkClicked (const QUrl &url);  ; void goToPrev ();  ; void goTo (const QUrl &u);  ; void goToHome ();  ; void flipVisibility ();  . Constructor details. ◆ DocBrowser(). sofa::gui::qt::DocBrowser::DocBrowser ; (; RealGUI * ; g). ◆ ~DocBrowser(). sofa::gui::qt::DocBrowser::~DocBrowser ; (; ). override . Function details. ◆ flipVisibility. void sofa::gui::qt::DocBrowser::flipVisibility ; (; ). slot . ◆ goTo. void sofa::gui::qt::DocBrowser::goTo ; (; const QUrl & ; u). slot . ◆ goToHome. void sofa::gui::qt::DocBrowser::goToHome ; (; ). slot . ◆ goToPrev. void sofa::gui::qt::DocBrowser::goToPrev ; (; ). slot . ◆ loadHtml(). void sofa::gui::qt::DocBrowser::loadHtml ; (; const std::string & ; filename). ◆ onLinkClicked. void sofa::gui::qt::DocBrowser::onLinkClicked ; (; const QUrl & ; url). slot . ◆ showEvent(). void sofa::gui::qt::DocBrowser::showEvent ; (; QShowEvent * ; ). overridevirtual . ◆ visibilityChanged. void sofa::gui::qt::DocBrowser::visibilityChanged ; (; bool ; ). signal . sofaguiqtDocBrowser; Generated on Mon Nov 11 2024 03:23:42 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_doc_browser.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_doc_browser.html
Deployability,update,updateDataValue,"T >inlinestatic; sofa::gui::qt::DataWidget::create(T *, const CreatorArgument &arg)sofa::gui::qt::DataWidgetinlinestatic; CreateDataWidget(const DataWidget::CreatorArgument &dwarg)sofa::gui::qt::DataWidgetstatic; createWidgets()sofa::gui::qt::GenericDataWidget< DATA, WIDGET >inlinevirtual; DataOwnerDirty(bool)sofa::gui::qt::DataWidgetsignal; dataValueChanged(QString dataValueString)sofa::gui::qt::DataWidgetsignal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; GenericDataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::GenericDataWidget< DATA, WIDGET >inline; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_datasofa::gui::qt::GenericDataWidget< DATA, WIDGET >protected; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; m_widgetsofa::gui::qt::GenericDataWidget< DATA, WIDGET >protected; MyData typedefsofa::gui::qt::GenericDataWidget< DATA, WIDGET >; MyWidget typedefsofa::gui::qt::GenericDataWidget< DATA, WIDGET >; numColumnWidget()sofa::gui::qt::DataWidgetinlinevirtual; readFromData()sofa::gui::qt::GenericDataWidget< DATA, WIDGET >inlinevirtual; setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)sofa::gui::qt::GenericDataWidget< DATA, WIDGET >inlinevirtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setWidgetDirty(bool b=true)sofa::gui::qt::DataWidgetslot; sizeWidget()sofa::gui::qt::DataWidgetinlinevirtual; updateDataValue()sofa::gui::qt::DataWidgetslot; updateVisibility()sofa::gui::qt::DataWidget; updateWidgetValue()sofa::gui::qt::DataWidgetslot; WidgetDirty(bool)sofa::gui::qt::DataWidgetsignal; writeToData()sofa::gui::qt::GenericDataWidget< DATA, WIDGET >inlinevirtual; ~DataWidget() overridesofa::gui::qt::DataWidget.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_generic_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_generic_data_widget-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::GenericDataWidget< DATA, WIDGET > Member List . This is the complete list of members for sofa::gui::qt::GenericDataWidget< DATA, WIDGET >, including all inherited members. baseDatasofa::gui::qt::DataWidgetprotected; countersofa::gui::qt::DataWidgetprotected; create(RealObject *, CreatorArgument &arg)sofa::gui::qt::GenericDataWidget< DATA, WIDGET >inlinestatic; sofa::gui::qt::DataWidget::create(T *, const CreatorArgument &arg)sofa::gui::qt::DataWidgetinlinestatic; CreateDataWidget(const DataWidget::CreatorArgument &dwarg)sofa::gui::qt::DataWidgetstatic; createWidgets()sofa::gui::qt::GenericDataWidget< DATA, WIDGET >inlinevirtual; DataOwnerDirty(bool)sofa::gui::qt::DataWidgetsignal; dataValueChanged(QString dataValueString)sofa::gui::qt::DataWidgetsignal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; GenericDataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::GenericDataWidget< DATA, WIDGET >inline; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_datasofa::gui::qt::GenericDataWidget< DATA, WIDGET >protected; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; m_widgetsofa::gui::qt::GenericDataWidget< DATA, WIDGET >protected; MyData typedefsofa::gui::qt::GenericDataWidget< DATA, WIDGET >; MyWidget typedefsofa::gui::qt::GenericDataWidget< DATA, WIDGET >; numColumnWidget()sofa::gui::qt::DataWidgetinlinevirtual; readFromData()sofa::gui::qt::GenericDataWidget< DATA, WIDGET >inlinevirtual; setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)sofa::gui::qt::GenericDataWidget< DATA, WIDGET >inlinevirtual; setFilled(bool value",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_generic_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_generic_data_widget-members.html
Deployability,update,updateVisibility,"illed;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  GenericDataWidget (QWidget *parent, const char *name, MyData *d);  ; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void writeToData ();  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  . Static Public Member Functions; template<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  . Additional Inherited Members;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void update",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_generic_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_generic_data_widget.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::qt::GenericDataWidget< DATA, WIDGET > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::gui::qt::GenericDataWidget< DATA, WIDGET > Class Template Reference . #include <GenericWidget.h>. Inheritance diagram for sofa::gui::qt::GenericDataWidget< DATA, WIDGET >:. [legend]. Protected Attributes; MyData * m_data;  ; MyWidget * m_widget;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  GenericDataWidget (QWidget *parent, const char *name, MyData *d);  ; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void writeToData ();  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_generic_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_generic_data_widget.html
Security,access,accessor,"DataWidget< DATA, WIDGET >:. [legend]. Protected Attributes; MyData * m_data;  ; MyWidget * m_widget;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  GenericDataWidget (QWidget *parent, const char *name, MyData *d);  ; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void writeToData ();  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  . Static Public Member Functions; template<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  . Additional Inherited Members;  Sig",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_generic_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_generic_data_widget.html
Availability,error,error,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::GenGraphForm Member List . This is the complete list of members for sofa::gui::qt::GenGraphForm, including all inherited members. addTask(QStringList argv)sofa::gui::qt::GenGraphFormprotected; change()sofa::gui::qt::GenGraphFormvirtualslot; changeFilter()sofa::gui::qt::GenGraphFormvirtualslot; currentTasksofa::gui::qt::GenGraphFormprotected; doBrowse()sofa::gui::qt::GenGraphFormvirtualslot; doClose()sofa::gui::qt::GenGraphFormvirtualslot; doDisplay()sofa::gui::qt::GenGraphFormvirtualslot; doExport()sofa::gui::qt::GenGraphFormvirtualslot; exportedFilesofa::gui::qt::GenGraphFormprotected; GenGraphForm(QWidget *parent=Q_NULLPTR)sofa::gui::qt::GenGraphForm; getCurrentFilter()sofa::gui::qt::GenGraphFormprotected; graphsofa::gui::qt::GenGraphFormprotected; killAllTasks()sofa::gui::qt::GenGraphFormprotected; presetFilterssofa::gui::qt::GenGraphFormprotected; runTask()sofa::gui::qt::GenGraphFormprotected; setFilter()sofa::gui::qt::GenGraphFormvirtualslot; setScene(sofa::simulation::Node *scene)sofa::gui::qt::GenGraphForm; settingFiltersofa::gui::qt::GenGraphFormprotected; taskError(QProcess::ProcessError error)sofa::gui::qt::GenGraphFormvirtualslot; taskFinished(int exitCode, QProcess::ExitStatus exitStatus)sofa::gui::qt::GenGraphFormvirtualslot; taskssofa::gui::qt::GenGraphFormprotected. Generated on Mon Nov 11 2024 03:23:37 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_gen_graph_form-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_gen_graph_form-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::GenGraphForm Member List . This is the complete list of members for sofa::gui::qt::GenGraphForm, including all inherited members. addTask(QStringList argv)sofa::gui::qt::GenGraphFormprotected; change()sofa::gui::qt::GenGraphFormvirtualslot; changeFilter()sofa::gui::qt::GenGraphFormvirtualslot; currentTasksofa::gui::qt::GenGraphFormprotected; doBrowse()sofa::gui::qt::GenGraphFormvirtualslot; doClose()sofa::gui::qt::GenGraphFormvirtualslot; doDisplay()sofa::gui::qt::GenGraphFormvirtualslot; doExport()sofa::gui::qt::GenGraphFormvirtualslot; exportedFilesofa::gui::qt::GenGraphFormprotected; GenGraphForm(QWidget *parent=Q_NULLPTR)sofa::gui::qt::GenGraphForm; getCurrentFilter()sofa::gui::qt::GenGraphFormprotected; graphsofa::gui::qt::GenGraphFormprotected; killAllTasks()sofa::gui::qt::GenGraphFormprotected; presetFilterssofa::gui::qt::GenGraphFormprotected; runTask()sofa::gui::qt::GenGraphFormprotected; setFilter()sofa::gui::qt::GenGraphFormvirtualslot; setScene(sofa::simulation::Node *scene)sofa::gui::qt::GenGraphForm; settingFiltersofa::gui::qt::GenGraphFormprotected; taskError(QProcess::ProcessError error)sofa::gui::qt::GenGraphFormvirtualslot; taskFinished(int exitCode, QProcess::ExitStatus exitStatus)sofa::gui::qt::GenGraphFormvirtualslot; taskssofa::gui::qt::GenGraphFormprotected. Generated on Mon Nov 11 2024 03:23:37 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_gen_graph_form-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_gen_graph_form-members.html
Availability,error,error,"47. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; Public Slots |; List of all members . sofa::gui::qt::GenGraphForm Class Reference . #include <GenGraphForm.h>. Inheritance diagram for sofa::gui::qt::GenGraphForm:. [legend]. Protected Attributes; QString exportedFile;  ; sofa::simulation::Node * graph;  ; std::list< QStringList > tasks;  ; QProcess * currentTask;  ; std::map< std::string, std::set< std::string > > presetFilters;  ; bool settingFilter;  . Public Member Functions;  GenGraphForm (QWidget *parent=Q_NULLPTR);  ; void setScene (sofa::simulation::Node *scene);  . Protected Member Functions; void addTask (QStringList argv);  ; void runTask ();  ; void killAllTasks ();  ; std::set< std::string > getCurrentFilter ();  . Public Slots; virtual void change ();  ; virtual void doBrowse ();  ; virtual void doExport ();  ; virtual void doDisplay ();  ; virtual void doClose ();  ; virtual void taskFinished (int exitCode, QProcess::ExitStatus exitStatus);  ; virtual void taskError (QProcess::ProcessError error);  ; virtual void changeFilter ();  ; virtual void setFilter ();  . Attribute details. ◆ currentTask. QProcess* sofa::gui::qt::GenGraphForm::currentTask. protected . ◆ exportedFile. QString sofa::gui::qt::GenGraphForm::exportedFile. protected . ◆ graph. sofa::simulation::Node* sofa::gui::qt::GenGraphForm::graph. protected . ◆ presetFilters. std::map<std::string, std::set<std::string> > sofa::gui::qt::GenGraphForm::presetFilters. protected . ◆ settingFilter. bool sofa::gui::qt::GenGraphForm::settingFilter. protected . ◆ tasks. std::list<QStringList> sofa::gui::qt::GenGraphForm::tasks. protected . Constructor details. ◆ GenGraphForm(). sofa::gui::qt::GenGraphForm::GenGraphForm ; (; QWidget * ; parent = Q_NULLPTR). Function details. ◆ addTask(). void sofa::gui::qt::GenGraphForm::addTask ; (; QStringList ; argv). protected . ◆ change. void sofa::gui::qt::GenGraphForm::change ; (; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_gen_graph_form.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_gen_graph_form.html
Deployability,update,updateDataValue,"tData() constsofa::gui::qt::TDataWidget< T >inline; GraphDataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::GraphDataWidget< T >inline; helper typedefsofa::gui::qt::SimpleDataWidget< T, graph_data_widget_container< T > >protected; Inherit typedefsofa::gui::qt::GraphDataWidget< T >; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::GraphDataWidget< T >; MyTData typedefsofa::gui::qt::SimpleDataWidget< T, graph_data_widget_container< T > >; numColumnWidget()sofa::gui::qt::GraphDataWidget< T >inlinevirtual; readFromData()sofa::gui::qt::SimpleDataWidget< T, graph_data_widget_container< T > >inlinevirtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< T >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< T >; sofa::gui::qt::DataWidget::setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, graph_data_widget_container< T > >inlinevirtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, graph_data_widget_container< T > >inlinevirtual; setWidgetDirty(bool b=true)sofa::gui::qt::DataWidgetslot; SimpleDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::SimpleDataWidget< T, graph_data_widget_container< T > >inline; sizeWidget()sofa::gui::qt::GraphDataWidget< T >inlinevirtual; Tdatasofa::gui::qt::TDataWidget< T >protected; TDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::TDataWidget< T >inline; updateDataValue()sofa::gui::qt::DataWidgetslot; updateVisibility()sofa::gui::qt::DataWidget; updateWidgetValue()sofa::gui::qt::DataWidgetslot; WidgetDirty(bool)sofa::gui::qt::DataWidgetsignal; writeToData()sofa::gui::qt::SimpleDataWidget< T, graph_data_widget_container< T > >inlinevirtual; ~DataWidget() overridesofa::gui::qt::DataWidget.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_data_widget-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::GraphDataWidget< T > Member List . This is the complete list of members for sofa::gui::qt::GraphDataWidget< T >, including all inherited members. baseDatasofa::gui::qt::DataWidgetprotected; containersofa::gui::qt::SimpleDataWidget< T, graph_data_widget_container< T > >protected; countersofa::gui::qt::DataWidgetprotected; create(RealObject *, CreatorArgument &arg)sofa::gui::qt::TDataWidget< T >inlinestatic; sofa::gui::qt::DataWidget::create(T *, const CreatorArgument &arg)sofa::gui::qt::DataWidgetinlinestatic; CreateDataWidget(const DataWidget::CreatorArgument &dwarg)sofa::gui::qt::DataWidgetstatic; createWidgets()sofa::gui::qt::SimpleDataWidget< T, graph_data_widget_container< T > >inlinevirtual; data_type typedefsofa::gui::qt::SimpleDataWidget< T, graph_data_widget_container< T > >protected; DataOwnerDirty(bool)sofa::gui::qt::DataWidgetsignal; dataValueChanged(QString dataValueString)sofa::gui::qt::DataWidgetsignal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< T >inline; getData() constsofa::gui::qt::TDataWidget< T >inline; GraphDataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::GraphDataWidget< T >inline; helper typedefsofa::gui::qt::SimpleDataWidget< T, graph_data_widget_container< T > >protected; Inherit typedefsofa::gui::qt::GraphDataWidget< T >; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::GraphDataWidget< T >; MyTData typedefsofa::gui::qt::SimpleDataWidget< T, graph_data_widget_container< T > >; numColumnWidget()sofa:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_data_widget-members.html
Deployability,update,updateVisibility,"createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void setReadOnly (bool readOnly);  ; virtual void writeToData ();  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< T > * getData ();  ; const sofa::core::objectmodel::Data< T > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::gui::qt::SimpleDataWidget< T, graph_data_widget_container< T > >; graph_data_widget_container< T > container;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< T >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  ;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >; template<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherit",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_data_widget.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::qt::GraphDataWidget< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gui::qt::GraphDataWidget< T > Class Template Reference . #include <GraphDataWidget.h>. Inheritance diagram for sofa::gui::qt::GraphDataWidget< T >:. [legend]. Public Member Functions;  GraphDataWidget (QWidget *parent, const char *name, MyData *d);  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  ;  Public Member Functions inherited from sofa::gui::qt::SimpleDataWidget< T, graph_data_widget_container< T > >;  SimpleDataWidget (QWidget *parent, const char *name, MyTData *d);  ; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void setReadOnly (bool readOnly);  ; virtual void writeToData ();  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< T > * getData ();  ; const sofa::core::objectmodel::Data< T > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_data_widget.html
Security,access,accessor,"signed int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  ;  Public Member Functions inherited from sofa::gui::qt::SimpleDataWidget< T, graph_data_widget_container< T > >;  SimpleDataWidget (QWidget *parent, const char *name, MyTData *d);  ; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void setReadOnly (bool readOnly);  ; virtual void writeToData ();  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< T > * getData ();  ; const sofa::core::objectmodel::Data< T > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::gui::qt::SimpleDataWidget< T, graph_data_widget_container< T > >; graph_data_widget_container< T > container;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< T >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * b",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_data_widget.html
Deployability,update,updateDataValue,"t::GraphDataWidget< T >inline; GraphDataWidget_Linear(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::GraphDataWidget_Linear< T >inline; helper typedefsofa::gui::qt::SimpleDataWidget< T, graph_data_widget_container< T > >protected; Inherit typedefsofa::gui::qt::GraphDataWidget< T >; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::GraphDataWidget_Linear< T >; MyTData typedefsofa::gui::qt::SimpleDataWidget< T, graph_data_widget_container< T > >; numColumnWidget()sofa::gui::qt::GraphDataWidget< T >inlinevirtual; readFromData()sofa::gui::qt::SimpleDataWidget< T, graph_data_widget_container< T > >inlinevirtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< T >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< T >; sofa::gui::qt::DataWidget::setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, graph_data_widget_container< T > >inlinevirtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, graph_data_widget_container< T > >inlinevirtual; setWidgetDirty(bool b=true)sofa::gui::qt::DataWidgetslot; SimpleDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::SimpleDataWidget< T, graph_data_widget_container< T > >inline; sizeWidget()sofa::gui::qt::GraphDataWidget< T >inlinevirtual; Tdatasofa::gui::qt::TDataWidget< T >protected; TDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::TDataWidget< T >inline; updateDataValue()sofa::gui::qt::DataWidgetslot; updateVisibility()sofa::gui::qt::DataWidget; updateWidgetValue()sofa::gui::qt::DataWidgetslot; WidgetDirty(bool)sofa::gui::qt::DataWidgetsignal; writeToData()sofa::gui::qt::SimpleDataWidget< T, graph_data_widget_container< T > >inlinevirtual; ~DataWidget() overridesofa::gui::qt::DataWidget.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_data_widget___linear-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_data_widget___linear-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::GraphDataWidget_Linear< T > Member List . This is the complete list of members for sofa::gui::qt::GraphDataWidget_Linear< T >, including all inherited members. baseDatasofa::gui::qt::DataWidgetprotected; containersofa::gui::qt::SimpleDataWidget< T, graph_data_widget_container< T > >protected; countersofa::gui::qt::DataWidgetprotected; create(RealObject *, CreatorArgument &arg)sofa::gui::qt::TDataWidget< T >inlinestatic; sofa::gui::qt::DataWidget::create(T *, const CreatorArgument &arg)sofa::gui::qt::DataWidgetinlinestatic; CreateDataWidget(const DataWidget::CreatorArgument &dwarg)sofa::gui::qt::DataWidgetstatic; createWidgets()sofa::gui::qt::GraphDataWidget_Linear< T >inlinevirtual; data_type typedefsofa::gui::qt::SimpleDataWidget< T, graph_data_widget_container< T > >protected; DataOwnerDirty(bool)sofa::gui::qt::DataWidgetsignal; dataValueChanged(QString dataValueString)sofa::gui::qt::DataWidgetsignal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< T >inline; getData() constsofa::gui::qt::TDataWidget< T >inline; GraphDataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::GraphDataWidget< T >inline; GraphDataWidget_Linear(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::GraphDataWidget_Linear< T >inline; helper typedefsofa::gui::qt::SimpleDataWidget< T, graph_data_widget_container< T > >protected; Inherit typedefsofa::gui::qt::GraphDataWidget< T >; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::GraphDataWidget_Linear< T >",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_data_widget___linear-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_data_widget___linear-members.html
Deployability,update,updateVisibility,"createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void setReadOnly (bool readOnly);  ; virtual void writeToData ();  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< T > * getData ();  ; const sofa::core::objectmodel::Data< T > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::gui::qt::SimpleDataWidget< T, graph_data_widget_container< T > >; graph_data_widget_container< T > container;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< T >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  ;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >; template<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherit",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_data_widget___linear.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_data_widget___linear.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::qt::GraphDataWidget_Linear< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gui::qt::GraphDataWidget_Linear< T > Class Template Reference . #include <GraphDataWidget.h>. Inheritance diagram for sofa::gui::qt::GraphDataWidget_Linear< T >:. [legend]. Public Member Functions;  GraphDataWidget_Linear (QWidget *parent, const char *name, MyData *d);  ; virtual bool createWidgets ();  ;  Public Member Functions inherited from sofa::gui::qt::GraphDataWidget< T >;  GraphDataWidget (QWidget *parent, const char *name, MyData *d);  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  ;  Public Member Functions inherited from sofa::gui::qt::SimpleDataWidget< T, graph_data_widget_container< T > >;  SimpleDataWidget (QWidget *parent, const char *name, MyTData *d);  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void setReadOnly (bool readOnly);  ; virtual void writeToData ();  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< T > * getData ();  ; const sofa::core::objectmodel::Data< T > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_data_widget___linear.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_data_widget___linear.html
Security,access,accessor,"r *name, MyData *d);  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  ;  Public Member Functions inherited from sofa::gui::qt::SimpleDataWidget< T, graph_data_widget_container< T > >;  SimpleDataWidget (QWidget *parent, const char *name, MyTData *d);  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void setReadOnly (bool readOnly);  ; virtual void writeToData ();  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< T > * getData ();  ; const sofa::core::objectmodel::Data< T > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::gui::qt::SimpleDataWidget< T, graph_data_widget_container< T > >; graph_data_widget_container< T > container;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< T >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * b",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_data_widget___linear.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_data_widget___linear.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::GraphListenerQListView Member List . This is the complete list of members for sofa::gui::qt::GraphListenerQListView, including all inherited members. addDatas(core::objectmodel::BaseObject *parent)sofa::gui::qt::GraphListenerQListViewvirtual; createItem(QTreeWidgetItem *parent)sofa::gui::qt::GraphListenerQListView; datassofa::gui::qt::GraphListenerQListView; findData(const QTreeWidgetItem *item)sofa::gui::qt::GraphListenerQListView; findObject(const QTreeWidgetItem *item)sofa::gui::qt::GraphListenerQListView; GraphListenerQListView(SofaSceneGraphWidget *w)sofa::gui::qt::GraphListenerQListViewinline; itemssofa::gui::qt::GraphListenerQListView; listenerssofa::gui::qt::GraphListenerQListView; nameColorsofa::gui::qt::GraphListenerQListViewinlinestatic; nodeWithMultipleParentssofa::gui::qt::GraphListenerQListView; onBeginAddChild(Node *parent, Node *child) overridesofa::gui::qt::GraphListenerQListViewvirtual; onBeginAddObject(Node *parent, core::objectmodel::BaseObject *object) overridesofa::gui::qt::GraphListenerQListViewvirtual; onBeginAddSlave(core::objectmodel::BaseObject *master, core::objectmodel::BaseObject *slave) overridesofa::gui::qt::GraphListenerQListViewvirtual; onBeginRemoveChild(Node *parent, Node *child) overridesofa::gui::qt::GraphListenerQListViewvirtual; onBeginRemoveObject(Node *, core::objectmodel::BaseObject *object) overridesofa::gui::qt::GraphListenerQListViewvirtual; onBeginRemoveSlave(core::objectmodel::BaseObject *master, core::objectmodel::BaseObject *slave) overridesofa::gui::qt::GraphListenerQListViewvirtual; onEndAddChild(Node *parent, Node *child)sofa::simulation::MutationListenervirtual; onEndAddObject(Node *parent, core::objectmodel::BaseObject *object)sofa::simulation::MutationListenervirtual; onEndAddSlave(core::objectmodel::BaseObject *master, core::objectmodel::BaseObject *slave)sofa::simulation::MutationListenervirtual; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_listener_q_list_view-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_listener_q_list_view-members.html
Modifiability,inherit,inherited,"timap< QTreeWidgetItem *, QTreeWidgetItem * > nodeWithMultipleParents;  . Static Public Attributes; static QColor nameColor { 120, 120, 120};  . Public Member Functions;  GraphListenerQListView (SofaSceneGraphWidget *w);  ;  ~GraphListenerQListView () override;  ; QTreeWidgetItem * createItem (QTreeWidgetItem *parent);  ; virtual void onBeginAddChild (Node *parent, Node *child) override;  ; virtual void onBeginRemoveChild (Node *parent, Node *child) override;  ; virtual void onBeginAddObject (Node *parent, core::objectmodel::BaseObject *object) override;  ; virtual void onBeginRemoveObject (Node *, core::objectmodel::BaseObject *object) override;  ; virtual void onBeginAddSlave (core::objectmodel::BaseObject *master, core::objectmodel::BaseObject *slave) override;  ; virtual void onBeginRemoveSlave (core::objectmodel::BaseObject *master, core::objectmodel::BaseObject *slave) override;  ; virtual void sleepChanged (Node *node) override;  ; virtual void addDatas (core::objectmodel::BaseObject *parent);  ; virtual void removeDatas (core::objectmodel::BaseObject *parent);  ; core::objectmodel::Base * findObject (const QTreeWidgetItem *item);  ; core::objectmodel::BaseData * findData (const QTreeWidgetItem *item);  ;  Public Member Functions inherited from sofa::simulation::MutationListener; virtual ~MutationListener ();  ; virtual void onEndAddChild (Node *parent, Node *child);  ; virtual void onEndRemoveChild (Node *parent, Node *child);  ; virtual void onEndAddObject (Node *parent, core::objectmodel::BaseObject *object);  ; virtual void onEndRemoveObject (Node *parent, core::objectmodel::BaseObject *object);  ; virtual void onEndAddSlave (core::objectmodel::BaseObject *master, core::objectmodel::BaseObject *slave);  ; virtual void onEndRemoveSlave (core::objectmodel::BaseObject *master, core::objectmodel::BaseObject *slave);  . Attribute details. ◆ datas. std::map<core::objectmodel::BaseData*, QTreeWidgetItem* > sofa::gui::qt::GraphListenerQListView::datas. ◆ items. st",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_listener_q_list_view.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_listener_q_list_view.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::GraphOptionWidget Member List . This is the complete list of members for sofa::gui::qt::GraphOptionWidget, including all inherited members. checkBoxsofa::gui::qt::GraphOptionWidgetprotected; exportGNUPlot()sofa::gui::qt::GraphOptionWidgetslot; exportGNUPLOTButtonsofa::gui::qt::GraphOptionWidgetprotected; exportImage()sofa::gui::qt::GraphOptionWidgetslot; exportImageButtonsofa::gui::qt::GraphOptionWidgetprotected; fileGNUPLOTLineEditsofa::gui::qt::GraphOptionWidgetprotected; fileImageLineEditsofa::gui::qt::GraphOptionWidgetprotected; findGNUPLOTFilesofa::gui::qt::GraphOptionWidgetprotected; findImageFilesofa::gui::qt::GraphOptionWidgetprotected; graphsofa::gui::qt::GraphOptionWidgetprotected; GraphOptionWidget(const std::string &dataName, GraphSetting *graphConf)sofa::gui::qt::GraphOptionWidget; idfilesofa::gui::qt::GraphOptionWidgetprotected; isCheckedBox()sofa::gui::qt::GraphOptionWidgetinlineslot; openFindFileDialog()sofa::gui::qt::GraphOptionWidgetslot. Generated on Mon Nov 11 2024 03:23:42 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_option_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_option_widget-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::GraphSetting Member List . This is the complete list of members for sofa::gui::qt::GraphSetting, including all inherited members. exportGNUPlot(const std::string &baseFileName) const =0sofa::gui::qt::GraphSettingpure virtual; exportImage(const std::string &baseFileName) const =0sofa::gui::qt::GraphSettingpure virtual; ~GraphSetting()sofa::gui::qt::GraphSettinginlinevirtual. Generated on Mon Nov 11 2024 03:23:42 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_setting-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_setting-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::GraphVisitor Member List . This is the complete list of members for sofa::gui::qt::GraphVisitor, including all inherited members. addComment(QTreeWidgetItem *element, QTreeWidgetItem *elementAbove, std::string comment)sofa::gui::qt::GraphVisitor; addInformation(QTreeWidgetItem *element, std::string name, std::string info)sofa::gui::qt::GraphVisitor; addNode(QTreeWidgetItem *parent, QTreeWidgetItem *elementAbove, std::string info)sofa::gui::qt::GraphVisitor; addTime(QTreeWidgetItem *element, std::string info)sofa::gui::qt::GraphVisitor; clear()sofa::gui::qt::GraphVisitorinline; componentsTimesofa::gui::qt::GraphVisitorprotected; componentsTimeMaxsofa::gui::qt::GraphVisitorprotected; componentsTimeTotalsofa::gui::qt::GraphVisitorprotected; getTime(const tinyxml2::XMLAttribute *attribute) constsofa::gui::qt::GraphVisitorinline; getTotalTime(tinyxml2::XMLNode *node) constsofa::gui::qt::GraphVisitor; graphsofa::gui::qt::GraphVisitorprotected; GraphVisitor(WindowVisitor *w)sofa::gui::qt::GraphVisitorinline; initSizesofa::gui::qt::GraphVisitorprotected; levelsofa::gui::qt::GraphVisitorprotected; load(std::string &file)sofa::gui::qt::GraphVisitor; openAttribute(tinyxml2::XMLElement *element, QTreeWidgetItem *item)sofa::gui::qt::GraphVisitorprotected; openNode(tinyxml2::XMLNode *node, QTreeWidgetItem *parent, QTreeWidgetItem *elementAbove)sofa::gui::qt::GraphVisitorprotected; openTime(tinyxml2::XMLNode *element, QTreeWidgetItem *item)sofa::gui::qt::GraphVisitorprotected; setGraph(QTreeWidget *g)sofa::gui::qt::GraphVisitorinline; timeComponentsBelowsofa::gui::qt::GraphVisitorprotected; totalTimesofa::gui::qt::GraphVisitorprotected; totalTimeMaxsofa::gui::qt::GraphVisitorprotected; visitedNodesofa::gui::qt::GraphVisitorprotected; visitorsTimesofa::gui::qt::GraphVisitorprotected; visitorsTimeMaxsofa::gui::qt::GraphVisitorprotected; visitorsTimeTotalsofa::gui::qt::Gr",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_visitor-members.html
Performance,load,load,"Member List . This is the complete list of members for sofa::gui::qt::GraphVisitor, including all inherited members. addComment(QTreeWidgetItem *element, QTreeWidgetItem *elementAbove, std::string comment)sofa::gui::qt::GraphVisitor; addInformation(QTreeWidgetItem *element, std::string name, std::string info)sofa::gui::qt::GraphVisitor; addNode(QTreeWidgetItem *parent, QTreeWidgetItem *elementAbove, std::string info)sofa::gui::qt::GraphVisitor; addTime(QTreeWidgetItem *element, std::string info)sofa::gui::qt::GraphVisitor; clear()sofa::gui::qt::GraphVisitorinline; componentsTimesofa::gui::qt::GraphVisitorprotected; componentsTimeMaxsofa::gui::qt::GraphVisitorprotected; componentsTimeTotalsofa::gui::qt::GraphVisitorprotected; getTime(const tinyxml2::XMLAttribute *attribute) constsofa::gui::qt::GraphVisitorinline; getTotalTime(tinyxml2::XMLNode *node) constsofa::gui::qt::GraphVisitor; graphsofa::gui::qt::GraphVisitorprotected; GraphVisitor(WindowVisitor *w)sofa::gui::qt::GraphVisitorinline; initSizesofa::gui::qt::GraphVisitorprotected; levelsofa::gui::qt::GraphVisitorprotected; load(std::string &file)sofa::gui::qt::GraphVisitor; openAttribute(tinyxml2::XMLElement *element, QTreeWidgetItem *item)sofa::gui::qt::GraphVisitorprotected; openNode(tinyxml2::XMLNode *node, QTreeWidgetItem *parent, QTreeWidgetItem *elementAbove)sofa::gui::qt::GraphVisitorprotected; openTime(tinyxml2::XMLNode *element, QTreeWidgetItem *item)sofa::gui::qt::GraphVisitorprotected; setGraph(QTreeWidget *g)sofa::gui::qt::GraphVisitorinline; timeComponentsBelowsofa::gui::qt::GraphVisitorprotected; totalTimesofa::gui::qt::GraphVisitorprotected; totalTimeMaxsofa::gui::qt::GraphVisitorprotected; visitedNodesofa::gui::qt::GraphVisitorprotected; visitorsTimesofa::gui::qt::GraphVisitorprotected; visitorsTimeMaxsofa::gui::qt::GraphVisitorprotected; visitorsTimeTotalsofa::gui::qt::GraphVisitorprotected; windowsofa::gui::qt::GraphVisitorprotected. Generated on Mon Nov 11 2024 03:23:42 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_visitor-members.html
Usability,clear,clear,"Member List . This is the complete list of members for sofa::gui::qt::GraphVisitor, including all inherited members. addComment(QTreeWidgetItem *element, QTreeWidgetItem *elementAbove, std::string comment)sofa::gui::qt::GraphVisitor; addInformation(QTreeWidgetItem *element, std::string name, std::string info)sofa::gui::qt::GraphVisitor; addNode(QTreeWidgetItem *parent, QTreeWidgetItem *elementAbove, std::string info)sofa::gui::qt::GraphVisitor; addTime(QTreeWidgetItem *element, std::string info)sofa::gui::qt::GraphVisitor; clear()sofa::gui::qt::GraphVisitorinline; componentsTimesofa::gui::qt::GraphVisitorprotected; componentsTimeMaxsofa::gui::qt::GraphVisitorprotected; componentsTimeTotalsofa::gui::qt::GraphVisitorprotected; getTime(const tinyxml2::XMLAttribute *attribute) constsofa::gui::qt::GraphVisitorinline; getTotalTime(tinyxml2::XMLNode *node) constsofa::gui::qt::GraphVisitor; graphsofa::gui::qt::GraphVisitorprotected; GraphVisitor(WindowVisitor *w)sofa::gui::qt::GraphVisitorinline; initSizesofa::gui::qt::GraphVisitorprotected; levelsofa::gui::qt::GraphVisitorprotected; load(std::string &file)sofa::gui::qt::GraphVisitor; openAttribute(tinyxml2::XMLElement *element, QTreeWidgetItem *item)sofa::gui::qt::GraphVisitorprotected; openNode(tinyxml2::XMLNode *node, QTreeWidgetItem *parent, QTreeWidgetItem *elementAbove)sofa::gui::qt::GraphVisitorprotected; openTime(tinyxml2::XMLNode *element, QTreeWidgetItem *item)sofa::gui::qt::GraphVisitorprotected; setGraph(QTreeWidget *g)sofa::gui::qt::GraphVisitorinline; timeComponentsBelowsofa::gui::qt::GraphVisitorprotected; totalTimesofa::gui::qt::GraphVisitorprotected; totalTimeMaxsofa::gui::qt::GraphVisitorprotected; visitedNodesofa::gui::qt::GraphVisitorprotected; visitorsTimesofa::gui::qt::GraphVisitorprotected; visitorsTimeMaxsofa::gui::qt::GraphVisitorprotected; visitorsTimeTotalsofa::gui::qt::GraphVisitorprotected; windowsofa::gui::qt::GraphVisitorprotected. Generated on Mon Nov 11 2024 03:23:42 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_visitor-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_visitor-members.html
Performance,load,load,"rotected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::qt::GraphVisitor Class Reference . #include <GraphVisitor.h>. Protected Attributes; QTreeWidget * graph;  ; WindowVisitor * window;  ; double totalTime;  ; double totalTimeMax;  ; std::vector< double > timeComponentsBelow;  ; int level;  ; std::vector< dataTime > componentsTime;  ; std::vector< dataTime > visitorsTime;  ; std::vector< dataTime > componentsTimeTotal;  ; std::vector< dataTime > visitorsTimeTotal;  ; std::vector< dataTime > componentsTimeMax;  ; std::vector< dataTime > visitorsTimeMax;  ; std::vector< std::string > visitedNode;  ; bool initSize;  . Public Member Functions;  GraphVisitor (WindowVisitor *w);  ; QTreeWidgetItem * addNode (QTreeWidgetItem *parent, QTreeWidgetItem *elementAbove, std::string info);  ; QTreeWidgetItem * addComment (QTreeWidgetItem *element, QTreeWidgetItem *elementAbove, std::string comment);  ; void addInformation (QTreeWidgetItem *element, std::string name, std::string info);  ; void addTime (QTreeWidgetItem *element, std::string info);  ; bool load (std::string &file);  ; void setGraph (QTreeWidget *g);  ; void clear ();  ; double getTotalTime (tinyxml2::XMLNode *node) const;  ; double getTime (const tinyxml2::XMLAttribute *attribute) const;  . Protected Member Functions; void openTime (tinyxml2::XMLNode *element, QTreeWidgetItem *item);  ; void openAttribute (tinyxml2::XMLElement *element, QTreeWidgetItem *item);  ; QTreeWidgetItem * openNode (tinyxml2::XMLNode *node, QTreeWidgetItem *parent, QTreeWidgetItem *elementAbove);  . Attribute details. ◆ componentsTime. std::vector< dataTime > sofa::gui::qt::GraphVisitor::componentsTime. protected . ◆ componentsTimeMax. std::vector< dataTime > sofa::gui::qt::GraphVisitor::componentsTimeMax. protected . ◆ componentsTimeTotal. std::vector< dataTime > sofa::gui::qt::GraphVisitor::componentsTimeTotal. protected . ◆ graph. QTreeWidget* sofa::gui::qt::GraphVisitor::graph. p",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_visitor.html
Usability,clear,clear,"rotected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::qt::GraphVisitor Class Reference . #include <GraphVisitor.h>. Protected Attributes; QTreeWidget * graph;  ; WindowVisitor * window;  ; double totalTime;  ; double totalTimeMax;  ; std::vector< double > timeComponentsBelow;  ; int level;  ; std::vector< dataTime > componentsTime;  ; std::vector< dataTime > visitorsTime;  ; std::vector< dataTime > componentsTimeTotal;  ; std::vector< dataTime > visitorsTimeTotal;  ; std::vector< dataTime > componentsTimeMax;  ; std::vector< dataTime > visitorsTimeMax;  ; std::vector< std::string > visitedNode;  ; bool initSize;  . Public Member Functions;  GraphVisitor (WindowVisitor *w);  ; QTreeWidgetItem * addNode (QTreeWidgetItem *parent, QTreeWidgetItem *elementAbove, std::string info);  ; QTreeWidgetItem * addComment (QTreeWidgetItem *element, QTreeWidgetItem *elementAbove, std::string comment);  ; void addInformation (QTreeWidgetItem *element, std::string name, std::string info);  ; void addTime (QTreeWidgetItem *element, std::string info);  ; bool load (std::string &file);  ; void setGraph (QTreeWidget *g);  ; void clear ();  ; double getTotalTime (tinyxml2::XMLNode *node) const;  ; double getTime (const tinyxml2::XMLAttribute *attribute) const;  . Protected Member Functions; void openTime (tinyxml2::XMLNode *element, QTreeWidgetItem *item);  ; void openAttribute (tinyxml2::XMLElement *element, QTreeWidgetItem *item);  ; QTreeWidgetItem * openNode (tinyxml2::XMLNode *node, QTreeWidgetItem *parent, QTreeWidgetItem *elementAbove);  . Attribute details. ◆ componentsTime. std::vector< dataTime > sofa::gui::qt::GraphVisitor::componentsTime. protected . ◆ componentsTimeMax. std::vector< dataTime > sofa::gui::qt::GraphVisitor::componentsTimeMax. protected . ◆ componentsTimeTotal. std::vector< dataTime > sofa::gui::qt::GraphVisitor::componentsTimeTotal. protected . ◆ graph. QTreeWidget* sofa::gui::qt::GraphVisitor::graph. p",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_visitor.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_visitor.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::GraphWidget< DataType > Member List . This is the complete list of members for sofa::gui::qt::GraphWidget< DataType >, including all inherited members. currentDatasofa::gui::qt::GraphWidget< DataType >protected; curve_type typedefsofa::gui::qt::GraphWidget< DataType >; CurveData typedefsofa::gui::qt::GraphWidget< DataType >; data_type typedefsofa::gui::qt::GraphWidget< DataType >; exportGNUPlot(const std::string &baseFileName) constsofa::gui::qt::GraphWidget< DataType >inlinevirtual; exportImage(const std::string &baseFileName) constsofa::gui::qt::GraphWidget< DataType >inlinevirtual; getCurveFilename(unsigned int idx) constsofa::gui::qt::GraphWidget< DataType >inlineprotected; getWidget()sofa::gui::qt::GraphWidget< DataType >inline; GraphWidget(QWidget *parent)sofa::gui::qt::GraphWidget< DataType >inline; m_axisXsofa::gui::qt::GraphWidget< DataType >protected; m_axisYsofa::gui::qt::GraphWidget< DataType >protected; m_chartsofa::gui::qt::GraphWidget< DataType >protected; m_curvessofa::gui::qt::GraphWidget< DataType >protected; readFromData(const data_type &d0)sofa::gui::qt::GraphWidget< DataType >inline; trait typedefsofa::gui::qt::GraphWidget< DataType >; wsofa::gui::qt::GraphWidget< DataType >protected; Widget typedefsofa::gui::qt::GraphWidget< DataType >; ~GraphSetting()sofa::gui::qt::GraphSettinginlinevirtual; ~GraphWidget()sofa::gui::qt::GraphWidget< DataType >inlinevirtual. Generated on Mon Nov 11 2024 03:23:42 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_widget-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::qt::GraphWidget< DataType > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::qt::GraphWidget< DataType > Class Template Reference . #include <GraphDataWidget.h>. Inheritance diagram for sofa::gui::qt::GraphWidget< DataType >:. [legend]. Protected Attributes; QChartView * w;  ; QChart * m_chart;  Pointer to the chart Data. More...;  ; QValueAxis * m_axisX;  x axis pointer More...;  ; QValueAxis * m_axisY;  y axis pointer More...;  ; std::map< QString, CurveData * > m_curves;  vector of series to be plotted More...;  ; data_type currentData;  . Public Member Functions;  GraphWidget (QWidget *parent);  ; virtual ~GraphWidget ();  ; QWidget * getWidget ();  ; void readFromData (const data_type &d0);  ; void exportGNUPlot (const std::string &baseFileName) const;  ; void exportImage (const std::string &baseFileName) const;  ;  Public Member Functions inherited from sofa::gui::qt::GraphSetting; virtual ~GraphSetting ();  . Protected Member Functions; std::string getCurveFilename (unsigned int idx) const;  . Attribute details. ◆ currentData. template<class DataType > . data_type sofa::gui::qt::GraphWidget< DataType >::currentData. protected . ◆ m_axisX. template<class DataType > . QValueAxis* sofa::gui::qt::GraphWidget< DataType >::m_axisX. protected . x axis pointer . ◆ m_axisY. template<class DataType > . QValueAxis* sofa::gui::qt::GraphWidget< DataType >::m_axisY. protected . y axis pointer . ◆ m_chart. template<class DataType > . QChart* sofa::gui::qt::GraphWidget< DataType >::m_chart. protected . Pointer to the chart Data. . ◆ m_curves. template<class DataType > . std::map<QString, CurveData*> sofa::gui::qt::GraphWidget< DataType >::m_curves. protected . vector of series to be plotted . ◆ w. template<class DataType > . QChartView* sofa::gui::qt::GraphWidget< DataType >::w. protected .",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_widget.html
Deployability,update,updateRay,"ler(double defaultLength=1000000)sofa::gui::qt::GLPickHandler; handleMouseEvent(MOUSE_STATUS status, MOUSE_BUTTON button)sofa::gui::common::PickHandler; init(core::objectmodel::BaseNode *root)sofa::gui::common::PickHandler; instanceComponentssofa::gui::common::PickHandlerprotected; interactionsofa::gui::common::PickHandlerprotected; interactorInUsesofa::gui::common::PickHandlerprotected; lastPickedsofa::gui::common::PickHandlerprotected; m_defaultLengthsofa::gui::common::PickHandlerprotected; mouseButtonsofa::gui::common::PickHandlerprotected; mouseCollisionsofa::gui::common::PickHandlerprotected; mouseContainersofa::gui::common::PickHandlerprotected; mouseNodesofa::gui::common::PickHandlerprotected; mousePositionsofa::gui::common::PickHandlerprotected; mouseStatussofa::gui::common::PickHandlerprotected; needToCastRay()sofa::gui::common::PickHandlerprotected; operationssofa::gui::common::PickHandlerprotected; PickHandler(double defaultLength=1000000)sofa::gui::common::PickHandler; pickingMethodsofa::gui::common::PickHandlerprotected; PickingMethod enum namesofa::gui::qt::GLPickHandler; RAY_CASTING enum valuesofa::gui::qt::GLPickHandler; renderCallbacksofa::gui::common::PickHandlerprotected; reset()sofa::gui::common::PickHandler; SELECTION_BUFFER enum valuesofa::gui::qt::GLPickHandler; setColourRenderCallback(CallBackRender *colourRender)sofa::gui::common::PickHandlerinline; setCompatibleInteractor()sofa::gui::common::PickHandlerprotected; setPickingMethod(PickingMethod method)sofa::gui::common::PickHandlerinline; unload()sofa::gui::common::PickHandler; updateMouse2D(MousePosition mouse)sofa::gui::common::PickHandlerinline; updateRay(const sofa::type::Vec3 &position, const sofa::type::Vec3 &orientation)sofa::gui::common::PickHandler; useCollisionssofa::gui::common::PickHandlerprotected; useSelectionBufferMethod() constsofa::gui::common::PickHandlerinline; ~GLPickHandler() overridesofa::gui::qt::GLPickHandlervirtual; ~PickHandler()sofa::gui::common::PickHandlervirtual.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_g_l_pick_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_g_l_pick_handler-members.html
Energy Efficiency,allocate,allocateSelectionBuffer," _fbosofa::gui::qt::GLPickHandlerprotected; _fboAllocatedsofa::gui::qt::GLPickHandlerprotected; _fboParamssofa::gui::qt::GLPickHandlerprotected; activateRay(int width, int height, core::objectmodel::BaseNode *root)sofa::gui::common::PickHandler; addCallBack(CallBackPicker *c)sofa::gui::common::PickHandlerinline; allocateSelectionBuffer(int width, int height) overridesofa::gui::qt::GLPickHandlervirtual; callbackssofa::gui::common::PickHandlerprotected; changeOperation(sofa::component::setting::MouseButtonSetting *setting)sofa::gui::common::PickHandler; changeOperation(MOUSE_BUTTON button, const std::string &op)sofa::gui::common::PickHandler; clearCallBacks()sofa::gui::common::PickHandlerinline; deactivateRay()sofa::gui::common::PickHandler; destroySelectionBuffer() overridesofa::gui::qt::GLPickHandlervirtual; findCollision()sofa::gui::common::PickHandlerprotectedvirtual; findCollisionUsingBruteForce(const type::Vec3 &origin, const type::Vec3 &direction, double maxLength, core::objectmodel::BaseNode *root)sofa::gui::common::PickHandlerstatic; findCollisionUsingBruteForce()sofa::gui::common::PickHandlerprotected; findCollisionUsingColourCoding(const type::Vec3 &origin, const type::Vec3 &direction) overridesofa::gui::qt::GLPickHandlervirtual; sofa::gui::common::PickHandler::findCollisionUsingColourCoding()sofa::gui::common::PickHandlerprotected; findCollisionUsingPipeline()sofa::gui::common::PickHandlerprotected; getCallBackPicker()sofa::gui::common::PickHandlerinline; getInteraction()sofa::gui::common::PickHandler; getLastPicked()sofa::gui::common::PickHandlerinline; getOperation(MOUSE_BUTTON button)sofa::gui::common::PickHandlerinline; GLPickHandler(double defaultLength=1000000)sofa::gui::qt::GLPickHandler; handleMouseEvent(MOU",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_g_l_pick_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_g_l_pick_handler-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::GLPickHandler Member List . This is the complete list of members for sofa::gui::qt::GLPickHandler, including all inherited members. _fbosofa::gui::qt::GLPickHandlerprotected; _fboAllocatedsofa::gui::qt::GLPickHandlerprotected; _fboParamssofa::gui::qt::GLPickHandlerprotected; activateRay(int width, int height, core::objectmodel::BaseNode *root)sofa::gui::common::PickHandler; addCallBack(CallBackPicker *c)sofa::gui::common::PickHandlerinline; allocateSelectionBuffer(int width, int height) overridesofa::gui::qt::GLPickHandlervirtual; callbackssofa::gui::common::PickHandlerprotected; changeOperation(sofa::component::setting::MouseButtonSetting *setting)sofa::gui::common::PickHandler; changeOperation(MOUSE_BUTTON button, const std::string &op)sofa::gui::common::PickHandler; clearCallBacks()sofa::gui::common::PickHandlerinline; deactivateRay()sofa::gui::common::PickHandler; destroySelectionBuffer() overridesofa::gui::qt::GLPickHandlervirtual; findCollision()sofa::gui::common::PickHandlerprotectedvirtual; findCollisionUsingBruteForce(const type::Vec3 &origin, const type::Vec3 &direction, double maxLength, core::objectmodel::BaseNode *root)sofa::gui::common::PickHandlerstatic; findCollisionUsingBruteForce()sofa::gui::common::PickHandlerprotected; findCollisionUsingColourCoding(const type::Vec3 &origin, const type::Vec3 &direction) overridesofa::gui::qt::GLPickHandlervirtual; sofa::gui::common::PickHandler::findCollisionUsingColourCoding()sofa::gui::common::PickHandlerprotected; findCollisionUsingPipeline()sofa::gui::common::PickHandlerprotected; getCallBackPicker()sofa::gui::common::PickHandlerinline; getInteraction()sofa::gui::common::PickHandler; getLastPicked()sofa::gui::common::PickHandlerinline; getOperation(MOUSE_BUTTON button)sofa::gui::common::PickHandlerinline; GLPickHandler(double defaultLength=1000000)sofa::gui::qt::GLPickHandler; handleMouseEvent(MOU",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_g_l_pick_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_g_l_pick_handler-members.html
Usability,clear,clearCallBacks," _fbosofa::gui::qt::GLPickHandlerprotected; _fboAllocatedsofa::gui::qt::GLPickHandlerprotected; _fboParamssofa::gui::qt::GLPickHandlerprotected; activateRay(int width, int height, core::objectmodel::BaseNode *root)sofa::gui::common::PickHandler; addCallBack(CallBackPicker *c)sofa::gui::common::PickHandlerinline; allocateSelectionBuffer(int width, int height) overridesofa::gui::qt::GLPickHandlervirtual; callbackssofa::gui::common::PickHandlerprotected; changeOperation(sofa::component::setting::MouseButtonSetting *setting)sofa::gui::common::PickHandler; changeOperation(MOUSE_BUTTON button, const std::string &op)sofa::gui::common::PickHandler; clearCallBacks()sofa::gui::common::PickHandlerinline; deactivateRay()sofa::gui::common::PickHandler; destroySelectionBuffer() overridesofa::gui::qt::GLPickHandlervirtual; findCollision()sofa::gui::common::PickHandlerprotectedvirtual; findCollisionUsingBruteForce(const type::Vec3 &origin, const type::Vec3 &direction, double maxLength, core::objectmodel::BaseNode *root)sofa::gui::common::PickHandlerstatic; findCollisionUsingBruteForce()sofa::gui::common::PickHandlerprotected; findCollisionUsingColourCoding(const type::Vec3 &origin, const type::Vec3 &direction) overridesofa::gui::qt::GLPickHandlervirtual; sofa::gui::common::PickHandler::findCollisionUsingColourCoding()sofa::gui::common::PickHandlerprotected; findCollisionUsingPipeline()sofa::gui::common::PickHandlerprotected; getCallBackPicker()sofa::gui::common::PickHandlerinline; getInteraction()sofa::gui::common::PickHandler; getLastPicked()sofa::gui::common::PickHandlerinline; getOperation(MOUSE_BUTTON button)sofa::gui::common::PickHandlerinline; GLPickHandler(double defaultLength=1000000)sofa::gui::qt::GLPickHandler; handleMouseEvent(MOU",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_g_l_pick_handler-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_g_l_pick_handler-members.html
Deployability,update,updateRay,"llisions;  ; type::fixed_array< Operation *, NONE > operations;  ; type::vector< CallBackPicker * > callbacks;  ; CallBackRender * renderCallback;  ; PickingMethod pickingMethod;  ; double m_defaultLength;  Default length of the ray. Set by constructor. More...;  . Public Member Functions;  GLPickHandler (double defaultLength=1000000);  ; virtual ~GLPickHandler () override;  ; void allocateSelectionBuffer (int width, int height) override;  ; void destroySelectionBuffer () override;  ; common::BodyPicked findCollisionUsingColourCoding (const type::Vec3 &origin, const type::Vec3 &direction) override;  ;  Public Member Functions inherited from sofa::gui::common::PickHandler;  PickHandler (double defaultLength=1000000);  ; virtual ~PickHandler ();  ; void activateRay (int width, int height, core::objectmodel::BaseNode *root);  ; void deactivateRay ();  ; void setPickingMethod (PickingMethod method);  ; bool useSelectionBufferMethod () const;  ; void updateRay (const sofa::type::Vec3 &position, const sofa::type::Vec3 &orientation);  ; void handleMouseEvent (MOUSE_STATUS status, MOUSE_BUTTON button);  ; void init (core::objectmodel::BaseNode *root);  ; void reset ();  ; void unload ();  ; void setColourRenderCallback (CallBackRender *colourRender);  ; void updateMouse2D (MousePosition mouse);  ; Operation * getOperation (MOUSE_BUTTON button);  ; Operation * changeOperation (sofa::component::setting::MouseButtonSetting *setting);  ; Operation * changeOperation (MOUSE_BUTTON button, const std::string &op);  ; void addCallBack (CallBackPicker *c);  ; type::vector< CallBackPicker * > getCallBackPicker ();  ; void clearCallBacks ();  ; ComponentMouseInteraction * getInteraction ();  ; BodyPicked * getLastPicked ();  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::common::PickHandler; static BodyPicked findCollisionUsingBruteForce (const type::Vec3 &origin, const type::Vec3 &direction, double maxLength, core::objectmodel::BaseNode *root)",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_g_l_pick_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_g_l_pick_handler.html
Energy Efficiency,allocate,allocateSelectionBuffer,"llisions;  ; type::fixed_array< Operation *, NONE > operations;  ; type::vector< CallBackPicker * > callbacks;  ; CallBackRender * renderCallback;  ; PickingMethod pickingMethod;  ; double m_defaultLength;  Default length of the ray. Set by constructor. More...;  . Public Member Functions;  GLPickHandler (double defaultLength=1000000);  ; virtual ~GLPickHandler () override;  ; void allocateSelectionBuffer (int width, int height) override;  ; void destroySelectionBuffer () override;  ; common::BodyPicked findCollisionUsingColourCoding (const type::Vec3 &origin, const type::Vec3 &direction) override;  ;  Public Member Functions inherited from sofa::gui::common::PickHandler;  PickHandler (double defaultLength=1000000);  ; virtual ~PickHandler ();  ; void activateRay (int width, int height, core::objectmodel::BaseNode *root);  ; void deactivateRay ();  ; void setPickingMethod (PickingMethod method);  ; bool useSelectionBufferMethod () const;  ; void updateRay (const sofa::type::Vec3 &position, const sofa::type::Vec3 &orientation);  ; void handleMouseEvent (MOUSE_STATUS status, MOUSE_BUTTON button);  ; void init (core::objectmodel::BaseNode *root);  ; void reset ();  ; void unload ();  ; void setColourRenderCallback (CallBackRender *colourRender);  ; void updateMouse2D (MousePosition mouse);  ; Operation * getOperation (MOUSE_BUTTON button);  ; Operation * changeOperation (sofa::component::setting::MouseButtonSetting *setting);  ; Operation * changeOperation (MOUSE_BUTTON button, const std::string &op);  ; void addCallBack (CallBackPicker *c);  ; type::vector< CallBackPicker * > getCallBackPicker ();  ; void clearCallBacks ();  ; ComponentMouseInteraction * getInteraction ();  ; BodyPicked * getLastPicked ();  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::common::PickHandler; static BodyPicked findCollisionUsingBruteForce (const type::Vec3 &origin, const type::Vec3 &direction, double maxLength, core::objectmodel::BaseNode *root)",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_g_l_pick_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_g_l_pick_handler.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::qt::GLPickHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::gui::qt::GLPickHandler Class Reference . #include <GLPickHandler.h>. Inheritance diagram for sofa::gui::qt::GLPickHandler:. [legend]. Protected Attributes; bool _fboAllocated;  ; gl::FrameBufferObject _fbo;  ; gl::fboParameters _fboParams;  ;  Protected Attributes inherited from sofa::gui::common::PickHandler; bool interactorInUse;  ; MOUSE_STATUS mouseStatus;  ; MOUSE_BUTTON mouseButton;  ; sofa::simulation::NodeSPtr mouseNode;  ; MouseContainer::SPtr mouseContainer;  ; sofa::core::sptr< MouseCollisionModel > mouseCollision;  ; MousePosition mousePosition;  ; ComponentMouseInteraction * interaction;  ; std::vector< ComponentMouseInteraction * > instanceComponents;  ; BodyPicked lastPicked;  ; bool useCollisions;  ; type::fixed_array< Operation *, NONE > operations;  ; type::vector< CallBackPicker * > callbacks;  ; CallBackRender * renderCallback;  ; PickingMethod pickingMethod;  ; double m_defaultLength;  Default length of the ray. Set by constructor. More...;  . Public Member Functions;  GLPickHandler (double defaultLength=1000000);  ; virtual ~GLPickHandler () override;  ; void allocateSelectionBuffer (int width, int height) override;  ; void destroySelectionBuffer () override;  ; common::BodyPicked findCollisionUsingColourCoding (const type::Vec3 &origin, const type::Vec3 &direction) override;  ;  Public Member Functions inherited from sofa::gui::common::PickHandler;  PickHandler (double defaultLength=1000000);  ; virtual ~PickHandler ();  ; void activateRay (int width, int height, core::objectmodel::BaseNode *root);  ; void deactivateRay ();  ; void setPickingMethod (PickingMethod method);  ; bool useSelectionBufferMethod () const;  ; void updateRay (const sofa::type::Vec3 &position, const sofa::type::Vec3 &orientation);  ; void handleMouseEvent (MOUSE_S",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_g_l_pick_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_g_l_pick_handler.html
Usability,clear,clearCallBacks,"llisions;  ; type::fixed_array< Operation *, NONE > operations;  ; type::vector< CallBackPicker * > callbacks;  ; CallBackRender * renderCallback;  ; PickingMethod pickingMethod;  ; double m_defaultLength;  Default length of the ray. Set by constructor. More...;  . Public Member Functions;  GLPickHandler (double defaultLength=1000000);  ; virtual ~GLPickHandler () override;  ; void allocateSelectionBuffer (int width, int height) override;  ; void destroySelectionBuffer () override;  ; common::BodyPicked findCollisionUsingColourCoding (const type::Vec3 &origin, const type::Vec3 &direction) override;  ;  Public Member Functions inherited from sofa::gui::common::PickHandler;  PickHandler (double defaultLength=1000000);  ; virtual ~PickHandler ();  ; void activateRay (int width, int height, core::objectmodel::BaseNode *root);  ; void deactivateRay ();  ; void setPickingMethod (PickingMethod method);  ; bool useSelectionBufferMethod () const;  ; void updateRay (const sofa::type::Vec3 &position, const sofa::type::Vec3 &orientation);  ; void handleMouseEvent (MOUSE_STATUS status, MOUSE_BUTTON button);  ; void init (core::objectmodel::BaseNode *root);  ; void reset ();  ; void unload ();  ; void setColourRenderCallback (CallBackRender *colourRender);  ; void updateMouse2D (MousePosition mouse);  ; Operation * getOperation (MOUSE_BUTTON button);  ; Operation * changeOperation (sofa::component::setting::MouseButtonSetting *setting);  ; Operation * changeOperation (MOUSE_BUTTON button, const std::string &op);  ; void addCallBack (CallBackPicker *c);  ; type::vector< CallBackPicker * > getCallBackPicker ();  ; void clearCallBacks ();  ; ComponentMouseInteraction * getInteraction ();  ; BodyPicked * getLastPicked ();  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::common::PickHandler; static BodyPicked findCollisionUsingBruteForce (const type::Vec3 &origin, const type::Vec3 &direction, double maxLength, core::objectmodel::BaseNode *root)",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_g_l_pick_handler.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_g_l_pick_handler.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::InformationOnPickCallBack Member List . This is the complete list of members for sofa::gui::qt::InformationOnPickCallBack, including all inherited members. BodyPicked typedefsofa::gui::qt::InformationOnPickCallBack; execute(const BodyPicked &body) overridesofa::gui::qt::InformationOnPickCallBackvirtual; guisofa::gui::qt::InformationOnPickCallBackprotected; InformationOnPickCallBack()sofa::gui::qt::InformationOnPickCallBack; InformationOnPickCallBack(RealGUI *g)sofa::gui::qt::InformationOnPickCallBack; ~CallBackPicker()sofa::gui::common::CallBackPickerinlinevirtual. Generated on Mon Nov 11 2024 03:23:42 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_information_on_pick_call_back-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_information_on_pick_call_back-members.html
Modifiability,inherit,inherited,﻿. SOFA API: sofa::gui::qt::InformationOnPickCallBack Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::gui::qt::InformationOnPickCallBack Class Reference . #include <PickHandlerCallBacks.h>. Inheritance diagram for sofa::gui::qt::InformationOnPickCallBack:. [legend]. Protected Attributes; RealGUI * gui;  . Public Member Functions;  InformationOnPickCallBack ();  ;  InformationOnPickCallBack (RealGUI *g);  ; void execute (const BodyPicked &body) override;  ;  Public Member Functions inherited from sofa::gui::common::CallBackPicker; virtual ~CallBackPicker ();  . Attribute details. ◆ gui. RealGUI* sofa::gui::qt::InformationOnPickCallBack::gui. protected . Constructor details. ◆ InformationOnPickCallBack() [1/2]. sofa::gui::qt::InformationOnPickCallBack::InformationOnPickCallBack ; (; ). ◆ InformationOnPickCallBack() [2/2]. sofa::gui::qt::InformationOnPickCallBack::InformationOnPickCallBack ; (; RealGUI * ; g). Function details. ◆ execute(). void sofa::gui::qt::InformationOnPickCallBack::execute ; (; const BodyPicked & ; body). overridevirtual . Implements sofa::gui::common::CallBackPicker. sofaguiqtInformationOnPickCallBack; Generated on Mon Nov 11 2024 03:23:42 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_information_on_pick_call_back.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_information_on_pick_call_back.html
Deployability,update,updateLinkValue,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::LinkWidget Member List . This is the complete list of members for sofa::gui::qt::LinkWidget, including all inherited members. baseLinksofa::gui::qt::LinkWidgetprotected; countersofa::gui::qt::LinkWidgetprotected; CreateLinkWidget(const LinkWidget::CreatorArgument &dwarg)sofa::gui::qt::LinkWidgetstatic; createWidgets()=0sofa::gui::qt::LinkWidgetpure virtual; dirtysofa::gui::qt::LinkWidgetprotected; getBaseLink() constsofa::gui::qt::LinkWidgetinline; getBaseLink()sofa::gui::qt::LinkWidgetinline; isDirty()sofa::gui::qt::LinkWidgetinline; LinkBeingChanged()sofa::gui::qt::LinkWidgetsignal; LinkOwnerDirty(bool)sofa::gui::qt::LinkWidgetsignal; LinkWidget(QWidget *parent, const char *, MyLink *l)sofa::gui::qt::LinkWidgetinline; MyLink typedefsofa::gui::qt::LinkWidget; numColumnWidget()sofa::gui::qt::LinkWidgetinlinevirtual; readFromLink()=0sofa::gui::qt::LinkWidgetprotectedpure virtual; setLink(MyLink *d)sofa::gui::qt::LinkWidgetinlinevirtual; setWidgetDirty()sofa::gui::qt::LinkWidgetinlineslot; setWidgetDirty(bool b)sofa::gui::qt::LinkWidgetinlineslot; sizeWidget()sofa::gui::qt::LinkWidgetinlinevirtual; updateLinkValue()sofa::gui::qt::LinkWidgetinlineslot; updateVisibility()sofa::gui::qt::LinkWidgetinline; updateWidgetValue()sofa::gui::qt::LinkWidgetinlineslot; WidgetDirty(bool)sofa::gui::qt::LinkWidgetsignal; writeToLink()=0sofa::gui::qt::LinkWidgetprotectedpure virtual; ~LinkWidget() overridesofa::gui::qt::LinkWidgetinline. Generated on Mon Nov 11 2024 03:23:42 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_link_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_link_widget-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::LinkWidget Member List . This is the complete list of members for sofa::gui::qt::LinkWidget, including all inherited members. baseLinksofa::gui::qt::LinkWidgetprotected; countersofa::gui::qt::LinkWidgetprotected; CreateLinkWidget(const LinkWidget::CreatorArgument &dwarg)sofa::gui::qt::LinkWidgetstatic; createWidgets()=0sofa::gui::qt::LinkWidgetpure virtual; dirtysofa::gui::qt::LinkWidgetprotected; getBaseLink() constsofa::gui::qt::LinkWidgetinline; getBaseLink()sofa::gui::qt::LinkWidgetinline; isDirty()sofa::gui::qt::LinkWidgetinline; LinkBeingChanged()sofa::gui::qt::LinkWidgetsignal; LinkOwnerDirty(bool)sofa::gui::qt::LinkWidgetsignal; LinkWidget(QWidget *parent, const char *, MyLink *l)sofa::gui::qt::LinkWidgetinline; MyLink typedefsofa::gui::qt::LinkWidget; numColumnWidget()sofa::gui::qt::LinkWidgetinlinevirtual; readFromLink()=0sofa::gui::qt::LinkWidgetprotectedpure virtual; setLink(MyLink *d)sofa::gui::qt::LinkWidgetinlinevirtual; setWidgetDirty()sofa::gui::qt::LinkWidgetinlineslot; setWidgetDirty(bool b)sofa::gui::qt::LinkWidgetinlineslot; sizeWidget()sofa::gui::qt::LinkWidgetinlinevirtual; updateLinkValue()sofa::gui::qt::LinkWidgetinlineslot; updateVisibility()sofa::gui::qt::LinkWidgetinline; updateWidgetValue()sofa::gui::qt::LinkWidgetinlineslot; WidgetDirty(bool)sofa::gui::qt::LinkWidgetsignal; writeToLink()=0sofa::gui::qt::LinkWidgetprotectedpure virtual; ~LinkWidget() overridesofa::gui::qt::LinkWidgetinline. Generated on Mon Nov 11 2024 03:23:42 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_link_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_link_widget-members.html
Deployability,update,updateVisibility,"rce framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Signals |; Public Slots |; List of all members . sofa::gui::qt::LinkWidget Class Referenceabstract . #include <LinkWidget.h>; Abstract Interface of a qwidget which allows to edit a link. ; More... Inheritance diagram for sofa::gui::qt::LinkWidget:. [legend]; Detailed Description; Abstract Interface of a qwidget which allows to edit a link. . Classes; struct  CreatorArgument;  . Protected Attributes; core::objectmodel::BaseLink * baseLink;  ; bool dirty;  ; int counter;  . Public Member Functions;  LinkWidget (QWidget *parent, const char *, MyLink *l);  ;  ~LinkWidget () override;  ; virtual void setLink (MyLink *d);  ; const core::objectmodel::BaseLink * getBaseLink () const;  BaseLink pointer accessor function. More...;  ; core::objectmodel::BaseLink * getBaseLink ();  ; void updateVisibility ();  ; bool isDirty ();  ; virtual bool createWidgets ()=0;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  . Static Public Member Functions; static LinkWidget * CreateLinkWidget (const LinkWidget::CreatorArgument &dwarg);  . Protected Member Functions; virtual void readFromLink ()=0;  The implementation of this method tells how the widget reads the value of the link. More...;  ; virtual void writeToLink ()=0;  . Signals; void WidgetDirty (bool);  ; void LinkOwnerDirty (bool);  ; void LinkBeingChanged ();  . Public Slots; void updateLinkValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty ();  ; void setWidgetDirty (bool b);  . Attribute details. ◆ baseLink. core::objectmodel::BaseLink* sofa::gui::qt::LinkWidget::baseLink. protected . ◆ counter. int sofa::gui::qt::LinkWidget::counter. protected . ◆ dirty. bool sofa::gui::qt::LinkWidget::dirty. protected . Constructor details. ◆ LinkWidget(). ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_link_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_link_widget.html
Security,access,accessor,"﻿. SOFA API: sofa::gui::qt::LinkWidget Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Signals |; Public Slots |; List of all members . sofa::gui::qt::LinkWidget Class Referenceabstract . #include <LinkWidget.h>; Abstract Interface of a qwidget which allows to edit a link. ; More... Inheritance diagram for sofa::gui::qt::LinkWidget:. [legend]; Detailed Description; Abstract Interface of a qwidget which allows to edit a link. . Classes; struct  CreatorArgument;  . Protected Attributes; core::objectmodel::BaseLink * baseLink;  ; bool dirty;  ; int counter;  . Public Member Functions;  LinkWidget (QWidget *parent, const char *, MyLink *l);  ;  ~LinkWidget () override;  ; virtual void setLink (MyLink *d);  ; const core::objectmodel::BaseLink * getBaseLink () const;  BaseLink pointer accessor function. More...;  ; core::objectmodel::BaseLink * getBaseLink ();  ; void updateVisibility ();  ; bool isDirty ();  ; virtual bool createWidgets ()=0;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  . Static Public Member Functions; static LinkWidget * CreateLinkWidget (const LinkWidget::CreatorArgument &dwarg);  . Protected Member Functions; virtual void readFromLink ()=0;  The implementation of this method tells how the widget reads the value of the link. More...;  ; virtual void writeToLink ()=0;  . Signals; void WidgetDirty (bool);  ; void LinkOwnerDirty (bool);  ; void LinkBeingChanged ();  . Public Slots; void updateLinkValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty ();  ; void setWidgetDirty (bool b);  . Attribute details. ◆ baseLink. core::objectmodel::BaseLink* sofa::gui::qt::LinkWidget::baseLink. protected . ◆ counter. int sofa::gui::qt::LinkWidget::counter. protected . ◆ dirty. b",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_link_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_link_widget.html
Deployability,update,updateConsole,"gui::qt::ModifyObjectsignal; createDialog(core::objectmodel::Base *node)sofa::gui::qt::ModifyObject; createDialog(core::objectmodel::BaseData *data)sofa::gui::qt::ModifyObject; data_sofa::gui::qt::ModifyObjectprotected; dataModified(QString)sofa::gui::qt::ModifyObjectsignal; dialogClosed(void *)sofa::gui::qt::ModifyObjectsignal; dialogFlags_sofa::gui::qt::ModifyObjectprotected; dialogTabsofa::gui::qt::ModifyObjectprotected; endDataModification(sofa::core::objectmodel::BaseData *data)sofa::gui::qt::ModifyObjectsignal; endObjectModification(sofa::core::objectmodel::Base *object)sofa::gui::qt::ModifyObjectsignal; getFlags()sofa::gui::qt::ModifyObjectinline; hideData(core::objectmodel::BaseData *data)sofa::gui::qt::ModifyObject; Id_sofa::gui::qt::ModifyObjectprotected; item_sofa::gui::qt::ModifyObjectprotected; m_numMessagessofa::gui::qt::ModifyObjectprotected; m_tabssofa::gui::qt::ModifyObjectprotected; messageEditsofa::gui::qt::ModifyObjectprotected; messageTabsofa::gui::qt::ModifyObjectprotected; ModifyObject(void *Id, QTreeWidgetItem *item_clicked, QWidget *parent, const ModifyObjectFlags &dialogFlags, const char *name=nullptr, bool modal=false, Qt::WindowFlags f=Qt::WindowType::Widget)sofa::gui::qt::ModifyObjectexplicit; nodeNameModification(simulation::Node *)sofa::gui::qt::ModifyObjectsignal; objectUpdated()sofa::gui::qt::ModifyObjectsignal; openExternalBrowser(const QUrl &link)sofa::gui::qt::ModifyObjectslot; parseDataModified()sofa::gui::qt::ModifyObjectprotected; readOnlyData(QTableWidget *widget, core::objectmodel::BaseData *data)sofa::gui::qt::ModifyObject; readOnlyData(QWidget *widget, core::objectmodel::BaseData *data)sofa::gui::qt::ModifyObject; reject() overridesofa::gui::qt::ModifyObjectslot; updateConsole()sofa::gui::qt::ModifyObjectprotected; updateDataWidgets()sofa::gui::qt::ModifyObjectsignal; updateTables()sofa::gui::qt::ModifyObjectslot; updateValues()sofa::gui::qt::ModifyObjectvirtualslot; ~ModifyObject() overridesofa::gui::qt::ModifyObjectinline.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object-members.html
Integrability,message,messageEditsofa,"t; closeNow()sofa::gui::qt::ModifyObjectinlineslot; componentDirty(bool)sofa::gui::qt::ModifyObjectsignal; createDialog(core::objectmodel::Base *node)sofa::gui::qt::ModifyObject; createDialog(core::objectmodel::BaseData *data)sofa::gui::qt::ModifyObject; data_sofa::gui::qt::ModifyObjectprotected; dataModified(QString)sofa::gui::qt::ModifyObjectsignal; dialogClosed(void *)sofa::gui::qt::ModifyObjectsignal; dialogFlags_sofa::gui::qt::ModifyObjectprotected; dialogTabsofa::gui::qt::ModifyObjectprotected; endDataModification(sofa::core::objectmodel::BaseData *data)sofa::gui::qt::ModifyObjectsignal; endObjectModification(sofa::core::objectmodel::Base *object)sofa::gui::qt::ModifyObjectsignal; getFlags()sofa::gui::qt::ModifyObjectinline; hideData(core::objectmodel::BaseData *data)sofa::gui::qt::ModifyObject; Id_sofa::gui::qt::ModifyObjectprotected; item_sofa::gui::qt::ModifyObjectprotected; m_numMessagessofa::gui::qt::ModifyObjectprotected; m_tabssofa::gui::qt::ModifyObjectprotected; messageEditsofa::gui::qt::ModifyObjectprotected; messageTabsofa::gui::qt::ModifyObjectprotected; ModifyObject(void *Id, QTreeWidgetItem *item_clicked, QWidget *parent, const ModifyObjectFlags &dialogFlags, const char *name=nullptr, bool modal=false, Qt::WindowFlags f=Qt::WindowType::Widget)sofa::gui::qt::ModifyObjectexplicit; nodeNameModification(simulation::Node *)sofa::gui::qt::ModifyObjectsignal; objectUpdated()sofa::gui::qt::ModifyObjectsignal; openExternalBrowser(const QUrl &link)sofa::gui::qt::ModifyObjectslot; parseDataModified()sofa::gui::qt::ModifyObjectprotected; readOnlyData(QTableWidget *widget, core::objectmodel::BaseData *data)sofa::gui::qt::ModifyObject; readOnlyData(QWidget *widget, core::objectmodel::BaseData *data)sofa::gui::qt::ModifyObject; reject() overridesofa::gui::qt::ModifyObjectslot; updateConsole()sofa::gui::qt::ModifyObjectprotected; updateDataWidgets()sofa::gui::qt::ModifyObjectsignal; updateTables()sofa::gui::qt::ModifyObjectslot; updateValues()sofa::gui::qt::Modi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::ModifyObject Member List . This is the complete list of members for sofa::gui::qt::ModifyObject, including all inherited members. accept() overridesofa::gui::qt::ModifyObjectslot; basenodesofa::gui::qt::ModifyObjectprotected; beginDataModification(sofa::core::objectmodel::BaseData *data)sofa::gui::qt::ModifyObjectsignal; beginObjectModification(sofa::core::objectmodel::Base *object)sofa::gui::qt::ModifyObjectsignal; buttonUpdatesofa::gui::qt::ModifyObjectprotected; clearMessages()sofa::gui::qt::ModifyObjectprotectedslot; closeEvent(QCloseEvent *) overridesofa::gui::qt::ModifyObjectinlineslot; closeNow()sofa::gui::qt::ModifyObjectinlineslot; componentDirty(bool)sofa::gui::qt::ModifyObjectsignal; createDialog(core::objectmodel::Base *node)sofa::gui::qt::ModifyObject; createDialog(core::objectmodel::BaseData *data)sofa::gui::qt::ModifyObject; data_sofa::gui::qt::ModifyObjectprotected; dataModified(QString)sofa::gui::qt::ModifyObjectsignal; dialogClosed(void *)sofa::gui::qt::ModifyObjectsignal; dialogFlags_sofa::gui::qt::ModifyObjectprotected; dialogTabsofa::gui::qt::ModifyObjectprotected; endDataModification(sofa::core::objectmodel::BaseData *data)sofa::gui::qt::ModifyObjectsignal; endObjectModification(sofa::core::objectmodel::Base *object)sofa::gui::qt::ModifyObjectsignal; getFlags()sofa::gui::qt::ModifyObjectinline; hideData(core::objectmodel::BaseData *data)sofa::gui::qt::ModifyObject; Id_sofa::gui::qt::ModifyObjectprotected; item_sofa::gui::qt::ModifyObjectprotected; m_numMessagessofa::gui::qt::ModifyObjectprotected; m_tabssofa::gui::qt::ModifyObjectprotected; messageEditsofa::gui::qt::ModifyObjectprotected; messageTabsofa::gui::qt::ModifyObjectprotected; ModifyObject(void *Id, QTreeWidgetItem *item_clicked, QWidget *parent, const ModifyObjectFlags &dialogFlags, const char *name=nullptr, bool modal=false, Qt::WindowFlags f=Qt::WindowType::Widget)sofa::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object-members.html
Usability,clear,clearMessages," accept() overridesofa::gui::qt::ModifyObjectslot; basenodesofa::gui::qt::ModifyObjectprotected; beginDataModification(sofa::core::objectmodel::BaseData *data)sofa::gui::qt::ModifyObjectsignal; beginObjectModification(sofa::core::objectmodel::Base *object)sofa::gui::qt::ModifyObjectsignal; buttonUpdatesofa::gui::qt::ModifyObjectprotected; clearMessages()sofa::gui::qt::ModifyObjectprotectedslot; closeEvent(QCloseEvent *) overridesofa::gui::qt::ModifyObjectinlineslot; closeNow()sofa::gui::qt::ModifyObjectinlineslot; componentDirty(bool)sofa::gui::qt::ModifyObjectsignal; createDialog(core::objectmodel::Base *node)sofa::gui::qt::ModifyObject; createDialog(core::objectmodel::BaseData *data)sofa::gui::qt::ModifyObject; data_sofa::gui::qt::ModifyObjectprotected; dataModified(QString)sofa::gui::qt::ModifyObjectsignal; dialogClosed(void *)sofa::gui::qt::ModifyObjectsignal; dialogFlags_sofa::gui::qt::ModifyObjectprotected; dialogTabsofa::gui::qt::ModifyObjectprotected; endDataModification(sofa::core::objectmodel::BaseData *data)sofa::gui::qt::ModifyObjectsignal; endObjectModification(sofa::core::objectmodel::Base *object)sofa::gui::qt::ModifyObjectsignal; getFlags()sofa::gui::qt::ModifyObjectinline; hideData(core::objectmodel::BaseData *data)sofa::gui::qt::ModifyObject; Id_sofa::gui::qt::ModifyObjectprotected; item_sofa::gui::qt::ModifyObjectprotected; m_numMessagessofa::gui::qt::ModifyObjectprotected; m_tabssofa::gui::qt::ModifyObjectprotected; messageEditsofa::gui::qt::ModifyObjectprotected; messageTabsofa::gui::qt::ModifyObjectprotected; ModifyObject(void *Id, QTreeWidgetItem *item_clicked, QWidget *parent, const ModifyObjectFlags &dialogFlags, const char *name=nullptr, bool modal=false, Qt::WindowFlags f=Qt::WindowType::Widget)sofa::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object-members.html
Deployability,update,updateConsole,"; QTreeWidgetItem * item_;  ; core::objectmodel::Base * basenode;  ; core::objectmodel::BaseData * data_;  ; const ModifyObjectFlags dialogFlags_;  ; QWidget * messageTab;  ; QTextBrowser * messageEdit;  ; QTabWidget * dialogTab;  ; QPushButton * buttonUpdate;  ; int m_numMessages;  ; std::vector< QTabulationModifyObject * > m_tabs;  . Public Member Functions;  ModifyObject (void *Id, QTreeWidgetItem *item_clicked, QWidget *parent, const ModifyObjectFlags &dialogFlags, const char *name=nullptr, bool modal=false, Qt::WindowFlags f=Qt::WindowType::Widget);  ;  ~ModifyObject () override;  ; const ModifyObjectFlags & getFlags ();  ; void createDialog (core::objectmodel::Base *node);  ; void createDialog (core::objectmodel::BaseData *data);  ; bool hideData (core::objectmodel::BaseData *data);  ; void readOnlyData (QTableWidget *widget, core::objectmodel::BaseData *data);  ; void readOnlyData (QWidget *widget, core::objectmodel::BaseData *data);  . Protected Member Functions; void updateConsole ();  ; QString parseDataModified ();  . Signals; void updateDataWidgets ();  ; void objectUpdated ();  ; void dialogClosed (void *);  ; void nodeNameModification (simulation::Node *);  ; void componentDirty (bool);  ; void dataModified (QString);  ; void beginObjectModification (sofa::core::objectmodel::Base *object);  ; void endObjectModification (sofa::core::objectmodel::Base *object);  ; void beginDataModification (sofa::core::objectmodel::BaseData *data);  ; void endDataModification (sofa::core::objectmodel::BaseData *data);  . Public Slots; void openExternalBrowser (const QUrl &link);  ; void reject () override;  ; void accept () override;  ; void closeNow ();  ; void closeEvent (QCloseEvent *) override;  ; void updateTables ();  ; virtual void updateValues ();  . Protected Slots; void clearMessages ();  . Attribute details. ◆ basenode. core::objectmodel::Base* sofa::gui::qt::ModifyObject::basenode. protected . ◆ buttonUpdate. QPushButton* sofa::gui::qt::ModifyObject::buttonUp",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object.html
Integrability,message,messageTab,"﻿. SOFA API: sofa::gui::qt::ModifyObject Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; Signals |; Public Slots |; Protected Slots |; List of all members . sofa::gui::qt::ModifyObject Class Reference . #include <ModifyObject.h>. Inheritance diagram for sofa::gui::qt::ModifyObject:. [legend]. Protected Attributes; void * Id_;  ; QTreeWidgetItem * item_;  ; core::objectmodel::Base * basenode;  ; core::objectmodel::BaseData * data_;  ; const ModifyObjectFlags dialogFlags_;  ; QWidget * messageTab;  ; QTextBrowser * messageEdit;  ; QTabWidget * dialogTab;  ; QPushButton * buttonUpdate;  ; int m_numMessages;  ; std::vector< QTabulationModifyObject * > m_tabs;  . Public Member Functions;  ModifyObject (void *Id, QTreeWidgetItem *item_clicked, QWidget *parent, const ModifyObjectFlags &dialogFlags, const char *name=nullptr, bool modal=false, Qt::WindowFlags f=Qt::WindowType::Widget);  ;  ~ModifyObject () override;  ; const ModifyObjectFlags & getFlags ();  ; void createDialog (core::objectmodel::Base *node);  ; void createDialog (core::objectmodel::BaseData *data);  ; bool hideData (core::objectmodel::BaseData *data);  ; void readOnlyData (QTableWidget *widget, core::objectmodel::BaseData *data);  ; void readOnlyData (QWidget *widget, core::objectmodel::BaseData *data);  . Protected Member Functions; void updateConsole ();  ; QString parseDataModified ();  . Signals; void updateDataWidgets ();  ; void objectUpdated ();  ; void dialogClosed (void *);  ; void nodeNameModification (simulation::Node *);  ; void componentDirty (bool);  ; void dataModified (QString);  ; void beginObjectModification (sofa::core::objectmodel::Base *object);  ; void endObjectModification (sofa::core::objectmodel::Base *object);  ; void beginDataModification (sofa::core::objectmodel::BaseData *data);  ; void endDataModification (sofa::core::objectmodel::BaseData *data);  . Publi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object.html
Usability,clear,clearMessages,"id readOnlyData (QTableWidget *widget, core::objectmodel::BaseData *data);  ; void readOnlyData (QWidget *widget, core::objectmodel::BaseData *data);  . Protected Member Functions; void updateConsole ();  ; QString parseDataModified ();  . Signals; void updateDataWidgets ();  ; void objectUpdated ();  ; void dialogClosed (void *);  ; void nodeNameModification (simulation::Node *);  ; void componentDirty (bool);  ; void dataModified (QString);  ; void beginObjectModification (sofa::core::objectmodel::Base *object);  ; void endObjectModification (sofa::core::objectmodel::Base *object);  ; void beginDataModification (sofa::core::objectmodel::BaseData *data);  ; void endDataModification (sofa::core::objectmodel::BaseData *data);  . Public Slots; void openExternalBrowser (const QUrl &link);  ; void reject () override;  ; void accept () override;  ; void closeNow ();  ; void closeEvent (QCloseEvent *) override;  ; void updateTables ();  ; virtual void updateValues ();  . Protected Slots; void clearMessages ();  . Attribute details. ◆ basenode. core::objectmodel::Base* sofa::gui::qt::ModifyObject::basenode. protected . ◆ buttonUpdate. QPushButton* sofa::gui::qt::ModifyObject::buttonUpdate. protected . ◆ data_. core::objectmodel::BaseData* sofa::gui::qt::ModifyObject::data_. protected . ◆ dialogFlags_. const ModifyObjectFlags sofa::gui::qt::ModifyObject::dialogFlags_. protected . ◆ dialogTab. QTabWidget* sofa::gui::qt::ModifyObject::dialogTab. protected . ◆ Id_. void* sofa::gui::qt::ModifyObject::Id_. protected . ◆ item_. QTreeWidgetItem* sofa::gui::qt::ModifyObject::item_. protected . ◆ m_numMessages. int sofa::gui::qt::ModifyObject::m_numMessages. protected . ◆ m_tabs. std::vector< QTabulationModifyObject* > sofa::gui::qt::ModifyObject::m_tabs. protected . ◆ messageEdit. QTextBrowser* sofa::gui::qt::ModifyObject::messageEdit. protected . ◆ messageTab. QWidget* sofa::gui::qt::ModifyObject::messageTab. protected . Constructor details. ◆ ModifyObject(). sofa::gui::qt::ModifyO",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::MovieOptionsWidget Member List . This is the complete list of members for sofa::gui::qt::MovieOptionsWidget, including all inherited members. bitrateSpinBoxsofa::gui::qt::MovieOptionsWidget; codecComboBoxsofa::gui::qt::MovieOptionsWidget; listCodecssofa::gui::qt::MovieOptionsWidget; MovieOptionsWidget(QWidget *parent=nullptr)sofa::gui::qt::MovieOptionsWidget. Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_movie_options_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_movie_options_widget-members.html
Deployability,update,update,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::ObjectStateListener Member List . This is the complete list of members for sofa::gui::qt::ObjectStateListener, including all inherited members. addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; getInputs()sofa::core::objectmodel::DDGNode; getOutputs()sofa::core::objectmodel::DDGNode; inputssofa::core::objectmodel::DDGNodeprotected; isDirty() constsofa::core::objectmodel::DDGNodeinline; itemsofa::gui::qt::ObjectStateListener; notifyEndEdit() overridesofa::gui::qt::ObjectStateListenervirtual; objectsofa::gui::qt::ObjectStateListener; ObjectStateListener(QTreeWidgetItem *item_, sofa::core::objectmodel::Base *object_)sofa::gui::qt::ObjectStateListener; outputssofa::core::objectmodel::DDGNodeprotected; setDirtyOutputs()sofa::core::objectmodel::DDGNodevirtual; setDirtyValue()sofa::core::objectmodel::DDGNodevirtual; update() overridesofa::gui::qt::ObjectStateListenervirtual; updateIfDirty() constsofa::core::objectmodel::DDGNode; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~ObjectStateListener() overridesofa::gui::qt::ObjectStateListener. Generated on Mon Nov 11 2024 03:23:42 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_object_state_listener-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_object_state_listener-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::ObjectStateListener Member List . This is the complete list of members for sofa::gui::qt::ObjectStateListener, including all inherited members. addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; getInputs()sofa::core::objectmodel::DDGNode; getOutputs()sofa::core::objectmodel::DDGNode; inputssofa::core::objectmodel::DDGNodeprotected; isDirty() constsofa::core::objectmodel::DDGNodeinline; itemsofa::gui::qt::ObjectStateListener; notifyEndEdit() overridesofa::gui::qt::ObjectStateListenervirtual; objectsofa::gui::qt::ObjectStateListener; ObjectStateListener(QTreeWidgetItem *item_, sofa::core::objectmodel::Base *object_)sofa::gui::qt::ObjectStateListener; outputssofa::core::objectmodel::DDGNodeprotected; setDirtyOutputs()sofa::core::objectmodel::DDGNodevirtual; setDirtyValue()sofa::core::objectmodel::DDGNodevirtual; update() overridesofa::gui::qt::ObjectStateListenervirtual; updateIfDirty() constsofa::core::objectmodel::DDGNode; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~ObjectStateListener() overridesofa::gui::qt::ObjectStateListener. Generated on Mon Nov 11 2024 03:23:42 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_object_state_listener-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_object_state_listener-members.html
Deployability,update,update,"﻿. SOFA API: sofa::gui::qt::ObjectStateListener Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::gui::qt::ObjectStateListener Class Reference . #include <GraphListenerQListView.h>. Inheritance diagram for sofa::gui::qt::ObjectStateListener:. [legend]; Detailed Description; A listener to connect changes on the component state with its graphical view. The listener is added to the ComponentState of an object to track changes to and update the icon/treewidgetitem when this happens. . Public Attributes; QTreeWidgetItem * item;  ; sofa::core::objectmodel::Base::SPtr object;  . Public Member Functions;  ObjectStateListener (QTreeWidgetItem *item_, sofa::core::objectmodel::Base *object_);  ;  ~ObjectStateListener () override;  ; void update () override;  Update this value. More...;  ; void notifyEndEdit () override;  Notify links that the DGNode has been modified. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; vo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_object_state_listener.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_object_state_listener.html
Modifiability,inherit,inherited,"r Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::gui::qt::ObjectStateListener Class Reference . #include <GraphListenerQListView.h>. Inheritance diagram for sofa::gui::qt::ObjectStateListener:. [legend]; Detailed Description; A listener to connect changes on the component state with its graphical view. The listener is added to the ComponentState of an object to track changes to and update the icon/treewidgetitem when this happens. . Public Attributes; QTreeWidgetItem * item;  ; sofa::core::objectmodel::Base::SPtr object;  . Public Member Functions;  ObjectStateListener (QTreeWidgetItem *item_, sofa::core::objectmodel::Base *object_);  ;  ~ObjectStateListener () override;  ; void update () override;  Update this value. More...;  ; void notifyEndEdit () override;  Notify links that the DGNode has been modified. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. Mo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_object_state_listener.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_object_state_listener.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::PieWidget Member List . This is the complete list of members for sofa::gui::qt::PieWidget, including all inherited members. clear()sofa::gui::qt::PieWidget; colorArraysofa::gui::qt::PieWidgetstatic; datasofa::gui::qt::PieWidgetprotected; getColor(int i)sofa::gui::qt::PieWidgetstatic; paintEvent(QPaintEvent *)sofa::gui::qt::PieWidget; PieWidget(QWidget *parent)sofa::gui::qt::PieWidget; selectionsofa::gui::qt::PieWidgetprotected; setChart(std::vector< dataTime > &value, unsigned int s)sofa::gui::qt::PieWidget; sizePiesofa::gui::qt::PieWidgetprotected; totalTimesofa::gui::qt::PieWidgetprotected. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_pie_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_pie_widget-members.html
Usability,clear,clear,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::PieWidget Member List . This is the complete list of members for sofa::gui::qt::PieWidget, including all inherited members. clear()sofa::gui::qt::PieWidget; colorArraysofa::gui::qt::PieWidgetstatic; datasofa::gui::qt::PieWidgetprotected; getColor(int i)sofa::gui::qt::PieWidgetstatic; paintEvent(QPaintEvent *)sofa::gui::qt::PieWidget; PieWidget(QWidget *parent)sofa::gui::qt::PieWidget; selectionsofa::gui::qt::PieWidgetprotected; setChart(std::vector< dataTime > &value, unsigned int s)sofa::gui::qt::PieWidget; sizePiesofa::gui::qt::PieWidgetprotected; totalTimesofa::gui::qt::PieWidgetprotected. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_pie_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_pie_widget-members.html
Usability,clear,clear,"﻿. SOFA API: sofa::gui::qt::PieWidget Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::gui::qt::PieWidget Class Reference . #include <PieWidget.h>. Inheritance diagram for sofa::gui::qt::PieWidget:. [legend]. Static Public Attributes; static std::vector< type::Vec< 3, int > > colorArray;  . Protected Attributes; std::vector< dataTime > data;  ; unsigned int selection;  ; double totalTime;  ; int sizePie;  . Public Member Functions;  PieWidget (QWidget *parent);  ; void paintEvent (QPaintEvent *);  ; void setChart (std::vector< dataTime > &value, unsigned int s);  ; void clear ();  . Static Public Member Functions; static type::Vec< 3, int > getColor (int i);  . Attribute details. ◆ colorArray. std::vector< type::Vec< 3, int > > sofa::gui::qt::PieWidget::colorArray. static . ◆ data. std::vector< dataTime > sofa::gui::qt::PieWidget::data. protected . ◆ selection. unsigned int sofa::gui::qt::PieWidget::selection. protected . ◆ sizePie. int sofa::gui::qt::PieWidget::sizePie. protected . ◆ totalTime. double sofa::gui::qt::PieWidget::totalTime. protected . Constructor details. ◆ PieWidget(). sofa::gui::qt::PieWidget::PieWidget ; (; QWidget * ; parent). Function details. ◆ clear(). void sofa::gui::qt::PieWidget::clear ; (; ). ◆ getColor(). type::Vec< 3, int > sofa::gui::qt::PieWidget::getColor ; (; int ; i). static . ◆ paintEvent(). void sofa::gui::qt::PieWidget::paintEvent ; (; QPaintEvent * ; ). ◆ setChart(). void sofa::gui::qt::PieWidget::setChart ; (; std::vector< dataTime > & ; value, . unsigned int ; s . ). sofaguiqtPieWidget; Generated on Mon Nov 11 2024 03:23:42 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_pie_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_pie_widget.html
Deployability,update,updateSelection,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::ProfilerChartView Member List . This is the complete list of members for sofa::gui::qt::ProfilerChartView, including all inherited members. drawForeground(QPainter *painter, const QRectF &rect)sofa::gui::qt::ProfilerChartViewprotectedvirtual; m_bufferSizesofa::gui::qt::ProfilerChartViewprotected; m_lineOriginsofa::gui::qt::ProfilerChartViewprotected; m_lineSelectsofa::gui::qt::ProfilerChartViewprotected; m_maxYsofa::gui::qt::ProfilerChartViewprotected; m_pointSelectedsofa::gui::qt::ProfilerChartViewprotected; mousePressEvent(QMouseEvent *event)sofa::gui::qt::ProfilerChartViewprotectedvirtual; pointSelected(int)sofa::gui::qt::ProfilerChartViewsignal; ProfilerChartView(QChart *chart, QWidget *parent, int bufferSize)sofa::gui::qt::ProfilerChartView; updateSelection(int x)sofa::gui::qt::ProfilerChartViewslot; updateYMax(int y)sofa::gui::qt::ProfilerChartViewinline. Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_profiler_chart_view-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_profiler_chart_view-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::ProfilerChartView Member List . This is the complete list of members for sofa::gui::qt::ProfilerChartView, including all inherited members. drawForeground(QPainter *painter, const QRectF &rect)sofa::gui::qt::ProfilerChartViewprotectedvirtual; m_bufferSizesofa::gui::qt::ProfilerChartViewprotected; m_lineOriginsofa::gui::qt::ProfilerChartViewprotected; m_lineSelectsofa::gui::qt::ProfilerChartViewprotected; m_maxYsofa::gui::qt::ProfilerChartViewprotected; m_pointSelectedsofa::gui::qt::ProfilerChartViewprotected; mousePressEvent(QMouseEvent *event)sofa::gui::qt::ProfilerChartViewprotectedvirtual; pointSelected(int)sofa::gui::qt::ProfilerChartViewsignal; ProfilerChartView(QChart *chart, QWidget *parent, int bufferSize)sofa::gui::qt::ProfilerChartView; updateSelection(int x)sofa::gui::qt::ProfilerChartViewslot; updateYMax(int y)sofa::gui::qt::ProfilerChartViewinline. Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_profiler_chart_view-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_profiler_chart_view-members.html
Deployability,update,update,"﻿. SOFA API: sofa::gui::qt::ProfilerChartView Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; Signals |; Public Slots |; List of all members . sofa::gui::qt::ProfilerChartView Class Reference . #include <SofaWindowProfiler.h>; The ProfilerChartView class is a override of QtCharts::QChartView to be able to catch mouse selection and update all widgets of. ; More... Inheritance diagram for sofa::gui::qt::ProfilerChartView:. [legend]; Detailed Description; The ProfilerChartView class is a override of QtCharts::QChartView to be able to catch mouse selection and update all widgets of. ; See alsoSofaWindowProfiler Will also override drawForeground to draw a line to show the selected step. . Protected Attributes; int m_bufferSize;  copy of the series size to check if selection is not out of bound More...;  ; QPointF m_lineSelect;  2D point of the line to draw the selection More...;  ; QPointF m_lineOrigin;  ; int m_pointSelected;  Step number selected on the graph. -1 if none. More...;  ; int m_maxY;  Stored value of the Y axis max. More...;  . Public Member Functions;  ProfilerChartView (QChart *chart, QWidget *parent, int bufferSize);  ; void updateYMax (int y);  method to update the max value of the Y axis (for line rendering). More...;  . Protected Member Functions; virtual void mousePressEvent (QMouseEvent *event);  Override to catch mouse selection on the graph. More...;  ; virtual void drawForeground (QPainter *painter, const QRectF &rect);  Override to draw line at the step selected. More...;  . Signals; void pointSelected (int);  signal emitted when a step has been selected on the graph More...;  . Public Slots; void updateSelection (int x);  method to update the selection on the graph. More...;  . Attribute details. ◆ m_bufferSize. int sofa::gui::qt::ProfilerChartView::m_bufferSize. protected . copy of the series size to check if selection is ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_profiler_chart_view.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_profiler_chart_view.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QAddRecordedCameraOperation Member List . This is the complete list of members for sofa::gui::qt::QAddRecordedCameraOperation, including all inherited members. AddRecordedCameraOperation()sofa::gui::common::AddRecordedCameraOperationinline; buttonsofa::gui::common::Operationprotected; configure(common::PickHandler *picker, sofa::component::setting::MouseButtonSetting *button) overridesofa::gui::qt::QAddRecordedCameraOperationvirtual; sofa::gui::common::AddRecordedCameraOperation::configure(PickHandler *picker, MOUSE_BUTTON b)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p) overridesofa::gui::common::AddRecordedCameraOperationprotectedvirtual; createPerformer()sofa::gui::common::Operationvirtual; createWidgetFromData(sofa::core::objectmodel::BaseData *data)sofa::gui::qt::QMouseOperation; defaultPerformerType() overridesofa::gui::common::AddRecordedCameraOperationprotectedvirtual; end()sofa::gui::common::Operationvirtual; endOperation()sofa::gui::common::Operationinlinevirtual; execution()sofa::gui::common::Operationinlinevirtual; getDescription()sofa::gui::common::AddRecordedCameraOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; mbsettingsofa::gui::common::Operationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; QAddRecordedCameraOperation()sofa::gui::qt::QAddRecordedCameraOperation; setSetting(sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; settingsofa::gui::common::AddRecordedCameraOperationprotected; start()sofa::gui::common::Operationvirtual; w",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_add_recorded_camera_operation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_add_recorded_camera_operation-members.html
Performance,perform,performer,"ddRecordedCameraOperation, including all inherited members. AddRecordedCameraOperation()sofa::gui::common::AddRecordedCameraOperationinline; buttonsofa::gui::common::Operationprotected; configure(common::PickHandler *picker, sofa::component::setting::MouseButtonSetting *button) overridesofa::gui::qt::QAddRecordedCameraOperationvirtual; sofa::gui::common::AddRecordedCameraOperation::configure(PickHandler *picker, MOUSE_BUTTON b)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p) overridesofa::gui::common::AddRecordedCameraOperationprotectedvirtual; createPerformer()sofa::gui::common::Operationvirtual; createWidgetFromData(sofa::core::objectmodel::BaseData *data)sofa::gui::qt::QMouseOperation; defaultPerformerType() overridesofa::gui::common::AddRecordedCameraOperationprotectedvirtual; end()sofa::gui::common::Operationvirtual; endOperation()sofa::gui::common::Operationinlinevirtual; execution()sofa::gui::common::Operationinlinevirtual; getDescription()sofa::gui::common::AddRecordedCameraOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; mbsettingsofa::gui::common::Operationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; QAddRecordedCameraOperation()sofa::gui::qt::QAddRecordedCameraOperation; setSetting(sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; settingsofa::gui::common::AddRecordedCameraOperationprotected; start()sofa::gui::common::Operationvirtual; wait()sofa::gui::common::Operationinlinevirtual; WidgetDirty(bool)sofa::gui::qt::QMouseOperationslot; ~Operation()sofa::gui::common::Operationinlinevirtual. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_add_recorded_camera_operation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_add_recorded_camera_operation-members.html
Deployability,release,released,"t::QAddRecordedCameraOperation:. [legend]. Public Member Functions;  QAddRecordedCameraOperation ();  ; void configure (common::PickHandler *picker, sofa::component::setting::MouseButtonSetting *button) override;  ;  Public Member Functions inherited from sofa::gui::qt::QMouseOperation; DataWidget * createWidgetFromData (sofa::core::objectmodel::BaseData *data);  ;  Public Member Functions inherited from sofa::gui::common::AddRecordedCameraOperation;  AddRecordedCameraOperation ();  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Protected Attributes inherited from sofa::gui::common::AddRecordedCameraOperation; sofa::gui::component::AddRecordedCameraButtonSetting::SPtr setting;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  ;  Static Public Member Functions inherited from sofa::gui::common::AddRecordedCameraOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_add_recorded_camera_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_add_recorded_camera_operation.html
Modifiability,config,configure,"﻿. SOFA API: sofa::gui::qt::QAddRecordedCameraOperation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gui::qt::QAddRecordedCameraOperation Class Reference . #include <QMouseOperations.h>. Inheritance diagram for sofa::gui::qt::QAddRecordedCameraOperation:. [legend]. Public Member Functions;  QAddRecordedCameraOperation ();  ; void configure (common::PickHandler *picker, sofa::component::setting::MouseButtonSetting *button) override;  ;  Public Member Functions inherited from sofa::gui::qt::QMouseOperation; DataWidget * createWidgetFromData (sofa::core::objectmodel::BaseData *data);  ;  Public Member Functions inherited from sofa::gui::common::AddRecordedCameraOperation;  AddRecordedCameraOperation ();  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Protected Attributes inherited from sofa::gui::common::AddRecordedCameraOperation; sofa::gui::component::AddRecordedCameraButtonSetting::SPtr setting;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHan",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_add_recorded_camera_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_add_recorded_camera_operation.html
Performance,perform,performer,":setting::MouseButtonSetting *button) override;  ;  Public Member Functions inherited from sofa::gui::qt::QMouseOperation; DataWidget * createWidgetFromData (sofa::core::objectmodel::BaseData *data);  ;  Public Member Functions inherited from sofa::gui::common::AddRecordedCameraOperation;  AddRecordedCameraOperation ();  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Protected Attributes inherited from sofa::gui::common::AddRecordedCameraOperation; sofa::gui::component::AddRecordedCameraButtonSetting::SPtr setting;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  ;  Static Public Member Functions inherited from sofa::gui::common::AddRecordedCameraOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  ;  Protected Member Functions inherited from sofa::gui::common::AddRecordedCameraOperation; virtual std::string defa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_add_recorded_camera_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_add_recorded_camera_operation.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QAddSutureOperation Member List . This is the complete list of members for sofa::gui::qt::QAddSutureOperation, including all inherited members. AddSutureOperation()sofa::gui::common::AddSutureOperationinline; buttonsofa::gui::common::Operationprotected; configure(common::PickHandler *picker, common::MOUSE_BUTTON b) overridesofa::gui::qt::QAddSutureOperationinlinevirtual; sofa::gui::common::AddSutureOperation::configure(PickHandler *picker, sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p) overridesofa::gui::common::AddSutureOperationprotectedvirtual; createPerformer()sofa::gui::common::Operationvirtual; dampingsofa::gui::qt::QAddSutureOperationprotected; defaultPerformerType() overridesofa::gui::common::AddSutureOperationprotectedvirtual; end()sofa::gui::common::Operationvirtual; endOperation()sofa::gui::common::Operationinlinevirtual; execution()sofa::gui::common::Operationinlinevirtual; getDamping() const overridesofa::gui::qt::QAddSutureOperationvirtual; getDescription()sofa::gui::common::AddSutureOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; getStiffness() const overridesofa::gui::qt::QAddSutureOperationvirtual; mbsettingsofa::gui::common::Operationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; QAddSutureOperation()sofa::gui::qt::QAddSutureOperation; setDamping(double f)sofa::gui::common::AddSutureOperationinline; setSetting(sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; setStiffness(double f",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_add_suture_operation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_add_suture_operation-members.html
Performance,perform,performer," AddSutureOperation()sofa::gui::common::AddSutureOperationinline; buttonsofa::gui::common::Operationprotected; configure(common::PickHandler *picker, common::MOUSE_BUTTON b) overridesofa::gui::qt::QAddSutureOperationinlinevirtual; sofa::gui::common::AddSutureOperation::configure(PickHandler *picker, sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p) overridesofa::gui::common::AddSutureOperationprotectedvirtual; createPerformer()sofa::gui::common::Operationvirtual; dampingsofa::gui::qt::QAddSutureOperationprotected; defaultPerformerType() overridesofa::gui::common::AddSutureOperationprotectedvirtual; end()sofa::gui::common::Operationvirtual; endOperation()sofa::gui::common::Operationinlinevirtual; execution()sofa::gui::common::Operationinlinevirtual; getDamping() const overridesofa::gui::qt::QAddSutureOperationvirtual; getDescription()sofa::gui::common::AddSutureOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; getStiffness() const overridesofa::gui::qt::QAddSutureOperationvirtual; mbsettingsofa::gui::common::Operationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; QAddSutureOperation()sofa::gui::qt::QAddSutureOperation; setDamping(double f)sofa::gui::common::AddSutureOperationinline; setSetting(sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; setStiffness(double f",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_add_suture_operation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_add_suture_operation-members.html
Deployability,release,released,"ting;  ; MOUSE_BUTTON button;  . Public Member Functions;  QAddSutureOperation ();  ; double getStiffness () const override;  ; double getDamping () const override;  ; void configure (common::PickHandler *picker, common::MOUSE_BUTTON b) override;  ;  Public Member Functions inherited from sofa::gui::common::AddSutureOperation;  AddSutureOperation ();  ;  ~AddSutureOperation () override;  ; void setStiffness (double f);  ; void setDamping (double f);  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Static Public Member Functions inherited from sofa::gui::common::AddSutureOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  ;  Protected Member Functions inherited from sofa::gui::common::AddSutureOperation; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  . Attribute details. ◆ damping. QLineEdit* sofa::gui::qt::QAddSu",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_add_suture_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_add_suture_operation.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::qt::QAddSutureOperation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::gui::qt::QAddSutureOperation Class Reference . #include <QMouseOperations.h>. Inheritance diagram for sofa::gui::qt::QAddSutureOperation:. [legend]. Protected Attributes; QLineEdit * stiffness;  ; QLineEdit * damping;  ;  Protected Attributes inherited from sofa::gui::common::AddSutureOperation; double stiffness;  ; double damping;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  . Public Member Functions;  QAddSutureOperation ();  ; double getStiffness () const override;  ; double getDamping () const override;  ; void configure (common::PickHandler *picker, common::MOUSE_BUTTON b) override;  ;  Public Member Functions inherited from sofa::gui::common::AddSutureOperation;  AddSutureOperation ();  ;  ~AddSutureOperation () override;  ; void setStiffness (double f);  ; void setDamping (double f);  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Additional",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_add_suture_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_add_suture_operation.html
Performance,perform,performer," ; void configure (common::PickHandler *picker, common::MOUSE_BUTTON b) override;  ;  Public Member Functions inherited from sofa::gui::common::AddSutureOperation;  AddSutureOperation ();  ;  ~AddSutureOperation () override;  ; void setStiffness (double f);  ; void setDamping (double f);  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Static Public Member Functions inherited from sofa::gui::common::AddSutureOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  ;  Protected Member Functions inherited from sofa::gui::common::AddSutureOperation; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  . Attribute details. ◆ damping. QLineEdit* sofa::gui::qt::QAddSutureOperation::damping. protected . ◆ stiffness. QLineEdit* sofa::gui::qt::QAddSutureOperation::stiffness. protected . Constructor details. ◆ QAddSutureOperation(). ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_add_suture_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_add_suture_operation.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QAttachOperation Member List . This is the complete list of members for sofa::gui::qt::QAttachOperation, including all inherited members. arrowSizeWidgetsofa::gui::qt::QAttachOperationprotected; AttachOperation(sofa::gui::component::AttachBodyButtonSetting::SPtr s=sofa::core::objectmodel::New< sofa::gui::component::AttachBodyButtonSetting >())sofa::gui::common::AttachOperationinline; buttonsofa::gui::common::Operationprotected; configure(common::PickHandler *picker, sofa::component::setting::MouseButtonSetting *button) overridesofa::gui::qt::QAttachOperationvirtual; sofa::gui::common::AttachOperation::configure(PickHandler *picker, MOUSE_BUTTON b)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p) overridesofa::gui::common::AttachOperationprotectedvirtual; createPerformer()sofa::gui::common::Operationvirtual; createWidgetFromData(sofa::core::objectmodel::BaseData *data)sofa::gui::qt::QMouseOperation; defaultPerformerType() overridesofa::gui::common::AttachOperationprotectedvirtual; end()sofa::gui::common::Operationvirtual; endOperation()sofa::gui::common::Operationinlinevirtual; execution()sofa::gui::common::Operationinlinevirtual; getArrowSize() constsofa::gui::common::AttachOperationinline; getDescription()sofa::gui::common::AttachOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; getShowFactorSize() constsofa::gui::common::AttachOperationinline; getStiffness() constsofa::gui::common::AttachOperationinline; mbsettingsofa::gui::common::Operationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; Q",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_attach_operation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_attach_operation-members.html
Performance,perform,performer," arrowSizeWidgetsofa::gui::qt::QAttachOperationprotected; AttachOperation(sofa::gui::component::AttachBodyButtonSetting::SPtr s=sofa::core::objectmodel::New< sofa::gui::component::AttachBodyButtonSetting >())sofa::gui::common::AttachOperationinline; buttonsofa::gui::common::Operationprotected; configure(common::PickHandler *picker, sofa::component::setting::MouseButtonSetting *button) overridesofa::gui::qt::QAttachOperationvirtual; sofa::gui::common::AttachOperation::configure(PickHandler *picker, MOUSE_BUTTON b)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p) overridesofa::gui::common::AttachOperationprotectedvirtual; createPerformer()sofa::gui::common::Operationvirtual; createWidgetFromData(sofa::core::objectmodel::BaseData *data)sofa::gui::qt::QMouseOperation; defaultPerformerType() overridesofa::gui::common::AttachOperationprotectedvirtual; end()sofa::gui::common::Operationvirtual; endOperation()sofa::gui::common::Operationinlinevirtual; execution()sofa::gui::common::Operationinlinevirtual; getArrowSize() constsofa::gui::common::AttachOperationinline; getDescription()sofa::gui::common::AttachOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; getShowFactorSize() constsofa::gui::common::AttachOperationinline; getStiffness() constsofa::gui::common::AttachOperationinline; mbsettingsofa::gui::common::Operationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; Q",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_attach_operation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_attach_operation-members.html
Deployability,release,released,"ata *data);  ;  Public Member Functions inherited from sofa::gui::common::AttachOperation;  AttachOperation (sofa::gui::component::AttachBodyButtonSetting::SPtr s=sofa::core::objectmodel::New< sofa::gui::component::AttachBodyButtonSetting >());  ;  ~AttachOperation () override;  ; void setStiffness (double s);  ; double getStiffness () const;  ; void setArrowSize (double s);  ; double getArrowSize () const;  ; void setShowFactorSize (double s);  ; double getShowFactorSize () const;  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Static Public Member Functions inherited from sofa::gui::common::AttachOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  ;  Protected Member Functions inherited from sofa::gui::common::AttachOperation; void setSetting (sofa::component::setting::MouseButtonSetting *s) override;  ; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  ;  Public Slots inherited from sofa::gui::qt::QMouseOperation; void W",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_attach_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_attach_operation.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::qt::QAttachOperation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::gui::qt::QAttachOperation Class Reference . #include <QMouseOperations.h>. Inheritance diagram for sofa::gui::qt::QAttachOperation:. [legend]. Protected Attributes; DataWidget * stiffnessWidget;  ; DataWidget * arrowSizeWidget;  ; DataWidget * showSizeFactorWidget;  ;  Protected Attributes inherited from sofa::gui::common::AttachOperation; sofa::gui::component::AttachBodyButtonSetting::SPtr setting;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  . Public Member Functions;  QAttachOperation ();  ; void configure (common::PickHandler *picker, sofa::component::setting::MouseButtonSetting *button) override;  ;  Public Member Functions inherited from sofa::gui::qt::QMouseOperation; DataWidget * createWidgetFromData (sofa::core::objectmodel::BaseData *data);  ;  Public Member Functions inherited from sofa::gui::common::AttachOperation;  AttachOperation (sofa::gui::component::AttachBodyButtonSetting::SPtr s=sofa::core::objectmodel::New< sofa::gui::component::AttachBodyButtonSetting >());  ;  ~AttachOperation () override;  ; void setStiffness (double s);  ; double getStiffness () const;  ; void setArrowSize (double s);  ; double getArrowSize () const;  ; void setShowFactorSize (double s);  ; double getShowFactorSize () const;  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOpera",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_attach_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_attach_operation.html
Performance,perform,performer,"ent::AttachBodyButtonSetting::SPtr s=sofa::core::objectmodel::New< sofa::gui::component::AttachBodyButtonSetting >());  ;  ~AttachOperation () override;  ; void setStiffness (double s);  ; double getStiffness () const;  ; void setArrowSize (double s);  ; double getArrowSize () const;  ; void setShowFactorSize (double s);  ; double getShowFactorSize () const;  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Static Public Member Functions inherited from sofa::gui::common::AttachOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  ;  Protected Member Functions inherited from sofa::gui::common::AttachOperation; void setSetting (sofa::component::setting::MouseButtonSetting *s) override;  ; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  ;  Public Slots inherited from sofa::gui::qt::QMouseOperation; void WidgetDirty (bool);  . Attribute details. ◆ arrowSizeWidget. DataWidget* sofa::gui::qt::QAttachOperation::arrowSizeWidget. prot",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_attach_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_attach_operation.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QDataDescriptionWidget Member List . This is the complete list of members for sofa::gui::qt::QDataDescriptionWidget, including all inherited members. addRow(QGridLayout *grid, const std::string &title, const std::string &value, unsigned int row, unsigned int minimumWidth=0)sofa::gui::qt::QDataDescriptionWidget; addRowHyperLink(QGridLayout *grid, const std::string &title, const std::string &value, unsigned int row, unsigned int minimumWidth=0)sofa::gui::qt::QDataDescriptionWidget; QDataDescriptionWidget(QWidget *parent, core::objectmodel::Base *object)sofa::gui::qt::QDataDescriptionWidget. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_data_description_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_data_description_widget-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QDataSeries< T > Member List . This is the complete list of members for sofa::gui::qt::QDataSeries< T >, including all inherited members. copy() constsofa::gui::qt::QDataSeries< T >inlinevirtual; data0sofa::gui::qt::QDataSeries< T >protected; m_xMaxsofa::gui::qt::QDataSeries< T >; m_xMinsofa::gui::qt::QDataSeries< T >; m_yMaxsofa::gui::qt::QDataSeries< T >; m_yMinsofa::gui::qt::QDataSeries< T >; parseData()sofa::gui::qt::QDataSeries< T >inlinevirtual; QDataSeries()sofa::gui::qt::QDataSeries< T >inline; QDataSeries(const QDataSeries< T > &c)sofa::gui::qt::QDataSeries< T >inline; real_type typedefsofa::gui::qt::QDataSeries< T >; sample(sofa::Index i) constsofa::gui::qt::QDataSeries< T >inlinevirtual; setData(const T *p)sofa::gui::qt::QDataSeries< T >inline; size() constsofa::gui::qt::QDataSeries< T >inlinevirtual; trait typedefsofa::gui::qt::QDataSeries< T >; value_type typedefsofa::gui::qt::QDataSeries< T >; vtrait typedefsofa::gui::qt::QDataSeries< T >. Generated on Mon Nov 11 2024 03:23:42 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_data_series-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_data_series-members.html
Deployability,update,updateDataValue,"e list of members for sofa::gui::qt::QDataSimpleEdit, including all inherited members. baseDatasofa::gui::qt::DataWidgetprotected; countersofa::gui::qt::DataWidgetprotected; create(T *, const CreatorArgument &arg)sofa::gui::qt::DataWidgetinlinestatic; CreateDataWidget(const DataWidget::CreatorArgument &dwarg)sofa::gui::qt::DataWidgetstatic; createWidgets() overridesofa::gui::qt::QDataSimpleEditvirtual; DataOwnerDirty(bool)sofa::gui::qt::DataWidgetsignal; dataValueChanged(QString dataValueString)sofa::gui::qt::DataWidgetsignal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; innerWidget_sofa::gui::qt::QDataSimpleEditprotected; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::DataWidget; numColumnWidget() overridesofa::gui::qt::QDataSimpleEditinlinevirtual; QDataSimpleEdit(QWidget *, const char *name, core::objectmodel::BaseData *)sofa::gui::qt::QDataSimpleEdit; readFromData() overridesofa::gui::qt::QDataSimpleEditprotectedvirtual; setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly) overridesofa::gui::qt::QDataSimpleEditvirtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setWidgetDirty(bool b=true)sofa::gui::qt::DataWidgetslot; sizeWidget() overridesofa::gui::qt::QDataSimpleEditinlinevirtual; updateDataValue()sofa::gui::qt::DataWidgetslot; updateVisibility()sofa::gui::qt::DataWidget; updateWidgetValue()sofa::gui::qt::DataWidgetslot; WidgetDirty(bool)sofa::gui::qt::DataWidgetsignal; writeToData() overridesofa::gui::qt::QDataSimpleEditprotectedvirtual; ~DataWidget() overridesofa::gui::qt::DataWidget. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_data_simple_edit-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_data_simple_edit-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QDataSimpleEdit Member List . This is the complete list of members for sofa::gui::qt::QDataSimpleEdit, including all inherited members. baseDatasofa::gui::qt::DataWidgetprotected; countersofa::gui::qt::DataWidgetprotected; create(T *, const CreatorArgument &arg)sofa::gui::qt::DataWidgetinlinestatic; CreateDataWidget(const DataWidget::CreatorArgument &dwarg)sofa::gui::qt::DataWidgetstatic; createWidgets() overridesofa::gui::qt::QDataSimpleEditvirtual; DataOwnerDirty(bool)sofa::gui::qt::DataWidgetsignal; dataValueChanged(QString dataValueString)sofa::gui::qt::DataWidgetsignal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; innerWidget_sofa::gui::qt::QDataSimpleEditprotected; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::DataWidget; numColumnWidget() overridesofa::gui::qt::QDataSimpleEditinlinevirtual; QDataSimpleEdit(QWidget *, const char *name, core::objectmodel::BaseData *)sofa::gui::qt::QDataSimpleEdit; readFromData() overridesofa::gui::qt::QDataSimpleEditprotectedvirtual; setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly) overridesofa::gui::qt::QDataSimpleEditvirtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setWidgetDirty(bool b=true)sofa::gui::qt::DataWidgetslot; sizeWidget() overridesofa::gui::qt::QDataSimpleEditinlinevirtual; updateDataValue()sofa::gui::qt::DataWidgetslot; updateVisibility()sofa::gui::qt::DataWidget; updateWidgetValue()sofa::gui::qt::DataWidgetslot; WidgetDirty(bool)sofa::gui::qt::DataWidgetsignal; writeToData() over",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_data_simple_edit-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_data_simple_edit-members.html
Deployability,update,updateVisibility,"DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  QDataSimpleEdit (QWidget *, const char *name, core::objectmodel::BaseData *);  ; unsigned int numColumnWidget () override;  Helper method for column. More...;  ; unsigned int sizeWidget () override;  Helper method to give a size. More...;  ; bool createWidgets () override;  ; void setDataReadOnly (bool readOnly) override;  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  . Protected Member Functions; void readFromData () override;  The implementation of this method tells how the widget reads the value of the data. More...;  ; void writeToData () override;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Attribute details.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_data_simple_edit.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_data_simple_edit.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::qt::QDataSimpleEdit Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::qt::QDataSimpleEdit Class Reference . #include <QDisplayDataWidget.h>. Inheritance diagram for sofa::gui::qt::QDataSimpleEdit:. [legend]. Protected Attributes; QSimpleEdit innerWidget_;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  QDataSimpleEdit (QWidget *, const char *name, core::objectmodel::BaseData *);  ; unsigned int numColumnWidget () override;  Helper method for column. More...;  ; unsigned int sizeWidget () override;  Helper method to give a size. More...;  ; bool createWidgets () override;  ; void setDataReadOnly (bool readOnly) override;  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  . Protected Member Functions; void readFromData () override;  The implementation of this method tells how the widget reads the value of the data. More...;  ; void writeToData () override;  . Additiona",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_data_simple_edit.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_data_simple_edit.html
Security,access,accessor,"impleEdit:. [legend]. Protected Attributes; QSimpleEdit innerWidget_;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  QDataSimpleEdit (QWidget *, const char *name, core::objectmodel::BaseData *);  ; unsigned int numColumnWidget () override;  Helper method for column. More...;  ; unsigned int sizeWidget () override;  Helper method to give a size. More...;  ; bool createWidgets () override;  ; void setDataReadOnly (bool readOnly) override;  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  . Protected Member Functions; void readFromData () override;  The implementation of this method tells how the widget reads the value of the data. More...;  ; void writeToData () override;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataV",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_data_simple_edit.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_data_simple_edit.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QDisplayDataInfoWidget Member List . This is the complete list of members for sofa::gui::qt::QDisplayDataInfoWidget, including all inherited members. datasofa::gui::qt::QDisplayDataInfoWidgetprotected; formatHelperString(const std::string &helper, std::string &final_text)sofa::gui::qt::QDisplayDataInfoWidgetprotected; getNumLines() constsofa::gui::qt::QDisplayDataInfoWidgetinlineslot; linkEdited()sofa::gui::qt::QDisplayDataInfoWidgetslot; LinkIcon()sofa::gui::qt::QDisplayDataInfoWidgetinlineprotectedstatic; linkModification()sofa::gui::qt::QDisplayDataInfoWidgetslot; linkpath_editsofa::gui::qt::QDisplayDataInfoWidgetprotected; numLines(const std::string &str)sofa::gui::qt::QDisplayDataInfoWidgetprotectedstatic; numLines_sofa::gui::qt::QDisplayDataInfoWidgetprotected; QDisplayDataInfoWidget(QWidget *parent, const std::string &helper, core::objectmodel::BaseData *d, bool modifiable, const ModifyObjectFlags &modifyObjectFlags)sofa::gui::qt::QDisplayDataInfoWidget; WidgetDirty()sofa::gui::qt::QDisplayDataInfoWidgetsignal. Generated on Mon Nov 11 2024 03:23:37 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_data_info_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_data_info_widget-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QDisplayDataWidget Member List . This is the complete list of members for sofa::gui::qt::QDisplayDataWidget, including all inherited members. data_sofa::gui::qt::QDisplayDataWidgetprotected; datainfowidget_sofa::gui::qt::QDisplayDataWidgetprotected; DataOwnerDirty(bool)sofa::gui::qt::QDisplayDataWidgetsignal; DataUpdate()sofa::gui::qt::QDisplayDataWidgetsignal; dataValueChanged(QString)sofa::gui::qt::QDisplayDataWidgetsignal; datawidget_sofa::gui::qt::QDisplayDataWidgetprotected; flag()sofa::gui::qt::QDisplayDataWidgetinline; flags_sofa::gui::qt::QDisplayDataWidgetprotected; getNumWidgets() constsofa::gui::qt::QDisplayDataWidgetinline; gridLayout_sofa::gui::qt::QDisplayDataWidgetprotected; numWidgets_sofa::gui::qt::QDisplayDataWidgetprotected; QDisplayDataWidget(QWidget *parent, core::objectmodel::BaseData *data, const ModifyObjectFlags &flags)sofa::gui::qt::QDisplayDataWidget; RefreshIcon()sofa::gui::qt::QDisplayDataWidgetinlineprotectedstatic; UpdateData()sofa::gui::qt::QDisplayDataWidgetslot; UpdateWidgets()sofa::gui::qt::QDisplayDataWidgetslot; WidgetDirty(bool)sofa::gui::qt::QDisplayDataWidgetsignal; WidgetUpdate()sofa::gui::qt::QDisplayDataWidgetsignal. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_data_widget-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QDisplayLinkInfoWidget Member List . This is the complete list of members for sofa::gui::qt::QDisplayLinkInfoWidget, including all inherited members. formatHelperString(const std::string &helper, std::string &final_text)sofa::gui::qt::QDisplayLinkInfoWidgetprotected; getNumLines() constsofa::gui::qt::QDisplayLinkInfoWidgetinlineslot; linksofa::gui::qt::QDisplayLinkInfoWidgetprotected; numLines(const std::string &str)sofa::gui::qt::QDisplayLinkInfoWidgetprotectedstatic; numLines_sofa::gui::qt::QDisplayLinkInfoWidgetprotected; QDisplayLinkInfoWidget(QWidget *parent, const std::string &helper, core::objectmodel::BaseLink *l, bool modifiable)sofa::gui::qt::QDisplayLinkInfoWidget. Generated on Mon Nov 11 2024 03:23:42 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_link_info_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_link_info_widget-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QDisplayLinkWidget Member List . This is the complete list of members for sofa::gui::qt::QDisplayLinkWidget, including all inherited members. getNumWidgets() constsofa::gui::qt::QDisplayLinkWidgetinline; gridLayout_sofa::gui::qt::QDisplayLinkWidgetprotected; link_sofa::gui::qt::QDisplayLinkWidgetprotected; linkinfowidget_sofa::gui::qt::QDisplayLinkWidgetprotected; LinkOwnerDirty(bool)sofa::gui::qt::QDisplayLinkWidgetsignal; LinkUpdate()sofa::gui::qt::QDisplayLinkWidgetsignal; linkwidget_sofa::gui::qt::QDisplayLinkWidgetprotected; numWidgets_sofa::gui::qt::QDisplayLinkWidgetprotected; QDisplayLinkWidget(QWidget *parent, core::objectmodel::BaseLink *link, const ModifyObjectFlags &flags)sofa::gui::qt::QDisplayLinkWidget; RefreshIcon()sofa::gui::qt::QDisplayLinkWidgetinlineprotectedstatic; UpdateLink()sofa::gui::qt::QDisplayLinkWidgetslot; UpdateWidgets()sofa::gui::qt::QDisplayLinkWidgetslot; WidgetDirty(bool)sofa::gui::qt::QDisplayLinkWidgetsignal; WidgetUpdate()sofa::gui::qt::QDisplayLinkWidgetsignal. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_link_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_link_widget-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QDisplayPropertyWidget Member List . This is the complete list of members for sofa::gui::qt::QDisplayPropertyWidget, including all inherited members. addComponent(const QString &component, core::objectmodel::Base *base, QTreeWidgetItem *listItem, bool clear=true)sofa::gui::qt::QDisplayPropertyWidget; addData(const QString &component, const QString &group, sofa::core::objectmodel::BaseData *data)sofa::gui::qt::QDisplayPropertyWidget; addDescriptionItem(QTreeWidgetItem *groupItem, const QString &name, const QString &description)sofa::gui::qt::QDisplayPropertyWidgetprotected; addGroup(const QString &component, const QString &group)sofa::gui::qt::QDisplayPropertyWidget; addLink(const QString &component, const QString &group, sofa::core::objectmodel::BaseLink *link)sofa::gui::qt::QDisplayPropertyWidget; clear()sofa::gui::qt::QDisplayPropertyWidget; clearAll()sofa::gui::qt::QDisplayPropertyWidget; clearComponentOutput()sofa::gui::qt::QDisplayPropertyWidgetprotectedslot; clearComponentWarning()sofa::gui::qt::QDisplayPropertyWidgetprotectedslot; DefaultDataGroup()sofa::gui::qt::QDisplayPropertyWidgetinlinestatic; DefaultInfoGroup()sofa::gui::qt::QDisplayPropertyWidgetinlinestatic; DefaultLinkGroup()sofa::gui::qt::QDisplayPropertyWidgetinlinestatic; DefaultLogGroup()sofa::gui::qt::QDisplayPropertyWidgetinlinestatic; findComponent(const QString &component) constsofa::gui::qt::QDisplayPropertyWidgetprotected; findGroup(const QString &component, const QString &group) constsofa::gui::qt::QDisplayPropertyWidgetprotected; GraphHistoryManager classsofa::gui::qt::QDisplayPropertyWidgetfriend; LinkComponent classsofa::gui::qt::QDisplayPropertyWidgetfriend; QDisplayPropertyWidget(const ModifyObjectFlags &modifyFlags, QWidget *parent=nullptr)sofa::gui::qt::QDisplayPropertyWidget; setConsoleOutput(const QString &component, const QString &group, sofa::core::objectmodel::Base ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget-members.html
Usability,clear,clear,"ers. addComponent(const QString &component, core::objectmodel::Base *base, QTreeWidgetItem *listItem, bool clear=true)sofa::gui::qt::QDisplayPropertyWidget; addData(const QString &component, const QString &group, sofa::core::objectmodel::BaseData *data)sofa::gui::qt::QDisplayPropertyWidget; addDescriptionItem(QTreeWidgetItem *groupItem, const QString &name, const QString &description)sofa::gui::qt::QDisplayPropertyWidgetprotected; addGroup(const QString &component, const QString &group)sofa::gui::qt::QDisplayPropertyWidget; addLink(const QString &component, const QString &group, sofa::core::objectmodel::BaseLink *link)sofa::gui::qt::QDisplayPropertyWidget; clear()sofa::gui::qt::QDisplayPropertyWidget; clearAll()sofa::gui::qt::QDisplayPropertyWidget; clearComponentOutput()sofa::gui::qt::QDisplayPropertyWidgetprotectedslot; clearComponentWarning()sofa::gui::qt::QDisplayPropertyWidgetprotectedslot; DefaultDataGroup()sofa::gui::qt::QDisplayPropertyWidgetinlinestatic; DefaultInfoGroup()sofa::gui::qt::QDisplayPropertyWidgetinlinestatic; DefaultLinkGroup()sofa::gui::qt::QDisplayPropertyWidgetinlinestatic; DefaultLogGroup()sofa::gui::qt::QDisplayPropertyWidgetinlinestatic; findComponent(const QString &component) constsofa::gui::qt::QDisplayPropertyWidgetprotected; findGroup(const QString &component, const QString &group) constsofa::gui::qt::QDisplayPropertyWidgetprotected; GraphHistoryManager classsofa::gui::qt::QDisplayPropertyWidgetfriend; LinkComponent classsofa::gui::qt::QDisplayPropertyWidgetfriend; QDisplayPropertyWidget(const ModifyObjectFlags &modifyFlags, QWidget *parent=nullptr)sofa::gui::qt::QDisplayPropertyWidget; setConsoleOutput(const QString &component, const QString &group, sofa::core::objectmodel::Base *base)sofa::gui::qt::QDisplayPropertyWidget; setDescription(const QString &component, const QString &group, sofa::core::objectmodel::Base *base)sofa::gui::qt::QDisplayPropertyWidget; ~QDisplayPropertyWidget() overridesofa::gui::qt::QDisplayPropertyWidget. Gen",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget-members.html
Usability,clear,clear,"﻿. SOFA API: sofa::gui::qt::QDisplayPropertyWidget Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Slots |; Friends |; List of all members . sofa::gui::qt::QDisplayPropertyWidget Class Reference . #include <QDisplayPropertyWidget.h>. Inheritance diagram for sofa::gui::qt::QDisplayPropertyWidget:. [legend]. Public Member Functions;  QDisplayPropertyWidget (const ModifyObjectFlags &modifyFlags, QWidget *parent=nullptr);  ;  ~QDisplayPropertyWidget () override;  ; void addComponent (const QString &component, core::objectmodel::Base *base, QTreeWidgetItem *listItem, bool clear=true);  ; void addGroup (const QString &component, const QString &group);  ; void addData (const QString &component, const QString &group, sofa::core::objectmodel::BaseData *data);  ; void addLink (const QString &component, const QString &group, sofa::core::objectmodel::BaseLink *link);  ; void setDescription (const QString &component, const QString &group, sofa::core::objectmodel::Base *base);  ; void setConsoleOutput (const QString &component, const QString &group, sofa::core::objectmodel::Base *base);  ; void clear ();  ; void clearAll ();  . Static Public Member Functions; static QString DefaultDataGroup ();  ; static QString DefaultLinkGroup ();  ; static QString DefaultInfoGroup ();  ; static QString DefaultLogGroup ();  . Protected Member Functions; void addDescriptionItem (QTreeWidgetItem *groupItem, const QString &name, const QString &description);  ; QTreeWidgetItem * findComponent (const QString &component) const;  ; QTreeWidgetItem * findGroup (const QString &component, const QString &group) const;  . Protected Slots; void clearComponentOutput ();  ; void clearComponentWarning ();  . Friends; class GraphHistoryManager;  ; class LinkComponent;  . Constructor details. ◆ QDisplayPropertyWidget(). sofa::gui::qt::QDisplayPropertyWidget::QDisplayPrope",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget.html
Deployability,update,updateDirtyWidget,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QDisplayTreeItemWidget Member List . This is the complete list of members for sofa::gui::qt::QDisplayTreeItemWidget, including all inherited members. QDisplayTreeItemWidget(QWidget *parent=nullptr, QTreeWidgetItem *item=nullptr)sofa::gui::qt::QDisplayTreeItemWidget; updateDirtyWidget()sofa::gui::qt::QDisplayTreeItemWidgetprotectedslot; ~QDisplayTreeItemWidget() overridesofa::gui::qt::QDisplayTreeItemWidget. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_tree_item_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_tree_item_widget-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QDisplayTreeItemWidget Member List . This is the complete list of members for sofa::gui::qt::QDisplayTreeItemWidget, including all inherited members. QDisplayTreeItemWidget(QWidget *parent=nullptr, QTreeWidgetItem *item=nullptr)sofa::gui::qt::QDisplayTreeItemWidget; updateDirtyWidget()sofa::gui::qt::QDisplayTreeItemWidgetprotectedslot; ~QDisplayTreeItemWidget() overridesofa::gui::qt::QDisplayTreeItemWidget. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_tree_item_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_tree_item_widget-members.html
Deployability,update,updateDirtyWidget,"﻿. SOFA API: sofa::gui::qt::QDisplayTreeItemWidget Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Slots |; List of all members . sofa::gui::qt::QDisplayTreeItemWidget Class Reference . #include <QDisplayPropertyWidget.h>. Inheritance diagram for sofa::gui::qt::QDisplayTreeItemWidget:. [legend]. Public Member Functions;  QDisplayTreeItemWidget (QWidget *parent=nullptr, QTreeWidgetItem *item=nullptr);  ;  ~QDisplayTreeItemWidget () override;  . Protected Slots; void updateDirtyWidget ();  . Constructor details. ◆ QDisplayTreeItemWidget(). sofa::gui::qt::QDisplayTreeItemWidget::QDisplayTreeItemWidget ; (; QWidget * ; parent = nullptr, . QTreeWidgetItem * ; item = nullptr . ). ◆ ~QDisplayTreeItemWidget(). sofa::gui::qt::QDisplayTreeItemWidget::~QDisplayTreeItemWidget ; (; ). override . Function details. ◆ updateDirtyWidget. void sofa::gui::qt::QDisplayTreeItemWidget::updateDirtyWidget ; (; ). protectedslot . sofaguiqtQDisplayTreeItemWidget; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_tree_item_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_tree_item_widget.html
Deployability,update,updateYAxisBounds,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QEnergyStatWidget Member List . This is the complete list of members for sofa::gui::qt::QEnergyStatWidget, including all inherited members. flushSeries()sofa::gui::qt::QGraphStatWidgetprotected; m_axisXsofa::gui::qt::QGraphStatWidgetprotected; m_axisYsofa::gui::qt::QGraphStatWidgetprotected; m_bufferSizesofa::gui::qt::QGraphStatWidgetprotected; m_chartsofa::gui::qt::QGraphStatWidgetprotected; m_cptStepsofa::gui::qt::QGraphStatWidgetprotected; m_curvessofa::gui::qt::QGraphStatWidgetprotected; m_lastTimesofa::gui::qt::QGraphStatWidgetprotected; m_nodesofa::gui::qt::QGraphStatWidgetprotected; m_yMaxsofa::gui::qt::QGraphStatWidgetprotected; m_yMinsofa::gui::qt::QGraphStatWidgetprotected; QEnergyStatWidget(QWidget *parent, simulation::Node *node)sofa::gui::qt::QEnergyStatWidget; QGraphStatWidget(QWidget *parent, simulation::Node *node, const QString &title, unsigned numberOfCurves, int bufferSize)sofa::gui::qt::QGraphStatWidget; setCurve(unsigned index, const QString &name, const QColor &color)sofa::gui::qt::QGraphStatWidgetprotected; step() finalsofa::gui::qt::QGraphStatWidgetvirtual; stepImpl() overridesofa::gui::qt::QEnergyStatWidgetvirtual; updateYAxisBounds(SReal value)sofa::gui::qt::QGraphStatWidgetprotected; ~QEnergyStatWidget()sofa::gui::qt::QEnergyStatWidget; ~QGraphStatWidget()sofa::gui::qt::QGraphStatWidgetvirtual. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_energy_stat_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_energy_stat_widget-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QEnergyStatWidget Member List . This is the complete list of members for sofa::gui::qt::QEnergyStatWidget, including all inherited members. flushSeries()sofa::gui::qt::QGraphStatWidgetprotected; m_axisXsofa::gui::qt::QGraphStatWidgetprotected; m_axisYsofa::gui::qt::QGraphStatWidgetprotected; m_bufferSizesofa::gui::qt::QGraphStatWidgetprotected; m_chartsofa::gui::qt::QGraphStatWidgetprotected; m_cptStepsofa::gui::qt::QGraphStatWidgetprotected; m_curvessofa::gui::qt::QGraphStatWidgetprotected; m_lastTimesofa::gui::qt::QGraphStatWidgetprotected; m_nodesofa::gui::qt::QGraphStatWidgetprotected; m_yMaxsofa::gui::qt::QGraphStatWidgetprotected; m_yMinsofa::gui::qt::QGraphStatWidgetprotected; QEnergyStatWidget(QWidget *parent, simulation::Node *node)sofa::gui::qt::QEnergyStatWidget; QGraphStatWidget(QWidget *parent, simulation::Node *node, const QString &title, unsigned numberOfCurves, int bufferSize)sofa::gui::qt::QGraphStatWidget; setCurve(unsigned index, const QString &name, const QColor &color)sofa::gui::qt::QGraphStatWidgetprotected; step() finalsofa::gui::qt::QGraphStatWidgetvirtual; stepImpl() overridesofa::gui::qt::QEnergyStatWidgetvirtual; updateYAxisBounds(SReal value)sofa::gui::qt::QGraphStatWidgetprotected; ~QEnergyStatWidget()sofa::gui::qt::QEnergyStatWidget; ~QGraphStatWidget()sofa::gui::qt::QGraphStatWidgetvirtual. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_energy_stat_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_energy_stat_widget-members.html
Deployability,update,update,"﻿. SOFA API: sofa::gui::qt::QEnergyStatWidget Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gui::qt::QEnergyStatWidget Class Reference . #include <QEnergyStatWidget.h>. Inheritance diagram for sofa::gui::qt::QEnergyStatWidget:. [legend]. Public Member Functions;  QEnergyStatWidget (QWidget *parent, simulation::Node *node);  ;  ~QEnergyStatWidget ();  ; void stepImpl () override;  the only function that should be overloaded More...;  ;  Public Member Functions inherited from sofa::gui::qt::QGraphStatWidget;  QGraphStatWidget (QWidget *parent, simulation::Node *node, const QString &title, unsigned numberOfCurves, int bufferSize);  ; virtual ~QGraphStatWidget ();  ; virtual void step () final;  Main method called to update the graph. More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::gui::qt::QGraphStatWidget; simulation::Node * m_node;  pointer to the node monitored More...;  ; int m_bufferSize;  size of the buffers to stored More...;  ; QChart * m_chart;  Pointer to the chart Data. More...;  ; std::vector< QLineSeries * > m_curves;  vector of series to be plotted More...;  ; QValueAxis * m_axisX;  x axis pointer More...;  ; QValueAxis * m_axisY;  y axis pointer More...;  ; SReal m_yMin;  min y axis value stored More...;  ; SReal m_yMax;  max y axis value stored More...;  ; SReal m_lastTime;  last timestep monitored More...;  ; int m_cptStep;  step counter monitored More...;  ;  Protected Member Functions inherited from sofa::gui::qt::QGraphStatWidget; void setCurve (unsigned index, const QString &name, const QColor &color);  set the index-th curve (index must be < _numberOfCurves) More...;  ; void updateYAxisBounds (SReal value);  Method to update Y axis scale. More...;  ; void flushSeries ();  flush data from series not anymore displayed More...;  . Constructor details. ◆ QEnergyStatWidget(). sofa::gui::qt::QEnergyStatWidget::QEnergySt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_energy_stat_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_energy_stat_widget.html
Energy Efficiency,monitor,monitored,"﻿. SOFA API: sofa::gui::qt::QEnergyStatWidget Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gui::qt::QEnergyStatWidget Class Reference . #include <QEnergyStatWidget.h>. Inheritance diagram for sofa::gui::qt::QEnergyStatWidget:. [legend]. Public Member Functions;  QEnergyStatWidget (QWidget *parent, simulation::Node *node);  ;  ~QEnergyStatWidget ();  ; void stepImpl () override;  the only function that should be overloaded More...;  ;  Public Member Functions inherited from sofa::gui::qt::QGraphStatWidget;  QGraphStatWidget (QWidget *parent, simulation::Node *node, const QString &title, unsigned numberOfCurves, int bufferSize);  ; virtual ~QGraphStatWidget ();  ; virtual void step () final;  Main method called to update the graph. More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::gui::qt::QGraphStatWidget; simulation::Node * m_node;  pointer to the node monitored More...;  ; int m_bufferSize;  size of the buffers to stored More...;  ; QChart * m_chart;  Pointer to the chart Data. More...;  ; std::vector< QLineSeries * > m_curves;  vector of series to be plotted More...;  ; QValueAxis * m_axisX;  x axis pointer More...;  ; QValueAxis * m_axisY;  y axis pointer More...;  ; SReal m_yMin;  min y axis value stored More...;  ; SReal m_yMax;  max y axis value stored More...;  ; SReal m_lastTime;  last timestep monitored More...;  ; int m_cptStep;  step counter monitored More...;  ;  Protected Member Functions inherited from sofa::gui::qt::QGraphStatWidget; void setCurve (unsigned index, const QString &name, const QColor &color);  set the index-th curve (index must be < _numberOfCurves) More...;  ; void updateYAxisBounds (SReal value);  Method to update Y axis scale. More...;  ; void flushSeries ();  flush data from series not anymore displayed More...;  . Constructor details. ◆ QEnergyStatWidget(). sofa::gui::qt::QEnergyStatWidget::QEnergySt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_energy_stat_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_energy_stat_widget.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::qt::QEnergyStatWidget Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gui::qt::QEnergyStatWidget Class Reference . #include <QEnergyStatWidget.h>. Inheritance diagram for sofa::gui::qt::QEnergyStatWidget:. [legend]. Public Member Functions;  QEnergyStatWidget (QWidget *parent, simulation::Node *node);  ;  ~QEnergyStatWidget ();  ; void stepImpl () override;  the only function that should be overloaded More...;  ;  Public Member Functions inherited from sofa::gui::qt::QGraphStatWidget;  QGraphStatWidget (QWidget *parent, simulation::Node *node, const QString &title, unsigned numberOfCurves, int bufferSize);  ; virtual ~QGraphStatWidget ();  ; virtual void step () final;  Main method called to update the graph. More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::gui::qt::QGraphStatWidget; simulation::Node * m_node;  pointer to the node monitored More...;  ; int m_bufferSize;  size of the buffers to stored More...;  ; QChart * m_chart;  Pointer to the chart Data. More...;  ; std::vector< QLineSeries * > m_curves;  vector of series to be plotted More...;  ; QValueAxis * m_axisX;  x axis pointer More...;  ; QValueAxis * m_axisY;  y axis pointer More...;  ; SReal m_yMin;  min y axis value stored More...;  ; SReal m_yMax;  max y axis value stored More...;  ; SReal m_lastTime;  last timestep monitored More...;  ; int m_cptStep;  step counter monitored More...;  ;  Protected Member Functions inherited from sofa::gui::qt::QGraphStatWidget; void setCurve (unsigned index, const QString &name, const QColor &color);  set the index-th curve (index must be < _numberOfCurves) More...;  ; void updateYAxisBounds (SReal value);  Method to update Y axis scale. More...;  ; void flushSeries ();  flush data from series not anymore displayed More...;  . Constructor details. ◆ QEnergyStatWidget(). sofa::gui::qt::QEnergyStatWidget::QEnergySt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_energy_stat_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_energy_stat_widget.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QFixOperation Member List . This is the complete list of members for sofa::gui::qt::QFixOperation, including all inherited members. buttonsofa::gui::common::Operationprotected; configure(common::PickHandler *picker, sofa::component::setting::MouseButtonSetting *button) overridesofa::gui::qt::QFixOperationvirtual; sofa::gui::common::FixOperation::configure(PickHandler *picker, MOUSE_BUTTON b)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p) overridesofa::gui::common::FixOperationprotectedvirtual; createPerformer()sofa::gui::common::Operationvirtual; createWidgetFromData(sofa::core::objectmodel::BaseData *data)sofa::gui::qt::QMouseOperation; defaultPerformerType() overridesofa::gui::common::FixOperationprotectedvirtual; end()sofa::gui::common::Operationvirtual; endOperation()sofa::gui::common::Operationinlinevirtual; execution()sofa::gui::common::Operationinlinevirtual; FixOperation()sofa::gui::common::FixOperationinline; getDescription()sofa::gui::common::FixOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; getStiffness() constsofa::gui::common::FixOperationinlinevirtual; mbsettingsofa::gui::common::Operationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; QFixOperation()sofa::gui::qt::QFixOperation; setSetting(sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; setStiffness(double s)sofa::gui::common::FixOperationinline; settingsofa::gui::common::FixOperationprotected; start()sofa::gui::common::Operationvirtual; stiffnessWidgetsofa::gui::qt::QFixOperatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_fix_operation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_fix_operation-members.html
Performance,perform,performer,"embers. buttonsofa::gui::common::Operationprotected; configure(common::PickHandler *picker, sofa::component::setting::MouseButtonSetting *button) overridesofa::gui::qt::QFixOperationvirtual; sofa::gui::common::FixOperation::configure(PickHandler *picker, MOUSE_BUTTON b)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p) overridesofa::gui::common::FixOperationprotectedvirtual; createPerformer()sofa::gui::common::Operationvirtual; createWidgetFromData(sofa::core::objectmodel::BaseData *data)sofa::gui::qt::QMouseOperation; defaultPerformerType() overridesofa::gui::common::FixOperationprotectedvirtual; end()sofa::gui::common::Operationvirtual; endOperation()sofa::gui::common::Operationinlinevirtual; execution()sofa::gui::common::Operationinlinevirtual; FixOperation()sofa::gui::common::FixOperationinline; getDescription()sofa::gui::common::FixOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; getStiffness() constsofa::gui::common::FixOperationinlinevirtual; mbsettingsofa::gui::common::Operationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; QFixOperation()sofa::gui::qt::QFixOperation; setSetting(sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; setStiffness(double s)sofa::gui::common::FixOperationinline; settingsofa::gui::common::FixOperationprotected; start()sofa::gui::common::Operationvirtual; stiffnessWidgetsofa::gui::qt::QFixOperationprotected; wait()sofa::gui::common::Operationinlinevirtual; WidgetDirty(bool)sofa::gui::qt::QMouseOperationslot; ~FixOperation() overridesofa::gui::common::FixOperationinline; ~Operation()sofa::gui::common::Operationinlinevirtual. Genera",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_fix_operation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_fix_operation-members.html
Deployability,release,released,"ons;  QFixOperation ();  ; void configure (common::PickHandler *picker, sofa::component::setting::MouseButtonSetting *button) override;  ;  Public Member Functions inherited from sofa::gui::qt::QMouseOperation; DataWidget * createWidgetFromData (sofa::core::objectmodel::BaseData *data);  ;  Public Member Functions inherited from sofa::gui::common::FixOperation;  FixOperation ();  ;  ~FixOperation () override;  ; void setStiffness (double s);  ; virtual double getStiffness () const;  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Static Public Member Functions inherited from sofa::gui::common::FixOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  ;  Protected Member Functions inherited from sofa::gui::common::FixOperation; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  ;  Public Slots inherited from sofa::gui::qt::QMouseOperation; void WidgetDi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_fix_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_fix_operation.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::qt::QFixOperation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::gui::qt::QFixOperation Class Reference . #include <QMouseOperations.h>. Inheritance diagram for sofa::gui::qt::QFixOperation:. [legend]. Protected Attributes; DataWidget * stiffnessWidget;  ;  Protected Attributes inherited from sofa::gui::common::FixOperation; sofa::gui::component::FixPickedParticleButtonSetting::SPtr setting;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  . Public Member Functions;  QFixOperation ();  ; void configure (common::PickHandler *picker, sofa::component::setting::MouseButtonSetting *button) override;  ;  Public Member Functions inherited from sofa::gui::qt::QMouseOperation; DataWidget * createWidgetFromData (sofa::core::objectmodel::BaseData *data);  ;  Public Member Functions inherited from sofa::gui::common::FixOperation;  FixOperation ();  ;  ~FixOperation () override;  ; void setStiffness (double s);  ; virtual double getStiffness () const;  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_fix_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_fix_operation.html
Performance,perform,performer,"nherited from sofa::gui::qt::QMouseOperation; DataWidget * createWidgetFromData (sofa::core::objectmodel::BaseData *data);  ;  Public Member Functions inherited from sofa::gui::common::FixOperation;  FixOperation ();  ;  ~FixOperation () override;  ; void setStiffness (double s);  ; virtual double getStiffness () const;  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Static Public Member Functions inherited from sofa::gui::common::FixOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  ;  Protected Member Functions inherited from sofa::gui::common::FixOperation; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  ;  Public Slots inherited from sofa::gui::qt::QMouseOperation; void WidgetDirty (bool);  . Attribute details. ◆ stiffnessWidget. DataWidget* sofa::gui::qt::QFixOperation::stiffnessWidget. protected . Constructor details. ◆ QFixOperation(). s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_fix_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_fix_operation.html
Deployability,update,updateYAxisBounds,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QGraphStatWidget Member List . This is the complete list of members for sofa::gui::qt::QGraphStatWidget, including all inherited members. flushSeries()sofa::gui::qt::QGraphStatWidgetprotected; m_axisXsofa::gui::qt::QGraphStatWidgetprotected; m_axisYsofa::gui::qt::QGraphStatWidgetprotected; m_bufferSizesofa::gui::qt::QGraphStatWidgetprotected; m_chartsofa::gui::qt::QGraphStatWidgetprotected; m_cptStepsofa::gui::qt::QGraphStatWidgetprotected; m_curvessofa::gui::qt::QGraphStatWidgetprotected; m_lastTimesofa::gui::qt::QGraphStatWidgetprotected; m_nodesofa::gui::qt::QGraphStatWidgetprotected; m_yMaxsofa::gui::qt::QGraphStatWidgetprotected; m_yMinsofa::gui::qt::QGraphStatWidgetprotected; QGraphStatWidget(QWidget *parent, simulation::Node *node, const QString &title, unsigned numberOfCurves, int bufferSize)sofa::gui::qt::QGraphStatWidget; setCurve(unsigned index, const QString &name, const QColor &color)sofa::gui::qt::QGraphStatWidgetprotected; step() finalsofa::gui::qt::QGraphStatWidgetvirtual; stepImpl()=0sofa::gui::qt::QGraphStatWidgetpure virtual; updateYAxisBounds(SReal value)sofa::gui::qt::QGraphStatWidgetprotected; ~QGraphStatWidget()sofa::gui::qt::QGraphStatWidgetvirtual. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_graph_stat_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_graph_stat_widget-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QGraphStatWidget Member List . This is the complete list of members for sofa::gui::qt::QGraphStatWidget, including all inherited members. flushSeries()sofa::gui::qt::QGraphStatWidgetprotected; m_axisXsofa::gui::qt::QGraphStatWidgetprotected; m_axisYsofa::gui::qt::QGraphStatWidgetprotected; m_bufferSizesofa::gui::qt::QGraphStatWidgetprotected; m_chartsofa::gui::qt::QGraphStatWidgetprotected; m_cptStepsofa::gui::qt::QGraphStatWidgetprotected; m_curvessofa::gui::qt::QGraphStatWidgetprotected; m_lastTimesofa::gui::qt::QGraphStatWidgetprotected; m_nodesofa::gui::qt::QGraphStatWidgetprotected; m_yMaxsofa::gui::qt::QGraphStatWidgetprotected; m_yMinsofa::gui::qt::QGraphStatWidgetprotected; QGraphStatWidget(QWidget *parent, simulation::Node *node, const QString &title, unsigned numberOfCurves, int bufferSize)sofa::gui::qt::QGraphStatWidget; setCurve(unsigned index, const QString &name, const QColor &color)sofa::gui::qt::QGraphStatWidgetprotected; step() finalsofa::gui::qt::QGraphStatWidgetvirtual; stepImpl()=0sofa::gui::qt::QGraphStatWidgetpure virtual; updateYAxisBounds(SReal value)sofa::gui::qt::QGraphStatWidgetprotected; ~QGraphStatWidget()sofa::gui::qt::QGraphStatWidgetvirtual. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_graph_stat_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_graph_stat_widget-members.html
Deployability,update,update,"rs . sofa::gui::qt::QGraphStatWidget Class Referenceabstract . #include <QGraphStatWidget.h>. Inheritance diagram for sofa::gui::qt::QGraphStatWidget:. [legend]; Detailed Description; Base class to make graphes in the stat tab of the node widget TODO add gnuplot export . Protected Attributes; simulation::Node * m_node;  pointer to the node monitored More...;  ; int m_bufferSize;  size of the buffers to stored More...;  ; QChart * m_chart;  Pointer to the chart Data. More...;  ; std::vector< QLineSeries * > m_curves;  vector of series to be plotted More...;  ; QValueAxis * m_axisX;  x axis pointer More...;  ; QValueAxis * m_axisY;  y axis pointer More...;  ; SReal m_yMin;  min y axis value stored More...;  ; SReal m_yMax;  max y axis value stored More...;  ; SReal m_lastTime;  last timestep monitored More...;  ; int m_cptStep;  step counter monitored More...;  . Public Member Functions;  QGraphStatWidget (QWidget *parent, simulation::Node *node, const QString &title, unsigned numberOfCurves, int bufferSize);  ; virtual ~QGraphStatWidget ();  ; virtual void step () final;  Main method called to update the graph. More...;  ; virtual void stepImpl ()=0;  the only function that should be overloaded More...;  . Protected Member Functions; void setCurve (unsigned index, const QString &name, const QColor &color);  set the index-th curve (index must be < _numberOfCurves) More...;  ; void updateYAxisBounds (SReal value);  Method to update Y axis scale. More...;  ; void flushSeries ();  flush data from series not anymore displayed More...;  . Attribute details. ◆ m_axisX. QValueAxis* sofa::gui::qt::QGraphStatWidget::m_axisX. protected . x axis pointer . ◆ m_axisY. QValueAxis* sofa::gui::qt::QGraphStatWidget::m_axisY. protected . y axis pointer . ◆ m_bufferSize. int sofa::gui::qt::QGraphStatWidget::m_bufferSize. protected . size of the buffers to stored . ◆ m_chart. QChart* sofa::gui::qt::QGraphStatWidget::m_chart. protected . Pointer to the chart Data. . ◆ m_cptStep. int sofa:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_graph_stat_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_graph_stat_widget.html
Energy Efficiency,monitor,monitored,"﻿. SOFA API: sofa::gui::qt::QGraphStatWidget Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::qt::QGraphStatWidget Class Referenceabstract . #include <QGraphStatWidget.h>. Inheritance diagram for sofa::gui::qt::QGraphStatWidget:. [legend]; Detailed Description; Base class to make graphes in the stat tab of the node widget TODO add gnuplot export . Protected Attributes; simulation::Node * m_node;  pointer to the node monitored More...;  ; int m_bufferSize;  size of the buffers to stored More...;  ; QChart * m_chart;  Pointer to the chart Data. More...;  ; std::vector< QLineSeries * > m_curves;  vector of series to be plotted More...;  ; QValueAxis * m_axisX;  x axis pointer More...;  ; QValueAxis * m_axisY;  y axis pointer More...;  ; SReal m_yMin;  min y axis value stored More...;  ; SReal m_yMax;  max y axis value stored More...;  ; SReal m_lastTime;  last timestep monitored More...;  ; int m_cptStep;  step counter monitored More...;  . Public Member Functions;  QGraphStatWidget (QWidget *parent, simulation::Node *node, const QString &title, unsigned numberOfCurves, int bufferSize);  ; virtual ~QGraphStatWidget ();  ; virtual void step () final;  Main method called to update the graph. More...;  ; virtual void stepImpl ()=0;  the only function that should be overloaded More...;  . Protected Member Functions; void setCurve (unsigned index, const QString &name, const QColor &color);  set the index-th curve (index must be < _numberOfCurves) More...;  ; void updateYAxisBounds (SReal value);  Method to update Y axis scale. More...;  ; void flushSeries ();  flush data from series not anymore displayed More...;  . Attribute details. ◆ m_axisX. QValueAxis* sofa::gui::qt::QGraphStatWidget::m_axisX. protected . x axis pointer . ◆ m_axisY. QValueAxis* sofa::gui::qt::QGraphStatWidget::m_axisY. protected . y axis pointer . ◆ ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_graph_stat_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_graph_stat_widget.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QInciseOperation Member List . This is the complete list of members for sofa::gui::qt::QInciseOperation, including all inherited members. advancedOperationssofa::gui::qt::QInciseOperationprotected; advancedOptionssofa::gui::qt::QInciseOperationprotected; buttonsofa::gui::common::Operationprotected; configure(common::PickHandler *picker, common::MOUSE_BUTTON b) overridesofa::gui::qt::QInciseOperationinlinevirtual; sofa::gui::common::InciseOperation::configure(PickHandler *picker, sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p)sofa::gui::common::Operationvirtual; cptsofa::gui::common::InciseOperationprotected; createPerformer()sofa::gui::common::Operationvirtual; defaultPerformerType()sofa::gui::common::Operationinlinevirtual; end() overridesofa::gui::common::InciseOperationvirtual; endOperation() overridesofa::gui::common::InciseOperationvirtual; execution() overridesofa::gui::common::InciseOperationvirtual; finishCutsofa::gui::qt::QInciseOperationprotected; finishIncisionsofa::gui::qt::QInciseOperation; getCompleteIncision() overridesofa::gui::qt::QInciseOperationinlinevirtual; getDescription()sofa::gui::common::InciseOperationinlinestatic; getId()sofa::gui::common::Operationinline; getIncisionMethod() const overridesofa::gui::qt::QInciseOperationvirtual; getKeepPoint() overridesofa::gui::qt::QInciseOperationinlinevirtual; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; getSnapingBorderValue() const overridesofa::gui::qt::QInciseOperationvirtual; getSnapingValue() const overridesofa::gui::qt::QInciseOperationvirtual; InciseOperation()sofa::gui::common::InciseOperationinline; incisionMethodChoiceGroupsofa::gui::qt::QInciseOperationprotected; keepPointsofa::gui:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_incise_operation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_incise_operation-members.html
Performance,perform,performer," advancedOperationssofa::gui::qt::QInciseOperationprotected; advancedOptionssofa::gui::qt::QInciseOperationprotected; buttonsofa::gui::common::Operationprotected; configure(common::PickHandler *picker, common::MOUSE_BUTTON b) overridesofa::gui::qt::QInciseOperationinlinevirtual; sofa::gui::common::InciseOperation::configure(PickHandler *picker, sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p)sofa::gui::common::Operationvirtual; cptsofa::gui::common::InciseOperationprotected; createPerformer()sofa::gui::common::Operationvirtual; defaultPerformerType()sofa::gui::common::Operationinlinevirtual; end() overridesofa::gui::common::InciseOperationvirtual; endOperation() overridesofa::gui::common::InciseOperationvirtual; execution() overridesofa::gui::common::InciseOperationvirtual; finishCutsofa::gui::qt::QInciseOperationprotected; finishIncisionsofa::gui::qt::QInciseOperation; getCompleteIncision() overridesofa::gui::qt::QInciseOperationinlinevirtual; getDescription()sofa::gui::common::InciseOperationinlinestatic; getId()sofa::gui::common::Operationinline; getIncisionMethod() const overridesofa::gui::qt::QInciseOperationvirtual; getKeepPoint() overridesofa::gui::qt::QInciseOperationinlinevirtual; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; getSnapingBorderValue() const overridesofa::gui::qt::QInciseOperationvirtual; getSnapingValue() const overridesofa::gui::qt::QInciseOperationvirtual; InciseOperation()sofa::gui::common::InciseOperationinline; incisionMethodChoiceGroupsofa::gui::qt::QInciseOperationprotected; keepPointsofa::gui:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_incise_operation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_incise_operation-members.html
Deployability,release,released,"; MOUSE_BUTTON button;  . Public Member Functions;  QInciseOperation ();  ; int getIncisionMethod () const override;  ; int getSnapingBorderValue () const override;  ; int getSnapingValue () const override;  ; bool getCompleteIncision () override;  ; bool getKeepPoint () override;  ; void configure (common::PickHandler *picker, common::MOUSE_BUTTON b) override;  ;  Public Member Functions inherited from sofa::gui::common::InciseOperation;  InciseOperation ();  ;  ~InciseOperation () override;  ; void start () override;  ; void execution () override;  This function is called each time the mouse is clicked. More...;  ; void end () override;  ; void endOperation () override;  This function is called after each mouse click. More...;  ; void setIncisionMethod (int m);  ; void setSnapingBorderValue (int m);  ; void setSnapingValue (int m);  ; void setCompleteIncision (bool m);  ; void setKeepPoint (bool m);  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual std::string defaultPerformerType ();  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; virtual void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p);  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Public Slots; void setEnableBox (bool i);  ; void setFinishIncision (bool i);  ; void setkeepPoint (bool i);  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::common::InciseOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_incise_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_incise_operation.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::qt::QInciseOperation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Public Slots |; List of all members . sofa::gui::qt::QInciseOperation Class Reference . #include <QMouseOperations.h>. Inheritance diagram for sofa::gui::qt::QInciseOperation:. [legend]. Public Attributes; bool finishIncision;  ; bool keepPoint;  ;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  . Protected Attributes; QGroupBox * incisionMethodChoiceGroup;  ; QRadioButton * method1;  ; QRadioButton * method2;  ; QGroupBox * advancedOperations;  ; QCheckBox * finishCut;  ; QCheckBox * storeLastPoint;  ; QGroupBox * advancedOptions;  ; QSlider * snapingBorderSlider;  ; QSpinBox * snapingBorderValue;  ; QSlider * snapingSlider;  ; QSpinBox * snapingValue;  ;  Protected Attributes inherited from sofa::gui::common::InciseOperation; sofa::gui::component::performer::InteractionPerformer * startPerformer;  ; int method;  ; int snapingBorderValue;  ; int snapingValue;  ; int cpt;  ; bool finishIncision;  ; bool keepPoint;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  . Public Member Functions;  QInciseOperation ();  ; int getIncisionMethod () const override;  ; int getSnapingBorderValue () const override;  ; int getSnapingValue () const override;  ; bool getCompleteIncision () override;  ; bool getKeepPoint () override;  ; void configure (common::PickHandler *picker, common::MOUSE_BUTTON b) override;  ;  Public Member Functions inherited from sofa::gui::common::InciseOperation;  InciseOperation ();  ;  ~InciseOperation () override;  ; void start () override;  ; void execution () override;  This function is called each time the mouse is clicked. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_incise_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_incise_operation.html
Performance,perform,performer,"﻿. SOFA API: sofa::gui::qt::QInciseOperation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Public Slots |; List of all members . sofa::gui::qt::QInciseOperation Class Reference . #include <QMouseOperations.h>. Inheritance diagram for sofa::gui::qt::QInciseOperation:. [legend]. Public Attributes; bool finishIncision;  ; bool keepPoint;  ;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  . Protected Attributes; QGroupBox * incisionMethodChoiceGroup;  ; QRadioButton * method1;  ; QRadioButton * method2;  ; QGroupBox * advancedOperations;  ; QCheckBox * finishCut;  ; QCheckBox * storeLastPoint;  ; QGroupBox * advancedOptions;  ; QSlider * snapingBorderSlider;  ; QSpinBox * snapingBorderValue;  ; QSlider * snapingSlider;  ; QSpinBox * snapingValue;  ;  Protected Attributes inherited from sofa::gui::common::InciseOperation; sofa::gui::component::performer::InteractionPerformer * startPerformer;  ; int method;  ; int snapingBorderValue;  ; int snapingValue;  ; int cpt;  ; bool finishIncision;  ; bool keepPoint;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  . Public Member Functions;  QInciseOperation ();  ; int getIncisionMethod () const override;  ; int getSnapingBorderValue () const override;  ; int getSnapingValue () const override;  ; bool getCompleteIncision () override;  ; bool getKeepPoint () override;  ; void configure (common::PickHandler *picker, common::MOUSE_BUTTON b) override;  ;  Public Member Functions inherited from sofa::gui::common::InciseOperation;  InciseOperation ();  ;  ~InciseOperation () override;  ; void start () override;  ; void execution () override;  This function is called each time the mouse is clicked. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_incise_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_incise_operation.html
Deployability,update,updateLinkValue,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QLinkSimpleEdit Member List . This is the complete list of members for sofa::gui::qt::QLinkSimpleEdit, including all inherited members. baseLinksofa::gui::qt::LinkWidgetprotected; countersofa::gui::qt::LinkWidgetprotected; CreateLinkWidget(const LinkWidget::CreatorArgument &dwarg)sofa::gui::qt::LinkWidgetstatic; createWidgets() overridesofa::gui::qt::QLinkSimpleEditvirtual; dirtysofa::gui::qt::LinkWidgetprotected; getBaseLink() constsofa::gui::qt::LinkWidgetinline; getBaseLink()sofa::gui::qt::LinkWidgetinline; innerWidget_sofa::gui::qt::QLinkSimpleEditprotected; isDirty()sofa::gui::qt::LinkWidgetinline; LinkBeingChanged()sofa::gui::qt::LinkWidgetsignal; LinkOwnerDirty(bool)sofa::gui::qt::LinkWidgetsignal; LinkWidget(QWidget *parent, const char *, MyLink *l)sofa::gui::qt::LinkWidgetinline; MyLink typedefsofa::gui::qt::LinkWidget; numColumnWidget() overridesofa::gui::qt::QLinkSimpleEditinlinevirtual; QLinkSimpleEdit(QWidget *, const char *name, core::objectmodel::BaseLink *)sofa::gui::qt::QLinkSimpleEdit; readFromLink() overridesofa::gui::qt::QLinkSimpleEditprotectedvirtual; setLink(MyLink *d)sofa::gui::qt::LinkWidgetinlinevirtual; setWidgetDirty()sofa::gui::qt::LinkWidgetinlineslot; setWidgetDirty(bool b)sofa::gui::qt::LinkWidgetinlineslot; sizeWidget() overridesofa::gui::qt::QLinkSimpleEditinlinevirtual; updateLinkValue()sofa::gui::qt::LinkWidgetinlineslot; updateVisibility()sofa::gui::qt::LinkWidgetinline; updateWidgetValue()sofa::gui::qt::LinkWidgetinlineslot; WidgetDirty(bool)sofa::gui::qt::LinkWidgetsignal; writeToLink() overridesofa::gui::qt::QLinkSimpleEditprotectedvirtual; ~LinkWidget() overridesofa::gui::qt::LinkWidgetinline. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_link_simple_edit-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_link_simple_edit-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QLinkSimpleEdit Member List . This is the complete list of members for sofa::gui::qt::QLinkSimpleEdit, including all inherited members. baseLinksofa::gui::qt::LinkWidgetprotected; countersofa::gui::qt::LinkWidgetprotected; CreateLinkWidget(const LinkWidget::CreatorArgument &dwarg)sofa::gui::qt::LinkWidgetstatic; createWidgets() overridesofa::gui::qt::QLinkSimpleEditvirtual; dirtysofa::gui::qt::LinkWidgetprotected; getBaseLink() constsofa::gui::qt::LinkWidgetinline; getBaseLink()sofa::gui::qt::LinkWidgetinline; innerWidget_sofa::gui::qt::QLinkSimpleEditprotected; isDirty()sofa::gui::qt::LinkWidgetinline; LinkBeingChanged()sofa::gui::qt::LinkWidgetsignal; LinkOwnerDirty(bool)sofa::gui::qt::LinkWidgetsignal; LinkWidget(QWidget *parent, const char *, MyLink *l)sofa::gui::qt::LinkWidgetinline; MyLink typedefsofa::gui::qt::LinkWidget; numColumnWidget() overridesofa::gui::qt::QLinkSimpleEditinlinevirtual; QLinkSimpleEdit(QWidget *, const char *name, core::objectmodel::BaseLink *)sofa::gui::qt::QLinkSimpleEdit; readFromLink() overridesofa::gui::qt::QLinkSimpleEditprotectedvirtual; setLink(MyLink *d)sofa::gui::qt::LinkWidgetinlinevirtual; setWidgetDirty()sofa::gui::qt::LinkWidgetinlineslot; setWidgetDirty(bool b)sofa::gui::qt::LinkWidgetinlineslot; sizeWidget() overridesofa::gui::qt::QLinkSimpleEditinlinevirtual; updateLinkValue()sofa::gui::qt::LinkWidgetinlineslot; updateVisibility()sofa::gui::qt::LinkWidgetinline; updateWidgetValue()sofa::gui::qt::LinkWidgetinlineslot; WidgetDirty(bool)sofa::gui::qt::LinkWidgetsignal; writeToLink() overridesofa::gui::qt::QLinkSimpleEditprotectedvirtual; ~LinkWidget() overridesofa::gui::qt::LinkWidgetinline. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_link_simple_edit-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_link_simple_edit-members.html
Deployability,update,updateVisibility,"all members . sofa::gui::qt::QLinkSimpleEdit Class Reference . #include <QDisplayLinkWidget.h>. Inheritance diagram for sofa::gui::qt::QLinkSimpleEdit:. [legend]. Protected Attributes; QSimpleEdit innerWidget_;  ;  Protected Attributes inherited from sofa::gui::qt::LinkWidget; core::objectmodel::BaseLink * baseLink;  ; bool dirty;  ; int counter;  . Public Member Functions;  QLinkSimpleEdit (QWidget *, const char *name, core::objectmodel::BaseLink *);  ; unsigned int numColumnWidget () override;  Helper method for column. More...;  ; unsigned int sizeWidget () override;  Helper method to give a size. More...;  ; bool createWidgets () override;  ;  Public Member Functions inherited from sofa::gui::qt::LinkWidget;  LinkWidget (QWidget *parent, const char *, MyLink *l);  ;  ~LinkWidget () override;  ; virtual void setLink (MyLink *d);  ; const core::objectmodel::BaseLink * getBaseLink () const;  BaseLink pointer accessor function. More...;  ; core::objectmodel::BaseLink * getBaseLink ();  ; void updateVisibility ();  ; bool isDirty ();  . Protected Member Functions; void readFromLink () override;  The implementation of this method tells how the widget reads the value of the link. More...;  ; void writeToLink () override;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::LinkWidget; static LinkWidget * CreateLinkWidget (const LinkWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::LinkWidget; void WidgetDirty (bool);  ; void LinkOwnerDirty (bool);  ; void LinkBeingChanged ();  ;  Public Slots inherited from sofa::gui::qt::LinkWidget; void updateLinkValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty ();  ; void setWidgetDirty (bool b);  . Attribute details. ◆ innerWidget_. QSimpleEdit sofa::gui::qt::QLinkSimpleEdit::innerWidget_. protected . Constructor details. ◆ QLinkSimpleEdit(). sofa::gui::qt::QLinkSimpleEdit::QLinkSimpleEdit ; (; QWidget * ; parent, . const char * ; name, . core::objectm",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_link_simple_edit.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_link_simple_edit.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::qt::QLinkSimpleEdit Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::qt::QLinkSimpleEdit Class Reference . #include <QDisplayLinkWidget.h>. Inheritance diagram for sofa::gui::qt::QLinkSimpleEdit:. [legend]. Protected Attributes; QSimpleEdit innerWidget_;  ;  Protected Attributes inherited from sofa::gui::qt::LinkWidget; core::objectmodel::BaseLink * baseLink;  ; bool dirty;  ; int counter;  . Public Member Functions;  QLinkSimpleEdit (QWidget *, const char *name, core::objectmodel::BaseLink *);  ; unsigned int numColumnWidget () override;  Helper method for column. More...;  ; unsigned int sizeWidget () override;  Helper method to give a size. More...;  ; bool createWidgets () override;  ;  Public Member Functions inherited from sofa::gui::qt::LinkWidget;  LinkWidget (QWidget *parent, const char *, MyLink *l);  ;  ~LinkWidget () override;  ; virtual void setLink (MyLink *d);  ; const core::objectmodel::BaseLink * getBaseLink () const;  BaseLink pointer accessor function. More...;  ; core::objectmodel::BaseLink * getBaseLink ();  ; void updateVisibility ();  ; bool isDirty ();  . Protected Member Functions; void readFromLink () override;  The implementation of this method tells how the widget reads the value of the link. More...;  ; void writeToLink () override;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::LinkWidget; static LinkWidget * CreateLinkWidget (const LinkWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::LinkWidget; void WidgetDirty (bool);  ; void LinkOwnerDirty (bool);  ; void LinkBeingChanged ();  ;  Public Slots inherited from sofa::gui::qt::LinkWidget; void updateLinkValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty ();  ; void setWidgetDirty (bool b);  . Attribute details. ◆ inn",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_link_simple_edit.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_link_simple_edit.html
Security,access,accessor,"sofa::gui::qt::QLinkSimpleEdit Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::qt::QLinkSimpleEdit Class Reference . #include <QDisplayLinkWidget.h>. Inheritance diagram for sofa::gui::qt::QLinkSimpleEdit:. [legend]. Protected Attributes; QSimpleEdit innerWidget_;  ;  Protected Attributes inherited from sofa::gui::qt::LinkWidget; core::objectmodel::BaseLink * baseLink;  ; bool dirty;  ; int counter;  . Public Member Functions;  QLinkSimpleEdit (QWidget *, const char *name, core::objectmodel::BaseLink *);  ; unsigned int numColumnWidget () override;  Helper method for column. More...;  ; unsigned int sizeWidget () override;  Helper method to give a size. More...;  ; bool createWidgets () override;  ;  Public Member Functions inherited from sofa::gui::qt::LinkWidget;  LinkWidget (QWidget *parent, const char *, MyLink *l);  ;  ~LinkWidget () override;  ; virtual void setLink (MyLink *d);  ; const core::objectmodel::BaseLink * getBaseLink () const;  BaseLink pointer accessor function. More...;  ; core::objectmodel::BaseLink * getBaseLink ();  ; void updateVisibility ();  ; bool isDirty ();  . Protected Member Functions; void readFromLink () override;  The implementation of this method tells how the widget reads the value of the link. More...;  ; void writeToLink () override;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::LinkWidget; static LinkWidget * CreateLinkWidget (const LinkWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::LinkWidget; void WidgetDirty (bool);  ; void LinkOwnerDirty (bool);  ; void LinkBeingChanged ();  ;  Public Slots inherited from sofa::gui::qt::LinkWidget; void updateLinkValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty ();  ; void setWidgetDirty (bool b);  . Attribute details. ◆ innerWidget_. Q",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_link_simple_edit.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_link_simple_edit.html
Deployability,update,updateWidget,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QMenuFilesRecentlyOpened Member List . This is the complete list of members for sofa::gui::qt::QMenuFilesRecentlyOpened, including all inherited members. createWidget(QWidget *parent, const std::string &=std::string(""Recently Opened Files ...""))sofa::gui::qt::QMenuFilesRecentlyOpened; filessofa::gui::common::FilesRecentlyOpenedManagerprotected; FilesRecentlyOpenedManager(const std::string &configFile)sofa::gui::common::FilesRecentlyOpenedManager; getFilename(unsigned int idx) constsofa::gui::common::FilesRecentlyOpenedManagerinlinevirtual; getFiles() constsofa::gui::common::FilesRecentlyOpenedManagerinline; getMaxNumFiles() constsofa::gui::common::FilesRecentlyOpenedManagerinline; getMenu()sofa::gui::qt::QMenuFilesRecentlyOpenedinline; getPath() constsofa::gui::common::FilesRecentlyOpenedManagerinline; max_num_filessofa::gui::common::FilesRecentlyOpenedManagerprotected; menuRecentlyOpenedFilessofa::gui::qt::QMenuFilesRecentlyOpenedprotected; openFile(const std::string &file) overridesofa::gui::qt::QMenuFilesRecentlyOpenedvirtual; pathsofa::gui::common::FilesRecentlyOpenedManagerprotected; QMenuFilesRecentlyOpened(const std::string &configFile)sofa::gui::qt::QMenuFilesRecentlyOpenedinline; setFiles(const type::vector< std::string > &f)sofa::gui::common::FilesRecentlyOpenedManagerinline; setPath(const std::string &p)sofa::gui::common::FilesRecentlyOpenedManager; updateWidget()sofa::gui::qt::QMenuFilesRecentlyOpenedprotected; writeFiles() constsofa::gui::common::FilesRecentlyOpenedManagerprotected; ~FilesRecentlyOpenedManager()sofa::gui::common::FilesRecentlyOpenedManagerinlinevirtual; ~QMenuFilesRecentlyOpened() overridesofa::gui::qt::QMenuFilesRecentlyOpenedinline. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_menu_files_recently_opened-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_menu_files_recently_opened-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QMenuFilesRecentlyOpened Member List . This is the complete list of members for sofa::gui::qt::QMenuFilesRecentlyOpened, including all inherited members. createWidget(QWidget *parent, const std::string &=std::string(""Recently Opened Files ...""))sofa::gui::qt::QMenuFilesRecentlyOpened; filessofa::gui::common::FilesRecentlyOpenedManagerprotected; FilesRecentlyOpenedManager(const std::string &configFile)sofa::gui::common::FilesRecentlyOpenedManager; getFilename(unsigned int idx) constsofa::gui::common::FilesRecentlyOpenedManagerinlinevirtual; getFiles() constsofa::gui::common::FilesRecentlyOpenedManagerinline; getMaxNumFiles() constsofa::gui::common::FilesRecentlyOpenedManagerinline; getMenu()sofa::gui::qt::QMenuFilesRecentlyOpenedinline; getPath() constsofa::gui::common::FilesRecentlyOpenedManagerinline; max_num_filessofa::gui::common::FilesRecentlyOpenedManagerprotected; menuRecentlyOpenedFilessofa::gui::qt::QMenuFilesRecentlyOpenedprotected; openFile(const std::string &file) overridesofa::gui::qt::QMenuFilesRecentlyOpenedvirtual; pathsofa::gui::common::FilesRecentlyOpenedManagerprotected; QMenuFilesRecentlyOpened(const std::string &configFile)sofa::gui::qt::QMenuFilesRecentlyOpenedinline; setFiles(const type::vector< std::string > &f)sofa::gui::common::FilesRecentlyOpenedManagerinline; setPath(const std::string &p)sofa::gui::common::FilesRecentlyOpenedManager; updateWidget()sofa::gui::qt::QMenuFilesRecentlyOpenedprotected; writeFiles() constsofa::gui::common::FilesRecentlyOpenedManagerprotected; ~FilesRecentlyOpenedManager()sofa::gui::common::FilesRecentlyOpenedManagerinlinevirtual; ~QMenuFilesRecentlyOpened() overridesofa::gui::qt::QMenuFilesRecentlyOpenedinline. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_menu_files_recently_opened-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_menu_files_recently_opened-members.html
Deployability,update,updateWidget,"er; const unsigned int max_num_files;  ; sofa::type::vector< std::string > files;  ; std::string path;  . Public Member Functions;  QMenuFilesRecentlyOpened (const std::string &configFile);  ;  ~QMenuFilesRecentlyOpened () override;  ; void openFile (const std::string &file) override;  ; QMenu * createWidget (QWidget *parent, const std::string &=std::string(""Recently Opened Files ...""));  ; QMenu * getMenu ();  ;  Public Member Functions inherited from sofa::gui::common::FilesRecentlyOpenedManager;  FilesRecentlyOpenedManager (const std::string &configFile);  ; virtual ~FilesRecentlyOpenedManager ();  ; virtual std::string getFilename (unsigned int idx) const;  ; unsigned int getMaxNumFiles () const;  ; const std::string & getPath () const;  ; void setPath (const std::string &p);  ; const sofa::type::vector< std::string > & getFiles () const;  ; void setFiles (const type::vector< std::string > &f);  . Protected Member Functions; void updateWidget ();  ;  Protected Member Functions inherited from sofa::gui::common::FilesRecentlyOpenedManager; void writeFiles () const;  . Attribute details. ◆ menuRecentlyOpenedFiles. QMenu* sofa::gui::qt::QMenuFilesRecentlyOpened::menuRecentlyOpenedFiles. protected . Constructor details. ◆ QMenuFilesRecentlyOpened(). sofa::gui::qt::QMenuFilesRecentlyOpened::QMenuFilesRecentlyOpened ; (; const std::string & ; configFile). inline . ◆ ~QMenuFilesRecentlyOpened(). sofa::gui::qt::QMenuFilesRecentlyOpened::~QMenuFilesRecentlyOpened ; (; ). inlineoverride . Function details. ◆ createWidget(). QMenu * sofa::gui::qt::QMenuFilesRecentlyOpened::createWidget ; (; QWidget * ; parent, . const std::string & ; name = std::string(""Recently Opened Files ..."") . ). ◆ getMenu(). QMenu* sofa::gui::qt::QMenuFilesRecentlyOpened::getMenu ; (; ). inline . ◆ openFile(). void sofa::gui::qt::QMenuFilesRecentlyOpened::openFile ; (; const std::string & ; file). overridevirtual . Reimplemented from sofa::gui::common::FilesRecentlyOpenedManager. ◆ updateWidget(). vo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_menu_files_recently_opened.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_menu_files_recently_opened.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::qt::QMenuFilesRecentlyOpened Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::qt::QMenuFilesRecentlyOpened Class Reference . #include <QMenuFilesRecentlyOpened.h>. Inheritance diagram for sofa::gui::qt::QMenuFilesRecentlyOpened:. [legend]. Protected Attributes; QMenu * menuRecentlyOpenedFiles;  ;  Protected Attributes inherited from sofa::gui::common::FilesRecentlyOpenedManager; const unsigned int max_num_files;  ; sofa::type::vector< std::string > files;  ; std::string path;  . Public Member Functions;  QMenuFilesRecentlyOpened (const std::string &configFile);  ;  ~QMenuFilesRecentlyOpened () override;  ; void openFile (const std::string &file) override;  ; QMenu * createWidget (QWidget *parent, const std::string &=std::string(""Recently Opened Files ...""));  ; QMenu * getMenu ();  ;  Public Member Functions inherited from sofa::gui::common::FilesRecentlyOpenedManager;  FilesRecentlyOpenedManager (const std::string &configFile);  ; virtual ~FilesRecentlyOpenedManager ();  ; virtual std::string getFilename (unsigned int idx) const;  ; unsigned int getMaxNumFiles () const;  ; const std::string & getPath () const;  ; void setPath (const std::string &p);  ; const sofa::type::vector< std::string > & getFiles () const;  ; void setFiles (const type::vector< std::string > &f);  . Protected Member Functions; void updateWidget ();  ;  Protected Member Functions inherited from sofa::gui::common::FilesRecentlyOpenedManager; void writeFiles () const;  . Attribute details. ◆ menuRecentlyOpenedFiles. QMenu* sofa::gui::qt::QMenuFilesRecentlyOpened::menuRecentlyOpenedFiles. protected . Constructor details. ◆ QMenuFilesRecentlyOpened(). sofa::gui::qt::QMenuFilesRecentlyOpened::QMenuFilesRecentlyOpened ; (; const std::string & ; configFile). inline . ◆ ~QMenuFilesRecentlyOpened(). sofa::gui::qt::QMenuFilesRec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_menu_files_recently_opened.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_menu_files_recently_opened.html
Deployability,update,updateYAxisBounds,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QMomentumStatWidget Member List . This is the complete list of members for sofa::gui::qt::QMomentumStatWidget, including all inherited members. flushSeries()sofa::gui::qt::QGraphStatWidgetprotected; m_axisXsofa::gui::qt::QGraphStatWidgetprotected; m_axisYsofa::gui::qt::QGraphStatWidgetprotected; m_bufferSizesofa::gui::qt::QGraphStatWidgetprotected; m_chartsofa::gui::qt::QGraphStatWidgetprotected; m_cptStepsofa::gui::qt::QGraphStatWidgetprotected; m_curvessofa::gui::qt::QGraphStatWidgetprotected; m_lastTimesofa::gui::qt::QGraphStatWidgetprotected; m_nodesofa::gui::qt::QGraphStatWidgetprotected; m_yMaxsofa::gui::qt::QGraphStatWidgetprotected; m_yMinsofa::gui::qt::QGraphStatWidgetprotected; QGraphStatWidget(QWidget *parent, simulation::Node *node, const QString &title, unsigned numberOfCurves, int bufferSize)sofa::gui::qt::QGraphStatWidget; QMomentumStatWidget(QWidget *parent, simulation::Node *node)sofa::gui::qt::QMomentumStatWidget; setCurve(unsigned index, const QString &name, const QColor &color)sofa::gui::qt::QGraphStatWidgetprotected; step() finalsofa::gui::qt::QGraphStatWidgetvirtual; stepImpl() overridesofa::gui::qt::QMomentumStatWidgetvirtual; updateYAxisBounds(SReal value)sofa::gui::qt::QGraphStatWidgetprotected; ~QGraphStatWidget()sofa::gui::qt::QGraphStatWidgetvirtual; ~QMomentumStatWidget()sofa::gui::qt::QMomentumStatWidgetvirtual. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_momentum_stat_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_momentum_stat_widget-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QMomentumStatWidget Member List . This is the complete list of members for sofa::gui::qt::QMomentumStatWidget, including all inherited members. flushSeries()sofa::gui::qt::QGraphStatWidgetprotected; m_axisXsofa::gui::qt::QGraphStatWidgetprotected; m_axisYsofa::gui::qt::QGraphStatWidgetprotected; m_bufferSizesofa::gui::qt::QGraphStatWidgetprotected; m_chartsofa::gui::qt::QGraphStatWidgetprotected; m_cptStepsofa::gui::qt::QGraphStatWidgetprotected; m_curvessofa::gui::qt::QGraphStatWidgetprotected; m_lastTimesofa::gui::qt::QGraphStatWidgetprotected; m_nodesofa::gui::qt::QGraphStatWidgetprotected; m_yMaxsofa::gui::qt::QGraphStatWidgetprotected; m_yMinsofa::gui::qt::QGraphStatWidgetprotected; QGraphStatWidget(QWidget *parent, simulation::Node *node, const QString &title, unsigned numberOfCurves, int bufferSize)sofa::gui::qt::QGraphStatWidget; QMomentumStatWidget(QWidget *parent, simulation::Node *node)sofa::gui::qt::QMomentumStatWidget; setCurve(unsigned index, const QString &name, const QColor &color)sofa::gui::qt::QGraphStatWidgetprotected; step() finalsofa::gui::qt::QGraphStatWidgetvirtual; stepImpl() overridesofa::gui::qt::QMomentumStatWidgetvirtual; updateYAxisBounds(SReal value)sofa::gui::qt::QGraphStatWidgetprotected; ~QGraphStatWidget()sofa::gui::qt::QGraphStatWidgetvirtual; ~QMomentumStatWidget()sofa::gui::qt::QMomentumStatWidgetvirtual. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_momentum_stat_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_momentum_stat_widget-members.html
Deployability,update,update,"﻿. SOFA API: sofa::gui::qt::QMomentumStatWidget Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gui::qt::QMomentumStatWidget Class Reference . #include <QMomentumStatWidget.h>. Inheritance diagram for sofa::gui::qt::QMomentumStatWidget:. [legend]. Public Member Functions;  QMomentumStatWidget (QWidget *parent, simulation::Node *node);  ; virtual ~QMomentumStatWidget ();  ; void stepImpl () override;  the only function that should be overloaded More...;  ;  Public Member Functions inherited from sofa::gui::qt::QGraphStatWidget;  QGraphStatWidget (QWidget *parent, simulation::Node *node, const QString &title, unsigned numberOfCurves, int bufferSize);  ; virtual ~QGraphStatWidget ();  ; virtual void step () final;  Main method called to update the graph. More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::gui::qt::QGraphStatWidget; simulation::Node * m_node;  pointer to the node monitored More...;  ; int m_bufferSize;  size of the buffers to stored More...;  ; QChart * m_chart;  Pointer to the chart Data. More...;  ; std::vector< QLineSeries * > m_curves;  vector of series to be plotted More...;  ; QValueAxis * m_axisX;  x axis pointer More...;  ; QValueAxis * m_axisY;  y axis pointer More...;  ; SReal m_yMin;  min y axis value stored More...;  ; SReal m_yMax;  max y axis value stored More...;  ; SReal m_lastTime;  last timestep monitored More...;  ; int m_cptStep;  step counter monitored More...;  ;  Protected Member Functions inherited from sofa::gui::qt::QGraphStatWidget; void setCurve (unsigned index, const QString &name, const QColor &color);  set the index-th curve (index must be < _numberOfCurves) More...;  ; void updateYAxisBounds (SReal value);  Method to update Y axis scale. More...;  ; void flushSeries ();  flush data from series not anymore displayed More...;  . Constructor details. ◆ QMomentumStatWidget(). sofa::gui::qt::QMoment",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_momentum_stat_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_momentum_stat_widget.html
Energy Efficiency,monitor,monitored,"﻿. SOFA API: sofa::gui::qt::QMomentumStatWidget Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gui::qt::QMomentumStatWidget Class Reference . #include <QMomentumStatWidget.h>. Inheritance diagram for sofa::gui::qt::QMomentumStatWidget:. [legend]. Public Member Functions;  QMomentumStatWidget (QWidget *parent, simulation::Node *node);  ; virtual ~QMomentumStatWidget ();  ; void stepImpl () override;  the only function that should be overloaded More...;  ;  Public Member Functions inherited from sofa::gui::qt::QGraphStatWidget;  QGraphStatWidget (QWidget *parent, simulation::Node *node, const QString &title, unsigned numberOfCurves, int bufferSize);  ; virtual ~QGraphStatWidget ();  ; virtual void step () final;  Main method called to update the graph. More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::gui::qt::QGraphStatWidget; simulation::Node * m_node;  pointer to the node monitored More...;  ; int m_bufferSize;  size of the buffers to stored More...;  ; QChart * m_chart;  Pointer to the chart Data. More...;  ; std::vector< QLineSeries * > m_curves;  vector of series to be plotted More...;  ; QValueAxis * m_axisX;  x axis pointer More...;  ; QValueAxis * m_axisY;  y axis pointer More...;  ; SReal m_yMin;  min y axis value stored More...;  ; SReal m_yMax;  max y axis value stored More...;  ; SReal m_lastTime;  last timestep monitored More...;  ; int m_cptStep;  step counter monitored More...;  ;  Protected Member Functions inherited from sofa::gui::qt::QGraphStatWidget; void setCurve (unsigned index, const QString &name, const QColor &color);  set the index-th curve (index must be < _numberOfCurves) More...;  ; void updateYAxisBounds (SReal value);  Method to update Y axis scale. More...;  ; void flushSeries ();  flush data from series not anymore displayed More...;  . Constructor details. ◆ QMomentumStatWidget(). sofa::gui::qt::QMoment",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_momentum_stat_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_momentum_stat_widget.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::qt::QMomentumStatWidget Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gui::qt::QMomentumStatWidget Class Reference . #include <QMomentumStatWidget.h>. Inheritance diagram for sofa::gui::qt::QMomentumStatWidget:. [legend]. Public Member Functions;  QMomentumStatWidget (QWidget *parent, simulation::Node *node);  ; virtual ~QMomentumStatWidget ();  ; void stepImpl () override;  the only function that should be overloaded More...;  ;  Public Member Functions inherited from sofa::gui::qt::QGraphStatWidget;  QGraphStatWidget (QWidget *parent, simulation::Node *node, const QString &title, unsigned numberOfCurves, int bufferSize);  ; virtual ~QGraphStatWidget ();  ; virtual void step () final;  Main method called to update the graph. More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::gui::qt::QGraphStatWidget; simulation::Node * m_node;  pointer to the node monitored More...;  ; int m_bufferSize;  size of the buffers to stored More...;  ; QChart * m_chart;  Pointer to the chart Data. More...;  ; std::vector< QLineSeries * > m_curves;  vector of series to be plotted More...;  ; QValueAxis * m_axisX;  x axis pointer More...;  ; QValueAxis * m_axisY;  y axis pointer More...;  ; SReal m_yMin;  min y axis value stored More...;  ; SReal m_yMax;  max y axis value stored More...;  ; SReal m_lastTime;  last timestep monitored More...;  ; int m_cptStep;  step counter monitored More...;  ;  Protected Member Functions inherited from sofa::gui::qt::QGraphStatWidget; void setCurve (unsigned index, const QString &name, const QColor &color);  set the index-th curve (index must be < _numberOfCurves) More...;  ; void updateYAxisBounds (SReal value);  Method to update Y axis scale. More...;  ; void flushSeries ();  flush data from series not anymore displayed More...;  . Constructor details. ◆ QMomentumStatWidget(). sofa::gui::qt::QMoment",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_momentum_stat_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_momentum_stat_widget.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QMouseOperation Member List . This is the complete list of members for sofa::gui::qt::QMouseOperation, including all inherited members. createWidgetFromData(sofa::core::objectmodel::BaseData *data)sofa::gui::qt::QMouseOperation; WidgetDirty(bool)sofa::gui::qt::QMouseOperationslot. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_mouse_operation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_mouse_operation-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QMouseWheelAdjustmentGuard Member List . This is the complete list of members for sofa::gui::qt::QMouseWheelAdjustmentGuard, including all inherited members. eventFilter(QObject *o, QEvent *e) overridesofa::gui::qt::QMouseWheelAdjustmentGuardprotected; QMouseWheelAdjustmentGuard(QObject *parent)sofa::gui::qt::QMouseWheelAdjustmentGuardexplicit. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_mouse_wheel_adjustment_guard-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_mouse_wheel_adjustment_guard-members.html
Deployability,install,installEventFilter,"﻿. SOFA API: sofa::gui::qt::QMouseWheelAdjustmentGuard Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::qt::QMouseWheelAdjustmentGuard Class Reference . #include <QMouseWheelAdjustementGuard.h>; Filter qt events to allows wheel event to only be accepted when the widget has focus. ; More... Inheritance diagram for sofa::gui::qt::QMouseWheelAdjustmentGuard:. [legend]; Detailed Description; Filter qt events to allows wheel event to only be accepted when the widget has focus. ; To use it you need to do: myWidget->setFocusPolicy(Qt::StrongFocus); myWidget->installEventFilter(new MouseWheelWidgetAdjustmentGuard(ui.comboBox));; This code is grabbed from: https://stackoverflow.com/questions/5821802/qspinbox-inside-a-qscrollarea-how-to-prevent-spin-box-from-stealing-focus-when . Public Member Functions;  QMouseWheelAdjustmentGuard (QObject *parent);  . Protected Member Functions; bool eventFilter (QObject *o, QEvent *e) override;  . Constructor details. ◆ QMouseWheelAdjustmentGuard(). sofa::gui::qt::QMouseWheelAdjustmentGuard::QMouseWheelAdjustmentGuard ; (; QObject * ; parent). explicit . Function details. ◆ eventFilter(). bool sofa::gui::qt::QMouseWheelAdjustmentGuard::eventFilter ; (; QObject * ; o, . QEvent * ; e . ). overrideprotected . sofaguiqtQMouseWheelAdjustmentGuard; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_mouse_wheel_adjustment_guard.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_mouse_wheel_adjustment_guard.html
Deployability,update,updateDataValue,"sofa::gui::qt::DataWidgetsignal; dataValueChanged(QString dataValueString)sofa::gui::qt::DataWidgetsignal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< double >inline; getData() constsofa::gui::qt::TDataWidget< double >inline; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; lineEditsofa::gui::qt::QPoissonRatioWidgetprotected; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::DataWidget; MyTData typedefsofa::gui::qt::TDataWidget< double >; numColumnWidget()sofa::gui::qt::DataWidgetinlinevirtual; QPoissonRatioWidget(QWidget *, const char *, core::objectmodel::Data< double > *)sofa::gui::qt::QPoissonRatioWidget; readFromData()sofa::gui::qt::QPoissonRatioWidgetprotectedvirtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< double >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< double >; sofa::gui::qt::DataWidget::setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)sofa::gui::qt::QPoissonRatioWidgetvirtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setWidgetDirty(bool b=true)sofa::gui::qt::DataWidgetslot; sizeWidget()sofa::gui::qt::DataWidgetinlinevirtual; slidersofa::gui::qt::QPoissonRatioWidgetprotected; Tdatasofa::gui::qt::TDataWidget< double >protected; TDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::TDataWidget< double >inline; updateDataValue()sofa::gui::qt::DataWidgetslot; updateVisibility()sofa::gui::qt::DataWidget; updateWidgetValue()sofa::gui::qt::DataWidgetslot; WidgetDirty(bool)sofa::gui::qt::DataWidgetsignal; writeToData()sofa::gui::qt::QPoissonRatioWidgetprotectedvirtual; ~DataWidget() overridesofa::gui::qt::DataWidget.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_poisson_ratio_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_poisson_ratio_widget-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QPoissonRatioWidget Member List . This is the complete list of members for sofa::gui::qt::QPoissonRatioWidget, including all inherited members. baseDatasofa::gui::qt::DataWidgetprotected; changeLineEditValue()sofa::gui::qt::QPoissonRatioWidgetprotectedslot; changeSliderValue()sofa::gui::qt::QPoissonRatioWidgetprotectedslot; countersofa::gui::qt::DataWidgetprotected; create(RealObject *, CreatorArgument &arg)sofa::gui::qt::TDataWidget< double >inlinestatic; sofa::gui::qt::DataWidget::create(T *, const CreatorArgument &arg)sofa::gui::qt::DataWidgetinlinestatic; CreateDataWidget(const DataWidget::CreatorArgument &dwarg)sofa::gui::qt::DataWidgetstatic; createWidgets()sofa::gui::qt::QPoissonRatioWidgetvirtual; DataOwnerDirty(bool)sofa::gui::qt::DataWidgetsignal; dataValueChanged(QString dataValueString)sofa::gui::qt::DataWidgetsignal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< double >inline; getData() constsofa::gui::qt::TDataWidget< double >inline; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; lineEditsofa::gui::qt::QPoissonRatioWidgetprotected; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::DataWidget; MyTData typedefsofa::gui::qt::TDataWidget< double >; numColumnWidget()sofa::gui::qt::DataWidgetinlinevirtual; QPoissonRatioWidget(QWidget *, const char *, core::objectmodel::Data< double > *)sofa::gui::qt::QPoissonRatioWidget; readFromData()sofa::gui::qt::QPoissonRatioWidgetprotectedvirtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< double >inlinevirtual; setData(MyData *d)sofa::gui::qt::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_poisson_ratio_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_poisson_ratio_widget-members.html
Deployability,update,updateVisibility,"nRatioWidget (QWidget *, const char *, core::objectmodel::Data< double > *);  ; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< double >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< double > * getData ();  ; const sofa::core::objectmodel::Data< double > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  . Protected Member Functions; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void writeToData ();  . Protected Slots; void changeLineEditValue ();  ; void changeSliderValue ();  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< double >; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidg",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_poisson_ratio_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_poisson_ratio_widget.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::qt::QPoissonRatioWidget Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; Protected Slots |; List of all members . sofa::gui::qt::QPoissonRatioWidget Class Reference . #include <QDisplayDataWidget.h>. Inheritance diagram for sofa::gui::qt::QPoissonRatioWidget:. [legend]. Protected Attributes; QSlider * slider;  ; QLineEdit * lineEdit;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< double >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  QPoissonRatioWidget (QWidget *, const char *, core::objectmodel::Data< double > *);  ; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< double >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< double > * getData ();  ; const sofa::core::objectmodel::Data< double > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_poisson_ratio_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_poisson_ratio_widget.html
Security,access,accessor,"sofa::gui::qt::TDataWidget< double >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  QPoissonRatioWidget (QWidget *, const char *, core::objectmodel::Data< double > *);  ; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< double >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< double > * getData ();  ; const sofa::core::objectmodel::Data< double > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  . Protected Member Functions; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void writeToData ();  . Protected Slots; void changeLineEditValue ();  ; void ch",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_poisson_ratio_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_poisson_ratio_widget.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QPushButtonUpdater Member List . This is the complete list of members for sofa::gui::qt::QPushButtonUpdater, including all inherited members. QPushButtonUpdater(const QString &text, QWidget *parent=nullptr)sofa::gui::qt::QPushButtonUpdaterinline; setDisplayed(bool b)sofa::gui::qt::QPushButtonUpdaterslot. Generated on Mon Nov 11 2024 03:23:37 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_push_button_updater-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_push_button_updater-members.html
Deployability,update,update,"::qt::QSofaListViewprotected; PutNodeToSleep()sofa::gui::qt::QSofaListViewprotectedslot; QSofaListView(const SofaListViewAttribute &attribute, QWidget *parent=nullptr, const char *name=nullptr, Qt::WindowFlags f=Qt::WindowType::Widget)sofa::gui::qt::QSofaListView; RemoveNode()sofa::gui::qt::QSofaListViewprotectedslot; RequestActivation(sofa::simulation::Node *, bool)sofa::gui::qt::QSofaListViewsignal; RequestExportOBJ(sofa::simulation::Node *node, bool exportMTL)sofa::gui::qt::QSofaListViewsignal; RequestSaving(sofa::simulation::Node *)sofa::gui::qt::QSofaListViewsignal; RequestSleeping(sofa::simulation::Node *, bool)sofa::gui::qt::QSofaListViewsignal; RootNodeChanged(sofa::simulation::Node *newroot, const char *newpath)sofa::gui::qt::QSofaListViewsignal; RunSofaDoubleClicked(QTreeWidgetItem *item, int index)sofa::gui::qt::QSofaListViewprotectedslot; RunSofaRightClicked(const QPoint &point)sofa::gui::qt::QSofaListViewprotectedslot; SaveNode()sofa::gui::qt::QSofaListViewprotectedslot; setPropertyWidget(QDisplayPropertyWidget *propertyWid)sofa::gui::qt::QSofaListViewinline; setRoot(sofa::simulation::Node *)sofa::gui::qt::QSofaListView; setViewToDirty()sofa::gui::qt::SofaSceneGraphWidget; SofaSceneGraphWidget(QWidget *parent)sofa::gui::qt::SofaSceneGraphWidgetinline; transformObject(sofa::simulation::Node *node, double dx, double dy, double dz, double rx, double ry, double rz, double scale)=deletesofa::gui::qt::QSofaListViewprotected; unLock()sofa::gui::qt::SofaSceneGraphWidget; update()sofa::gui::qt::QSofaListView; Updated()sofa::gui::qt::QSofaListViewsignal; updateMatchingObjectmodel(QTreeWidgetItem *item, int)sofa::gui::qt::QSofaListViewprotectedslot; updateMatchingObjectmodel(QTreeWidgetItem *item)sofa::gui::qt::QSofaListViewprotectedslot; UpdateOpenedDialogs()sofa::gui::qt::QSofaListViewslot; WakeUpNode()sofa::gui::qt::QSofaListViewprotectedslot; ~QSofaListView() overridesofa::gui::qt::QSofaListView; ~SofaSceneGraphWidget()sofa::gui::qt::SofaSceneGraphWidgetinline.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QSofaListView Member List . This is the complete list of members for sofa::gui::qt::QSofaListView, including all inherited members. ActivateNode()sofa::gui::qt::QSofaListViewprotectedslot; addInPropertyWidget(QTreeWidgetItem *item, bool clear)sofa::gui::qt::QSofaListView; AddObjectDialog_sofa::gui::qt::QSofaListViewprotected; attribute_sofa::gui::qt::QSofaListViewprotected; Clear(sofa::simulation::Node *rootNode)sofa::gui::qt::QSofaListView; Close()sofa::gui::qt::QSofaListViewsignal; CloseAllDialogs()sofa::gui::qt::QSofaListViewslot; collapseNode()sofa::gui::qt::QSofaListViewprotectedslot; collapseNode(QTreeWidgetItem *item)sofa::gui::qt::QSofaListViewprotected; collectNodesToChange(core::objectmodel::BaseNode *node)sofa::gui::qt::QSofaListViewprotected; contextMenuEvent(QContextMenuEvent *event) overridesofa::gui::qt::QSofaListView; copyFilePathToClipBoard()sofa::gui::qt::QSofaListViewprotectedslot; dataModified(QString)sofa::gui::qt::QSofaListViewsignal; DeactivateNode()sofa::gui::qt::QSofaListViewprotectedslot; dirtynessChanged(bool isDirty)sofa::gui::qt::SofaSceneGraphWidgetsignal; expandNode()sofa::gui::qt::QSofaListViewprotectedslot; expandNode(QTreeWidgetItem *item)sofa::gui::qt::QSofaListViewprotected; expandPath(const std::string &path)sofa::gui::qt::QSofaListViewprotected; expandPathFrom(const std::vector< std::string > &pathes)sofa::gui::qt::QSofaListView; ExpandRootNodeOnly()sofa::gui::qt::QSofaListViewslot; Export()sofa::gui::qt::QSofaListViewslot; exportOBJ()sofa::gui::qt::QSofaListViewprotectedslot; focusChanged(sofa::core::objectmodel::BaseObject *)sofa::gui::qt::QSofaListViewsignal; focusChanged(sofa::core::objectmodel::BaseNode *)sofa::gui::qt::QSofaListViewsignal; focusNode()sofa::gui::qt::QSofaListViewprotectedslot; focusObject()sofa::gui::qt::QSofaListViewprotectedslot; getAttribute() constsofa::gui::qt::QSofaListViewinline; getExpan",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view-members.html
Performance,load,loadObject,"ly()sofa::gui::qt::QSofaListViewslot; Export()sofa::gui::qt::QSofaListViewslot; exportOBJ()sofa::gui::qt::QSofaListViewprotectedslot; focusChanged(sofa::core::objectmodel::BaseObject *)sofa::gui::qt::QSofaListViewsignal; focusChanged(sofa::core::objectmodel::BaseNode *)sofa::gui::qt::QSofaListViewsignal; focusNode()sofa::gui::qt::QSofaListViewprotectedslot; focusObject()sofa::gui::qt::QSofaListViewprotectedslot; getAttribute() constsofa::gui::qt::QSofaListViewinline; getExpandedNodes(std::vector< std::string > &)sofa::gui::qt::QSofaListView; getExpandedNodes(QTreeWidgetItem *item, std::vector< std::string > &)sofa::gui::qt::QSofaListViewprotected; getListener() constsofa::gui::qt::QSofaListViewinline; graphListener_sofa::gui::qt::QSofaListViewprotected; isDirty()sofa::gui::qt::SofaSceneGraphWidget; isLocked()sofa::gui::qt::SofaSceneGraphWidget; isNodeErasable(core::objectmodel::BaseNode *node)sofa::gui::qt::QSofaListViewprotected; list_objectsofa::gui::qt::QSofaListViewprotected; loadObject(std::string path, double dx, double dy, double dz, double rx, double ry, double rz, double scale)=deletesofa::gui::qt::QSofaListView; lock()sofa::gui::qt::SofaSceneGraphWidget; Lock(bool)sofa::gui::qt::QSofaListViewsignal; lockingChanged(bool isLocked)sofa::gui::qt::SofaSceneGraphWidgetsignal; m_isDirtysofa::gui::qt::SofaSceneGraphWidgetprotected; m_isLockedsofa::gui::qt::SofaSceneGraphWidgetprotected; map_modifyDialogOpenedsofa::gui::qt::QSofaListViewprotected; map_modifyObjectWindowsofa::gui::qt::QSofaListViewprotected; Modify()sofa::gui::qt::QSofaListViewprotectedslot; modifyUnlock(void *Id)sofa::gui::qt::QSofaListViewprotectedslot; NodeAdded()sofa::gui::qt::QSofaListViewsignal; nodeNameModification(simulation::Node *)sofa::gui::qt::QSofaListViewprotectedslot; NodeRemoved()sofa::gui::qt::QSofaListViewsignal; object_sofa::gui::qt::QSofaListViewprotected; openImplementation()sofa::gui::qt::QSofaListViewprotectedslot; openInEditor()sofa::gui::qt::QSofaListViewprotectedslot; openIn",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view-members.html
Usability,clear,clear," ActivateNode()sofa::gui::qt::QSofaListViewprotectedslot; addInPropertyWidget(QTreeWidgetItem *item, bool clear)sofa::gui::qt::QSofaListView; AddObjectDialog_sofa::gui::qt::QSofaListViewprotected; attribute_sofa::gui::qt::QSofaListViewprotected; Clear(sofa::simulation::Node *rootNode)sofa::gui::qt::QSofaListView; Close()sofa::gui::qt::QSofaListViewsignal; CloseAllDialogs()sofa::gui::qt::QSofaListViewslot; collapseNode()sofa::gui::qt::QSofaListViewprotectedslot; collapseNode(QTreeWidgetItem *item)sofa::gui::qt::QSofaListViewprotected; collectNodesToChange(core::objectmodel::BaseNode *node)sofa::gui::qt::QSofaListViewprotected; contextMenuEvent(QContextMenuEvent *event) overridesofa::gui::qt::QSofaListView; copyFilePathToClipBoard()sofa::gui::qt::QSofaListViewprotectedslot; dataModified(QString)sofa::gui::qt::QSofaListViewsignal; DeactivateNode()sofa::gui::qt::QSofaListViewprotectedslot; dirtynessChanged(bool isDirty)sofa::gui::qt::SofaSceneGraphWidgetsignal; expandNode()sofa::gui::qt::QSofaListViewprotectedslot; expandNode(QTreeWidgetItem *item)sofa::gui::qt::QSofaListViewprotected; expandPath(const std::string &path)sofa::gui::qt::QSofaListViewprotected; expandPathFrom(const std::vector< std::string > &pathes)sofa::gui::qt::QSofaListView; ExpandRootNodeOnly()sofa::gui::qt::QSofaListViewslot; Export()sofa::gui::qt::QSofaListViewslot; exportOBJ()sofa::gui::qt::QSofaListViewprotectedslot; focusChanged(sofa::core::objectmodel::BaseObject *)sofa::gui::qt::QSofaListViewsignal; focusChanged(sofa::core::objectmodel::BaseNode *)sofa::gui::qt::QSofaListViewsignal; focusNode()sofa::gui::qt::QSofaListViewprotectedslot; focusObject()sofa::gui::qt::QSofaListViewprotectedslot; getAttribute() constsofa::gui::qt::QSofaListViewinline; getExpan",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view-members.html
Deployability,update,update,"ap_modifyDialogOpened;  ; std::map< void *, QDialog * > map_modifyObjectWindow;  ; GraphListenerQListView * graphListener_;  ; std::vector< std::string > list_object;  ; AddObject * AddObjectDialog_;  ; ObjectModel object_;  ; SofaListViewAttribute attribute_;  ; QDisplayPropertyWidget * propertyWidget;  ;  Protected Attributes inherited from sofa::gui::qt::SofaSceneGraphWidget; bool m_isDirty;  ; bool m_isLocked;  . Public Member Functions;  QSofaListView (const SofaListViewAttribute &attribute, QWidget *parent=nullptr, const char *name=nullptr, Qt::WindowFlags f=Qt::WindowType::Widget);  ;  ~QSofaListView () override;  ; GraphListenerQListView * getListener () const;  ; void setPropertyWidget (QDisplayPropertyWidget *propertyWid);  ; void addInPropertyWidget (QTreeWidgetItem *item, bool clear);  ; void Clear (sofa::simulation::Node *rootNode);  ; void update ();  ; void setRoot (sofa::simulation::Node *);  ; SofaListViewAttribute getAttribute () const;  ; void contextMenuEvent (QContextMenuEvent *event) override;  ; void expandPathFrom (const std::vector< std::string > &pathes);  ; void getExpandedNodes (std::vector< std::string > &);  ; void loadObject (std::string path, double dx, double dy, double dz, double rx, double ry, double rz, double scale)=delete;  ;  Public Member Functions inherited from sofa::gui::qt::SofaSceneGraphWidget;  SofaSceneGraphWidget (QWidget *parent);  ;  ~SofaSceneGraphWidget ();  ; void lock ();  ; void unLock ();  ; bool isDirty ();  ; bool isLocked ();  Returns true if the view updates for any scene graph change is disable. More...;  ; void setViewToDirty ();  . Protected Member Functions; void expandPath (const std::string &path);  ; void getExpandedNodes (QTreeWidgetItem *item, std::vector< std::string > &);  ; void collapseNode (QTreeWidgetItem *item);  ; void expandNode (QTreeWidgetItem *item);  ; void transformObject (sofa::simulation::Node *node, double dx, double dy, double dz, double rx, double ry, double rz, double scale)=dele",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view.html
Integrability,synchroniz,synchronized,". ◆ RootNodeChanged. void sofa::gui::qt::QSofaListView::RootNodeChanged ; (; sofa::simulation::Node * ; newroot, . const char * ; newpath . ). signal . ◆ RunSofaDoubleClicked. void sofa::gui::qt::QSofaListView::RunSofaDoubleClicked ; (; QTreeWidgetItem * ; item, . int ; index . ). protectedslot . ◆ RunSofaRightClicked. void sofa::gui::qt::QSofaListView::RunSofaRightClicked ; (; const QPoint & ; point). protectedslot . ◆ SaveNode. void sofa::gui::qt::QSofaListView::SaveNode ; (; ). protectedslot . ◆ setPropertyWidget(). void sofa::gui::qt::QSofaListView::setPropertyWidget ; (; QDisplayPropertyWidget * ; propertyWid). inline . ◆ setRoot(). void sofa::gui::qt::QSofaListView::setRoot ; (; sofa::simulation::Node * ; root). ◆ transformObject(). void sofa::gui::qt::QSofaListView::transformObject ; (; sofa::simulation::Node * ; node, . double ; dx, . double ; dy, . double ; dz, . double ; rx, . double ; ry, . double ; rz, . double ; scale . ). protecteddelete . ◆ update(). void sofa::gui::qt::QSofaListView::update ; (; ). Updates the view so it is synchronized with the simulation graph. The view can be visually de-synchronized with the simulation graph. This happens when the view is ""frozen"" for performance reason. In that case, use isDirty to get current view state or the dirtynessChanged() signal. To resynchronize the view call the update method. . ◆ Updated. void sofa::gui::qt::QSofaListView::Updated ; (; ). signal . ◆ updateMatchingObjectmodel [1/2]. void sofa::gui::qt::QSofaListView::updateMatchingObjectmodel ; (; QTreeWidgetItem * ; item). protectedslot . ◆ updateMatchingObjectmodel [2/2]. void sofa::gui::qt::QSofaListView::updateMatchingObjectmodel ; (; QTreeWidgetItem * ; item, . int ;  . ). protectedslot . ◆ UpdateOpenedDialogs. void sofa::gui::qt::QSofaListView::UpdateOpenedDialogs ; (; ). slot . ◆ WakeUpNode. void sofa::gui::qt::QSofaListView::WakeUpNode ; (; ). protectedslot . sofaguiqtQSofaListView; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::qt::QSofaListView Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; Signals |; Public Slots |; Protected Slots |; List of all members . sofa::gui::qt::QSofaListView Class Reference . #include <QSofaListView.h>. Inheritance diagram for sofa::gui::qt::QSofaListView:. [legend]. Classes; class  LockContextManager;  . Protected Attributes; std::map< void *, QTreeWidgetItem * > map_modifyDialogOpened;  ; std::map< void *, QDialog * > map_modifyObjectWindow;  ; GraphListenerQListView * graphListener_;  ; std::vector< std::string > list_object;  ; AddObject * AddObjectDialog_;  ; ObjectModel object_;  ; SofaListViewAttribute attribute_;  ; QDisplayPropertyWidget * propertyWidget;  ;  Protected Attributes inherited from sofa::gui::qt::SofaSceneGraphWidget; bool m_isDirty;  ; bool m_isLocked;  . Public Member Functions;  QSofaListView (const SofaListViewAttribute &attribute, QWidget *parent=nullptr, const char *name=nullptr, Qt::WindowFlags f=Qt::WindowType::Widget);  ;  ~QSofaListView () override;  ; GraphListenerQListView * getListener () const;  ; void setPropertyWidget (QDisplayPropertyWidget *propertyWid);  ; void addInPropertyWidget (QTreeWidgetItem *item, bool clear);  ; void Clear (sofa::simulation::Node *rootNode);  ; void update ();  ; void setRoot (sofa::simulation::Node *);  ; SofaListViewAttribute getAttribute () const;  ; void contextMenuEvent (QContextMenuEvent *event) override;  ; void expandPathFrom (const std::vector< std::string > &pathes);  ; void getExpandedNodes (std::vector< std::string > &);  ; void loadObject (std::string path, double dx, double dy, double dz, double rx, double ry, double rz, double scale)=delete;  ;  Public Member Functions inherited from sofa::gui::qt::SofaSceneGraphWidget;  SofaSceneGraphWidget (QWidget *parent);  ;  ~SofaSceneGraphWidget ();  ; void lock ();  ; void unLock (); ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view.html
Performance,load,loadObject,"ap_modifyDialogOpened;  ; std::map< void *, QDialog * > map_modifyObjectWindow;  ; GraphListenerQListView * graphListener_;  ; std::vector< std::string > list_object;  ; AddObject * AddObjectDialog_;  ; ObjectModel object_;  ; SofaListViewAttribute attribute_;  ; QDisplayPropertyWidget * propertyWidget;  ;  Protected Attributes inherited from sofa::gui::qt::SofaSceneGraphWidget; bool m_isDirty;  ; bool m_isLocked;  . Public Member Functions;  QSofaListView (const SofaListViewAttribute &attribute, QWidget *parent=nullptr, const char *name=nullptr, Qt::WindowFlags f=Qt::WindowType::Widget);  ;  ~QSofaListView () override;  ; GraphListenerQListView * getListener () const;  ; void setPropertyWidget (QDisplayPropertyWidget *propertyWid);  ; void addInPropertyWidget (QTreeWidgetItem *item, bool clear);  ; void Clear (sofa::simulation::Node *rootNode);  ; void update ();  ; void setRoot (sofa::simulation::Node *);  ; SofaListViewAttribute getAttribute () const;  ; void contextMenuEvent (QContextMenuEvent *event) override;  ; void expandPathFrom (const std::vector< std::string > &pathes);  ; void getExpandedNodes (std::vector< std::string > &);  ; void loadObject (std::string path, double dx, double dy, double dz, double rx, double ry, double rz, double scale)=delete;  ;  Public Member Functions inherited from sofa::gui::qt::SofaSceneGraphWidget;  SofaSceneGraphWidget (QWidget *parent);  ;  ~SofaSceneGraphWidget ();  ; void lock ();  ; void unLock ();  ; bool isDirty ();  ; bool isLocked ();  Returns true if the view updates for any scene graph change is disable. More...;  ; void setViewToDirty ();  . Protected Member Functions; void expandPath (const std::string &path);  ; void getExpandedNodes (QTreeWidgetItem *item, std::vector< std::string > &);  ; void collapseNode (QTreeWidgetItem *item);  ; void expandNode (QTreeWidgetItem *item);  ; void transformObject (sofa::simulation::Node *node, double dx, double dy, double dz, double rx, double ry, double rz, double scale)=dele",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view.html
Usability,clear,clear,"ap_modifyDialogOpened;  ; std::map< void *, QDialog * > map_modifyObjectWindow;  ; GraphListenerQListView * graphListener_;  ; std::vector< std::string > list_object;  ; AddObject * AddObjectDialog_;  ; ObjectModel object_;  ; SofaListViewAttribute attribute_;  ; QDisplayPropertyWidget * propertyWidget;  ;  Protected Attributes inherited from sofa::gui::qt::SofaSceneGraphWidget; bool m_isDirty;  ; bool m_isLocked;  . Public Member Functions;  QSofaListView (const SofaListViewAttribute &attribute, QWidget *parent=nullptr, const char *name=nullptr, Qt::WindowFlags f=Qt::WindowType::Widget);  ;  ~QSofaListView () override;  ; GraphListenerQListView * getListener () const;  ; void setPropertyWidget (QDisplayPropertyWidget *propertyWid);  ; void addInPropertyWidget (QTreeWidgetItem *item, bool clear);  ; void Clear (sofa::simulation::Node *rootNode);  ; void update ();  ; void setRoot (sofa::simulation::Node *);  ; SofaListViewAttribute getAttribute () const;  ; void contextMenuEvent (QContextMenuEvent *event) override;  ; void expandPathFrom (const std::vector< std::string > &pathes);  ; void getExpandedNodes (std::vector< std::string > &);  ; void loadObject (std::string path, double dx, double dy, double dz, double rx, double ry, double rz, double scale)=delete;  ;  Public Member Functions inherited from sofa::gui::qt::SofaSceneGraphWidget;  SofaSceneGraphWidget (QWidget *parent);  ;  ~SofaSceneGraphWidget ();  ; void lock ();  ; void unLock ();  ; bool isDirty ();  ; bool isLocked ();  Returns true if the view updates for any scene graph change is disable. More...;  ; void setViewToDirty ();  . Protected Member Functions; void expandPath (const std::string &path);  ; void getExpandedNodes (QTreeWidgetItem *item, std::vector< std::string > &);  ; void collapseNode (QTreeWidgetItem *item);  ; void expandNode (QTreeWidgetItem *item);  ; void transformObject (sofa::simulation::Node *node, double dx, double dy, double dz, double rx, double ry, double rz, double scale)=dele",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QSofaListView::LockContextManager Member List . This is the complete list of members for sofa::gui::qt::QSofaListView::LockContextManager, including all inherited members. LockContextManager(QSofaListView *view, bool isLocked)sofa::gui::qt::QSofaListView::LockContextManagerinline; selfsofa::gui::qt::QSofaListView::LockContextManager; statesofa::gui::qt::QSofaListView::LockContextManager; ~LockContextManager()sofa::gui::qt::QSofaListView::LockContextManagerinline. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view_1_1_lock_context_manager-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view_1_1_lock_context_manager-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QSofaStatWidget Member List . This is the complete list of members for sofa::gui::qt::QSofaStatWidget, including all inherited members. addCollisionModelsStat(const sofa::type::vector< sofa::core::CollisionModel * > &v)sofa::gui::qt::QSofaStatWidgetprotected; addSummary()sofa::gui::qt::QSofaStatWidgetprotected; CreateStats(sofa::simulation::Node *root)sofa::gui::qt::QSofaStatWidget; items_statssofa::gui::qt::QSofaStatWidgetprotected; QSofaStatWidget(QWidget *parent)sofa::gui::qt::QSofaStatWidget; statsCountersofa::gui::qt::QSofaStatWidgetprotected; statsLabelsofa::gui::qt::QSofaStatWidgetprotected. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_stat_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_stat_widget-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QStartNavigationOperation Member List . This is the complete list of members for sofa::gui::qt::QStartNavigationOperation, including all inherited members. buttonsofa::gui::common::Operationprotected; configure(common::PickHandler *picker, sofa::component::setting::MouseButtonSetting *button) overridesofa::gui::qt::QStartNavigationOperationvirtual; sofa::gui::common::StartNavigationOperation::configure(PickHandler *picker, MOUSE_BUTTON b)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p) overridesofa::gui::common::StartNavigationOperationprotectedvirtual; createPerformer()sofa::gui::common::Operationvirtual; createWidgetFromData(sofa::core::objectmodel::BaseData *data)sofa::gui::qt::QMouseOperation; defaultPerformerType() overridesofa::gui::common::StartNavigationOperationprotectedvirtual; end()sofa::gui::common::Operationvirtual; endOperation()sofa::gui::common::Operationinlinevirtual; execution()sofa::gui::common::Operationinlinevirtual; getDescription()sofa::gui::common::StartNavigationOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; mbsettingsofa::gui::common::Operationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; QStartNavigationOperation()sofa::gui::qt::QStartNavigationOperation; setSetting(sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; settingsofa::gui::common::StartNavigationOperationprotected; start()sofa::gui::common::Operationvirtual; StartNavigationOperation()sofa::gui::common::StartNavigationOperationinline; wait()sofa::gui::common::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation-members.html
Performance,perform,performer," sofa::gui::qt::QStartNavigationOperation, including all inherited members. buttonsofa::gui::common::Operationprotected; configure(common::PickHandler *picker, sofa::component::setting::MouseButtonSetting *button) overridesofa::gui::qt::QStartNavigationOperationvirtual; sofa::gui::common::StartNavigationOperation::configure(PickHandler *picker, MOUSE_BUTTON b)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p) overridesofa::gui::common::StartNavigationOperationprotectedvirtual; createPerformer()sofa::gui::common::Operationvirtual; createWidgetFromData(sofa::core::objectmodel::BaseData *data)sofa::gui::qt::QMouseOperation; defaultPerformerType() overridesofa::gui::common::StartNavigationOperationprotectedvirtual; end()sofa::gui::common::Operationvirtual; endOperation()sofa::gui::common::Operationinlinevirtual; execution()sofa::gui::common::Operationinlinevirtual; getDescription()sofa::gui::common::StartNavigationOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; mbsettingsofa::gui::common::Operationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; QStartNavigationOperation()sofa::gui::qt::QStartNavigationOperation; setSetting(sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; settingsofa::gui::common::StartNavigationOperationprotected; start()sofa::gui::common::Operationvirtual; StartNavigationOperation()sofa::gui::common::StartNavigationOperationinline; wait()sofa::gui::common::Operationinlinevirtual; WidgetDirty(bool)sofa::gui::qt::QMouseOperationslot; ~Operation()sofa::gui::common::Operationinlinevirtual. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation-members.html
Deployability,release,released,"::gui::qt::QStartNavigationOperation:. [legend]. Public Member Functions;  QStartNavigationOperation ();  ; void configure (common::PickHandler *picker, sofa::component::setting::MouseButtonSetting *button) override;  ;  Public Member Functions inherited from sofa::gui::qt::QMouseOperation; DataWidget * createWidgetFromData (sofa::core::objectmodel::BaseData *data);  ;  Public Member Functions inherited from sofa::gui::common::StartNavigationOperation;  StartNavigationOperation ();  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Protected Attributes inherited from sofa::gui::common::StartNavigationOperation; sofa::gui::component::StartNavigationButtonSetting::SPtr setting;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  ;  Static Public Member Functions inherited from sofa::gui::common::StartNavigationOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html
Modifiability,config,configure,"﻿. SOFA API: sofa::gui::qt::QStartNavigationOperation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gui::qt::QStartNavigationOperation Class Reference . #include <QMouseOperations.h>. Inheritance diagram for sofa::gui::qt::QStartNavigationOperation:. [legend]. Public Member Functions;  QStartNavigationOperation ();  ; void configure (common::PickHandler *picker, sofa::component::setting::MouseButtonSetting *button) override;  ;  Public Member Functions inherited from sofa::gui::qt::QMouseOperation; DataWidget * createWidgetFromData (sofa::core::objectmodel::BaseData *data);  ;  Public Member Functions inherited from sofa::gui::common::StartNavigationOperation;  StartNavigationOperation ();  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Protected Attributes inherited from sofa::gui::common::StartNavigationOperation; sofa::gui::component::StartNavigationButtonSetting::SPtr setting;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html
Performance,perform,performer,"ent::setting::MouseButtonSetting *button) override;  ;  Public Member Functions inherited from sofa::gui::qt::QMouseOperation; DataWidget * createWidgetFromData (sofa::core::objectmodel::BaseData *data);  ;  Public Member Functions inherited from sofa::gui::common::StartNavigationOperation;  StartNavigationOperation ();  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Protected Attributes inherited from sofa::gui::common::StartNavigationOperation; sofa::gui::component::StartNavigationButtonSetting::SPtr setting;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  ;  Static Public Member Functions inherited from sofa::gui::common::StartNavigationOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  ;  Protected Member Functions inherited from sofa::gui::common::StartNavigationOperation; virtual std::string defaultPerfo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QSOFAApplication Member List . This is the complete list of members for sofa::gui::qt::QSOFAApplication, including all inherited members. event(QEvent *event) overridesofa::gui::qt::QSOFAApplicationinlineprotected; QSOFAApplication(int &argc, char **argv)sofa::gui::qt::QSOFAApplicationinline; translate(const char *context, const char *key, const char *disambiguation, QCoreApplication::Encoding encoding=QCoreApplication::UnicodeUTF8, int n=-1)sofa::gui::qt::QSOFAApplicationinlinestatic. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_s_o_f_a_application-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_s_o_f_a_application-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QTableModelUpdater Member List . This is the complete list of members for sofa::gui::qt::QTableModelUpdater, including all inherited members. data(const QModelIndex &index, int role) const overridesofa::gui::qt::QTableModelUpdater; flags(const QModelIndex &) const overridesofa::gui::qt::QTableModelUpdater; QTableModelUpdater(int numRows, int numCols, QWidget *parent=nullptr, const char *=nullptr)sofa::gui::qt::QTableModelUpdater; resizeTableH(int number)sofa::gui::qt::QTableModelUpdaterslot; resizeTableV(int number)sofa::gui::qt::QTableModelUpdaterslot; setReadOnly(const bool isReadOnly)sofa::gui::qt::QTableModelUpdater. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_table_model_updater-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_table_model_updater-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QTableUpdater Member List . This is the complete list of members for sofa::gui::qt::QTableUpdater, including all inherited members. QTableUpdater(int numRows, int numCols, QWidget *parent=0, const char *name=0)sofa::gui::qt::QTableUpdaterinline; resizeTableH(int number)sofa::gui::qt::QTableUpdaterinlineslot; resizeTableV(int number)sofa::gui::qt::QTableUpdaterinlineslot; setDisplayed(bool b)sofa::gui::qt::QTableUpdaterinlineslot. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_table_updater-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_table_updater-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QTableViewUpdater Member List . This is the complete list of members for sofa::gui::qt::QTableViewUpdater, including all inherited members. QTableViewUpdater(QWidget *parent=nullptr)sofa::gui::qt::QTableViewUpdater; setDisplayed(bool b)sofa::gui::qt::QTableViewUpdaterslot. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_table_view_updater-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_table_view_updater-members.html
Deployability,update,updateDataValue,":gui::qt::QTabulationModifyObject, including all inherited members. addData(sofa::core::objectmodel::BaseData *data, const ModifyObjectFlags &flags)sofa::gui::qt::QTabulationModifyObject; addLink(sofa::core::objectmodel::BaseLink *link, const ModifyObjectFlags &flags)sofa::gui::qt::QTabulationModifyObject; addStretch()sofa::gui::qt::QTabulationModifyObject; dataValueChanged(QString dataValue)sofa::gui::qt::QTabulationModifyObjectslot; dirtysofa::gui::qt::QTabulationModifyObjectprotected; externalWidgetAddition(int num)sofa::gui::qt::QTabulationModifyObjectinline; getDataModifiedString() constsofa::gui::qt::QTabulationModifyObject; getIndex() constsofa::gui::qt::QTabulationModifyObjectinline; indexsofa::gui::qt::QTabulationModifyObjectprotected; isDirty() constsofa::gui::qt::QTabulationModifyObject; isEmpty() constsofa::gui::qt::QTabulationModifyObject; isFull() constsofa::gui::qt::QTabulationModifyObject; itemsofa::gui::qt::QTabulationModifyObjectprotected; m_dataValueModifiedsofa::gui::qt::QTabulationModifyObjectprotected; nodeNameModification(simulation::Node *)sofa::gui::qt::QTabulationModifyObjectsignal; objectsofa::gui::qt::QTabulationModifyObjectprotected; pixelMaxSizesofa::gui::qt::QTabulationModifyObjectprotected; pixelSizesofa::gui::qt::QTabulationModifyObjectprotected; QTabulationModifyObject(QWidget *parent, core::objectmodel::Base *object, QTreeWidgetItem *item, unsigned int idx=1)sofa::gui::qt::QTabulationModifyObject; setFull()sofa::gui::qt::QTabulationModifyObjectinline; setTabDirty(bool=true)sofa::gui::qt::QTabulationModifyObjectslot; sizesofa::gui::qt::QTabulationModifyObjectprotected; TabDirty(bool)sofa::gui::qt::QTabulationModifyObjectsignal; UpdateDatas()sofa::gui::qt::QTabulationModifyObjectsignal; updateDataValue()sofa::gui::qt::QTabulationModifyObjectslot; UpdateDataWidgets()sofa::gui::qt::QTabulationModifyObjectsignal; updateWidgetValue()sofa::gui::qt::QTabulationModifyObjectslot. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QTabulationModifyObject Member List . This is the complete list of members for sofa::gui::qt::QTabulationModifyObject, including all inherited members. addData(sofa::core::objectmodel::BaseData *data, const ModifyObjectFlags &flags)sofa::gui::qt::QTabulationModifyObject; addLink(sofa::core::objectmodel::BaseLink *link, const ModifyObjectFlags &flags)sofa::gui::qt::QTabulationModifyObject; addStretch()sofa::gui::qt::QTabulationModifyObject; dataValueChanged(QString dataValue)sofa::gui::qt::QTabulationModifyObjectslot; dirtysofa::gui::qt::QTabulationModifyObjectprotected; externalWidgetAddition(int num)sofa::gui::qt::QTabulationModifyObjectinline; getDataModifiedString() constsofa::gui::qt::QTabulationModifyObject; getIndex() constsofa::gui::qt::QTabulationModifyObjectinline; indexsofa::gui::qt::QTabulationModifyObjectprotected; isDirty() constsofa::gui::qt::QTabulationModifyObject; isEmpty() constsofa::gui::qt::QTabulationModifyObject; isFull() constsofa::gui::qt::QTabulationModifyObject; itemsofa::gui::qt::QTabulationModifyObjectprotected; m_dataValueModifiedsofa::gui::qt::QTabulationModifyObjectprotected; nodeNameModification(simulation::Node *)sofa::gui::qt::QTabulationModifyObjectsignal; objectsofa::gui::qt::QTabulationModifyObjectprotected; pixelMaxSizesofa::gui::qt::QTabulationModifyObjectprotected; pixelSizesofa::gui::qt::QTabulationModifyObjectprotected; QTabulationModifyObject(QWidget *parent, core::objectmodel::Base *object, QTreeWidgetItem *item, unsigned int idx=1)sofa::gui::qt::QTabulationModifyObject; setFull()sofa::gui::qt::QTabulationModifyObjectinline; setTabDirty(bool=true)sofa::gui::qt::QTabulationModifyObjectslot; sizesofa::gui::qt::QTabulationModifyObjectprotected; TabDirty(bool)sofa::gui::qt::QTabulationModifyObjectsignal; UpdateDatas()sofa::gui::qt::QTabulationModifyObjectsignal; updateDataValue()sofa::gui::qt::QTabulationModifyObje",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object-members.html
Deployability,update,updateDataValue," object;  ; QTreeWidgetItem * item;  ; const unsigned int index;  ; unsigned int size;  ; bool dirty;  ; std::map< QObject *, QString > m_dataValueModified;  ; unsigned int pixelSize;  ; unsigned int pixelMaxSize;  . Public Member Functions;  QTabulationModifyObject (QWidget *parent, core::objectmodel::Base *object, QTreeWidgetItem *item, unsigned int idx=1);  ; void externalWidgetAddition (int num);  ; void addData (sofa::core::objectmodel::BaseData *data, const ModifyObjectFlags &flags);  ; void addLink (sofa::core::objectmodel::BaseLink *link, const ModifyObjectFlags &flags);  ; void addStretch ();  ; unsigned int getIndex () const;  ; bool isFull () const;  ; void setFull ();  ; bool isEmpty () const;  ; bool isDirty () const;  ; QString getDataModifiedString () const;  . Signals; void UpdateDatas ();  ; void UpdateDataWidgets ();  ; void TabDirty (bool);  ; void nodeNameModification (simulation::Node *);  . Public Slots; void setTabDirty (bool=true);  ; void updateDataValue ();  ; void updateWidgetValue ();  ; void dataValueChanged (QString dataValue);  . Attribute details. ◆ dirty. bool sofa::gui::qt::QTabulationModifyObject::dirty. protected . ◆ index. const unsigned int sofa::gui::qt::QTabulationModifyObject::index. protected . ◆ item. QTreeWidgetItem* sofa::gui::qt::QTabulationModifyObject::item. protected . ◆ m_dataValueModified. std::map< QObject*, QString> sofa::gui::qt::QTabulationModifyObject::m_dataValueModified. protected . ◆ object. core::objectmodel::Base* sofa::gui::qt::QTabulationModifyObject::object. protected . ◆ pixelMaxSize. unsigned int sofa::gui::qt::QTabulationModifyObject::pixelMaxSize. protected . ◆ pixelSize. unsigned int sofa::gui::qt::QTabulationModifyObject::pixelSize. protected . ◆ size. unsigned int sofa::gui::qt::QTabulationModifyObject::size. protected . Constructor details. ◆ QTabulationModifyObject(). sofa::gui::qt::QTabulationModifyObject::QTabulationModifyObject ; (; QWidget * ; parent, . core::objectmodel::Base * ; object, . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QTopologyOperation Member List . This is the complete list of members for sofa::gui::qt::QTopologyOperation, including all inherited members. advancedOptionssofa::gui::qt::QTopologyOperationprotected; buttonsofa::gui::common::Operationprotected; configure(common::PickHandler *picker, common::MOUSE_BUTTON b) overridesofa::gui::qt::QTopologyOperationinlinevirtual; sofa::gui::common::TopologyOperation::configure(PickHandler *picker, sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p)sofa::gui::common::Operationvirtual; createPerformer()sofa::gui::common::Operationvirtual; defaultPerformerType()sofa::gui::common::Operationinlinevirtual; end() overridesofa::gui::common::TopologyOperationvirtual; endOperation() overridesofa::gui::common::TopologyOperationvirtual; execution() overridesofa::gui::common::TopologyOperationvirtual; firstClicksofa::gui::common::TopologyOperationprotected; getDescription()sofa::gui::common::TopologyOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; getScale() const overridesofa::gui::qt::QTopologyOperationvirtual; getTopologicalOperation() const overridesofa::gui::qt::QTopologyOperationvirtual; getVolumicMesh() const overridesofa::gui::qt::QTopologyOperationvirtual; mbsettingsofa::gui::common::Operationprotected; meshType1sofa::gui::qt::QTopologyOperationprotected; meshType2sofa::gui::qt::QTopologyOperationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; operationChoicesofa::gui::qt::QTopologyOperationprotected; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; QTopologyOperat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation-members.html
Performance,perform,performer," advancedOptionssofa::gui::qt::QTopologyOperationprotected; buttonsofa::gui::common::Operationprotected; configure(common::PickHandler *picker, common::MOUSE_BUTTON b) overridesofa::gui::qt::QTopologyOperationinlinevirtual; sofa::gui::common::TopologyOperation::configure(PickHandler *picker, sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p)sofa::gui::common::Operationvirtual; createPerformer()sofa::gui::common::Operationvirtual; defaultPerformerType()sofa::gui::common::Operationinlinevirtual; end() overridesofa::gui::common::TopologyOperationvirtual; endOperation() overridesofa::gui::common::TopologyOperationvirtual; execution() overridesofa::gui::common::TopologyOperationvirtual; firstClicksofa::gui::common::TopologyOperationprotected; getDescription()sofa::gui::common::TopologyOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; getScale() const overridesofa::gui::qt::QTopologyOperationvirtual; getTopologicalOperation() const overridesofa::gui::qt::QTopologyOperationvirtual; getVolumicMesh() const overridesofa::gui::qt::QTopologyOperationvirtual; mbsettingsofa::gui::common::Operationprotected; meshType1sofa::gui::qt::QTopologyOperationprotected; meshType2sofa::gui::qt::QTopologyOperationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; operationChoicesofa::gui::qt::QTopologyOperationprotected; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; QTopologyOperat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation-members.html
Deployability,release,released,"on::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  . Public Member Functions;  QTopologyOperation ();  ; double getScale () const override;  ; int getTopologicalOperation () const override;  ; bool getVolumicMesh () const override;  ; void configure (common::PickHandler *picker, common::MOUSE_BUTTON b) override;  ;  Public Member Functions inherited from sofa::gui::common::TopologyOperation;  TopologyOperation ();  ;  ~TopologyOperation () override;  ; void start () override;  ; void execution () override;  This function is called each time the mouse is clicked. More...;  ; void end () override;  ; void endOperation () override;  This function is called after each mouse click. More...;  ; void setTopologicalOperation (int m);  ; void setScale (double s);  ; void setVolumicMesh (bool v);  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual std::string defaultPerformerType ();  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; virtual void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p);  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Public Slots; void setEnableBox (int i);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Static Public Member Functions inherited from sofa::gui::common::TopologyOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::qt::QTopologyOperation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Public Slots |; List of all members . sofa::gui::qt::QTopologyOperation Class Reference . #include <QMouseOperations.h>. Inheritance diagram for sofa::gui::qt::QTopologyOperation:. [legend]. Protected Attributes; QComboBox * operationChoice;  ; QRadioButton * meshType1;  ; QRadioButton * meshType2;  ; QGroupBox * advancedOptions;  ; QSlider * scaleSlider;  ; QSpinBox * scaleValue;  ;  Protected Attributes inherited from sofa::gui::common::TopologyOperation; int topologicalOperation;  ; double scale;  ; bool volumicMesh;  ; bool firstClick;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  . Public Member Functions;  QTopologyOperation ();  ; double getScale () const override;  ; int getTopologicalOperation () const override;  ; bool getVolumicMesh () const override;  ; void configure (common::PickHandler *picker, common::MOUSE_BUTTON b) override;  ;  Public Member Functions inherited from sofa::gui::common::TopologyOperation;  TopologyOperation ();  ;  ~TopologyOperation () override;  ; void start () override;  ; void execution () override;  This function is called each time the mouse is clicked. More...;  ; void end () override;  ; void endOperation () override;  This function is called after each mouse click. More...;  ; void setTopologicalOperation (int m);  ; void setScale (double s);  ; void setVolumicMesh (bool v);  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void wait ();  This function is called when shift ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html
Performance,perform,performer,"herited from sofa::gui::common::TopologyOperation;  TopologyOperation ();  ;  ~TopologyOperation () override;  ; void start () override;  ; void execution () override;  This function is called each time the mouse is clicked. More...;  ; void end () override;  ; void endOperation () override;  This function is called after each mouse click. More...;  ; void setTopologicalOperation (int m);  ; void setScale (double s);  ; void setVolumicMesh (bool v);  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual std::string defaultPerformerType ();  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; virtual void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p);  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Public Slots; void setEnableBox (int i);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Static Public Member Functions inherited from sofa::gui::common::TopologyOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Attribute details. ◆ advancedOptions. QGroupBox* sofa::gui::qt::QTopologyOperation::advancedOptions. protected . ◆ meshType1. QRadioButton* sofa::gui::qt::QTopologyOperation::meshType1. protected . ◆ meshType2. QRadioButton* sofa::gui::qt::QTopologyOperation::meshType2. protected . ◆ operationChoice. QComboBox* sofa::gui::qt::QTopologyOperation:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QTransformationWidget Member List . This is the complete list of members for sofa::gui::qt::QTransformationWidget, including all inherited members. applyTransformation(simulation::Node *node)sofa::gui::qt::QTransformationWidget; changeValue()sofa::gui::qt::QTransformationWidgetinlineslot; getNumWidgets() constsofa::gui::qt::QTransformationWidgetinline; isDefaultValues() constsofa::gui::qt::QTransformationWidget; numWidgets_sofa::gui::qt::QTransformationWidgetprotected; QTransformationWidget(QWidget *parent, QString name)sofa::gui::qt::QTransformationWidget; rotationsofa::gui::qt::QTransformationWidgetprotected; scalesofa::gui::qt::QTransformationWidgetprotected; setDefaultValues()sofa::gui::qt::QTransformationWidget; TransformationDirty(bool)sofa::gui::qt::QTransformationWidgetsignal; translationsofa::gui::qt::QTransformationWidgetprotected. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_transformation_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_transformation_widget-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QVisitorControlPanel Member List . This is the complete list of members for sofa::gui::qt::QVisitorControlPanel, including all inherited members. activateTraceStateVectors(bool)sofa::gui::qt::QVisitorControlPanelslot; changeFirstIndex(int)sofa::gui::qt::QVisitorControlPanel; changeFirstIndex()sofa::gui::qt::QVisitorControlPanelslot; changeRange(int)sofa::gui::qt::QVisitorControlPanel; changeRange()sofa::gui::qt::QVisitorControlPanelslot; clearGraph()sofa::gui::qt::QVisitorControlPanelsignal; filterResults()sofa::gui::qt::QVisitorControlPanelslot; focusOn(QString)sofa::gui::qt::QVisitorControlPanelsignal; QVisitorControlPanel(QWidget *parent)sofa::gui::qt::QVisitorControlPanel; spinIndexsofa::gui::qt::QVisitorControlPanelprotected; spinRangesofa::gui::qt::QVisitorControlPanelprotected; textFiltersofa::gui::qt::QVisitorControlPanelprotected. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_visitor_control_panel-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_visitor_control_panel-members.html
Usability,clear,clearGraph,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QVisitorControlPanel Member List . This is the complete list of members for sofa::gui::qt::QVisitorControlPanel, including all inherited members. activateTraceStateVectors(bool)sofa::gui::qt::QVisitorControlPanelslot; changeFirstIndex(int)sofa::gui::qt::QVisitorControlPanel; changeFirstIndex()sofa::gui::qt::QVisitorControlPanelslot; changeRange(int)sofa::gui::qt::QVisitorControlPanel; changeRange()sofa::gui::qt::QVisitorControlPanelslot; clearGraph()sofa::gui::qt::QVisitorControlPanelsignal; filterResults()sofa::gui::qt::QVisitorControlPanelslot; focusOn(QString)sofa::gui::qt::QVisitorControlPanelsignal; QVisitorControlPanel(QWidget *parent)sofa::gui::qt::QVisitorControlPanel; spinIndexsofa::gui::qt::QVisitorControlPanelprotected; spinRangesofa::gui::qt::QVisitorControlPanelprotected; textFiltersofa::gui::qt::QVisitorControlPanelprotected. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_visitor_control_panel-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_visitor_control_panel-members.html
Usability,clear,clearGraph,﻿. SOFA API: sofa::gui::qt::QVisitorControlPanel Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Signals |; Public Slots |; List of all members . sofa::gui::qt::QVisitorControlPanel Class Reference . #include <QVisitorControlPanel.h>. Inheritance diagram for sofa::gui::qt::QVisitorControlPanel:. [legend]. Protected Attributes; QLineEdit * textFilter;  ; WDoubleLineEdit * spinIndex;  ; WDoubleLineEdit * spinRange;  . Public Member Functions;  QVisitorControlPanel (QWidget *parent);  ; void changeFirstIndex (int);  ; void changeRange (int);  . Signals; void focusOn (QString);  ; void clearGraph ();  . Public Slots; void activateTraceStateVectors (bool);  ; void changeFirstIndex ();  ; void changeRange ();  ; void filterResults ();  . Attribute details. ◆ spinIndex. WDoubleLineEdit* sofa::gui::qt::QVisitorControlPanel::spinIndex. protected . ◆ spinRange. WDoubleLineEdit* sofa::gui::qt::QVisitorControlPanel::spinRange. protected . ◆ textFilter. QLineEdit* sofa::gui::qt::QVisitorControlPanel::textFilter. protected . Constructor details. ◆ QVisitorControlPanel(). sofa::gui::qt::QVisitorControlPanel::QVisitorControlPanel ; (; QWidget * ; parent). Function details. ◆ activateTraceStateVectors. void sofa::gui::qt::QVisitorControlPanel::activateTraceStateVectors ; (; bool ; active). slot . ◆ changeFirstIndex [1/2]. void sofa::gui::qt::QVisitorControlPanel::changeFirstIndex ; (; ). slot . ◆ changeFirstIndex() [2/2]. void sofa::gui::qt::QVisitorControlPanel::changeFirstIndex ; (; int ; idx). ◆ changeRange [1/2]. void sofa::gui::qt::QVisitorControlPanel::changeRange ; (; ). slot . ◆ changeRange() [2/2]. void sofa::gui::qt::QVisitorControlPanel::changeRange ; (; int ; range). ◆ clearGraph. void sofa::gui::qt::QVisitorControlPanel::clearGraph ; (; ). signal . ◆ filterResults. void sofa::gui::qt::QVisitorControlPanel::filterResults ; (; ). slot . ◆ focusOn. void sofa::gui::qt::QVisitorContr,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_visitor_control_panel.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_visitor_control_panel.html
Deployability,update,updateDataValue,"dataValueString)sofa::gui::qt::DataWidgetsignal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >inline; getData() constsofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >inline; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::DataWidget; MyTData typedefsofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >; numColumnWidget()sofa::gui::qt::DataWidgetinlinevirtual; RadioDataWidget(QWidget *parent, const char *name, core::objectmodel::Data< sofa::helper::OptionsGroup > *m_data)sofa::gui::qt::RadioDataWidgetinline; readFromData()sofa::gui::qt::RadioDataWidgetprotectedvirtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >; sofa::gui::qt::DataWidget::setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)sofa::gui::qt::RadioDataWidgetvirtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setWidgetDirty(bool b=true)sofa::gui::qt::DataWidgetslot; sizeWidget()sofa::gui::qt::DataWidgetinlinevirtual; Tdatasofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >protected; TDataWidget(QWidget *parent, const char *name, MyTData *d)sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >inline; updateDataValue()sofa::gui::qt::DataWidgetslot; updateVisibility()sofa::gui::qt::DataWidget; updateWidgetValue()sofa::gui::qt::DataWidgetslot; WidgetDirty(bool)sofa::gui::qt::DataWidgetsignal; writeToData()sofa::gui::qt::RadioDataWidgetprotectedvirtual; ~DataWidget() overridesofa::gui::qt::DataWidget.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget-members.html
Modifiability,inherit,inherited,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::RadioDataWidget Member List . This is the complete list of members for sofa::gui::qt::RadioDataWidget, including all inherited members. baseDatasofa::gui::qt::DataWidgetprotected; buttonListsofa::gui::qt::RadioDataWidgetprotected; buttonModesofa::gui::qt::RadioDataWidgetprotected; comboListsofa::gui::qt::RadioDataWidgetprotected; countersofa::gui::qt::DataWidgetprotected; create(RealObject *, CreatorArgument &arg)sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >inlinestatic; sofa::gui::qt::DataWidget::create(T *, const CreatorArgument &arg)sofa::gui::qt::DataWidgetinlinestatic; CreateDataWidget(const DataWidget::CreatorArgument &dwarg)sofa::gui::qt::DataWidgetstatic; createWidgets()sofa::gui::qt::RadioDataWidgetvirtual; DataOwnerDirty(bool)sofa::gui::qt::DataWidgetsignal; dataValueChanged(QString dataValueString)sofa::gui::qt::DataWidgetsignal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >inline; getData() constsofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >inline; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::DataWidget; MyTData typedefsofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >; numColumnWidget()sofa::gui::qt::DataWidgetinlinevirtual; RadioDataWidget(QWidget *parent, const char *name, core::objectmodel::Data< sofa::helper::OptionsGroup > *m_data)sofa::gui::qt::RadioDataWidgetinline; readFromData()sofa::gui::qt::RadioDataWidgetprotectedvirtual; setData(MyTData *d)sofa::gui::qt::TDataWidge",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget-members.html
Deployability,update,updateVisibility,"d perform the signal / slots connections. More...;  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< sofa::helper::OptionsGroup > * getData ();  ; const sofa::core::objectmodel::Data< sofa::helper::OptionsGroup > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  . Protected Member Functions; virtual void readFromData ();  Implements how update the widgets knowing the data value. More...;  ; virtual void writeToData ();  Implements how to update the data, knowing the widget value. More...;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArg",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html
Modifiability,inherit,inherited,"﻿. SOFA API: sofa::gui::qt::RadioDataWidget Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::qt::RadioDataWidget Class Reference . #include <SimpleDataWidget.h>; OptionsGroup support. ; More... Inheritance diagram for sofa::gui::qt::RadioDataWidget:. [legend]; Detailed Description; OptionsGroup support. . Protected Attributes; QButtonGroup * buttonList;  ; QComboBox * comboList;  ; bool buttonMode;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  RadioDataWidget (QWidget *parent, const char *name, core::objectmodel::Data< sofa::helper::OptionsGroup > *m_data);  ; virtual bool createWidgets ();  In this method we create the widgets and perform the signal / slots connections. More...;  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< sofa::helper::OptionsGroup > * getData ();  ; const sofa::core::objectmodel::Data< sofa::helper::OptionsGroup > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual voi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html
Performance,perform,perform,"s simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::qt::RadioDataWidget Class Reference . #include <SimpleDataWidget.h>; OptionsGroup support. ; More... Inheritance diagram for sofa::gui::qt::RadioDataWidget:. [legend]; Detailed Description; OptionsGroup support. . Protected Attributes; QButtonGroup * buttonList;  ; QComboBox * comboList;  ; bool buttonMode;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  RadioDataWidget (QWidget *parent, const char *name, core::objectmodel::Data< sofa::helper::OptionsGroup > *m_data);  ; virtual bool createWidgets ();  In this method we create the widgets and perform the signal / slots connections. More...;  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< sofa::helper::OptionsGroup > * getData ();  ; const sofa::core::objectmodel::Data< sofa::helper::OptionsGroup > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html
Security,access,accessor,"aseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  RadioDataWidget (QWidget *parent, const char *name, core::objectmodel::Data< sofa::helper::OptionsGroup > *m_data);  ; virtual bool createWidgets ();  In this method we create the widgets and perform the signal / slots connections. More...;  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< sofa::helper::OptionsGroup > * getData ();  ; const sofa::core::objectmodel::Data< sofa::helper::OptionsGroup > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  . Protected Member Functions; virtual void readFromData ();  Implements how update the widgets knowing the data value. More...;  ; virtual void writeToData ();  Implements how to update the data, knowing the widget ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html
